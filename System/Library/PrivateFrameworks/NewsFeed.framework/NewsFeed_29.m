_OWORD *sub_1C0E933A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  long long v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  long long v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  _OWORD *v86;
  long long v87;
  uint64_t v88;
  _OWORD *v89;
  _OWORD *v90;
  long long v91;
  uint64_t v92;
  _OWORD *v93;
  _OWORD *v94;
  long long v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  void (*v130)(char *, char *, uint64_t);
  _OWORD *v131;
  void *v132;
  void *v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v4 = a2;
  if (a1 != a2)
  {
    sub_1C0E8C914((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      v22 = v4[1];
      *a1 = *v4;
      a1[1] = v22;
      v23 = type metadata accessor for FormatCustomItem.Resolved();
      v24 = *(int *)(v23 + 24);
      v25 = (char *)a1 + v24;
      v26 = (char *)v4 + v24;
      v27 = type metadata accessor for FormatCustomItem.Action();
      v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        sub_1C0086AE0(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v45 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v25, v26, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      *(void *)((char *)a1 + *(int *)(v23 + 28)) = *(void *)((char *)v4 + *(int *)(v23 + 28));
      goto LABEL_77;
    }
    if (EnumCaseMultiPayload != 6)
    {
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, v4, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_78;
      }
      v135 = a3;
      *a1 = *v4;
      v131 = v4;
      v134 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      v8 = v134[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)v4 + v8;
      *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)v4 + v8);
      v11 = (int *)type metadata accessor for FormatWebEmbed();
      v12 = v11[5];
      v13 = &v9[v12];
      v14 = &v10[v12];
      v15 = sub_1C1515FDC();
      v16 = *(void *)(v15 - 8);
      v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v17(v13, v14, v15);
      v18 = v11[6];
      v19 = &v9[v18];
      v20 = &v10[v18];
      v130 = v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v10[v18], 1, v15))
      {
        sub_1C0086AE0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v17(v19, v20, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      }
      v38 = v15;
      v4 = v131;
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
      *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
      *(void *)&v9[v11[10]] = *(void *)&v10[v11[10]];
      *(void *)&v9[v11[11]] = *(void *)&v10[v11[11]];
      *(void *)&v9[v11[12]] = *(void *)&v10[v11[12]];
      *(void *)((char *)a1 + v134[6]) = *(void *)((char *)v131 + v134[6]);
      *(void *)((char *)a1 + v134[7]) = *(void *)((char *)v131 + v134[7]);
      v39 = v134[8];
      v40 = (_OWORD *)((char *)a1 + v39);
      v41 = (_OWORD *)((char *)v131 + v39);
      v42 = type metadata accessor for WebEmbedDataVisualization();
      v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        sub_1C0086AE0(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v40 = *v41;
          v46 = type metadata accessor for GenericDataVisualization();
          v130((char *)v40 + *(int *)(v46 + 20), (char *)v41 + *(int *)(v46 + 20), v38);
          *(void *)((char *)v40 + *(int *)(v46 + 24)) = *(void *)((char *)v41 + *(int *)(v46 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v40, v41, *(void *)(v43 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      a3 = v135;
      v65 = v134[9];
      v66 = (char *)a1 + v65;
      v67 = (char *)v131 + v65;
      sub_1BFEC84E0();
      v69 = v68;
      v70 = *(void *)(v68 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v68))
      {
        sub_1BFEC8548(0);
        memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v66, v67, v69);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v66, 0, 1, v69);
      }
      goto LABEL_77;
    }
    *(void *)a1 = *(void *)v4;
    v30 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    v31 = (void *)((char *)a1 + v30);
    v32 = (void *)((char *)v4 + v30);
    type metadata accessor for PuzzleStatisticCategory(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v51 = type metadata accessor for PuzzleStatisticValue(0);
        v52 = swift_getEnumCaseMultiPayload();
        v136 = v51;
        if (v52 == 5)
        {
          v96 = type metadata accessor for PuzzleStreak();
          v97 = *(void *)(v96 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v97 + 48))(v32, 1, v96))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v31, v32, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            v101 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 32))(v31, v32, v101);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v31, 0, 1, v96);
          }
          v51 = v136;
        }
        else
        {
          if (v52 != 4)
          {
            memcpy(v31, v32, *(void *)(*(void *)(v51 - 8) + 64));
            goto LABEL_55;
          }
          v53 = type metadata accessor for PuzzleStreak();
          v54 = *(void *)(v53 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v54 + 48))(v32, 1, v53))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v31, v32, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            v100 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v100 - 8) + 32))(v31, v32, v100);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v31, 0, 1, v53);
          }
          v51 = v136;
        }
        swift_storeEnumTagMultiPayload();
LABEL_55:
        v102 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        v103 = *(int *)(v102 + 20);
        v104 = (char *)v31 + v103;
        v105 = (char *)v32 + v103;
        v106 = swift_getEnumCaseMultiPayload();
        if (v106 == 5)
        {
          v133 = v31;
          v111 = a3;
          v112 = type metadata accessor for PuzzleStreak();
          v113 = *(void *)(v112 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v105, 1, v112))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v104, v105, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            v116 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v104, v105, v116);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v104, 0, 1, v112);
          }
          a3 = v111;
          v51 = v136;
        }
        else
        {
          if (v106 != 4)
          {
            memcpy(v104, v105, *(void *)(*(void *)(v51 - 8) + 64));
            goto LABEL_67;
          }
          v133 = v31;
          v107 = a3;
          v108 = type metadata accessor for PuzzleStreak();
          v109 = *(void *)(v108 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v105, 1, v108))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v104, v105, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            v115 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v104, v105, v115);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v104, 0, 1, v108);
          }
          a3 = v107;
          v51 = v136;
        }
        swift_storeEnumTagMultiPayload();
        v31 = v133;
LABEL_67:
        v117 = *(int *)(v102 + 24);
        v118 = (char *)v31 + v117;
        v119 = (char *)v32 + v117;
        v120 = swift_getEnumCaseMultiPayload();
        if (v120 == 5)
        {
          v121 = type metadata accessor for PuzzleStreak();
          v122 = *(void *)(v121 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v119, 1, v121)) {
            goto LABEL_70;
          }
        }
        else
        {
          if (v120 != 4)
          {
            memcpy(v118, v119, *(void *)(*(void *)(v51 - 8) + 64));
LABEL_76:
            swift_storeEnumTagMultiPayload();
LABEL_77:
            swift_storeEnumTagMultiPayload();
            break;
          }
          v121 = type metadata accessor for PuzzleStreak();
          v122 = *(void *)(v121 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v119, 1, v121))
          {
LABEL_70:
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v118, v119, *(void *)(*(void *)(v123 - 8) + 64));
            goto LABEL_75;
          }
        }
        v124 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v118, v119, v124);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v118, 0, 1, v121);
        goto LABEL_75;
      case 2u:
        v47 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        v48 = *((void *)v47 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v48 + 48))(v32, 1, v47))
        {
          sub_1C0086AE0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          v50 = *(void *)(*(void *)(v49 - 8) + 64);
          goto LABEL_44;
        }
        v72 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 32))(v31, v32, v72);
        v73 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        *(_OWORD *)((char *)v31 + v73[5]) = *(_OWORD *)((char *)v32 + v73[5]);
        v74 = v73[6];
        v75 = (_OWORD *)((char *)v31 + v74);
        v76 = (_OWORD *)((char *)v32 + v74);
        v77 = v76[1];
        *v75 = *v76;
        v75[1] = v77;
        *(void *)((char *)v31 + v73[7]) = *(void *)((char *)v32 + v73[7]);
        *(void *)((char *)v31 + v73[8]) = *(void *)((char *)v32 + v73[8]);
        *(void *)((char *)v31 + v47[5]) = *(void *)((char *)v32 + v47[5]);
        *(void *)((char *)v31 + v47[6]) = *(void *)((char *)v32 + v47[6]);
        *(_OWORD *)((char *)v31 + v47[7]) = *(_OWORD *)((char *)v32 + v47[7]);
        (*(void (**)(void *, void, uint64_t, int *))(v48 + 56))(v31, 0, 1, v47);
        goto LABEL_76;
      case 3u:
        v137 = a3;
        v56 = v32[1];
        *v31 = *v32;
        v31[1] = v56;
        *((unsigned char *)v31 + 16) = *((unsigned char *)v32 + 16);
        v57 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        v58 = v57[6];
        v132 = v31;
        v59 = (char *)v31 + v58;
        v60 = (char *)v32 + v58;
        v61 = type metadata accessor for PuzzleStreak();
        v62 = *(void *)(v61 - 8);
        v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
        if (v63(v60, 1, v61))
        {
          sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          v78 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v59, v60, v78);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        }
        v79 = v57[7];
        v80 = (char *)v132 + v79;
        v81 = (char *)v32 + v79;
        if (v63((char *)v32 + v79, 1, v61))
        {
          sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          v83 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v80, v81, v83);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v80, 0, 1, v61);
        }
        a3 = v137;
        v84 = v57[8];
        v85 = (_OWORD *)((char *)v132 + v84);
        v86 = (_OWORD *)((char *)v32 + v84);
        v87 = v86[1];
        *v85 = *v86;
        v85[1] = v87;
        *(_OWORD *)((char *)v85 + 25) = *(_OWORD *)((char *)v86 + 25);
        v88 = v57[9];
        v89 = (_OWORD *)((char *)v132 + v88);
        v90 = (_OWORD *)((char *)v32 + v88);
        *(_OWORD *)((char *)v89 + 25) = *(_OWORD *)((char *)v90 + 25);
        v91 = v90[1];
        *v89 = *v90;
        v89[1] = v91;
        v92 = v57[10];
        v93 = (_OWORD *)((char *)v132 + v92);
        v94 = (_OWORD *)((char *)v32 + v92);
        v95 = v94[1];
        *v93 = *v94;
        v93[1] = v95;
        *(_OWORD *)((char *)v93 + 25) = *(_OWORD *)((char *)v94 + 25);
        goto LABEL_76;
      default:
        v33 = type metadata accessor for PuzzleStatisticValue(0);
        v34 = swift_getEnumCaseMultiPayload();
        if (v34 == 5)
        {
          v35 = type metadata accessor for PuzzleStreak();
          v36 = *(void *)(v35 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35)) {
            goto LABEL_13;
          }
        }
        else
        {
          if (v34 != 4)
          {
            v50 = *(void *)(*(void *)(v33 - 8) + 64);
LABEL_44:
            memcpy(v31, v32, v50);
            goto LABEL_76;
          }
          v35 = type metadata accessor for PuzzleStreak();
          v36 = *(void *)(v35 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35))
          {
LABEL_13:
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
            goto LABEL_75;
          }
        }
        v99 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v99 - 8) + 32))(v31, v32, v99);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v35);
LABEL_75:
        swift_storeEnumTagMultiPayload();
        goto LABEL_76;
    }
  }
LABEL_78:
  v125 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  v126 = v125[5];
  v127 = (uint64_t)a1 + v126;
  v128 = (char *)v4 + v126;
  if (!*(void *)((char *)a1 + v126))
  {
LABEL_82:
    *(_OWORD *)v127 = *(_OWORD *)v128;
    goto LABEL_83;
  }
  if (!*(void *)v128)
  {
    sub_1C01B4324(v127);
    goto LABEL_82;
  }
  *(void *)v127 = *(void *)v128;
  swift_bridgeObjectRelease();
  *(void *)(v127 + 8) = *((void *)v128 + 1);
  swift_bridgeObjectRelease();
LABEL_83:
  *(void *)((char *)a1 + v125[6]) = *(void *)((char *)v4 + v125[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v125[7]) = *(void *)((char *)v4 + v125[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)v4 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C0E94A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E94A90);
}

uint64_t sub_1C0E94A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSlotItemResolution();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C0E94AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E94B10);
}

uint64_t sub_1C0E94B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSlotItemResolution();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C0E94B80()
{
  uint64_t result = type metadata accessor for FormatContentSlotItemResolution();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FeedNativeAdInsertBlueprintModifier.init(nativeAdManager:nativeAdInsertion:feedContext:policyValidator:layoutCollectionProvider:subscriptionList:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_1BFC773DC(a1, a7);
  inserted = (int *)type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  sub_1C0E94D58(a2, a7 + inserted[23], (uint64_t (*)(void))type metadata accessor for FeedNativeAdInsertion);
  sub_1C0E94D58(a3, a7 + inserted[24], (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFC773DC(a4, a7 + inserted[25]);
  uint64_t result = sub_1BFC773DC(a5, a7 + inserted[26]);
  *(void *)(a7 + inserted[27]) = a6;
  return result;
}

uint64_t type metadata accessor for FeedNativeAdInsertBlueprintModifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C0E94D58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FeedNativeAdInsertBlueprintModifier.modify(blueprint:completion:)(uint64_t a1, void (*a2)(char *), void (*a3)(char *), void *a4)
{
  uint64_t v4 = a4;
  v173 = a3;
  v170 = a2;
  uint64_t v169 = a1;
  uint64_t v5 = a4[3];
  uint64_t v7 = a4[7];
  uint64_t v8 = a4[10];
  uint64_t v187 = a4[2];
  uint64_t v6 = v187;
  uint64_t v188 = v5;
  uint64_t v189 = v7;
  uint64_t v190 = v8;
  uint64_t v9 = v7;
  v167 = (void *)sub_1C151B8CC();
  uint64_t v166 = *(v167 - 1);
  MEMORY[0x1F4188790](v167);
  v165 = (char *)&v133 - v10;
  v162 = v4;
  uint64_t v11 = *--v4;
  uint64_t v155 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v142 = v13;
  v152 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151A31C();
  v140 = (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C151FD8C();
  uint64_t v139 = *((void *)v140 - 1);
  MEMORY[0x1F4188790](v140);
  uint64_t v143 = (uint64_t)&v133 - v15;
  uint64_t v157 = v14;
  uint64_t v153 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v16);
  v148 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = v17;
  MEMORY[0x1F4188790](v18);
  v151 = (char *)&v133 - v19;
  uint64_t v161 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v20);
  v160 = (char *)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = v6;
  uint64_t v188 = v5;
  uint64_t v172 = v9;
  uint64_t v189 = v9;
  uint64_t v190 = v8;
  uint64_t v22 = v8;
  uint64_t v174 = v8;
  uint64_t v23 = sub_1C151CC9C();
  uint64_t v171 = *(void *)(v23 - 8);
  uint64_t v24 = v171;
  MEMORY[0x1F4188790](v23);
  v150 = (char *)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = v25;
  MEMORY[0x1F4188790](v26);
  v28 = (char *)&v133 - v27;
  uint64_t v187 = v6;
  uint64_t v188 = v5;
  uint64_t v189 = v9;
  uint64_t v190 = v22;
  uint64_t v29 = sub_1C151AA8C();
  uint64_t v159 = sub_1C151FD8C();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  v31 = (char *)&v133 - v30;
  uint64_t v176 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v32);
  v144 = (char *)&v133 - (((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = v33;
  MEMORY[0x1F4188790](v34);
  v163 = (char *)&v133 - v35;
  uint64_t v168 = swift_allocBox();
  uint64_t v37 = v36;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v38(v36, v169, v23);
  uint64_t v147 = v24 + 16;
  v146 = (void (*)(char *, uint64_t, uint64_t))v38;
  v38((uint64_t)v28, v37, v23);
  uint64_t v164 = v6;
  uint64_t v177 = v6;
  uint64_t v178 = v5;
  uint64_t v156 = v5;
  uint64_t v40 = v4[5];
  uint64_t v39 = v4[6];
  uint64_t v179 = v40;
  uint64_t v180 = v39;
  uint64_t v154 = v39;
  uint64_t v41 = v4[7];
  uint64_t v181 = v41;
  uint64_t v182 = v172;
  uint64_t v43 = v4[9];
  uint64_t v42 = v4[10];
  uint64_t v183 = v43;
  uint64_t v184 = v42;
  uint64_t v185 = v174;
  uint64_t v186 = v175;
  swift_getWitnessTable();
  sub_1C151E9BC();
  v44 = *(void (**)(char *, uint64_t))(v171 + 8);
  v45 = v28;
  uint64_t v46 = v176;
  uint64_t v145 = v23;
  v44(v45, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v31, 1, v29) == 1)
  {
    (*(void (**)(char *, uint64_t))(v158 + 8))(v31, v159);
    uint64_t v47 = v166;
    v48 = v165;
    v49 = v167;
    (*(void (**)(char *, void, void *))(v166 + 104))(v165, *MEMORY[0x1E4FAC9F8], v167);
    v170(v48);
    (*(void (**)(char *, void *))(v47 + 8))(v48, v49);
  }
  else
  {
    uint64_t v159 = v42;
    uint64_t v137 = v43;
    uint64_t v158 = v41;
    v50 = v170;
    uint64_t v51 = (uint64_t)v163;
    v136 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    uint64_t v135 = v46 + 32;
    v136(v163, v31, v29);
    v52 = v160;
    uint64_t v53 = v29;
    sub_1C151AA1C();
    uint64_t v54 = v164;
    char v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v164, v40);
    (*(void (**)(char *, uint64_t))(v161 + 8))(v52, v54);
    if (v55)
    {
      swift_getWitnessTable();
      uint64_t v161 = v29;
      if (sub_1C151F15C())
      {
        uint64_t v56 = v51;
        v57 = v165;
        if (qword_1EB87B058 != -1) {
          swift_once();
        }
        v58 = (void *)qword_1EB93C6F8;
        sub_1BFFDEB20();
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_1C1529AE0;
        id v60 = v58;
        uint64_t v61 = sub_1C151DBBC();
        uint64_t v63 = v62;
        *(void *)(v59 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v59 + 64) = sub_1BFE9C558();
        *(void *)(v59 + 32) = v61;
        *(void *)(v59 + 40) = v63;
        sub_1C151F38C();
        sub_1C15197BC();

        swift_bridgeObjectRelease();
        uint64_t v64 = v166;
        v65 = v167;
        (*(void (**)(char *, void, void *))(v166 + 104))(v57, *MEMORY[0x1E4FAC9F8], v167);
        v50(v57);
        (*(void (**)(char *, void *))(v64 + 8))(v57, v65);
        (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v56, v161);
      }
      else
      {
        uint64_t v77 = v174;
        uint64_t v78 = v143;
        uint64_t v134 = v40;
        uint64_t v79 = v172;
        uint64_t v80 = v137;
        sub_1C0E96194(v51, v54, v40, v143, v159, v174);
        uint64_t v81 = v153;
        uint64_t v82 = v157;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))(v78, 1, v157) == 1)
        {
          (*(void (**)(uint64_t, uint64_t (*)(char *, uint64_t, uint64_t)))(v139 + 8))(v78, v140);
          uint64_t v83 = v166;
          v84 = v165;
          v85 = v167;
          (*(void (**)(char *, void, void *))(v166 + 104))(v165, *MEMORY[0x1E4FAC9F8], v167);
          v170(v84);
          (*(void (**)(char *, void *))(v83 + 8))(v84, v85);
          (*(void (**)(char *, uint64_t))(v176 + 8))(v163, v161);
        }
        else
        {
          uint64_t v87 = v81;
          v140 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 32);
          v160 = (char *)(v81 + 32);
          v88 = v151;
          uint64_t v89 = v140(v151, v78, v82);
          MEMORY[0x1F4188790](v89);
          *(&v133 - 12) = v164;
          *(&v133 - 11) = v90;
          uint64_t v91 = v154;
          *(&v133 - 10) = v134;
          *(&v133 - 9) = v91;
          *(&v133 - 8) = v158;
          *(&v133 - 7) = v79;
          uint64_t v92 = v159;
          *(&v133 - 6) = v80;
          *(&v133 - 5) = v92;
          uint64_t v93 = v82;
          uint64_t v94 = v175;
          *(&v133 - 4) = v77;
          *(&v133 - 3) = v94;
          uint64_t v95 = v169;
          v131 = v88;
          uint64_t v132 = v169;
          sub_1C151DC0C();
          v165 = (char *)sub_1C151932C();
          uint64_t v96 = v155;
          v97 = *(void **)(v155 + 16);
          uint64_t v166 = v155 + 16;
          v167 = v97;
          ((void (*)(char *, uint64_t, void *))v97)(v152, v94, v162);
          (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v148, v88, v93);
          uint64_t v98 = v176;
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v144, v163, v161);
          v146(v150, v95, v145);
          uint64_t v99 = *(unsigned __int8 *)(v96 + 80);
          uint64_t v143 = ((v99 + 88) & ~v99) + v142;
          uint64_t v100 = (v99 + 88) & ~v99;
          uint64_t v133 = v100;
          unint64_t v101 = (v143 + *(unsigned __int8 *)(v87 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
          uint64_t v102 = v79;
          unint64_t v103 = (v141 + *(unsigned __int8 *)(v98 + 80) + v101) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
          unint64_t v104 = ((unint64_t)v138 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v105 = (v104 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v106 = v171;
          uint64_t v139 = *(unsigned __int8 *)(v171 + 80);
          uint64_t v141 = v139 + 16;
          uint64_t v107 = (v139 + 16 + v105) & ~v139;
          uint64_t v142 = v99 | v139 | 7;
          v108 = (char *)swift_allocObject();
          uint64_t v109 = v156;
          *((void *)v108 + 2) = v164;
          *((void *)v108 + 3) = v109;
          *((void *)v108 + 4) = v134;
          *((void *)v108 + 5) = v91;
          *((void *)v108 + 6) = v158;
          *((void *)v108 + 7) = v102;
          uint64_t v110 = v159;
          *((void *)v108 + 8) = v137;
          *((void *)v108 + 9) = v110;
          *((void *)v108 + 10) = v174;
          v111 = *(void (**)(char *, char *, void *))(v155 + 32);
          v155 += 32;
          v138 = v111;
          v111(&v108[v100], v152, v162);
          v140(&v108[v101], (uint64_t)v148, v157);
          v136(&v108[v103], v144, v161);
          *(void *)&v108[v104] = v168;
          v112 = (void (**)(char *))&v108[v105];
          v113 = v173;
          *v112 = v170;
          v112[1] = v113;
          v114 = &v108[v107];
          v115 = *(char **)(v106 + 32);
          uint64_t v171 = v106 + 32;
          v160 = v115;
          v116 = v150;
          uint64_t v117 = v145;
          ((void (*)(char *, char *, uint64_t))v115)(v114, v150, v145);
          swift_retain();
          swift_retain();
          v118 = (void *)sub_1C1518E7C();
          sub_1C1518FFC();
          swift_release();
          swift_release();

          v119 = v152;
          v120 = v162;
          ((void (*)(char *, uint64_t, void *))v167)(v152, v175, v162);
          v146(v116, v169, v117);
          unint64_t v121 = (v143 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v122 = (v141 + v121) & ~v139;
          v123 = (void *)swift_allocObject();
          uint64_t v124 = v156;
          v123[2] = v164;
          v123[3] = v124;
          uint64_t v125 = v154;
          v123[4] = v134;
          v123[5] = v125;
          uint64_t v126 = v172;
          v123[6] = v158;
          v123[7] = v126;
          uint64_t v127 = v159;
          v123[8] = v137;
          v123[9] = v127;
          v128 = (char *)v123 + v133;
          v123[10] = v174;
          v138(v128, v119, v120);
          v129 = (void (**)(char *))((char *)v123 + v121);
          *v129 = v170;
          v129[1] = v113;
          ((void (*)(char *, char *, uint64_t))v160)((char *)v123 + v122, v116, v117);
          swift_retain();
          v130 = (void *)sub_1C1518E7C();
          sub_1C151903C();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v176 + 8))(v163, v161);
          (*(void (**)(char *, uint64_t))(v153 + 8))(v151, v157);
        }
      }
    }
    else
    {
      uint64_t v66 = v51;
      v67 = v50;
      v68 = v165;
      if (qword_1EB87B058 != -1) {
        swift_once();
      }
      v69 = (void *)qword_1EB93C6F8;
      sub_1BFFDEB20();
      uint64_t v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = xmmword_1C1529AE0;
      id v71 = v69;
      uint64_t v72 = sub_1C151DBBC();
      uint64_t v74 = v73;
      *(void *)(v70 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v70 + 64) = sub_1BFE9C558();
      *(void *)(v70 + 32) = v72;
      *(void *)(v70 + 40) = v74;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      uint64_t v75 = v166;
      v76 = v167;
      (*(void (**)(char *, void, void *))(v166 + 104))(v68, *MEMORY[0x1E4FAC9F8], v167);
      v67(v68);
      (*(void (**)(char *, void *))(v75 + 8))(v68, v76);
      (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v66, v53);
    }
  }
  return swift_release();
}

uint64_t sub_1C0E96048(uint64_t a1, uint64_t a2)
{
  sub_1C151AA8C();
  uint64_t v2 = sub_1C151AA2C();
  uint64_t v4 = v3;
  uint64_t v5 = *(int *)(type metadata accessor for FeedNativeAdInsertBlueprintModifier() + 92);
  uint64_t v6 = (void *)(a2 + *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20) + v5);
  if (v2 == *v6 && v4 == v6[1]) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0E96154(uint64_t a1)
{
  return sub_1C0E96048(a1, *(void *)(v1 + 88)) & 1;
}

uint64_t sub_1C0E96194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = v12;
  v20[1] = v13;
  v20[2] = v14;
  v20[3] = a6;
  sub_1C151AA8C();
  sub_1C151AA1C();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 24))(v20, a2, a3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  if (LOBYTE(v20[0]))
  {
    if (LOBYTE(v20[0]) == 1)
    {
      swift_getWitnessTable();
      uint64_t v15 = sub_1C151F11C();
      BOOL v16 = __OFSUB__(v15, 1);
      uint64_t result = v15 - 1;
      if (v16)
      {
        __break(1u);
      }
      else
      {
        sub_1C151AAAC();
        uint64_t v18 = sub_1C151A31C();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a4, 0, 1, v18);
      }
    }
    else
    {
      uint64_t v19 = sub_1C151A31C();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a4, 1, 1, v19);
    }
  }
  else
  {
    swift_getWitnessTable();
    return sub_1C151F12C();
  }
  return result;
}

uint64_t sub_1C0E963CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a3 - 8);
  uint64_t v76 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v74 = v5;
  uint64_t v75 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151BCEC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0E99DE8(0, &qword_1EB8711A8, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v64 - v11;
  uint64_t v13 = sub_1C151677C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v77 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v4[4];
  uint64_t v17 = v4[8];
  uint64_t v18 = v4[11];
  uint64_t v83 = v4[3];
  uint64_t v84 = v83;
  uint64_t v81 = v18;
  uint64_t v82 = v16;
  uint64_t v85 = v16;
  *(void *)&long long v86 = v17;
  uint64_t v80 = v17;
  *((void *)&v86 + 1) = v18;
  sub_1C151CC9C();
  sub_1C151CC8C();
  uint64_t v19 = v14;
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v78 = v13;
  if (v20(v12, 1, v13) == 1)
  {
    sub_1C0E9B3D0((uint64_t)v12, (uint64_t)&qword_1EB8711A8, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0E99DE8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v77, v12, v78);
    uint64_t v21 = v79;
    __swift_project_boxed_opaque_existential_1((void *)(v79 + *(int *)(a3 + 104)), *(void *)(v79 + *(int *)(a3 + 104) + 24));
    sub_1C151C64C();
    uint64_t v22 = (void *)sub_1C151BCBC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v23 = v21;
    if (v22)
    {
      objc_msgSend(v22, sel_frame);
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      uint64_t v29 = v28;
      uint64_t v31 = v30;

      MEMORY[0x1F4188790](v32);
      uint64_t v33 = v82;
      *(&v64 - 14) = v83;
      *(&v64 - 13) = v33;
      uint64_t v73 = *(void *)(a3 + 32);
      uint64_t v35 = *(void *)(a3 + 48);
      uint64_t v72 = *(void *)(a3 + 40);
      uint64_t v34 = v72;
      *(&v64 - 12) = v73;
      *(&v64 - 11) = v34;
      uint64_t v71 = v19;
      uint64_t v69 = v35;
      uint64_t v36 = v80;
      *(&v64 - 10) = v35;
      *(&v64 - 9) = v36;
      uint64_t v37 = *(void *)(a3 + 64);
      uint64_t v38 = *(void *)(a3 + 72);
      *(&v64 - 8) = v37;
      *(&v64 - 7) = v38;
      uint64_t v66 = v37;
      uint64_t v68 = v38;
      uint64_t v39 = v81;
      *(&v64 - 6) = v81;
      *(&v64 - 5) = v23;
      *(&v64 - 4) = v25;
      *(&v64 - 3) = v27;
      *(&v64 - 2) = v29;
      *(&v64 - 1) = v31;
      sub_1C0E9B488();
      uint64_t v64 = sub_1C151932C();
      uint64_t v40 = v76;
      uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
      uint64_t v41 = v75;
      v70(v75, v23, a3);
      uint64_t v42 = *(unsigned __int8 *)(v40 + 80);
      v74 += (v42 + 88) & ~v42;
      uint64_t v43 = (v42 + 88) & ~v42;
      uint64_t v65 = v43;
      uint64_t v67 = v42 | 7;
      v44 = (char *)swift_allocObject();
      uint64_t v45 = v82;
      *((void *)v44 + 2) = v83;
      *((void *)v44 + 3) = v45;
      uint64_t v46 = v72;
      *((void *)v44 + 4) = v73;
      *((void *)v44 + 5) = v46;
      *((void *)v44 + 6) = v35;
      uint64_t v47 = v80;
      *((void *)v44 + 7) = v80;
      *((void *)v44 + 8) = v37;
      *((void *)v44 + 9) = v38;
      *((void *)v44 + 10) = v39;
      v48 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
      v48(&v44[v43], v41, a3);
      v49 = (void *)sub_1C1518E7C();
      sub_1C151DC0C();
      sub_1C1518FFC();
      swift_release();
      swift_release();

      v70(v41, v79, a3);
      v50 = (void *)swift_allocObject();
      uint64_t v51 = v82;
      v50[2] = v83;
      v50[3] = v51;
      uint64_t v52 = v72;
      v50[4] = v73;
      v50[5] = v52;
      v50[6] = v69;
      v50[7] = v47;
      uint64_t v53 = v68;
      v50[8] = v66;
      v50[9] = v53;
      uint64_t v54 = (char *)v50 + v65;
      v50[10] = v81;
      v48(v54, v41, a3);
      char v55 = (void *)sub_1C1518E7C();
      uint64_t v56 = sub_1C15190DC();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v71 + 8))(v77, v78);
      return v56;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v77, v78);
  }
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  id v57 = (id)qword_1EB93C6F8;
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1C1529AE0;
  uint64_t v59 = sub_1C151DBBC();
  uint64_t v61 = v60;
  *(void *)(v58 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v58 + 64) = sub_1BFE9C558();
  *(void *)(v58 + 32) = v59;
  *(void *)(v58 + 40) = v61;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v62 = *(void *)(a3 + 48);
  uint64_t v84 = v83;
  uint64_t v85 = v82;
  long long v86 = *(_OWORD *)(a3 + 32);
  uint64_t v87 = v62;
  uint64_t v88 = v80;
  long long v89 = *(_OWORD *)(a3 + 64);
  uint64_t v90 = v81;
  type metadata accessor for FeedNativeAdInsertBlueprintModifier.Errors();
  swift_getWitnessTable();
  swift_allocError();
  sub_1C0E99DE8(0, &qword_1EB871468, MEMORY[0x1E4F7B0E0], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151906C();
}

uint64_t sub_1C0E96C00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(void, void), uint64_t a16, uint64_t a17)
{
  uint64_t v124 = a8;
  uint64_t v125 = a7;
  uint64_t v126 = a6;
  uint64_t v134 = a4;
  uint64_t v130 = a3;
  uint64_t v127 = a2;
  uint64_t v129 = a1;
  uint64_t v101 = a16;
  unint64_t v104 = a15;
  uint64_t v137 = a13;
  uint64_t v122 = sub_1C151AC6C();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  v120 = (char *)v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = a9;
  uint64_t v144 = a10;
  uint64_t v145 = a14;
  uint64_t v146 = a17;
  uint64_t v136 = sub_1C151CC9C();
  uint64_t v119 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  v118 = (char *)v97 - v18;
  uint64_t v143 = a9;
  uint64_t v144 = a10;
  uint64_t v145 = a14;
  uint64_t v146 = a17;
  uint64_t v117 = sub_1C151B8CC();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  v115 = (char *)v97 - v19;
  uint64_t v114 = sub_1C151DC0C();
  uint64_t v135 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v133 = (char *)v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C151A31C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v109 = WitnessTable;
  uint64_t v107 = v23;
  uint64_t v24 = sub_1C151879C();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v106 = (char *)v97 - v25;
  uint64_t v110 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](v26);
  v108 = (char *)v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  unint64_t v103 = (char *)v97 - v29;
  MEMORY[0x1F4188790](v30);
  unint64_t v105 = (char *)v97 - v31;
  uint64_t v143 = a9;
  uint64_t v144 = a10;
  uint64_t v145 = a14;
  uint64_t v146 = a17;
  uint64_t v140 = sub_1C151AA8C();
  uint64_t v132 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  uint64_t v102 = (char *)v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  v131 = (char *)v97 - v34;
  uint64_t v100 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v99 = (char *)v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)v97 - v38;
  MEMORY[0x1F4188790](v40);
  v97[1] = (char *)v97 - v41;
  uint64_t v152 = v21;
  uint64_t v142 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v98 = (char *)v97 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  uint64_t v139 = (char *)v97 - v45;
  uint64_t v111 = swift_projectBox();
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  uint64_t v46 = (void *)qword_1EB93C6F8;
  sub_1BFFDEB20();
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C1529AE0;
  uint64_t v138 = a9;
  uint64_t v143 = a9;
  uint64_t v144 = a10;
  uint64_t v113 = a11;
  uint64_t v145 = a11;
  uint64_t v146 = a12;
  uint64_t v112 = a12;
  uint64_t v147 = v137;
  uint64_t v148 = a14;
  uint64_t v123 = a14;
  uint64_t v48 = v101;
  uint64_t v149 = v104;
  uint64_t v150 = v101;
  uint64_t v151 = a17;
  uint64_t inserted = type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  uint64_t v141 = a17;
  v50 = v127;
  id v51 = v46;
  uint64_t v52 = sub_1C151DBBC();
  uint64_t v54 = v53;
  *(void *)(v47 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v47 + 64) = sub_1BFE9C558();
  *(void *)(v47 + 32) = v52;
  *(void *)(v47 + 40) = v54;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  char v55 = (char *)v50 + *(int *)(inserted + 96);
  uint64_t v56 = v152;
  uint64_t v57 = v130;
  sub_1C151A30C();
  (*(void (**)(uint64_t, char *, char *, uint64_t, uint64_t))(v48 + 16))(v129, v55, v39, a10, v48);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v100 + 8);
  v58(v39, a10);
  sub_1C151A2FC();
  uint64_t v59 = v99;
  sub_1C151A30C();
  unint64_t v104 = (uint64_t (*)(void, void))(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(a10, v48);
  uint64_t v61 = v60;
  v58(v59, a10);
  uint64_t v62 = v142;
  uint64_t v63 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v98, v57, v56);
  uint64_t v128 = a10;
  if (v61)
  {
    uint64_t v64 = v61;
    uint64_t v65 = (uint64_t)v104;
  }
  else
  {
    uint64_t v65 = sub_1C151A2EC();
    uint64_t v64 = v66;
  }
  uint64_t v67 = *(void (**)(void, void))(v62 + 8);
  uint64_t v142 = v62 + 8;
  unint64_t v104 = (uint64_t (*)(void, void))v67;
  v67(v63, v56);
  uint64_t v68 = sub_1C151A2EC();
  uint64_t v70 = v69;
  uint64_t v71 = v103;
  uint64_t v72 = v140;
  uint64_t v73 = v134;
  sub_1C151AA1C();
  uint64_t v143 = v65;
  uint64_t v144 = v64;
  uint64_t v145 = v68;
  uint64_t v146 = v70;
  uint64_t v74 = v138;
  (*(void (**)(char *, uint64_t *, uint64_t))(v112 + 8))(v71, &v143, v138);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v110 + 8);
  v75(v71, v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v102, v73, v72);
  swift_getWitnessTable();
  uint64_t v76 = v152;
  uint64_t v77 = sub_1C151ED7C();
  MEMORY[0x1C18C02B0](v77, v76, v109, v107);
  sub_1C151AA0C();
  sub_1C151AA6C();
  uint64_t v78 = v108;
  sub_1C151AA1C();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v113 + 24))(&v143, v74);
  v75(v78, v74);
  uint64_t v79 = v114;
  if ((_BYTE)v143)
  {
    uint64_t v80 = v111;
    if (v143 == 1) {
      sub_1C151AA4C();
    }
  }
  else
  {
    sub_1C151AA5C();
    uint64_t v80 = v111;
  }
  swift_beginAccess();
  sub_1C151CC2C();
  swift_endAccess();
  uint64_t v81 = v135;
  uint64_t v82 = v133;
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v133, v129, v79);
  int v83 = (*(uint64_t (**)(char *, uint64_t))(v81 + 88))(v82, v79);
  if (v83 == *MEMORY[0x1E4F7B0C8])
  {
    sub_1C151DBCC();
LABEL_13:
    uint64_t v84 = v127[3];
    uint64_t v85 = v127[4];
    __swift_project_boxed_opaque_existential_1(v127, v84);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 24))(1, v84, v85);
    goto LABEL_14;
  }
  if (v83 == *MEMORY[0x1E4F7B0D0]) {
    goto LABEL_13;
  }
  if (v83 == *MEMORY[0x1E4F7B0D8])
  {
    uint64_t v95 = v127[3];
    uint64_t v96 = v127[4];
    __swift_project_boxed_opaque_existential_1(v127, v95);
    (*(void (**)(void, uint64_t, uint64_t))(v96 + 24))(0, v95, v96);
  }
LABEL_14:
  (*(void (**)(char *, uint64_t))(v135 + 8))(v133, v79);
  swift_beginAccess();
  uint64_t v86 = v119;
  uint64_t v87 = v118;
  uint64_t v88 = v80;
  uint64_t v89 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v118, v88, v136);
  uint64_t v90 = v121;
  uint64_t v91 = v120;
  uint64_t v92 = v122;
  (*(void (**)(char *, void, uint64_t))(v121 + 104))(v120, *MEMORY[0x1E4FAC288], v122);
  uint64_t v93 = v115;
  sub_1C151B8BC();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v89);
  v126(v93);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v93, v117);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v131, v140);
  return v104(v139, v152);
}

uint64_t sub_1C0E979D4(uint64_t a1, void *a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v40 = a8;
  uint64_t v45 = a5;
  uint64_t v47 = a4;
  uint64_t v48 = a3;
  uint64_t v43 = a1;
  uint64_t v38 = a13;
  uint64_t v37 = a12;
  uint64_t v50 = a6;
  unint64_t v51 = a7;
  uint64_t v52 = a11;
  uint64_t v53 = a14;
  uint64_t v46 = sub_1C151B8CC();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v18 = (char *)&v36 - v17;
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EB93C6F8;
  int v39 = sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1527210;
  unint64_t v41 = a7;
  uint64_t v42 = a6;
  uint64_t v50 = a6;
  unint64_t v51 = a7;
  uint64_t v52 = v40;
  uint64_t v53 = a9;
  uint64_t v54 = a10;
  uint64_t v55 = a11;
  uint64_t v56 = v37;
  uint64_t v57 = v38;
  uint64_t v58 = a14;
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  uint64_t v21 = sub_1C151DBBC();
  uint64_t v23 = v22;
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v25 = sub_1BFE9C558();
  *(void *)(v20 + 64) = v25;
  *(void *)(v20 + 32) = v21;
  *(void *)(v20 + 40) = v23;
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  uint64_t v49 = v43;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v26 = v50;
  unint64_t v27 = v51;
  *(void *)(v20 + 96) = v24;
  *(void *)(v20 + 104) = v25;
  *(void *)(v20 + 72) = v26;
  *(void *)(v20 + 80) = v27;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v28 = a2[3];
  uint64_t v29 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v28);
  (*(void (**)(void, uint64_t, uint64_t))(v29 + 24))(0, v28, v29);
  uint64_t v50 = v42;
  unint64_t v51 = v41;
  uint64_t v52 = a11;
  uint64_t v53 = a14;
  uint64_t v30 = sub_1C151CC9C();
  uint64_t v31 = sub_1C151AC6C();
  uint64_t v32 = &v18[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v18, v45, v30);
  (*(void (**)(char *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, *MEMORY[0x1E4FAC288], v31);
  uint64_t v33 = v44;
  uint64_t v34 = v46;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v18, *MEMORY[0x1E4FAC9C0], v46);
  v48(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v18, v34);
}

uint64_t sub_1C0E97D8C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4161388](a1, WitnessTable);
}

uint64_t sub_1C0E97DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v23 = a6;
  uint64_t v26 = sub_1C151D5FC();
  uint64_t v15 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v31 = v23;
  uint64_t v32 = v24;
  uint64_t v33 = v25;
  uint64_t v34 = a9;
  uint64_t v35 = a10;
  uint64_t inserted = type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  uint64_t v19 = a1 + *(int *)(inserted + 92);
  sub_1C151DBBC();
  sub_1C151D5EC();
  sub_1C0E97F9C(v19, inserted);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(inserted + 100)), *(void *)(a1 + *(int *)(inserted + 100) + 24));
  sub_1C151DA5C();
  uint64_t v20 = sub_1C15192FC();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v26);
  return v20;
}

uint64_t sub_1C0E97F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v35 = sub_1C151D59C();
  uint64_t v3 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151DC0C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151DBFC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v32 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v15);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E4F7B0C8])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == *MEMORY[0x1E4F7B0B0])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
      uint64_t v18 = v3;
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      uint64_t v20 = v35;
      v19(v5, v13, v35);
      id v21 = objc_msgSend((id)sub_1C151D58C(), sel_sourceChannelID);
      swift_unknownObjectRelease();
      if (v21)
      {
        uint64_t v22 = sub_1C151E62C();
        uint64_t v24 = v23;
        unsigned int v25 = objc_msgSend(*(id *)(v34 + *(int *)(v33 + 108)), sel_hasMutedSubscriptionForTagID_, v21);

        if (v25)
        {
          uint64_t v26 = sub_1C151D36C();
          sub_1C0E9B928();
          swift_allocError();
          *uint64_t v27 = v22;
          v27[1] = v24;
          (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F7A928], v26);
          sub_1BFEFE008(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
          swift_allocObject();
          uint64_t v28 = sub_1C151906C();
LABEL_11:
          uint64_t v30 = v28;
          (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v20);
          (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
          return v30;
        }
        swift_bridgeObjectRelease();
      }
      sub_1BFEFE008(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v28 = sub_1C151908C();
      goto LABEL_11;
    }
    uint64_t v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    v29(v17, v10);
    v29(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_1BFEFE008(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0E984C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FeedNativeAdInsertBlueprintModifier() + 92);
  uint64_t v4 = sub_1C151DC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

void sub_1C0E98568(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v55 = a6;
  uint64_t v54 = a5;
  uint64_t v53 = a4;
  uint64_t v52 = a3;
  uint64_t v58 = a2;
  uint64_t v59 = a9;
  uint64_t v14 = sub_1C151D43C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C151D77C();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v64 = v18;
  uint64_t v65 = v19;
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C151D36C();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  unsigned int v25 = (void *)((char *)v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v75 = a1;
  id v26 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (!swift_dynamicCast()) {
    goto LABEL_16;
  }
  uint64_t v51 = a12;
  uint64_t v50 = a11;
  uint64_t v49 = a10;
  int v27 = (*(uint64_t (**)(void *, uint64_t))(v23 + 88))(v25, v22);
  if (v27 != *MEMORY[0x1E4F7A920])
  {
    if (v27 == *MEMORY[0x1E4F7A928])
    {
      (*(void (**)(void *, uint64_t))(v23 + 96))(v25, v22);
      uint64_t v39 = *v25;
      uint64_t v40 = v25[1];
      if (qword_1EB87B058 != -1) {
        swift_once();
      }
      unint64_t v41 = (void *)qword_1EB93C6F8;
      sub_1BFFDEB20();
      uint64_t v42 = swift_allocObject();
      long long v63 = xmmword_1C1529AE0;
      *(_OWORD *)(v42 + 16) = xmmword_1C1529AE0;
      *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 64) = sub_1BFE9C558();
      *(void *)(v42 + 32) = v39;
      *(void *)(v42 + 40) = v40;
      id v43 = v41;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      uint64_t v66 = v52;
      uint64_t v67 = v53;
      uint64_t v68 = v54;
      uint64_t v69 = v55;
      uint64_t v70 = v56;
      uint64_t v71 = v57;
      uint64_t v72 = v49;
      uint64_t v73 = v50;
      uint64_t v74 = v51;
      type metadata accessor for FeedNativeAdInsertBlueprintModifier();
      sub_1C0E99DE8(0, &qword_1EB85F218, MEMORY[0x1E4F7ADE8], MEMORY[0x1E4FBBE00]);
      uint64_t v44 = v65;
      unint64_t v45 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v63;
      (*(void (**)(unint64_t, void, uint64_t))(v44 + 104))(v46 + v45, *MEMORY[0x1E4F7ADE0], v64);
      sub_1C00BB8FC(v46);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
LABEL_16:

    swift_willThrow();
    id v47 = a1;
    return;
  }
  (*(void (**)(void *, uint64_t))(v23 + 96))(v25, v22);
  uint64_t v28 = *v25;
  int64_t v29 = *(void *)(*v25 + 16);
  if (v29)
  {
    v48[1] = v12;
    uint64_t v66 = MEMORY[0x1E4FBC860];
    sub_1C05F828C(0, v29, 0);
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v30 = v15 + 16;
    uint64_t v62 = v31;
    unint64_t v32 = (*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64);
    v48[0] = v28;
    uint64_t v33 = v28 + v32;
    uint64_t v34 = *(void *)(v30 + 56);
    *(void *)&long long v63 = v30;
    uint64_t v35 = (void (**)(char *, uint64_t))(v30 - 8);
    uint64_t v60 = v65 + 32;
    uint64_t v61 = v34;
    do
    {
      v62(v17, v33, v14);
      sub_1C151D41C();
      (*v35)(v17, v14);
      uint64_t v36 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F828C(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v66;
      }
      unint64_t v38 = *(void *)(v36 + 16);
      unint64_t v37 = *(void *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1C05F828C(v37 > 1, v38 + 1, 1);
        uint64_t v36 = v66;
      }
      *(void *)(v36 + 16) = v38 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v36+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(void *)(v65 + 72) * v38, v21, v64);
      uint64_t v66 = v36;
      v33 += v61;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  sub_1C06078B8(v36);
  swift_bridgeObjectRelease();
  uint64_t v66 = v52;
  uint64_t v67 = v53;
  uint64_t v68 = v54;
  uint64_t v69 = v55;
  uint64_t v70 = v56;
  uint64_t v71 = v57;
  uint64_t v72 = v49;
  uint64_t v73 = v50;
  uint64_t v74 = v51;
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
LABEL_19:
  sub_1C151DBEC();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C0E98C54()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t inserted = type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  return sub_1C0E963CC(v1, v2, inserted);
}

uint64_t sub_1C0E98CCC()
{
  uint64_t inserted = (int *)type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  uint64_t v23 = *(unsigned __int8 *)(*((void *)inserted - 1) + 80);
  uint64_t v22 = *(void *)(*((void *)inserted - 1) + 64);
  uint64_t v2 = sub_1C151A31C();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  uint64_t v21 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v20 = *(void *)(v27 + 64);
  uint64_t v26 = sub_1C151AA8C();
  uint64_t v24 = *(void *)(v26 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v19 = *(void *)(v24 + 64);
  uint64_t v4 = (v23 + 88) & ~v23;
  uint64_t v29 = sub_1C151CC9C();
  uint64_t v25 = *(void *)(v29 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v6 = v0 + v4;
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  uint64_t v7 = v0 + v4 + inserted[23];
  uint64_t v8 = sub_1C151DC0C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  uint64_t v9 = (id *)(v0 + v4 + inserted[24]);

  uint64_t v10 = (int *)type metadata accessor for FeedContext();
  uint64_t v11 = (char *)v9 + v10[5];
  uint64_t v12 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v13 = &v11[*(int *)(v12 + 20)];
    uint64_t v14 = sub_1C151631C();
    uint64_t v15 = v13;
    uint64_t v4 = (v23 + 88) & ~v23;
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v15, v14);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v9 + v10[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = (v4 + v22 + v21) & ~v21;
  uint64_t v17 = (v16 + v20 + v3) & ~v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 + inserted[25]);
  __swift_destroy_boxed_opaque_existential_1(v6 + inserted[26]);

  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0 + v16, v28);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v0 + v17, v26);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v0 + ((((((v19 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & ~v5), v29);
  return swift_deallocObject();
}

uint64_t sub_1C0E9916C(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  uint64_t v20 = v1[5];
  uint64_t v21 = v1[4];
  uint64_t v4 = v1[7];
  uint64_t v18 = (uint64_t (*)(void, void))v1[8];
  uint64_t v19 = v1[6];
  uint64_t v17 = v1[9];
  uint64_t v5 = v1[10];
  uint64_t v6 = *(void *)(type metadata accessor for FeedNativeAdInsertBlueprintModifier() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v7 = v16 + *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(sub_1C151A31C() - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  unint64_t v10 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(sub_1C151AA8C() - 8);
  unint64_t v12 = (v10 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(sub_1C151CC9C() - 8);
  return sub_1C0E96C00(a1, (void *)((char *)v1 + v16), (uint64_t)v1 + v10, (uint64_t)v1 + v12, *(void *)((char *)v1 + v13), *(void (**)(char *))((char *)v1 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)((char *)v1 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), (uint64_t)v1+ ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v3, v2, v21, v20, v19, v4, v18, v17, v5);
}

uint64_t sub_1C0E993C0()
{
  uint64_t inserted = (int *)type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)inserted - 1) + 80);
  uint64_t v15 = *(void *)(*((void *)inserted - 1) + 64);
  uint64_t v16 = sub_1C151CC9C();
  uint64_t v3 = *(void *)(v16 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v0 + ((v2 + 88) & ~v2);
  __swift_destroy_boxed_opaque_existential_1(v5);
  uint64_t v6 = v5 + inserted[23];
  uint64_t v7 = sub_1C151DC0C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  uint64_t v8 = (id *)(v5 + inserted[24]);

  uint64_t v9 = (int *)type metadata accessor for FeedContext();
  unint64_t v10 = (char *)v8 + v9[5];
  uint64_t v11 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v14 = &v10[*(int *)(v11 + 20)];
    uint64_t v12 = sub_1C151631C();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v14, v12);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v8 + v9[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v5 + inserted[25]);
  __swift_destroy_boxed_opaque_existential_1(v5 + inserted[26]);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + ((((v15 + ((v2 + 88) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + v4 + 16) & ~v4), v16);
  return swift_deallocObject();
}

uint64_t sub_1C0E99700(uint64_t a1)
{
  uint64_t v2 = v1[2];
  unint64_t v3 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = *(void *)(type metadata accessor for FeedNativeAdInsertBlueprintModifier() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(sub_1C151CC9C() - 8);
  return sub_1C0E979D4(a1, (void *)((char *)v1 + v10), *(void (**)(char *))((char *)v1 + v11), *(void *)((char *)v1 + v11 + 8), (uint64_t)v1+ ((v11 + *(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v2, v3, v15, v14, v4, v5, v6, v7, v8);
}

uint64_t sub_1C0E99850()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0E9986C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 56);
}

uint64_t sub_1C0E99874(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 80);
}

uint64_t sub_1C0E9987C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 96);
}

uint64_t sub_1C0E99884()
{
  uint64_t result = type metadata accessor for FeedNativeAdInsertion();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0E99968(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *(void *)a1 = *a2;
    uint64_t v29 = v28 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[23];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C151DC0C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
    unint64_t v13 = (void *)(v9 + v12);
    uint64_t v14 = (void *)(v10 + v12);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v59 = a1;
    uint64_t v60 = a3;
    uint64_t v16 = a3[24];
    uint64_t v17 = a1 + v16;
    uint64_t v61 = a2;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = *(void **)((char *)a2 + v16);
    *(void *)(a1 + v16) = v19;
    uint64_t v20 = (int *)type metadata accessor for FeedContext();
    uint64_t v21 = v20[5];
    uint64_t v22 = (void *)(v17 + v21);
    uint64_t v23 = (void *)(v18 + v21);
    uint64_t v24 = (int *)type metadata accessor for BundleSession();
    uint64_t v58 = *((void *)v24 - 1);
    uint64_t v25 = *(unsigned int (**)(void *, uint64_t, int *))(v58 + 48);
    swift_bridgeObjectRetain();
    id v26 = v19;
    if (v25(v23, 1, v24))
    {
      sub_1C0E99DE8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      *uint64_t v22 = *v23;
      uint64_t v30 = v24[5];
      uint64_t v31 = (char *)v22 + v30;
      unint64_t v32 = (char *)v23 + v30;
      uint64_t v33 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *((unsigned char *)v22 + v24[6]) = *((unsigned char *)v23 + v24[6]);
      *((unsigned char *)v22 + v24[7]) = *((unsigned char *)v23 + v24[7]);
      *(_OWORD *)((char *)v22 + v24[8]) = *(_OWORD *)((char *)v23 + v24[8]);
      *(void *)((char *)v22 + v24[9]) = *(void *)((char *)v23 + v24[9]);
      *((unsigned char *)v22 + v24[10]) = *((unsigned char *)v23 + v24[10]);
      *((unsigned char *)v22 + v24[11]) = *((unsigned char *)v23 + v24[11]);
      uint64_t v34 = *(void (**)(void *, void, uint64_t, int *))(v58 + 56);
      swift_bridgeObjectRetain();
      v34(v22, 0, 1, v24);
    }
    *(unsigned char *)(v17 + v20[6]) = *(unsigned char *)(v18 + v20[6]);
    *(unsigned char *)(v17 + v20[7]) = *(unsigned char *)(v18 + v20[7]);
    *(unsigned char *)(v17 + v20[8]) = *(unsigned char *)(v18 + v20[8]);
    *(unsigned char *)(v17 + v20[9]) = *(unsigned char *)(v18 + v20[9]);
    *(void *)(v17 + v20[10]) = *(void *)(v18 + v20[10]);
    *(void *)(v17 + v20[11]) = *(void *)(v18 + v20[11]);
    uint64_t v35 = v20[12];
    uint64_t v36 = (void *)(v17 + v35);
    unint64_t v37 = (void *)(v18 + v35);
    uint64_t v38 = *(void *)(v18 + v35 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v38 - 1) >= 3)
    {
      *uint64_t v36 = *v37;
      v36[1] = v38;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    }
    *(unsigned char *)(v17 + v20[13]) = *(unsigned char *)(v18 + v20[13]);
    uint64_t v39 = v20[14];
    uint64_t v40 = *(void **)(v18 + v39);
    *(void *)(v17 + v39) = v40;
    uint64_t v41 = v20[15];
    uint64_t v42 = (void *)(v17 + v41);
    id v43 = (void *)(v18 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v29 = v59;
    uint64_t v45 = v60[25];
    uint64_t v46 = v59 + v45;
    uint64_t v47 = (uint64_t)v61 + v45;
    long long v48 = *(_OWORD *)((char *)v61 + v45 + 24);
    *(_OWORD *)(v59 + v45 + 24) = v48;
    uint64_t v49 = v48;
    uint64_t v50 = **(void (***)(uint64_t, uint64_t, uint64_t))(v48 - 8);
    id v51 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50(v46, v47, v49);
    uint64_t v52 = v60[26];
    long long v53 = *(_OWORD *)((char *)v61 + v52 + 24);
    *(_OWORD *)(v59 + v52 + 24) = v53;
    (**(void (***)(void))(v53 - 8))();
    uint64_t v54 = v60[27];
    uint64_t v55 = *(void **)((char *)v61 + v54);
    *(void *)(v59 + v54) = v55;
    id v56 = v55;
  }
  return v29;
}

void sub_1C0E99DE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0E99E4C(uint64_t a1, int *a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + a2[23];
  uint64_t v5 = sub_1C151DC0C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  uint64_t v6 = (id *)(a1 + a2[24]);

  uint64_t v7 = (int *)type metadata accessor for FeedContext();
  unint64_t v8 = (char *)v6 + v7[5];
  uint64_t v9 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = &v8[*(int *)(v9 + 20)];
    uint64_t v11 = sub_1C151631C();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v6 + v7[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[25]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[26]);
  uint64_t v12 = *(void **)(a1 + a2[27]);
}

uint64_t sub_1C0E9A020(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[23];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151DC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
  uint64_t v12 = (void *)(v8 + v11);
  unint64_t v13 = (void *)(v9 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  id v56 = a3;
  uint64_t v57 = a2;
  uint64_t v15 = a3[24];
  uint64_t v58 = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v18;
  uint64_t v19 = (int *)type metadata accessor for FeedContext();
  uint64_t v20 = v19[5];
  uint64_t v21 = (void *)(v16 + v20);
  uint64_t v22 = (void *)(v17 + v20);
  uint64_t v23 = (int *)type metadata accessor for BundleSession();
  uint64_t v55 = *((void *)v23 - 1);
  uint64_t v24 = *(unsigned int (**)(void *, uint64_t, int *))(v55 + 48);
  swift_bridgeObjectRetain();
  id v25 = v18;
  if (v24(v22, 1, v23))
  {
    sub_1C0E99DE8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    *uint64_t v21 = *v22;
    uint64_t v27 = v23[5];
    uint64_t v28 = (char *)v21 + v27;
    uint64_t v29 = (char *)v22 + v27;
    uint64_t v30 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    *((unsigned char *)v21 + v23[6]) = *((unsigned char *)v22 + v23[6]);
    *((unsigned char *)v21 + v23[7]) = *((unsigned char *)v22 + v23[7]);
    *(_OWORD *)((char *)v21 + v23[8]) = *(_OWORD *)((char *)v22 + v23[8]);
    *(void *)((char *)v21 + v23[9]) = *(void *)((char *)v22 + v23[9]);
    *((unsigned char *)v21 + v23[10]) = *((unsigned char *)v22 + v23[10]);
    *((unsigned char *)v21 + v23[11]) = *((unsigned char *)v22 + v23[11]);
    uint64_t v31 = *(void (**)(void *, void, uint64_t, int *))(v55 + 56);
    swift_bridgeObjectRetain();
    v31(v21, 0, 1, v23);
  }
  *(unsigned char *)(v16 + v19[6]) = *(unsigned char *)(v17 + v19[6]);
  *(unsigned char *)(v16 + v19[7]) = *(unsigned char *)(v17 + v19[7]);
  *(unsigned char *)(v16 + v19[8]) = *(unsigned char *)(v17 + v19[8]);
  *(unsigned char *)(v16 + v19[9]) = *(unsigned char *)(v17 + v19[9]);
  *(void *)(v16 + v19[10]) = *(void *)(v17 + v19[10]);
  *(void *)(v16 + v19[11]) = *(void *)(v17 + v19[11]);
  uint64_t v32 = v19[12];
  uint64_t v33 = (void *)(v16 + v32);
  uint64_t v34 = (void *)(v17 + v32);
  uint64_t v35 = *(void *)(v17 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v35 - 1) >= 3)
  {
    *uint64_t v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  }
  *(unsigned char *)(v16 + v19[13]) = *(unsigned char *)(v17 + v19[13]);
  uint64_t v36 = v19[14];
  unint64_t v37 = *(void **)(v17 + v36);
  *(void *)(v16 + v36) = v37;
  uint64_t v38 = v19[15];
  uint64_t v39 = (void *)(v16 + v38);
  uint64_t v40 = (void *)(v17 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v56[25];
  uint64_t v43 = v58 + v42;
  uint64_t v44 = v57 + v42;
  long long v45 = *(_OWORD *)(v57 + v42 + 24);
  *(_OWORD *)(v58 + v42 + 24) = v45;
  uint64_t v46 = v45;
  uint64_t v47 = **(void (***)(uint64_t, uint64_t, uint64_t))(v45 - 8);
  id v48 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47(v43, v44, v46);
  uint64_t v49 = v56[26];
  long long v50 = *(_OWORD *)(v57 + v49 + 24);
  *(_OWORD *)(v58 + v49 + 24) = v50;
  (**(void (***)(void))(v50 - 8))();
  uint64_t v51 = v56[27];
  uint64_t v52 = *(void **)(v57 + v51);
  *(void *)(v58 + v51) = v52;
  id v53 = v52;
  return v58;
}

uint64_t *sub_1C0E9A448(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[23];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151DC0C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = a3;
  id v56 = a2;
  uint64_t v13 = a3[24];
  uint64_t v57 = a1;
  uint64_t v14 = (void **)((char *)a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void **)((char *)a2 + v13);
  uint64_t v17 = *v14;
  *uint64_t v14 = v16;
  id v18 = v16;

  uint64_t v19 = (int *)type metadata accessor for FeedContext();
  uint64_t v20 = v19[5];
  uint64_t v21 = (char *)v14 + v20;
  uint64_t v22 = &v15[v20];
  uint64_t v23 = (int *)type metadata accessor for BundleSession();
  uint64_t v24 = *((void *)v23 - 1);
  id v25 = *(uint64_t (**)(char *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      uint64_t v28 = v23[5];
      uint64_t v29 = &v21[v28];
      uint64_t v30 = &v22[v28];
      uint64_t v31 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      v21[v23[6]] = v22[v23[6]];
      v21[v23[7]] = v22[v23[7]];
      *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
      *(void *)&v21[v23[9]] = *(void *)&v22[v23[9]];
      v21[v23[10]] = v22[v23[10]];
      v21[v23[11]] = v22[v23[11]];
      uint64_t v32 = *(void (**)(char *, void, uint64_t, int *))(v24 + 56);
      swift_bridgeObjectRetain();
      v32(v21, 0, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    sub_1C0D45290((uint64_t)v21);
LABEL_6:
    sub_1C0E99DE8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v21, v22, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v51 = v23[5];
  uint64_t v52 = &v21[v51];
  id v53 = &v22[v51];
  uint64_t v54 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  v21[v23[6]] = v22[v23[6]];
  v21[v23[7]] = v22[v23[7]];
  *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
  *(void *)&v21[v23[9]] = *(void *)&v22[v23[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[v23[10]] = v22[v23[10]];
  v21[v23[11]] = v22[v23[11]];
LABEL_7:
  *((unsigned char *)v14 + v19[6]) = v15[v19[6]];
  *((unsigned char *)v14 + v19[7]) = v15[v19[7]];
  *((unsigned char *)v14 + v19[8]) = v15[v19[8]];
  *((unsigned char *)v14 + v19[9]) = v15[v19[9]];
  *(void **)((char *)v14 + v19[10]) = *(void **)&v15[v19[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v14 + v19[11]) = *(void **)&v15[v19[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v19[12];
  uint64_t v35 = (void **)((char *)v14 + v34);
  uint64_t v36 = &v15[v34];
  uint64_t v37 = *(uint64_t *)((char *)v14 + v34 + 8);
  unint64_t v38 = *(void *)&v15[v34 + 8] - 1;
  if ((unint64_t)(v37 - 1) >= 3)
  {
    if (v38 >= 3)
    {
      *uint64_t v35 = *(void *)v36;
      v35[1] = *((void *)v36 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1C0E9B3D0((uint64_t)v35, (uint64_t)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEFE008);
    goto LABEL_12;
  }
  if (v38 < 3)
  {
LABEL_12:
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_14;
  }
  *uint64_t v35 = *(void *)v36;
  v35[1] = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
LABEL_14:
  *((unsigned char *)v14 + v19[13]) = v15[v19[13]];
  uint64_t v39 = v19[14];
  uint64_t v40 = *(void **)((char *)v14 + v39);
  uint64_t v41 = *(void **)&v15[v39];
  *(void **)((char *)v14 + v39) = v41;
  id v42 = v41;

  uint64_t v43 = v19[15];
  uint64_t v44 = (char *)v14 + v43;
  long long v45 = &v15[v43];
  *(void **)((char *)v14 + v43) = *(void **)&v15[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)v57 + v55[25]), (uint64_t *)((char *)v56 + v55[25]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)v57 + v55[26]), (uint64_t *)((char *)v56 + v55[26]));
  uint64_t v46 = v55[27];
  uint64_t v47 = *(void **)((char *)v56 + v46);
  id v48 = *(void **)((char *)v57 + v46);
  *(uint64_t *)((char *)v57 + v46) = (uint64_t)v47;
  id v49 = v47;

  return v57;
}

uint64_t sub_1C0E9A964(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[23];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151DC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for FeedNativeAdInsertion();
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  uint64_t v12 = a3[24];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for FeedContext();
  uint64_t v16 = v15[5];
  uint64_t v17 = (void *)(v13 + v16);
  id v18 = (void *)(v14 + v16);
  uint64_t v19 = (int *)type metadata accessor for BundleSession();
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    sub_1C0E99DE8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v17 = *v18;
    uint64_t v22 = v19[5];
    uint64_t v33 = (char *)v18 + v22;
    uint64_t v34 = (char *)v17 + v22;
    uint64_t v23 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v34, v33, v23);
    *((unsigned char *)v17 + v19[6]) = *((unsigned char *)v18 + v19[6]);
    *((unsigned char *)v17 + v19[7]) = *((unsigned char *)v18 + v19[7]);
    *(_OWORD *)((char *)v17 + v19[8]) = *(_OWORD *)((char *)v18 + v19[8]);
    *(void *)((char *)v17 + v19[9]) = *(void *)((char *)v18 + v19[9]);
    *((unsigned char *)v17 + v19[10]) = *((unsigned char *)v18 + v19[10]);
    *((unsigned char *)v17 + v19[11]) = *((unsigned char *)v18 + v19[11]);
    (*(void (**)(void *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  *(unsigned char *)(v13 + v15[6]) = *(unsigned char *)(v14 + v15[6]);
  *(unsigned char *)(v13 + v15[7]) = *(unsigned char *)(v14 + v15[7]);
  *(unsigned char *)(v13 + v15[8]) = *(unsigned char *)(v14 + v15[8]);
  *(unsigned char *)(v13 + v15[9]) = *(unsigned char *)(v14 + v15[9]);
  *(void *)(v13 + v15[10]) = *(void *)(v14 + v15[10]);
  *(void *)(v13 + v15[11]) = *(void *)(v14 + v15[11]);
  *(_OWORD *)(v13 + v15[12]) = *(_OWORD *)(v14 + v15[12]);
  *(unsigned char *)(v13 + v15[13]) = *(unsigned char *)(v14 + v15[13]);
  *(void *)(v13 + v15[14]) = *(void *)(v14 + v15[14]);
  *(_OWORD *)(v13 + v15[15]) = *(_OWORD *)(v14 + v15[15]);
  uint64_t v24 = a3[25];
  uint64_t v25 = a3[26];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  uint64_t v29 = a1 + v25;
  uint64_t v30 = a2 + v25;
  long long v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  return a1;
}

uint64_t sub_1C0E9AC78(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[23];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151DC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (uint64_t *)(v9 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v58 = a3;
  uint64_t v59 = a2;
  uint64_t v16 = a3[24];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  uint64_t v20 = (int *)type metadata accessor for FeedContext();
  uint64_t v21 = v20[5];
  uint64_t v22 = (void *)(v17 + v21);
  uint64_t v23 = (void *)(v18 + v21);
  uint64_t v24 = (int *)type metadata accessor for BundleSession();
  uint64_t v57 = *((void *)v24 - 1);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, int *))(v57 + 48);
  int v26 = v25(v22, 1, v24);
  int v27 = v25(v23, 1, v24);
  if (v26)
  {
    if (!v27)
    {
      *uint64_t v22 = *v23;
      uint64_t v28 = v24[5];
      uint64_t v29 = (char *)v22 + v28;
      uint64_t v30 = (char *)v23 + v28;
      uint64_t v31 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      *((unsigned char *)v22 + v24[6]) = *((unsigned char *)v23 + v24[6]);
      *((unsigned char *)v22 + v24[7]) = *((unsigned char *)v23 + v24[7]);
      *(_OWORD *)((char *)v22 + v24[8]) = *(_OWORD *)((char *)v23 + v24[8]);
      *(void *)((char *)v22 + v24[9]) = *(void *)((char *)v23 + v24[9]);
      *((unsigned char *)v22 + v24[10]) = *((unsigned char *)v23 + v24[10]);
      *((unsigned char *)v22 + v24[11]) = *((unsigned char *)v23 + v24[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v57 + 56))(v22, 0, 1, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    sub_1C0D45290((uint64_t)v22);
LABEL_6:
    sub_1C0E99DE8(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v22, v23, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v22 = *v23;
  uint64_t v53 = v24[5];
  uint64_t v54 = (char *)v22 + v53;
  uint64_t v55 = (char *)v23 + v53;
  uint64_t v56 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
  *((unsigned char *)v22 + v24[6]) = *((unsigned char *)v23 + v24[6]);
  *((unsigned char *)v22 + v24[7]) = *((unsigned char *)v23 + v24[7]);
  *(_OWORD *)((char *)v22 + v24[8]) = *(_OWORD *)((char *)v23 + v24[8]);
  *(void *)((char *)v22 + v24[9]) = *(void *)((char *)v23 + v24[9]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v22 + v24[10]) = *((unsigned char *)v23 + v24[10]);
  *((unsigned char *)v22 + v24[11]) = *((unsigned char *)v23 + v24[11]);
LABEL_7:
  *(unsigned char *)(v17 + v20[6]) = *(unsigned char *)(v18 + v20[6]);
  *(unsigned char *)(v17 + v20[7]) = *(unsigned char *)(v18 + v20[7]);
  *(unsigned char *)(v17 + v20[8]) = *(unsigned char *)(v18 + v20[8]);
  *(unsigned char *)(v17 + v20[9]) = *(unsigned char *)(v18 + v20[9]);
  *(void *)(v17 + v20[10]) = *(void *)(v18 + v20[10]);
  swift_bridgeObjectRelease();
  *(void *)(v17 + v20[11]) = *(void *)(v18 + v20[11]);
  swift_bridgeObjectRelease();
  uint64_t v33 = v20[12];
  uint64_t v34 = (void *)(v17 + v33);
  uint64_t v35 = (void *)(v18 + v33);
  if ((unint64_t)(*(void *)(v17 + v33 + 8) - 1) >= 3)
  {
    uint64_t v36 = v35[1];
    if ((unint64_t)(v36 - 1) >= 3)
    {
      *uint64_t v34 = *v35;
      v34[1] = v36;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C0E9B3D0((uint64_t)v34, (uint64_t)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEFE008);
  }
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
LABEL_12:
  *(unsigned char *)(v17 + v20[13]) = *(unsigned char *)(v18 + v20[13]);
  uint64_t v37 = v20[14];
  unint64_t v38 = *(void **)(v17 + v37);
  *(void *)(v17 + v37) = *(void *)(v18 + v37);

  uint64_t v39 = v20[15];
  uint64_t v40 = v17 + v39;
  uint64_t v41 = v18 + v39;
  *(void *)(v17 + v39) = *(void *)(v18 + v39);
  swift_bridgeObjectRelease();
  *(void *)(v40 + 8) = *(void *)(v41 + 8);
  swift_bridgeObjectRelease();
  uint64_t v42 = v58[25];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = v59 + v42;
  __swift_destroy_boxed_opaque_existential_1(a1 + v42);
  long long v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(void *)(v43 + 32) = *(void *)(v44 + 32);
  uint64_t v46 = v58[26];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = v59 + v46;
  __swift_destroy_boxed_opaque_existential_1(a1 + v46);
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  uint64_t v50 = v58[27];
  uint64_t v51 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = *(void *)(v59 + v50);

  return a1;
}

uint64_t sub_1C0E9B150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E9B164);
}

uint64_t sub_1C0E9B164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedNativeAdInsertion();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 92);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedContext();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 96);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C0E9B290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E9B2A4);
}

uint64_t sub_1C0E9B2A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedNativeAdInsertion();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 92);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedContext();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 96);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1C0E9B3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t type metadata accessor for FeedNativeAdInsertBlueprintModifier.Errors()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C0E9B448()
{
  return sub_1C0E97DE0(v0[11], v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10]);
}

void sub_1C0E9B488()
{
  if (!qword_1EB890520)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB890520);
    }
  }
}

uint64_t sub_1C0E9B4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(type metadata accessor for FeedNativeAdInsertBlueprintModifier() - 8);
  return sub_1C0E984C0(v1 + ((*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), a1);
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t inserted = (int *)type metadata accessor for FeedNativeAdInsertBlueprintModifier();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)inserted - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 88) & ~v2);
  __swift_destroy_boxed_opaque_existential_1(v3);
  uint64_t v4 = v3 + inserted[23];
  uint64_t v5 = sub_1C151DC0C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  uint64_t v6 = (id *)(v3 + inserted[24]);

  uint64_t v7 = (int *)type metadata accessor for FeedContext();
  uint64_t v8 = (char *)v6 + v7[5];
  uint64_t v9 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = &v8[*(int *)(v9 + 20)];
    uint64_t v11 = sub_1C151631C();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v6 + v7[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + inserted[25]);
  __swift_destroy_boxed_opaque_existential_1(v3 + inserted[26]);

  return swift_deallocObject();
}

void sub_1C0E9B84C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = v2[5];
  uint64_t v7 = v2[6];
  uint64_t v12 = v2[7];
  uint64_t v8 = v2[8];
  uint64_t v9 = v2[9];
  uint64_t v10 = v2[10];
  uint64_t v11 = *(void *)(type metadata accessor for FeedNativeAdInsertBlueprintModifier() - 8);
  sub_1C0E98568(a1, (uint64_t)v2 + ((*(unsigned __int8 *)(v11 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v3, v4, v5, v6, v7, v12, a2, v8, v9, v10);
}

unint64_t sub_1C0E9B928()
{
  unint64_t result = qword_1EA1A80D8[0];
  if (!qword_1EA1A80D8[0])
  {
    sub_1C151D36C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A80D8);
  }
  return result;
}

uint64_t sub_1C0E9B980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 72);
}

unsigned char *sub_1C0E9B988(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0E9BA24);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E9BA4C()
{
  return swift_getWitnessTable();
}

uint64_t ArticleURLHandlerPatternProvider.patterns()()
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  sub_1BFEF9A78();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  *(void *)(inited + 32) = 0x6C63697472613A2FLL;
  *(void *)(inited + 40) = 0xEB00000000444965;
  *(void *)(inited + 48) = 0xD000000000000014;
  *(void *)(inited + 56) = 0x80000001C162C820;
  *(void *)(inited + 64) = 0xD000000000000012;
  *(void *)(inited + 72) = 0x80000001C162C840;
  *(void *)(inited + 80) = 0xD00000000000001BLL;
  *(void *)(inited + 88) = 0x80000001C162C860;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v3))
  {
    uint64_t v62 = (void *)inited;
  }
  else
  {
    unsigned int v4 = sub_1BFEF9B68((void *)1, 5, 1, (void *)inited);
    v4[2] = 5;
    v4[12] = 0xD000000000000016;
    v4[13] = 0x80000001C162C880;
    uint64_t v62 = v4;
  }
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C0E9C588(0, &qword_1EB870140, MEMORY[0x1E4FAAC40], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = sub_1C151889C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1589AE0;
  uint64_t v61 = v10;
  uint64_t v11 = (void *)(v10 + v9);
  *uint64_t v11 = 97;
  v11[1] = 0xE100000000000000;
  uint64_t v12 = *MEMORY[0x1E4FAAC28];
  uint64_t v13 = *(void (**)(void))(v7 + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v10 + v9, v12, v6);
  uint64_t v14 = (void *)((char *)v11 + v8);
  *uint64_t v14 = 114;
  v14[1] = 0xE100000000000000;
  v13();
  uint64_t v15 = (void *)((char *)v11 + 2 * v8);
  *uint64_t v15 = 0x6E676961706D6163;
  v15[1] = 0xEB0000000064695FLL;
  v13();
  uint64_t v16 = (char *)v11 + 3 * v8;
  strcpy(v16, "campaign_type");
  *((_WORD *)v16 + 7) = -4864;
  v13();
  uint64_t v17 = (void *)((char *)v11 + 4 * v8);
  *uint64_t v17 = 0x6576697461657263;
  v17[1] = 0xEB0000000064695FLL;
  v13();
  uint64_t v18 = (void *)((char *)v11 + 5 * v8);
  *uint64_t v18 = 0x6569766572706461;
  v18[1] = 0xEB00000000646977;
  v13();
  uint64_t v19 = (char *)v11 + 6 * v8;
  strcpy(v19, "adpreviewlimit");
  v19[15] = -18;
  v13();
  uint64_t v20 = (void *)((char *)v11 + 7 * v8);
  *uint64_t v20 = 0x6E656B6F7471;
  v20[1] = 0xE600000000000000;
  v13();
  uint64_t v21 = &v11[v8];
  *uint64_t v21 = 0xD000000000000010;
  v21[1] = 0x80000001C162C8A0;
  v13();
  uint64_t v22 = (void *)((char *)v11 + 9 * v8);
  *uint64_t v22 = 0x724664656E65706FLL;
  v22[1] = 0xEA00000000006D6FLL;
  v13();
  uint64_t v23 = (void *)((char *)v11 + 10 * v8);
  *uint64_t v23 = 0x49656C6369747261;
  v23[1] = 0xE900000000000064;
  v13();
  uint64_t v24 = (char *)v11 + 11 * v8;
  strcpy(v24, "userActionTime");
  v24[15] = -18;
  v13();
  uint64_t v25 = (char *)v11 + 12 * v8;
  strcpy(v25, "web_embed_link");
  v25[15] = -18;
  v13();
  int v26 = (void *)((char *)v11 + 13 * v8);
  *int v26 = 0x79616C706F747561;
  v26[1] = 0xE800000000000000;
  v13();
  int v27 = (void *)((char *)v11 + 14 * v8);
  *int v27 = 0x4C656C6369747261;
  v27[1] = 0xEB00000000747369;
  v13();
  uint64_t v28 = (void *)((char *)v11 + 15 * v8);
  void *v28 = 0x6E6F6974636573;
  v28[1] = 0xE700000000000000;
  v13();
  uint64_t v29 = &v11[2 * v8];
  *uint64_t v29 = 0xD000000000000011;
  v29[1] = 0x80000001C162C8C0;
  v13();
  uint64_t v30 = (void *)((char *)v11 + 17 * v8);
  *uint64_t v30 = sub_1C151E62C();
  v30[1] = v31;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v13)(v30, v12, v6);
  uint64_t v32 = (void *)((char *)v11 + 18 * v8);
  *uint64_t v32 = sub_1C151E62C();
  v32[1] = v33;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v13)(v32, v12, v6);
  uint64_t v34 = (void *)((char *)v11 + 19 * v8);
  *uint64_t v34 = 0x64656546676174;
  v34[1] = 0xE700000000000000;
  v13();
  uint64_t v35 = (void *)((char *)v11 + 20 * v8);
  *uint64_t v35 = 0x6574756F72;
  v35[1] = 0xE500000000000000;
  v13();
  uint64_t v36 = (void *)((char *)v11 + 21 * v8);
  *uint64_t v36 = 0x657370616C6C6F63;
  v36[1] = 0xEF72616265646953;
  v13();
  sub_1C0E9C588(0, (unint64_t *)&unk_1EB870150, (uint64_t (*)(uint64_t))sub_1C0E9C4F0, v5);
  uint64_t v37 = swift_initStackObject();
  long long v63 = xmmword_1C1527210;
  *(_OWORD *)(v37 + 16) = xmmword_1C1527210;
  *(void *)(v37 + 32) = 0x49656C6369747261;
  *(void *)(v37 + 40) = 0xE900000000000044;
  sub_1C0E9C588(0, &qword_1EB870148, MEMORY[0x1E4FAAC58], v5);
  uint64_t v39 = v38;
  uint64_t v40 = sub_1C15188BC();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(void *)(v41 + 72);
  uint64_t v43 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v44 = (v43 + 32) & ~v43;
  uint64_t v60 = v39;
  uint64_t v59 = v43 | 7;
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v63;
  uint64_t v46 = (void *)(v45 + v44);
  *uint64_t v46 = 65;
  v46[1] = 0xE100000000000000;
  uint64_t v47 = *(void (**)(void))(v41 + 104);
  unsigned int v58 = *MEMORY[0x1E4FAAC48];
  ((void (*)(uint64_t))v47)(v45 + v44);
  uint64_t v48 = *MEMORY[0x1E4F7DE68];
  if ((*MEMORY[0x1E4F7DE68] & 0x8000000000000000) != 0) {
    __break(1u);
  }
  *(void *)((char *)v46 + v42) = v48;
  v47();
  *(void *)(v37 + 48) = v45;
  *(void *)(v37 + 56) = 0xD000000000000010;
  *(void *)(v37 + 64) = 0x80000001C1616F90;
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v63;
  uint64_t v50 = (void *)(v49 + v44);
  void *v50 = 80;
  v50[1] = 0xE100000000000000;
  ((void (*)(void *, void, uint64_t))v47)(v50, v58, v40);
  *(void *)((char *)v50 + v42) = v48;
  v47();
  *(void *)(v37 + 72) = v49;
  unint64_t v51 = sub_1C018FAE0(v37);
  MEMORY[0x1F4188790](v51);
  v55[1] = xmmword_1C15B12D0;
  uint64_t v56 = v61;
  uint64_t v57 = v52;
  uint64_t v53 = sub_1C144A6AC((void (*)(uint64_t *__return_ptr, void *))sub_1C0E9C5EC, (uint64_t)v55, (uint64_t)v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t ArticleURLHandlerPatternProvider.__allocating_init(featureAvailability:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BFC773DC(a1, v2 + 16);
  return v2;
}

uint64_t ArticleURLHandlerPatternProvider.init(featureAvailability:)(long long *a1)
{
  sub_1BFC773DC(a1, v1 + 16);
  return v1;
}

uint64_t ArticleURLHandlerPatternProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ArticleURLHandlerPatternProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0E9C4CC()
{
  return ArticleURLHandlerPatternProvider.patterns()();
}

void sub_1C0E9C4F0()
{
  if (!qword_1EB870128)
  {
    sub_1C0E9C588(255, &qword_1EB86F750, MEMORY[0x1E4FAAC58], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB870128);
    }
  }
}

void sub_1C0E9C588(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0E9C5EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0DAA130(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t dispatch thunk of ArticleURLHandlerPatternProviderType.patterns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for ArticleURLHandlerPatternProvider()
{
  return self;
}

uint64_t method lookup function for ArticleURLHandlerPatternProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ArticleURLHandlerPatternProvider);
}

uint64_t dispatch thunk of ArticleURLHandlerPatternProvider.__allocating_init(featureAvailability:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C0E9C670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a5;
  uint64_t v34 = a1;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v31 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v31 - v20;
  sub_1C0E9C964(a3, a4, (uint64_t)&v31 - v20);
  uint64_t v22 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v23 = a3 + v22[5];
  uint64_t v24 = (int *)type metadata accessor for FormatWebEmbed();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v23 + v24[5], v12);
  sub_1BFE0C008(v23 + v24[6], (uint64_t)v11, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v25 = *(void *)(a3 + v22[6]);
  uint64_t v26 = *(void *)(a3 + v22[7]);
  sub_1BFE0C008((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))sub_1BFFFCF8C);
  uint64_t v27 = a3 + v22[8];
  uint64_t v28 = v31;
  sub_1BFE0C008(v27, v31, (uint64_t (*)(void))sub_1BFECFC20);
  LOBYTE(v22) = *(unsigned char *)(v23 + v24[10]) & 1;
  uint64_t v29 = v32;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v34, v29, (uint64_t)v15, (uint64_t)v11, v25, v26, (uint64_t)v18, v28, v33, v22);
  return sub_1BFF24020((uint64_t)v21, (uint64_t (*)(void))sub_1BFFFCF8C);
}

uint64_t sub_1C0E9C964@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C028A5CC(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BFE0C008(a1 + *(int *)(v12 + 36), (uint64_t)v11, (uint64_t (*)(void))sub_1BFEC8548);
  sub_1BFEC84E0();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v13) == 1)
  {
    sub_1BFF24020((uint64_t)v11, (uint64_t (*)(void))sub_1BFEC8548);
    uint64_t v16 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  else
  {
    sub_1C151948C();
    uint64_t v18 = (void *)v25[1];
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
    id v19 = objc_msgSend(v18, sel_identifier);
    uint64_t v20 = sub_1C151E62C();
    uint64_t v22 = v21;

    uint64_t v23 = sub_1C151D2DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
    sub_1BFDB60D4(v20, v22, v18, a2, (uint64_t)v8, a3);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF24020((uint64_t)v8, (uint64_t (*)(void))sub_1C028A5CC);
    uint64_t v24 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a3, 0, 1, v24);
  }
}

uint64_t OsloSheetPurchaseDataModel.init(purchaseIDAppConfigKey:postPurchaseData:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v5 = type metadata accessor for OsloSheetPurchaseDataModel(0);
  return sub_1C0EA1938(a2, (uint64_t)a3 + *(int *)(v5 + 20), (uint64_t (*)(void))sub_1C0073BBC);
}

uint64_t FormatOsloSheetPurchaseDataModel.purchaseIDAppConfigKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOsloSheetPurchaseDataModel.postPurchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0E9CD58(type metadata accessor for FormatOsloSheetPurchaseDataModel, sub_1C0E9D198, a1);
}

uint64_t sub_1C0E9CCEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOsloSheetPurchaseDataModel.init(from:)(a1, a2);
}

uint64_t sub_1C0E9CD04(void *a1)
{
  return FormatOsloSheetPurchaseDataModel.encode(to:)(a1);
}

uint64_t OsloSheetPurchaseDataModel.purchaseIDAppConfigKey.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OsloSheetPurchaseDataModel.postPurchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0E9CD58(type metadata accessor for OsloSheetPurchaseDataModel, sub_1C0E9D1B0, a1);
}

uint64_t sub_1C0E9CD58@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *(int *)(a1(0) + 20);
  return a2(v5, a3);
}

BOOL _s8NewsFeed32FormatOsloSheetPurchaseDataModelV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatPostPurchase();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EA18D4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C007B0C8(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v29 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v29 - v19;
  if (*a1 == *a2 && a1[1] == a2[1] || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    uint64_t v30 = v7;
    uint64_t v23 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
    sub_1C0E9D198((uint64_t)a1 + *(int *)(v23 + 20), (uint64_t)v20);
    sub_1C0E9D198((uint64_t)a2 + *(int *)(v23 + 20), (uint64_t)v17);
    uint64_t v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1C0E9D198((uint64_t)v20, (uint64_t)v11);
    sub_1C0E9D198((uint64_t)v17, v24);
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v25((uint64_t)v11, 1, v4) == 1)
    {
      sub_1BFFAEF98((uint64_t)v17, (uint64_t (*)(void))sub_1C007B0C8);
      sub_1BFFAEF98((uint64_t)v20, (uint64_t (*)(void))sub_1C007B0C8);
      if (v25(v24, 1, v4) == 1)
      {
        sub_1BFFAEF98((uint64_t)v11, (uint64_t (*)(void))sub_1C007B0C8);
        return 1;
      }
    }
    else
    {
      uint64_t v26 = (uint64_t)v14;
      sub_1C0E9D198((uint64_t)v11, (uint64_t)v14);
      if (v25(v24, 1, v4) != 1)
      {
        uint64_t v27 = (uint64_t)v30;
        sub_1C0EA1938(v24, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
        char v28 = _s8NewsFeed18FormatPostPurchaseO2eeoiySbAC_ACtFZ_0(v26, v27);
        sub_1BFFAEF98(v27, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
        sub_1BFFAEF98((uint64_t)v17, (uint64_t (*)(void))sub_1C007B0C8);
        sub_1BFFAEF98((uint64_t)v20, (uint64_t (*)(void))sub_1C007B0C8);
        sub_1BFFAEF98(v26, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
        sub_1BFFAEF98((uint64_t)v11, (uint64_t (*)(void))sub_1C007B0C8);
        return (v28 & 1) != 0;
      }
      sub_1BFFAEF98((uint64_t)v17, (uint64_t (*)(void))sub_1C007B0C8);
      sub_1BFFAEF98((uint64_t)v20, (uint64_t (*)(void))sub_1C007B0C8);
      sub_1BFFAEF98((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
    }
    sub_1BFFAEF98((uint64_t)v11, (uint64_t (*)(void))sub_1C0EA18D4);
    return 0;
  }
  return result;
}

uint64_t sub_1C0E9D198(uint64_t a1, uint64_t a2)
{
  return sub_1C0EA1824(a1, a2, (uint64_t (*)(void))sub_1C007B0C8);
}

uint64_t sub_1C0E9D1B0(uint64_t a1, uint64_t a2)
{
  return sub_1C0EA1824(a1, a2, (uint64_t (*)(void))sub_1C0073BBC);
}

uint64_t sub_1C0E9D1C8(uint64_t a1)
{
  uint64_t result = sub_1C0E9D298(&qword_1EA1A8160);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E9D20C(void *a1)
{
  a1[1] = sub_1C0E9D298(&qword_1EA19D408);
  a1[2] = sub_1C0E9D298(&qword_1EA1A0DE8);
  uint64_t result = sub_1C0E9D298(&qword_1EA1A8168);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E9D298(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatOsloSheetPurchaseDataModel(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatOsloSheetPurchaseDataModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for FormatPostPurchase();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1C007B0C8(0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for FormatURL();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v18 = *v8;
          uint64_t v19 = v8[1];
          uint64_t v25 = *v8;
          uint64_t v20 = v8[2];
          char v21 = *((unsigned char *)v8 + 24);
          sub_1BFE86E48(v18, v19, v20, v21);
          *uint64_t v7 = v25;
          v7[1] = v19;
          v7[2] = v20;
          *((unsigned char *)v7 + 24) = v21;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v17 = v8[1];
            *uint64_t v7 = *v8;
            v7[1] = v17;
            v7[2] = v8[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v22 = sub_1C1515FDC();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(v7, v8, v22);
            uint64_t v23 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v7 + *(int *)(v23 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v23 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for FormatOsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatPostPurchase();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = type metadata accessor for FormatURL();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 2, v7);
    if (!result)
    {
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        uint64_t v9 = *(void *)v4;
        uint64_t v10 = *(void *)(v4 + 8);
        uint64_t v11 = *(void *)(v4 + 16);
        char v12 = *(unsigned char *)(v4 + 24);
        return sub_1BFD7418C(v9, v10, v11, v12);
      }
      else
      {
        if (result == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if (result) {
            return result;
          }
          uint64_t v8 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
          type metadata accessor for FormatAbsoluteURL();
        }
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void *initializeWithCopy for FormatOsloSheetPurchaseDataModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for FormatPostPurchase();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1C007B0C8(0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for FormatURL();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v7, 2, v12))
    {
      memcpy(v6, v7, *(void *)(v9 + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v16 = *v7;
        uint64_t v17 = v7[1];
        uint64_t v23 = *v7;
        uint64_t v18 = v7[2];
        char v19 = *((unsigned char *)v7 + 24);
        sub_1BFE86E48(v16, v17, v18, v19);
        *uint64_t v6 = v23;
        v6[1] = v17;
        v6[2] = v18;
        *((unsigned char *)v6 + 24) = v19;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v15 = v7[1];
          *uint64_t v6 = *v7;
          v6[1] = v15;
          v6[2] = v7[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v20 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(v6, v7, v20);
          uint64_t v21 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v6 + *(int *)(v21 + 20)) = *(uint64_t *)((char *)v7 + *(int *)(v21 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 2, v12);
    }
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for FormatOsloSheetPurchaseDataModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FormatPostPurchase();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = type metadata accessor for FormatURL();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v25 = *v8;
          uint64_t v26 = v8[1];
          uint64_t v45 = *v8;
          uint64_t v27 = v8[2];
          char v28 = *((unsigned char *)v8 + 24);
          sub_1BFE86E48(v25, v26, v27, v28);
          *uint64_t v7 = v45;
          v7[1] = v26;
          v7[2] = v27;
          *((unsigned char *)v7 + 24) = v28;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v29 = sub_1C1515FDC();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(v7, v8, v29);
            uint64_t v30 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v7 + *(int *)(v30 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v30 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      return a1;
    }
    goto LABEL_7;
  }
  if (v13)
  {
    sub_1BFFAEF98((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1C007B0C8(0);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v17);
    return a1;
  }
  uint64_t v18 = type metadata accessor for FormatURL();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v7, 2, v18);
  int v22 = v20(v8, 2, v18);
  if (v21)
  {
    if (!v22)
    {
      int v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2)
      {
        uint64_t v33 = *v8;
        uint64_t v34 = v8[1];
        uint64_t v35 = v8[2];
        char v36 = *((unsigned char *)v8 + 24);
        sub_1BFE86E48(v33, v34, v35, v36);
        *uint64_t v7 = v33;
        v7[1] = v34;
        v7[2] = v35;
        *((unsigned char *)v7 + 24) = v36;
      }
      else
      {
        if (v23 == 1)
        {
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v37 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v37 - 8) + 16))(v7, v8, v37);
          uint64_t v38 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v7 + *(int *)(v38 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v38 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(v7, 0, 2, v18);
      return a1;
    }
    goto LABEL_19;
  }
  if (v22)
  {
    sub_1BFFAEF98((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_19:
    size_t v17 = *(void *)(v10 + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1BFFAEF98((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v32 = swift_getEnumCaseMultiPayload();
    if (v32 == 2)
    {
      uint64_t v39 = *v8;
      uint64_t v40 = v8[1];
      uint64_t v41 = v8[2];
      char v42 = *((unsigned char *)v8 + 24);
      sub_1BFE86E48(v39, v40, v41, v42);
      *uint64_t v7 = v39;
      v7[1] = v40;
      v7[2] = v41;
      *((unsigned char *)v7 + 24) = v42;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v32 == 1)
      {
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v43 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v43 - 8) + 16))(v7, v8, v43);
        uint64_t v44 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v7 + *(int *)(v44 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v44 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatOsloSheetPurchaseDataModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for FormatPostPurchase();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C007B0C8(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for FormatURL();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 2, v10))
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v5, v6, *(void *)(v11 + 64));
      }
      else
      {
        uint64_t v12 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
        uint64_t v13 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v5[*(int *)(v13 + 20)] = *(void *)&v6[*(int *)(v13 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 2, v10);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for FormatOsloSheetPurchaseDataModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatPostPurchase();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v19 = type metadata accessor for FormatURL();
      uint64_t v20 = *(void *)(v19 - 8);
      int v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
      int v22 = v21(v8, 2, v19);
      int v23 = v21(v9, 2, v19);
      if (v22)
      {
        if (!v23)
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v8, v9, *(void *)(v20 + 64));
          }
          else
          {
            uint64_t v27 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v8, v9, v27);
            uint64_t v28 = type metadata accessor for FormatAbsoluteURL();
            *(void *)&v8[*(int *)(v28 + 20)] = *(void *)&v9[*(int *)(v28 + 20)];
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 2, v19);
          return a1;
        }
      }
      else
      {
        if (!v23)
        {
          if (a1 == a2) {
            return a1;
          }
          sub_1BFFAEF98((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatURL);
          if (!swift_getEnumCaseMultiPayload())
          {
            uint64_t v29 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v8, v9, v29);
            uint64_t v30 = type metadata accessor for FormatAbsoluteURL();
            *(void *)&v8[*(int *)(v30 + 20)] = *(void *)&v9[*(int *)(v30 + 20)];
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          size_t v18 = *(void *)(v20 + 64);
          goto LABEL_8;
        }
        sub_1BFFAEF98((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      size_t v18 = *(void *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v18);
      return a1;
    }
    sub_1BFFAEF98((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1C007B0C8(0);
    size_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
    goto LABEL_8;
  }
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for FormatURL();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 2, v15))
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(v16 + 64));
    }
    else
    {
      uint64_t v24 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v8, v9, v24);
      uint64_t v25 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v8[*(int *)(v25 + 20)] = *(void *)&v9[*(int *)(v25 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatOsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E9E618);
}

uint64_t sub_1C0E9E618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C007B0C8(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatOsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E9E6DC);
}

uint64_t sub_1C0E9E6DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C007B0C8(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OsloSheetPurchaseDataModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for FormatPostPurchaseData();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1C0073BBC(0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1C1515FDC();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for OsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatPostPurchaseData();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v4, 2, v7);
    if (!result)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
      return v8(v4, v7);
    }
  }
  return result;
}

void *initializeWithCopy for OsloSheetPurchaseDataModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for FormatPostPurchaseData();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1C0073BBC(0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 2, v12))
    {
      memcpy(v6, v7, *(void *)(v9 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v6, v7, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 2, v12);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for OsloSheetPurchaseDataModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FormatPostPurchaseData();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v18 = sub_1C1515FDC();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
      int v21 = v20(v7, 2, v18);
      int v22 = v20(v8, 2, v18);
      if (v21)
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v8, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v7, 0, 2, v18);
          return a1;
        }
      }
      else
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v7, v8, v18);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
      }
      size_t v17 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1BFFAEF98((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatPostPurchaseData);
LABEL_7:
    sub_1C0073BBC(0);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v17);
    return a1;
  }
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = sub_1C1515FDC();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for OsloSheetPurchaseDataModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for FormatPostPurchaseData();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C0073BBC(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 2, v10))
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v5, v6, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 2, v10);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for OsloSheetPurchaseDataModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatPostPurchaseData();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v19 = sub_1C1515FDC();
      uint64_t v20 = *(void *)(v19 - 8);
      int v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
      int v22 = v21(v8, 2, v19);
      int v23 = v21(v9, 2, v19);
      if (v22)
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v8, v9, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 2, v19);
          return a1;
        }
      }
      else
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v8, v9, v19);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
      }
      size_t v18 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1BFFAEF98((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatPostPurchaseData);
LABEL_7:
    sub_1C0073BBC(0);
    size_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v18);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 2, v15))
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E9F4B8);
}

uint64_t sub_1C0E9F4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1C0073BBC(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for OsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E9F588);
}

uint64_t sub_1C0E9F588(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    sub_1C0073BBC(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *type metadata accessor for OsloSheetPurchaseDataModelPurchaseID()
{
  return &type metadata for OsloSheetPurchaseDataModelPurchaseID;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPurchaseData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        sub_1BFFEBC54(0, &qword_1EB87BBB8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        uint64_t v23 = *(int *)(v17 + 20);
        __dst = (char *)a1 + v23;
        uint64_t v24 = (char *)a2 + v23;
        uint64_t v25 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v26 = *(void *)(v25 - 8);
        uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        swift_bridgeObjectRetain();
        if (v27(v24, 1, v25))
        {
          sub_1C0073BBC(0);
          memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v29 = sub_1C1515FDC();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v24, 2, v29))
          {
            memcpy(__dst, v24, *(void *)(v26 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v24, v29);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 2, v29);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      goto LABEL_22;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1C0073BBC(0);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v20 = sub_1C1515FDC();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 2, v20))
        {
          memcpy(v10, v11, *(void *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v10, v11, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v10, 0, 2, v20);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for FormatPurchaseData(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v4 = type metadata accessor for FormatPurchaseLandingPageData();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = *(int *)(v4 + 20);
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
  }
  uint64_t v5 = a1 + v3;
  uint64_t v6 = type metadata accessor for FormatPostPurchaseData();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 2, v7);
    if (!result)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
      return v8(v5, v7);
    }
  }
  return result;
}

void *initializeWithCopy for FormatPurchaseData(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
    {
      sub_1BFFEBC54(0, &qword_1EB87BBB8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      uint64_t v21 = *(int *)(v15 + 20);
      __dst = (char *)a1 + v21;
      uint64_t v22 = (char *)a2 + v21;
      uint64_t v23 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        sub_1C0073BBC(0);
        memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v27 = sub_1C1515FDC();
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 2, v27))
        {
          memcpy(__dst, v22, *(void *)(v24 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v22, v27);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 2, v27);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
    }
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1C0073BBC(0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_1C1515FDC();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 2, v18))
      {
        memcpy(v9, v10, *(void *)(v12 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v9, v10, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v9, 0, 2, v18);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
LABEL_20:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for FormatPurchaseData(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFFAEF98((uint64_t)a1, type metadata accessor for FormatPurchaseData);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        sub_1BFFEBC54(0, &qword_1EB87BBB8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v19 = *(int *)(v14 + 20);
        __dst = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        if (v23(v20, 1, v21))
        {
          sub_1C0073BBC(0);
          memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v25 = sub_1C1515FDC();
          uint64_t v26 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 2, v25))
          {
            memcpy(__dst, v20, *(void *)(v22 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v20, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 2, v25);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      goto LABEL_21;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v9, 1, v10))
      {
        sub_1C0073BBC(0);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_1C1515FDC();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 2, v17))
        {
          memcpy(v8, v9, *(void *)(v11 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v8, v9, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v8, 0, 2, v17);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for FormatPurchaseData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for FormatPurchaseLandingPageData();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
    {
      sub_1BFFEBC54(0, &qword_1EB87BBB8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v18 = *(int *)(v13 + 20);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1C0073BBC(0);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_1C1515FDC();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 2, v24))
        {
          memcpy(v19, v20, *(void *)(v22 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v19, v20, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v19, 0, 2, v24);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
    }
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for FormatPostPurchaseData();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1C0073BBC(0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1C1515FDC();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 2, v16))
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 2, v16);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
LABEL_20:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatPurchaseData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFFAEF98((uint64_t)a1, type metadata accessor for FormatPurchaseData);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        sub_1BFFEBC54(0, &qword_1EB87BBB8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v18 = *(int *)(v13 + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_1C0073BBC(0);
          memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v24 = sub_1C1515FDC();
          uint64_t v25 = *(void *)(v24 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 2, v24))
          {
            memcpy(v19, v20, *(void *)(v22 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v19, v20, v24);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v19, 0, 2, v24);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      goto LABEL_21;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_1C0073BBC(0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v16 = sub_1C1515FDC();
        uint64_t v17 = *(void *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 2, v16))
        {
          memcpy(v8, v9, *(void *)(v11 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 2, v16);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1C0EA0FD4(uint64_t a1)
{
  sub_1C0CE88BC(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EA1824(a1, (uint64_t)v4, (uint64_t (*)(void))sub_1C0CE88BC);
  uint64_t v5 = type metadata accessor for FormatPurchaseData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFFEBC54(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    long long v32 = xmmword_1C1529AE0;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFFEBC54(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v6);
    sub_1C0181BEC(0);
    unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v32;
    uint64_t v11 = (void *)(v10 + v9);
    uint64_t v12 = v11;
    uint64_t v13 = 1701736270;
    uint64_t v14 = 0xE400000000000000;
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1BFFAEF98((uint64_t)v4, type metadata accessor for FormatPurchaseData);
        uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFFEBC54(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        long long v32 = xmmword_1C1529AE0;
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        sub_1BFFEBC54(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v24);
        sub_1C0181BEC(0);
        unint64_t v26 = (*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = v32;
        uint64_t v11 = (void *)(v10 + v26);
        uint64_t v12 = v11;
        uint64_t v13 = 0x20676E69646E614CLL;
        uint64_t v14 = 0xEC00000065676150;
        break;
      case 2u:
        uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFFEBC54(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        long long v32 = xmmword_1C1529AE0;
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        sub_1BFFEBC54(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v18);
        sub_1C0181BEC(0);
        unint64_t v20 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = v32;
        uint64_t v11 = (void *)(v10 + v20);
        uint64_t v14 = 0x80000001C162C940;
        uint64_t v12 = v11;
        uint64_t v13 = 0xD000000000000012;
        break;
      case 3u:
        uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFFEBC54(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        long long v32 = xmmword_1C1529AE0;
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        sub_1BFFEBC54(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v21);
        sub_1C0181BEC(0);
        unint64_t v23 = (*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = v32;
        uint64_t v11 = (void *)(v10 + v23);
        uint64_t v12 = v11;
        uint64_t v13 = 0x6565685320534D41;
        uint64_t v14 = 0xE900000000000074;
        break;
      default:
        sub_1BFFAEF98((uint64_t)v4, type metadata accessor for FormatPurchaseData);
        uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFFEBC54(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        long long v32 = xmmword_1C1529AE0;
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        sub_1BFFEBC54(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v15);
        sub_1C0181BEC(0);
        unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = v32;
        uint64_t v11 = (void *)(v10 + v17);
        uint64_t v12 = v11;
        uint64_t v13 = 0x656853206F6C734FLL;
        uint64_t v14 = 0xEA00000000007465;
        break;
    }
  }
  sub_1C0433600(1701869908, 0xE400000000000000, v13, v14, v12);
  uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 0, 1, v27);
  sub_1C09BCFA4(0x6573616863727550, 0xED00006174614420, 0, 0, v10, v33);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v28 = swift_allocObject();
  *(void *)(inited + 32) = v28;
  *(void *)(v28 + 48) = v34;
  long long v29 = v33[1];
  *(_OWORD *)(v28 + 16) = v33[0];
  *(_OWORD *)(v28 + 32) = v29;
  uint64_t v30 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v30;
}

uint64_t sub_1C0EA1824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0EA188C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0EA18D4()
{
  if (!qword_1EA19B310)
  {
    sub_1C007B0C8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19B310);
    }
  }
}

uint64_t sub_1C0EA1938(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void destroy for FormatGroupNodeMaskData(uint64_t a1)
{
}

uint64_t initializeWithCopy for FormatGroupNodeMaskData(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1C00364B0(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for FormatGroupNodeMaskData(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1C00364B0(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1C0036570(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeMaskData(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1C0036570(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupNodeMaskData()
{
  return &type metadata for FormatGroupNodeMaskData;
}

uint64_t static ContextMenuItem.Puzzles.resetPuzzleProgress(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB885450 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EA194AB8;
  swift_retain();
  swift_unknownObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EA1AA308;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v10[1] = a1;
  sub_1C151A81C();
  swift_allocObject();
  id v8 = v7;
  return sub_1C151A7FC();
}

uint64_t static ContextMenuItem.Puzzles.setStreakEligible(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8848B8 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EA194AC0;
  swift_retain();
  swift_unknownObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EA1AA310;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v10[1] = a1;
  sub_1C151A81C();
  swift_allocObject();
  id v8 = v7;
  return sub_1C151A7FC();
}

uint64_t static UIActivityType.openPuzzleFullArchive.getter()
{
  return sub_1C151E5EC();
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleL9Providing_p_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v24 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = MEMORY[0x1F4188790](v6).n128_u64[0];
  uint64_t v9 = (char *)&v23 - v8;
  id v10 = objc_msgSend(a1, sel_identifier, v7);
  if (!v10)
  {
    sub_1C151E62C();
    id v10 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v11 = objc_msgSend(self, sel_nss_NewsURLForFullArchivePuzzleTypeID_, v10);

  sub_1C1515F1C();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1BFFDEB20();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  id v15 = objc_msgSend(a1, sel_name);
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = sub_1BFE9C558();
  *(void *)(v14 + 32) = v16;
  *(void *)(v14 + 40) = v18;
  sub_1C151E66C();
  swift_bridgeObjectRelease();
  if (qword_1EB87B130 != -1) {
    swift_once();
  }
  uint64_t v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v24);
  swift_retain();
  sub_1C151E5EC();
  if (qword_1EA194A60 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EA1AA2C8;
  sub_1C151B39C();
  sub_1C151A9FC();
  swift_allocObject();
  uint64_t v21 = sub_1C151A9EC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v19);
  return v21;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleN9Providing_p_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  double v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = MEMORY[0x1F4188790](v8).n128_u64[0];
  id v11 = (char *)&v27 - v10;
  id v12 = objc_msgSend(a1, sel_identifier, v9);
  if (!v12)
  {
    sub_1C151E62C();
    id v12 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v13 = objc_msgSend(self, sel_nss_NewsURLForFullArchivePuzzleTypeID_, v12);

  sub_1C1515F1C();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1BFFDEB20();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
  id v17 = objc_msgSend(a1, sel_name);
  uint64_t v18 = sub_1C151E62C();
  uint64_t v20 = v19;

  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = sub_1BFE9C558();
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  sub_1C151E66C();
  swift_bridgeObjectRelease();
  if (qword_1EB87B130 != -1) {
    swift_once();
  }
  uint64_t v21 = v30;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v30);
  uint64_t v22 = qword_1EA194A60;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)qword_1EA1AA2C8;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v4, *MEMORY[0x1E4FAC3E0], v29);
  sub_1C151A81C();
  swift_allocObject();
  id v24 = v23;
  uint64_t v25 = sub_1C151A7FC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v21);
  return v25;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV04moreH06puzzleACSgSo17FCPuzzleProviding_p_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB864528 != -1) {
    swift_once();
  }
  swift_retain();
  id v8 = objc_msgSend(a1, sel_puzzleType);
  if (qword_1EB86FD20 != -1) {
    swift_once();
  }
  double v9 = (void *)qword_1EB86FD18;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v12[1] = v8;
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

ValueMetadata *type metadata accessor for Commands.FeedPuzzles()
{
  return &type metadata for Commands.FeedPuzzles;
}

ValueMetadata *type metadata accessor for Commands.Puzzles()
{
  return &type metadata for Commands.Puzzles;
}

ValueMetadata *type metadata accessor for ContextMenuItem.Puzzles()
{
  return &type metadata for ContextMenuItem.Puzzles;
}

uint64_t sub_1C0EA29AC(char a1)
{
  uint64_t result = 0x656D6167657270;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6576694C7261656ELL;
      break;
    case 2:
      uint64_t result = 0x6572676F72506E69;
      break;
    case 3:
      uint64_t result = 0x6B61657262;
      break;
    case 4:
      uint64_t result = 0x656E6F7074736F70;
      break;
    case 5:
      uint64_t result = 0x65646E6570737573;
      break;
    case 6:
      uint64_t result = 0x656C6C65636E6163;
      break;
    case 7:
      uint64_t result = 0x646579616C6564;
      break;
    case 8:
      uint64_t result = 0x6C616E6966;
      break;
    case 9:
      uint64_t result = 0x74696566726F66;
      break;
    case 10:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0EA2AF0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C0EA29AC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0EA29AC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0EA2B7C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0EA29AC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0EA2BE0()
{
  sub_1C0EA29AC(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0EA2C34()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0EA29AC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0EA2C94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0EA3198();
  *a1 = result;
  return result;
}

uint64_t sub_1C0EA2CC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0EA29AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0EA2CF0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0EA2D50()
{
  return sub_1C151EAEC();
}

void sub_1C0EA2DA0(void *a1@<X8>)
{
  *a1 = &unk_1F1B63E30;
}

BOOL sub_1C0EA2DB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = sub_1C0295B58(*a1, (uint64_t)&unk_1F1B63E30);
  if (v4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v3;
  }
  uint64_t v6 = sub_1C0295B58(v2, (uint64_t)&unk_1F1B63E30);
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6;
  }
  return v5 < v8;
}

unsigned char *storeEnumTagSinglePayload for SportsDataConfigurationEventStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0EA2EDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfigurationEventStatus()
{
  return &type metadata for SportsDataConfigurationEventStatus;
}

unint64_t sub_1C0EA2F18()
{
  unint64_t result = qword_1EB86A080;
  if (!qword_1EB86A080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A080);
  }
  return result;
}

BOOL sub_1C0EA2F6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a1;
  uint64_t v3 = sub_1C0295B58(*a2, (uint64_t)&unk_1F1B63E30);
  if (v4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v3;
  }
  uint64_t v6 = sub_1C0295B58(v2, (uint64_t)&unk_1F1B63E30);
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6;
  }
  return v5 >= v8;
}

BOOL sub_1C0EA2FD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = sub_1C0295B58(*a1, (uint64_t)&unk_1F1B63E30);
  if (v4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v3;
  }
  uint64_t v6 = sub_1C0295B58(v2, (uint64_t)&unk_1F1B63E30);
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6;
  }
  return v5 >= v8;
}

BOOL sub_1C0EA3030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = sub_1C0295B58(*a1, (uint64_t)&unk_1F1B63E30);
  if (v4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v3;
  }
  uint64_t v6 = sub_1C0295B58(v2, (uint64_t)&unk_1F1B63E30);
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6;
  }
  return v8 < v5;
}

unint64_t sub_1C0EA3094()
{
  unint64_t result = qword_1EA1A8170;
  if (!qword_1EA1A8170)
  {
    sub_1C0EA30EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8170);
  }
  return result;
}

void sub_1C0EA30EC()
{
  if (!qword_1EA1A8178)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8178);
    }
  }
}

unint64_t sub_1C0EA3144()
{
  unint64_t result = qword_1EB86A088;
  if (!qword_1EB86A088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A088);
  }
  return result;
}

uint64_t sub_1C0EA3198()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t static FormatLayeredMediaNodeContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 < 0)
  {
    if (v3 < 0)
    {
      uint64_t v5 = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v6 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v7 = *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)(v6 + 24);
      v12[0] = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      v12[1] = v5;
      v11[0] = v7;
      v11[1] = v8;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatLayeredMediaNodeContent.== infix(_:_:)(v12, v11))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v9 = sub_1C00E2E3C(v5, v8);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return (v9 & 1) != 0;
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    char v4 = *(unsigned char *)(v3 + 16);
    if (*(unsigned char *)(v2 + 16)) {
      return (v4 & 1) != 0;
    }
    if ((v4 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t FormatLayeredMediaNodeContent.layeredMedia(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  if (*v2 < 0)
  {
    uint64_t v7 = v5 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v8 = *(void *)(v7 + 16);
    uint64_t v9 = *(void *)(v7 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C027244C(v10, a1, v8, v9);
    uint64_t v11 = v10[0];
    FormatLayeredMediaNodeContent.layeredMedia(from:)(a1);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(v11) = *(unsigned char *)(v5 + 16);
    v10[3] = type metadata accessor for FormatNodeContext();
    v10[4] = &off_1F1BFC148;
    v10[0] = a1;
    swift_retain();
    sub_1C003F530(v10, a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
}

uint64_t sub_1C0EA3450(void *a1)
{
  return FormatLayeredMediaNodeContent.encode(to:)(a1);
}

unint64_t sub_1C0EA346C(uint64_t a1)
{
  unint64_t result = sub_1C0896950();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EA3494(void *a1)
{
  a1[1] = sub_1C006AD7C();
  a1[2] = sub_1C08F6EDC();
  unint64_t result = sub_1C0EA34CC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EA34CC()
{
  unint64_t result = qword_1EA1A8180;
  if (!qword_1EA1A8180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8180);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeContent()
{
  return &type metadata for FormatLayeredMediaNodeContent;
}

uint64_t FeedContextFactoryType.createFeedContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 8))(MEMORY[0x1E4FBC870], a1, a2);
}

void *FeedContextFactory.__allocating_init(paidBundleConfigManager:paidAccessChecker:bundleSubscriptionManager:bundleSessionManager:featureAvailability:appConfigManager:platform:userInfo:)(long long *a1, uint64_t a2, uint64_t a3, long long *a4, long long *a5, long long *a6, uint64_t *a7, long long *a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v18 = *a7;
  uint64_t v17 = a7[1];
  sub_1BFC773DC(a1, (uint64_t)(v16 + 2));
  v16[7] = a2;
  v16[8] = a3;
  sub_1BFC773DC(a4, (uint64_t)(v16 + 9));
  sub_1BFC773DC(a5, (uint64_t)(v16 + 14));
  sub_1BFC773DC(a6, (uint64_t)(v16 + 19));
  v16[24] = v18;
  v16[25] = v17;
  sub_1BFC773DC(a8, (uint64_t)(v16 + 26));
  return v16;
}

void *FeedContextFactory.init(paidBundleConfigManager:paidAccessChecker:bundleSubscriptionManager:bundleSessionManager:featureAvailability:appConfigManager:platform:userInfo:)(long long *a1, uint64_t a2, uint64_t a3, long long *a4, long long *a5, long long *a6, uint64_t *a7, long long *a8)
{
  uint64_t v15 = *a7;
  uint64_t v16 = a7[1];
  sub_1BFC773DC(a1, (uint64_t)(v8 + 2));
  v8[7] = a2;
  v8[8] = a3;
  sub_1BFC773DC(a4, (uint64_t)(v8 + 9));
  sub_1BFC773DC(a5, (uint64_t)(v8 + 14));
  sub_1BFC773DC(a6, (uint64_t)(v8 + 19));
  v8[24] = v15;
  v8[25] = v16;
  sub_1BFC773DC(a8, (uint64_t)(v8 + 26));
  return v8;
}

uint64_t FeedContextFactory.createFeedContext(selectors:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unsigned __int8 v3 = 0;
  return sub_1C0EA36D8(a1, &v3, a2);
}

uint64_t sub_1C0EA36D8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  char v4 = v3;
  uint64_t v60 = a1;
  uint64_t v64 = a3;
  uint64_t v61 = *v4;
  uint64_t v6 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v56[-v10];
  sub_1C02DE94C(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v65 = &v56[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v56[-v15];
  int v62 = *a2;
  uint64_t v17 = v4[5];
  uint64_t v18 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v17);
  uint64_t v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  uint64_t v66 = (char *)objc_msgSend((id)v4[8], sel_cachedSubscription);
  uint64_t v21 = v4[12];
  uint64_t v20 = v4[13];
  __swift_project_boxed_opaque_existential_1(v4 + 9, v21);
  (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v21, v20);
  sub_1C0EA3EE0((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v23 = type metadata accessor for BundleSession();
    uint64_t v22 = (uint64_t)v16;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 1, 1, v23);
  }
  else
  {
    uint64_t v22 = (uint64_t)v16;
    sub_1C0EA3E7C((uint64_t)v8, (uint64_t)v16);
  }
  sub_1C0EA3F48((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  id v24 = v66;
  unsigned int v25 = objc_msgSend(v66, sel_isSubscribed);
  unint64_t v26 = &selRef_isFreeBadgeEnabledForSubscribers;
  if (!v25) {
    unint64_t v26 = &selRef_isFreeBadgeEnabledForNonSubscribers;
  }
  unsigned int v27 = [v19 *v26];
  unsigned int v28 = objc_msgSend(v24, sel_isSubscribed);
  uint64_t v29 = &selRef_isPaidBadgeEnabledForSubscribers;
  if (!v28) {
    uint64_t v29 = &selRef_isPaidBadgeEnabledForNonSubscribers;
  }
  unsigned int v30 = [v19 *v29];
  id v31 = objc_msgSend(self, sel_mainBundle);
  id v32 = objc_msgSend(v31, sel_bundleIdentifier);

  id v63 = v19;
  unsigned int v59 = v27;
  unsigned int v58 = v30;
  if (!v32)
  {
    int v37 = 0;
    char v36 = v65;
    goto LABEL_15;
  }
  uint64_t v33 = sub_1C151E62C();
  uint64_t v35 = v34;

  if (v33 == 0xD000000000000010 && v35 == 0x80000001C1629830)
  {
    swift_bridgeObjectRelease();
    char v36 = v65;
  }
  else
  {
    char v38 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    int v37 = 0;
    char v36 = v65;
    if ((v38 & 1) == 0) {
      goto LABEL_15;
    }
  }
  uint64_t v39 = v4[17];
  uint64_t v40 = v4[18];
  __swift_project_boxed_opaque_existential_1(v4 + 14, v39);
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 32))(v39, v40);
LABEL_15:
  int v57 = v37;
  uint64_t v73 = v60;
  uint64_t v41 = v4[17];
  uint64_t v42 = v4[18];
  __swift_project_boxed_opaque_existential_1(v4 + 14, v41);
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 184);
  swift_bridgeObjectRetain();
  if (v43(v41, v42))
  {
    sub_1BFEFFC1C(&v67, 0xD000000000000016, 0x80000001C1625E80);
    swift_bridgeObjectRelease();
  }
  uint64_t v60 = v22;
  sub_1C0EA3EE0(v22, (uint64_t)v36, (uint64_t (*)(void))sub_1C02DE94C);
  if (qword_1EB87AF20 != -1) {
    swift_once();
  }
  sub_1BFFBE430();
  sub_1C1516FBC();
  LODWORD(v61) = v72;
  uint64_t v45 = v4[22];
  uint64_t v44 = v4[23];
  __swift_project_boxed_opaque_existential_1(v4 + 19, v45);
  uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v45, v44);
  uint64_t v48 = v4[25];
  v71[0] = v4[24];
  uint64_t v47 = v71[0];
  v71[1] = v48;
  uint64_t v49 = v4[22];
  uint64_t v50 = v4[23];
  __swift_project_boxed_opaque_existential_1(v4 + 19, v49);
  unint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 16);
  sub_1BFE40340(v47, v48);
  uint64_t v52 = v51(v49, v50);
  uint64_t v53 = v4[22];
  uint64_t v54 = v4[23];
  __swift_project_boxed_opaque_existential_1(v4 + 19, v53);
  (*(void (**)(__n128 *__return_ptr, uint64_t, uint64_t))(v54 + 24))(&v70, v53, v54);
  __n128 v69 = v70;
  unsigned __int8 v68 = v62;
  sub_1BFC66384((uint64_t)(v4 + 26), (uint64_t)&v67);
  FeedContext.init(subscription:bundleSession:displayFreeBadges:displayPremiumBadges:debugForcePremiumBadging:segmentSetIds:platform:allowsNewsProxyAudioCommands:timesOfDayConfiguration:feedEditionConfig:feedMode:userInfo:selectors:)(v66, (uint64_t)v65, v59, v58, v61, v46, v71, v57 & 1, v64, v52, &v69, &v68, &v67, v73);

  return sub_1C0EA3F48(v60, (uint64_t (*)(void))sub_1C02DE94C);
}

uint64_t FeedContextFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  sub_1BFEE653C(*(void *)(v0 + 192), *(void *)(v0 + 200));
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  return v0;
}

uint64_t FeedContextFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  sub_1BFEE653C(*(void *)(v0 + 192), *(void *)(v0 + 200));
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0EA3E00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unsigned __int8 v3 = 0;
  return sub_1C0EA36D8(a1, &v3, a2);
}

uint64_t dispatch thunk of FeedContextFactoryType.createFeedContext(selectors:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeedContextFactoryType.createFeedContext<A>(serviceConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t method lookup function for FeedContextFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedContextFactory);
}

uint64_t dispatch thunk of FeedContextFactory.__allocating_init(paidBundleConfigManager:paidAccessChecker:bundleSubscriptionManager:bundleSessionManager:featureAvailability:appConfigManager:platform:userInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1C0EA3E7C(uint64_t a1, uint64_t a2)
{
  sub_1C02DE94C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0EA3EE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0EA3F48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0EA3FA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void **)((char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0EA438C(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = v8[2];
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      v13[1] = v9;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2u:
    case 3u:
      uint64_t v10 = *v8;
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      swift_getErrorValue();
      sub_1C1520D3C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();

LABEL_4:
      uint64_t v11 = v14;
      break;
    default:
      (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C03EE344();
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v11 = v14;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v11;
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataServiceError()
{
  uint64_t result = qword_1EA1A8188;
  if (!qword_1EA1A8188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0EA438C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_1C0EA43F0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        uint64_t v7 = sub_1C1515FDC();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        uint64_t v10 = *a2;
        uint64_t v11 = v10;
        *(void *)a1 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_1C0EA45BC(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      uint64_t v2 = sub_1C1515FDC();
      uint64_t v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
      v3(a1, v2);
      break;
    case 2u:
    case 3u:
      uint64_t v4 = *a1;

      break;
    default:
      return;
  }
}

void *sub_1C0EA4690(void *a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      uint64_t v8 = sub_1C1515FDC();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_5;
    case 2u:
    case 3u:
      uint64_t v6 = *a2;
      id v7 = v6;
      *a1 = v6;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_1C0EA480C(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0EA4998((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        uint64_t v8 = sub_1C1515FDC();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_6;
      case 2u:
      case 3u:
        uint64_t v6 = *a2;
        id v7 = v6;
        *a1 = v6;
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0EA4998(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C0EA49F4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 4 && EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C0EA4B00(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0EA4998((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 4 && EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0EA4C1C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C0EA4CBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v4);
  uint64_t v53 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v47 - v7;
  sub_1C0484C94(a1, (uint64_t)&v47 - v7);
  sub_1BFC66384((uint64_t)(v2 + 20), (uint64_t)v63);
  uint64_t v9 = sub_1C0EA556C((uint64_t)v8, v63);
  uint64_t v11 = v10;
  uint64_t v12 = v2[25];
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 16);
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1C1052590(v9, v11);
    if (v15)
    {
      uint64_t v16 = *(void **)(*(void *)(v13 + 56) + 8 * v14);
      swift_endAccess();
      uint64_t v17 = v16;
      swift_bridgeObjectRelease_n();
      if (qword_1EB87BF18 != -1) {
        swift_once();
      }
      uint64_t v18 = (void *)qword_1EB93C748;
      sub_1BFFDEB20();
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
      id v20 = v18;
      uint64_t v21 = sub_1C1515E2C();
      uint64_t v23 = v22;
      *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v19 + 64) = sub_1BFE9C558();
      *(void *)(v19 + 32) = v21;
      *(void *)(v19 + 40) = v23;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (uint64_t)v17;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v51 = v12 + 16;
  uint64_t v52 = v9;
  swift_endAccess();
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  uint64_t v50 = v2 + 20;
  id v24 = (void *)qword_1EB93C748;
  sub_1BFFDEB20();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  id v26 = v24;
  uint64_t v27 = sub_1C1515E2C();
  uint64_t v29 = v28;
  *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v25 + 64) = sub_1BFE9C558();
  *(void *)(v25 + 32) = v27;
  *(void *)(v25 + 40) = v29;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BFCB6824(0, &qword_1EB880760);
  uint64_t result = sub_1C151819C();
  if (!v62)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v49 = v12;
  sub_1BFC773DC(&v61, (uint64_t)v63);
  uint64_t v31 = MEMORY[0x1C18C9C60](v2 + 2);
  uint64_t v32 = v2[3];
  uint64_t v33 = v64;
  uint64_t v34 = v65;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v63, v64);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 16))(v31, v32, v33, v34);
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1C0080D68();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v35 = (void *)result;
  uint64_t v36 = v11;
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BFCB6824(0, &qword_1EB88EA10);
  uint64_t result = sub_1C151819C();
  if (!v60)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v48 = v35;
  sub_1BFC773DC(&v59, (uint64_t)&v61);
  sub_1C0484C94(a1, v53);
  sub_1BFC66384((uint64_t)v63, (uint64_t)&v59);
  sub_1BFC66384((uint64_t)(v2 + 9), (uint64_t)v58);
  uint64_t v37 = v2[14];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  swift_retain();
  uint64_t result = sub_1C151819C();
  uint64_t v38 = v56;
  if (!v56)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v39 = v57;
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BFC520B8();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v40 = result;
    sub_1BFC66384((uint64_t)v50, (uint64_t)v55);
    sub_1BFC66384((uint64_t)&v61, (uint64_t)v54);
    id v41 = objc_allocWithZone((Class)type metadata accessor for FormatVideoPlayerManager());
    swift_bridgeObjectRetain();
    id v42 = v48;
    uint64_t v43 = (char *)sub_1C0D915C0(v53, (uint64_t)&v59, (uint64_t)v58, v37, v38, v39, v40, (uint64_t)v55, v42, (uint64_t)v54, v52, v36);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();

    *(void *)&v43[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate + 8] = &off_1F1C02F70;
    uint64_t v44 = v49;
    swift_unknownObjectWeakAssign();
    __swift_project_boxed_opaque_existential_1(v2 + 15, v2[18]);
    sub_1C008E3E8(&qword_1EA1A81A0, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerManager);
    uint64_t v45 = v43;
    sub_1C1518B1C();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
    swift_beginAccess();
    uint64_t v17 = v45;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v58[0] = *(void *)(v44 + 16);
    *(void *)(v44 + 16) = 0x8000000000000000;
    sub_1C1067FA4((uint64_t)v17, v52, v36, isUniquelyReferenced_nonNull_native);
    *(void *)(v44 + 16) = v58[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    return (uint64_t)v17;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1C0EA5390()
{
  sub_1C019B9B4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for FormatVideoPlayerReuseManagerCacheKey()
{
  return &type metadata for FormatVideoPlayerReuseManagerCacheKey;
}

uint64_t sub_1C0EA5408()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0EA5464()
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0EA54BC()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0EA5518()
{
  unint64_t result = qword_1EA1A8198;
  if (!qword_1EA1A8198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8198);
  }
  return result;
}

uint64_t sub_1C0EA556C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v10 = sub_1C151AE1C();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    uint64_t v12 = *(void *)(a1 + 40);
    sub_1C0484C94(a1, (uint64_t)v6);
    if (!v12) {
      sub_1C1515E2C();
    }
    swift_bridgeObjectRetain();
    sub_1C0484CF8((uint64_t)v6);
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    id v15 = objc_msgSend(v11, sel_session);
    id v16 = objc_msgSend(v15, sel_persistentIdentifier);

    sub_1C151E62C();
    sub_1C151E80C();

    swift_bridgeObjectRelease();
    uint64_t v13 = v18[0];
  }
  else
  {
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 40);
    sub_1C0484C94(a1, (uint64_t)v9);
    if (!v14) {
      uint64_t v13 = sub_1C1515E2C();
    }
    swift_bridgeObjectRetain();
    sub_1C0484CF8((uint64_t)v9);
  }
  sub_1C0484CF8(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v13;
}

void sub_1C0EA577C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v42 = v5 + 64;
  uint64_t v43 = v5;
  int64_t v46 = v10;
  while (1)
  {
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_55;
        }
        if (v15 >= v10)
        {
LABEL_53:
          swift_release();
          return;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_53;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v11);
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_53;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v11);
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10) {
                goto LABEL_53;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_56;
                  }
                  if (v11 >= v10) {
                    goto LABEL_53;
                  }
                  unint64_t v16 = *(void *)(v6 + 8 * v11);
                  ++v17;
                  if (v16) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_22:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = (void *)(*(void *)(v5 + 48) + 16 * v14);
      if (*v18 != a1 || v18[1] != a2)
      {
        id v20 = *(char **)(*(void *)(v5 + 56) + 8 * v14);
        if ((sub_1C1520A9C() & 1) == 0) {
          break;
        }
      }
    }
    uint64_t v48 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
    uint64_t v21 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController];
    if (v21)
    {
      uint64_t v12 = v20;
      if (objc_msgSend(v21, sel_isPictureInPictureActive)) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v22 = v20;
    }
    uint64_t v47 = v20;
    uint64_t v23 = &v20[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate];
    uint64_t v24 = MEMORY[0x1C18C9C60](&v20[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate]);
    if (v24)
    {
      uint64_t v25 = v24;
      sub_1C151F91C();
      uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v27 = *(id *)(v26 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      swift_unknownObjectRelease();
    }
    uint64_t v28 = (void *)MEMORY[0x1C18C9C60](v23);
    if (v28) {
      break;
    }
LABEL_51:
    id v41 = *(void **)&v47[v48];
    if (v41)
    {
      objc_msgSend(v41, sel_pause);
      uint64_t v12 = *(char **)&v47[v48];
    }
    else
    {
      uint64_t v12 = 0;
    }
    int64_t v10 = v46;
    *(void *)&v47[v48] = 0;

LABEL_6:
  }
  id v29 = objc_msgSend(v28, sel_childViewControllers);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB880D40);
  unint64_t v30 = sub_1C151EBCC();

  if (!(v30 >> 62))
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31) {
      goto LABEL_37;
    }
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v31)
  {
LABEL_50:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v44;
    a2 = v45;
    uint64_t v6 = v42;
    uint64_t v5 = v43;
    goto LABEL_51;
  }
LABEL_37:
  uint64_t v32 = 4;
  while (1)
  {
    id v33 = (v30 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1C18C7CB0](v32 - 4, v30)
        : *(id *)(v30 + 8 * v32);
    uint64_t v34 = v33;
    uint64_t v35 = v32 - 3;
    if (__OFADD__(v32 - 4, 1)) {
      break;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v36 = objc_msgSend(v34, sel_view);
      if (!v36) {
        goto LABEL_57;
      }
      uint64_t v37 = v36;
      id v38 = objc_msgSend(v36, sel_constraints);

      if (!v38)
      {
        sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
        sub_1C151EBCC();
        id v38 = (id)sub_1C151EBAC();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(self, sel_deactivateConstraints_, v38);

      objc_msgSend(v34, sel_willMoveToParentViewController_, 0);
      id v39 = objc_msgSend(v34, sel_view);
      if (!v39) {
        goto LABEL_58;
      }
      uint64_t v40 = v39;
      objc_msgSend(v39, sel_removeFromSuperview);

      objc_msgSend(v34, sel_removeFromParentViewController);
    }

    ++v32;
    if (v35 == v31) {
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
}

uint64_t static JSONEncoder.NonConformingFloatEncodingStrategy.formatNonConformingFloatEncoding.getter@<X0>(void *a1@<X8>)
{
  *a1 = 0x7974696E69666E69;
  a1[1] = 0xE800000000000000;
  a1[2] = 0x74696E69666E692DLL;
  a1[3] = 0xE900000000000079;
  a1[4] = 7233902;
  a1[5] = 0xE300000000000000;
  uint64_t v2 = *MEMORY[0x1E4F26D30];
  uint64_t v3 = sub_1C151531C();
  uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t FormatJSONEncoder.__allocating_init()()
{
  return sub_1C0EA5D40(MEMORY[0x1E4FBC860]);
}

uint64_t sub_1C0EA5D40(uint64_t a1)
{
  sub_1C0EA6440();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v50 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v47 - v5;
  uint64_t v7 = sub_1C152039C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  uint64_t v52 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v49 = (char *)&v47 - v11;
  uint64_t v12 = sub_1C151531C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  int64_t v15 = (char **)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_1C15152FC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char **)((char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1C151535C();
  *uint64_t v19 = sub_1C0EA6238;
  v19[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4F26D08], v16);
  swift_retain();
  sub_1C151530C();
  *int64_t v15 = 0x7974696E69666E69;
  v15[1] = 0xE800000000000000;
  v15[2] = 0x74696E69666E692DLL;
  v15[3] = 0xE900000000000079;
  v15[4] = 7233902;
  v15[5] = 0xE300000000000000;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F26D30], v12);
  sub_1C151532C();
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v48 = a1;
  if (v21)
  {
    uint64_t v22 = (unsigned __int8 *)(a1 + 32);
    uint64_t v23 = v21 - 1;
    do
    {
      int v24 = *v22++;
      BOOL v25 = v24 == 0;
      if (v24) {
        BOOL v26 = v23 == 0;
      }
      else {
        BOOL v26 = 1;
      }
      --v23;
    }
    while (!v26);
  }
  else
  {
    BOOL v25 = 0;
  }
  uint64_t v27 = v51;
  uint64_t v28 = v52;
  id v29 = (void (*)(unsigned char *, void))sub_1C151534C();
  sub_1C152038C();
  unint64_t v30 = v6;
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t result = v31(v6, 1, v27);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v33 = v28 + 32;
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v35 = (uint64_t)v49;
    uint64_t v52 = v33;
    v34(v49, v30, v27);
    uint64_t v36 = MEMORY[0x1E4FBB390];
    uint64_t v54 = MEMORY[0x1E4FBB390];
    v53[0] = v25;
    sub_1C02E79E0((uint64_t)v53, v35);
    v29(v55, 0);
    uint64_t v37 = *(void *)(v48 + 16);
    if (v37)
    {
      id v38 = (unsigned __int8 *)(v48 + 32);
      uint64_t v39 = v37 - 1;
      do
      {
        int v40 = *v38++;
        BOOL v41 = v40 == 1;
      }
      while (v40 != 1 && v39-- != 0);
    }
    else
    {
      BOOL v41 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v43 = (void (*)(unsigned char *, void))sub_1C151534C();
    uint64_t v44 = v50;
    sub_1C152038C();
    uint64_t v45 = v51;
    uint64_t result = v31(v44, 1, v51);
    if (result != 1)
    {
      uint64_t v46 = (uint64_t)v47;
      v34(v47, v44, v45);
      uint64_t v54 = v36;
      v53[0] = v41;
      sub_1C02E79E0((uint64_t)v53, v46);
      v43(v55, 0);
      swift_release();
      return v20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EA6238(uint64_t a1, void *a2)
{
  if (qword_1EB882038 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EB93C7C8;
  uint64_t v4 = (void *)sub_1C151621C();
  id v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  sub_1C151E62C();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C1520EEC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
  sub_1C1520AFC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t FormatJSONEncoder.__deallocating_deinit()
{
  _s8NewsFeed0B13ConfigEncoderCfd_0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatJSONEncoder()
{
  uint64_t result = qword_1EA1A81A8;
  if (!qword_1EA1A81A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0EA63E0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FormatJSONEncoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatJSONEncoder);
}

uint64_t sub_1C0EA6438()
{
  return type metadata accessor for FormatJSONEncoder();
}

void sub_1C0EA6440()
{
  if (!qword_1EB87A390)
  {
    sub_1C152039C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A390);
    }
  }
}

uint64_t dispatch thunk of FormatPluginEventDelegate.select(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FormatPluginEventDelegate.preview(for:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FormatPluginEventDelegate.sender(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1C0EA64D4()
{
  sub_1C019B9B4(v0 + 16);
  sub_1C019B9B4(v0 + 32);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatEventHandler()
{
  return self;
}

uint64_t sub_1C0EA6550(uint64_t a1)
{
  uint64_t result = MEMORY[0x1C18C9C60](a1 + 16);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    uint64_t v4 = (void *)swift_allocObject();
    v4[2] = v2;
    v4[3] = sub_1C0EA666C;
    v4[4] = v3;
    swift_unknownObjectRetain_n();
    swift_retain();
    sub_1C151950C();
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0EA6634()
{
  return swift_deallocObject();
}

uint64_t sub_1C0EA666C(double a1, double a2)
{
  return sub_1C1270C88(*(void *)(v2 + 16), a1, a2);
}

uint64_t sub_1C0EA6674()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0EA66B4()
{
  return sub_1C12700E4(*(void *)(v0 + 16), *(uint64_t (**)(double, double))(v0 + 24));
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.analyticsDataProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.analyticsDataProvider.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.analyticsDataProvider.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.initiatePlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.startPlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.pausePlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.resumePlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.playbackFailed(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.playbackCompleted(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.startPictureInPicture(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.endPictureInPicture(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.startSessionIfNeeded(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.endSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t type metadata accessor for FormatVideoPlayerCoordinator()
{
  return self;
}

uint64_t sub_1C0EA67E8()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v1 + 16);
}

uint64_t sub_1C0EA6834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  swift_beginAccess();
  *(void *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1C0EA689C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  v3[5] = *v1;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C18C9C60](v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  v3[3] = v5;
  v3[4] = v6;
  return sub_1C0AB2944;
}

void sub_1C0EA6920()
{
  id v1 = objc_msgSend(v0, sel_subviews);
  sub_1C0063B40();
  unint64_t v2 = sub_1C151EBCC();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1C18C7CB0](i, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_removeFromSuperview);
  }
LABEL_10:
  uint64_t v7 = swift_bridgeObjectRelease();
  MEMORY[0x1C18C4390](v7);
  uint64_t v8 = (void *)sub_1C151C84C();
}

uint64_t type metadata accessor for ReusableContainerView()
{
  return self;
}

void sub_1C0EA6BE8()
{
}

void sub_1C0EA6C0C()
{
  sub_1C0EA6C98(&qword_1EA1A81C8);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C0EA6C64()
{
  return sub_1C0EA6C98(&qword_1EA1A81C0);
}

uint64_t sub_1C0EA6C98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ReusableContainerView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatPlaceholder.init(identifier:passthrough:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

uint64_t FormatPlaceholder.passthrough.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t static FormatPlaceholder.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_1C1520A9C();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t sub_1C0EA6D4C(uint64_t a1)
{
  int v2 = v1;
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (*(void *)(v3 + 16))
  {
    uint64_t v6 = *v2;
    uint64_t v5 = v2[1];
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1BFEF2D8C(v6, v5);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(v3 + 56) + 24 * v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1C05F8214(0, v10, 0);
        uint64_t v11 = (_OWORD *)(v9 + 80);
        do
        {
          uint64_t v12 = *((void *)v11 - 5);
          uint64_t v14 = *((void *)v11 - 4);
          uint64_t v13 = *((void *)v11 - 3);
          uint64_t v16 = *((void *)v11 - 2);
          uint64_t v15 = *((void *)v11 - 1);
          long long v23 = *v11;
          unint64_t v18 = *(void *)(v4 + 16);
          unint64_t v17 = *(void *)(v4 + 24);
          uint64_t v21 = *((void *)v11 - 6);
          int64_t v22 = v18 + 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v18 >= v17 >> 1) {
            sub_1C05F8214(v17 > 1, v22, 1);
          }
          *(void *)(v4 + 16) = v22;
          uint64_t v19 = v4 + (v18 << 6);
          *(void *)(v19 + 32) = v21;
          *(void *)(v19 + 40) = v12;
          *(_OWORD *)(v19 + 48) = v23;
          *(void *)(v19 + 64) = v14;
          *(void *)(v19 + 72) = v16;
          v11 += 4;
          *(void *)(v19 + 80) = v13;
          *(void *)(v19 + 88) = v15;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t FormatPlaceholder.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPlaceholder.passthrough.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*FormatPlaceholder.passthrough.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0EA6F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0EA7450(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0EA6F90(uint64_t a1)
{
  unint64_t v2 = sub_1BFCDF62C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0EA6FCC(uint64_t a1)
{
  unint64_t v2 = sub_1BFCDF62C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatPlaceholder.encode(to:)(void *a1)
{
  sub_1BFCDF5C8(0, &qword_1EB85E130, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v13 - v6;
  int v14 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1BFCDF62C();
  sub_1C1520F0C();
  char v17 = 0;
  sub_1C15207CC();
  if (!v2 && v14)
  {
    char v16 = 1;
    char v15 = 1;
    sub_1C0EA71B4();
    sub_1C1520BAC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_1C0EA71B4()
{
  unint64_t result = qword_1EB86B8C8;
  if (!qword_1EB86B8C8)
  {
    sub_1BFCDF5C8(255, &qword_1EB85E130, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B8C8);
  }
  return result;
}

unint64_t sub_1C0EA7228(void *a1)
{
  a1[1] = sub_1BFE38DB4();
  a1[2] = sub_1C065290C();
  unint64_t result = sub_1C0EA7260();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EA7260()
{
  unint64_t result = qword_1EA1A81D0;
  if (!qword_1EA1A81D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A81D0);
  }
  return result;
}

uint64_t sub_1C0EA72B4(void *a1)
{
  return FormatPlaceholder.encode(to:)(a1);
}

uint64_t sub_1C0EA72CC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 16);
  return result;
}

unsigned char *sub_1C0EA72D8(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatPlaceholder()
{
  return &type metadata for FormatPlaceholder;
}

unsigned char *storeEnumTagSinglePayload for FormatPlaceholder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0EA73C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPlaceholder.CodingKeys()
{
  return &type metadata for FormatPlaceholder.CodingKeys;
}

unint64_t sub_1C0EA73FC()
{
  unint64_t result = qword_1EA1A81D8;
  if (!qword_1EA1A81D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A81D8);
  }
  return result;
}

uint64_t sub_1C0EA7450(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F72687473736170 && a2 == 0xEB00000000686775)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_1C0EA7568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7) != 1)
  {
    uint64_t v9 = (void *)sub_1C1515E9C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  }
  if (a4)
  {
    uint64_t v10 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithHeadline_articleURL_selectedText_, a1, v9, v10);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1C0EA76AC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v9 = *a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t))(a8 + 104))(a1, a2, a3, &v9, a5, a6, 0, a7, a8);
}

uint64_t SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v7 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BFC773DC(a3, v7 + 32);
  sub_1BFC773DC(a4, v7 + 72);
  *(_OWORD *)(v7 + 112) = 0u;
  *(_OWORD *)(v7 + 128) = 0u;
  *(_OWORD *)(v7 + 144) = 0u;
  *(_OWORD *)(v7 + 160) = 0u;
  *(_OWORD *)(v7 + 176) = 0u;
  *(_OWORD *)(v7 + 192) = 0u;
  *(_OWORD *)(v7 + 208) = 0u;
  *(_OWORD *)(v7 + 224) = 0u;
  return v7;
}

uint64_t SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:shareLinkImageProvider:shareLinkPuzzleImageProvider:puzzleRankProvider:puzzleDifficultyDescriptionProvider:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4, uint64_t a5, long long *a6, long long *a7, long long *a8)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v15 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BFC773DC(a3, v15 + 32);
  sub_1BFC773DC(a4, v15 + 72);
  *(void *)(v15 + 112) = a5;
  sub_1BFC773DC(a6, v15 + 120);
  sub_1BFC773DC(a7, v15 + 160);
  sub_1BFC773DC(a8, v15 + 200);
  return v15;
}

uint64_t SharingActivityItemFactory.init(commandCenter:shareLinkProvider:shareLinkTextProvider:shareLinkImageProvider:shareLinkPuzzleImageProvider:puzzleRankProvider:puzzleDifficultyDescriptionProvider:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4, uint64_t a5, long long *a6, long long *a7, long long *a8)
{
  *(void *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v8 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BFC773DC(a3, v8 + 32);
  sub_1BFC773DC(a4, v8 + 72);
  *(void *)(v8 + 112) = a5;
  sub_1BFC773DC(a6, v8 + 120);
  sub_1BFC773DC(a7, v8 + 160);
  sub_1BFC773DC(a8, v8 + 200);
  return v8;
}

uint64_t SharingActivityItemFactory.createActivityItemSources(headline:selectedText:)(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  sub_1BFE4DBE0();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1540C60;
  uint64_t v10 = (objc_class *)type metadata accessor for SharingArticleImageActivityItemSource();
  id v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
  v36.receiver = v11;
  v36.super_class = v10;
  swift_unknownObjectRetain();
  *(void *)(v9 + 32) = objc_msgSendSuper2(&v36, sel_init);
  uint64_t v12 = (objc_class *)type metadata accessor for SharingArticleTextActivityItemSource();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
  swift_unknownObjectRetain();
  int v14 = v13;
  uint64_t v15 = sub_1C0352610(a1);
  char v16 = (uint64_t *)&v14[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
  *char v16 = v15;
  v16[1] = v17;

  v35.receiver = v14;
  v35.super_class = v12;
  *(void *)(v9 + 40) = objc_msgSendSuper2(&v35, sel_init);
  uint64_t v18 = type metadata accessor for SharingArticleURLActivityItemSource();
  uint64_t v20 = v4[7];
  uint64_t v19 = v4[8];
  __swift_project_boxed_opaque_existential_1(v4 + 4, v20);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8);
  uint64_t v22 = swift_unknownObjectRetain();
  v21(v22, v20, v19);
  sub_1BFC66384((uint64_t)(v4 + 9), (uint64_t)v32);
  uint64_t v23 = SharingActivityItemFactory.createLinkPresentationSource(headline:selectedText:)((uint64_t)a1, v30, v31);
  uint64_t v24 = v33;
  uint64_t v25 = v34;
  uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  id v27 = sub_1C0176090((uint64_t)a1, (uint64_t)v8, v26, v23, v18, v24, v25);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  *(void *)(v9 + 48) = v27;
  v32[0] = v9;
  sub_1C151EBEC();
  return v32[0];
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v5 = sub_1C151804C();
  MEMORY[0x1F4188790](v5);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = v3[7];
  uint64_t v13 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(a1, v14, v13);
  sub_1C0025B10((uint64_t)v12, (uint64_t)v9);
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1C002F694((uint64_t)v9, v16 + v15);
  uint64_t v17 = (void *)(v16 + ((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v18 = v23;
  *uint64_t v17 = v22;
  v17[1] = v18;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v19 = sub_1C1518D1C();
  sub_1C002F608((uint64_t)v12);
  return v19;
}

uint64_t SharingActivityItemFactory.createActivityItemSources(tag:)(uint64_t a1)
{
  sub_1BFE4DBE0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C15320F0;
  int v3 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingTagTextActivityItemSource());
  swift_getObjectType();
  unsigned int v4 = (void *)swift_unknownObjectRetain();
  id v5 = sub_1C130493C(v4, v3);
  swift_unknownObjectRelease();
  *(void *)(v2 + 32) = v5;
  uint64_t v6 = (void *)swift_unknownObjectRetain();
  uint64_t v7 = SharingActivityItemFactory.createLinkPresentationSource(tag:)(v6);
  uint64_t v8 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  uint64_t v10 = &v9[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(void *)uint64_t v10 = a1;
  v10[8] = 0;
  *(void *)&v9[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = v7;
  v12.receiver = v9;
  v12.super_class = v8;
  *(void *)(v2 + 40) = objc_msgSendSuper2(&v12, sel_init);
  sub_1C151EBEC();
  return v2;
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(tag:)(void *a1)
{
  uint64_t v3 = sub_1C151804C();
  id v4 = objc_msgSend(a1, sel_asSportsEvent, MEMORY[0x1F4188790](v3).n128_f64[0]);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)(v1 + 112);
    if (v6)
    {
LABEL_6:
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v5;
      *(void *)(v8 + 24) = v6;
      sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
      sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
      sub_1BFD98B68();
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain();
      sub_1C151FFBC();
      sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
      swift_allocObject();
      uint64_t v9 = sub_1C1518D1C();
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
    swift_unknownObjectRelease();
  }
  id v7 = objc_msgSend(a1, sel_asSports);
  if (v7)
  {
    id v5 = v7;
    uint64_t v6 = *(void *)(v1 + 112);
    if (v6) {
      goto LABEL_6;
    }
    swift_unknownObjectRelease();
  }
  id v10 = objc_msgSend(a1, sel_asPuzzleType);
  if (v10)
  {
    *(void *)(swift_allocObject() + 16) = v10;
    sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
    sub_1BFD98B68();
    swift_unknownObjectRetain();
    sub_1C151FFBC();
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
    swift_allocObject();
  }
  else
  {
    uint64_t v11 = *(void *)(v1 + 112);
    if (!v11)
    {
      objc_msgSend(a1, sel_isPuzzleHub);
      *(void *)(swift_allocObject() + 16) = a1;
      sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
      sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
      sub_1BFD98B68();
      swift_unknownObjectRetain();
      sub_1C151FFBC();
      sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
      swift_allocObject();
      return sub_1C1518D1C();
    }
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = v11;
    sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
    sub_1BFD98B68();
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain();
    sub_1C151FFBC();
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
    swift_allocObject();
  }
  uint64_t v9 = sub_1C1518D1C();
LABEL_13:
  swift_unknownObjectRelease();
  return v9;
}

id sub_1C0EA8834@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v13 - v9;
  sub_1BFC39268(0, (unint64_t *)&unk_1EA1A8250);
  sub_1C0025B10(a1, (uint64_t)v10);
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_unknownObjectRetain();
  id result = sub_1C0EA7568(v11, (uint64_t)v10, a2, a3);
  *a4 = result;
  return result;
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(issue:)(void *a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  id v3 = a1;
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  return sub_1C1518D1C();
}

uint64_t SharingActivityItemFactory.createActivityItemSources(puzzle:shareData:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = sub_1C151804C();
  MEMORY[0x1F4188790](v26);
  uint64_t v25 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v24 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  HIDWORD(v23) = *(unsigned __int8 *)(a2 + 32);
  sub_1BFE4DBE0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1540C60;
  uint64_t v11 = (objc_class *)type metadata accessor for SharingPuzzleImageActivityItemSource();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image] = 0;
  v35.receiver = v12;
  v35.super_class = v11;
  swift_unknownObjectRetain();
  id v13 = objc_msgSendSuper2(&v35, sel_init);
  id v27 = v13;
  uint64_t v28 = a1;
  sub_1C0EAF784(0, (unint64_t *)&qword_1EA1A3298, (uint64_t)&qword_1EB87A300, 0x1E4FB1818, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  id v14 = v13;
  sub_1C151932C();
  unint64_t v15 = (void *)sub_1C1518E7C();
  sub_1C151901C();
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  *(void *)(v10 + 32) = v14;
  sub_1C0EAF7E0(v3 + 160, (uint64_t)v34, &qword_1EB891A10, (uint64_t)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  sub_1C0EAF7E0(v3 + 200, (uint64_t)v33, &qword_1EB893CD0, (uint64_t)&qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
  uint64_t v16 = v24;
  *(void *)&long long v29 = v24;
  *((void *)&v29 + 1) = v7;
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  char v32 = BYTE4(v23);
  id v17 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleTextActivityItemSource());
  swift_unknownObjectRetain();
  sub_1C04B13C8(v16, v7, v8, v9);
  *(void *)(v10 + 40) = SharingPuzzleTextActivityItemSource.init(puzzle:puzzleRankProvider:puzzleDifficultyDescriptionProvider:shareData:)((uint64_t)a1, (uint64_t)v34, (uint64_t)v33, &v29);
  sub_1C0EAF7E0(v3 + 120, (uint64_t)v34, &qword_1EB881460, (uint64_t)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_1C0ABDD40((uint64_t)v34, v18 + 24);
  v34[0] = MEMORY[0x1E4FBC860];
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  swift_unknownObjectRetain_n();
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v19 = sub_1C1518D1C();
  id v20 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleURLActivityItemSource());
  id v21 = sub_1C0A5D630(a1, v19);
  swift_unknownObjectRelease();
  swift_release();
  *(void *)(v10 + 48) = v21;
  v34[0] = v10;
  sub_1C151EBEC();
  return v34[0];
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(puzzle:puzzleImageShareAttributeProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151804C();
  MEMORY[0x1F4188790](v4);
  sub_1C0EAF7E0(a2, (uint64_t)v7, &qword_1EB881460, (uint64_t)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  sub_1C0ABDD40((uint64_t)v7, v5 + 24);
  v7[0] = MEMORY[0x1E4FBC860];
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  swift_unknownObjectRetain();
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  return sub_1C1518D1C();
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(puzzleType:)(uint64_t a1)
{
  return sub_1C0EA9188(a1);
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(channel:)(uint64_t a1)
{
  return sub_1C0EA9188(a1);
}

uint64_t sub_1C0EA9188(uint64_t a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  swift_unknownObjectRetain();
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  return sub_1C1518D1C();
}

uint64_t SharingActivityItemFactory.createActivityItemSources(feedDescriptor:)(void *a1)
{
  sub_1BFE4DBE0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C15320F0;
  uint64_t v3 = (objc_class *)type metadata accessor for SharingTagTextActivityItemSource();
  id v4 = objc_allocWithZone(v3);
  id v5 = a1;
  uint64_t v6 = (char *)v4;
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = FCFeedDescriptor.feedTag.getter();
  uint64_t v7 = FCFeedDescriptor.feedExternalTitle.getter();
  uint64_t v8 = (uint64_t *)&v6[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *uint64_t v8 = v7;
  v8[1] = v9;

  v18.receiver = v6;
  v18.super_class = v3;
  id v10 = objc_msgSendSuper2(&v18, sel_init);

  *(void *)(v2 + 32) = v10;
  id v11 = v5;
  uint64_t v12 = SharingActivityItemFactory.createLinkPresentationSource(feedDescriptor:)(v11);
  id v13 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  id v14 = (char *)objc_allocWithZone(v13);
  unint64_t v15 = &v14[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(void *)unint64_t v15 = v11;
  v15[8] = 1;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = v12;
  v17.receiver = v14;
  v17.super_class = v13;
  *(void *)(v2 + 40) = objc_msgSendSuper2(&v17, sel_init);
  sub_1C151EBEC();
  return v2;
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(feedDescriptor:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151804C();
  MEMORY[0x1F4188790](v4);
  id v5 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
  swift_unknownObjectRelease();
  if (v5)
  {
    uint64_t v6 = *(void *)(v2 + 112);
    if (v6)
    {
LABEL_6:
      uint64_t v7 = (void *)swift_allocObject();
      v7[2] = a1;
      v7[3] = v5;
      v7[4] = v6;
      sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
      sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
      sub_1BFD98B68();
      swift_unknownObjectRetain_n();
      id v8 = a1;
      swift_unknownObjectRetain();
      sub_1C151FFBC();
      sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
      swift_allocObject();
      uint64_t v9 = sub_1C1518D1C();
      swift_unknownObjectRelease();
LABEL_10:
      swift_unknownObjectRelease();
      return v9;
    }
    swift_unknownObjectRelease();
  }
  id v5 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSports);
  swift_unknownObjectRelease();
  if (v5)
  {
    uint64_t v6 = *(void *)(v2 + 112);
    if (v6) {
      goto LABEL_6;
    }
    swift_unknownObjectRelease();
  }
  id v10 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  if (v10)
  {
    *(void *)(swift_allocObject() + 16) = v10;
    sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
    sub_1BFD98B68();
    swift_unknownObjectRetain();
    sub_1C151FFBC();
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
    swift_allocObject();
    uint64_t v9 = sub_1C1518D1C();
    goto LABEL_10;
  }
  unsigned int v12 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_isPuzzleHub);
  swift_unknownObjectRelease();
  if (v12)
  {
    *(void *)(swift_allocObject() + 16) = a1;
    sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
    sub_1BFD98B68();
    id v13 = a1;
  }
  else
  {
    uint64_t v14 = *(void *)(v2 + 112);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = v14;
    sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
    sub_1BFD98B68();
    id v16 = a1;
    swift_unknownObjectRetain();
  }
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  return sub_1C1518D1C();
}

uint64_t sub_1C0EA9C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1C0EAF7E0(a2, (uint64_t)v10, &qword_1EB881460, (uint64_t)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  id v5 = (objc_class *)type metadata accessor for PuzzleLinkPresentationSource();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzle] = a1;
  sub_1C0EAF7E0((uint64_t)v10, (uint64_t)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider], &qword_1EB881460, (uint64_t)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_unknownObjectRetain();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  uint64_t result = sub_1C0EB0118((uint64_t)v10, &qword_1EB881460, (uint64_t)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  *a3 = v7;
  return result;
}

id sub_1C0EA9D04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (objc_class *)type metadata accessor for PuzzleTypeLinkPresentationSource();
  id v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC8NewsFeed32PuzzleTypeLinkPresentationSource_puzzleType] = a1;
  v7.receiver = v5;
  v7.super_class = v4;
  swift_unknownObjectRetain();
  id result = objc_msgSendSuper2(&v7, sel_init);
  *a2 = result;
  return result;
}

void sub_1C0EA9D78(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  swift_unknownObjectRetain();
  id v6 = objc_msgSend(a2, sel_shareImageFor_, a1);
  id v7 = objc_msgSend(objc_allocWithZone((Class)NETagLinkPresentationSource), sel_initWithTag_image_, a1, v6);
  swift_unknownObjectRelease();

  *a3 = v7;
}

uint64_t sub_1C0EA9E00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_name);
  sub_1C151E62C();

  id v5 = objc_allocWithZone((Class)NEPuzzleHubLinkPresentationSource);
  swift_unknownObjectRetain();
  id v6 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithTitle_tag_, v6, a1);

  uint64_t result = swift_unknownObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t sub_1C0EA9EB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, Class *a3@<X3>, SEL *a4@<X4>, void *a5@<X8>)
{
  uint64_t v19 = a5;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  FCFeedDescriptor.feedExternalTitle.getter();
  FCFeedDescriptor.feedURL.getter();
  id v13 = objc_allocWithZone(*a3);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v14 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_1C1515E9C();
  id v16 = objc_msgSend(v13, *a4, v14, v15, a1, a2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *uint64_t v19 = v16;
  return result;
}

uint64_t sub_1C0EAA038@<X0>(void *a1@<X8>)
{
  FCFeedDescriptor.feedExternalTitle.getter();
  id v2 = FCFeedDescriptor.feedTag.getter();
  id v3 = objc_allocWithZone((Class)NEPuzzleHubLinkPresentationSource);
  id v4 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithTitle_tag_, v4, v2);

  uint64_t result = swift_unknownObjectRelease();
  *a1 = v5;
  return result;
}

uint64_t sub_1C0EAA0D4@<X0>(id a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  FCFeedDescriptor.feedExternalTitle.getter();
  FCFeedDescriptor.feedURL.getter();
  if (a1)
  {
    a1 = objc_msgSend(a1, sel_shareImageFor_, FCFeedDescriptor.feedTag.getter());
    swift_unknownObjectRelease();
  }
  id v8 = objc_allocWithZone((Class)NETagLinkPresentationSource);
  uint64_t v9 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1C1515E9C();
  id v11 = objc_msgSend(v8, sel_initWithTitle_url_image_, v9, v10, a1);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v11;
  return result;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:feedItemIdentifier:type:tracker:sourceView:sourceItem:)(void *a1, uint64_t a2, void *a3, unsigned __int8 *a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v50 = a7;
  id v49 = a6;
  uint64_t v58 = a5;
  long long v59 = a1;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB8641F8, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v51 = (char *)&v48 - v11;
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864200, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v12 - 8);
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864210, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v13 - 8);
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864220, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v14 - 8);
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864230, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v15 - 8);
  sub_1C0EB006C(0, (unint64_t *)&unk_1EB864240, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v53 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C151BBCC();
  uint64_t v19 = *(void *)(v18 - 8);
  __n128 v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a4;
  uint64_t v24 = MEMORY[0x1C18C9C60](v8 + 16, v20);
  if (!v24) {
    return 0;
  }
  uint64_t v54 = *(void *)(v8 + 24);
  uint64_t v57 = v24;
  switch(v23)
  {
    case 1:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      _s5TeaUI15SharingActivityC8NewsFeedE4save8headlineACSo19FCHeadlineProviding_p_tFZ_0();
      goto LABEL_41;
    case 2:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      if (!sub_1C0F56E8C(v59)) {
        goto LABEL_38;
      }
      goto LABEL_36;
    case 3:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v61 = (uint64_t)v59;
      uint64_t v62 = v55;
      id v63 = v56;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      _s5TeaUI15SharingActivityC8NewsFeedE4like7contextAcD20LikingCommandContextV_tFZ_0(&v61);
      goto LABEL_14;
    case 4:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v61 = (uint64_t)v59;
      uint64_t v62 = v55;
      id v63 = v56;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      _s5TeaUI15SharingActivityC8NewsFeedE7dislike7contextAcD20LikingCommandContextV_tFZ_0(&v61);
LABEL_14:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_41;
    case 5:
      id v31 = objc_msgSend(v59, sel_sourceChannel);
      if (!v31) {
        goto LABEL_39;
      }
      uint64_t v32 = (uint64_t)v31;
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      id v33 = v49;
      long long v59 = (void *)sub_1C151B6EC();
      uint64_t v34 = qword_1EB87B198;
      swift_unknownObjectRetain_n();
      if (v34 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v61) = 1;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v32;
      *(_WORD *)(v35 + 24) = 256;
      sub_1C00764C0();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v61) = 1;
      sub_1C151AEDC();
      uint64_t v61 = v32;
      LOWORD(v62) = 256;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease_n();
      uint64_t v30 = sub_1C151A9CC();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
      return v30;
    case 6:
      id v36 = objc_msgSend(v59, sel_sourceChannel);
      if (!v36) {
        goto LABEL_39;
      }
      uint64_t v37 = (uint64_t)v36;
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v38 = qword_1EB87B188;
      swift_unknownObjectRetain_n();
      if (v38 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v61) = 1;
      *(void *)(swift_allocObject() + 16) = v37;
      sub_1C0078974();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v61) = 1;
      sub_1C151AEDC();
      uint64_t v61 = v37;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease_n();
      uint64_t v30 = sub_1C151A9CC();
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_37;
    case 7:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      if (sub_1C03C9F10((uint64_t)v59, (void *)(v8 + 32))) {
        goto LABEL_36;
      }
      goto LABEL_38;
    case 8:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v39 = v59;
      if (!objc_msgSend(v59, sel_sourceChannel)) {
        goto LABEL_38;
      }
      uint64_t v60 = &unk_1F1CBCF48;
      uint64_t v30 = swift_dynamicCastObjCProtocolConditional();
      if (v30)
      {
        uint64_t v40 = qword_1EB87C910;
        swift_unknownObjectRetain();
        if (v40 != -1) {
          swift_once();
        }
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_retain();
        sub_1C151E5EC();
        type metadata accessor for Localized();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v42 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1C1515B8C();

        if (qword_1EB86FF68 != -1) {
          swift_once();
        }
        id v43 = (id)qword_1EB86FF58;
        sub_1C151B39C();
        uint64_t v61 = v30;
        LOBYTE(v62) = 0;
        id v63 = v39;
        sub_1C151A9FC();
        swift_allocObject();
        sub_1C151A9EC();
        swift_unknownObjectRelease_n();
        uint64_t v30 = sub_1C151A9CC();
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      return v30;
    case 9:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      id v44 = objc_msgSend(v59, sel_sourceChannel);
      if (v44)
      {
        uint64_t v45 = (uint64_t)v44;
        uint64_t v46 = qword_1EB85F568;
        swift_unknownObjectRetain();
        if (v46 != -1) {
          swift_once();
        }
        swift_unknownObjectRetain();
        swift_retain();
        sub_1C151E5EC();
        LOBYTE(v61) = 0;
        sub_1C0067870();
        sub_1C151AEDC();
        LOBYTE(v61) = 0;
        sub_1C151AEDC();
        uint64_t v61 = v45;
        sub_1C151A9FC();
        swift_allocObject();
        sub_1C151A9DC();
        swift_unknownObjectRelease_n();
LABEL_36:
        uint64_t v30 = sub_1C151A9CC();
        swift_release();
LABEL_37:
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
LABEL_38:
        swift_release();
LABEL_39:
        swift_unknownObjectRelease();
        uint64_t v30 = 0;
      }
      break;
    case 10:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      sub_1C0E045DC();
LABEL_41:
      uint64_t v30 = sub_1C151A9CC();
      swift_unknownObjectRelease();
      swift_release();
      goto LABEL_42;
    default:
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E4FACB58], v18);
      uint64_t v64 = sub_1C1517D0C();
      uint64_t v65 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v61 = v58;
      long long v66 = 0u;
      long long v67 = 0u;
      char v68 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v25 = qword_1EB87BDF0;
      uint64_t v26 = (uint64_t)v59;
      swift_unknownObjectRetain();
      if (v25 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      type metadata accessor for Localized();
      uint64_t v27 = swift_getObjCClassFromMetadata();
      id v28 = objc_msgSend(self, sel_bundleForClass_, v27);
      sub_1C1515B8C();

      if (qword_1EB87C318 != -1) {
        swift_once();
      }
      id v29 = (id)qword_1EB87C308;
      sub_1C151B39C();
      uint64_t v61 = v26;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9EC();
      swift_unknownObjectRelease();
      uint64_t v30 = sub_1C151A9CC();
      swift_release();
      swift_unknownObjectRelease();
LABEL_42:
      swift_release();
      break;
  }
  return v30;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(void *a1, unsigned __int8 *a2, uint64_t a3, void *a4)
{
  id v33 = a4;
  uint64_t v35 = a3;
  id v36 = a1;
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB8641F8, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v34 = (char *)&v32 - v7;
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864200, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864210, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v9 - 8);
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864220, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864230, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v11 - 8);
  sub_1C0EB006C(0, (unint64_t *)&unk_1EB864240, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_1C151BBCC();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a2;
  uint64_t v19 = MEMORY[0x1C18C9C60](v4 + 16, v15);
  if (!v19) {
    return 0;
  }
  switch(v18)
  {
    case 5:
      uint64_t v32 = *(void *)(v4 + 24);
      uint64_t v34 = (char *)v19;
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E4FACB58], v13);
      uint64_t v39 = sub_1C1517D0C();
      uint64_t v40 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v37 = v35;
      long long v41 = 0u;
      long long v42 = 0u;
      char v43 = 1;
      sub_1C151B75C();
      swift_allocObject();
      id v22 = v33;
      swift_retain();
      uint64_t v35 = sub_1C151B73C();
      uint64_t v23 = qword_1EB87B198;
      uint64_t v24 = (uint64_t)v36;
      swift_unknownObjectRetain();
      if (v23 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v37) = 1;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      *(_WORD *)(v25 + 24) = 256;
      sub_1C00764C0();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v37) = 1;
      sub_1C151B3AC();
      sub_1C151AEDC();
      uint64_t v37 = v24;
      __int16 v38 = 256;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease();
      uint64_t v20 = sub_1C151A9CC();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      break;
    case 6:
      uint64_t v32 = *(void *)(v4 + 24);
      uint64_t v34 = (char *)v19;
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E4FACB58], v13);
      uint64_t v39 = sub_1C1517D0C();
      uint64_t v40 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v37 = v35;
      long long v41 = 0u;
      long long v42 = 0u;
      char v43 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v26 = qword_1EB87B188;
      uint64_t v27 = (uint64_t)v36;
      swift_unknownObjectRetain();
      if (v26 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v37) = 1;
      *(void *)(swift_allocObject() + 16) = v27;
      sub_1C0078974();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v37) = 1;
      sub_1C151B3AC();
      sub_1C151AEDC();
      uint64_t v37 = v27;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease();
      uint64_t v20 = sub_1C151A9CC();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      break;
    case 7:
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E4FACB58], v13);
      uint64_t v39 = sub_1C1517D0C();
      uint64_t v40 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v37 = v35;
      long long v41 = 0u;
      long long v42 = 0u;
      char v43 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v28 = sub_1C151A9FC();
      id v29 = v36;
      swift_getObjectType();
      sub_1C03C9A44(v29, v28);
      uint64_t v20 = sub_1C151A9CC();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      break;
    case 9:
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E4FACB58], v13);
      uint64_t v39 = sub_1C1517D0C();
      uint64_t v40 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v37 = v35;
      long long v41 = 0u;
      long long v42 = 0u;
      char v43 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v30 = qword_1EB85F568;
      uint64_t v31 = (uint64_t)v36;
      swift_unknownObjectRetain();
      if (v30 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v37) = 0;
      sub_1C0067870();
      sub_1C151AEDC();
      LOBYTE(v37) = 0;
      sub_1C151B3AC();
      sub_1C151AEDC();
      uint64_t v37 = v31;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease();
      uint64_t v20 = sub_1C151A9CC();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      break;
    default:
      swift_unknownObjectRelease();
      return 0;
  }
  return v20;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  int v15;
  id v16;
  uint64_t v17;
  id v18;
  void v21[5];
  long long v22;
  long long v23;
  char v24;

  uint64_t v5 = v4;
  uint64_t v10 = sub_1C151BBCC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = *a2;
  if (!MEMORY[0x1C18C9C60](v5 + 16, v12)) {
    return 0;
  }
  uint64_t v16 = objc_msgSend(a1, sel_feedConfiguration);
  if (v15 == 7)
  {
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E4FACB58], v10);
    v21[3] = sub_1C1517D0C();
    v21[4] = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
    v21[0] = a3;
    id v22 = 0u;
    uint64_t v23 = 0u;
    uint64_t v24 = 1;
    sub_1C151B75C();
    swift_allocObject();
    swift_retain();
    sub_1C151B73C();
    sub_1C03CA85C(a1);
    uint64_t v17 = sub_1C151A9CC();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    if (v15 == 6)
    {
      switch((unint64_t)v16)
      {
        case 3uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
          goto LABEL_10;
        default:
          goto LABEL_11;
      }
    }
    if (v15 == 5 && v16 == (id)3)
    {
LABEL_10:
      swift_unknownObjectRelease();
      return 0;
    }
    else
    {
LABEL_11:
      uint64_t v18 = FCFeedDescriptor.feedTag.getter();
      LOBYTE(v21[0]) = v15;
      uint64_t v17 = SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(v18, (unsigned __int8 *)v21, a3, a4);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  return v17;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1C151BBCC();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!MEMORY[0x1C18C9C60](v4 + 16, v10)) {
    return 0;
  }
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4FACB58], v8);
  v16[4] = sub_1C1517D0C();
  v16[5] = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
  v16[1] = a3;
  long long v17 = 0u;
  long long v18 = 0u;
  char v19 = 1;
  sub_1C151B75C();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  id v13 = a4;
  sub_1C151B73C();
  if (sub_1C03CAB50(a1))
  {
    uint64_t v14 = sub_1C151A9CC();
    swift_release();
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_unknownObjectRelease();
  swift_release();
  return v14;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(void *a1, unsigned __int8 *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v30 = a1;
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864230, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v9 - 8);
  sub_1C0EB006C(0, (unint64_t *)&unk_1EB864240, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = sub_1C151BBCC();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  __n128 v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *a2;
  if (MEMORY[0x1C18C9C60](v5 + 16, v13))
  {
    uint64_t v28 = *(void *)(v5 + 24);
    uint64_t v17 = *MEMORY[0x1E4FACB58];
    if (v16)
    {
      if (v16 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v15, v17, v11);
        uint64_t v33 = sub_1C1517D0C();
        uint64_t v34 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
        uint64_t v31 = a3;
        long long v35 = 0u;
        long long v36 = 0u;
        char v37 = 1;
        sub_1C151B75C();
        swift_allocObject();
        swift_unknownObjectRetain();
        swift_retain();
        id v18 = a4;
        sub_1C151B73C();
        uint64_t v19 = qword_1EB87B198;
        uint64_t v20 = v30;
        swift_unknownObjectRetain();
        if (v19 != -1) {
          swift_once();
        }
        swift_unknownObjectRetain();
        swift_retain();
        uint64_t v29 = sub_1C151E5EC();
        LOBYTE(v31) = 1;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v20;
        *(_WORD *)(v21 + 24) = 256;
        sub_1C00764C0();
        swift_unknownObjectRetain();
        sub_1C151AEDC();
        LOBYTE(v31) = 1;
        sub_1C151B3AC();
        sub_1C151AEDC();
        uint64_t v31 = v20;
        __int16 v32 = 256;
        sub_1C151A9FC();
        swift_allocObject();
        sub_1C151A9DC();
        swift_unknownObjectRelease();
        uint64_t v22 = sub_1C151A9CC();
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v15, v17, v11);
      uint64_t v33 = sub_1C1517D0C();
      uint64_t v34 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v31 = a3;
      long long v35 = 0u;
      long long v36 = 0u;
      char v37 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      id v26 = a4;
      sub_1C151B73C();
      _s5TeaUI15SharingActivityC8NewsFeedE21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleL9Providing_p_tFZ_0(v30);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v15, v17, v11);
      uint64_t v33 = sub_1C1517D0C();
      uint64_t v34 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v31 = a3;
      long long v35 = 0u;
      long long v36 = 0u;
      char v37 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      id v23 = a4;
      sub_1C151B73C();
      uint64_t v24 = sub_1C151A9FC();
      uint64_t v25 = v30;
      swift_getObjectType();
      sub_1C03C9A44(v25, v24);
    }
    uint64_t v22 = sub_1C151A9CC();
    swift_unknownObjectRelease();
    swift_release();
LABEL_11:
    swift_release();
    return v22;
  }
  return 0;
}

{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  long long v39;
  long long v40;
  char v41;

  uint64_t v31 = a4;
  __int16 v32 = a5;
  uint64_t v34 = a1;
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864210, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864220, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v9 - 8);
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864230, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1C0EB006C(0, (unint64_t *)&unk_1EB864240, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = sub_1C151BBCC();
  __n128 v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  int v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a2;
  id v18 = MEMORY[0x1C18C9C60](v5 + 16, v14);
  if (!v18) {
    return 0;
  }
  uint64_t v33 = *(void *)(v5 + 24);
  if (v17)
  {
    uint64_t v30 = v18;
    uint64_t v19 = *MEMORY[0x1E4FACB58];
    if (v17 == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v16, v19, v12);
      char v37 = sub_1C1517D0C();
      __int16 v38 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      long long v35 = a3;
      uint64_t v39 = 0u;
      uint64_t v40 = 0u;
      long long v41 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v20 = v31;
      __int16 v32 = sub_1C151B73C();
      uint64_t v21 = qword_1EB87B198;
      uint64_t v22 = v34;
      swift_unknownObjectRetain();
      if (v21 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v35) = 1;
      id v23 = swift_allocObject();
      *(void *)(v23 + 16) = v22;
      *(_WORD *)(v23 + 24) = 256;
      sub_1C00764C0();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v35) = 1;
      sub_1C151B3AC();
      sub_1C151AEDC();
      long long v35 = v22;
      long long v36 = 256;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v16, v19, v12);
      char v37 = sub_1C1517D0C();
      __int16 v38 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      long long v35 = a3;
      uint64_t v39 = 0u;
      uint64_t v40 = 0u;
      long long v41 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v27 = qword_1EB87B188;
      uint64_t v28 = v34;
      swift_unknownObjectRetain();
      if (v27 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v35) = 1;
      *(void *)(swift_allocObject() + 16) = v28;
      sub_1C0078974();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v35) = 1;
      sub_1C151B3AC();
      sub_1C151AEDC();
      long long v35 = v28;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease();
    }
    uint64_t v24 = sub_1C151A9CC();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E4FACB58], v12);
    char v37 = sub_1C1517D0C();
    __int16 v38 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
    long long v35 = a3;
    uint64_t v39 = 0u;
    uint64_t v40 = 0u;
    long long v41 = 1;
    sub_1C151B75C();
    swift_allocObject();
    swift_retain();
    sub_1C151B73C();
    uint64_t v25 = sub_1C151A9FC();
    id v26 = v34;
    swift_getObjectType();
    sub_1C03C9A44(v26, v25);
    uint64_t v24 = sub_1C151A9CC();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  return v24;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(void *a1, unsigned __int8 *a2, uint64_t a3, void *a4, void *a5)
{
  v33[0] = a4;
  v33[1] = a5;
  uint64_t v34 = a3;
  long long v35 = a1;
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB8641F8, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v7 - 8);
  _OWORD v33[2] = (char *)v33 - v8;
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864200, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v9 - 8);
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864210, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864220, (void (*)(void))sub_1C0078974);
  MEMORY[0x1F4188790](v11 - 8);
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB864230, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v12 - 8);
  sub_1C0EB006C(0, (unint64_t *)&unk_1EB864240, (void (*)(void))sub_1C00764C0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v14 = sub_1C151BBCC();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  id v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a2;
  uint64_t v20 = (void *)MEMORY[0x1C18C9C60](v5 + 16, v16);
  if (!v20) {
    return 0;
  }
  v33[3] = *(id *)(v5 + 24);
  v33[4] = v20;
  switch(v19)
  {
    case 1:
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E4FACB58], v14);
      uint64_t v38 = sub_1C1517D0C();
      uint64_t v39 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v36 = v34;
      long long v40 = 0u;
      long long v41 = 0u;
      char v42 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      id v24 = v33[0];
      uint64_t v34 = sub_1C151B6EC();
      uint64_t v25 = qword_1EB87B198;
      uint64_t v26 = (uint64_t)v35;
      swift_unknownObjectRetain();
      if (v25 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v36) = 1;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v26;
      *(_WORD *)(v27 + 24) = 256;
      sub_1C00764C0();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v36) = 1;
      sub_1C151B3AC();
      sub_1C151AEDC();
      uint64_t v36 = v26;
      __int16 v37 = 256;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      swift_unknownObjectRelease();
      uint64_t v23 = sub_1C151A9CC();
      swift_release();
      goto LABEL_15;
    case 2:
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E4FACB58], v14);
      uint64_t v38 = sub_1C1517D0C();
      uint64_t v39 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v36 = v34;
      long long v40 = 0u;
      long long v41 = 0u;
      char v42 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v28 = qword_1EB87B188;
      uint64_t v29 = (uint64_t)v35;
      swift_unknownObjectRetain();
      if (v28 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v36) = 1;
      *(void *)(swift_allocObject() + 16) = v29;
      sub_1C0078974();
      swift_unknownObjectRetain();
      sub_1C151AEDC();
      LOBYTE(v36) = 1;
      sub_1C151B3AC();
      sub_1C151AEDC();
      uint64_t v36 = v29;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
      goto LABEL_14;
    case 3:
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E4FACB58], v14);
      uint64_t v38 = sub_1C1517D0C();
      uint64_t v39 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v36 = v34;
      long long v40 = 0u;
      long long v41 = 0u;
      char v42 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v30 = qword_1EB85F568;
      uint64_t v31 = (uint64_t)v35;
      swift_unknownObjectRetain();
      if (v30 != -1) {
        swift_once();
      }
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151E5EC();
      LOBYTE(v36) = 0;
      sub_1C0067870();
      sub_1C151AEDC();
      LOBYTE(v36) = 0;
      sub_1C151B3AC();
      sub_1C151AEDC();
      uint64_t v36 = v31;
      sub_1C151A9FC();
      swift_allocObject();
      sub_1C151A9DC();
LABEL_14:
      swift_unknownObjectRelease();
      uint64_t v23 = sub_1C151A9CC();
      swift_release();
LABEL_15:
      swift_release();
      swift_unknownObjectRelease();
      break;
    default:
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E4FACB58], v14);
      uint64_t v38 = sub_1C1517D0C();
      uint64_t v39 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
      uint64_t v36 = v34;
      long long v40 = 0u;
      long long v41 = 0u;
      char v42 = 1;
      sub_1C151B75C();
      swift_allocObject();
      swift_retain();
      sub_1C151B73C();
      uint64_t v21 = sub_1C151A9FC();
      uint64_t v22 = v35;
      swift_getObjectType();
      sub_1C03C9A44(v22, v21);
      uint64_t v23 = sub_1C151A9CC();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      break;
  }
  return v23;
}

uint64_t SharingActivityItemFactory.deinit()
{
  sub_1C019B9B4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_unknownObjectRelease();
  sub_1C0EB0118(v0 + 120, &qword_1EB881460, (uint64_t)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1C0EB0118(v0 + 160, &qword_1EB891A10, (uint64_t)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  sub_1C0EB0118(v0 + 200, &qword_1EB893CD0, (uint64_t)&qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
  return v0;
}

uint64_t SharingActivityItemFactory.__deallocating_deinit()
{
  sub_1C019B9B4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_unknownObjectRelease();
  sub_1C0EB0118(v0 + 120, &qword_1EB881460, (uint64_t)&qword_1EB884BD0, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1C0EB0118(v0 + 160, &qword_1EB891A10, (uint64_t)&unk_1EB884AB0, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  sub_1C0EB0118(v0 + 200, &qword_1EB893CD0, (uint64_t)&qword_1EB893B50, (uint64_t)&protocol descriptor for PuzzleDifficultyDescriptionProviderType);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0EAE510(void *a1, uint64_t a2, uint64_t a3)
{
  return SharingActivityItemFactory.createActivityItemSources(headline:selectedText:)(a1, a2, a3);
}

uint64_t sub_1C0EAE534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SharingActivityItemFactory.createLinkPresentationSource(headline:selectedText:)(a1, a2, a3);
}

uint64_t sub_1C0EAE558(uint64_t a1)
{
  return SharingActivityItemFactory.createActivityItemSources(tag:)(a1);
}

uint64_t sub_1C0EAE580(void *a1, uint64_t a2)
{
  return SharingActivityItemFactory.createActivityItemSources(puzzle:shareData:)(a1, a2);
}

uint64_t sub_1C0EAE5AC(void *a1)
{
  return SharingActivityItemFactory.createActivityItemSources(feedDescriptor:)(a1);
}

uint64_t sub_1C0EAE5D0(void *a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  id v3 = a1;
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  return sub_1C1518D1C();
}

uint64_t sub_1C0EAE788(uint64_t a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  swift_unknownObjectRetain();
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  return sub_1C1518D1C();
}

uint64_t sub_1C0EAE944(void *a1)
{
  return SharingActivityItemFactory.createLinkPresentationSource(tag:)(a1);
}

uint64_t sub_1C0EAE968(void *a1)
{
  return SharingActivityItemFactory.createLinkPresentationSource(feedDescriptor:)(a1);
}

uint64_t sub_1C0EAE98C(void *a1, uint64_t a2, void *a3, unsigned __int8 *a4, uint64_t a5, void *a6, uint64_t a7)
{
  return SharingActivityItemFactory.createActivityItem(for:feedItemIdentifier:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C0EAE9B0(void *a1, unsigned __int8 *a2, uint64_t a3, void *a4)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(a1, a2, a3, a4);
}

uint64_t sub_1C0EAE9D4(void *a1, unsigned __int8 *a2, uint64_t a3, void *a4, void *a5)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0EAE9F8(void *a1, char *a2, void *a3)
{
  return _s8NewsFeed26SharingActivityItemFactoryC06createdE03for4type7tracker10sourceViewSo10UIActivityCSgSo7FCIssueC_AA0c5IssueD0O12AppAnalytics7TrackerCSo6UIViewCSgtF_0(a1, a2, a3);
}

uint64_t sub_1C0EAEA1C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4);
}

uint64_t sub_1C0EAEA40(void *a1, unsigned __int8 *a2, void *a3, void *a4, uint64_t a5)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0EAEA64(void *a1, unsigned __int8 *a2, void *a3, void *a4, uint64_t a5)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0EAEA88(void *a1, unsigned __int8 *a2, uint64_t a3, void *a4)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(a1, a2, a3, a4);
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE03for4type7tracker10sourceViewSo10UIActivityCSgSo7FCIssueC_AA0c5IssueD0O12AppAnalytics7TrackerCSo6UIViewCSgtF_0(void *a1, char *a2, void *a3)
{
  sub_1C0EAFFF0(0, (unint64_t *)&qword_1EB8641F8, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1C0EB006C(0, (unint64_t *)&qword_1EB864200, (void (*)(void))sub_1C0067870);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1C151BBCC();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *a2;
  if (!MEMORY[0x1C18C9C60](v3 + 16, v11)) {
    return 0;
  }
  uint64_t v19 = *(void *)(v3 + 24);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E4FACB58], v9);
  if ((v14 & 1) == 0)
  {
    uint64_t v21 = sub_1C1517D0C();
    uint64_t v22 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
    id v20 = a3;
    long long v23 = 0u;
    long long v24 = 0u;
    char v25 = 1;
    sub_1C151B75C();
    swift_allocObject();
    swift_retain();
    sub_1C151B73C();
    if (sub_1C03CA35C(a1))
    {
      uint64_t v17 = sub_1C151A9CC();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      return v17;
    }
    swift_unknownObjectRelease();
    swift_release();
    return 0;
  }
  uint64_t v21 = sub_1C1517D0C();
  uint64_t v22 = sub_1BFDA5BAC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
  id v20 = a3;
  long long v23 = 0u;
  long long v24 = 0u;
  char v25 = 1;
  sub_1C151B75C();
  swift_allocObject();
  swift_retain();
  sub_1C151B73C();
  id v15 = objc_msgSend(a1, sel_sourceChannel);
  uint64_t v16 = qword_1EB85F568;
  swift_unknownObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151E5EC();
  LOBYTE(v20) = 0;
  sub_1C0067870();
  sub_1C151AEDC();
  LOBYTE(v20) = 0;
  sub_1C151B3AC();
  sub_1C151AEDC();
  id v20 = v15;
  sub_1C151A9FC();
  swift_allocObject();
  sub_1C151A9DC();
  swift_unknownObjectRelease_n();
  uint64_t v17 = sub_1C151A9CC();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1C0EAEF90()
{
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1C0EAF104@<X0>(void *a1@<X8>)
{
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v6);
  uint64_t v8 = *(void *)(v1 + v6 + 8);
  return sub_1C0EA8834(v1 + v5, v7, v8, a1);
}

unint64_t sub_1C0EAF1D8()
{
  unint64_t result = qword_1EB86DE60;
  if (!qword_1EB86DE60)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB86DE60);
  }
  return result;
}

id sub_1C0EAF230@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)NETagLinkPresentationSource), sel_initWithTag_image_, *(void *)(v1 + 16), 0);
  *a1 = result;
  return result;
}

uint64_t sub_1C0EAF278@<X0>(void *a1@<X8>)
{
  return sub_1C0EA9E00(*(void **)(v1 + 16), a1);
}

void sub_1C0EAF284(void *a1@<X8>)
{
  sub_1C0EA9D78(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

id sub_1C0EAF28C@<X0>(void *a1@<X8>)
{
  return sub_1C0EB04D8((Class *)off_1E6414D80, (SEL *)&selRef_initWithPuzzleTag_, a1);
}

id sub_1C0EAF2A4@<X0>(void *a1@<X8>)
{
  return sub_1C0EAF310((Class *)off_1E6414D90, (SEL *)&selRef_initWithSportsTag_tagImageProvider_, a1);
}

uint64_t objectdestroy_8Tm_2()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_1C0EAF2FC@<X0>(void *a1@<X8>)
{
  return sub_1C0EAF310((Class *)off_1E6414D88, (SEL *)&selRef_initWithSportsEvent_tagImageProvider_, a1);
}

id sub_1C0EAF310@<X0>(Class *a1@<X0>, SEL *a2@<X1>, void *a3@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(*a1), *a2, *(void *)(v3 + 16), *(void *)(v3 + 24));
  *a3 = result;
  return result;
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE7Sources5issueSaySo010UIActivityE6Source_pGSo7FCIssueC_tF_0(void *a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE4DBE0();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1540C60;
  unint64_t v6 = (objc_class *)type metadata accessor for SharingIssueImageActivityItemSource();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage] = 0;
  id v9 = a1;
  uint64_t v10 = v7;
  id v11 = objc_msgSend(v9, sel_coverImageAssetHandle);
  v38[2] = v2;
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_filePath);
    if (v13)
    {
      sub_1C151E62C();
      v38[1] = v4;

      id v14 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
      id v15 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v14, sel_initWithContentsOfFile_, v15);
    }
    else
    {
    }
  }
  else
  {
    id v13 = 0;
  }
  uint64_t v16 = *(void **)&v7[v8];
  *(void *)&v7[v8] = v13;

  v41.receiver = v10;
  v41.super_class = v6;
  id v17 = objc_msgSendSuper2(&v41, sel_init);

  *(void *)(v5 + 32) = v17;
  id v18 = (objc_class *)type metadata accessor for SharingIssueTextActivityItemSource();
  uint64_t v19 = (char *)objc_allocWithZone(v18);
  *(void *)&v19[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = v9;
  id v20 = v9;
  uint64_t v21 = v19;
  id v22 = objc_msgSend(v20, sel_title);
  uint64_t v23 = sub_1C151E62C();
  uint64_t v25 = v24;

  uint64_t v26 = (uint64_t *)&v21[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
  *uint64_t v26 = v23;
  v26[1] = v25;
  id v27 = objc_msgSend(v20, sel_coverDate);
  uint64_t v28 = sub_1C151E62C();
  uint64_t v30 = v29;

  uint64_t v31 = (uint64_t *)&v21[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
  uint64_t *v31 = v28;
  v31[1] = v30;

  v40.receiver = v21;
  v40.super_class = v18;
  id v32 = objc_msgSendSuper2(&v40, sel_init);

  *(void *)(v5 + 40) = v32;
  *(void *)(swift_allocObject() + 16) = v20;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  id v33 = v20;
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v34 = sub_1C1518D1C();
  id v35 = objc_allocWithZone((Class)type metadata accessor for SharingIssueURLActivityItemSource());
  id v36 = sub_1C0B45900(v33, v34);

  swift_release();
  *(void *)(v5 + 48) = v36;
  uint64_t v39 = v5;
  sub_1C151EBEC();
  return v39;
}

id sub_1C0EAF770@<X0>(void *a1@<X8>)
{
  return sub_1C0EB04D8((Class *)off_1E6414D68, (SEL *)&selRef_initWithIssue_, a1);
}

void sub_1C0EAF784(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C151FD8C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0EAF7E0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  sub_1C0EAF784(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC845BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C0EAF868@<X0>(void *a1@<X8>)
{
  return sub_1C0EA9C10(*(void *)(v1 + 16), v1 + 24, a1);
}

uint64_t objectdestroy_23Tm()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }
  return swift_deallocObject();
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE7Sources10puzzleTypeSaySo010UIActivityE6Source_pGSo08FCPuzzleJ9Providing_p_tF_0(void *a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  sub_1BFF2EA40(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - v4;
  sub_1BFE4DBE0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1540C60;
  uint64_t v7 = (objc_class *)type metadata accessor for SharingPuzzleTypeImageActivityItemSource();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed40SharingPuzzleTypeImageActivityItemSource_image] = 0;
  v23.receiver = v8;
  v23.super_class = v7;
  swift_unknownObjectRetain();
  id v9 = objc_msgSendSuper2(&v23, sel_init);
  uint64_t v10 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  id v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  v11[4] = v9;
  v11[5] = a1;
  id v12 = v9;
  sub_1C0C833AC((uint64_t)v5, (uint64_t)&unk_1EA1A8248, (uint64_t)v11);
  swift_release();
  *(void *)(v6 + 32) = v12;
  id v13 = (objc_class *)type metadata accessor for SharingPuzzleTypeTextActivityItemSource();
  id v14 = (char *)objc_allocWithZone(v13);
  id v15 = &v14[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText];
  *(void *)id v15 = 0;
  *((void *)v15 + 1) = 0;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType] = a1;
  v22.receiver = v14;
  v22.super_class = v13;
  swift_unknownObjectRetain();
  *(void *)(v6 + 40) = objc_msgSendSuper2(&v22, sel_init);
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  swift_unknownObjectRetain_n();
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v16 = sub_1C1518D1C();
  id v17 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleTypeURLActivityItemSource());
  id v18 = sub_1C1104808(a1, v16);
  swift_unknownObjectRelease();
  swift_release();
  *(void *)(v6 + 48) = v18;
  uint64_t v21 = v6;
  sub_1C151EBEC();
  return v21;
}

id sub_1C0EAFC78@<X0>(void *a1@<X8>)
{
  return sub_1C0EA9D04(*(void *)(v1 + 16), a1);
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE7Sources7channelSaySo010UIActivityE6Source_pGSo18FCChannelProviding_p_tF_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  sub_1BFE4DBE0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320F0;
  uint64_t v4 = (objc_class *)type metadata accessor for SharingTagTextActivityItemSource();
  swift_getObjectType();
  uint64_t v5 = (void *)swift_unknownObjectRetain();
  id v6 = sub_1C1304A3C(v5, v4);
  swift_unknownObjectRelease();
  *(void *)(v3 + 32) = v6;
  uint64_t v7 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1BFDA5BAC((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1BFD98B68();
  swift_unknownObjectRetain_n();
  sub_1C151FFBC();
  sub_1BFF2EA40(0, (unint64_t *)&qword_1EB86C250, (uint64_t (*)(uint64_t))sub_1C0EAF1D8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v8 = sub_1C1518D1C();
  *(void *)(v3 + 40) = sub_1C0C188F0(a1, v8, v7);
  sub_1C151EBEC();
  return v3;
}

id sub_1C0EAFEDC@<X0>(void *a1@<X8>)
{
  return sub_1C0EB04D8((Class *)off_1E6414D60, (SEL *)&selRef_initWithChannel_, a1);
}

uint64_t sub_1C0EAFEF0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EAFF30@<X0>(void *a1@<X8>)
{
  return sub_1C0EAA0D4(*(id *)(v1 + 24), a1);
}

uint64_t sub_1C0EAFF38@<X0>(void *a1@<X8>)
{
  return sub_1C0EAA038(a1);
}

uint64_t sub_1C0EAFF44@<X0>(void *a1@<X8>)
{
  return sub_1C0EA9EB8(*(void *)(v1 + 24), *(void *)(v1 + 32), (Class *)off_1E6414D90, (SEL *)&selRef_initWithTitle_url_sportsTag_tagImageProvider_, a1);
}

uint64_t objectdestroy_45Tm_0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EAFFC0@<X0>(void *a1@<X8>)
{
  return sub_1C0EA9EB8(*(void *)(v1 + 24), *(void *)(v1 + 32), (Class *)off_1E6414D88, (SEL *)&selRef_initWithTitle_url_sportsEvent_tagImageProvider_, a1);
}

void sub_1C0EAFFF0(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    sub_1C151B3AC();
    a3();
    unint64_t v5 = sub_1C151AEFC();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C0EB006C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C151AEFC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0EB00D4(uint64_t a1)
{
  return sub_1C10D3074(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0EB00DC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EB0118(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1C0EAF784(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC845BC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(tag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(issue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(puzzle:shareData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(puzzleType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(channel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(feedDescriptor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(issue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(channel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(tag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(feedDescriptor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItem(for:feedItemIdentifier:type:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 104))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItem(for:type:tracker:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

{
  return (*(uint64_t (**)(void))(a6 + 128))();
}

{
  return (*(uint64_t (**)(void))(a6 + 160))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItem(for:type:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 120))();
}

{
  return (*(uint64_t (**)(void))(a7 + 136))();
}

{
  return (*(uint64_t (**)(void))(a7 + 144))();
}

{
  return (*(uint64_t (**)(void))(a7 + 152))();
}

uint64_t method lookup function for SharingActivityItemFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingActivityItemFactory);
}

uint64_t dispatch thunk of SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:shareLinkImageProvider:shareLinkPuzzleImageProvider:puzzleRankProvider:puzzleDifficultyDescriptionProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1C0EB0360()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EB03A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1BFC542F4;
  return sub_1C139965C(a1, v4, v5, v7, v6);
}

uint64_t sub_1C0EB0468()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EB04A0()
{
  return swift_deallocObject();
}

id sub_1C0EB04D8@<X0>(Class *a1@<X0>, SEL *a2@<X1>, void *a3@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(*a1), *a2, *(void *)(v3 + 16));
  *a3 = result;
  return result;
}

uint64_t static FormatBezierPath.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00ECCC0(*a1, *a2);
}

uint64_t FormatBezierPathArcComponent.clockwise.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

id sub_1C0EB058C(uint64_t a1)
{
  uint64_t v4 = *v1;
  id v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v61;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = (unsigned __int8 *)(v4 + 80);
  while (1)
  {
    uint64_t v15 = *((void *)v6 - 6);
    uint64_t v16 = *((void *)v6 - 5);
    uint64_t v17 = *((void *)v6 - 4);
    uint64_t v65 = *((void *)v6 - 3);
    uint64_t v63 = *((void *)v6 - 1);
    uint64_t v64 = *((void *)v6 - 2);
    int v18 = *v6;
    v6 += 56;
    switch(v18)
    {
      case 1:
        uint64_t v22 = v17;
        sub_1C05D9C60(v15, v16, v17, v65, v64, v63, 1);
        sub_1C05D9C60(v15, v16, v22, v65, v64, v63, 1);
        swift_bridgeObjectRetain();
        double v23 = sub_1BFF493E4(a1, v15);
        if (!v2)
        {
          double v24 = v23;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          double v25 = sub_1BFF493E4(a1, v16);
          swift_bridgeObjectRelease();
          sub_1C05D9D44(v15, v16, v22, v65, v64, v63, 1);
          objc_msgSend(v61, sel_addLineToPoint_, v24, v25);
          uint64_t v8 = v15;
          uint64_t v9 = v16;
          uint64_t v10 = v22;
          uint64_t v11 = v65;
          uint64_t v12 = v64;
          uint64_t v13 = v63;
          char v14 = 1;
          break;
        }

        swift_bridgeObjectRelease();
        sub_1C05D9D44(v15, v16, v22, v65, v64, v63, 1);
        swift_bridgeObjectRelease();
        uint64_t v46 = v15;
        uint64_t v47 = v16;
        uint64_t v48 = v22;
        uint64_t v49 = v65;
        uint64_t v50 = v64;
        uint64_t v51 = v63;
        char v52 = 1;
        goto LABEL_24;
      case 2:
        uint64_t v62 = v17;
        sub_1C05D9C60(v15, v16, v17, v65, v64, v63, 2);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        double v26 = sub_1BFF493E4(a1, v15);
        if (v2)
        {

          swift_bridgeObjectRelease();
          uint64_t v53 = v15;
          uint64_t v54 = v16;
          uint64_t v55 = v62;
          uint64_t v56 = v63;
          uint64_t v57 = v65;
          uint64_t v58 = v64;
          char v59 = 2;
          goto LABEL_22;
        }
        double v27 = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        double v28 = sub_1BFF493E4(a1, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        double v29 = sub_1BFF493E4(a1, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        double v30 = sub_1BFF493E4(a1, v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        double v31 = sub_1BFF493E4(a1, v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        double v32 = sub_1BFF493E4(a1, v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        objc_msgSend(v61, sel_addCurveToPoint_controlPoint1_controlPoint2_, v27, v28, v29, v30, v31, v32);
        uint64_t v8 = v15;
        uint64_t v9 = v16;
        uint64_t v10 = v62;
        uint64_t v11 = v65;
        uint64_t v12 = v64;
        uint64_t v13 = v63;
        char v14 = 2;
        break;
      case 3:
        uint64_t v33 = v17;
        sub_1C05D9C60(v15, v16, v17, v65, v64, v63, 3);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        double v34 = sub_1BFF493E4(a1, v15);
        if (v2)
        {

          swift_bridgeObjectRelease();
          uint64_t v53 = v15;
          uint64_t v54 = v16;
          uint64_t v55 = v33;
          uint64_t v57 = v65;
          uint64_t v56 = v63;
          uint64_t v58 = v64;
          char v59 = 3;
LABEL_22:
          sub_1C05D9D44(v53, v54, v55, v57, v58, v56, v59);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_23:
          swift_bridgeObjectRelease();
          return v61;
        }
        double v35 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        double v36 = sub_1BFF493E4(a1, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        double v37 = sub_1BFF493E4(a1, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        double v38 = sub_1BFF493E4(a1, v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        objc_msgSend(v61, sel_addQuadCurveToPoint_controlPoint_, v35, v36, v37, v38);
        uint64_t v8 = v15;
        uint64_t v9 = v16;
        uint64_t v10 = v33;
        uint64_t v11 = v65;
        uint64_t v13 = v63;
        uint64_t v12 = v64;
        char v14 = 3;
        break;
      case 4:
        uint64_t v39 = v17;
        sub_1C05D9C60(v15, v16, v17, v65, v64, v63, 4);
        sub_1C05D9C60(v15, v16, v39, v65, v64, v63, 4);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        double v40 = sub_1BFF493E4(a1, v15);
        if (!v2)
        {
          double v41 = v40;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          double v42 = sub_1BFF493E4(a1, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRetain();
          double v43 = sub_1BFF493E4(a1, v39);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          double v44 = sub_1BFF493E4(a1, v65);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          double v45 = sub_1BFF493E4(a1, v64);
          swift_bridgeObjectRelease();
          sub_1C05D9D44(v15, v16, v39, v65, v64, v63, 4);
          objc_msgSend(v61, sel_addArcWithCenter_radius_startAngle_endAngle_clockwise_, v63 & 1, v41, v42, v43, v44, v45);
          uint64_t v8 = v15;
          uint64_t v9 = v16;
          uint64_t v10 = v39;
          uint64_t v11 = v65;
          uint64_t v12 = v64;
          uint64_t v13 = v63;
          char v14 = 4;
          break;
        }

        swift_bridgeObjectRelease();
        sub_1C05D9D44(v15, v16, v39, v65, v64, v63, 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v46 = v15;
        uint64_t v47 = v16;
        uint64_t v48 = v39;
        uint64_t v49 = v65;
        uint64_t v50 = v64;
        uint64_t v51 = v63;
        char v52 = 4;
LABEL_24:
        sub_1C05D9D44(v46, v47, v48, v49, v50, v51, v52);
        return v61;
      case 5:
        objc_msgSend(v61, sel_closePath, v17);
        if (--v5) {
          continue;
        }
        goto LABEL_23;
      default:
        uint64_t v19 = v17;
        sub_1C05D9C60(v15, v16, v17, v65, v64, v63, 0);
        sub_1C05D9C60(v15, v16, v19, v65, v64, v63, 0);
        swift_bridgeObjectRetain();
        double v20 = sub_1BFF493E4(a1, v15);
        if (v2)
        {

          swift_bridgeObjectRelease();
          sub_1C05D9D44(v15, v16, v19, v65, v64, v63, 0);
          swift_bridgeObjectRelease();
          uint64_t v46 = v15;
          uint64_t v47 = v16;
          uint64_t v48 = v19;
          uint64_t v49 = v65;
          uint64_t v50 = v64;
          uint64_t v51 = v63;
          char v52 = 0;
          goto LABEL_24;
        }
        double v21 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        double v7 = sub_1BFF493E4(a1, v16);
        swift_bridgeObjectRelease();
        sub_1C05D9D44(v15, v16, v19, v65, v64, v63, 0);
        objc_msgSend(v61, sel_moveToPoint_, v21, v7);
        uint64_t v8 = v15;
        uint64_t v9 = v16;
        uint64_t v10 = v19;
        uint64_t v11 = v65;
        uint64_t v12 = v64;
        uint64_t v13 = v63;
        char v14 = 0;
        break;
    }
    sub_1C05D9D44(v8, v9, v10, v11, v12, v13, v14);
    if (!--v5) {
      goto LABEL_23;
    }
  }
}

uint64_t FormatBezierPath.components.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EB11E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatBezierPath.init(from:)(a1, a2);
}

uint64_t sub_1C0EB1200(void *a1)
{
  return FormatBezierPath.encode(to:)(a1);
}

uint64_t sub_1C0EB1218(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00ECCC0(*a1, *a2);
}

double sub_1C0EB1224@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v110 = *(void *)(a1 + 24);
  uint64_t v111 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 40);
  switch(*(unsigned char *)(a1 + 48))
  {
    case 1:
      sub_1BFE700F0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v112 = a2;
      uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 72);
      unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
      int v18 = (void *)(v9 + v17);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v3, v18);
      uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
      double v20 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
      v20(v18, 0, 1, v19);
      double v21 = (void *)((char *)v18 + v16);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v4, v21);
      v20(v21, 0, 1, v19);
      uint64_t v14 = 1701734732;
      goto LABEL_4;
    case 2:
      uint64_t v106 = *(void *)(a1 + 32);
      uint64_t v108 = *(void *)(a1 + 8);
      uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      uint64_t v104 = *(void *)(a1 + 40);
      sub_1BFE700F0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v24 = *(void *)(*(void *)(v23 - 8) + 72);
      uint64_t v25 = *(unsigned __int8 *)(*(void *)(v23 - 8) + 80);
      uint64_t v26 = (v25 + 32) & ~v25;
      uint64_t v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_1C152C7F0;
      uint64_t v102 = (void *)(v95 + v26);
      uint64_t v96 = v26;
      sub_1BFE700F0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v22);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C1527210;
      double v29 = (void *)(v28 + v26);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v3, v29);
      uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
      double v31 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
      v31(v29, 0, 1, v30);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v108, (void *)((char *)v29 + v24));
      v31((void *)((char *)v29 + v24), 0, 1, v30);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v28, v115);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v32 = swift_allocObject();
      *(void *)(inited + 32) = v32;
      *(void *)(v32 + 48) = v116;
      long long v33 = v115[1];
      *(_OWORD *)(v32 + 16) = v115[0];
      *(_OWORD *)(v32 + 32) = v33;
      uint64_t v34 = sub_1C0233FC8(inited);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      double v35 = sub_1C131B79C(v34);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x746E696F50, 0xE500000000000000, (uint64_t)v35, 0, 0, v102);
      v31(v102, 0, 1, v30);
      uint64_t v36 = swift_initStackObject();
      *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1C1527210;
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v111, (void *)(v37 + v96));
      v31((void *)(v37 + v96), 0, 1, v30);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v110, (void *)(v37 + v96 + v24));
      v31((void *)(v37 + v96 + v24), 0, 1, v30);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v37, &v117);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v36 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v36 + 64) = &off_1F1BDEC90;
      uint64_t v38 = swift_allocObject();
      *(void *)(v36 + 32) = v38;
      *(void *)(v38 + 48) = v119;
      long long v39 = v118;
      *(_OWORD *)(v38 + 16) = v117;
      *(_OWORD *)(v38 + 32) = v39;
      uint64_t v40 = sub_1C0233FC8(v36);
      swift_setDeallocating();
      swift_arrayDestroy();
      double v41 = sub_1C131B79C(v40);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x206C6F72746E6F43, 0xEF3120746E696F50, (uint64_t)v41, 0, 0, (void *)((char *)v102 + v24));
      v31((void *)((char *)v102 + v24), 0, 1, v30);
      uint64_t v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C1529AE0;
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1C1527210;
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v106, (void *)(v43 + v96));
      v31((void *)(v43 + v96), 0, 1, v30);
      double v44 = (void *)(v43 + v96 + v24);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v104, v44);
      v31(v44, 0, 1, v30);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v43, &v120);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v42 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v42 + 64) = &off_1F1BDEC90;
      uint64_t v45 = swift_allocObject();
      *(void *)(v42 + 32) = v45;
      *(void *)(v45 + 48) = v122;
      long long v46 = v121;
      *(_OWORD *)(v45 + 16) = v120;
      *(_OWORD *)(v45 + 32) = v46;
      uint64_t v47 = sub_1C0233FC8(v42);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v48 = sub_1C131B79C(v47);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x206C6F72746E6F43, 0xEF3220746E696F50, (uint64_t)v48, 0, 0, (void *)((char *)v102 + 2 * v24));
      v31((void *)((char *)v102 + 2 * v24), 0, 1, v30);
      sub_1C09BCFA4(0x6576727543, 0xE500000000000000, 0, 0, v95, v123);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      a2[3] = (uint64_t)&type metadata for FormatInspectionGroup;
      a2[4] = (uint64_t)&off_1F1BDEC90;
      goto LABEL_11;
    case 3:
      uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFE700F0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v51 = *(void *)(*(void *)(v50 - 8) + 72);
      uint64_t v52 = *(unsigned __int8 *)(*(void *)(v50 - 8) + 80);
      uint64_t v53 = (v52 + 32) & ~v52;
      uint64_t v113 = a2;
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1C1527210;
      uint64_t v100 = v54;
      unint64_t v103 = (void *)(v54 + v53);
      sub_1BFE700F0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v49);
      uint64_t v55 = swift_initStackObject();
      *(_OWORD *)(v55 + 16) = xmmword_1C1529AE0;
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_1C1527210;
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v3, (void *)(v56 + v53));
      uint64_t v57 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v58 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
      v58(v56 + v53, 0, 1, v57);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v4, (void *)(v56 + v53 + v51));
      v58(v56 + v53 + v51, 0, 1, v57);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v56, &v117);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v55 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v55 + 64) = &off_1F1BDEC90;
      uint64_t v59 = swift_allocObject();
      *(void *)(v55 + 32) = v59;
      *(void *)(v59 + 48) = v119;
      long long v60 = v118;
      *(_OWORD *)(v59 + 16) = v117;
      *(_OWORD *)(v59 + 32) = v60;
      uint64_t v61 = sub_1C0233FC8(v55);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v62 = sub_1C131B79C(v61);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x746E696F50, 0xE500000000000000, (uint64_t)v62, 0, 0, v103);
      uint64_t v63 = v58;
      v58((uint64_t)v103, 0, 1, v57);
      uint64_t v64 = swift_initStackObject();
      *(_OWORD *)(v64 + 16) = xmmword_1C1529AE0;
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_1C1527210;
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v111, (void *)(v65 + v53));
      v63(v65 + v53, 0, 1, v57);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v110, (void *)(v65 + v53 + v51));
      v63(v65 + v53 + v51, 0, 1, v57);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v65, &v120);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v64 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v64 + 64) = &off_1F1BDEC90;
      uint64_t v66 = swift_allocObject();
      *(void *)(v64 + 32) = v66;
      *(void *)(v66 + 48) = v122;
      long long v67 = v121;
      *(_OWORD *)(v66 + 16) = v120;
      *(_OWORD *)(v66 + 32) = v67;
      uint64_t v68 = sub_1C0233FC8(v64);
      swift_setDeallocating();
      swift_arrayDestroy();
      __n128 v69 = sub_1C131B79C(v68);
      swift_bridgeObjectRelease();
      uint64_t v70 = (uint64_t)v69;
      a2 = v113;
      sub_1C042F458(0x206C6F72746E6F43, 0xED0000746E696F50, v70, 0, 0, (void *)((char *)v103 + v51));
      v63((uint64_t)v103 + v51, 0, 1, v57);
      sub_1C09BCFA4(0x7275432064617551, 0xEA00000000006576, 0, 0, v100, v123);
      swift_setDeallocating();
      goto LABEL_8;
    case 4:
      uint64_t v107 = *(void *)(a1 + 32);
      uint64_t v109 = *(void *)(a1 + 8);
      uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      uint64_t v105 = *(void *)(a1 + 40);
      sub_1BFE700F0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v73 = *(void *)(v72 - 8);
      uint64_t v114 = a2;
      unint64_t v74 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      uint64_t v99 = 4 * *(void *)(v73 + 72);
      uint64_t v75 = *(void *)(v73 + 72);
      uint64_t v76 = v3;
      uint64_t v101 = swift_allocObject();
      *(_OWORD *)(v101 + 16) = xmmword_1C152C7E0;
      v97 = (void *)(v101 + v74);
      sub_1BFE700F0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v71);
      uint64_t v77 = swift_initStackObject();
      *(_OWORD *)(v77 + 16) = xmmword_1C1529AE0;
      uint64_t v98 = 2 * v75;
      uint64_t v78 = v75;
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1C1527210;
      unint64_t v80 = v79 + v74;
      sub_1C05D9C60(v76, v109, v111, v110, v107, v5, 4);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v76, (void *)(v79 + v74));
      uint64_t v81 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v82 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
      v82(v80, 0, 1, v81);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v109, (void *)(v80 + v78));
      v82(v80 + v78, 0, 1, v81);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v79, &v120);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v77 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v77 + 64) = &off_1F1BDEC90;
      uint64_t v83 = swift_allocObject();
      *(void *)(v77 + 32) = v83;
      *(void *)(v83 + 48) = v122;
      long long v84 = v121;
      *(_OWORD *)(v83 + 16) = v120;
      *(_OWORD *)(v83 + 32) = v84;
      uint64_t v85 = sub_1C0233FC8(v77);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v86 = sub_1C131B79C(v85);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x7265746E6543, 0xE600000000000000, (uint64_t)v86, 0, 0, v97);
      v82((unint64_t)v97, 0, 1, v81);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x737569646152, 0xE600000000000000, v111, (void *)((char *)v97 + v78));
      v82((unint64_t)v97 + v78, 0, 1, v81);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x6E41207472617453, 0xEB00000000656C67, v110, (void *)((char *)v97 + v98));
      v82((unint64_t)v97 + v98, 0, 1, v81);
      uint64_t v87 = (void *)((char *)v97 + v98 + v78);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x6C676E4120646E45, 0xE900000000000065, v107, v87);
      v82((unint64_t)v87, 0, 1, v81);
      uint64_t v88 = (char *)v97 + v99;
      sub_1C05D9D44(v76, v109, v111, v110, v107, v105, 4);
      uint64_t v89 = (char *)v97 + v99 + *(int *)(v81 + 24);
      *uint64_t v89 = v105 & 1;
      uint64_t v90 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 0, 1, v90);
      *(_OWORD *)uint64_t v88 = xmmword_1C15B1FD0;
      *((void *)v88 + 2) = 0;
      *((void *)v88 + 3) = 0;
      uint64_t v91 = (char *)v97 + v99 + *(int *)(v81 + 28);
      *(void *)uint64_t v91 = 0;
      *((void *)v91 + 1) = 0;
      v91[16] = -1;
      v82((unint64_t)v97 + v99, 0, 1, v81);
      a2 = v114;
      sub_1C09BCFA4(6517313, 0xE300000000000000, 0, 0, v101, v123);
      swift_setDeallocating();
LABEL_8:
      swift_arrayDestroy();
      swift_deallocClassInstance();
      a2[3] = (uint64_t)&type metadata for FormatInspectionGroup;
      a2[4] = (uint64_t)&off_1F1BDEC90;
      goto LABEL_11;
    case 5:
      sub_1C09BCFA4(0x65736F6C43, 0xE500000000000000, 0, 0, MEMORY[0x1E4FBC860], v123);
      goto LABEL_10;
    default:
      sub_1BFE700F0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v112 = a2;
      uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 72);
      unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
      uint64_t v10 = (void *)(v9 + v8);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v3, v10);
      uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
      v12(v10, 0, 1, v11);
      uint64_t v13 = (void *)((char *)v10 + v7);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v4, v13);
      v12(v13, 0, 1, v11);
      uint64_t v14 = 1702260557;
LABEL_4:
      sub_1C09BCFA4(v14, 0xE400000000000000, 0, 0, v9, v123);
      swift_setDeallocating();
      a2 = v112;
      swift_arrayDestroy();
      swift_deallocClassInstance();
LABEL_10:
      a2[3] = (uint64_t)&type metadata for FormatInspectionGroup;
      a2[4] = (uint64_t)&off_1F1BDEC90;
LABEL_11:
      uint64_t v92 = swift_allocObject();
      *a2 = v92;
      double result = *(double *)v123;
      long long v94 = v123[1];
      *(_OWORD *)(v92 + 16) = v123[0];
      *(_OWORD *)(v92 + 32) = v94;
      *(void *)(v92 + 48) = v124;
      return result;
  }
}

uint64_t sub_1C0EB284C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBezierPathComponent.init(from:)(a1, a2);
}

uint64_t sub_1C0EB2864(void *a1)
{
  return FormatBezierPathComponent.encode(to:)(a1);
}

uint64_t FormatBezierPathCurveComponent.point.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathCurveComponent.controlPoint1.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathCurveComponent.controlPoint2.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EB2934@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatBezierPathCurveComponent.init(from:)(a1, a2);
}

uint64_t sub_1C0EB294C(void *a1)
{
  return FormatBezierPathCurveComponent.encode(to:)(a1);
}

uint64_t FormatBezierPathQuadCurveComponent.point.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathQuadCurveComponent.controlPoint.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EB29E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBezierPathQuadCurveComponent.init(from:)(a1, a2);
}

uint64_t sub_1C0EB29F8(void *a1)
{
  return FormatBezierPathQuadCurveComponent.encode(to:)(a1);
}

uint64_t FormatBezierPathArcComponent.center.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.radius.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.startAngle.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.endAngle.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.clockwise.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*FormatBezierPathArcComponent.clockwise.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0EB2A9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBezierPathArcComponent.init(from:)(a1, a2);
}

uint64_t sub_1C0EB2AB4(void *a1)
{
  return FormatBezierPathArcComponent.encode(to:)(a1);
}

BOOL _s8NewsFeed30FormatBezierPathCurveComponentV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v19 = a1[2];
  uint64_t v20 = a1[3];
  uint64_t v4 = a1[5];
  uint64_t v18 = a1[4];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v11 = sub_1C00DE998(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00DE998(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if ((v12 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00DE998(v19, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1C00DE998(v20, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if ((v14 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v15 = sub_1C00DE998(v18, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v16 = sub_1C00DE998(v4, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return (v16 & 1) != 0;
}

BOOL _s8NewsFeed34FormatBezierPathQuadCurveComponentV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v10 = sub_1C00DE998(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_1C00DE998(v2, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if ((v11 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00DE998(v5, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00DE998(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return (v13 & 1) != 0;
}

uint64_t _s8NewsFeed28FormatBezierPathArcComponentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  int v10 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_1C00DE998(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00DE998(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00DE998(v18, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1C00DE998(v17, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v15 = sub_1C00DE998(v19, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15) {
    return v4 ^ v10 ^ 1u;
  }
  else {
    return 0;
  }
}

uint64_t _s8NewsFeed25FormatBezierPathComponentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v42 = *(void *)(a2 + 24);
  uint64_t v43 = *(void *)(a2 + 32);
  uint64_t v44 = *(void *)(a2 + 40);
  uint64_t v45 = *(void *)(a1 + 32);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  switch(v7)
  {
    case 1:
      if (v11 != 1) {
        goto LABEL_18;
      }
      uint64_t v34 = *(void *)a2;
      uint64_t v36 = *(void *)(a2 + 16);
      uint64_t v15 = *(void *)(a1 + 40);
      sub_1C05D9C60(*(void *)a2, v8, v10, v42, v43, v44, 1);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v15, 1);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v15, 1);
      sub_1C05D9C60(v34, v8, v36, v42, v43, v44, 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v16 = sub_1C00DE998(v2, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        sub_1C05D9D44(v2, v3, v5, v4, v45, v15, 1);
        sub_1C05D9D44(v34, v8, v36, v42, v43, v44, 1);
        sub_1C05D9D44(v34, v8, v36, v42, v43, v44, 1);
        uint64_t v23 = v2;
        uint64_t v24 = v3;
        uint64_t v25 = v5;
        uint64_t v26 = v4;
        uint64_t v27 = v45;
        uint64_t v28 = v15;
        char v29 = 1;
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v32 = sub_1C00DE998(v3, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v14 = 1;
      sub_1C05D9D44(v2, v3, v5, v4, v45, v15, 1);
      sub_1C05D9D44(v34, v8, v36, v42, v43, v44, 1);
      sub_1C05D9D44(v34, v8, v36, v42, v43, v44, 1);
      sub_1C05D9D44(v2, v3, v5, v4, v45, v15, 1);
      if ((v32 & 1) == 0) {
        goto LABEL_20;
      }
      return v14 & 1;
    case 2:
      if (v11 != 2) {
        goto LABEL_18;
      }
      uint64_t v52 = *(void *)a1;
      uint64_t v53 = v3;
      uint64_t v54 = v5;
      uint64_t v55 = v4;
      uint64_t v56 = v45;
      uint64_t v57 = v6;
      uint64_t v46 = v9;
      uint64_t v47 = v8;
      uint64_t v48 = v10;
      uint64_t v49 = v42;
      uint64_t v50 = v43;
      uint64_t v51 = v44;
      uint64_t v37 = v10;
      uint64_t v17 = v6;
      sub_1C05D9C60(v9, v8, v10, v42, v43, v44, 2);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v17, 2);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v17, 2);
      sub_1C05D9C60(v9, v8, v37, v42, v43, v44, 2);
      char v14 = _s8NewsFeed30FormatBezierPathCurveComponentV2eeoiySbAC_ACtFZ_0(&v52, &v46);
      sub_1C05D9D44(v2, v3, v5, v4, v45, v17, 2);
      sub_1C05D9D44(v9, v8, v37, v42, v43, v44, 2);
      sub_1C05D9D44(v9, v8, v37, v42, v43, v44, 2);
      sub_1C05D9D44(v2, v3, v5, v4, v45, v17, 2);
      return v14 & 1;
    case 3:
      if (v11 != 3) {
        goto LABEL_18;
      }
      uint64_t v52 = *(void *)a1;
      uint64_t v18 = v52;
      uint64_t v53 = v3;
      uint64_t v54 = v5;
      uint64_t v55 = v4;
      uint64_t v46 = v9;
      uint64_t v47 = v8;
      uint64_t v48 = v10;
      uint64_t v49 = v42;
      uint64_t v38 = v10;
      uint64_t v19 = v6;
      sub_1C05D9C60(v9, v8, v10, v42, v43, v44, 3);
      sub_1C05D9C60(v52, v3, v5, v4, v45, v19, 3);
      sub_1C05D9C60(v52, v3, v5, v4, v45, v19, 3);
      sub_1C05D9C60(v9, v8, v38, v42, v43, v44, 3);
      char v14 = _s8NewsFeed34FormatBezierPathQuadCurveComponentV2eeoiySbAC_ACtFZ_0(&v52, &v46);
      sub_1C05D9D44(v18, v3, v5, v4, v45, v19, 3);
      sub_1C05D9D44(v9, v8, v38, v42, v43, v44, 3);
      sub_1C05D9D44(v9, v8, v38, v42, v43, v44, 3);
      sub_1C05D9D44(v18, v3, v5, v4, v45, v19, 3);
      return v14 & 1;
    case 4:
      if (v11 != 4) {
        goto LABEL_18;
      }
      uint64_t v52 = *(void *)a1;
      uint64_t v53 = v3;
      uint64_t v54 = v5;
      uint64_t v55 = v4;
      uint64_t v56 = v45;
      LOBYTE(v57) = v6 & 1;
      uint64_t v46 = v9;
      uint64_t v47 = v8;
      uint64_t v48 = v10;
      uint64_t v49 = v42;
      uint64_t v50 = v43;
      LOBYTE(v51) = v44 & 1;
      uint64_t v39 = v10;
      uint64_t v20 = v6;
      sub_1C05D9C60(v9, v8, v10, v42, v43, v44, 4);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v20, 4);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v20, 4);
      sub_1C05D9C60(v9, v8, v39, v42, v43, v44, 4);
      char v14 = _s8NewsFeed28FormatBezierPathArcComponentV2eeoiySbAC_ACtFZ_0((uint64_t)&v52, (uint64_t)&v46);
      sub_1C05D9D44(v2, v3, v5, v4, v45, v20, 4);
      sub_1C05D9D44(v9, v8, v39, v42, v43, v44, 4);
      sub_1C05D9D44(v9, v8, v39, v42, v43, v44, 4);
      sub_1C05D9D44(v2, v3, v5, v4, v45, v20, 4);
      return v14 & 1;
    case 5:
      if (v11 != 5 || v8 | v9 | v10 | v42 | v43 | v44) {
        goto LABEL_18;
      }
      sub_1C05D9D44(v2, v3, v5, v4, v45, v6, 5);
      sub_1C05D9D44(0, 0, 0, v42, v43, v44, 5);
      char v14 = 1;
      return v14 & 1;
    default:
      if (*(unsigned char *)(a2 + 48))
      {
LABEL_18:
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v21 = *(void *)(a2 + 16);
        uint64_t v41 = *(void *)(a1 + 24);
        uint64_t v22 = *(void *)(a1 + 40);
        sub_1C05D9C60(v2, v40, v5, v41, v45, v6, v7);
        sub_1C05D9C60(v9, v8, v21, v42, v43, v44, v11);
        sub_1C05D9D44(v2, v40, v5, v41, v45, v22, v7);
        uint64_t v23 = v9;
        uint64_t v24 = v8;
        uint64_t v25 = v21;
        uint64_t v26 = v42;
        uint64_t v27 = v43;
        uint64_t v28 = v44;
        char v29 = v11;
LABEL_19:
        sub_1C05D9D44(v23, v24, v25, v26, v27, v28, v29);
        goto LABEL_20;
      }
      uint64_t v33 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a1 + 40);
      sub_1C05D9C60(*(void *)a2, v8, v10, v42, v43, v44, 0);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v12, 0);
      sub_1C05D9C60(v2, v3, v5, v4, v45, v12, 0);
      sub_1C05D9C60(v33, v8, v35, v42, v43, v44, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v13 = sub_1C00DE998(v2, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        sub_1C05D9D44(v2, v3, v5, v4, v45, v12, 0);
        sub_1C05D9D44(v33, v8, v35, v42, v43, v44, 0);
        sub_1C05D9D44(v33, v8, v35, v42, v43, v44, 0);
        uint64_t v23 = v2;
        uint64_t v24 = v3;
        uint64_t v25 = v5;
        uint64_t v26 = v4;
        uint64_t v27 = v45;
        uint64_t v28 = v12;
        char v29 = 0;
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v31 = sub_1C00DE998(v3, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C05D9D44(v2, v3, v5, v4, v45, v12, 0);
      sub_1C05D9D44(v33, v8, v35, v42, v43, v44, 0);
      sub_1C05D9D44(v33, v8, v35, v42, v43, v44, 0);
      sub_1C05D9D44(v2, v3, v5, v4, v45, v12, 0);
      if ((v31 & 1) == 0)
      {
LABEL_20:
        char v14 = 0;
        return v14 & 1;
      }
      char v14 = 1;
      return v14 & 1;
  }
}

unint64_t sub_1C0EB3BAC(uint64_t a1)
{
  unint64_t result = sub_1C0EB3BD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB3BD4()
{
  unint64_t result = qword_1EA1A8260;
  if (!qword_1EA1A8260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8260);
  }
  return result;
}

uint64_t sub_1C0EB3C28(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB40A8(a1, a2, a3, (uint64_t (*)(void))sub_1C086C604, (uint64_t (*)(void))sub_1C0902EF0, (uint64_t (*)(void))sub_1C0EB3C68);
}

unint64_t sub_1C0EB3C68()
{
  unint64_t result = qword_1EA1A8268;
  if (!qword_1EA1A8268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8268);
  }
  return result;
}

unint64_t sub_1C0EB3CBC(uint64_t a1)
{
  unint64_t result = sub_1C0EB3CE4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB3CE4()
{
  unint64_t result = qword_1EA1A8270;
  if (!qword_1EA1A8270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8270);
  }
  return result;
}

uint64_t sub_1C0EB3D38(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB40A8(a1, a2, a3, (uint64_t (*)(void))sub_1C0874AA0, (uint64_t (*)(void))sub_1C0900014, (uint64_t (*)(void))sub_1C0EB3D78);
}

unint64_t sub_1C0EB3D78()
{
  unint64_t result = qword_1EA1A8278;
  if (!qword_1EA1A8278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8278);
  }
  return result;
}

unint64_t sub_1C0EB3DCC(uint64_t a1)
{
  unint64_t result = sub_1C0EB3DF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB3DF4()
{
  unint64_t result = qword_1EA1A8280;
  if (!qword_1EA1A8280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8280);
  }
  return result;
}

uint64_t sub_1C0EB3E48(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB40A8(a1, a2, a3, (uint64_t (*)(void))sub_1C0875054, (uint64_t (*)(void))sub_1C08FFD48, (uint64_t (*)(void))sub_1C0EB3E88);
}

unint64_t sub_1C0EB3E88()
{
  unint64_t result = qword_1EA1A8288;
  if (!qword_1EA1A8288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8288);
  }
  return result;
}

unint64_t sub_1C0EB3EDC(uint64_t a1)
{
  unint64_t result = sub_1C0EB3F04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB3F04()
{
  unint64_t result = qword_1EA1A8290;
  if (!qword_1EA1A8290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8290);
  }
  return result;
}

uint64_t sub_1C0EB3F58(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB40A8(a1, a2, a3, (uint64_t (*)(void))sub_1C0875000, (uint64_t (*)(void))sub_1C08FFD9C, (uint64_t (*)(void))sub_1C0EB3F98);
}

unint64_t sub_1C0EB3F98()
{
  unint64_t result = qword_1EA1A8298;
  if (!qword_1EA1A8298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8298);
  }
  return result;
}

unint64_t sub_1C0EB3FEC(uint64_t a1)
{
  unint64_t result = sub_1C0EB4014();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB4014()
{
  unint64_t result = qword_1EA1A82A0;
  if (!qword_1EA1A82A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A82A0);
  }
  return result;
}

uint64_t sub_1C0EB4068(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB40A8(a1, a2, a3, (uint64_t (*)(void))sub_1C0874FAC, (uint64_t (*)(void))sub_1C08FFDF0, (uint64_t (*)(void))sub_1C0EB40FC);
}

uint64_t sub_1C0EB40A8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EB40FC()
{
  unint64_t result = qword_1EA1A82A8;
  if (!qword_1EA1A82A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A82A8);
  }
  return result;
}

uint64_t sub_1C0EB4150@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 40);
  return result;
}

unsigned char *sub_1C0EB415C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 40) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBezierPath()
{
  return &type metadata for FormatBezierPath;
}

uint64_t destroy for FormatBezierPathComponent(uint64_t a1)
{
  return sub_1C05D9D44(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for FormatBezierPathComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1C05D9C60(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatBezierPathComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1C05D9C60(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1C05D9D44(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for FormatBezierPathComponent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1C05D9D44(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_1C0EB42F4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 4u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1C0EB430C(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)unint64_t result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatBezierPathComponent()
{
  return &type metadata for FormatBezierPathComponent;
}

ValueMetadata *type metadata accessor for FormatBezierPathCurveComponent()
{
  return &type metadata for FormatBezierPathCurveComponent;
}

ValueMetadata *type metadata accessor for FormatBezierPathQuadCurveComponent()
{
  return &type metadata for FormatBezierPathQuadCurveComponent;
}

uint64_t destroy for FormatBezierPathArcComponent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatBezierPathArcComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatBezierPathArcComponent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FormatBezierPathArcComponent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBezierPathArcComponent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBezierPathArcComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBezierPathArcComponent()
{
  return &type metadata for FormatBezierPathArcComponent;
}

void *sub_1C0EB45F4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F6350(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v5 = (unsigned char *)(v2 + 80);
    do
    {
      char v6 = *v5;
      v11[0] = *((_OWORD *)v5 - 3);
      v11[1] = *((_OWORD *)v5 - 2);
      void v11[2] = *((_OWORD *)v5 - 1);
      char v12 = v6;
      sub_1C0EB1224((uint64_t)v11, v13);
      uint64_t v14 = v4;
      unint64_t v8 = *(void *)(v4 + 16);
      unint64_t v7 = *(void *)(v4 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1C05F6350(v7 > 1, v8 + 1, 1);
        uint64_t v4 = v14;
      }
      *(void *)(v4 + 16) = v8 + 1;
      sub_1C0186BD0((uint64_t)v13, v4 + 40 * v8 + 32);
      v5 += 56;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  uint64_t v9 = sub_1C131B79C(v4);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C0EB4734()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _s8NewsFeed26FormatComputedInvalidationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(__int16 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(__int16 *)(a2 + 24);
  if (v5 < 0)
  {
    if (v9 < 0)
    {
      v15[0] = *(void *)a1;
      v15[1] = v2;
      v15[2] = v4;
      __int16 v16 = v5 & 0x7FFF;
      v13[0] = v7;
      v13[1] = v6;
      void v13[2] = v8;
      __int16 v14 = v9 & 0x7FFF;
      sub_1BFF523F0(v7, v6, v8, v9);
      sub_1BFF523F0(v3, v2, v4, v5);
      sub_1BFF523F0(v3, v2, v4, v5);
      sub_1BFF523F0(v7, v6, v8, v9);
      char v10 = static FormatCommandBinding.== infix(_:_:)(v15, v13);
      goto LABEL_7;
    }
  }
  else if ((v9 & 0x80000000) == 0)
  {
    sub_1BFF523F0(*(void *)a2, *(void *)(a2 + 8), v8, v9);
    sub_1BFF523F0(v3, v2, v4, v5);
    sub_1BFF523F0(v3, v2, v4, v5);
    sub_1BFF523F0(v7, v6, v8, v9);
    char v10 = sub_1C00DE998(v3, v7);
LABEL_7:
    char v11 = v10;
    sub_1BFF51E5C(v3, v2, v4, v5);
    sub_1BFF51E5C(v7, v6, v8, v9);
    sub_1BFF51E5C(v7, v6, v8, v9);
    sub_1BFF51E5C(v3, v2, v4, v5);
    return v11 & 1;
  }
  sub_1BFF523F0(*(void *)a1, v2, v4, v5);
  sub_1BFF523F0(v7, v6, v8, v9);
  sub_1BFF51E5C(v3, v2, v4, v5);
  sub_1BFF51E5C(v7, v6, v8, v9);
  char v11 = 0;
  return v11 & 1;
}

unint64_t sub_1C0EB4980(uint64_t a1)
{
  unint64_t result = sub_1C0EB49A8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB49A8()
{
  unint64_t result = qword_1EA1A82B0;
  if (!qword_1EA1A82B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A82B0);
  }
  return result;
}

unint64_t sub_1C0EB49FC(void *a1)
{
  a1[1] = sub_1BFE3D014();
  a1[2] = sub_1BFFF26A0();
  unint64_t result = sub_1C0EB4A34();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EB4A34()
{
  unint64_t result = qword_1EA1A82B8;
  if (!qword_1EA1A82B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A82B8);
  }
  return result;
}

uint64_t destroy for FormatComputedInvalidation(uint64_t a1)
{
  return sub_1BFF51E5C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_WORD *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatComputedInvalidation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  __int16 v6 = *(_WORD *)(a2 + 24);
  sub_1BFF523F0(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatComputedInvalidation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  __int16 v6 = *(_WORD *)(a2 + 24);
  sub_1BFF523F0(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  __int16 v10 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v6;
  sub_1BFF51E5C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatComputedInvalidation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  __int16 v8 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1BFF51E5C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatComputedInvalidation()
{
  return &type metadata for FormatComputedInvalidation;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatComputedInvalidation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1BFF6BF20(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for FormatComputedInvalidation.Result(uint64_t a1)
{
  return sub_1BFF51CE0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for FormatComputedInvalidation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1BFF6BF20(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1BFF51CE0(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatComputedInvalidation.Result(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1BFF51CE0(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatComputedInvalidation.Result()
{
  return &type metadata for FormatComputedInvalidation.Result;
}

id SharingIssueTextActivityItemSource.__allocating_init(issue:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = a1;
  char v4 = v3;
  id v5 = a1;
  id v6 = objc_msgSend(v5, sel_title);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  __int16 v10 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
  *__int16 v10 = v7;
  v10[1] = v9;
  id v11 = objc_msgSend(v5, sel_coverDate);
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  uint64_t v15 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
  *uint64_t v15 = v12;
  v15[1] = v14;

  v18.receiver = v4;
  v18.super_class = v1;
  id v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

id SharingIssueTextActivityItemSource.init(issue:)(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = a1;
  char v4 = v1;
  id v5 = a1;
  id v6 = objc_msgSend(v5, sel_title);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  __int16 v10 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
  *__int16 v10 = v7;
  v10[1] = v9;
  id v11 = objc_msgSend(v5, sel_coverDate);
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  uint64_t v15 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
  *uint64_t v15 = v12;
  v15[1] = v14;

  v18.receiver = v4;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

uint64_t SharingIssueTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle + 8);
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void SharingIssueTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v28[1] = *(id *)MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (sub_1C151E62C() == 0xD000000000000026 && v6 == 0x80000001C160BC20)
    {
      id v7 = a1;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    char v8 = sub_1C1520A9C();
    id v9 = a1;
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_6:
      __int16 v10 = (void *)sub_1C151E39C();
      uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle);
      uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle + 8);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v28[0] = v10;
      sub_1C1065BB8(v11, v12, 0x69742D6575737369, 0xEB00000000656C74, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue), sel_issueDescription);
      uint64_t v15 = sub_1C151E62C();
      uint64_t v17 = v16;

      char v18 = swift_isUniquelyReferenced_nonNull_native();
      sub_1C1065BB8(v15, v17, 0x75732D6575737369, 0xED00007972616D6DLL, v18);
      swift_bridgeObjectRelease();
      uint64_t v19 = self;
      uint64_t v20 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      v28[0] = 0;
      id v21 = objc_msgSend(v19, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v20, 1, v28);

      id v22 = v28[0];
      if (v21)
      {
        uint64_t v23 = sub_1C151606C();
        uint64_t v25 = v24;

        *(void *)(a2 + 24) = MEMORY[0x1E4F277C0];
        *(void *)a2 = v23;
        *(void *)(a2 + 8) = v25;
      }
      else
      {
        uint64_t v26 = v22;
        uint64_t v27 = (void *)sub_1C1515D3C();

        swift_willThrow();
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
      }
      return;
    }
  }
  sub_1C0EB5240(a1, v2, a2);
}

uint64_t sub_1C0EB5240@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;
  if (v6 == sub_1C151E62C() && v8 == v9) {
    goto LABEL_16;
  }
  char v11 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_17:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  uint64_t v13 = (void *)*MEMORY[0x1E4F435A0];
  uint64_t v14 = sub_1C151E62C();
  uint64_t v16 = v15;
  if (v14 == sub_1C151E62C() && v16 == v17)
  {
    id v29 = v13;
    id v30 = a1;

LABEL_16:
    uint64_t result = swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v19 = sub_1C1520A9C();
  id v20 = v13;
  id v21 = a1;

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_17;
  }
  id v22 = (void *)*MEMORY[0x1E4F435D0];
  uint64_t v23 = sub_1C151E62C();
  uint64_t v25 = v24;
  if (v23 == sub_1C151E62C() && v25 == v26)
  {
    id v27 = v22;
    id v28 = v21;

LABEL_22:
    uint64_t result = swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  char v31 = sub_1C1520A9C();
  id v32 = v22;
  id v33 = v21;

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v31)
  {
LABEL_23:
    *(void *)(a3 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0xE000000000000000;
    return result;
  }
  uint64_t v34 = (void *)*MEMORY[0x1E4F435B0];
  uint64_t v35 = sub_1C151E62C();
  uint64_t v37 = v36;
  if (v35 == sub_1C151E62C() && v37 == v38)
  {
    id v39 = v34;
    id v40 = v33;

    goto LABEL_22;
  }
  char v41 = sub_1C1520A9C();
  id v42 = v34;
  id v43 = v33;

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v45 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle);
  uint64_t v44 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle + 8);
  *(void *)(a3 + 24) = MEMORY[0x1E4FBB1A0];
  *(void *)a3 = v45;
  *(void *)(a3 + 8) = v44;
  return swift_bridgeObjectRetain();
}

Swift::String __swiftcall SharingIssueTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  if (dataTypeIdentifierForActivityType.value)
  {
    unint64_t v3 = 0xD00000000000001DLL;
    if (sub_1C151E62C() == 0xD000000000000026 && v4 == 0x80000001C160BC20)
    {
      id v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      unint64_t v6 = 0x80000001C160BC50;
    }
    else
    {
      char v7 = sub_1C1520A9C();
      uint64_t v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if (v7)
      {
        unint64_t v6 = 0x80000001C160BC50;
      }
      else
      {
        unint64_t v3 = 0;
        unint64_t v6 = 0xE000000000000000;
      }
    }
  }
  else
  {
    unint64_t v3 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v9 = v3;
  __int16 v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

id SharingIssueTextActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingIssueTextActivityItemSource.init()()
{
}

id SharingIssueTextActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s8NewsFeed34SharingIssueTextActivityItemSourceC22activityViewController_010subjectForF4TypeSSSo010UIActivityjK0C_So0oN0aSgtF_0()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C151E6DC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for SharingIssueTextActivityItemSource()
{
  return self;
}

uint64_t method lookup function for SharingIssueTextActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingIssueTextActivityItemSource);
}

uint64_t dispatch thunk of SharingIssueTextActivityItemSource.__allocating_init(issue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for FormatDOM()
{
  return self;
}

uint64_t sub_1C0EB5BA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C00DD510(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1C0EB5C3C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v2, 0);
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
      {
        uint64_t v5 = *(void *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v7 = *(void *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
        uint64_t v5 = sub_1C0AC6D0C();
        uint64_t v7 = v6;
        swift_release();
      }
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v8 = *(void *)(v13 + 24);
      if (v9 >= v8 >> 1) {
        sub_1BFF661B8(v8 > 1, v9 + 1, 1);
      }
      ++v3;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_1BFED9C20();
  sub_1BFE99E40();
  uint64_t v11 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C0EB5DA8()
{
  return sub_1C0EB5C3C();
}

id sub_1C0EB5E78()
{
  sub_1C15200FC();
  sub_1C151E80C();
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_newDatastore), sel_JSONString, 0, 0xE000000000000000);
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F466A8]);
  uint64_t v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithSource_injectionTime_forMainFrameOnly_, v3, 0, 1);

  return v4;
}

uint64_t sub_1C0EB6020()
{
  sub_1C15200FC();
  sub_1C151E80C();
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_newDatastore), sel_JSONString));
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0;
}

id sub_1C0EB6138()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiveActivityEmbedScript();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for LiveActivityEmbedScript()
{
  return self;
}

uint64_t FormatTypeDefinition.Case.init(identifier:name:description:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t FormatTypeDefinition.Case.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTypeDefinition.Enum.cases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatTypeDefinition.Enum.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DEEB0(*a1, *a2);
}

uint64_t sub_1C0EB6238(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DEEB0(*a1, *a2);
}

uint64_t FormatTypeDefinition.Case.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTypeDefinition.Case.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTypeDefinition.Case.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatTypeDefinition.Case.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatTypeDefinition.Case.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatTypeDefinition.Case.description.modify())(void)
{
  return nullsub_1;
}

uint64_t _s8NewsFeed20FormatTypeDefinitionO4CaseV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_1C1520A9C(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_1C1520A9C(), uint64_t result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        return sub_1C1520A9C();
      }
    }
  }
  return result;
}

BOOL _s8NewsFeed20FormatTypeDefinitionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v54 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  unsigned int v55 = *(unsigned __int8 *)(a1 + 48);
  unsigned int v13 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v56 = v7;
  if (!(v55 >> 6))
  {
    if (v13 >= 0x40) {
      goto LABEL_13;
    }
    uint64_t v44 = *(void *)(a2 + 24);
    uint64_t v47 = *(void *)(a1 + 40);
    uint64_t v16 = *(void *)(a2 + 40);
    uint64_t v41 = *(void *)a1;
    uint64_t v17 = *(void *)(a2 + 16);
    uint64_t v18 = *(void *)(a2 + 8);
    uint64_t v19 = *(void *)a2;
    uint64_t v49 = *(void *)a2;
    char v40 = sub_1C00DEEB0((uint64_t)v2, (uint64_t)v8);
    sub_1BFF1DB64(v19, v18, v17, v44, v11, v16, v13);
    sub_1BFF1DB64(v41, v3, v4, v5, v54, v47, v55);
    sub_1BFEC28BC(v41, v3, v4, v5, v54, v47, v55);
    uint64_t v20 = v49;
    uint64_t v21 = v56;
    uint64_t v22 = v17;
    uint64_t v23 = v44;
    uint64_t v24 = v11;
    uint64_t v25 = v16;
    unsigned __int8 v26 = v13;
LABEL_12:
    sub_1BFEC28BC(v20, v21, v22, v23, v24, v25, v26);
    return v40 & 1;
  }
  if (v55 >> 6 != 1)
  {
    if ((v13 & 0xC0) != 0x80) {
      goto LABEL_13;
    }
    uint64_t v45 = *(void *)(a2 + 24);
    uint64_t v52 = *(void *)(a2 + 16);
    uint64_t v42 = *(void *)a1;
    unsigned __int8 v27 = *(unsigned char *)(a2 + 48);
    uint64_t v28 = *(void *)a1;
    uint64_t v29 = *(void *)(a2 + 8);
    uint64_t v30 = *(void *)a2;
    sub_1BFF1DB64((uint64_t)v8, v7, v9, v45, v11, v12, v27);
    sub_1BFF1DB64(v28, v3, v4, v5, v54, v6, v55);
    sub_1BFF1DB64(v30, v29, v52, v45, v11, v12, v27);
    sub_1BFF1DB64(v42, v3, v4, v5, v54, v6, v55);
    char v40 = sub_1C00DFB04(v42, v30);
    sub_1BFEC28BC(v42, v3, v4, v5, v54, v6, v55);
    sub_1BFEC28BC(v30, v56, v52, v45, v11, v12, v27);
    sub_1BFEC28BC(v30, v56, v52, v45, v11, v12, v27);
    uint64_t v20 = v42;
    uint64_t v21 = v3;
    uint64_t v22 = v4;
    uint64_t v23 = v5;
    uint64_t v24 = v54;
    uint64_t v25 = v6;
    unsigned __int8 v26 = v55;
    goto LABEL_12;
  }
  if ((v13 & 0xC0) != 0x40)
  {
LABEL_13:
    uint64_t v50 = *(void *)a2;
    uint64_t v53 = *(void *)(a2 + 16);
    unsigned __int8 v43 = *(unsigned char *)(a2 + 48);
    uint64_t v31 = *(void *)a1;
    sub_1BFF1DB64((uint64_t)v8, v7, v9, v10, v11, v12, v43);
    sub_1BFF1DB64(v31, v3, v4, v5, v54, v6, v55);
    sub_1BFEC28BC(v31, v3, v4, v5, v54, v6, v55);
    uint64_t v32 = v50;
    uint64_t v33 = v53;
    uint64_t v34 = v56;
    uint64_t v35 = v10;
    uint64_t v36 = v11;
    uint64_t v37 = v12;
    unsigned __int8 v38 = v43;
    goto LABEL_14;
  }
  uint64_t v48 = *(void *)a2;
  uint64_t v51 = *(void *)(a2 + 16);
  uint64_t v46 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)a1;
  if (sub_1BFE9E788(v2, v8))
  {
    sub_1BFF1DB64(v48, v56, v51, v10, v11, v12, v13);
    sub_1BFF1DB64(v14, v3, v4, v5, v54, v46, v55);
    sub_1BFF1DB64(v48, v56, v51, v10, v11, v12, v13);
    sub_1BFF1DB64(v14, v3, v4, v5, v54, v46, v55);
    if (sub_1C00F116C(v3, v56))
    {
      v59[0] = v4;
      v59[1] = v5;
      v59[2] = v54;
      v59[3] = v46;
      char v60 = v55 & 1;
      v57[0] = v51;
      v57[1] = v10;
      v57[2] = v11;
      v57[3] = v12;
      char v58 = v13 & 1;
      char v39 = static FormatStateMachineInput.== infix(_:_:)(v59, v57);
      sub_1BFEC28BC(v14, v3, v4, v5, v54, v46, v55);
      sub_1BFEC28BC(v48, v56, v51, v10, v11, v12, v13);
      sub_1BFEC28BC(v48, v56, v51, v10, v11, v12, v13);
      sub_1BFEC28BC(v14, v3, v4, v5, v54, v46, v55);
      return (v39 & 1) != 0;
    }
    sub_1BFEC28BC(v14, v3, v4, v5, v54, v46, v55);
    sub_1BFEC28BC(v48, v56, v51, v10, v11, v12, v13);
    sub_1BFEC28BC(v48, v56, v51, v10, v11, v12, v13);
    uint64_t v32 = v14;
    uint64_t v34 = v3;
    uint64_t v33 = v4;
    uint64_t v35 = v5;
    uint64_t v36 = v54;
    uint64_t v37 = v46;
    unsigned __int8 v38 = v55;
  }
  else
  {
    sub_1BFF1DB64(v48, v56, v51, v10, v11, v12, v13);
    sub_1BFF1DB64(v14, v3, v4, v5, v54, v46, v55);
    sub_1BFEC28BC(v14, v3, v4, v5, v54, v46, v55);
    uint64_t v32 = v48;
    uint64_t v33 = v51;
    uint64_t v34 = v56;
    uint64_t v35 = v10;
    uint64_t v36 = v11;
    uint64_t v37 = v12;
    unsigned __int8 v38 = v13;
  }
LABEL_14:
  sub_1BFEC28BC(v32, v34, v33, v35, v36, v37, v38);
  return 0;
}

unint64_t sub_1C0EB6AF0(uint64_t a1)
{
  unint64_t result = sub_1C0EB6B18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB6B18()
{
  unint64_t result = qword_1EA1A8360;
  if (!qword_1EA1A8360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8360);
  }
  return result;
}

uint64_t sub_1C0EB6B6C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB6DCC(a1, a2, a3, (uint64_t (*)(void))sub_1BFDB8E60, (uint64_t (*)(void))sub_1BFD7BA84, (uint64_t (*)(void))sub_1C0EB6BAC);
}

unint64_t sub_1C0EB6BAC()
{
  unint64_t result = qword_1EA1A8368;
  if (!qword_1EA1A8368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8368);
  }
  return result;
}

unint64_t sub_1C0EB6C00(uint64_t a1)
{
  unint64_t result = sub_1C0EB6C28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB6C28()
{
  unint64_t result = qword_1EA1A8370;
  if (!qword_1EA1A8370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8370);
  }
  return result;
}

uint64_t sub_1C0EB6C7C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB6DCC(a1, a2, a3, (uint64_t (*)(void))sub_1C0076B30, (uint64_t (*)(void))sub_1C0076B84, (uint64_t (*)(void))sub_1C0EB6CBC);
}

unint64_t sub_1C0EB6CBC()
{
  unint64_t result = qword_1EA1A8378;
  if (!qword_1EA1A8378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8378);
  }
  return result;
}

unint64_t sub_1C0EB6D10(uint64_t a1)
{
  unint64_t result = sub_1C0EB6D38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EB6D38()
{
  unint64_t result = qword_1EA1A8380;
  if (!qword_1EA1A8380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8380);
  }
  return result;
}

uint64_t sub_1C0EB6D8C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EB6DCC(a1, a2, a3, (uint64_t (*)(void))sub_1BFDB941C, (uint64_t (*)(void))sub_1BFF0A300, (uint64_t (*)(void))sub_1C0EB6E20);
}

uint64_t sub_1C0EB6DCC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EB6E20()
{
  unint64_t result = qword_1EA1A8388;
  if (!qword_1EA1A8388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8388);
  }
  return result;
}

uint64_t sub_1C0EB6E74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EB6E80(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

void destroy for FormatTypeDefinition(uint64_t a1)
{
}

uint64_t initializeWithCopy for FormatTypeDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1BFF1DB64(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatTypeDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1BFF1DB64(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1BFEC28BC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for FormatTypeDefinition(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1BFEC28BC(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_1C0EB7040(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 6;
}

uint64_t sub_1C0EB704C(uint64_t result)
{
  *(unsigned char *)(result + 48) &= 0x3Fu;
  return result;
}

uint64_t sub_1C0EB705C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatTypeDefinition()
{
  return &type metadata for FormatTypeDefinition;
}

ValueMetadata *type metadata accessor for FormatTypeDefinition.Enum()
{
  return &type metadata for FormatTypeDefinition.Enum;
}

ValueMetadata *type metadata accessor for FormatTypeDefinition.Case()
{
  return &type metadata for FormatTypeDefinition.Case;
}

uint64_t TagAutomation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void TagAutomation.tagType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t TagAutomation.init(tag:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(a1, sel_asChannel);
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 != 0;
  return result;
}

uint64_t TagAutomation.automationType.getter()
{
  return 6775156;
}

NewsFeed::TagAutomation::TagType_optional __swiftcall TagAutomation.TagType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t TagAutomation.TagType.rawValue.getter()
{
  if (*v0) {
    return 0x6C656E6E616863;
  }
  else {
    return 0x6369706F74;
  }
}

uint64_t sub_1C0EB721C(char *a1, char *a2)
{
  return sub_1C14903D4(*a1, *a2);
}

uint64_t sub_1C0EB7228()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0EB72A8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0EB7314()
{
  return sub_1C1520E0C();
}

NewsFeed::TagAutomation::TagType_optional sub_1C0EB7390(Swift::String *a1)
{
  return TagAutomation.TagType.init(rawValue:)(*a1);
}

void sub_1C0EB739C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6369706F74;
  if (*v1) {
    uint64_t v2 = 0x6C656E6E616863;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0EB73D8()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0EB7438()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0EB7488()
{
  if (*v0) {
    return 0x65707954676174;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0EB74C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0EB7DF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0EB74F0(uint64_t a1)
{
  unint64_t v2 = sub_1C0EB7708();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0EB752C(uint64_t a1)
{
  unint64_t v2 = sub_1C0EB7708();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TagAutomation.encode(to:)(void *a1)
{
  sub_1C0EB79C0(0, &qword_1EA1A8390, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - v6;
  int v14 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1C0EB7708();
  sub_1C1520F0C();
  char v17 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v16 = v14;
    char v15 = 1;
    sub_1C0EB775C();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_1C0EB7708()
{
  unint64_t result = qword_1EA1A8398;
  if (!qword_1EA1A8398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8398);
  }
  return result;
}

unint64_t sub_1C0EB775C()
{
  unint64_t result = qword_1EA1A83A0;
  if (!qword_1EA1A83A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83A0);
  }
  return result;
}

uint64_t TagAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0EB79C0(0, &qword_1EA1A83A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0EB7708();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v16 = 1;
  sub_1C0EB7A24();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v13 = v17;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1C0EB79C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0EB7708();
    unint64_t v7 = a3(a1, &type metadata for TagAutomation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0EB7A24()
{
  unint64_t result = qword_1EA1A83B0;
  if (!qword_1EA1A83B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83B0);
  }
  return result;
}

unint64_t sub_1C0EB7A7C()
{
  unint64_t result = qword_1EA1A83B8;
  if (!qword_1EA1A83B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83B8);
  }
  return result;
}

unint64_t sub_1C0EB7AD4()
{
  unint64_t result = qword_1EB865B30;
  if (!qword_1EB865B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B30);
  }
  return result;
}

unint64_t sub_1C0EB7B2C()
{
  unint64_t result = qword_1EB865B28;
  if (!qword_1EB865B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B28);
  }
  return result;
}

uint64_t sub_1C0EB7B80()
{
  return 6775156;
}

uint64_t sub_1C0EB7B90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TagAutomation.init(from:)(a1, a2);
}

uint64_t sub_1C0EB7BA8(void *a1)
{
  return TagAutomation.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for TagAutomation()
{
  return &type metadata for TagAutomation;
}

ValueMetadata *type metadata accessor for TagAutomation.TagType()
{
  return &type metadata for TagAutomation.TagType;
}

unsigned char *_s8NewsFeed13TagAutomationV7TagTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0EB7CB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagAutomation.CodingKeys()
{
  return &type metadata for TagAutomation.CodingKeys;
}

unint64_t sub_1C0EB7CEC()
{
  unint64_t result = qword_1EA1A83C0;
  if (!qword_1EA1A83C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83C0);
  }
  return result;
}

unint64_t sub_1C0EB7D44()
{
  unint64_t result = qword_1EA1A83C8;
  if (!qword_1EA1A83C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83C8);
  }
  return result;
}

unint64_t sub_1C0EB7D9C()
{
  unint64_t result = qword_1EA1A83D0;
  if (!qword_1EA1A83D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83D0);
  }
  return result;
}

uint64_t sub_1C0EB7DF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65707954676174 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C0EB7EF0()
{
  unint64_t result = qword_1EA1A83D8;
  if (!qword_1EA1A83D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83D8);
  }
  return result;
}

uint64_t FormatFile.packageVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C009D844(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_1C0EB8D90((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    uint64_t v10 = &v9[*(int *)(v7 + 96)];
    uint64_t v11 = sub_1C151928C();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a1, v10, v11);
    sub_1C0EBF5E0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  else
  {
    sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v14 = sub_1C151928C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
}

void sub_1C0EB8150(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C009D844(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = *((void *)v6 + 1);
      long long v23 = *((_OWORD *)v6 + 2);
      long long v22 = *((_OWORD *)v6 + 3);
      uint64_t v24 = *((void *)v6 + 8);
      char v25 = v6[72];
      uint64_t v26 = *((void *)v6 + 12);
      __int16 v27 = *((_WORD *)v6 + 52);
      char v28 = v6[106];
      *(void *)&long long v51 = *(void *)v6;
      *((void *)&v51 + 1) = v21;
      long long v52 = *((_OWORD *)v6 + 1);
      long long v53 = v23;
      long long v54 = v22;
      *(void *)&long long v55 = v24;
      BYTE8(v55) = v25;
      v56[0] = *((_OWORD *)v6 + 5);
      *(void *)&v56[1] = v26;
      BYTE10(v56[1]) = v28;
      WORD4(v56[1]) = v27;
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(v45, a1);
      uint64_t v29 = *(void *)&v56[1];
      uint64_t v30 = WORD4(v56[1]) | (BYTE10(v56[1]) << 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFF9C84C(v29, v30);
      return;
    case 2u:
      long long v11 = *((_OWORD *)v6 + 7);
      v56[1] = *((_OWORD *)v6 + 6);
      v56[2] = v11;
      long long v57 = *((_OWORD *)v6 + 8);
      long long v12 = *((_OWORD *)v6 + 3);
      long long v53 = *((_OWORD *)v6 + 2);
      long long v54 = v12;
      long long v13 = *((_OWORD *)v6 + 5);
      long long v55 = *((_OWORD *)v6 + 4);
      v56[0] = v13;
      long long v14 = *((_OWORD *)v6 + 1);
      long long v51 = *(_OWORD *)v6;
      long long v52 = v14;
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(v58, a1);
      v50[0] = v56[1];
      v50[1] = v56[2];
      v50[2] = v57;
      long long v46 = v53;
      long long v47 = v54;
      long long v48 = v55;
      long long v49 = v56[0];
      v45[0] = v51;
      v45[1] = v52;
      sub_1C0187DF4((uint64_t)v45);
      return;
    case 3u:
      long long v31 = *((_OWORD *)v6 + 5);
      long long v55 = *((_OWORD *)v6 + 4);
      v56[0] = v31;
      v56[1] = *((_OWORD *)v6 + 6);
      *(_OWORD *)((char *)&v56[1] + 9) = *(_OWORD *)(v6 + 105);
      long long v32 = *((_OWORD *)v6 + 1);
      long long v51 = *(_OWORD *)v6;
      long long v52 = v32;
      long long v33 = *((_OWORD *)v6 + 3);
      long long v53 = *((_OWORD *)v6 + 2);
      long long v54 = v33;
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(v58, a1);
      long long v48 = v55;
      long long v49 = v56[0];
      v50[0] = v56[1];
      *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)((char *)&v56[1] + 9);
      v45[0] = v51;
      v45[1] = v52;
      long long v46 = v53;
      long long v47 = v54;
      sub_1C08845BC((uint64_t)v45);
      return;
    case 4u:
      uint64_t v8 = *((void *)v6 + 1);
      uint64_t v9 = *((void *)v6 + 6);
      *(void *)&long long v51 = *(void *)v6;
      *((void *)&v51 + 1) = v8;
      long long v10 = *((_OWORD *)v6 + 2);
      long long v52 = *((_OWORD *)v6 + 1);
      long long v53 = v10;
      *(void *)&long long v54 = v9;
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(v45, a1);
      goto LABEL_25;
    case 5u:
      type metadata accessor for FormatPackage();
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(&v51, a1);
      uint64_t v7 = (uint64_t (*)(void))type metadata accessor for FormatPackage;
      goto LABEL_20;
    case 6u:
      *(void *)&v45[0] = *(void *)v6;
      *(_OWORD *)((char *)v45 + 8) = *(_OWORD *)(v6 + 8);
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(&v51, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    case 7u:
      *(void *)&v45[0] = *(void *)v6;
      type metadata accessor for FormatSnippet();
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(&v51, a1);
      swift_release();
      return;
    case 8u:
      uint64_t v34 = *((void *)v6 + 1);
      uint64_t v35 = *((void *)v6 + 8);
      *(void *)&long long v51 = *(void *)v6;
      *((void *)&v51 + 1) = v34;
      long long v36 = *((_OWORD *)v6 + 2);
      long long v52 = *((_OWORD *)v6 + 1);
      long long v53 = v36;
      long long v54 = *((_OWORD *)v6 + 3);
      *(void *)&long long v55 = v35;
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(v45, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    case 9u:
      uint64_t v15 = *((void *)v6 + 1);
      uint64_t v16 = *((void *)v6 + 6);
      uint64_t v17 = *((void *)v6 + 7);
      char v18 = v6[80];
      char v19 = v6[104];
      *(void *)&long long v51 = *(void *)v6;
      *((void *)&v51 + 1) = v15;
      long long v20 = *((_OWORD *)v6 + 2);
      long long v52 = *((_OWORD *)v6 + 1);
      long long v53 = v20;
      *(void *)&long long v54 = v16;
      *((void *)&v54 + 1) = v17;
      long long v55 = *((_OWORD *)v6 + 4);
      LOBYTE(v56[0]) = v18;
      *(_OWORD *)((char *)v56 + 8) = *(_OWORD *)(v6 + 88);
      BYTE8(v56[1]) = v19;
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(v45, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    case 0xAu:
      uint64_t v37 = *((void *)v6 + 1);
      char v38 = v6[80];
      *(void *)&long long v51 = *(void *)v6;
      *((void *)&v51 + 1) = v37;
      long long v39 = *((_OWORD *)v6 + 2);
      long long v52 = *((_OWORD *)v6 + 1);
      long long v53 = v39;
      long long v40 = *((_OWORD *)v6 + 4);
      long long v54 = *((_OWORD *)v6 + 3);
      long long v55 = v40;
      LOBYTE(v56[0]) = v38;
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(v45, a1);
      long long v41 = v53;
      long long v42 = v54;
      long long v43 = v55;
      unsigned __int8 v44 = v56[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44);
      return;
    case 0xBu:
      type metadata accessor for FormatBindingContent();
      if (!swift_dynamicCast()) {
        goto LABEL_29;
      }
      sub_1BFF993A8(&v51, a1);
      uint64_t v7 = (uint64_t (*)(void))type metadata accessor for FormatBindingContent;
      goto LABEL_20;
    default:
      type metadata accessor for FormatContent(0);
      if (!swift_dynamicCast())
      {
LABEL_29:
        sub_1C1520A8C();
        __break(1u);
        JUMPOUT(0x1C0EB8828);
      }
      sub_1BFF993A8(&v51, a1);
      uint64_t v7 = type metadata accessor for FormatContent;
LABEL_20:
      sub_1C0EBF5E0((uint64_t)v6, v7);
      return;
  }
}

uint64_t FormatFile.filename.getter()
{
  sub_1C15200FC();
  uint64_t v0 = FormatFile.identifier.getter();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v0;
}

uint64_t FormatFile.identifier.getter()
{
  uint64_t v1 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (uint64_t *)((char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FormatContent(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C009D844(v0, (uint64_t)v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *(void *)v12;
      uint64_t v16 = *((unsigned __int16 *)v12 + 52) | (v12[106] << 16);
      uint64_t v17 = *((void *)v12 + 12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFF9C84C(v17, v16);
      return v13;
    case 2u:
      long long v18 = *((_OWORD *)v12 + 7);
      *(_OWORD *)long long v40 = *((_OWORD *)v12 + 6);
      *(_OWORD *)&v40[16] = v18;
      long long v41 = *((_OWORD *)v12 + 8);
      long long v19 = *((_OWORD *)v12 + 1);
      long long v34 = *(_OWORD *)v12;
      long long v35 = v19;
      long long v20 = *((_OWORD *)v12 + 3);
      long long v36 = *((_OWORD *)v12 + 2);
      long long v37 = v20;
      long long v21 = *((_OWORD *)v12 + 5);
      long long v38 = *((_OWORD *)v12 + 4);
      long long v39 = v21;
      uint64_t v13 = v34;
      swift_bridgeObjectRetain();
      sub_1C0187DF4((uint64_t)&v34);
      return v13;
    case 3u:
      long long v22 = *((_OWORD *)v12 + 5);
      long long v38 = *((_OWORD *)v12 + 4);
      long long v39 = v22;
      *(_OWORD *)long long v40 = *((_OWORD *)v12 + 6);
      *(_OWORD *)&v40[9] = *(_OWORD *)(v12 + 105);
      long long v23 = *((_OWORD *)v12 + 1);
      long long v34 = *(_OWORD *)v12;
      long long v35 = v23;
      long long v24 = *((_OWORD *)v12 + 3);
      long long v36 = *((_OWORD *)v12 + 2);
      long long v37 = v24;
      uint64_t v13 = v34;
      swift_bridgeObjectRetain();
      sub_1C08845BC((uint64_t)&v34);
      return v13;
    case 4u:
      uint64_t v13 = *(void *)v12;
      goto LABEL_11;
    case 5u:
      sub_1C0EB8D90((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      uint64_t v13 = *v6;
      swift_bridgeObjectRetain();
      long long v14 = (uint64_t (*)(void))type metadata accessor for FormatPackage;
      uint64_t v15 = (uint64_t)v6;
      goto LABEL_15;
    case 6u:
      uint64_t v13 = *(void *)v12;
      swift_bridgeObjectRelease();
      return v13;
    case 7u:
      uint64_t v25 = *(void *)v12;
      swift_beginAccess();
      uint64_t v13 = *(void *)(v25 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      return v13;
    case 8u:
      uint64_t v13 = *(void *)v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    case 9u:
      uint64_t v13 = *(void *)v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v13;
    case 0xAu:
      uint64_t v13 = *(void *)v12;
      uint64_t v26 = *((void *)v12 + 4);
      uint64_t v27 = *((void *)v12 + 5);
      uint64_t v28 = *((void *)v12 + 6);
      uint64_t v29 = *((void *)v12 + 7);
      uint64_t v30 = *((void *)v12 + 8);
      uint64_t v31 = *((void *)v12 + 9);
      unsigned __int8 v32 = v12[80];
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(v26, v27, v28, v29, v30, v31, v32);
      return v13;
    case 0xBu:
      sub_1C0EB8D90((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
      uint64_t v13 = *v3;
      swift_bridgeObjectRetain();
      long long v14 = (uint64_t (*)(void))type metadata accessor for FormatBindingContent;
      uint64_t v15 = (uint64_t)v3;
      goto LABEL_15;
    default:
      sub_1C0EB8D90((uint64_t)v12, (uint64_t)v9, type metadata accessor for FormatContent);
      uint64_t v13 = *v9;
      swift_bridgeObjectRetain();
      long long v14 = type metadata accessor for FormatContent;
      uint64_t v15 = (uint64_t)v9;
LABEL_15:
      sub_1C0EBF5E0(v15, v14);
      return v13;
  }
}

uint64_t sub_1C0EB8D90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FormatFile.kind.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C009D844(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 9;
      return result;
    case 2u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 1;
      return result;
    case 3u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 2;
      return result;
    case 4u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 10;
      return result;
    case 5u:
      char v8 = 3;
      goto LABEL_14;
    case 6u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 4;
      return result;
    case 7u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 5;
      return result;
    case 8u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 6;
      return result;
    case 9u:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 7;
      return result;
    case 0xAu:
      uint64_t result = sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
      *a1 = 8;
      return result;
    case 0xBu:
      char v8 = 11;
LABEL_14:
      *a1 = v8;
      return sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
    default:
      *a1 = 0;
      return sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
  }
}

uint64_t sub_1C0EB907C()
{
  uint64_t v1 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (uint64_t *)((char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FormatContent(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C009D844(v0, (uint64_t)v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *((unsigned __int16 *)v12 + 52) | (v12[106] << 16);
      uint64_t v15 = *((void *)v12 + 12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFF9C84C(v15, v14);
      break;
    case 2u:
      long long v16 = *((_OWORD *)v12 + 7);
      *(_OWORD *)long long v38 = *((_OWORD *)v12 + 6);
      *(_OWORD *)&v38[16] = v16;
      long long v39 = *((_OWORD *)v12 + 8);
      long long v17 = *((_OWORD *)v12 + 1);
      long long v32 = *(_OWORD *)v12;
      long long v33 = v17;
      long long v18 = *((_OWORD *)v12 + 3);
      long long v34 = *((_OWORD *)v12 + 2);
      long long v35 = v18;
      long long v19 = *((_OWORD *)v12 + 5);
      long long v36 = *((_OWORD *)v12 + 4);
      long long v37 = v19;
      uint64_t v13 = v32;
      swift_bridgeObjectRetain();
      sub_1C0187DF4((uint64_t)&v32);
      break;
    case 3u:
      long long v20 = *((_OWORD *)v12 + 5);
      long long v36 = *((_OWORD *)v12 + 4);
      long long v37 = v20;
      *(_OWORD *)long long v38 = *((_OWORD *)v12 + 6);
      *(_OWORD *)&v38[9] = *(_OWORD *)(v12 + 105);
      long long v21 = *((_OWORD *)v12 + 1);
      long long v32 = *(_OWORD *)v12;
      long long v33 = v21;
      long long v22 = *((_OWORD *)v12 + 3);
      long long v34 = *((_OWORD *)v12 + 2);
      long long v35 = v22;
      uint64_t v13 = v32;
      swift_bridgeObjectRetain();
      sub_1C08845BC((uint64_t)&v32);
      break;
    case 4u:
      uint64_t v13 = *(void *)v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5u:
      sub_1C0EB8D90((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      uint64_t v13 = *v6;
      swift_bridgeObjectRetain();
      sub_1C0EBF5E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      break;
    case 6u:
      uint64_t v13 = *(void *)v12;
      swift_bridgeObjectRelease();
      break;
    case 7u:
      uint64_t v23 = *(void *)v12;
      swift_beginAccess();
      uint64_t v13 = *(void *)(v23 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      break;
    case 8u:
      uint64_t v13 = *(void *)v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      uint64_t v13 = *(void *)v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 0xAu:
      uint64_t v13 = *(void *)v12;
      uint64_t v24 = *((void *)v12 + 4);
      uint64_t v25 = *((void *)v12 + 5);
      uint64_t v26 = *((void *)v12 + 6);
      uint64_t v27 = *((void *)v12 + 7);
      uint64_t v28 = *((void *)v12 + 8);
      uint64_t v29 = *((void *)v12 + 9);
      unsigned __int8 v30 = v12[80];
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(v24, v25, v26, v27, v28, v29, v30);
      break;
    case 0xBu:
      sub_1C0EB8D90((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
      uint64_t v13 = *v3;
      swift_bridgeObjectRetain();
      sub_1C0EBF5E0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
      break;
    default:
      sub_1C0EB8D90((uint64_t)v12, (uint64_t)v9, type metadata accessor for FormatContent);
      uint64_t v13 = *v9;
      swift_bridgeObjectRetain();
      sub_1C0EBF5E0((uint64_t)v9, type metadata accessor for FormatContent);
      break;
  }
  return v13;
}

uint64_t sub_1C0EB9574()
{
  sub_1C1520DCC();
  return sub_1C151E77C();
}

uint64_t sub_1C0EB95CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFile.init(from:)(a1, a2);
}

uint64_t sub_1C0EB95E4(void *a1)
{
  return FormatFile.encode(to:)(a1);
}

uint64_t sub_1C0EB9600()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0EB965C()
{
  return sub_1C0EB9574();
}

uint64_t sub_1C0EB9668()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0EB96C0(uint64_t a1, uint64_t a2)
{
  return sub_1C0EB96DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1C0EB96DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        return 0;
      }
      goto LABEL_23;
    case 2:
      if (a6 == 2) {
        goto LABEL_23;
      }
      return 0;
    case 3:
      if (a6 == 3) {
        goto LABEL_23;
      }
      return 0;
    case 4:
      if (a6 == 4) {
        goto LABEL_23;
      }
      return 0;
    case 5:
      if (a6 == 5) {
        goto LABEL_23;
      }
      return 0;
    case 6:
      if (a6 == 6) {
        goto LABEL_23;
      }
      return 0;
    case 7:
      if (a6 == 7) {
        goto LABEL_23;
      }
      return 0;
    case 8:
      if (a6 == 8) {
        goto LABEL_23;
      }
      return 0;
    case 9:
      if (a6 == 9) {
        goto LABEL_23;
      }
      return 0;
    case 10:
      if (a6 == 10) {
        goto LABEL_23;
      }
      return 0;
    case 11:
      if (a6 == 11) {
        goto LABEL_23;
      }
      return 0;
    default:
      if (a6) {
        return 0;
      }
LABEL_23:
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      else {
        return sub_1C1520A9C();
      }
  }
}

uint64_t _s8NewsFeed10FormatFileO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  v217 = (char *)a1;
  *(void *)&long long v218 = a2;
  uint64_t v2 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1F4188790](v2 - 8);
  v211 = (uint64_t *)((char *)&v207 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v4 - 8);
  v210 = (uint64_t *)((char *)&v207 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for FormatContent(0);
  MEMORY[0x1F4188790](v6 - 8);
  v209 = (uint64_t *)((char *)&v207 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v8);
  *((void *)&v216 + 1) = (char *)&v207 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v214 = (uint64_t)&v207 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v207 - v13;
  MEMORY[0x1F4188790](v15);
  v213 = (uint64_t *)((char *)&v207 - v16);
  MEMORY[0x1F4188790](v17);
  v215 = (void **)((char *)&v207 - v18);
  MEMORY[0x1F4188790](v19);
  long long v21 = (uint64_t *)((char *)&v207 - v20);
  MEMORY[0x1F4188790](v22);
  v212 = (uint64_t *)((char *)&v207 - v23);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (uint64_t *)((char *)&v207 - v25);
  MEMORY[0x1F4188790](v27);
  *(void *)&long long v216 = (char *)&v207 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (long long *)((char *)&v207 - v30);
  MEMORY[0x1F4188790](v32);
  long long v34 = (char *)&v207 - v33;
  MEMORY[0x1F4188790](v35);
  long long v37 = (uint64_t *)((char *)&v207 - v36);
  sub_1C0EBF57C();
  MEMORY[0x1F4188790](v38 - 8);
  long long v40 = (char *)&v207 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = (uint64_t)&v40[*(int *)(v41 + 56)];
  sub_1C009D844((uint64_t)v217, (uint64_t)v40);
  uint64_t v43 = v218;
  *(void *)&long long v218 = v42;
  sub_1C009D844(v43, v42);
  uint64_t v44 = (uint64_t)v40;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C009D844((uint64_t)v40, (uint64_t)v34);
      uint64_t v48 = *((void *)v34 + 1);
      uint64_t v49 = *((void *)v34 + 5);
      v215 = (void **)*((void *)v34 + 3);
      *(void *)&long long v216 = v49;
      uint64_t v50 = *((void *)v34 + 7);
      *((void *)&v216 + 1) = *((void *)v34 + 6);
      uint64_t v51 = *((void *)v34 + 10);
      uint64_t v52 = *((void *)v34 + 11);
      uint64_t v53 = *((void *)v34 + 12);
      LODWORD(v214) = *((unsigned __int16 *)v34 + 52) | (v34[106] << 16);
      long long v54 = (uint64_t *)v218;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        char v55 = v34[72];
        uint64_t v56 = *((void *)v34 + 8);
        uint64_t v57 = *((void *)v34 + 4);
        uint64_t v58 = *((void *)v34 + 2);
        uint64_t v59 = *(void *)v34;
        v217 = v40;
        uint64_t v60 = *v54;
        uint64_t v61 = v54[1];
        uint64_t v62 = v54[2];
        uint64_t v64 = v54[5];
        uint64_t v63 = v54[6];
        uint64_t v65 = v53;
        v212 = (void *)v48;
        v213 = (uint64_t *)v53;
        uint64_t v67 = v54[7];
        uint64_t v66 = v54[8];
        char v68 = *((unsigned char *)v54 + 72);
        uint64_t v70 = v54[10];
        uint64_t v69 = v54[11];
        uint64_t v208 = v54[12];
        v209 = (void *)v63;
        int v71 = *((unsigned __int8 *)v54 + 106);
        int v72 = *((unsigned __int16 *)v54 + 52);
        LODWORD(v210) = v72 | (v71 << 16);
        *(void *)&long long v239 = v59;
        *((void *)&v239 + 1) = v48;
        *(void *)&long long v240 = v58;
        *((void *)&v240 + 1) = v215;
        *(void *)v241 = v57;
        *(_OWORD *)&v241[8] = v216;
        *(void *)&v241[24] = v50;
        v211 = (void *)v50;
        *(void *)&long long v242 = v56;
        BYTE8(v242) = v55;
        *(void *)&long long v243 = v51;
        *((void *)&v243 + 1) = v52;
        *(void *)v244 = v65;
        uint64_t v73 = v214;
        v244[10] = BYTE2(v214);
        *(_WORD *)&v244[8] = v214;
        *(void *)&long long v233 = v60;
        *((void *)&v233 + 1) = v61;
        long long v218 = *(_OWORD *)(v54 + 3);
        *(_OWORD *)((char *)v234 + 8) = v218;
        *(void *)&v234[0] = v62;
        *((void *)&v234[1] + 1) = v64;
        *(void *)&long long v235 = v63;
        *((void *)&v235 + 1) = v67;
        *(void *)&long long v236 = v66;
        BYTE8(v236) = v68;
        *(void *)&long long v237 = v70;
        *((void *)&v237 + 1) = v69;
        *(void *)&v238[0] = v208;
        BYTE10(v238[0]) = v71;
        WORD4(v238[0]) = v72;
        char v74 = _s8NewsFeed16FormatDecorationV2eeoiySbAC_ACtFZ_0((uint64_t)&v239, (uint64_t)&v233);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BFF9C84C(v208, v210);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BFF9C84C((uint64_t)v213, v73);
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFF9C84C(v53, v214);
      goto LABEL_46;
    case 2u:
      sub_1C009D844((uint64_t)v40, (uint64_t)v31);
      long long v75 = v31[7];
      *(_OWORD *)v244 = v31[6];
      *(_OWORD *)&v244[16] = v75;
      long long v245 = v31[8];
      long long v76 = v31[3];
      *(_OWORD *)v241 = v31[2];
      *(_OWORD *)&v241[16] = v76;
      long long v77 = v31[5];
      long long v242 = v31[4];
      long long v243 = v77;
      long long v78 = v31[1];
      long long v239 = *v31;
      long long v240 = v78;
      uint64_t v79 = (long long *)v218;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v80 = v79[5];
        long long v81 = v79[7];
        v238[0] = v79[6];
        v238[1] = v81;
        long long v82 = v79[7];
        v238[2] = v79[8];
        long long v83 = v79[1];
        long long v84 = v79[3];
        v234[1] = v79[2];
        long long v235 = v84;
        long long v85 = v79[3];
        long long v86 = v79[5];
        long long v236 = v79[4];
        long long v237 = v86;
        long long v87 = v79[1];
        long long v233 = *v79;
        v234[0] = v87;
        long long v88 = v31[7];
        v232[0] = v31[6];
        v232[1] = v88;
        v232[2] = v31[8];
        long long v89 = v31[3];
        long long v228 = v31[2];
        long long v229 = v89;
        long long v90 = v31[5];
        long long v230 = v31[4];
        long long v231 = v90;
        long long v91 = v31[1];
        long long v226 = *v31;
        long long v227 = v91;
        v225[0] = v238[0];
        v225[1] = v82;
        v225[2] = v79[8];
        long long v221 = v234[1];
        long long v222 = v85;
        long long v223 = v236;
        long long v224 = v80;
        long long v219 = v233;
        long long v220 = v83;
        char v74 = _s8NewsFeed11FormatGroupV2eeoiySbAC_ACtFZ_0((uint64_t)&v226, (uint64_t)&v219);
        sub_1C0187DF4((uint64_t)&v233);
        sub_1C0187DF4((uint64_t)&v239);
        goto LABEL_50;
      }
      sub_1C0187DF4((uint64_t)&v239);
      goto LABEL_46;
    case 3u:
      uint64_t v92 = (long long *)v216;
      sub_1C009D844((uint64_t)v40, v216);
      long long v93 = v92[5];
      long long v242 = v92[4];
      long long v243 = v93;
      *(_OWORD *)v244 = v92[6];
      *(_OWORD *)&v244[9] = *(long long *)((char *)v92 + 105);
      long long v94 = v92[1];
      long long v239 = *v92;
      long long v240 = v94;
      long long v95 = v92[3];
      *(_OWORD *)v241 = v92[2];
      *(_OWORD *)&v241[16] = v95;
      uint64_t v96 = (long long *)v218;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        long long v97 = v96[5];
        long long v98 = v96[3];
        long long v236 = v96[4];
        long long v237 = v97;
        long long v99 = v96[5];
        v238[0] = v96[6];
        *(_OWORD *)((char *)v238 + 9) = *(long long *)((char *)v96 + 105);
        long long v100 = v96[1];
        long long v233 = *v96;
        v234[0] = v100;
        long long v101 = v96[3];
        long long v103 = *v96;
        long long v102 = v96[1];
        v234[1] = v96[2];
        long long v235 = v101;
        long long v104 = v92[5];
        long long v230 = v92[4];
        long long v231 = v104;
        v232[0] = v92[6];
        *(_OWORD *)((char *)v232 + 9) = *(long long *)((char *)v92 + 105);
        long long v105 = v92[1];
        long long v226 = *v92;
        long long v227 = v105;
        long long v106 = v92[3];
        long long v228 = v92[2];
        long long v229 = v106;
        long long v223 = v236;
        long long v224 = v99;
        v225[0] = v96[6];
        *(_OWORD *)((char *)v225 + 9) = *(long long *)((char *)v96 + 105);
        long long v219 = v103;
        long long v220 = v102;
        long long v221 = v234[1];
        long long v222 = v98;
        char v74 = _s8NewsFeed10FormatItemV2eeoiySbAC_ACtFZ_0((uint64_t)&v226, (uint64_t)&v219);
        sub_1C08845BC((uint64_t)&v233);
        sub_1C08845BC((uint64_t)&v239);
        goto LABEL_50;
      }
      sub_1C08845BC((uint64_t)&v239);
      goto LABEL_46;
    case 4u:
      sub_1C009D844((uint64_t)v40, (uint64_t)v26);
      uint64_t v107 = v26[1];
      uint64_t v108 = v26[3];
      uint64_t v110 = v26[5];
      uint64_t v109 = v26[6];
      uint64_t v111 = (uint64_t *)v218;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v112 = v26[4];
        uint64_t v113 = v26[2];
        uint64_t v114 = *v26;
        v217 = v40;
        uint64_t v115 = *v111;
        uint64_t v116 = v111[1];
        uint64_t v117 = v111[2];
        uint64_t v118 = v111[5];
        uint64_t v119 = v111[6];
        *(void *)&long long v239 = v114;
        *((void *)&v239 + 1) = v107;
        *(void *)&long long v240 = v113;
        *((void *)&v240 + 1) = v108;
        *(void *)v241 = v112;
        *(void *)&v241[8] = v110;
        *(void *)&v241[16] = v109;
        *(void *)&long long v233 = v115;
        *((void *)&v233 + 1) = v116;
        long long v218 = *(_OWORD *)(v111 + 3);
        *(_OWORD *)((char *)v234 + 8) = v218;
        *(void *)&v234[0] = v117;
        *((void *)&v234[1] + 1) = v118;
        *(void *)&long long v235 = v119;
        char v74 = _s8NewsFeed18FormatLocalizationV2eeoiySbAC_ACtFZ_0(&v239, &v233);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    case 5u:
      uint64_t v145 = v212;
      sub_1C009D844((uint64_t)v40, (uint64_t)v212);
      uint64_t v149 = v218;
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v147 = v210;
        sub_1C0EB8D90(v149, (uint64_t)v210, (uint64_t (*)(void))type metadata accessor for FormatPackage);
        char v74 = _s8NewsFeed13FormatPackageV2eeoiySbAC_ACtFZ_0((uint64_t)v145, (uint64_t)v147);
        uint64_t v148 = type metadata accessor for FormatPackage;
        goto LABEL_20;
      }
      v203 = type metadata accessor for FormatPackage;
      goto LABEL_42;
    case 6u:
      sub_1C009D844((uint64_t)v40, (uint64_t)v21);
      uint64_t v152 = *v21;
      uint64_t v153 = v21[1];
      uint64_t v154 = v21[2];
      uint64_t v155 = (void *)v218;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_37;
      }
      uint64_t v156 = v155;
      uint64_t v157 = *v155;
      uint64_t v158 = v155[1];
      uint64_t v159 = v156[2];
      if (v152 == v157 && v153 == v158 || (sub_1C1520A9C() & 1) != 0)
      {
        char v160 = sub_1C00EBE94(v154, v159);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v160)
        {
          sub_1C0EBF5E0((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatFile);
          char v74 = 1;
          return v74 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v204 = (uint64_t (*)(void))type metadata accessor for FormatFile;
      goto LABEL_47;
    case 7u:
      long long v120 = v215;
      sub_1C009D844((uint64_t)v40, (uint64_t)v215);
      long long v121 = *v120;
      uint64_t v122 = (void **)v218;
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        char v74 = _s8NewsFeed13FormatSnippetC2eeoiySbAC_ACtFZ_0(v121, *v122);
        swift_release();
        swift_release();
        goto LABEL_50;
      }
      swift_release();
      goto LABEL_46;
    case 8u:
      uint64_t v161 = v213;
      sub_1C009D844((uint64_t)v40, (uint64_t)v213);
      uint64_t v162 = v161[1];
      uint64_t v163 = v161[3];
      uint64_t v164 = v161[6];
      *((void *)&v216 + 1) = v161[5];
      uint64_t v165 = v161[7];
      uint64_t v166 = v161[8];
      v167 = (uint64_t *)v218;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      uint64_t v168 = v161[4];
      uint64_t v169 = v161[2];
      uint64_t v170 = *v161;
      uint64_t v171 = *v167;
      uint64_t v172 = v167[1];
      uint64_t v173 = v167[2];
      v215 = (void **)v167[5];
      *(void *)&long long v216 = v163;
      v217 = v40;
      uint64_t v174 = v167[6];
      uint64_t v175 = v167[7];
      uint64_t v176 = v167[8];
      *(void *)&long long v239 = v170;
      *((void *)&v239 + 1) = v162;
      *(void *)&long long v240 = v169;
      *((void *)&v240 + 1) = v163;
      *(void *)v241 = v168;
      *(void *)&v241[8] = *((void *)&v216 + 1);
      *(void *)&v241[16] = v164;
      *(void *)&v241[24] = v165;
      *(void *)&long long v242 = v166;
      *(void *)&long long v233 = v171;
      *((void *)&v233 + 1) = v172;
      long long v218 = *(_OWORD *)(v167 + 3);
      *(_OWORD *)((char *)v234 + 8) = v218;
      *(void *)&v234[0] = v173;
      *((void *)&v234[1] + 1) = v215;
      *(void *)&long long v235 = v174;
      *((void *)&v235 + 1) = v175;
      *(void *)&long long v236 = v176;
      char v74 = _s8NewsFeed11FormatStyleV2eeoiySbAC_ACtFZ_0(&v239, &v233);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 9u:
      v217 = v40;
      sub_1C009D844((uint64_t)v40, (uint64_t)v14);
      uint64_t v123 = *((void *)v14 + 1);
      uint64_t v124 = *((void *)v14 + 5);
      uint64_t v125 = *((void *)v14 + 6);
      v215 = (void **)*((void *)v14 + 3);
      *(void *)&long long v216 = v124;
      uint64_t v126 = *((void *)v14 + 8);
      *((void *)&v216 + 1) = *((void *)v14 + 7);
      uint64_t v127 = *((void *)v14 + 9);
      uint64_t v129 = *((void *)v14 + 11);
      uint64_t v128 = *((void *)v14 + 12);
      uint64_t v130 = (uint64_t *)v218;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        char v131 = v14[104];
        char v132 = v14[80];
        uint64_t v133 = *((void *)v14 + 4);
        uint64_t v134 = *((void *)v14 + 2);
        uint64_t v135 = *(void *)v14;
        uint64_t v136 = *v130;
        uint64_t v137 = v130[2];
        uint64_t v138 = v130[5];
        uint64_t v139 = v130[6];
        v212 = (void *)v130[1];
        v213 = (uint64_t *)v138;
        uint64_t v140 = v130[8];
        uint64_t v214 = v130[7];
        v210 = (void *)v140;
        v211 = (void *)v139;
        v209 = (void *)v130[9];
        char v141 = *((unsigned char *)v130 + 80);
        uint64_t v143 = v130[11];
        uint64_t v142 = v130[12];
        char v144 = *((unsigned char *)v130 + 104);
        *(void *)&long long v239 = v135;
        *((void *)&v239 + 1) = v123;
        *(void *)&long long v240 = v134;
        *((void *)&v240 + 1) = v215;
        *(void *)v241 = v133;
        *(void *)&v241[8] = v216;
        *(void *)&v241[16] = v125;
        *(void *)&v241[24] = *((void *)&v216 + 1);
        *(void *)&long long v242 = v126;
        *((void *)&v242 + 1) = v127;
        LOBYTE(v243) = v132;
        *((void *)&v243 + 1) = v129;
        *(void *)v244 = v128;
        v244[8] = v131;
        *(void *)&long long v233 = v136;
        *((void *)&v233 + 1) = v212;
        long long v218 = *(_OWORD *)(v130 + 3);
        *(_OWORD *)((char *)v234 + 8) = v218;
        *(void *)&v234[0] = v137;
        *((void *)&v234[1] + 1) = v138;
        *(void *)&long long v235 = v139;
        *((void *)&v235 + 1) = v214;
        *(void *)&long long v236 = v140;
        *((void *)&v236 + 1) = v209;
        LOBYTE(v237) = v141;
        *((void *)&v237 + 1) = v143;
        *(void *)&v238[0] = v142;
        BYTE8(v238[0]) = v144;
        char v74 = _s8NewsFeed19FormatSupplementaryV2eeoiySbAC_ACtFZ_0((uint64_t)&v239, (uint64_t)&v233);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v44 = (uint64_t)v217;
      goto LABEL_46;
    case 0xAu:
      uint64_t v177 = v214;
      sub_1C009D844((uint64_t)v40, v214);
      uint64_t v178 = *(void *)(v177 + 8);
      uint64_t v179 = *(void *)(v177 + 24);
      v213 = *(uint64_t **)(v177 + 32);
      uint64_t v180 = *(void *)(v177 + 48);
      v215 = *(void ***)(v177 + 40);
      *(void *)&long long v216 = v180;
      uint64_t v181 = *(void *)(v177 + 64);
      *((void *)&v216 + 1) = *(void *)(v177 + 56);
      uint64_t v182 = *(void *)(v177 + 72);
      int v183 = *(unsigned __int8 *)(v177 + 80);
      uint64_t v184 = (uint64_t *)v218;
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEC28BC((uint64_t)v213, (uint64_t)v215, v216, *((uint64_t *)&v216 + 1), v181, v182, v183);
        goto LABEL_46;
      }
      uint64_t v185 = *(void *)(v177 + 16);
      uint64_t v186 = *(void *)v177;
      v217 = v40;
      uint64_t v187 = *v184;
      uint64_t v188 = v184[1];
      uint64_t v189 = v184[2];
      uint64_t v190 = v184[3];
      char v191 = v183;
      LODWORD(v212) = v183;
      uint64_t v192 = v184[4];
      uint64_t v193 = v184[5];
      uint64_t v194 = v182;
      v210 = (void *)v181;
      v211 = (void *)v182;
      uint64_t v195 = v181;
      uint64_t v196 = v184[6];
      uint64_t v197 = v184[7];
      uint64_t v198 = v184[8];
      uint64_t v199 = v184[9];
      LODWORD(v218) = *((unsigned __int8 *)v184 + 80);
      *(void *)&long long v239 = v186;
      *((void *)&v239 + 1) = v178;
      uint64_t v208 = v178;
      v209 = (void *)v179;
      *(void *)&long long v240 = v185;
      *((void *)&v240 + 1) = v179;
      *(void *)v241 = v213;
      *(void *)&v241[8] = v215;
      *(_OWORD *)&v241[16] = v216;
      *(void *)&long long v242 = v195;
      *((void *)&v242 + 1) = v194;
      LOBYTE(v243) = v191;
      *(void *)&long long v233 = v187;
      *((void *)&v233 + 1) = v188;
      *(void *)&v234[0] = v189;
      *((void *)&v234[0] + 1) = v190;
      *(void *)&v234[1] = v192;
      *((void *)&v234[1] + 1) = v193;
      *(void *)&long long v235 = v196;
      *((void *)&v235 + 1) = v197;
      *(void *)&long long v236 = v198;
      *((void *)&v236 + 1) = v199;
      uint64_t v200 = v198;
      uint64_t v201 = v199;
      LOBYTE(v237) = v218;
      char v74 = _s8NewsFeed10FormatTypeV2eeoiySbAC_ACtFZ_0((uint64_t)&v239, (uint64_t)&v233);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(v192, v193, v196, v197, v200, v201, v218);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC((uint64_t)v213, (uint64_t)v215, v216, *((uint64_t *)&v216 + 1), (uint64_t)v210, (uint64_t)v211, v212);
LABEL_32:
      uint64_t v202 = (uint64_t)v217;
      goto LABEL_51;
    case 0xBu:
      uint64_t v145 = (void *)*((void *)&v216 + 1);
      sub_1C009D844((uint64_t)v40, *((uint64_t *)&v216 + 1));
      uint64_t v146 = v218;
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        uint64_t v147 = v211;
        sub_1C0EB8D90(v146, (uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
        char v74 = _s8NewsFeed20FormatBindingContentV2eeoiySbAC_ACtFZ_0(v145, v147);
        uint64_t v148 = type metadata accessor for FormatBindingContent;
LABEL_20:
        uint64_t v150 = (uint64_t (*)(uint64_t))v148;
        sub_1C0EBF5E0((uint64_t)v147, (uint64_t (*)(void))v148);
        uint64_t v151 = (uint64_t)v145;
        goto LABEL_49;
      }
      v203 = type metadata accessor for FormatBindingContent;
LABEL_42:
      long long v46 = (uint64_t (*)(uint64_t))v203;
      uint64_t v47 = (uint64_t)v145;
      goto LABEL_43;
    default:
      sub_1C009D844((uint64_t)v40, (uint64_t)v37);
      uint64_t v45 = v218;
      if (swift_getEnumCaseMultiPayload())
      {
        long long v46 = type metadata accessor for FormatContent;
        uint64_t v47 = (uint64_t)v37;
LABEL_43:
        sub_1C0EBF5E0(v47, v46);
LABEL_46:
        v204 = (uint64_t (*)(void))sub_1C0EBF57C;
LABEL_47:
        sub_1C0EBF5E0(v44, v204);
        char v74 = 0;
      }
      else
      {
        v205 = v209;
        sub_1C0EB8D90(v45, (uint64_t)v209, type metadata accessor for FormatContent);
        char v74 = _s8NewsFeed13FormatContentV2eeoiySbAC_ACtFZ_0(v37, v205);
        uint64_t v150 = type metadata accessor for FormatContent;
        sub_1C0EBF5E0((uint64_t)v205, type metadata accessor for FormatContent);
        uint64_t v151 = (uint64_t)v37;
LABEL_49:
        sub_1C0EBF5E0(v151, v150);
LABEL_50:
        uint64_t v202 = v44;
LABEL_51:
        sub_1C0EBF5E0(v202, (uint64_t (*)(void))type metadata accessor for FormatFile);
      }
      return v74 & 1;
  }
}

uint64_t sub_1C0EBA8D4(uint64_t a1)
{
  uint64_t result = sub_1C0EBA9A4(&qword_1EA1A83E0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0EBA918(void *a1)
{
  a1[1] = sub_1C0EBA9A4(&qword_1EB873A60);
  a1[2] = sub_1C0EBA9A4(&qword_1EA198330);
  uint64_t result = sub_1C0EBA9A4(&qword_1EA1A83E8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0EBA9A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatFile();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatFile(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *(void *)a1 = *a2;
    a1 = v33 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v34 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v34;
        uint64_t v35 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v35;
        uint64_t v36 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v36;
        uint64_t v37 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v37;
        uint64_t v38 = a2[8];
        *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
        *(void *)(a1 + 64) = v38;
        uint64_t v39 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v39;
        __dsta = (char *)(a2 + 12);
        unsigned __int8 v40 = *((unsigned char *)a2 + 106);
        int v41 = *((unsigned __int16 *)a2 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v40 == 255)
        {
          *(void *)(a1 + 96) = *(void *)__dsta;
          *(_DWORD *)(a1 + 103) = *(_DWORD *)(__dsta + 7);
        }
        else
        {
          uint64_t v113 = v41 & 0xFF00FFFF | (v40 << 16);
          uint64_t v114 = *(void *)__dsta;
          sub_1C0EBB9C8(*(void *)__dsta, v113, SBYTE2(v113), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(a1 + 96) = v114;
          *(_WORD *)(a1 + 104) = v113;
          *(unsigned char *)(a1 + 106) = BYTE2(v113);
        }
        break;
      case 2u:
        uint64_t v42 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v42;
        uint64_t v43 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v43;
        uint64_t v44 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v44;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        uint64_t v45 = a2 + 8;
        unint64_t v46 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v46 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *v45;
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)v45;
          *(void *)(a1 + 72) = v46;
          swift_bridgeObjectRetain();
        }
        uint64_t v118 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v118;
        uint64_t v119 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v119;
        uint64_t v120 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v120;
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        *(void *)(a1 + 136) = a2[17];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v47 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v47;
        uint64_t v48 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v48;
        uint64_t v49 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v49;
        uint64_t v50 = a2 + 6;
        unint64_t v51 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v51 >= 0xF)
        {
          *(void *)(a1 + 48) = *v50;
          *(void *)(a1 + 56) = v51;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)v50;
        }
        uint64_t v115 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v115;
        uint64_t v116 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v116;
        uint64_t v117 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v117;
        *(void *)(a1 + 112) = a2[14];
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v52 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v52;
        uint64_t v53 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v53;
        uint64_t v54 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v54;
        *(void *)(a1 + 48) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v90 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v90;
        uint64_t v91 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v91;
        uint64_t v92 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v92;
        *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
        uint64_t v93 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v93;
        uint64_t v94 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v94;
        uint64_t v95 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v95;
        uint64_t v96 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v96;
        uint64_t v97 = a2[16];
        *(void *)(a1 + 120) = a2[15];
        *(void *)(a1 + 128) = v97;
        uint64_t v98 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v98;
        *(void *)(a1 + 152) = a2[19];
        uint64_t v161 = a2 + 20;
        __dstc = (_OWORD *)(a1 + 160);
        unint64_t v154 = a2[21];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v154 >= 2)
        {
          if (v154 == 2)
          {
            _OWORD *__dstc = *v161;
          }
          else
          {
            *(unsigned char *)(a1 + 160) = *(unsigned char *)v161;
            *(void *)(a1 + 168) = v154;
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          _OWORD *__dstc = *v161;
        }
        uint64_t v162 = (int *)type metadata accessor for FormatPackage();
        uint64_t v121 = v162[23];
        uint64_t v122 = (void *)(a1 + v121);
        uint64_t v123 = (uint64_t)a2 + v121;
        uint64_t v124 = *(uint64_t *)((char *)a2 + v121 + 8);
        *uint64_t v122 = *(uint64_t *)((char *)a2 + v121);
        v122[1] = v124;
        uint64_t v125 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v126 = v125[6];
        uint64_t v127 = (char *)v122 + v126;
        uint64_t v128 = v123 + v126;
        uint64_t v129 = *(void *)(v123 + v126 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v129 == 1)
        {
          long long v130 = *(_OWORD *)(v128 + 16);
          *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
          *((_OWORD *)v127 + 1) = v130;
          *((_OWORD *)v127 + 2) = *(_OWORD *)(v128 + 32);
        }
        else
        {
          *(void *)uint64_t v127 = *(void *)v128;
          *((void *)v127 + 1) = v129;
          uint64_t v131 = *(void *)(v128 + 24);
          *((void *)v127 + 2) = *(void *)(v128 + 16);
          *((void *)v127 + 3) = v131;
          uint64_t v132 = *(void *)(v128 + 40);
          *((void *)v127 + 4) = *(void *)(v128 + 32);
          *((void *)v127 + 5) = v132;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v133 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v134 = &v127[v133];
        uint64_t v135 = (const void *)(v128 + v133);
        uint64_t v136 = sub_1C1518CDC();
        uint64_t v137 = *(void *)(v136 - 8);
        __dstd = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48);
        if (__dstd(v135, 1, v136))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v134, v135, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v137 + 16))(v134, v135, v136);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v134, 0, 1, v136);
        }
        uint64_t v139 = v125[7];
        uint64_t v140 = (char *)v122 + v139;
        char v141 = (const void *)(v123 + v139);
        if (__dstd((const void *)(v123 + v139), 1, v136))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v137 + 16))(v140, v141, v136);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v140, 0, 1, v136);
        }
        *(void *)((char *)v122 + v125[8]) = *(void *)(v123 + v125[8]);
        uint64_t v143 = v162[24];
        uint64_t v144 = a1 + v143;
        uint64_t v145 = (uint64_t)a2 + v143;
        uint64_t v146 = sub_1C151928C();
        uint64_t v147 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 16);
        swift_bridgeObjectRetain();
        v147(v144, v145, v146);
        uint64_t v148 = v162[25];
        uint64_t v149 = (void *)(a1 + v148);
        uint64_t v150 = (char *)a2 + v148;
        if (__dstd(v150, 1, v136))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v137 + 16))(v149, v150, v136);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v149, 0, 1, v136);
        }
        break;
      case 6u:
        uint64_t v99 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v99;
        *(void *)(a1 + 16) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 7u:
        *(void *)a1 = *a2;
        swift_retain();
        break;
      case 8u:
        uint64_t v100 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v100;
        uint64_t v101 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v101;
        uint64_t v102 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v102;
        uint64_t v103 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v103;
        *(void *)(a1 + 64) = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        uint64_t v55 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v55;
        uint64_t v56 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v56;
        uint64_t v57 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v57;
        uint64_t v58 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v58;
        uint64_t v59 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v59;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        uint64_t v60 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v60;
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        uint64_t v104 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v104;
        uint64_t v105 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v105;
        uint64_t v106 = a2[4];
        uint64_t v107 = a2[5];
        uint64_t v108 = a2[6];
        uint64_t v109 = a2[7];
        uint64_t v110 = a2[8];
        uint64_t v111 = a2[9];
        unsigned __int8 v112 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v106, v107, v108, v109, v110, v111, v112);
        *(void *)(a1 + 32) = v106;
        *(void *)(a1 + 40) = v107;
        *(void *)(a1 + 48) = v108;
        *(void *)(a1 + 56) = v109;
        *(void *)(a1 + 64) = v110;
        *(void *)(a1 + 72) = v111;
        *(unsigned char *)(a1 + 80) = v112;
        break;
      case 0xBu:
        uint64_t v61 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v61;
        uint64_t v62 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v62;
        uint64_t v63 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v63;
        uint64_t v64 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v65 = (void *)(a1 + v64);
        uint64_t v66 = (uint64_t)a2 + v64;
        uint64_t v67 = *(uint64_t *)((char *)a2 + v64 + 8);
        void *v65 = *(uint64_t *)((char *)a2 + v64);
        v65[1] = v67;
        char v68 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v69 = v68[5];
        uint64_t v159 = v66 + v69;
        __dste = (char *)v65 + v69;
        uint64_t v70 = sub_1C151631C();
        uint64_t v156 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v156(__dste, v159, v70);
        uint64_t v71 = v68[6];
        int v72 = (void *)((char *)v65 + v71);
        uint64_t v73 = (void *)(v66 + v71);
        uint64_t v160 = v73[1];
        *int v72 = *v73;
        v72[1] = v160;
        uint64_t v74 = v68[7];
        long long v75 = (void *)((char *)v65 + v74);
        long long v76 = (void *)(v66 + v74);
        uint64_t v77 = v76[1];
        *long long v75 = *v76;
        v75[1] = v77;
        uint64_t v78 = v68[8];
        uint64_t v79 = (void *)((char *)v65 + v78);
        long long v80 = (void *)(v66 + v78);
        uint64_t v81 = v80[1];
        *uint64_t v79 = *v80;
        v79[1] = v81;
        uint64_t v82 = v68[9];
        long long v83 = (void *)((char *)v65 + v82);
        long long v84 = (void *)(v66 + v82);
        uint64_t v85 = v84[1];
        *long long v83 = *v84;
        v83[1] = v85;
        uint64_t v86 = v68[10];
        __dstb = (char *)v65 + v86;
        uint64_t v153 = (const void *)(v66 + v86);
        uint64_t v87 = sub_1C151D6DC();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v157 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v88 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v157(v153, 1, v87))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dstb, v153, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v88 + 16))(__dstb, v153, v87);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(__dstb, 0, 1, v87);
        }
        *(void *)((char *)v65 + v68[11]) = *(void *)(v66 + v68[11]);
        *(void *)((char *)v65 + v68[12]) = *(void *)(v66 + v68[12]);
        *(void *)((char *)v65 + v68[13]) = *(void *)(v66 + v68[13]);
        *(void *)((char *)v65 + v68[14]) = *(void *)(v66 + v68[14]);
        *(void *)((char *)v65 + v68[15]) = *(void *)(v66 + v68[15]);
        *(void *)((char *)v65 + v68[16]) = *(void *)(v66 + v68[16]);
        *(void *)((char *)v65 + v68[17]) = *(void *)(v66 + v68[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = a1 + v8;
        uint64_t v10 = (uint64_t)a2 + v8;
        uint64_t v11 = sub_1C151631C();
        uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        uint64_t v13 = v7[6];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (uint64_t *)((char *)a2 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        uint64_t v17 = v7[7];
        uint64_t v18 = (void *)(a1 + v17);
        uint64_t v19 = (uint64_t *)((char *)a2 + v17);
        uint64_t v20 = v19[1];
        *uint64_t v18 = *v19;
        v18[1] = v20;
        uint64_t v21 = v7[8];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (uint64_t *)((char *)a2 + v21);
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        uint64_t v25 = v7[9];
        uint64_t v26 = (void *)(a1 + v25);
        uint64_t v27 = (uint64_t *)((char *)a2 + v25);
        uint64_t v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        uint64_t v29 = v7[10];
        uint64_t v158 = (char *)a2 + v29;
        __dst = (void *)(a1 + v29);
        uint64_t v30 = sub_1C151D6DC();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v155(v158, 1, v30))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v158, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v31 + 16))(__dst, v158, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
        }
        *(void *)(a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
        *(void *)(a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
        *(void *)(a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
        *(void *)(a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
        *(void *)(a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
        *(void *)(a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
        *(void *)(a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0EBB9C8(uint64_t result, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, void), uint64_t (*a5)(void))
{
  if (a3 == 2) {
    return a5();
  }
  if (a3 == 1) {
    return a4(result, a2, (a2 >> 8) & 1);
  }
  return result;
}

void destroy for FormatFile(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FormatContent(0);
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(v2 + 40);
      uint64_t v6 = sub_1C151D6DC();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      goto LABEL_35;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(a1 + 106) != 255)
      {
        uint64_t v8 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
        sub_1C0EBB9C8(*(void *)(a1 + 96), v8, SBYTE2(v8), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      }
      return;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_35;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 168) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v9 = (int *)type metadata accessor for FormatPackage();
      uint64_t v10 = a1 + v9[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v12 = v10 + *(int *)(v11 + 24);
      if (*(void *)(v12 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v13 = v12 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v14 = sub_1C1518CDC();
      uint64_t v35 = *(void *)(v14 - 8);
      uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
      if (!v15(v13, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v13, v14);
      }
      uint64_t v16 = v10 + *(int *)(v11 + 28);
      if (!v15(v16, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v16, v14);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = a1 + v9[24];
      uint64_t v18 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      uint64_t v19 = a1 + v9[25];
      if (!v15(v19, 1, v14))
      {
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v34(v19, v14);
      }
      return;
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 7u:
      swift_release();
      return;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v21 = *(void *)(a1 + 40);
      uint64_t v22 = *(void *)(a1 + 48);
      uint64_t v23 = *(void *)(a1 + 56);
      uint64_t v24 = *(void *)(a1 + 64);
      uint64_t v25 = *(void *)(a1 + 72);
      unsigned __int8 v26 = *(unsigned char *)(a1 + 80);
      sub_1BFEC28BC(v20, v21, v22, v23, v24, v25, v26);
      return;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      uint64_t v28 = type metadata accessor for FormatContent(0);
      uint64_t v29 = v27 + *(int *)(v28 + 20);
      uint64_t v30 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v27 + *(int *)(v28 + 40);
      uint64_t v32 = sub_1C151D6DC();
      uint64_t v33 = *(void *)(v32 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
LABEL_35:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for FormatFile(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v31 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v31;
      uint64_t v32 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v32;
      uint64_t v33 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v33;
      uint64_t v34 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v34;
      uint64_t v35 = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 64) = v35;
      uint64_t v36 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v36;
      __dsta = (char *)(a2 + 96);
      unsigned __int8 v37 = *(unsigned char *)(a2 + 106);
      int v38 = *(unsigned __int16 *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v37 == 255)
      {
        *(void *)(a1 + 96) = *(void *)__dsta;
        *(_DWORD *)(a1 + 103) = *(_DWORD *)(__dsta + 7);
      }
      else
      {
        uint64_t v107 = v38 & 0xFF00FFFF | (v37 << 16);
        uint64_t v108 = *(void *)__dsta;
        sub_1C0EBB9C8(*(void *)__dsta, v107, SBYTE2(v107), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        *(void *)(a1 + 96) = v108;
        *(_WORD *)(a1 + 104) = v107;
        *(unsigned char *)(a1 + 106) = BYTE2(v107);
      }
      break;
    case 2u:
      uint64_t v39 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v39;
      uint64_t v40 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v40;
      uint64_t v41 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v41;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v42 = (_OWORD *)(a2 + 64);
      unint64_t v43 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *v42;
      }
      else
      {
        *(unsigned char *)(a1 + 64) = *(unsigned char *)v42;
        *(void *)(a1 + 72) = v43;
        swift_bridgeObjectRetain();
      }
      uint64_t v112 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v112;
      uint64_t v113 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v113;
      uint64_t v114 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v114;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v44 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v44;
      uint64_t v45 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v45;
      uint64_t v46 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v46;
      uint64_t v47 = (void *)(a2 + 48);
      unint64_t v48 = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48 >= 0xF)
      {
        *(void *)(a1 + 48) = *v47;
        *(void *)(a1 + 56) = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v47;
      }
      uint64_t v109 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v109;
      uint64_t v110 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v110;
      uint64_t v111 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v111;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v49 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v49;
      uint64_t v50 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v50;
      uint64_t v51 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v51;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v87 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v87;
      uint64_t v88 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v88;
      uint64_t v89 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v89;
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      uint64_t v90 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v90;
      uint64_t v91 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v91;
      uint64_t v92 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v92;
      uint64_t v147 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v147;
      uint64_t v148 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v148;
      uint64_t v149 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v149;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      uint64_t v158 = (_OWORD *)(a2 + 160);
      unint64_t v151 = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v151 <= 2)
      {
        *(_OWORD *)(a1 + 160) = *v158;
      }
      else
      {
        *(unsigned char *)(a1 + 160) = *(unsigned char *)v158;
        *(void *)(a1 + 168) = v151;
        swift_bridgeObjectRetain();
      }
      uint64_t v159 = (int *)type metadata accessor for FormatPackage();
      uint64_t v115 = v159[23];
      uint64_t v116 = (void *)(a1 + v115);
      uint64_t v117 = a2 + v115;
      uint64_t v118 = *(void *)(a2 + v115 + 8);
      void *v116 = *(void *)(a2 + v115);
      v116[1] = v118;
      uint64_t v119 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v120 = v119[6];
      uint64_t v121 = (char *)v116 + v120;
      uint64_t v122 = v117 + v120;
      uint64_t v123 = *(void *)(v117 + v120 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v123 == 1)
      {
        long long v124 = *(_OWORD *)(v122 + 16);
        *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
        *((_OWORD *)v121 + 1) = v124;
        *((_OWORD *)v121 + 2) = *(_OWORD *)(v122 + 32);
      }
      else
      {
        *(void *)uint64_t v121 = *(void *)v122;
        *((void *)v121 + 1) = v123;
        uint64_t v125 = *(void *)(v122 + 24);
        *((void *)v121 + 2) = *(void *)(v122 + 16);
        *((void *)v121 + 3) = v125;
        uint64_t v126 = *(void *)(v122 + 40);
        *((void *)v121 + 4) = *(void *)(v122 + 32);
        *((void *)v121 + 5) = v126;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v127 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v128 = &v121[v127];
      uint64_t v129 = (const void *)(v122 + v127);
      uint64_t v130 = sub_1C1518CDC();
      uint64_t v131 = *(void *)(v130 - 8);
      __dstc = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48);
      if (__dstc(v129, 1, v130))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v128, v129, *(void *)(*(void *)(v132 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v131 + 16))(v128, v129, v130);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
      }
      uint64_t v133 = v119[7];
      uint64_t v134 = (char *)v116 + v133;
      uint64_t v135 = (const void *)(v117 + v133);
      if (__dstc((const void *)(v117 + v133), 1, v130))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v131 + 16))(v134, v135, v130);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v134, 0, 1, v130);
      }
      *(void *)((char *)v116 + v119[8]) = *(void *)(v117 + v119[8]);
      uint64_t v137 = v159[24];
      uint64_t v138 = a1 + v137;
      uint64_t v139 = a2 + v137;
      uint64_t v140 = sub_1C151928C();
      char v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 16);
      swift_bridgeObjectRetain();
      v141(v138, v139, v140);
      uint64_t v142 = v159[25];
      uint64_t v143 = (void *)(a1 + v142);
      uint64_t v144 = (const void *)(a2 + v142);
      if (__dstc(v144, 1, v130))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v143, v144, v130);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v143, 0, 1, v130);
      }
      break;
    case 6u:
      uint64_t v93 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v93;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 7u:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      break;
    case 8u:
      uint64_t v94 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v94;
      uint64_t v95 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v95;
      uint64_t v96 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v96;
      uint64_t v97 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v97;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 9u:
      uint64_t v52 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v52;
      uint64_t v53 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v53;
      uint64_t v54 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v54;
      uint64_t v55 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v55;
      uint64_t v56 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v56;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v57 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v57;
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 0xAu:
      uint64_t v98 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v98;
      uint64_t v99 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v99;
      uint64_t v100 = *(void *)(a2 + 32);
      uint64_t v101 = *(void *)(a2 + 40);
      uint64_t v102 = *(void *)(a2 + 48);
      uint64_t v103 = *(void *)(a2 + 56);
      uint64_t v104 = *(void *)(a2 + 64);
      uint64_t v105 = *(void *)(a2 + 72);
      unsigned __int8 v106 = *(unsigned char *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v100, v101, v102, v103, v104, v105, v106);
      *(void *)(a1 + 32) = v100;
      *(void *)(a1 + 40) = v101;
      *(void *)(a1 + 48) = v102;
      *(void *)(a1 + 56) = v103;
      *(void *)(a1 + 64) = v104;
      *(void *)(a1 + 72) = v105;
      *(unsigned char *)(a1 + 80) = v106;
      break;
    case 0xBu:
      uint64_t v58 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v58;
      uint64_t v59 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v59;
      uint64_t v60 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v60;
      uint64_t v61 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v62 = (void *)(a1 + v61);
      uint64_t v63 = a2 + v61;
      uint64_t v64 = *(void *)(a2 + v61 + 8);
      *uint64_t v62 = *(void *)(a2 + v61);
      v62[1] = v64;
      uint64_t v65 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v66 = v65[5];
      uint64_t v156 = v63 + v66;
      __dstd = (char *)v62 + v66;
      uint64_t v67 = sub_1C151631C();
      uint64_t v153 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(__dstd, v156, v67);
      uint64_t v68 = v65[6];
      uint64_t v69 = (void *)((char *)v62 + v68);
      uint64_t v70 = (void *)(v63 + v68);
      uint64_t v157 = v70[1];
      void *v69 = *v70;
      v69[1] = v157;
      uint64_t v71 = v65[7];
      int v72 = (void *)((char *)v62 + v71);
      uint64_t v73 = (void *)(v63 + v71);
      uint64_t v74 = v73[1];
      *int v72 = *v73;
      v72[1] = v74;
      uint64_t v75 = v65[8];
      long long v76 = (void *)((char *)v62 + v75);
      uint64_t v77 = (void *)(v63 + v75);
      uint64_t v78 = v77[1];
      void *v76 = *v77;
      v76[1] = v78;
      uint64_t v79 = v65[9];
      long long v80 = (void *)((char *)v62 + v79);
      uint64_t v81 = (void *)(v63 + v79);
      uint64_t v82 = v81[1];
      *long long v80 = *v81;
      v80[1] = v82;
      uint64_t v83 = v65[10];
      __dstb = (char *)v62 + v83;
      uint64_t v150 = (const void *)(v63 + v83);
      uint64_t v84 = sub_1C151D6DC();
      uint64_t v85 = *(void *)(v84 - 8);
      unint64_t v154 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v154(v150, 1, v84))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dstb, v150, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v85 + 16))(__dstb, v150, v84);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(__dstb, 0, 1, v84);
      }
      *(void *)((char *)v62 + v65[11]) = *(void *)(v63 + v65[11]);
      *(void *)((char *)v62 + v65[12]) = *(void *)(v63 + v65[12]);
      *(void *)((char *)v62 + v65[13]) = *(void *)(v63 + v65[13]);
      *(void *)((char *)v62 + v65[14]) = *(void *)(v63 + v65[14]);
      *(void *)((char *)v62 + v65[15]) = *(void *)(v63 + v65[15]);
      *(void *)((char *)v62 + v65[16]) = *(void *)(v63 + v65[16]);
      *(void *)((char *)v62 + v65[17]) = *(void *)(v63 + v65[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_1C151631C();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      uint64_t v11 = v5[6];
      uint64_t v12 = (void *)(a1 + v11);
      uint64_t v13 = (void *)(a2 + v11);
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      uint64_t v15 = v5[7];
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = (void *)(a2 + v15);
      uint64_t v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v5[8];
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (void *)(a2 + v19);
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      uint64_t v23 = v5[9];
      uint64_t v24 = (void *)(a1 + v23);
      uint64_t v25 = (void *)(a2 + v23);
      uint64_t v26 = v25[1];
      *uint64_t v24 = *v25;
      v24[1] = v26;
      uint64_t v27 = v5[10];
      uint64_t v155 = (const void *)(a2 + v27);
      __dst = (void *)(a1 + v27);
      uint64_t v28 = sub_1C151D6DC();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v152(v155, 1, v28))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dst, v155, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dst, v155, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
      }
      *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
      *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
      *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
      *(void *)(a1 + v5[14]) = *(void *)(a2 + v5[14]);
      *(void *)(a1 + v5[15]) = *(void *)(a2 + v5[15]);
      *(void *)(a1 + v5[16]) = *(void *)(a2 + v5[16]);
      *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FormatFile(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0EBF5E0(a1, (uint64_t (*)(void))type metadata accessor for FormatFile);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        uint64_t v26 = *(void *)(a2 + 64);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 64) = v26;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        __dsta = (char *)(a2 + 96);
        unsigned __int16 v27 = *(unsigned __int8 *)(a2 + 106);
        int v28 = *(unsigned __int16 *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 <= 0xFEu)
        {
          uint64_t v61 = v28 & 0xFF00FFFF | (v27 << 16);
          uint64_t v62 = *(void *)__dsta;
          sub_1C0EBB9C8(*(void *)__dsta, v61, SBYTE2(v61), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(a1 + 96) = v62;
          *(_WORD *)(a1 + 104) = v61;
          *(unsigned char *)(a1 + 106) = BYTE2(v61);
        }
        else
        {
          uint64_t v29 = *(void *)__dsta;
          *(_DWORD *)(a1 + 103) = *(_DWORD *)(__dsta + 7);
          *(void *)(a1 + 96) = v29;
        }
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v30 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
        }
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        unint64_t v31 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31 >= 0xF)
        {
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        }
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        unint64_t v99 = *(void *)(a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v99 <= 2)
        {
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        }
        else
        {
          *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
          *(void *)(a1 + 168) = *(void *)(a2 + 168);
          swift_bridgeObjectRetain();
        }
        uint64_t v100 = (int *)type metadata accessor for FormatPackage();
        uint64_t v63 = v100[23];
        uint64_t v64 = (void *)(a1 + v63);
        uint64_t v65 = a2 + v63;
        *uint64_t v64 = *(void *)(a2 + v63);
        v64[1] = *(void *)(a2 + v63 + 8);
        uint64_t v66 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v67 = v66[6];
        uint64_t v68 = (char *)v64 + v67;
        uint64_t v69 = (long long *)(v65 + v67);
        uint64_t v70 = *(void *)(v65 + v67 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70 == 1)
        {
          long long v71 = *v69;
          long long v72 = v69[2];
          *((_OWORD *)v68 + 1) = v69[1];
          *((_OWORD *)v68 + 2) = v72;
          *(_OWORD *)uint64_t v68 = v71;
        }
        else
        {
          *(void *)uint64_t v68 = *(void *)v69;
          *((void *)v68 + 1) = *((void *)v69 + 1);
          *((void *)v68 + 2) = *((void *)v69 + 2);
          *((void *)v68 + 3) = *((void *)v69 + 3);
          *((void *)v68 + 4) = *((void *)v69 + 4);
          *((void *)v68 + 5) = *((void *)v69 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v73 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v74 = &v68[v73];
        uint64_t v75 = (char *)v69 + v73;
        uint64_t v76 = sub_1C1518CDC();
        uint64_t v77 = *(void *)(v76 - 8);
        __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
        if (__dstc(v75, 1, v76))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        }
        uint64_t v79 = v66[7];
        long long v80 = (char *)v64 + v79;
        uint64_t v81 = (const void *)(v65 + v79);
        if (__dstc((char *)(v65 + v79), 1, v76))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v77 + 16))(v80, v81, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v80, 0, 1, v76);
        }
        *(void *)((char *)v64 + v66[8]) = *(void *)(v65 + v66[8]);
        uint64_t v83 = v100[24];
        uint64_t v84 = a1 + v83;
        uint64_t v85 = a2 + v83;
        uint64_t v86 = sub_1C151928C();
        uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16);
        swift_bridgeObjectRetain();
        v87(v84, v85, v86);
        uint64_t v88 = v100[25];
        uint64_t v89 = (void *)(a1 + v88);
        uint64_t v90 = (void *)(a2 + v88);
        if (__dstc((char *)v90, 1, v76))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v77 + 16))(v89, v90, v76);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v89, 0, 1, v76);
        }
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        break;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v54 = *(void *)(a2 + 32);
        uint64_t v55 = *(void *)(a2 + 40);
        uint64_t v56 = *(void *)(a2 + 48);
        uint64_t v57 = *(void *)(a2 + 56);
        uint64_t v58 = *(void *)(a2 + 64);
        uint64_t v59 = *(void *)(a2 + 72);
        unsigned __int8 v60 = *(unsigned char *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v54, v55, v56, v57, v58, v59, v60);
        *(void *)(a1 + 32) = v54;
        *(void *)(a1 + 40) = v55;
        *(void *)(a1 + 48) = v56;
        *(void *)(a1 + 56) = v57;
        *(void *)(a1 + 64) = v58;
        *(void *)(a1 + 72) = v59;
        *(unsigned char *)(a1 + 80) = v60;
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        uint64_t v32 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v33 = (void *)(a1 + v32);
        uint64_t v34 = a2 + v32;
        *uint64_t v33 = *(void *)(a2 + v32);
        v33[1] = *(void *)(a2 + v32 + 8);
        uint64_t v35 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v36 = v35[5];
        uint64_t v98 = v34 + v36;
        __dstd = (char *)v33 + v36;
        uint64_t v37 = sub_1C151631C();
        uint64_t v95 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v95(__dstd, v98, v37);
        uint64_t v38 = v35[6];
        uint64_t v39 = (void *)((char *)v33 + v38);
        uint64_t v40 = (void *)(v34 + v38);
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        uint64_t v41 = v35[7];
        uint64_t v42 = (void *)((char *)v33 + v41);
        unint64_t v43 = (void *)(v34 + v41);
        *uint64_t v42 = *v43;
        v42[1] = v43[1];
        uint64_t v44 = v35[8];
        uint64_t v45 = (void *)((char *)v33 + v44);
        uint64_t v46 = (void *)(v34 + v44);
        void *v45 = *v46;
        v45[1] = v46[1];
        uint64_t v47 = v35[9];
        unint64_t v48 = (void *)((char *)v33 + v47);
        uint64_t v49 = (void *)(v34 + v47);
        void *v48 = *v49;
        v48[1] = v49[1];
        uint64_t v50 = v35[10];
        __dstb = (char *)v33 + v50;
        uint64_t v93 = (const void *)(v34 + v50);
        uint64_t v51 = sub_1C151D6DC();
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v96 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v96(v93, 1, v51))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dstb, v93, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v52 + 16))(__dstb, v93, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dstb, 0, 1, v51);
        }
        *(void *)((char *)v33 + v35[11]) = *(void *)(v34 + v35[11]);
        *(void *)((char *)v33 + v35[12]) = *(void *)(v34 + v35[12]);
        *(void *)((char *)v33 + v35[13]) = *(void *)(v34 + v35[13]);
        *(void *)((char *)v33 + v35[14]) = *(void *)(v34 + v35[14]);
        *(void *)((char *)v33 + v35[15]) = *(void *)(v34 + v35[15]);
        *(void *)((char *)v33 + v35[16]) = *(void *)(v34 + v35[16]);
        *(void *)((char *)v33 + v35[17]) = *(void *)(v34 + v35[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v4 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v5 = v4[5];
        uint64_t v6 = a1 + v5;
        uint64_t v7 = a2 + v5;
        uint64_t v8 = sub_1C151631C();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
        swift_bridgeObjectRetain();
        v9(v6, v7, v8);
        uint64_t v10 = v4[6];
        uint64_t v11 = (void *)(a1 + v10);
        uint64_t v12 = (void *)(a2 + v10);
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        uint64_t v13 = v4[7];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (void *)(a2 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        uint64_t v16 = v4[8];
        uint64_t v17 = (void *)(a1 + v16);
        uint64_t v18 = (void *)(a2 + v16);
        *uint64_t v17 = *v18;
        v17[1] = v18[1];
        uint64_t v19 = v4[9];
        uint64_t v20 = (void *)(a1 + v19);
        uint64_t v21 = (void *)(a2 + v19);
        *uint64_t v20 = *v21;
        v20[1] = v21[1];
        uint64_t v22 = v4[10];
        uint64_t v97 = (const void *)(a2 + v22);
        __dst = (void *)(a1 + v22);
        uint64_t v23 = sub_1C151D6DC();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v94 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v94(v97, 1, v23))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v97, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dst, v97, v23);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
        }
        *(void *)(a1 + v4[11]) = *(void *)(a2 + v4[11]);
        *(void *)(a1 + v4[12]) = *(void *)(a2 + v4[12]);
        *(void *)(a1 + v4[13]) = *(void *)(a2 + v4[13]);
        *(void *)(a1 + v4[14]) = *(void *)(a2 + v4[14]);
        *(void *)(a1 + v4[15]) = *(void *)(a2 + v4[15]);
        *(void *)(a1 + v4[16]) = *(void *)(a2 + v4[16]);
        *(void *)(a1 + v4[17]) = *(void *)(a2 + v4[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for FormatFile(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      long long v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      a1[2] = a2[2];
      uint64_t v19 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
      uint64_t v22 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v23 = v22[5];
      uint64_t v24 = &v20[v23];
      uint64_t v25 = &v21[v23];
      uint64_t v26 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
      *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
      *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
      *(_OWORD *)&v20[v22[9]] = *(_OWORD *)&v21[v22[9]];
      uint64_t v27 = v22[10];
      int v28 = &v20[v27];
      uint64_t v29 = &v21[v27];
      uint64_t v30 = sub_1C151D6DC();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(void *)&v20[v22[11]] = *(void *)&v21[v22[11]];
      *(void *)&v20[v22[12]] = *(void *)&v21[v22[12]];
      *(void *)&v20[v22[13]] = *(void *)&v21[v22[13]];
      *(void *)&v20[v22[14]] = *(void *)&v21[v22[14]];
      *(void *)&v20[v22[15]] = *(void *)&v21[v22[15]];
      *(void *)&v20[v22[16]] = *(void *)&v21[v22[16]];
      *(void *)&v20[v22[17]] = *(void *)&v21[v22[17]];
      goto LABEL_22;
    case 5:
      long long v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      a1[2] = a2[2];
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      *((void *)a1 + 19) = *((void *)a2 + 19);
      a1[10] = a2[10];
      uint64_t v61 = (int *)type metadata accessor for FormatPackage();
      uint64_t v34 = v61[23];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      *(_OWORD *)((char *)a1 + v34) = *(_OWORD *)((char *)a2 + v34);
      uint64_t v37 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v38 = v37[6];
      uint64_t v39 = &v35[v38];
      uint64_t v40 = &v36[v38];
      long long v41 = *(_OWORD *)&v36[v38 + 16];
      *(_OWORD *)uint64_t v39 = *(_OWORD *)&v36[v38];
      *((_OWORD *)v39 + 1) = v41;
      *((_OWORD *)v39 + 2) = *(_OWORD *)&v36[v38 + 32];
      uint64_t v42 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      unint64_t v43 = &v39[v42];
      uint64_t v44 = &v40[v42];
      uint64_t v45 = sub_1C1518CDC();
      uint64_t v46 = *(void *)(v45 - 8);
      uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      if (v62(v44, 1, v45))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      uint64_t v48 = v37[7];
      uint64_t v49 = &v35[v48];
      uint64_t v50 = &v36[v48];
      if (v62(&v36[v48], 1, v45))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v50, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v49, 0, 1, v45);
      }
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      uint64_t v52 = v61[24];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      uint64_t v55 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      uint64_t v56 = v61[25];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      if (v62(v58, 1, v45))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v57, v58, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v57, 0, 1, v45);
      }
      goto LABEL_22;
    case 0:
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
      *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
      uint64_t v12 = v7[10];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1C151D6DC();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
      *(void *)((char *)a1 + v7[12]) = *(void *)((char *)a2 + v7[12]);
      *(void *)((char *)a1 + v7[13]) = *(void *)((char *)a2 + v7[13]);
      *(void *)((char *)a1 + v7[14]) = *(void *)((char *)a2 + v7[14]);
      *(void *)((char *)a1 + v7[15]) = *(void *)((char *)a2 + v7[15]);
      *(void *)((char *)a1 + v7[16]) = *(void *)((char *)a2 + v7[16]);
      *(void *)((char *)a1 + v7[17]) = *(void *)((char *)a2 + v7[17]);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatFile(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0EBF5E0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatFile);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        long long v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        a1[2] = a2[2];
        uint64_t v19 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
        uint64_t v22 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v23 = v22[5];
        uint64_t v24 = &v20[v23];
        uint64_t v25 = &v21[v23];
        uint64_t v26 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
        *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
        *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
        *(_OWORD *)&v20[v22[9]] = *(_OWORD *)&v21[v22[9]];
        uint64_t v27 = v22[10];
        int v28 = &v20[v27];
        uint64_t v29 = &v21[v27];
        uint64_t v30 = sub_1C151D6DC();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        *(void *)&v20[v22[11]] = *(void *)&v21[v22[11]];
        *(void *)&v20[v22[12]] = *(void *)&v21[v22[12]];
        *(void *)&v20[v22[13]] = *(void *)&v21[v22[13]];
        *(void *)&v20[v22[14]] = *(void *)&v21[v22[14]];
        *(void *)&v20[v22[15]] = *(void *)&v21[v22[15]];
        *(void *)&v20[v22[16]] = *(void *)&v21[v22[16]];
        *(void *)&v20[v22[17]] = *(void *)&v21[v22[17]];
        goto LABEL_23;
      case 5:
        long long v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        a1[2] = a2[2];
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        *((void *)a1 + 19) = *((void *)a2 + 19);
        a1[10] = a2[10];
        uint64_t v65 = (int *)type metadata accessor for FormatPackage();
        uint64_t v34 = v65[23];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        *(_OWORD *)((char *)a1 + v34) = *(_OWORD *)((char *)a2 + v34);
        uint64_t v66 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v37 = v66[6];
        uint64_t v38 = &v35[v37];
        uint64_t v39 = &v36[v37];
        long long v40 = *(_OWORD *)&v36[v37 + 16];
        *(_OWORD *)uint64_t v38 = *(_OWORD *)&v36[v37];
        *((_OWORD *)v38 + 1) = v40;
        *((_OWORD *)v38 + 2) = *(_OWORD *)&v36[v37 + 32];
        uint64_t v41 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v42 = &v38[v41];
        unint64_t v43 = &v39[v41];
        uint64_t v44 = sub_1C1518CDC();
        uint64_t v45 = *(void *)(v44 - 8);
        uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
        uint64_t v64 = v45;
        if (v46(v43, 1, v44))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        uint64_t v48 = v66[7];
        uint64_t v49 = &v35[v48];
        uint64_t v50 = &v36[v48];
        uint64_t v51 = v46;
        if (v46(&v36[v48], 1, v44))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
          uint64_t v53 = v64;
        }
        else
        {
          uint64_t v54 = v50;
          uint64_t v53 = v64;
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v49, v54, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v49, 0, 1, v44);
        }
        *(void *)&v35[v66[8]] = *(void *)&v36[v66[8]];
        uint64_t v55 = v65[24];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        uint64_t v59 = v65[25];
        unsigned __int8 v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        if (v51(v61, 1, v44))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v60, v61, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v60, 0, 1, v44);
        }
        goto LABEL_23;
      case 0:
        *a1 = *a2;
        uint64_t v7 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
        *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
        *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
        *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
        uint64_t v12 = v7[10];
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_1C151D6DC();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
        *(void *)((char *)a1 + v7[12]) = *(void *)((char *)a2 + v7[12]);
        *(void *)((char *)a1 + v7[13]) = *(void *)((char *)a2 + v7[13]);
        *(void *)((char *)a1 + v7[14]) = *(void *)((char *)a2 + v7[14]);
        *(void *)((char *)a1 + v7[15]) = *(void *)((char *)a2 + v7[15]);
        *(void *)((char *)a1 + v7[16]) = *(void *)((char *)a2 + v7[16]);
        *(void *)((char *)a1 + v7[17]) = *(void *)((char *)a2 + v7[17]);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t destroy for FormatFileKey(uint64_t a1)
{
  return sub_1C02CDCE0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed13FormatFileKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C02CDCC8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatFileKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C02CDCC8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C02CDCE0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatFileKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C02CDCE0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatFileKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xB) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatFileKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 245;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFileKey()
{
  return &type metadata for FormatFileKey;
}

unint64_t sub_1C0EBF528()
{
  unint64_t result = qword_1EA1A83F0;
  if (!qword_1EA1A83F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A83F0);
  }
  return result;
}

void sub_1C0EBF57C()
{
  if (!qword_1EA1A83F8)
  {
    type metadata accessor for FormatFile();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A83F8);
    }
  }
}

uint64_t sub_1C0EBF5E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t BundleSessionNotificationsStatus.rawValue.getter()
{
  uint64_t v1 = 0x6465696E6564;
  if (*v0 != 1) {
    uint64_t v1 = 0x7A69726F68747561;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265746544746F6ELL;
  }
}

NewsFeed::BundleSessionNotificationsStatus_optional __swiftcall BundleSessionNotificationsStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t sub_1C0EBF708()
{
  unint64_t result = qword_1EA1A8400;
  if (!qword_1EA1A8400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8400);
  }
  return result;
}

NewsFeed::BundleSessionNotificationsStatus_optional sub_1C0EBF75C(Swift::String *a1)
{
  return BundleSessionNotificationsStatus.init(rawValue:)(*a1);
}

uint64_t sub_1C0EBF768()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0EBF7C8()
{
  return sub_1C151EAEC();
}

unsigned char *storeEnumTagSinglePayload for BundleSessionNotificationsStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0EBF8E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleSessionNotificationsStatus()
{
  return &type metadata for BundleSessionNotificationsStatus;
}

unint64_t sub_1C0EBF91C()
{
  unint64_t result = qword_1EA1A8408;
  if (!qword_1EA1A8408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8408);
  }
  return result;
}

uint64_t static FormatOptionValue.date(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v5 = v4;
  uint64_t v6 = swift_allocBox();
  uint64_t v8 = v7;
  uint64_t v9 = sub_1C151631C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  *(void *)(v8 + *(int *)(v5 + 36)) = MEMORY[0x1E4FBC860];
  *a2 = v6 | 0x2000000000000000;
  return result;
}

uint64_t static FormatOptionValue.url(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v5 = v4;
  uint64_t v6 = swift_allocBox();
  uint64_t v8 = v7;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  *(void *)(v8 + *(int *)(v5 + 36)) = MEMORY[0x1E4FBC860];
  *a2 = v6 | 0x6000000000000000;
  return result;
}

uint64_t sub_1C0EBFB8C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a3;
  *(void *)(a3 + 24) = MEMORY[0x1E4FBB390];
  *(unsigned char *)a3 = a1;
  int64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F6854(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v7 = (unsigned char *)(a2 + 48);
    do
    {
      uint64_t v9 = *((void *)v7 - 2);
      uint64_t v8 = *((void *)v7 - 1);
      char v10 = *v7;
      unint64_t v11 = *(void *)(v17 + 16);
      unint64_t v12 = *(void *)(v17 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1) {
        sub_1C05F6854(v12 > 1, v11 + 1, 1);
      }
      v7 += 24;
      *(void *)(v17 + 16) = v11 + 1;
      uint64_t v13 = v17 + 48 * v11;
      *(unsigned char *)(v13 + 32) = v10;
      *(void *)(v13 + 48) = *(void *)&v16[15];
      *(_OWORD *)(v13 + 33) = *(_OWORD *)v16;
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB390];
      *(void *)(v13 + 64) = v9;
      *(void *)(v13 + 72) = v8;
      --v5;
    }
    while (v5);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = a3;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v4 + 32) = v6;
  return result;
}

uint64_t sub_1C0EBFCC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB87B1A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
  uint64_t v30 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - v6);
  uint64_t v8 = sub_1C151631C();
  a2[3] = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
  uint64_t v29 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  v29(boxed_opaque_existential_0, a1, v8);
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v11 = *(void *)(a1 + *(int *)(v10 + 36));
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v27 = a1;
    int v28 = a2;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F6854(0, v12, 0);
    uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v26 = v11;
    uint64_t v14 = v11 + ((v13 + 32) & ~v13);
    uint64_t v15 = *(void *)(v5 + 72);
    do
    {
      sub_1BFFDA208(v14, (uint64_t)v7, (uint64_t)&qword_1EB87B1A8, (uint64_t)type metadata accessor for FormatSelectorValueSelector, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26D60);
      uint64_t v16 = (char *)v7 + *(int *)(v30 + 36);
      *((void *)&v32 + 1) = v8;
      uint64_t v17 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v31);
      v29(v17, (uint64_t)v16, v8);
      uint64_t v18 = v7[1];
      *(void *)&long long v33 = *v7;
      *((void *)&v33 + 1) = v18;
      swift_bridgeObjectRetain();
      sub_1BFFDA0C8((uint64_t)v7, (uint64_t)&qword_1EB87B1A8, (uint64_t)type metadata accessor for FormatSelectorValueSelector, (uint64_t (*)(void))sub_1BFF26D60);
      uint64_t v19 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6854(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v34;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1C05F6854(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v34;
      }
      *(void *)(v19 + 16) = v21 + 1;
      uint64_t v22 = (_OWORD *)(v19 + 48 * v21);
      long long v23 = v31;
      long long v24 = v33;
      v22[3] = v32;
      v22[4] = v24;
      v22[2] = v23;
      v14 += v15;
      --v12;
    }
    while (v12);
    a1 = v27;
    a2 = v28;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFDA0C8(a1, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26D60);
  uint64_t result = swift_bridgeObjectRelease();
  a2[4] = v19;
  return result;
}

uint64_t sub_1C0EBFFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4 = a2;
  uint64_t v5 = MEMORY[0x1E4FBC958];
  *(void *)(a2 + 24) = MEMORY[0x1E4FBC958];
  *(double *)a2 = a3;
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F6854(0, v6, 0);
    uint64_t v7 = v18;
    uint64_t v8 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v10 = *(v8 - 2);
      uint64_t v9 = *(v8 - 1);
      uint64_t v11 = *v8;
      unint64_t v13 = *(void *)(v18 + 16);
      unint64_t v12 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1) {
        sub_1C05F6854(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v18 + 16) = v13 + 1;
      uint64_t v14 = v18 + 48 * v13;
      *(void *)(v14 + 32) = v11;
      *(_OWORD *)(v14 + 40) = v17;
      *(void *)(v14 + 56) = v5;
      *(void *)(v14 + 64) = v10;
      *(void *)(v14 + 72) = v9;
      v8 += 3;
      --v6;
    }
    while (v6);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = a2;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v4 + 32) = v7;
  return result;
}

uint64_t sub_1C0EC0120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a3;
  a3[3] = MEMORY[0x1E4FBB550];
  *a3 = a1;
  int64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F6854(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v7 = (uint64_t *)(a2 + 48);
    do
    {
      uint64_t v9 = *(v7 - 2);
      uint64_t v8 = *(v7 - 1);
      uint64_t v10 = *v7;
      unint64_t v11 = *(void *)(v17 + 16);
      unint64_t v12 = *(void *)(v17 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1) {
        sub_1C05F6854(v12 > 1, v11 + 1, 1);
      }
      v7 += 3;
      *(void *)(v17 + 16) = v11 + 1;
      uint64_t v13 = v17 + 48 * v11;
      *(void *)(v13 + 32) = v10;
      *(_OWORD *)(v13 + 40) = v16;
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v13 + 64) = v9;
      *(void *)(v13 + 72) = v8;
      --v5;
    }
    while (v5);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = a3;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  v4[4] = v6;
  return result;
}

uint64_t sub_1C0EC0254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int64_t v5 = a4;
  a4[3] = MEMORY[0x1E4FBB1A0];
  *a4 = a1;
  a4[1] = a2;
  int64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C05F6854(0, v6, 0);
    uint64_t v7 = v18;
    uint64_t v8 = (uint64_t *)(a3 + 56);
    do
    {
      uint64_t v9 = *(v8 - 3);
      uint64_t v10 = *(v8 - 2);
      uint64_t v11 = *(v8 - 1);
      uint64_t v12 = *v8;
      unint64_t v14 = *(void *)(v18 + 16);
      unint64_t v13 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1) {
        sub_1C05F6854(v13 > 1, v14 + 1, 1);
      }
      v8 += 4;
      *(void *)(v18 + 16) = v14 + 1;
      uint64_t v15 = (void *)(v18 + 48 * v14);
      v15[4] = v11;
      v15[5] = v12;
      v15[7] = MEMORY[0x1E4FBB1A0];
      v15[8] = v9;
      v15[9] = v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v5 = a4;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  v5[4] = v7;
  return result;
}

uint64_t sub_1C0EC03A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB87B1A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
  uint64_t v30 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - v6);
  uint64_t v8 = sub_1C1515FDC();
  a2[3] = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
  uint64_t v29 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  v29(boxed_opaque_existential_0, a1, v8);
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v11 = *(void *)(a1 + *(int *)(v10 + 36));
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v27 = a1;
    int v28 = a2;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F6854(0, v12, 0);
    uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v26 = v11;
    uint64_t v14 = v11 + ((v13 + 32) & ~v13);
    uint64_t v15 = *(void *)(v5 + 72);
    do
    {
      sub_1BFFDA208(v14, (uint64_t)v7, (uint64_t)&qword_1EB87B1A0, (uint64_t)type metadata accessor for FormatSelectorValueSelector, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26C28);
      long long v16 = (char *)v7 + *(int *)(v30 + 36);
      *((void *)&v32 + 1) = v8;
      uint64_t v17 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v31);
      v29(v17, (uint64_t)v16, v8);
      uint64_t v18 = v7[1];
      *(void *)&long long v33 = *v7;
      *((void *)&v33 + 1) = v18;
      swift_bridgeObjectRetain();
      sub_1BFFDA0C8((uint64_t)v7, (uint64_t)&qword_1EB87B1A0, (uint64_t)type metadata accessor for FormatSelectorValueSelector, (uint64_t (*)(void))sub_1BFF26C28);
      uint64_t v19 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6854(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v34;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1C05F6854(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v34;
      }
      *(void *)(v19 + 16) = v21 + 1;
      uint64_t v22 = (_OWORD *)(v19 + 48 * v21);
      long long v23 = v31;
      long long v24 = v33;
      v22[3] = v32;
      v22[4] = v24;
      v22[2] = v23;
      v14 += v15;
      --v12;
    }
    while (v12);
    a1 = v27;
    a2 = v28;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFDA0C8(a1, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26C28);
  uint64_t result = swift_bridgeObjectRelease();
  a2[4] = v19;
  return result;
}

uint64_t sub_1C0EC07A8(uint64_t a1)
{
  uint64_t v71 = a1;
  v73[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *v1;
  unint64_t v3 = (unint64_t)*v1 >> 60;
  uint64_t v4 = 2;
  if (((1 << v3) & 0x3EDF) != 0) {
    return v4;
  }
  uint64_t v6 = (void *)(v2 & 0xFFFFFFFFFFFFFFFLL);
  if (v3 != 5)
  {
    v73[0] = v6[3];
    swift_retain_n();
    swift_retain();
    uint64_t v4 = sub_1C0EC07A8(v71);
    swift_release_n();
    swift_release();
    return v4;
  }
  unint64_t v7 = v6[3];
  uint64_t v61 = v6[2];
  uint64_t v8 = v6[4];
  uint64_t v64 = *(void *)(v8 + 16);
  if (!v64)
  {
    swift_bridgeObjectRetain();
LABEL_41:
    swift_bridgeObjectRelease();
    uint64_t v59 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v59 = v61 & 0xFFFFFFFFFFFFLL;
    }
    return v59 == 0;
  }
  uint64_t v63 = v8 + 32;
  swift_bridgeObjectRetain_n();
  v60[1] = v8;
  swift_bridgeObjectRetain_n();
  uint64_t v9 = 0;
  v60[2] = v7;
  uint64_t v62 = v7;
LABEL_8:
  uint64_t v11 = (uint64_t *)(v63 + 32 * v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v15 = v11[2];
  uint64_t v14 = v11[3];
  uint64_t v16 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  uint64_t v68 = v14;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EB93C770;
  uint64_t v18 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  uint64_t v19 = (uint64_t *)(v17 + 16);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v17 + 16);
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v69 = v9;
  uint64_t v65 = v15;
  if (v21)
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1BFEF2D8C(v13, v12);
    if (v23)
    {
      uint64_t v24 = *(void *)(*(void *)(v20 + 56) + 24 * v22 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void *)(v24 + 16);
      if (!v46)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v69;
        goto LABEL_7;
      }
      uint64_t v67 = v12;
      uint64_t v70 = v24;
      uint64_t v47 = (uint64_t *)(v24 + 64);
      while (1)
      {
        uint64_t v48 = *(v47 - 1);
        uint64_t v49 = *v47;
        char v50 = *(unsigned char *)(v48 + 32);
        unsigned int v51 = v50 & 0x3F;
        unint64_t v52 = (unint64_t)((1 << v50) + 63) >> 6;
        size_t v53 = 8 * v52;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v51 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v60 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v60 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v71);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v56 = (void *)swift_slowAlloc();
          bzero(v56, v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v56, v52, v48, v71);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v56, -1, -1);
        }
        char v57 = sub_1BFEFAE14(v55, v48);
        swift_release();
        if (v57)
        {
          char v58 = sub_1BFEFB810(v71, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v58)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = v69;
            uint64_t v61 = v65;
            uint64_t v62 = v68;
LABEL_7:
            swift_bridgeObjectRelease();
            uint64_t v9 = v10 + 1;
            if (v9 == v64)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              unint64_t v7 = v62;
              goto LABEL_41;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v47 += 5;
        if (!--v46) {
          goto LABEL_6;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v66 = v18;
  swift_endAccess();
  v72[0] = v13;
  v72[1] = v12;
  swift_bridgeObjectRetain();
  sub_1BFF04A00(v72, v73);
  uint64_t v25 = v73[1];
  uint64_t v67 = v73[0];
  uint64_t v26 = v73[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v70 = v26;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v72[0] = *v19;
  uint64_t v28 = v72[0];
  *uint64_t v19 = 0x8000000000000000;
  uint64_t v29 = v13;
  uint64_t v30 = v12;
  unint64_t v32 = sub_1BFEF2D8C(v13, v12);
  uint64_t v33 = *(void *)(v28 + 16);
  BOOL v34 = (v31 & 1) == 0;
  uint64_t v35 = v33 + v34;
  if (__OFADD__(v33, v34))
  {
    __break(1u);
LABEL_45:
    __break(1u);
  }
  char v36 = v31;
  if (*(void *)(v28 + 24) >= v35)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v39 = (void *)v72[0];
      if (v31) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v39 = (void *)v72[0];
      if (v36) {
        goto LABEL_21;
      }
    }
LABEL_23:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v41 = (uint64_t *)(v39[6] + 16 * v32);
    *uint64_t v41 = v29;
    v41[1] = v30;
    uint64_t v42 = (uint64_t *)(v39[7] + 24 * v32);
    *uint64_t v42 = v67;
    v42[1] = v25;
    uint64_t v24 = v70;
    v42[2] = v70;
    uint64_t v43 = v39[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_45;
    }
    uint64_t v12 = v30;
    v39[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BFFDF158(v35, isUniquelyReferenced_nonNull_native);
  unint64_t v37 = sub_1BFEF2D8C(v29, v30);
  if ((v36 & 1) == (v38 & 1))
  {
    unint64_t v32 = v37;
    uint64_t v39 = (void *)v72[0];
    if ((v36 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_21:
    long long v40 = (uint64_t *)(v39[7] + 24 * v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *long long v40 = v67;
    v40[1] = v25;
    uint64_t v24 = v70;
    v40[2] = v70;
    uint64_t v12 = v30;
LABEL_25:
    *uint64_t v19 = (uint64_t)v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t static FormatOptionValue.string(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = v7;
  *a3 = v6 | 0x5000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t static FormatOptionValue.float(_:)@<X0>(uint64_t *a1@<X8>, double a2@<D0>)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *(void *)(result + 24) = MEMORY[0x1E4FBC860];
  *a1 = result | 0x3000000000000000;
  return result;
}

void sub_1C0EC0F14(uint64_t a1@<X8>)
{
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v35[-v7];
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v35[-v14];
  uint64_t v16 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      uint64_t v19 = v16 & 0xFFFFFFFFFFFFFFFLL;
      long long v20 = *(_OWORD *)(v19 + 32);
      v37[0] = *(_OWORD *)(v19 + 16);
      v37[1] = v20;
      uint64_t v38 = *(void *)(v19 + 48);
      long long v39 = *(_OWORD *)(v19 + 16);
      long long v36 = v39;
      sub_1BFF2A03C((uint64_t)v37);
      sub_1BFF59A8C((uint64_t)&v39);
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      long long v21 = v36;
      *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)a1 = v21;
      uint64_t v22 = v38;
      *(void *)&long long v36 = v38;
      sub_1BFF2A03C((uint64_t)v37);
      sub_1BFFAF7A4((uint64_t)&v36);
      uint64_t v23 = sub_1C0EC1BCC(v22, v37);
      sub_1C0EC1D2C((uint64_t)v37);
      sub_1C0EC1D2C((uint64_t)v37);
      sub_1BFCA59C8((uint64_t)&v36);
      *(void *)(a1 + 32) = v23;
      break;
    case 2uLL:
      uint64_t v24 = swift_projectBox();
      sub_1BFFDA208(v24, (uint64_t)v15, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26D60);
      sub_1BFFDA208((uint64_t)v15, (uint64_t)v11, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26D60);
      sub_1C0EBFCC8((uint64_t)v11, (uint64_t *)a1);
      sub_1BFFDA0C8((uint64_t)v15, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26D60);
      break;
    case 3uLL:
      double v25 = *(double *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v26 = swift_bridgeObjectRetain();
      sub_1C0EBFFEC(v26, a1, v25);
      break;
    case 4uLL:
      uint64_t v27 = v16 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v28 = *(void *)(v27 + 16);
      uint64_t v29 = *(void *)(v27 + 24);
      swift_bridgeObjectRetain();
      sub_1C0EC0120(v28, v29, (void *)a1);
      break;
    case 5uLL:
      uint64_t v30 = (void *)(v16 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v31 = v30[2];
      uint64_t v32 = v30[3];
      uint64_t v33 = v30[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0EC0254(v31, v32, v33, (void *)a1);
      break;
    case 6uLL:
      uint64_t v34 = swift_projectBox();
      sub_1BFFDA208(v34, (uint64_t)v8, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26C28);
      sub_1BFFDA208((uint64_t)v8, (uint64_t)v5, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26C28);
      sub_1C0EC03A8((uint64_t)v5, (uint64_t *)a1);
      sub_1BFFDA0C8((uint64_t)v8, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26C28);
      break;
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      break;
    case 8uLL:
      *(void *)&v37[0] = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      sub_1C0EC0F14(v13);
      break;
    default:
      char v17 = *(unsigned char *)(v16 + 16);
      uint64_t v18 = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      sub_1C0EBFB8C(v17, v18, a1);
      break;
  }
}

uint64_t sub_1C0EC13D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EC1410()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_1C0EC144C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v4 = *a2;
  unint64_t v5 = v2;
  return (static FormatOptionValue.< infix(_:_:)(&v4, &v5) & 1) == 0;
}

BOOL sub_1C0EC1488(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  return (static FormatOptionValue.< infix(_:_:)(&v5, &v4) & 1) == 0;
}

uint64_t sub_1C0EC14C4(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v4 = *a2;
  unint64_t v5 = v2;
  return static FormatOptionValue.< infix(_:_:)(&v4, &v5) & 1;
}

uint64_t static FormatOptionValue.BOOLean(_:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  *(void *)(result + 24) = MEMORY[0x1E4FBC860];
  *a2 = result;
  return result;
}

uint64_t static FormatOptionValue.integer(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = v5;
  *a2 = result | 0x4000000000000000;
  return result;
}

uint64_t FormatOptionValue.description.getter()
{
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v31 - v2;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v31 - v5;
  uint64_t v7 = *v0;
  switch((unint64_t)*v0 >> 60)
  {
    case 1uLL:
      uint64_t v11 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v12 = *(void *)(v11 + 24);
      uint64_t v32 = *(void *)(v11 + 16);
      *(void *)&long long v33 = v12;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return v32;
    case 2uLL:
      uint64_t v13 = swift_projectBox();
      sub_1BFFDA208(v13, (uint64_t)v6, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26D60);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v14 = v32;
      sub_1BFFDA0C8((uint64_t)v6, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26D60);
      return v14;
    case 3uLL:
      uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      *(void *)&long long v34 = v16;
      *((void *)&v34 + 1) = v17;
      sub_1C0EC1A5C();
      goto LABEL_17;
    case 4uLL:
      uint64_t v18 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v20 = *(void *)(v18 + 16);
      uint64_t v19 = *(void *)(v18 + 24);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      *(void *)&long long v34 = v20;
      *((void *)&v34 + 1) = v19;
      uint64_t v10 = &qword_1EB876970;
      goto LABEL_7;
    case 5uLL:
      uint64_t v21 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v22 = *(void *)(v21 + 16);
      *(void *)&long long v34 = 0;
      *((void *)&v34 + 1) = 0xE000000000000000;
      uint64_t v32 = v22;
      long long v33 = *(_OWORD *)(v21 + 24);
      sub_1BFF25620(0, &qword_1EB876950);
      sub_1C152036C();
      return v34;
    case 6uLL:
      uint64_t v23 = swift_projectBox();
      sub_1BFFDA208(v23, (uint64_t)v3, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26C28);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v14 = v32;
      sub_1BFFDA0C8((uint64_t)v3, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26C28);
      return v14;
    case 7uLL:
      uint64_t v24 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      *(void *)&long long v34 = v24;
      goto LABEL_17;
    case 8uLL:
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      long long v34 = *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C0868154();
      goto LABEL_17;
    case 9uLL:
      uint64_t v25 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      *(void *)&long long v34 = v25;
      goto LABEL_17;
    case 0xAuLL:
      uint64_t v26 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      *(void *)&long long v34 = v26;
      goto LABEL_17;
    case 0xBuLL:
      char v27 = *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      LOBYTE(v34) = v27;
      goto LABEL_17;
    case 0xCuLL:
      uint64_t v28 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      *(void *)&long long v34 = v28;
      goto LABEL_17;
    case 0xDuLL:
      uint64_t v29 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      *(void *)&long long v34 = v29;
      goto LABEL_17;
    default:
      char v8 = *(unsigned char *)(v7 + 16);
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      LOBYTE(v34) = v8;
      *((void *)&v34 + 1) = v9;
      uint64_t v10 = &qword_1EB876960;
LABEL_7:
      sub_1BFF25620(0, v10);
LABEL_17:
      sub_1C152036C();
      return v32;
  }
}

void sub_1C0EC1A5C()
{
  if (!qword_1EB876940)
  {
    sub_1C0092008();
    unint64_t v0 = type metadata accessor for FormatSelectorValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB876940);
    }
  }
}

unint64_t sub_1C0EC1ABC(uint64_t a1)
{
  unint64_t result = sub_1C08681C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EC1AE8()
{
  unint64_t result = qword_1EA1A8410;
  if (!qword_1EA1A8410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8410);
  }
  return result;
}

unint64_t sub_1C0EC1B3C(void *a1)
{
  a1[1] = sub_1BFE21978();
  a1[2] = sub_1BFE2945C();
  unint64_t result = sub_1C0EC1AE8();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionValue()
{
  return &type metadata for FormatOptionValue;
}

uint64_t sub_1C0EC1B84()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EC1BCC(uint64_t a1, long long *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C05F6854(0, v2, 0);
    uint64_t v3 = v15;
    long long v14 = *a2;
    uint64_t v6 = a1 + 56;
    do
    {
      uint64_t v7 = *(void *)(v6 - 16);
      uint64_t v12 = *(void *)(v6 - 24);
      long long v13 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF59A8C((uint64_t)&v14);
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v3;
      unint64_t v9 = *(void *)(v3 + 16);
      unint64_t v8 = *(void *)(v3 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C05F6854(v8 > 1, v9 + 1, 1);
        uint64_t v3 = v15;
      }
      v6 += 32;
      *(void *)(v3 + 16) = v9 + 1;
      uint64_t v10 = v3 + 48 * v9;
      *(_OWORD *)(v10 + 32) = v13;
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 64) = v12;
      *(void *)(v10 + 72) = v7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C0EC1D2C(uint64_t a1)
{
  return a1;
}

void destroy for DebugFormatHistoryItem(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 >= 2) {
    unsigned int v2 = *(_DWORD *)a1 + 2;
  }
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    uint64_t v3 = *(void **)(a1 + 24);
  }
  else if (*(void *)(a1 + 40))
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
}

uint64_t initializeWithCopy for DebugFormatHistoryItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  if (v4 == 1)
  {
    uint64_t v6 = *(void **)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 56) = 1;
    swift_bridgeObjectRetain();
    id v7 = v6;
  }
  else
  {
    unint64_t v8 = (_OWORD *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v10;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *v8;
      *(_OWORD *)(a1 + 32) = v11;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for DebugFormatHistoryItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    swift_bridgeObjectRelease();
    if (v4 == 1)
    {
    }
    else if (*(void *)(a1 + 40))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    if (v5 == 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v6 = *(void **)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 56) = 1;
      swift_bridgeObjectRetain();
      id v7 = v6;
    }
    else
    {
      uint64_t v8 = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      if (v8)
      {
        *(void *)(a1 + 40) = v8;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
      }
      else
      {
        long long v9 = *(_OWORD *)(a2 + 16);
        long long v10 = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(_OWORD *)(a1 + 16) = v9;
        *(_OWORD *)(a1 + 32) = v10;
      }
      *(unsigned char *)(a1 + 56) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for DebugFormatHistoryItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    swift_bridgeObjectRelease();
    if (v4 == 1)
    {
    }
    else if (*(void *)(a1 + 40))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = v7;
  }
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatHistoryItem()
{
  return &type metadata for DebugFormatHistoryItem;
}

uint64_t sub_1C0EC2118(uint64_t a1)
{
  id v2 = FCTagProviding.iconColor.getter();
  id v3 = objc_msgSend(self, sel_systemFontOfSize_weight_, 30.0, *MEMORY[0x1E4FB09A8]);
  unsigned int v4 = self;
  id v5 = objc_msgSend(v4, sel_whiteColor);
  unsigned int v6 = objc_msgSend(v2, sel__isSimilarToColor_withinPercentage_, v5, 0.12);

  if (v6)
  {
    id v7 = objc_msgSend(v4, sel_blackColor);

    id v2 = v7;
  }
  v10[0] = 0x4014000000000000;
  v10[1] = (uint64_t)v2;
  void v10[2] = (uint64_t)v3;
  v10[3] = 0;
  uint64_t v8 = FCTagProviding.createTagImage(imageSize:style:)(v10, a1, 50.0, 50.0);

  return v8;
}

id sub_1C0EC226C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  uint64_t v8 = (void *)a4(a3);
  swift_unknownObjectRelease();

  return v8;
}

void TagImageShareAttributeProvider.createSportsShareImage(for:completion:)(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v50 = a3;
  unsigned int v51 = a2;
  sub_1BFF2EAA4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v49 - v8;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t ObjectType = swift_getObjectType();
  id v52 = FCSportsProviding.navigationBarBackgroundColor.getter();
  id v18 = objc_msgSend(a1, sel_sportsTheme);
  if (v18)
  {
    id v19 = objc_msgSend(v18, sel_sportsLogoImageAssetHandle);
    swift_unknownObjectRelease();
    if (v19)
    {
      id v20 = objc_msgSend(v19, sel_filePath);

      if (v20) {
        goto LABEL_7;
      }
    }
  }
  id v21 = objc_msgSend(a1, sel_sportsTheme);
  if (v21)
  {
    id v22 = objc_msgSend(v21, sel_sportsLogoImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v22)
    {
      id v20 = objc_msgSend(v22, sel_filePath);

      if (v20)
      {
LABEL_7:
        sub_1C151E62C();

        sub_1C1515F7C();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          sub_1C002F608((uint64_t)v9);
LABEL_18:
          uint64_t v24 = v50;
          goto LABEL_19;
        }
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
        sub_1C1515F4C();
        id v27 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
        uint64_t v28 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v29 = objc_msgSend(v27, sel_initWithContentsOfFile_, v28);

        if (!v29)
        {
          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
          goto LABEL_18;
        }
        id v30 = (id)sub_1C0EC2A54(v52);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
LABEL_16:
        id v33 = v30;
        v51();

        return;
      }
    }
  }
  id v23 = objc_msgSend(a1, sel_feedNavImageAssetHandle);
  uint64_t v24 = v50;
  if (v23)
  {
    uint64_t v25 = v23;
    id v26 = objc_msgSend(v23, sel_filePath);

    if (v26)
    {
      sub_1C151E62C();

      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        sub_1C002F608((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
        sub_1C1515F4C();
        id v31 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
        uint64_t v32 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v30 = objc_msgSend(v31, sel_initWithContentsOfFile_, v32);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        if (v30) {
          goto LABEL_16;
        }
      }
    }
  }
LABEL_19:
  id v34 = objc_msgSend(a1, sel_sportsTheme);
  if (v34
    && (id v35 = objc_msgSend(v34, sel_sportsLogoImageAssetHandle),
        swift_unknownObjectRelease(),
        v35))
  {
    sub_1BFE4DBE0();
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C15320E0;
    *(void *)(v36 + 32) = v35;
    aBlock[0] = v36;
    sub_1C151EBEC();
    unint64_t v37 = (void *)swift_allocObject();
    uint64_t v38 = v51;
    long long v39 = v52;
    long long v37[2] = v35;
    v37[3] = v38;
    v37[4] = v24;
    v37[5] = a1;
    v37[6] = v39;
    id v40 = objc_allocWithZone(MEMORY[0x1E4F7E278]);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A100);
    id v41 = v35;
    swift_retain();
    swift_unknownObjectRetain();
    id v42 = v39;
    swift_bridgeObjectRetain();
    uint64_t v43 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v44 = objc_msgSend(v40, sel_initWithAssetHandles_, v43);

    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_1C0EC44D0;
    *(void *)(v45 + 24) = v37;
    aBlock[4] = sub_1BFC81770;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFD34E78;
    aBlock[3] = &block_descriptor_72;
    uint64_t v46 = _Block_copy(aBlock);
    id v47 = v44;
    swift_retain();
    swift_release();
    objc_msgSend(v47, sel_setFetchCompletionBlock_, v46);
    _Block_release(v46);

    sub_1C15182FC();
    sub_1C15182BC();
    if (objc_msgSend(self, sel_isMainThread)) {
      sub_1C15182DC();
    }
    else {
      objc_msgSend(v47, sel_start);
    }
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
  }
  else
  {
    uint64_t v48 = (void *)sub_1C0EC2118(ObjectType);
    v51();
  }
}

uint64_t sub_1C0EC2A54(void *a1)
{
  id v3 = objc_msgSend(v1, sel_imageRendererFormat);
  objc_msgSend(v3, sel_setOpaque_, 0);
  objc_msgSend(v1, sel_scale);
  objc_msgSend(v3, sel_setScale_);
  objc_msgSend(v1, sel_size);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v3, v4, v5);
  objc_msgSend(v1, sel_size);
  v21.size.CGFloat width = v7;
  v21.size.CGFloat height = v8;
  v21.origin.CGFloat x = 0.0;
  v21.origin.CGFloat y = 0.0;
  CGRect v22 = CGRectIntegral(v21);
  CGFloat x = v22.origin.x;
  CGFloat y = v22.origin.y;
  CGFloat width = v22.size.width;
  CGFloat height = v22.size.height;
  long long v13 = (CGFloat *)swift_allocObject();
  *((void *)v13 + 2) = a1;
  void v13[3] = x;
  v13[4] = y;
  uint64_t v13[5] = width;
  v13[6] = height;
  *((void *)v13 + 7) = v1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C0EC5984;
  *(void *)(v14 + 24) = v13;
  void v20[4] = sub_1C066AC30;
  v20[5] = v14;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  v20[2] = sub_1BFD2E6D0;
  v20[3] = &block_descriptor_81;
  uint64_t v15 = _Block_copy(v20);
  id v16 = a1;
  id v17 = v1;
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v6, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v3 & 1) == 0) {
    return (uint64_t)v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EC2CA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = objc_msgSend(a1, sel_filePath);
  if (!v9) {
    goto LABEL_4;
  }
  uint64_t v10 = v9;
  sub_1C151E62C();

  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  uint64_t v12 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithContentsOfFile_, v12);

  if (v13)
  {
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = a2;
    v14[3] = a3;
    v14[4] = v13;
    v14[5] = a5;
    swift_retain();
    id v15 = v13;
    id v16 = a5;
    sub_1C151950C();
  }
  else
  {
LABEL_4:
    id v17 = (void *)swift_allocObject();
    v17[2] = a2;
    v17[3] = a3;
    v17[4] = a4;
    swift_retain();
    swift_unknownObjectRetain();
    sub_1C151950C();
  }
  return swift_release();
}

void sub_1C0EC2E14(void (*a1)(void))
{
  uint64_t ObjectType = swift_getObjectType();
  id v3 = (id)sub_1C0EC2118(ObjectType);
  a1();
}

void TagImageShareAttributeProvider.createShareSportsEventImage(for:size:logoWidth:completion:)(void *a1, void (*a2)(void), uint64_t a3, double a4, double a5, double a6)
{
  id v11 = objc_msgSend(a1, sel_eventCompetitorTags);
  if (!v11) {
    goto LABEL_22;
  }
  uint64_t v12 = v11;
  sub_1C017E704();
  unint64_t v13 = sub_1C151EBCC();

  if (!(v13 >> 62))
  {
    if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
      goto LABEL_4;
    }
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v33 < 2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    a2(0);
    return;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v16 = (void *)MEMORY[0x1C18C7CB0](0, v13);
    id v15 = (void *)MEMORY[0x1C18C7CB0](1, v13);
    goto LABEL_8;
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v14)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v14 == 1)
  {
LABEL_25:
    __break(1u);
    return;
  }
  id v16 = *(void **)(v13 + 32);
  id v15 = *(void **)(v13 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
LABEL_8:
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v16, sel_sportsTheme);
  if (v17)
  {
    id v18 = objc_msgSend(v17, sel_sportsLogoImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v18)
    {
      id v19 = objc_msgSend(v15, sel_sportsTheme);
      if (v19)
      {
        id v20 = objc_msgSend(v19, sel_sportsLogoImageCompactAssetHandle);
        swift_unknownObjectRelease();
        if (v20)
        {
          sub_1BFE4DBE0();
          uint64_t v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_1C15320F0;
          *(void *)(v21 + 32) = v18;
          *(void *)(v21 + 40) = v20;
          sub_1C151EBEC();
          uint64_t v22 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v23 = swift_allocObject();
          *(void *)(v23 + 16) = v22;
          *(void *)(v23 + 24) = v18;
          *(void *)(v23 + 32) = v20;
          *(void *)(v23 + 40) = a2;
          *(void *)(v23 + 48) = a3;
          *(double *)(v23 + 56) = a4;
          *(double *)(v23 + 64) = a5;
          *(void *)(v23 + 72) = v16;
          *(void *)(v23 + 80) = v15;
          *(double *)(v23 + 88) = a6;
          id v24 = objc_allocWithZone(MEMORY[0x1E4F7E278]);
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A100);
          id v25 = v18;
          id v26 = v20;
          id v27 = v25;
          id v34 = v26;
          swift_retain();
          swift_retain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v28 = (void *)sub_1C151EBAC();
          swift_bridgeObjectRelease();
          id v29 = objc_msgSend(v24, sel_initWithAssetHandles_, v28);

          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = sub_1C0EC4510;
          *(void *)(v30 + 24) = v23;
          aBlock[4] = sub_1C035B780;
          aBlock[5] = v30;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1BFD34E78;
          aBlock[3] = &block_descriptor_16_0;
          id v31 = _Block_copy(aBlock);
          id v32 = v29;
          swift_retain();
          swift_release();
          objc_msgSend(v32, sel_setFetchCompletionBlock_, v31);
          _Block_release(v31);

          sub_1C15182FC();
          sub_1C15182BC();
          if (objc_msgSend(self, sel_isMainThread)) {
            sub_1C15182DC();
          }
          else {
            objc_msgSend(v32, sel_start);
          }
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          swift_release();
          swift_release();

          swift_release();
          return;
        }
      }
    }
  }
  a2(0);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_1C0EC33CC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v18 = sub_1C151E16C();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C151E1DC();
  uint64_t v54 = *(void *)(v22 - 8);
  uint64_t v55 = v22;
  MEMORY[0x1F4188790](v22);
  id v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v25 = MEMORY[0x1C18C9C60](a1 + 16);
  if (!v25) {
    goto LABEL_9;
  }
  id v26 = (void *)v25;
  uint64_t v51 = v19;
  id v27 = objc_msgSend(a2, sel_filePath);
  if (!v27)
  {

LABEL_9:
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = a4;
    *(void *)(v46 + 24) = a5;
    swift_retain();
    sub_1C151950C();
    return swift_release();
  }
  uint64_t v28 = v27;
  uint64_t v50 = v18;
  sub_1C151E62C();

  id v29 = objc_msgSend(a3, sel_filePath);
  if (!v29)
  {

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v30 = v29;
  uint64_t v49 = sub_1C151E62C();

  id v31 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  id v32 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v31, sel_initWithContentsOfFile_, v32);

  if (v33)
  {
    id v34 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    id v35 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v34, sel_initWithContentsOfFile_, v35);

    if (v36)
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
      uint64_t v49 = sub_1C151F56C();
      uint64_t v37 = swift_allocObject();
      *(double *)(v37 + 16) = a8;
      *(double *)(v37 + 24) = a9;
      uint64_t v38 = v52;
      *(void *)(v37 + 32) = v26;
      *(void *)(v37 + 40) = v38;
      *(void *)(v37 + 48) = v53;
      *(double *)(v37 + 56) = a10;
      *(void *)(v37 + 64) = v33;
      *(void *)(v37 + 72) = v36;
      *(void *)(v37 + 80) = a4;
      *(void *)(v37 + 88) = a5;
      aBlock[4] = sub_1C0EC53DC;
      aBlock[5] = v37;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BFC9FC68;
      aBlock[3] = &block_descriptor_59_0;
      long long v39 = _Block_copy(aBlock);
      id v40 = v26;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v41 = v33;
      id v42 = v36;
      swift_retain();
      swift_release();
      sub_1C151E19C();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1BFD32B60();
      sub_1BFF2EAA4(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1BFD32AD8();
      uint64_t v43 = v50;
      sub_1C151FFBC();
      id v44 = (void *)v49;
      MEMORY[0x1C18C70C0](0, v24, v21, v39);
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v24, v55);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = a4;
  *(void *)(v47 + 24) = a5;
  swift_retain();
  sub_1C151950C();

  return swift_release();
}

uint64_t sub_1C0EC38E4(double a1, double a2, CGFloat a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v17 = sub_1C0EC53F8(a5, a6, 0.0, 0.0, a1, a2);
  id v18 = sub_1C0EC56B8((uint64_t)v17, a7, a8, 0.0, 0.0, a1, a2, a3);
  objc_msgSend(v18, sel_setNeedsDisplay);
  objc_msgSend(v18, sel_bounds);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v19, v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v18;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1C0EC58A4;
  *(void *)(v23 + 24) = v22;
  v30[4] = sub_1BFD2E744;
  v30[5] = v23;
  v30[0] = MEMORY[0x1E4F143A8];
  v30[1] = 1107296256;
  v30[2] = sub_1BFD2E6D0;
  v30[3] = &block_descriptor_68;
  id v24 = _Block_copy(v30);
  id v25 = v18;
  swift_retain();
  swift_release();
  id v26 = objc_msgSend(v21, sel_imageWithActions_, v24);
  _Block_release(v24);
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v24)
  {
    __break(1u);
  }
  else
  {
    uint64_t v28 = (void *)swift_allocObject();
    id v28[2] = a9;
    v28[3] = a10;
    v28[4] = v26;
    swift_retain();
    id v29 = v26;
    sub_1C151950C();
    swift_release();

    return swift_release();
  }
  return result;
}

id TagImageShareAttributeProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id TagImageShareAttributeProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id TagImageShareAttributeProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C0EC3CCC(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v14 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  id v15 = (CGColor *)objc_msgSend(a2, sel_CGColor);
  CGContextSetFillColorWithColor(v14, v15);

  id v16 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v19.origin.CGFloat x = a4;
  v19.origin.CGFloat y = a5;
  v19.size.CGFloat width = a6;
  v19.size.CGFloat height = a7;
  CGContextFillRect(v16, v19);

  return objc_msgSend(a3, sel_drawInRect_, a4, a5, a6, a7);
}

uint64_t _s8NewsFeed30TagImageShareAttributeProviderC05shareD03forSo7UIImageCSo14FCTagProviding_p_tF_0(void *a1)
{
  sub_1BFF2EAA4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  double v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  CGFloat v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t ObjectType = swift_getObjectType();
  if (!objc_msgSend(a1, sel_isMySports))
  {
    uint64_t v38 = ObjectType;
    id v27 = objc_msgSend(a1, sel_feedNavImageAssetHandle);
    if (v27
      && (v28 = v27, id v29 = objc_msgSend(v27, sel_filePath), v28, v29))
    {
      sub_1C151E62C();

      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
        sub_1C1515F4C();
        id v30 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
        id v31 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v25 = objc_msgSend(v30, sel_initWithContentsOfFile_, v31);

        if (!v25) {
          id v25 = (id)sub_1C0EC2118(v38);
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return (uint64_t)v25;
      }
    }
    else
    {
      id v32 = objc_msgSend(a1, sel_coverImageAssetHandle);
      if (!v32) {
        return sub_1C0EC2118(v38);
      }
      id v33 = v32;
      id v34 = objc_msgSend(v32, sel_filePath);

      if (!v34) {
        return sub_1C0EC2118(v38);
      }
      sub_1C151E62C();

      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v4, v8);
        sub_1C1515F4C();
        id v35 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
        id v36 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v25 = objc_msgSend(v35, sel_initWithContentsOfFile_, v36);

        if (!v25) {
          id v25 = (id)sub_1C0EC2118(v38);
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        return (uint64_t)v25;
      }
      CGFloat v7 = v4;
    }
    sub_1C002F608((uint64_t)v7);
    return sub_1C0EC2118(v38);
  }
  id v16 = objc_msgSend(self, sel_blackColor);
  id v17 = self;
  id v18 = objc_msgSend(v17, sel_configurationWithHierarchicalColor_, v16);

  id v19 = v18;
  double v20 = (void *)sub_1C151E5EC();
  id v21 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v20, v19);

  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  uint64_t v22 = (void *)sub_1C151F84C();
  id v23 = objc_msgSend(v17, sel_configurationWithFont_scale_, v22, 3);

  id v24 = v21;
  id v25 = objc_msgSend(v24, sel_imageByApplyingSymbolConfiguration_, v23);

  if (!v25) {
    return sub_1C0EC2118(ObjectType);
  }
  return (uint64_t)v25;
}

uint64_t _s8NewsFeed30TagImageShareAttributeProviderC08mySportseD03forSo7UIImageCSo14FCTagProviding_p_tF_0()
{
  id v0 = objc_msgSend(self, sel_blackColor);
  id v1 = self;
  id v2 = objc_msgSend(v1, sel_configurationWithHierarchicalColor_, v0);

  id v3 = v2;
  double v4 = (void *)sub_1C151E5EC();
  id v5 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v4, v3);

  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  uint64_t v6 = (void *)sub_1C151F84C();
  id v7 = objc_msgSend(v1, sel_configurationWithFont_scale_, v6, 3);

  id v8 = v5;
  id v9 = objc_msgSend(v8, sel_imageByApplyingSymbolConfiguration_, v7);

  if (v9) {
    return (uint64_t)v9;
  }
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C0EC2118(ObjectType);
}

uint64_t sub_1C0EC44D4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0EC4514()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0EC454C(void *a1, void (**a2)(void, void))
{
  sub_1BFF2EAA4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v48 - v8;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v48 - v15;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = a2;
  uint64_t ObjectType = swift_getObjectType();
  _Block_copy(a2);
  uint64_t v49 = ObjectType;
  id v51 = FCSportsProviding.navigationBarBackgroundColor.getter();
  id v18 = objc_msgSend(a1, sel_sportsTheme);
  if (v18)
  {
    id v19 = objc_msgSend(v18, sel_sportsLogoImageAssetHandle);
    swift_unknownObjectRelease();
    if (v19)
    {
      id v20 = objc_msgSend(v19, sel_filePath);

      if (v20) {
        goto LABEL_7;
      }
    }
  }
  id v21 = objc_msgSend(a1, sel_sportsTheme);
  if (v21)
  {
    id v22 = objc_msgSend(v21, sel_sportsLogoImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v22)
    {
      id v20 = objc_msgSend(v22, sel_filePath);

      if (v20)
      {
LABEL_7:
        sub_1C151E62C();

        sub_1C1515F7C();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          sub_1C002F608((uint64_t)v9);
LABEL_18:
          uint64_t v24 = v50;
          goto LABEL_19;
        }
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
        sub_1C1515F4C();
        id v27 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
        uint64_t v28 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v29 = objc_msgSend(v27, sel_initWithContentsOfFile_, v28);

        if (!v29)
        {
          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
          goto LABEL_18;
        }
        id v30 = (id)sub_1C0EC2A54(v51);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
LABEL_16:
        id v33 = v30;
        ((void (**)(void, id))a2)[2](a2, v33);
        swift_release();

        return;
      }
    }
  }
  id v23 = objc_msgSend(a1, sel_feedNavImageAssetHandle);
  uint64_t v24 = v50;
  if (v23)
  {
    id v25 = v23;
    id v26 = objc_msgSend(v23, sel_filePath);

    if (v26)
    {
      sub_1C151E62C();

      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        sub_1C002F608((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
        sub_1C1515F4C();
        id v31 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
        id v32 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v30 = objc_msgSend(v31, sel_initWithContentsOfFile_, v32);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        if (v30) {
          goto LABEL_16;
        }
      }
    }
  }
LABEL_19:
  id v34 = objc_msgSend(a1, sel_sportsTheme);
  if (v34
    && (id v35 = objc_msgSend(v34, sel_sportsLogoImageAssetHandle),
        swift_unknownObjectRelease(),
        v35))
  {
    sub_1BFE4DBE0();
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C15320E0;
    *(void *)(v36 + 32) = v35;
    aBlock[0] = v36;
    sub_1C151EBEC();
    uint64_t v37 = (void *)swift_allocObject();
    long long v37[2] = v35;
    v37[3] = sub_1C0EC52A8;
    v37[4] = v24;
    v37[5] = a1;
    uint64_t v38 = v51;
    v37[6] = v51;
    id v39 = objc_allocWithZone(MEMORY[0x1E4F7E278]);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A100);
    id v40 = v35;
    swift_retain();
    swift_unknownObjectRetain();
    id v41 = v38;
    swift_bridgeObjectRetain();
    id v42 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v43 = objc_msgSend(v39, sel_initWithAssetHandles_, v42);

    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_1C0EC44D0;
    *(void *)(v44 + 24) = v37;
    aBlock[4] = sub_1C035B780;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFD34E78;
    aBlock[3] = &block_descriptor_47_0;
    uint64_t v45 = _Block_copy(aBlock);
    id v46 = v43;
    swift_retain();
    swift_release();
    objc_msgSend(v46, sel_setFetchCompletionBlock_, v45);
    _Block_release(v45);

    sub_1C15182FC();
    sub_1C15182BC();
    if (objc_msgSend(self, sel_isMainThread)) {
      sub_1C15182DC();
    }
    else {
      objc_msgSend(v46, sel_start);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
  }
  else
  {
    uint64_t v47 = (void *)sub_1C0EC2118(v49);
    ((void (**)(void, void *))a2)[2](a2, v47);
    swift_release();
  }
}

void sub_1C0EC4D20(void *a1, double a2, double a3, double a4, uint64_t a5, void (**a6)(void, void))
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a6;
  _Block_copy(a6);
  id v12 = objc_msgSend(a1, sel_eventCompetitorTags);
  if (!v12) {
    goto LABEL_22;
  }
  uint64_t v13 = v12;
  sub_1C017E704();
  unint64_t v14 = sub_1C151EBCC();

  if (!(v14 >> 62))
  {
    if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
      goto LABEL_4;
    }
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v33 < 2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    a6[2](a6, 0);
    swift_release();
    return;
  }
LABEL_4:
  if ((v14 & 0xC000000000000001) == 0)
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      if (v15 != 1)
      {
        id v17 = *(void **)(v14 + 32);
        id v16 = *(void **)(v14 + 40);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_8;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  id v17 = (void *)MEMORY[0x1C18C7CB0](0, v14);
  id v16 = (void *)MEMORY[0x1C18C7CB0](1, v14);
LABEL_8:
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v17, sel_sportsTheme);
  if (v18)
  {
    id v19 = objc_msgSend(v18, sel_sportsLogoImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v19)
    {
      id v20 = objc_msgSend(v16, sel_sportsTheme);
      if (v20)
      {
        id v21 = objc_msgSend(v20, sel_sportsLogoImageCompactAssetHandle);
        swift_unknownObjectRelease();
        if (v21)
        {
          sub_1BFE4DBE0();
          uint64_t v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = xmmword_1C15320F0;
          *(void *)(v22 + 32) = v19;
          *(void *)(v22 + 40) = v21;
          sub_1C151EBEC();
          uint64_t v23 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v23;
          *(void *)(v24 + 24) = v19;
          *(void *)(v24 + 32) = v21;
          *(void *)(v24 + 40) = sub_1C0EC52A8;
          *(void *)(v24 + 48) = v11;
          *(double *)(v24 + 56) = a2;
          *(double *)(v24 + 64) = a3;
          *(void *)(v24 + 72) = v17;
          *(void *)(v24 + 80) = v16;
          *(double *)(v24 + 88) = a4;
          id v25 = objc_allocWithZone(MEMORY[0x1E4F7E278]);
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A100);
          id v26 = v19;
          id v27 = v21;
          id v34 = v26;
          id v35 = v27;
          swift_retain();
          swift_retain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v28 = (void *)sub_1C151EBAC();
          swift_bridgeObjectRelease();
          id v29 = objc_msgSend(v25, sel_initWithAssetHandles_, v28);

          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = sub_1C0EC4510;
          *(void *)(v30 + 24) = v24;
          aBlock[4] = sub_1C035B780;
          aBlock[5] = v30;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1BFD34E78;
          aBlock[3] = &block_descriptor_33_1;
          id v31 = _Block_copy(aBlock);
          id v32 = v29;
          swift_retain();
          swift_release();
          objc_msgSend(v32, sel_setFetchCompletionBlock_, v31);
          _Block_release(v31);

          sub_1C15182FC();
          sub_1C15182BC();
          if (objc_msgSend(self, sel_isMainThread)) {
            sub_1C15182DC();
          }
          else {
            objc_msgSend(v32, sel_start, v34, v35);
          }
          swift_release();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          swift_release();
          swift_release();

          swift_release();
          return;
        }
      }
    }
  }
  a6[2](a6, 0);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_1C0EC5270()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C0EC52A8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t objectdestroy_8Tm_3()
{
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EC5320()
{
  return sub_1C0EC33CC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 72), *(void *)(v0 + 80), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 88));
}

uint64_t sub_1C0EC5340()
{
  return sub_1C0EC2CA4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1C0EC5350()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1C0EC537C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0EC53DC()
{
  return sub_1C0EC38E4(*(double *)(v0 + 16), *(double *)(v0 + 24), *(CGFloat *)(v0 + 56), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

id sub_1C0EC53F8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12 = sub_1C151A46C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (id *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  id v18 = (id *)((char *)&v34 - v17);
  sub_1BFF2EAA4(0, (unint64_t *)&qword_1EB882B70, MEMORY[0x1E4FABFB0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8);
  id v21 = (char *)&v34 - v20;
  id v34 = objc_msgSend(objc_allocWithZone((Class)sub_1C151CE1C()), sel_initWithFrame_, a3, a4, a5, a6);
  sub_1BFE4DBE0();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C15320F0;
  *(void *)(v22 + 32) = a1;
  *(void *)(v22 + 40) = a2;
  id v35 = (void *)v22;
  sub_1C151EBEC();
  uint64_t v23 = v35;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v24 = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(v23);
  id v25 = (void *)v24[2];
  *id v18 = v25;
  uint64_t v26 = *MEMORY[0x1E4FABE80];
  id v27 = *(void (**)(void *, uint64_t, uint64_t))(v13 + 104);
  v27(v18, v26, v12);
  uint64_t v28 = (void *)v24[3];
  *uint64_t v15 = v28;
  v27(v15, v26, v12);
  id v29 = v25;
  id v30 = v28;
  sub_1C151A69C();
  uint64_t v31 = sub_1C151A6AC();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v21, 0, 1, v31);
  id v32 = v34;
  sub_1C151CE0C();
  swift_release();
  return v32;
}

id sub_1C0EC56B8(uint64_t a1, uint64_t a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, a4, a5, a6, a7);
  v23.origin.CGFloat x = a4;
  v23.origin.CGFloat y = a5;
  v23.size.CGFloat width = a6;
  v23.size.CGFloat height = a7;
  CGFloat v17 = (CGRectGetHeight(v23) - a8) * 0.5;
  v24.origin.CGFloat x = a4;
  v24.origin.CGFloat y = a5;
  v24.size.CGFloat width = a6;
  v24.size.CGFloat height = a7;
  CGFloat v18 = (CGRectGetWidth(v24) - (a8 + a8)) * 0.25;
  v25.origin.CGFloat x = v18;
  v25.origin.CGFloat y = v17;
  v25.size.CGFloat width = a8;
  v25.size.CGFloat height = a8;
  CGFloat v19 = CGRectGetMaxX(v25) + v18 + v18;
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, v18, v17, a8, a8);
  objc_msgSend(v20, sel_setImage_, a2);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, v19, v17, a8, a8);
  objc_msgSend(v21, sel_setImage_, a3);
  objc_msgSend(v16, sel_addSubview_, a1);
  objc_msgSend(v16, sel_addSubview_, v20);
  objc_msgSend(v16, sel_addSubview_, v21);
  objc_msgSend(v16, sel_setAccessibilityIgnoresInvertColors_, 1);

  return v16;
}

uint64_t sub_1C0EC586C()
{
  return swift_deallocObject();
}

id sub_1C0EC58A4()
{
  id v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v1, sel_drawViewHierarchyInRect_afterScreenUpdates_, 1);
}

uint64_t sub_1C0EC58F4()
{
  return swift_deallocObject();
}

uint64_t sub_1C0EC5904()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0EC5944()
{
  return swift_deallocObject();
}

id sub_1C0EC5984(void *a1)
{
  return sub_1C0EC3CCC(a1, *(void **)(v1 + 16), *(void **)(v1 + 56), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

uint64_t sub_1C0EC5998()
{
  return swift_deallocObject();
}

uint64_t sub_1C0EC59A8()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C0EC59E8()
{
  sub_1C0EC2E14(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C0EC59F4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C0EC5A3C()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  id v2 = (id)sub_1C0EC2A54(*(void **)(v0 + 40));
  v1();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPictureInPictureModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatPictureInPictureModel(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for FormatPictureInPictureModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for FormatPictureInPictureModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for FormatPictureInPictureModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for FormatPictureInPictureModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPictureInPictureModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0EC6220);
}

uint64_t sub_1C0EC6220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FormatPictureInPictureModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0EC62A0);
}

uint64_t sub_1C0EC62A0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C0EC6320(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C0EC6388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t sub_1C0EC63F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v21 = a4;
  uint64_t v22 = a3;
  uint64_t v23 = a5;
  sub_1BFF196F4(0, (unint64_t *)&qword_1EB891010, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v20[-v10];
  uint64_t v12 = type metadata accessor for FormatOption();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  FormatOptionCollection.subscript.getter(a1, a2, (uint64_t)v11);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    sub_1C0EC7C08((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOption);
    sub_1C12EC404(v15, v22);
    if (v6) {
      return sub_1BFF1F4C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOption);
    }
    uint64_t v17 = v23;
    sub_1C0EC7C08((uint64_t)v15, v23, (uint64_t (*)(void))type metadata accessor for FormatOption);
    uint64_t v16 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v17, v16, 1, v12);
  }
  sub_1C0EC7B98((uint64_t)v11, (unint64_t *)&qword_1EB891010, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
  if (v21 & 1) == 0 || (*(unsigned char *)(v5 + 48))
  {
    uint64_t v16 = 1;
    uint64_t v17 = v23;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v17, v16, 1, v12);
  }
  type metadata accessor for FormatLayoutError();
  sub_1BFE7E51C();
  swift_allocError();
  *CGFloat v19 = a1;
  v19[1] = a2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1C0EC66B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t *a9, uint64_t a10, uint64_t *a11, unint64_t *a12)
{
  uint64_t v13 = v12;
  unint64_t v100 = a8;
  uint64_t v101 = a4;
  uint64_t v111 = a7;
  uint64_t v85 = a6;
  int v99 = a5;
  uint64_t v113 = a3;
  uint64_t v83 = *(void *)v13;
  uint64_t v16 = type metadata accessor for GroupLayoutContext();
  uint64_t v78 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v79 = v17;
  uint64_t v84 = (uint64_t)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a9;
  uint64_t v110 = a9[1];
  uint64_t v91 = a9[2];
  uint64_t v92 = v18;
  uint64_t v19 = a9[3];
  uint64_t v89 = a9[4];
  uint64_t v90 = v19;
  unint64_t v88 = a9[5];
  uint64_t v20 = *a11;
  uint64_t v21 = a11[1];
  uint64_t v22 = a11[2];
  uint64_t v23 = a11[3];
  uint64_t v24 = a12[1];
  unint64_t v104 = *a12;
  uint64_t v105 = v24;
  uint64_t v112 = a12[2];
  uint64_t v25 = a12[4];
  uint64_t v106 = a12[3];
  uint64_t v107 = v25;
  uint64_t v26 = (void *)a12[6];
  unint64_t v27 = a12[7];
  uint64_t v108 = a12[5];
  unint64_t v109 = v27;
  unint64_t v28 = a12[8];
  unint64_t v102 = a12[9];
  uint64_t v103 = v28;
  *(_WORD *)uint64_t v131 = 0;
  uint64_t v29 = *(void *)(v13 + 24);
  swift_retain();
  if (a2)
  {
    id v30 = sub_1BFF1E154(a1, a2);
    swift_release();
    swift_beginAccess();
    v131[1] = 1;
    uint64_t v29 = (uint64_t)v30;
  }
  if (v21)
  {
    uint64_t v121 = v20;
    uint64_t v122 = v21;
    uint64_t v123 = v22;
    uint64_t v124 = v23;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C1162A40(&v121);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    v131[1] = 1;
    uint64_t v29 = (uint64_t)v31;
  }
  id v32 = v26;
  uint64_t v34 = v112;
  uint64_t v33 = v113;
  uint64_t v87 = sub_1C0EC7514(v101, v99 & 1, v13, &v131[1], v131);
  uint64_t v35 = *(void *)(v33 + 16);
  uint64_t v113 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options);
  if (v35 && (uint64_t v36 = sub_1BFEF1B58(v33)) != 0)
  {
    uint64_t v37 = v36;
    swift_beginAccess();
    v131[1] = 1;
    swift_beginAccess();
    v131[0] = 1;
    uint64_t v113 = v37;
  }
  else
  {
    swift_retain();
  }
  uint64_t v101 = v29;
  if (v111)
  {
    swift_beginAccess();
    v131[1] = 1;
    uint64_t v86 = v111;
  }
  else
  {
    uint64_t v38 = *(void *)(v13 + 40);
    uint64_t v85 = *(void *)(v13 + 32);
    uint64_t v86 = v38;
    swift_bridgeObjectRetain();
  }
  uint64_t v39 = v110;
  swift_bridgeObjectRetain();
  uint64_t v111 = sub_1C0EC7278(v100, (void *)v13, (uint64_t)&v131[1]);
  if (v39)
  {
    swift_beginAccess();
    int v99 = 0;
    uint64_t v40 = v92;
    v131[1] = 1;
    uint64_t v39 = v110;
    uint64_t v97 = v110;
    uint64_t v98 = v92;
    uint64_t v95 = v90;
    uint64_t v96 = v91;
    uint64_t v93 = v88;
    uint64_t v94 = v89;
  }
  else
  {
    uint64_t v41 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
    uint64_t v42 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 16);
    uint64_t v43 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 24);
    uint64_t v44 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 32);
    uint64_t v45 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 40);
    int v46 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
    uint64_t v97 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 8);
    uint64_t v98 = v41;
    uint64_t v95 = v43;
    uint64_t v96 = v42;
    uint64_t v93 = v45;
    uint64_t v94 = v44;
    int v99 = v46;
    sub_1BFF19758(v41, v97, v42, v43, v44, v45, v46);
    uint64_t v40 = v92;
  }
  sub_1BFF1E6CC(v40, v39);
  uint64_t v47 = sub_1C0EC7630(a10, v13, &v131[1]);
  uint64_t v110 = v48;
  if (v34 == 1)
  {
    LODWORD(v89) = *(unsigned __int8 *)(v13 + 48);
    unint64_t v88 = *(unsigned __int8 *)(v13 + 49);
    uint64_t v49 = *(void *)(v13 + 56);
    uint64_t v50 = *(void *)(v13 + 64);
    uint64_t v51 = *(void *)(v13 + 80);
    uint64_t v81 = *(void *)(v13 + 72);
    uint64_t v82 = v49;
    long long v80 = v32;
    uint64_t v53 = *(void *)(v13 + 88);
    uint64_t v52 = *(void **)(v13 + 96);
    unint64_t v54 = *(void *)(v13 + 104);
    uint64_t v55 = *(void *)(v13 + 112);
    unint64_t v56 = *(void *)(v13 + 120);
    swift_bridgeObjectRetain();
    uint64_t v90 = v50;
    swift_bridgeObjectRetain();
    uint64_t v91 = v55;
    uint64_t v92 = v53;
    uint64_t v57 = v53;
    id v32 = v80;
    unint64_t v100 = v56;
    sub_1BFF1E730(v57, v52);
  }
  else
  {
    LODWORD(v89) = v104 & 1;
    unint64_t v88 = v104 >> 8;
    swift_beginAccess();
    uint64_t v51 = v107;
    v131[1] = 1;
    uint64_t v52 = v32;
    unint64_t v54 = v109;
    uint64_t v91 = v103;
    uint64_t v92 = v108;
    unint64_t v100 = v102;
    uint64_t v81 = v106;
    uint64_t v82 = v105;
    uint64_t v90 = v34;
  }
  swift_beginAccess();
  if (v131[1] == 1)
  {
    swift_beginAccess();
    char v58 = &unk_1EB93C000;
    unint64_t v76 = v54;
    uint64_t v77 = v47;
    uint64_t v75 = v51;
    if (v131[0] == 1)
    {
      sub_1BFF196F4(0, (unint64_t *)&qword_1EB87C700, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, MEMORY[0x1E4FAA880]);
      v74[1] = v59;
      long long v80 = v32;
      uint64_t v60 = v84;
      sub_1BFF1E828(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext, v84);
      unint64_t v61 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      uint64_t v62 = v87;
      unint64_t v63 = (v79 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v64 = v113;
      uint64_t v65 = swift_allocObject();
      sub_1C0EC7C08(v60, v65 + v61, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      *(void *)(v65 + v63) = v64;
      *(void *)(v65 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v62;
      sub_1C0DB506C(v104, v105, v112, v106, v107, v108, v80);
      char v58 = (void *)&unk_1EB93C000;
      swift_retain();
      uint64_t v66 = v62;
      swift_bridgeObjectRetain();
      uint64_t v67 = v60;
      uint64_t v68 = sub_1C1517F1C();
    }
    else
    {
      uint64_t v68 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions);
      sub_1C0DB506C(v104, v105, v112, v106, v107, v108, v32);
      swift_retain();
      uint64_t v67 = v84;
      uint64_t v66 = v87;
    }
    uint64_t v69 = v86;
    uint64_t v70 = *(void *)(v13 + 16);
    LOBYTE(v121) = v89;
    BYTE1(v121) = v88;
    uint64_t v122 = v82;
    uint64_t v123 = v90;
    uint64_t v124 = v81;
    uint64_t v125 = v75;
    uint64_t v126 = v92;
    uint64_t v127 = v52;
    unint64_t v128 = v76;
    uint64_t v129 = v91;
    uint64_t v71 = v13 + v58[228];
    unint64_t v130 = v100;
    sub_1BFF1E828(v71, v67);
    uint64_t v72 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData);
    sub_1BFC66384(v13 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger, (uint64_t)v120);
    *(void *)&long long v114 = v98;
    *((void *)&v114 + 1) = v97;
    uint64_t v115 = v96;
    uint64_t v116 = v95;
    uint64_t v117 = v94;
    uint64_t v118 = v93;
    char v119 = v99;
    uint64_t v13 = swift_allocObject();
    swift_retain();
    swift_retain();
    sub_1C0EC6EEC(v101, v70, (char *)&v121, v113, v66, v67, v85, v69, v111, v72, v68, (uint64_t)v120, &v114, v77, v110);
  }
  else
  {
    sub_1C0DB506C(v104, v105, v112, v106, v107, v108, v32);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF1EAA0(v92, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFE18B7C(v98, v97, v96, v95, v94, v93, v99);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t FormatNodeBinderContext.inventory.getter()
{
  return swift_retain();
}

uint64_t sub_1C0EC6EEC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long *a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = v15;
  uint64_t v61 = a7;
  uint64_t v62 = a8;
  uint64_t v64 = a11;
  uint64_t v65 = a15;
  uint64_t v59 = a6;
  uint64_t v60 = a10;
  uint64_t v57 = a5;
  uint64_t v58 = a9;
  uint64_t v63 = a14;
  uint64_t v21 = type metadata accessor for GroupLayoutContext();
  uint64_t v52 = *(void *)(v21 - 8);
  uint64_t v22 = *(void *)(v52 + 64);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v53 = (uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  char v24 = *a3;
  char v25 = a3[1];
  uint64_t v26 = *((void *)a3 + 9);
  long long v27 = *a13;
  long long v55 = a13[1];
  long long v56 = v27;
  uint64_t v28 = *((void *)a13 + 4);
  uint64_t v29 = *((void *)a13 + 5);
  char v30 = *((unsigned char *)a13 + 48);
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a1;
  id v32 = (char *)&v51 - v31;
  *(unsigned char *)(v16 + 48) = v24;
  *(unsigned char *)(v16 + 49) = v25;
  *(_OWORD *)(v16 + 56) = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(v16 + 72) = *(_OWORD *)(a3 + 24);
  *(_OWORD *)(v16 + 88) = *(_OWORD *)(a3 + 40);
  long long v33 = *(_OWORD *)(a3 + 56);
  uint64_t v34 = a12;
  uint64_t v35 = v57;
  *(_OWORD *)(v16 + 104) = v33;
  *(void *)(v16 + 120) = v26;
  uint64_t v54 = a4;
  *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options) = a4;
  *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors) = v35;
  uint64_t v36 = v59;
  sub_1BFF1E828(v59, v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext);
  uint64_t v37 = v62;
  *(void *)(v16 + 32) = v61;
  *(void *)(v16 + 40) = v37;
  *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks) = v58;
  *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData) = v60;
  sub_1BFC66384(a12, v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger);
  uint64_t v38 = v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary;
  long long v39 = v55;
  *(_OWORD *)uint64_t v38 = v56;
  *(_OWORD *)(v38 + 16) = v39;
  *(void *)(v38 + 32) = v28;
  *(void *)(v38 + 40) = v29;
  uint64_t v40 = v36;
  *(unsigned char *)(v38 + 48) = v30;
  uint64_t v41 = v64;
  uint64_t v42 = (void *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
  uint64_t v43 = v65;
  *uint64_t v42 = v63;
  v42[1] = v43;
  sub_1BFF1E828(v36, (uint64_t)v32);
  if (!v41)
  {
    sub_1BFF196F4(0, (unint64_t *)&qword_1EB87C700, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, MEMORY[0x1E4FAA880]);
    uint64_t v65 = a12;
    uint64_t v44 = v53;
    sub_1BFF1E828((uint64_t)v32, v53);
    unint64_t v45 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v46 = (v22 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = v32;
    uint64_t v48 = swift_allocObject();
    sub_1C0EC7C08(v44, v48 + v45, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(void *)(v48 + v46) = v54;
    *(void *)(v48 + ((v46 + 15) & 0xFFFFFFFFFFFFFFF8)) = v35;
    swift_retain();
    swift_bridgeObjectRetain();
    id v32 = v47;
    uint64_t v49 = sub_1C1517F1C();
    uint64_t v34 = v65;
    uint64_t v41 = v49;
  }
  __swift_destroy_boxed_opaque_existential_1(v34);
  sub_1BFF1F4C4(v40, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFF1F4C4((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions) = v41;
  return v16;
}

uint64_t sub_1C0EC7250()
{
  return type metadata accessor for FormatNodeBinderContext();
}

uint64_t method lookup function for FormatNodeBinderContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatNodeBinderContext);
}

uint64_t sub_1C0EC7278(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      swift_beginAccess();
      *(unsigned char *)a3 = 1;
      a2 = *(void **)((char *)a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks);
      unint64_t v28 = v5 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = 4;
      uint64_t v27 = v5;
      while (1)
      {
        uint64_t v9 = v7 - 4;
        if (v28)
        {
          a3 = MEMORY[0x1C18C7CB0](v7 - 4, v5);
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          a3 = *(void *)(v5 + 8 * v7);
          swift_retain();
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v11 = v6;
        uint64_t v5 = *(void *)(a3 + 16);
        uint64_t v12 = *(void *)(a3 + 24);
        swift_bridgeObjectRetain();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v15 = sub_1BFEF2D8C(v5, v12);
        uint64_t v16 = a2[2];
        BOOL v17 = (v14 & 1) == 0;
        uint64_t v18 = v16 + v17;
        if (__OFADD__(v16, v17)) {
          goto LABEL_24;
        }
        char v19 = v14;
        if (a2[3] >= v18)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v14) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1BFF94784();
            if (v19) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1BFF902A8(v18, isUniquelyReferenced_nonNull_native);
          unint64_t v20 = sub_1BFEF2D8C(v5, v12);
          if ((v19 & 1) != (v21 & 1))
          {
            uint64_t result = sub_1C1520CFC();
            __break(1u);
            return result;
          }
          unint64_t v15 = v20;
          if (v19)
          {
LABEL_4:
            uint64_t v8 = a2[7];
            swift_release();
            *(void *)(v8 + 8 * v15) = a3;
            goto LABEL_5;
          }
        }
        a2[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v22 = (uint64_t *)(a2[6] + 16 * v15);
        *uint64_t v22 = v5;
        v22[1] = v12;
        *(void *)(a2[7] + 8 * v15) = a3;
        uint64_t v23 = a2[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_25;
        }
        a2[2] = v25;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v7;
        uint64_t v6 = v11;
        uint64_t v5 = v27;
        if (v10 == v11)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)a2;
        }
      }
    }
  }
  a2 = *(void **)((char *)a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks);
  swift_bridgeObjectRetain();
  return (uint64_t)a2;
}

uint64_t sub_1C0EC7514(uint64_t a1, char a2, uint64_t a3, unsigned char *a4, unsigned char *a5)
{
  uint64_t v8 = a1;
  uint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors);
  if (*(void *)(a1 + 16) || (a2 & 1) != 0)
  {
    if ((sub_1BFF20AE8(*(void *)(a3 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors), a1) & 1) == 0)
    {
      swift_beginAccess();
      *a4 = 1;
      swift_beginAccess();
      *a5 = 1;
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = swift_bridgeObjectRetain();
        return sub_1BFEF3988(v10, v9);
      }
      goto LABEL_8;
    }
    if (a2)
    {
      swift_beginAccess();
      *a4 = 1;
      swift_beginAccess();
      *a5 = 1;
LABEL_8:
      swift_bridgeObjectRetain();
      return v8;
    }
  }
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t sub_1C0EC7630(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_1BFF1985C(a1, (uint64_t)&v12);
  if (v13)
  {
    sub_1BFC773DC(&v12, (uint64_t)v14);
    swift_beginAccess();
    *a3 = 1;
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8);
    v11[0] = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    v11[1] = v5;
    uint64_t v6 = v15;
    uint64_t v7 = v16;
    uint64_t v8 = __swift_project_boxed_opaque_existential_1(v14, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFB60BC((uint64_t)v8, v11, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    return v11[0];
  }
  else
  {
    sub_1C0EC7B98((uint64_t)&v12, qword_1EB873870, (uint64_t (*)(uint64_t))sub_1BFFFCF34);
    uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_1C0EC774C()
{
  uint64_t v2 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  int v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v6 == 255 || (v6 & 1) != 0)
  {
    uint64_t v17 = type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    uint64_t v8 = *v5;
    uint64_t v7 = v5[1];
    uint64_t v35 = v1;
    uint64_t v10 = v5[2];
    uint64_t v9 = v5[3];
    uint64_t v11 = v5[4];
    uint64_t v12 = v5[5];
    uint64_t v63 = *(void *)(v0 + 24);
    uint64_t v41 = *(void *)(v0 + 16);
    char v13 = *(unsigned char *)(v0 + 48);
    char v14 = *(unsigned char *)(v0 + 49);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v33 = *(void *)(v0 + 80);
    uint64_t v40 = *(void *)(v0 + 88);
    long long v39 = *(void **)(v0 + 96);
    uint64_t v38 = *(void *)(v0 + 104);
    uint64_t v37 = *(void *)(v0 + 112);
    uint64_t v36 = *(void *)(v0 + 120);
    v54[0] = v13;
    v54[1] = v14;
    uint64_t v55 = v15;
    long long v32 = *(_OWORD *)(v0 + 64);
    long long v56 = v32;
    uint64_t v57 = v33;
    uint64_t v58 = v40;
    uint64_t v59 = v39;
    uint64_t v60 = v38;
    uint64_t v61 = v37;
    uint64_t v62 = v36;
    uint64_t v45 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options);
    uint64_t v44 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors);
    uint64_t v34 = v4;
    sub_1BFF1E828(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext, (uint64_t)v4);
    uint64_t v43 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks);
    uint64_t v46 = *(void *)(v0 + 32);
    uint64_t v42 = *(void *)(v0 + 40);
    uint64_t v30 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData);
    uint64_t v31 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions);
    sub_1BFC66384(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger, (uint64_t)v53);
    *(void *)&long long v47 = v8;
    *((void *)&v47 + 1) = v7;
    uint64_t v48 = v10;
    uint64_t v49 = v9;
    uint64_t v50 = v11;
    uint64_t v51 = v12;
    char v52 = 1;
    uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8);
    uint64_t v28 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    uint64_t v29 = v16;
    uint64_t v17 = swift_allocObject();
    sub_1BFF19758(v8, v7, v10, v9, v11, v12, v6);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v18 = v41;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v40, v39);
    uint64_t v19 = v30;
    swift_retain();
    uint64_t v20 = v31;
    swift_retain();
    uint64_t v21 = v28;
    swift_bridgeObjectRetain();
    uint64_t v22 = v29;
    swift_bridgeObjectRetain();
    uint64_t v23 = v45;
    swift_retain();
    uint64_t v24 = v44;
    swift_bridgeObjectRetain();
    uint64_t v25 = v42;
    swift_bridgeObjectRetain();
    uint64_t v26 = swift_bridgeObjectRetain();
    sub_1C0EC6EEC(v63, v18, v54, v23, v24, (uint64_t)v34, v46, v25, v26, v19, v20, (uint64_t)v53, &v47, v21, v22);
  }
  return v17;
}

uint64_t sub_1C0EC7B98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFF196F4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0EC7C08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for DebugFormatDebuggerSourceMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DebugFormatDebuggerSourceMetric(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DebugFormatDebuggerSourceMetric(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for DebugFormatDebuggerSourceMetric(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerSourceMetric()
{
  return &type metadata for DebugFormatDebuggerSourceMetric;
}

uint64_t sub_1C0EC7E04()
{
  uint64_t v1 = v0;
  if (!*(void *)(*v0 + 16))
  {
    uint64_t v21 = 0;
    unint64_t v11 = v0[1];
    unint64_t v23 = v11;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C15204BC();
      sub_1BFCA59C8((uint64_t)&v23);
      if (!v19)
      {
LABEL_12:
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        unint64_t v15 = v1[3];
        unint64_t v22 = v15;
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_1C15204BC();
          sub_1BFCA59C8((uint64_t)&v22);
          if (!v20) {
            goto LABEL_16;
          }
        }
        else if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_16;
        }
        sub_1BFFDEB20();
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
        uint64_t v10 = v1[4];
        uint64_t v16 = MEMORY[0x1E4FBB460];
        *(void *)(v9 + 56) = MEMORY[0x1E4FBB3D0];
        *(void *)(v9 + 64) = v16;
        goto LABEL_15;
      }
    }
    else if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_12;
    }
    sub_1BFFDEB20();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    uint64_t v13 = v1[2];
    uint64_t v14 = MEMORY[0x1E4FBB460];
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v12 + 64) = v14;
    *(void *)(v12 + 32) = v13;
    sub_1C151E66C();
    goto LABEL_12;
  }
  uint64_t v21 = 91;
  unint64_t v23 = *(void *)(*v0 + 16);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  unint64_t v2 = v0[1];
  unint64_t v23 = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    sub_1BFCA59C8((uint64_t)&v23);
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = MEMORY[0x1E4FBB3D0];
  uint64_t v5 = MEMORY[0x1E4FBB460];
  if (v3)
  {
    sub_1BFFDEB20();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
    uint64_t v7 = v1[2];
    *(void *)(v6 + 56) = v4;
    *(void *)(v6 + 64) = v5;
    *(void *)(v6 + 32) = v7;
    sub_1C151E66C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  unint64_t v8 = v1[3];
  unint64_t v22 = v8;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15204BC();
    sub_1BFCA59C8((uint64_t)&v22);
    if (!v18) {
      goto LABEL_16;
    }
    goto LABEL_8;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    sub_1BFFDEB20();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
    uint64_t v10 = v1[4];
    *(void *)(v9 + 56) = v4;
    *(void *)(v9 + 64) = v5;
LABEL_15:
    *(void *)(v9 + 32) = v10;
    sub_1C151E66C();
  }
LABEL_16:
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v21;
}

id sub_1C0EC81CC(unint64_t a1, unint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!(a2 >> 62))
    {
LABEL_3:
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v3) {
        goto LABEL_4;
      }
LABEL_9:
      uint64_t v5 = self;
      uint64_t v6 = &selRef_systemGray2Color;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(a2 >> 62)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v5 = self;
  uint64_t v6 = &selRef_systemBlueColor;
  if (!v4) {
    uint64_t v6 = &selRef_systemOrangeColor;
  }
LABEL_10:
  id v7 = [v5 *v6];
  return v7;
}

uint64_t sub_1C0EC82D0@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v60 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_74;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    unint64_t v61 = a1;
    if (!v5) {
      goto LABEL_16;
    }
    uint64_t v62 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    uint64_t v6 = v62;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = 0;
      do
      {
        MEMORY[0x1C18C7CB0](v8, a2);
        uint64_t v9 = sub_1C0936714();
        uint64_t v11 = v10;
        swift_unknownObjectRelease();
        unint64_t v13 = *(void *)(v62 + 16);
        unint64_t v12 = *(void *)(v62 + 24);
        if (v13 >= v12 >> 1) {
          sub_1BFF661B8(v12 > 1, v13 + 1, 1);
        }
        ++v8;
        *(void *)(v62 + 16) = v13 + 1;
        unint64_t v14 = v62 + 16 * v13;
        *(void *)(v14 + 32) = v9;
        *(void *)(v14 + 40) = v11;
      }
      while (v5 != v8);
    }
    else
    {
      unint64_t v15 = a2 + 32;
      do
      {
        swift_retain();
        uint64_t v16 = sub_1C0936714();
        uint64_t v18 = v17;
        swift_release();
        unint64_t v20 = *(void *)(v62 + 16);
        unint64_t v19 = *(void *)(v62 + 24);
        if (v20 >= v19 >> 1) {
          sub_1BFF661B8(v19 > 1, v20 + 1, 1);
        }
        *(void *)(v62 + 16) = v20 + 1;
        unint64_t v21 = v62 + 16 * v20;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 40) = v18;
        v15 += 8;
        --v5;
      }
      while (v5);
    }
    a1 = v61;
LABEL_16:
    unint64_t v22 = a1 >> 62;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v24 = MEMORY[0x1E4FBC860];
    if (v23)
    {
      uint64_t v63 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1BFF661B8(0, v23 & ~(v23 >> 63), 0);
      if (v23 < 0) {
        goto LABEL_77;
      }
      unint64_t v58 = a1 >> 62;
      uint64_t v24 = v63;
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v25 = 0;
        do
        {
          MEMORY[0x1C18C7CB0](v25, v61);
          uint64_t v26 = sub_1C0936714();
          uint64_t v28 = v27;
          swift_unknownObjectRelease();
          unint64_t v30 = *(void *)(v63 + 16);
          unint64_t v29 = *(void *)(v63 + 24);
          if (v30 >= v29 >> 1) {
            sub_1BFF661B8(v29 > 1, v30 + 1, 1);
          }
          ++v25;
          *(void *)(v63 + 16) = v30 + 1;
          unint64_t v31 = v63 + 16 * v30;
          *(void *)(v31 + 32) = v26;
          *(void *)(v31 + 40) = v28;
        }
        while (v23 != v25);
      }
      else
      {
        unint64_t v32 = a1 + 32;
        do
        {
          swift_retain();
          uint64_t v33 = sub_1C0936714();
          uint64_t v35 = v34;
          swift_release();
          unint64_t v37 = *(void *)(v63 + 16);
          unint64_t v36 = *(void *)(v63 + 24);
          if (v37 >= v36 >> 1) {
            sub_1BFF661B8(v36 > 1, v37 + 1, 1);
          }
          *(void *)(v63 + 16) = v37 + 1;
          unint64_t v38 = v63 + 16 * v37;
          *(void *)(v38 + 32) = v33;
          *(void *)(v38 + 40) = v35;
          v32 += 8;
          --v23;
        }
        while (v23);
      }
      a1 = v61;
      unint64_t v22 = v58;
    }
    sub_1BFEF95B8(v24);
    uint64_t v39 = sub_1BFEF4060(v6);
    swift_bridgeObjectRelease();
    if (!v60)
    {
      uint64_t v40 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v40) {
        goto LABEL_43;
      }
      goto LABEL_33;
    }
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1C15204BC();
      if (!v40)
      {
LABEL_43:
        swift_bridgeObjectRelease();
        double v42 = 0.0;
        uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
        if (!v22) {
          goto LABEL_63;
        }
LABEL_44:
        swift_bridgeObjectRetain();
        uint64_t result = sub_1C15204BC();
        uint64_t v40 = result;
        if (!result) {
          goto LABEL_64;
        }
        goto LABEL_45;
      }
LABEL_33:
      if ((a2 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v41 = MEMORY[0x1C18C7CB0](0, a2);
      double v42 = 0.0;
      uint64_t v43 = 1;
      do
      {
        if (*(unsigned char *)(v41 + 96))
        {
          swift_unknownObjectRelease();
          double v42 = v42 + -1.0;
          if (v40 == v43) {
            goto LABEL_62;
          }
        }
        else
        {
          double v44 = *(double *)(v41 + 88);
          double v45 = *(double *)(v41 + 48);
          swift_unknownObjectRelease();
          double v42 = v42 + (v44 - v45) * 1000.0;
          if (v40 == v43) {
            goto LABEL_62;
          }
        }
        uint64_t v41 = MEMORY[0x1C18C7CB0](v43, a2);
        BOOL v46 = __OFADD__(v43++, 1);
      }
      while (!v46);
      __break(1u);
    }
    while (1)
    {
      uint64_t v53 = 0;
      double v42 = 0.0;
      while (1)
      {
        uint64_t v54 = *(void *)(a2 + 8 * v53 + 32);
        double v42 = (*(unsigned char *)(v54 + 96) & 1) != 0
            ? v42 + -1.0
            : v42 + (*(double *)(v54 + 88) - *(double *)(v54 + 48)) * 1000.0;
        if (v40 - 1 == v53) {
          break;
        }
        if (__OFADD__(++v53, 1))
        {
          __break(1u);
          break;
        }
      }
LABEL_62:
      swift_bridgeObjectRelease();
      uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
      if (v22) {
        goto LABEL_44;
      }
LABEL_63:
      uint64_t v40 = *(void *)(v47 + 16);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v40)
      {
LABEL_64:
        double v49 = 0.0;
LABEL_65:
        *(void *)a3 = v39;
        *(void *)(a3 + 8) = a1;
        *(double *)(a3 + 16) = v49;
        *(void *)(a3 + 24) = a2;
        *(double *)(a3 + 32) = v42;
        return result;
      }
LABEL_45:
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v48 = MEMORY[0x1C18C7CB0](0, a1);
      double v49 = 0.0;
      uint64_t v50 = 1;
      do
      {
        if (*(unsigned char *)(v48 + 96))
        {
          uint64_t result = swift_unknownObjectRelease();
          double v49 = v49 + -1.0;
          if (v40 == v50) {
            goto LABEL_65;
          }
        }
        else
        {
          double v51 = *(double *)(v48 + 88);
          double v52 = *(double *)(v48 + 48);
          uint64_t result = swift_unknownObjectRelease();
          double v49 = v49 + (v51 - v52) * 1000.0;
          if (v40 == v50) {
            goto LABEL_65;
          }
        }
        uint64_t v48 = MEMORY[0x1C18C7CB0](v50, a1);
        BOOL v46 = __OFADD__(v50++, 1);
      }
      while (!v46);
      __break(1u);
    }
    uint64_t v55 = 0;
    uint64_t v56 = v40 - 1;
    double v49 = 0.0;
    do
    {
      uint64_t v57 = *(void *)(a1 + 32 + 8 * v55);
      if (*(unsigned char *)(v57 + 96))
      {
        double v49 = v49 + -1.0;
        if (v56 == v55) {
          goto LABEL_65;
        }
      }
      else
      {
        double v49 = v49 + (*(double *)(v57 + 88) - *(double *)(v57 + 48)) * 1000.0;
        if (v56 == v55) {
          goto LABEL_65;
        }
      }
      ++v55;
    }
    while (!__OFADD__(v55, 1));
    __break(1u);
LABEL_74:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

id sub_1C0EC88BC(void *a1)
{
  long long v3 = v1[1];
  long long v11 = *v1;
  long long v12 = v3;
  long long v4 = v1[3];
  long long v13 = v1[2];
  long long v14 = v4;
  __int16 v15 = *((_WORD *)v1 + 32);
  uint64_t v16 = *((void *)&v11 + 1);
  __int16 v17 = v12;
  sub_1BFF63C74((uint64_t)&v16, (uint64_t)v18);
  sub_1BFF63C74((uint64_t)v18, (uint64_t)&v19);
  if (HIBYTE(v20) << 8 == 3072)
  {
    sub_1BFF63CD0();
    uint64_t v5 = *((void *)&v12 + 1);
    sub_1BFF63D3C((uint64_t)&v11);
    sub_1BFEF3190(v5);
    sub_1BFF63D10((uint64_t)&v11);
    uint64_t v6 = (void *)sub_1C151F84C();
  }
  else
  {
    uint64_t v21 = v19;
    __int16 v22 = v20;
    sub_1BFF66964((uint64_t)&v21, (uint64_t)v23, &qword_1EB8713C0);
    sub_1BFF66964((uint64_t)v23, (uint64_t)v24, &qword_1EB8713C0);
    id v7 = sub_1BFF68690();
    sub_1BFF63CD0();
    uint64_t v8 = *((void *)&v12 + 1);
    sub_1BFF63D3C((uint64_t)&v11);
    sub_1BFEF3190(v8);
    sub_1BFF63D10((uint64_t)&v11);
    uint64_t v6 = (void *)sub_1C151F86C();
  }
  id v9 = sub_1C0EC8C9C(v6, a1, (uint64_t)&v11);

  return v9;
}

double FormatSystemFont.size.getter()
{
  return *(double *)v0;
}

void FormatSystemFont.weight.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 18);
}

uint64_t FormatSystemFont.traits.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatSystemFont.scaling.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(_WORD *)(a1 + 8) = v2;
}

__n128 FormatSystemFont.init(size:scaling:weight:traits:attributes:)@<Q0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v6 = *a1;
  __int16 v7 = *((_WORD *)a1 + 4);
  char v8 = *a2;
  __int16 v9 = *(_WORD *)(a4 + 32);
  *(double *)a5 = a6;
  *(void *)(a5 + 8) = v6;
  *(_WORD *)(a5 + 16) = v7;
  *(unsigned char *)(a5 + 18) = v8;
  *(void *)(a5 + 24) = a3;
  __n128 result = *(__n128 *)a4;
  long long v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(a5 + 48) = v11;
  *(_WORD *)(a5 + 64) = v9;
  return result;
}

void FormatSystemFont.size.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*FormatSystemFont.size.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatSystemFont.scaling.setter(uint64_t result)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)(v1 + 8) = *(void *)result;
  *(_WORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*FormatSystemFont.scaling.modify())(void)
{
  return nullsub_1;
}

unsigned char *FormatSystemFont.weight.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 18) = *result;
  return result;
}

uint64_t (*FormatSystemFont.weight.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatSystemFont.traits.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*FormatSystemFont.traits.modify())(void)
{
  return nullsub_1;
}

__n128 FormatSystemFont.attributes.getter@<Q0>(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 64);
  __n128 result = *(__n128 *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = v2;
  return result;
}

__n128 FormatSystemFont.attributes.setter(uint64_t a1)
{
  __int16 v2 = *(_WORD *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v4;
  *(_WORD *)(v1 + 64) = v2;
  return result;
}

uint64_t (*FormatSystemFont.attributes.modify())(void)
{
  return nullsub_1;
}

id sub_1C0EC8C9C(void *a1, void *a2, uint64_t a3)
{
  sub_1BFF66964(a3 + 32, (uint64_t)v12, &qword_1EB87F138);
  sub_1BFF66964((uint64_t)v12, (uint64_t)v11, &qword_1EB87F138);
  if (*(void *)(sub_1C11CC724(a2, v11) + 16))
  {
    id v5 = objc_msgSend(a1, sel_fontDescriptor);
    type metadata accessor for AttributeName(0);
    sub_1BFFB46E8();
    uint64_t v6 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v5, sel_fontDescriptorByAddingAttributes_, v6);

    objc_msgSend(a1, sel_pointSize);
    id v9 = objc_msgSend(self, sel_fontWithDescriptor_size_, v7, v8);
  }
  else
  {
    id v9 = a1;
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t _s8NewsFeed16FormatSystemFontV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  __int16 v2 = *(_WORD *)(a1 + 16);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 18);
  uint64_t v4 = *(void *)(a1 + 24);
  long long v5 = *(_OWORD *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 48);
  __int16 v7 = *(_WORD *)(a1 + 64);
  __int16 v8 = *(_WORD *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 18);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  double v13 = *(double *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 56);
  __int16 v15 = *(_WORD *)(a2 + 64);
  if ((v2 & 0xFF00) != 0xC00)
  {
    if ((v8 & 0xFF00) != 0xC00)
    {
      if ((v2 & 1) == 0)
      {
        uint64_t v16 = 0;
        if ((v8 & 1) != 0 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
          return v16;
        }
        goto LABEL_11;
      }
      if (v8)
      {
LABEL_11:
        long long v28 = *(_OWORD *)(a1 + 48);
        long long v30 = *(_OWORD *)(a1 + 32);
        uint64_t v26 = *(void *)(a2 + 32);
        uint64_t v27 = *(void *)(a2 + 56);
        LOBYTE(v36[0]) = HIBYTE(*(_WORD *)(a1 + 16));
        LOBYTE(v32[0]) = HIBYTE(v8);
        uint64_t v17 = FormatFontScalingStyle.rawValue.getter();
        uint64_t v19 = v18;
        if (v17 == FormatFontScalingStyle.rawValue.getter() && v19 == v20)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v14 = v27;
          LOBYTE(v10) = v26;
          long long v6 = v28;
          long long v5 = v30;
        }
        else
        {
          char v21 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v16 = 0;
          uint64_t v14 = v27;
          LOBYTE(v10) = v26;
          long long v6 = v28;
          long long v5 = v30;
          if ((v21 & 1) == 0) {
            return v16;
          }
        }
        goto LABEL_15;
      }
    }
    return 0;
  }
  if ((v8 & 0xFF00) != 0xC00) {
    return 0;
  }
LABEL_15:
  long long v29 = v6;
  long long v31 = v5;
  char v22 = v10;
  if ((sub_1C148E414(v3, v9) & 1) == 0) {
    return 0;
  }
  char v23 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v24 = sub_1C00AF944(v4, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0) {
    return 0;
  }
  if ((v7 & 0xFF00) == 0x500)
  {
    if ((v15 & 0xFF00) != 0x500) {
      return 0;
    }
  }
  else
  {
    v36[0] = v31;
    v36[1] = v29;
    __int16 v37 = v7;
    if ((v15 & 0xFF00) == 0x500) {
      return 0;
    }
    LOBYTE(v32[0]) = v22;
    v32[1] = v13;
    char v33 = v23 & 1;
    uint64_t v34 = v14;
    __int16 v35 = v15 & 0xFF01;
    if ((_s8NewsFeed20FormatFontAttributesV2eeoiySbAC_ACtFZ_0((double *)v36, v32) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_1C0EC903C(uint64_t a1)
{
  unint64_t result = sub_1C0EC9064();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EC9064()
{
  unint64_t result = qword_1EA1A8418;
  if (!qword_1EA1A8418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8418);
  }
  return result;
}

unint64_t sub_1C0EC90B8(void *a1)
{
  a1[1] = sub_1BFDE2570();
  a1[2] = sub_1BFDC48F8();
  unint64_t result = sub_1C0EC90F0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EC90F0()
{
  unint64_t result = qword_1EA1A8420;
  if (!qword_1EA1A8420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8420);
  }
  return result;
}

double sub_1C0EC9144@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

double sub_1C0EC9150(double *a1, void *a2)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1C0EC915C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2 = *(_WORD *)(result + 16);
  *(void *)a2 = *(void *)(result + 8);
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1C0EC9170(uint64_t result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)(a2 + 8) = *(void *)result;
  *(_WORD *)(a2 + 16) = v2;
  return result;
}

uint64_t sub_1C0EC9184@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 18);
  return result;
}

unsigned char *sub_1C0EC9190(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 18) = *result;
  return result;
}

uint64_t sub_1C0EC919C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EC91A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t initializeWithCopy for FormatSystemFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatSystemFont(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

__n128 __swift_memcpy66_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FormatSystemFont(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSystemFont()
{
  return &type metadata for FormatSystemFont;
}

uint64_t static FeedPersonalizationServiceError.== infix(_:_:)()
{
  return 1;
}

uint64_t FeedPersonalizationServiceError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedPersonalizationServiceError.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0EC93D0()
{
  unint64_t result = qword_1EA1A8428;
  if (!qword_1EA1A8428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8428);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedPersonalizationServiceError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0EC94C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPersonalizationServiceError()
{
  return &type metadata for FeedPersonalizationServiceError;
}

unint64_t PuzzleEmbedMessageHandlerKind.eventName.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
    case 5:
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static PuzzleEmbedMessageHandlerKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleEmbedMessageHandlerKind.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PuzzleEmbedMessageHandlerKind.hashValue.getter()
{
  return sub_1C1520E0C();
}

void SWMessageHandlerManager.add(handler:for:)(uint64_t a1)
{
  id v3 = (id)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_addMessageHandler_name_, a1, v3);
}

unint64_t sub_1C0EC9820()
{
  unint64_t result = qword_1EA1A8430;
  if (!qword_1EA1A8430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8430);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PuzzleEmbedMessageHandlerKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0EC9940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleEmbedMessageHandlerKind()
{
  return &type metadata for PuzzleEmbedMessageHandlerKind;
}

__n128 FormatProgressViewLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = *a8;
  uint64_t v29 = *(void *)(a13 + 32);
  char v30 = *(unsigned char *)(a13 + 40);
  uint64_t v31 = *a15;
  uint64_t v32 = *a17;
  char v33 = *((unsigned char *)a17 + 8);
  *(void *)(v27 + 16) = a1;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(void *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = a5;
  *(void *)(v27 + 56) = a6;
  *(double *)(v27 + 64) = a9;
  *(double *)(v27 + 72) = a10;
  *(double *)(v27 + 80) = a11;
  *(double *)(v27 + 88) = a12;
  *(void *)(v27 + 96) = a7;
  *(void *)(v27 + 104) = v28;
  __n128 result = *(__n128 *)a13;
  long long v35 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(v27 + 112) = *(_OWORD *)a13;
  *(_OWORD *)(v27 + 128) = v35;
  *(void *)(v27 + 144) = v29;
  *(unsigned char *)(v27 + 152) = v30;
  *(void *)(v27 + 160) = a14;
  *(void *)(v27 + 168) = v31;
  *(void *)(v27 + 176) = a16;
  *(void *)(v27 + 184) = v32;
  *(unsigned char *)(v27 + 192) = v33;
  *(void *)(v27 + 200) = MEMORY[0x1E4FBC870];
  return result;
}

uint64_t FormatProgressViewLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatProgressViewLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatProgressViewLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatProgressViewLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 104);
  return swift_retain();
}

__n128 FormatProgressViewLayoutAttributes.kind.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 144);
  char v3 = *(unsigned char *)(v1 + 152);
  __n128 result = *(__n128 *)(v1 + 112);
  long long v5 = *(_OWORD *)(v1 + 128);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

uint64_t FormatProgressViewLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 160);
}

unint64_t FormatProgressViewLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 168);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatProgressViewLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatProgressViewLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 192);
  *(void *)a1 = *(void *)(v1 + 184);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatProgressViewLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v18 = *a8;
  uint64_t v19 = *(void *)(a13 + 32);
  char v20 = *(unsigned char *)(a13 + 40);
  uint64_t v21 = *a15;
  uint64_t v22 = *a17;
  char v23 = *((unsigned char *)a17 + 8);
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(void *)(v17 + 96) = a7;
  *(void *)(v17 + 104) = v18;
  long long v24 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(v17 + 112) = *(_OWORD *)a13;
  *(_OWORD *)(v17 + 128) = v24;
  *(void *)(v17 + 144) = v19;
  *(unsigned char *)(v17 + 152) = v20;
  *(void *)(v17 + 160) = a14;
  *(void *)(v17 + 168) = v21;
  *(void *)(v17 + 176) = a16;
  *(void *)(v17 + 184) = v22;
  *(unsigned char *)(v17 + 192) = v23;
  *(void *)(v17 + 200) = MEMORY[0x1E4FBC870];
  return v17;
}

unint64_t sub_1C0EC9BF8(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x656C797473;
      break;
    case 5:
      unint64_t result = 0x676E697A69736572;
      break;
    case 6:
      unint64_t result = 1684957547;
      break;
    case 7:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 8:
      unint64_t result = 0x696C696269736976;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0EC9D74()
{
  return sub_1C0EC9BF8(*v0);
}

uint64_t sub_1C0EC9D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0ECB264(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0EC9DA4(uint64_t a1)
{
  unint64_t v2 = sub_1C0ECA3CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0EC9DE0(uint64_t a1)
{
  unint64_t v2 = sub_1C0ECA3CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatProgressViewLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 168));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatProgressViewLayoutAttributes.__deallocating_deinit()
{
  FormatProgressViewLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatProgressViewLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0ECAC14(0, &qword_1EA1A8438, (uint64_t (*)(void))sub_1C0ECA3CC, (uint64_t)&type metadata for FormatProgressViewLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0ECA3CC();
  sub_1C1520F0C();
  LOBYTE(v16) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1C15207CC();
    LOBYTE(v16) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    long long v16 = *(_OWORD *)(v3 + 64);
    long long v17 = v10;
    char v20 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C538(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&long long v16 = *(void *)(v3 + 96);
    char v20 = 4;
    type metadata accessor for FormatProgressViewNodeStyle();
    sub_1BFE4C538(&qword_1EB868268, 255, (void (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle);
    sub_1C152078C();
    *(void *)&long long v16 = *(void *)(v3 + 104);
    char v20 = 5;
    sub_1C026063C();
    sub_1C152078C();
    uint64_t v11 = *(void *)(v3 + 144);
    char v12 = *(unsigned char *)(v3 + 152);
    long long v13 = *(_OWORD *)(v3 + 128);
    long long v16 = *(_OWORD *)(v3 + 112);
    long long v17 = v13;
    uint64_t v18 = v11;
    char v19 = v12;
    char v20 = 6;
    sub_1C0ECA420();
    sub_1C152080C();
    LOBYTE(v16) = 7;
    sub_1C15207FC();
    *(void *)&long long v16 = *(void *)(v3 + 168);
    char v20 = 8;
    sub_1C009DA10();
    sub_1C152080C();
    *(void *)&long long v16 = *(void *)(v3 + 176);
    char v20 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C538(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    char v14 = *(unsigned char *)(v3 + 192);
    *(void *)&long long v16 = *(void *)(v3 + 184);
    BYTE8(v16) = v14;
    char v20 = 10;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&long long v16 = *(void *)(v3 + 200);
    char v20 = 11;
    sub_1C0ECAC14(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C0ECACD0(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0ECA3CC()
{
  unint64_t result = qword_1EA1A8440;
  if (!qword_1EA1A8440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8440);
  }
  return result;
}

unint64_t sub_1C0ECA420()
{
  unint64_t result = qword_1EA1A8448;
  if (!qword_1EA1A8448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8448);
  }
  return result;
}

uint64_t FormatProgressViewLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatProgressViewLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatProgressViewLayoutAttributes.init(from:)(void *a1)
{
  sub_1C0ECAC14(0, &qword_1EA1A8450, (uint64_t (*)(void))sub_1C0ECA3CC, (uint64_t)&type metadata for FormatProgressViewLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0ECA3CC();
  char v20 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v18;
    LOBYTE(v21) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v21) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v21) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v25 = 3;
    sub_1BFE4C538(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v22;
    *(_OWORD *)(v1 + 64) = v21;
    *(_OWORD *)(v1 + 80) = v12;
    type metadata accessor for FormatProgressViewNodeStyle();
    char v25 = 4;
    sub_1BFE4C538(qword_1EB868270, 255, (void (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 96) = v21;
    char v25 = 5;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 104) = v21;
    char v25 = 6;
    sub_1C0ECAC7C();
    sub_1C15206EC();
    uint64_t v13 = v23;
    char v14 = v24;
    long long v15 = v22;
    *(_OWORD *)(v1 + 112) = v21;
    *(_OWORD *)(v1 + 128) = v15;
    *(void *)(v1 + 144) = v13;
    *(unsigned char *)(v1 + 152) = v14;
    LOBYTE(v21) = 7;
    *(void *)(v1 + 160) = sub_1C15206DC();
    char v25 = 8;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 168) = v21;
    type metadata accessor for FormatContextLayoutOptions();
    char v25 = 9;
    sub_1BFE4C538(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 176) = v21;
    char v25 = 10;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v16 = BYTE8(v21);
    *(void *)(v1 + 184) = v21;
    *(unsigned char *)(v1 + 192) = v16;
    sub_1C0ECAC14(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v25 = 11;
    sub_1C0ECACD0(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v19);
    *(void *)(v1 + 200) = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0ECAC14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0ECAC7C()
{
  unint64_t result = qword_1EA1A8458;
  if (!qword_1EA1A8458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8458);
  }
  return result;
}

uint64_t sub_1C0ECACD0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0ECAC14(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0ECAD74(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C538(&qword_1EA1A8460, a2, (void (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes);
}

uint64_t type metadata accessor for FormatProgressViewLayoutAttributes()
{
  return self;
}

uint64_t sub_1C0ECADE0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0ECADEC(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C538(&qword_1EA1A8468, a2, (void (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes);
}

uint64_t sub_1C0ECAE34(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C538(&qword_1EA1A8470, a2, (void (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes);
}

uint64_t sub_1C0ECAE7C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C538(&qword_1EA1A8478, a2, (void (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes);
}

uint64_t sub_1C0ECAEC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatProgressViewLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0ECAF1C(void *a1)
{
  return FormatProgressViewLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C0ECAF40(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C538(&qword_1EA1A8498, a2, (void (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatProgressViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatProgressViewLayoutAttributes);
}

uint64_t dispatch thunk of FormatProgressViewLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatProgressViewLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for FormatProgressViewLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ECB124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressViewLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatProgressViewLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0ECB160()
{
  unint64_t result = qword_1EA1A8480;
  if (!qword_1EA1A8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8480);
  }
  return result;
}

unint64_t sub_1C0ECB1B8()
{
  unint64_t result = qword_1EA1A8488;
  if (!qword_1EA1A8488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8488);
  }
  return result;
}

unint64_t sub_1C0ECB210()
{
  unint64_t result = qword_1EA1A8490;
  if (!qword_1EA1A8490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8490);
  }
  return result;
}

uint64_t sub_1C0ECB264(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1C0ECB720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unsigned char *a7)
{
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 64) = *a5;
  *(unsigned char *)(v8 + 122) = *a7;
  *(unsigned char *)(v8 + 123) = *v7;
  return MEMORY[0x1F4188298](sub_1C0ECB780, 0, 0);
}

uint64_t sub_1C0ECB780()
{
  switch(*(unsigned char *)(v0 + 123))
  {
    case 1:
      uint64_t v10 = *(void *)(v0 + 56);
      uint64_t v12 = *(void *)(v0 + 40);
      uint64_t v11 = *(void *)(v0 + 48);
      uint64_t v14 = *(void *)(v0 + 24);
      uint64_t v13 = *(void *)(v0 + 32);
      long long v15 = *(uint64_t **)(v0 + 16);
      type metadata accessor for PublishDateFeedRefreshStrategy();
      sub_1BFE181E0(v14, v13, v12);
      swift_retain();
      swift_retain();
      sub_1C00C5240(v11, v10, v15);
      goto LABEL_7;
    case 2:
      uint64_t v16 = *(void *)(v0 + 56);
      uint64_t v17 = *(void *)(v0 + 40);
      uint64_t v19 = *(void *)(v0 + 24);
      uint64_t v18 = *(void *)(v0 + 32);
      char v20 = *(uint64_t **)(v0 + 16);
      type metadata accessor for ForceFeedRefreshStrategy();
      sub_1BFE181E0(v19, v18, v17);
      swift_retain();
      swift_retain();
      sub_1C00CAA68(v16, v20);
LABEL_7:
      swift_release();
      uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
      uint64_t result = v29();
      break;
    case 3:
      char v21 = *(unsigned char *)(v0 + 122);
      uint64_t v23 = *(void *)(v0 + 32);
      uint64_t v22 = *(void *)(v0 + 40);
      uint64_t v24 = *(void *)(v0 + 24);
      type metadata accessor for ChronologicalFeedRefreshStrategy();
      *(void *)(v0 + 96) = sub_1BFE181E0(v24, v23, v22);
      *(unsigned char *)(v0 + 120) = v21;
      swift_retain();
      swift_retain();
      char v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v25;
      *char v25 = v0;
      v25[1] = sub_1C0ECBC2C;
      uint64_t v26 = *(void *)(v0 + 48);
      uint64_t v27 = *(void *)(v0 + 56);
      uint64_t v28 = *(void *)(v0 + 16);
      uint64_t result = sub_1C019CCC4(v28, v26, v27, (unsigned char *)(v0 + 120));
      break;
    default:
      char v1 = *(unsigned char *)(v0 + 122);
      uint64_t v3 = *(void *)(v0 + 32);
      uint64_t v2 = *(void *)(v0 + 40);
      uint64_t v4 = *(void *)(v0 + 24);
      type metadata accessor for RepoolFeedRefreshStrategy();
      *(void *)(v0 + 72) = sub_1BFE181E0(v4, v3, v2);
      *(unsigned char *)(v0 + 121) = v1;
      swift_retain();
      swift_retain();
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 80) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1C0ECBAB4;
      uint64_t v6 = *(void *)(v0 + 48);
      uint64_t v7 = *(void *)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 16);
      uint64_t result = sub_1C0D159F0(v8, v6, v7);
      break;
  }
  return result;
}

uint64_t sub_1C0ECBAB4()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0ECBDA4;
  }
  else {
    uint64_t v2 = sub_1C0ECBBC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0ECBBC8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0ECBC2C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0ECBE08;
  }
  else {
    uint64_t v2 = sub_1C0ECBD40;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0ECBD40()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0ECBDA4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0ECBE08()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

NewsFeed::FeedRefreshStrategy_optional __swiftcall FeedRefreshStrategy.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FeedRefreshStrategy.rawValue.getter()
{
  uint64_t result = 0x6C6F6F706572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x446873696C627570;
      break;
    case 2:
      uint64_t result = 0x6563726F66;
      break;
    case 3:
      uint64_t result = 0x6F6C6F6E6F726863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0ECBF64(unsigned __int8 *a1, char *a2)
{
  return sub_1C1492888(*a1, *a2);
}

uint64_t sub_1C0ECBF70()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0ECC058()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0ECC128()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedRefreshStrategy_optional sub_1C0ECC20C(Swift::String *a1)
{
  return FeedRefreshStrategy.init(rawValue:)(*a1);
}

void sub_1C0ECC218(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x6C6F6F706572;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000657461;
      uint64_t v3 = 0x446873696C627570;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6563726F66;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      strcpy((char *)a1, "chronological");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0ECC2C0(uint64_t a1)
{
  unint64_t v2 = sub_1C0ECD014();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0ECC314(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0ECD014();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C0ECC370(uint64_t a1)
{
  unint64_t v2 = sub_1C0ECD014();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

NewsFeed::FeedRefreshStrategy __swiftcall FeedRefreshStrategyOption.feedRefreshStrategy(fromConfig:)(NewsFeed::FeedRefreshStrategy fromConfig)
{
  unsigned int v3 = *v2;
  if (v3 >= 4) {
    LOBYTE(v3) = *(unsigned char *)fromConfig;
  }
  *uint64_t v1 = v3;
  return fromConfig;
}

NewsFeed::FeedRefreshStrategyOption_optional __swiftcall FeedRefreshStrategyOption.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FeedRefreshStrategyOption.rawValue.getter()
{
  uint64_t result = 0x6C6F6F706572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x446873696C627570;
      break;
    case 2:
      uint64_t result = 0x6563726F66;
      break;
    case 3:
      uint64_t result = 0x6F6C6F6E6F726863;
      break;
    case 4:
      uint64_t result = 0x6769666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0ECC4E8(unsigned __int8 *a1, char *a2)
{
  return sub_1C14936F4(*a1, *a2);
}

uint64_t sub_1C0ECC4F4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0ECC5F0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0ECC6D4()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedRefreshStrategyOption_optional sub_1C0ECC7CC(Swift::String *a1)
{
  return FeedRefreshStrategyOption.init(rawValue:)(*a1);
}

void sub_1C0ECC7D8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x6C6F6F706572;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000657461;
      uint64_t v3 = 0x446873696C627570;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6563726F66;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      strcpy((char *)a1, "chronological");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      *(void *)a1 = 0x6769666E6F63;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0ECC898(uint64_t a1)
{
  unint64_t v2 = sub_1C0ECCFC0();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0ECC8EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0ECCFC0();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C0ECC948(uint64_t a1)
{
  unint64_t v2 = sub_1C0ECCFC0();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

NewsFeed::FeedAutoRefreshStrategy_optional __swiftcall FeedAutoRefreshStrategy.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FeedAutoRefreshStrategy.rawValue.getter()
{
  uint64_t v1 = 0x64656C6261736964;
  if (*v0 != 1) {
    uint64_t v1 = 0x6563726F66;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64656C62616E65;
  }
}

unint64_t sub_1C0ECCA54()
{
  unint64_t result = qword_1EA1A84A0;
  if (!qword_1EA1A84A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A84A0);
  }
  return result;
}

unint64_t sub_1C0ECCAAC()
{
  unint64_t result = qword_1EB85CC50;
  if (!qword_1EB85CC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CC50);
  }
  return result;
}

uint64_t sub_1C0ECCB00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1493F3C(*a1, *a2);
}

uint64_t sub_1C0ECCB0C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0ECCBAC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0ECCC38()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedAutoRefreshStrategy_optional sub_1C0ECCCD4(Swift::String *a1)
{
  return FeedAutoRefreshStrategy.init(rawValue:)(*a1);
}

uint64_t sub_1C0ECCCE0(uint64_t a1)
{
  unint64_t v2 = sub_1C0087FD0();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0ECCD34(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0087FD0();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

unsigned char *storeEnumTagSinglePayload for FeedRefreshStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ECCE5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshStrategy()
{
  return &type metadata for FeedRefreshStrategy;
}

unsigned char *storeEnumTagSinglePayload for FeedRefreshStrategyOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ECCF60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshStrategyOption()
{
  return &type metadata for FeedRefreshStrategyOption;
}

unint64_t sub_1C0ECCFC0()
{
  unint64_t result = qword_1EB85CC58[0];
  if (!qword_1EB85CC58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB85CC58);
  }
  return result;
}

unint64_t sub_1C0ECD014()
{
  unint64_t result = qword_1EA1A84A8;
  if (!qword_1EA1A84A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1A84A8);
  }
  return result;
}

uint64_t FormatPurchaseLandingPageData.articleIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPurchaseLandingPageData.postPurchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatPurchaseLandingPageData() + 20);
  return sub_1C0E9D1B0(v3, a1);
}

void *assignWithCopy for FormatPurchaseLandingPageData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FormatPostPurchaseData();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v18 = sub_1C1515FDC();
      uint64_t v19 = *(void *)(v18 - 8);
      char v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
      int v21 = v20(v7, 2, v18);
      int v22 = v20(v8, 2, v18);
      if (v21)
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v8, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v7, 0, 2, v18);
          return a1;
        }
      }
      else
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v7, v8, v18);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
      }
      size_t v17 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1C0ECD404((uint64_t)v7);
LABEL_7:
    sub_1C0073BBC(0);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v17);
    return a1;
  }
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = sub_1C1515FDC();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C0ECD404(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatPostPurchaseData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for FormatPurchaseLandingPageData(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatPostPurchaseData();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v19 = sub_1C1515FDC();
      uint64_t v20 = *(void *)(v19 - 8);
      int v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
      int v22 = v21(v8, 2, v19);
      int v23 = v21(v9, 2, v19);
      if (v22)
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v8, v9, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 2, v19);
          return a1;
        }
      }
      else
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v8, v9, v19);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
      }
      size_t v18 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1C0ECD404((uint64_t)v8);
LABEL_7:
    sub_1C0073BBC(0);
    size_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v18);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 2, v15))
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPurchaseLandingPageData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0ECD78C);
}

uint64_t sub_1C0ECD78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C0073BBC(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatPurchaseLandingPageData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0ECD850);
}

uint64_t sub_1C0ECD850(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C0073BBC(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0ECD8F8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  v10[1] = 0;
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  sub_1C0ED0E50();
  sub_1C0ED0EA8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152C7F0;
  v10[0] = 0;
  sub_1C15171AC();
  v10[0] = 1;
  sub_1C15171AC();
  v10[0] = 2;
  sub_1C15171AC();
  uint64_t result = sub_1C15171CC();
  qword_1EA1A84B8 = result;
  return result;
}

uint64_t static Settings.Sports.hidesIgnoredTags.getter()
{
  return sub_1BFC387A8(&qword_1EA1948B8);
}

uint64_t sub_1C0ECDC34()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84C0 = result;
  return result;
}

uint64_t static Settings.Sports.BoxScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA1948C0);
}

uint64_t sub_1C0ECDE5C(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.BoxScoreEmbed.ConfigOverrides, 0xD000000000000039, 0x80000001C162E440, &qword_1EB863858);
}

uint64_t static Settings.Sports.BoxScoreEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB863868);
}

uint64_t sub_1C0ECDEB8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84C8 = result;
  return result;
}

uint64_t static Settings.Sports.InjuryReportEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA1948D0);
}

uint64_t sub_1C0ECE0E0(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.InjuryReportEmbed.ConfigOverrides, 0xD00000000000003DLL, 0x80000001C162E3C0, &qword_1EB863A28);
}

uint64_t sub_1C0ECE118(uint64_t a1, void (*a2)(void, __n128), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1C151719C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1C151718C();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0, v13);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4FAB400], v11);
  *uint64_t v10 = sub_1C151E62C();
  v10[1] = v16;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB408], v7);
  uint64_t result = sub_1C1516FFC();
  *a5 = result;
  return result;
}

uint64_t static Settings.Sports.InjuryReportEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB863A38);
}

uint64_t sub_1C0ECE308()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84D0 = result;
  return result;
}

uint64_t static Settings.Sports.KeyPlayersEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA1948E0);
}

uint64_t sub_1C0ECE530(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.KeyPlayersEmbed.ConfigOverrides, 0xD00000000000003BLL, 0x80000001C162E340, &qword_1EB8639D8);
}

uint64_t static Settings.Sports.KeyPlayersEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB8639E8);
}

uint64_t sub_1C0ECE58C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84D8 = result;
  return result;
}

uint64_t static Settings.Sports.LineScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA1948F0);
}

uint64_t sub_1C0ECE7B4(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.LineScoreEmbed.ConfigOverrides, 0xD00000000000003ALL, 0x80000001C162E2C0, &qword_1EB863938);
}

uint64_t static Settings.Sports.LineScoreEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB863948);
}

uint64_t sub_1C0ECE810()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84E0 = result;
  return result;
}

uint64_t static Settings.Sports.ScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194900);
}

uint64_t Settings.Sports.ScoreEmbed.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8NewsFeedE0cD6ModuleV13BundleSessionV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0ECEA6C(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.ScoreEmbed.ConfigOverrides, 0xD000000000000035, 0x80000001C162E240, &qword_1EB863810);
}

uint64_t static Settings.Sports.ScoreEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB863818);
}

uint64_t sub_1C0ECEAC8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84E8 = result;
  return result;
}

uint64_t static Settings.Sports.MastheadScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194910);
}

uint64_t sub_1C0ECECF0(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.MastheadScoreEmbed.ConfigOverrides, 0xD00000000000003ELL, 0x80000001C162E1C0, &qword_1EB863A78);
}

uint64_t static Settings.Sports.MastheadScoreEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB863A88);
}

uint64_t sub_1C0ECED4C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84F0 = result;
  return result;
}

uint64_t static Settings.Sports.StandingEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194920);
}

uint64_t sub_1C0ECEF74(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.StandingEmbed.ConfigOverrides, 0xD000000000000038, 0x80000001C162E140, &qword_1EB8638F0);
}

uint64_t static Settings.Sports.StandingEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB8638F8);
}

uint64_t sub_1C0ECEFD0()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000043;
  v10[1] = 0x80000001C162E0F0;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A84F8 = result;
  return result;
}

uint64_t static Settings.Sports.StandingConfig.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194930);
}

uint64_t sub_1C0ECF200(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.StandingConfig.ConfigOverrides, 0xD000000000000039, 0x80000001C162E070, &qword_1EB863988);
}

uint64_t static Settings.Sports.StandingConfig.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB863998);
}

uint64_t sub_1C0ECF25C()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151718C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB400], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  v9[15] = 0;
  sub_1BFCC22F8(0, (unint64_t *)&qword_1EB8979E8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EB863A90 = result;
  return result;
}

uint64_t static Settings.Sports.useAllFetchForStandingsAndBrackets.getter()
{
  return sub_1BFC387A8(&qword_1EB863AA0);
}

uint64_t sub_1C0ECF444()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C162E010;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A8500 = result;
  return result;
}

uint64_t static Settings.Sports.BracketEmbed.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194938);
}

uint64_t sub_1C0ECF66C(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.BracketEmbed.ConfigOverrides, 0xD000000000000037, 0x80000001C162DF90, &qword_1EB86BD00);
}

uint64_t static Settings.Sports.BracketEmbed.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB86BD10);
}

uint64_t sub_1C0ECF6C8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000044;
  v10[1] = 0x80000001C162DF40;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A8508 = result;
  return result;
}

uint64_t static Settings.Sports.BoxScoreConfig.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194948);
}

uint64_t sub_1C0ECF8F8(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.BoxScoreConfig.ConfigOverrides, 0xD00000000000003ALL, 0x80000001C162DEC0, &qword_1EA1A8510);
}

uint64_t static Settings.Sports.BoxScoreConfig.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EA194950);
}

uint64_t sub_1C0ECF954()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000042;
  v10[1] = 0x80000001C162DE70;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A8518 = result;
  return result;
}

uint64_t static Settings.Sports.BracketConfig.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194958);
}

uint64_t sub_1C0ECFB84(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.BracketConfig.ConfigOverrides, 0xD000000000000038, 0x80000001C162DDF0, &qword_1EB8638A8);
}

uint64_t static Settings.Sports.BracketConfig.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB8638B0);
}

uint64_t sub_1C0ECFBE0()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000045;
  v10[1] = 0x80000001C162DDA0;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A8520 = result;
  return result;
}

uint64_t static Settings.Sports.KeyPlayersConfig.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194968);
}

uint64_t sub_1C0ECFE10(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.KeyPlayersConfig.ConfigOverrides, 0xD00000000000003CLL, 0x80000001C162DD20, &qword_1EA1A8528);
}

uint64_t static Settings.Sports.KeyPlayersConfig.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EA194970);
}

uint64_t sub_1C0ECFE6C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000045;
  v10[1] = 0x80000001C162DCD0;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A8530 = result;
  return result;
}

uint64_t static Settings.Sports.LineScoreConfig.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194978);
}

uint64_t sub_1C0ED009C(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.LineScoreConfig.ConfigOverrides, 0xD00000000000003BLL, 0x80000001C162DC50, &qword_1EA1A8538);
}

uint64_t static Settings.Sports.LineScoreConfig.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EA194980);
}

uint64_t sub_1C0ED00F8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000048;
  v10[1] = 0x80000001C162DC00;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A8540 = result;
  return result;
}

uint64_t static Settings.Sports.InjuryReportConfig.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194988);
}

uint64_t sub_1C0ED0328(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.InjuryReportConfig.ConfigOverrides, 0xD00000000000003ELL, 0x80000001C162DB80, &qword_1EA1A8548);
}

uint64_t static Settings.Sports.InjuryReportConfig.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EA194990);
}

uint64_t sub_1C0ED0384()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000040;
  v10[1] = 0x80000001C162DB30;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1A8550 = result;
  return result;
}

uint64_t static Settings.Sports.ScoreConfig.ConfigOverrides.url.getter()
{
  return sub_1BFC387A8(&qword_1EA194998);
}

uint64_t _s11TeaSettings0B0C8NewsFeedE6SportsV13BoxScoreEmbedV15ConfigOverridesC3key12defaultValue6accessAJSSSg_SbAA6AccessOtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  uint64_t v9 = sub_1C151700C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t _s11TeaSettings0B0C8NewsFeedE6SportsV13BoxScoreEmbedV15ConfigOverridesC3key12defaultValue6accessAJSSSg_SbAA6AccessOtcfc_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  uint64_t v9 = sub_1C151700C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t sub_1C0ED07F0(uint64_t a1)
{
  return sub_1C0ECE118(a1, (void (*)(void, __n128))type metadata accessor for Settings.Sports.ScoreConfig.ConfigOverrides, 0xD000000000000036, 0x80000001C162DAB0, &qword_1EB862918);
}

uint64_t static Settings.Sports.ScoreConfig.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB862920);
}

uint64_t sub_1C0ED084C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[15] = 0;
  sub_1BFCC22F8(0, (unint64_t *)&qword_1EB8979E8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EB863AA8 = result;
  return result;
}

uint64_t static Settings.Sports.Scores.debug.getter()
{
  return sub_1BFC387A8(&qword_1EB863AB8);
}

ValueMetadata *type metadata accessor for Settings.Sports()
{
  return &type metadata for Settings.Sports;
}

ValueMetadata *type metadata accessor for Settings.Sports.BoxScoreEmbed()
{
  return &type metadata for Settings.Sports.BoxScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.BoxScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB863820);
}

uint64_t sub_1C0ED0A74()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0A80()
{
  return type metadata accessor for Settings.Sports.BoxScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.InjuryReportEmbed()
{
  return &type metadata for Settings.Sports.InjuryReportEmbed;
}

uint64_t type metadata accessor for Settings.Sports.InjuryReportEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB8639F0);
}

uint64_t sub_1C0ED0AB8()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0AC4()
{
  return type metadata accessor for Settings.Sports.InjuryReportEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.KeyPlayersEmbed()
{
  return &type metadata for Settings.Sports.KeyPlayersEmbed;
}

uint64_t type metadata accessor for Settings.Sports.KeyPlayersEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB8639A0);
}

uint64_t sub_1C0ED0AFC()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0B08()
{
  return type metadata accessor for Settings.Sports.KeyPlayersEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.LineScoreEmbed()
{
  return &type metadata for Settings.Sports.LineScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.LineScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB863900);
}

uint64_t sub_1C0ED0B40()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0B4C()
{
  return type metadata accessor for Settings.Sports.LineScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.ScoreEmbed()
{
  return &type metadata for Settings.Sports.ScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.ScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB8637D8);
}

uint64_t sub_1C0ED0B84()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0B90()
{
  return type metadata accessor for Settings.Sports.ScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.MastheadScoreEmbed()
{
  return &type metadata for Settings.Sports.MastheadScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.MastheadScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB863A40);
}

uint64_t sub_1C0ED0BC8()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0BD4()
{
  return type metadata accessor for Settings.Sports.MastheadScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.StandingEmbed()
{
  return &type metadata for Settings.Sports.StandingEmbed;
}

uint64_t type metadata accessor for Settings.Sports.StandingEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB8638B8);
}

uint64_t sub_1C0ED0C0C()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0C18()
{
  return type metadata accessor for Settings.Sports.StandingEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.StandingConfig()
{
  return &type metadata for Settings.Sports.StandingConfig;
}

uint64_t type metadata accessor for Settings.Sports.StandingConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB863950);
}

uint64_t sub_1C0ED0C50()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0C5C()
{
  return type metadata accessor for Settings.Sports.StandingConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.BracketEmbed()
{
  return &type metadata for Settings.Sports.BracketEmbed;
}

uint64_t type metadata accessor for Settings.Sports.BracketEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB86BCC8);
}

uint64_t sub_1C0ED0C94()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0CA0()
{
  return type metadata accessor for Settings.Sports.BracketEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.BoxScoreConfig()
{
  return &type metadata for Settings.Sports.BoxScoreConfig;
}

uint64_t type metadata accessor for Settings.Sports.BoxScoreConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1A8558);
}

uint64_t sub_1C0ED0CD8()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0CE4()
{
  return type metadata accessor for Settings.Sports.BoxScoreConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.BracketConfig()
{
  return &type metadata for Settings.Sports.BracketConfig;
}

uint64_t type metadata accessor for Settings.Sports.BracketConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB863870);
}

uint64_t sub_1C0ED0D1C()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0D28()
{
  return type metadata accessor for Settings.Sports.BracketConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.KeyPlayersConfig()
{
  return &type metadata for Settings.Sports.KeyPlayersConfig;
}

uint64_t type metadata accessor for Settings.Sports.KeyPlayersConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1A8568);
}

uint64_t sub_1C0ED0D60()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0D6C()
{
  return type metadata accessor for Settings.Sports.KeyPlayersConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.LineScoreConfig()
{
  return &type metadata for Settings.Sports.LineScoreConfig;
}

uint64_t type metadata accessor for Settings.Sports.LineScoreConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1A8578);
}

uint64_t sub_1C0ED0DA4()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0DB0()
{
  return type metadata accessor for Settings.Sports.LineScoreConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.InjuryReportConfig()
{
  return &type metadata for Settings.Sports.InjuryReportConfig;
}

uint64_t type metadata accessor for Settings.Sports.InjuryReportConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1A8588);
}

uint64_t sub_1C0ED0DE8()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0DF4()
{
  return type metadata accessor for Settings.Sports.InjuryReportConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.ScoreConfig()
{
  return &type metadata for Settings.Sports.ScoreConfig;
}

uint64_t type metadata accessor for Settings.Sports.ScoreConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB862908);
}

uint64_t sub_1C0ED0E2C()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C0ED0E38()
{
  return type metadata accessor for Settings.Sports.ScoreConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.Scores()
{
  return &type metadata for Settings.Sports.Scores;
}

void sub_1C0ED0E50()
{
  if (!qword_1EA19C358)
  {
    sub_1C0ED0EA8();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C358);
    }
  }
}

void sub_1C0ED0EA8()
{
  if (!qword_1EA19C360)
  {
    unint64_t v0 = sub_1C15171BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C360);
    }
  }
}

ValueMetadata *type metadata accessor for DebugFormatCompilerResult()
{
  return &type metadata for DebugFormatCompilerResult;
}

uint64_t sub_1C0ED0F80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0ED0F90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (id *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v15 = *(void *)(v6 + 72);
    uint64_t v27 = a1;
    unint64_t v29 = v14;
    uint64_t v16 = a1 + v14;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v28 = v5;
    while (1)
    {
      sub_1C0ED1280(v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1C0ED1280((uint64_t)&v11[*(int *)(v5 + 20)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v19 = type metadata accessor for DebugFormatCompilerResultOutput;
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v21 = v2;

          uint64_t v22 = (uint64_t)v8;
          sub_1C0ED1348((uint64_t)v11, (uint64_t)v8);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C05F79A8(0, *(void *)(v17 + 16) + 1, 1);
          }
          uint64_t v17 = v30;
          unint64_t v24 = *(void *)(v30 + 16);
          unint64_t v23 = *(void *)(v30 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1C05F79A8(v23 > 1, v24 + 1, 1);
            uint64_t v17 = v30;
          }
          *(void *)(v17 + 16) = v24 + 1;
          uint64_t v25 = v17 + v29 + v24 * v15;
          uint64_t v8 = (char *)v22;
          sub_1C0ED1348(v22, v25);
          uint64_t v2 = v21;
          uint64_t v5 = v28;
          goto LABEL_5;
        }
        sub_1C0913D20();

        uint64_t v19 = type metadata accessor for FormatFile;
      }
      sub_1C0ED12E8((uint64_t)v4, (uint64_t (*)(void))v19);
      sub_1C0ED12E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
LABEL_5:
      v16 += v15;
      if (!--v13)
      {
        uint64_t v12 = v30;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C0ED1280(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0ED12E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0ED1348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0ED13AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (id *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v15 = a1;
    uint64_t v16 = *(void *)(v6 + 72);
    uint64_t v27 = v15;
    unint64_t v28 = v14;
    uint64_t v17 = v15 + v14;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v5;
    while (1)
    {
      sub_1C0ED1280(v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1C0ED1280((uint64_t)&v11[*(int *)(v5 + 20)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v20 = v2;
          sub_1C0913D20();

          sub_1C0ED12E8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatFile);
          uint64_t v22 = (uint64_t)v8;
          sub_1C0ED1348((uint64_t)v11, (uint64_t)v8);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C05F79A8(0, *(void *)(v18 + 16) + 1, 1);
          }
          uint64_t v18 = v30;
          unint64_t v24 = *(void *)(v30 + 16);
          unint64_t v23 = *(void *)(v30 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1C05F79A8(v23 > 1, v24 + 1, 1);
            uint64_t v18 = v30;
          }
          *(void *)(v18 + 16) = v24 + 1;
          uint64_t v25 = v18 + v28 + v24 * v16;
          uint64_t v8 = (char *)v22;
          sub_1C0ED1348(v22, v25);
          uint64_t v2 = v20;
          uint64_t v5 = v29;
          goto LABEL_5;
        }
      }
      else
      {
        sub_1C0ED12E8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
      }
      sub_1C0ED12E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
LABEL_5:
      v17 += v16;
      if (!--v13)
      {
        uint64_t v12 = v30;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C0ED16A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (id *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v15 = *(void *)(v6 + 72);
    uint64_t v26 = a1;
    unint64_t v28 = v14;
    uint64_t v16 = a1 + v14;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v27 = v5;
    do
    {
      sub_1C0ED1280(v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1C0ED1280((uint64_t)&v11[*(int *)(v5 + 20)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
        }
        else
        {
          sub_1C0913D20();

          sub_1C0ED12E8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatFile);
        }
        sub_1C0ED12E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      }
      else
      {
        uint64_t v20 = v2;
        sub_1C0ED12E8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
        uint64_t v21 = (uint64_t)v8;
        sub_1C0ED1348((uint64_t)v11, (uint64_t)v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F79A8(0, *(void *)(v17 + 16) + 1, 1);
        }
        uint64_t v17 = v29;
        unint64_t v23 = *(void *)(v29 + 16);
        unint64_t v22 = *(void *)(v29 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_1C05F79A8(v22 > 1, v23 + 1, 1);
          uint64_t v17 = v29;
        }
        *(void *)(v17 + 16) = v23 + 1;
        uint64_t v24 = v17 + v28 + v23 * v15;
        uint64_t v8 = (char *)v21;
        sub_1C0ED1348(v21, v24);
        uint64_t v2 = v20;
        uint64_t v5 = v27;
      }
      v16 += v15;
      --v13;
    }
    while (v13);
    uint64_t v12 = v29;
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C0ED19A4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1BFEF2D8C(v4, v3);
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

void FormatLayoutExpression.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *FormatLayoutExpression.operator.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*FormatLayoutExpression.operator.modify())(void)
{
  return nullsub_1;
}

uint64_t static FormatLayoutExpression.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2)
  {
    unint64_t v2 = FormatOperator.rawValue.getter();
    uint64_t v4 = v3;
    if (v2 == FormatOperator.rawValue.getter() && v4 == v5) {
      char v6 = 1;
    }
    else {
      char v6 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

unint64_t sub_1C0ED1B10(uint64_t a1)
{
  unint64_t result = sub_1C0ED1B38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0ED1B38()
{
  unint64_t result = qword_1EA1A8598;
  if (!qword_1EA1A8598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8598);
  }
  return result;
}

unint64_t sub_1C0ED1B8C(void *a1)
{
  a1[1] = sub_1BFE66378();
  a1[2] = sub_1BFE3F200();
  unint64_t result = sub_1C0ED1BC4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0ED1BC4()
{
  unint64_t result = qword_1EA1A85A0;
  if (!qword_1EA1A85A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85A0);
  }
  return result;
}

uint64_t sub_1C0ED1C18(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_1C1496768();
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0ED1C3C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 8);
  return result;
}

unsigned char *sub_1C0ED1C48(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 8) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutExpression()
{
  return &type metadata for FormatLayoutExpression;
}

uint64_t sub_1C0ED1C64()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t FormatSlotItemTagFilterOrCondition.lhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFF58F10(v2);
}

unint64_t FormatSlotItemTagFilterOrCondition.rhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1BFF58F10(v2);
}

uint64_t sub_1C0ED1CB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatSlotItemTagFilterOrCondition.init(from:)(a1, a2);
}

uint64_t sub_1C0ED1CD0(void *a1)
{
  return FormatSlotItemTagFilterOrCondition.encode(to:)(a1);
}

unint64_t sub_1C0ED1CE8(uint64_t a1)
{
  unint64_t result = sub_1C0ED1D10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0ED1D10()
{
  unint64_t result = qword_1EA1A85A8;
  if (!qword_1EA1A85A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85A8);
  }
  return result;
}

unint64_t sub_1C0ED1D64(void *a1)
{
  a1[1] = sub_1C0862264();
  a1[2] = sub_1C0907D40();
  unint64_t result = sub_1C0ED1D9C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0ED1D9C()
{
  unint64_t result = qword_1EA1A85B0;
  if (!qword_1EA1A85B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterOrCondition()
{
  return &type metadata for FormatSlotItemTagFilterOrCondition;
}

ValueMetadata *type metadata accessor for DebugFormatHistorySection()
{
  return &type metadata for DebugFormatHistorySection;
}

uint64_t sub_1C0ED1E10(long long *a1, double a2)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  long long v3 = a1[11];
  long long v50 = a1[10];
  long long v51 = v3;
  uint64_t v52 = *((void *)a1 + 24);
  long long v4 = a1[7];
  long long v46 = a1[6];
  long long v47 = v4;
  long long v5 = a1[9];
  long long v48 = a1[8];
  long long v49 = v5;
  long long v6 = a1[3];
  long long v42 = a1[2];
  long long v43 = v6;
  long long v7 = a1[5];
  long long v44 = a1[4];
  long long v45 = v7;
  long long v8 = a1[1];
  long long v40 = *a1;
  long long v41 = v8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1C0ED2190();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C15445C0;
  *(void *)(inited + 32) = 0x6567616B636150;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v11 = (uint64_t *)(*((void *)&v50 + 1) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  uint64_t v13 = MEMORY[0x1E4FBB208];
  if (v11[1])
  {
    uint64_t v14 = *v11;
    uint64_t v15 = MEMORY[0x1E4FBB208];
    uint64_t v16 = v11[1];
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
    *(void *)(inited + 64) = 0;
  }
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v16;
  *(void *)(inited + 72) = v17;
  *(void *)(inited + 80) = v15;
  *(unsigned char *)(inited + 88) = 0;
  *(void *)(inited + 96) = 0x70756F7247;
  *(void *)(inited + 104) = 0xE500000000000000;
  uint64_t v18 = *((void *)&v42 + 1);
  uint64_t v19 = v43;
  *(void *)(inited + 136) = v12;
  *(void *)(inited + 144) = v13;
  if (v19)
  {
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = *((void *)&v41 + 1);
    uint64_t v20 = swift_bridgeObjectRetain();
  }
  *(void *)(inited + 112) = v18;
  *(void *)(inited + 120) = v20;
  *(unsigned char *)(inited + 152) = 0;
  *(void *)(inited + 160) = 0x656369766544;
  *(void *)(inited + 168) = 0xE600000000000000;
  unint64_t v21 = sub_1C10F67E4(v51);
  *(void *)(inited + 200) = v12;
  *(void *)(inited + 208) = v13;
  *(void *)(inited + 176) = v21;
  *(void *)(inited + 184) = v22;
  *(unsigned char *)(inited + 216) = 0;
  strcpy((char *)(inited + 224), "Calculations");
  *(unsigned char *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  uint64_t v23 = v40;
  uint64_t v24 = MEMORY[0x1E4FBB550];
  uint64_t v25 = MEMORY[0x1E4FBB5B0];
  *(void *)(inited + 264) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 272) = v25;
  *(void *)(inited + 240) = v23;
  *(unsigned char *)(inited + 280) = 0;
  *(void *)(inited + 288) = 0x7373615020646E32;
  *(void *)(inited + 296) = 0xEA00000000007365;
  uint64_t v26 = *((void *)&v40 + 1);
  *(void *)(inited + 328) = v24;
  *(void *)(inited + 336) = v25;
  *(void *)(inited + 304) = v26;
  *(unsigned char *)(inited + 344) = 0;
  strcpy((char *)(inited + 352), "Resize Passes");
  *(_WORD *)(inited + 366) = -4864;
  uint64_t v27 = v41;
  *(void *)(inited + 392) = v24;
  *(void *)(inited + 400) = v25;
  *(void *)(inited + 368) = v27;
  *(unsigned char *)(inited + 408) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C104B02C(inited);
  int64_t v28 = *(void *)(*((void *)&v51 + 1) + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    sub_1C05F82D4(0, v28, 0);
    uint64_t v29 = (void **)(*((void *)&v51 + 1) + 56);
    do
    {
      uint64_t v30 = (uint64_t)*(v29 - 2);
      uint64_t v31 = (uint64_t)*(v29 - 1);
      uint64_t v32 = *v29;
      v38[0] = *(v29 - 3);
      v38[1] = v30;
      v38[2] = v31;
      void v38[3] = v32;
      *(double *)&v38[4] = a2;
      char v39 = 1;
      unint64_t v34 = *(void *)(v9 + 16);
      unint64_t v33 = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      id v35 = v32;
      if (v34 >= v33 >> 1) {
        sub_1C05F82D4(v33 > 1, v34 + 1, 1);
      }
      *(void *)(v9 + 16) = v34 + 1;
      sub_1C0ED21E8((uint64_t)v38, v9 + (v34 << 6) + 32);
      v29 += 4;
      --v28;
    }
    while (v28);
    sub_1C024D250((uint64_t)&v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C024D250((uint64_t)&v40);
  }
  sub_1C104B02C(v9);
  return v37;
}

void sub_1C0ED2190()
{
  if (!qword_1EA1A8840)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8840);
    }
  }
}

uint64_t sub_1C0ED21E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AdPresentationDelegateProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 24) = 1;
  return v0;
}

uint64_t AdPresentationDelegateProvider.viewController.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v0 + 16);
}

void AdPresentationDelegateProvider.viewController.setter(void *a1)
{
}

void (*AdPresentationDelegateProvider.viewController.modify(void *a1))(id **a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C18C9C60](v1 + 16);
  return sub_1C0ED239C;
}

void sub_1C0ED239C(id **a1, char a2)
{
  long long v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  free(v3);
}

uint64_t sub_1C0ED2418()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1;
  if (v1 == 1)
  {
    swift_beginAccess();
    uint64_t v3 = MEMORY[0x1C18C9C60](v0 + 16);
    if (v3)
    {
      id v4 = (void *)v3;
      type metadata accessor for AdPresentationDelegate();
      uint64_t v2 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
    }
    else
    {
      uint64_t v2 = 0;
    }
    uint64_t v5 = *(void *)(v0 + 24);
    *(void *)(v0 + 24) = v2;
    swift_retain();
    sub_1C0ED2528(v5);
  }
  sub_1C0ED26E8(v1);
  return v2;
}

uint64_t AdPresentationDelegateProvider.init()()
{
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 24) = 1;
  return v0;
}

uint64_t AdPresentationDelegateProvider.deinit()
{
  swift_unknownObjectWeakDestroy();
  sub_1C0ED2528(*(void *)(v0 + 24));
  return v0;
}

uint64_t sub_1C0ED2528(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t AdPresentationDelegateProvider.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  sub_1C0ED2528(*(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t sub_1C0ED2578@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1C0ED25C8()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for AdPresentationDelegateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AdPresentationDelegateProvider);
}

uint64_t dispatch thunk of AdPresentationDelegateProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0ED268C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdPresentationDelegate()
{
  return self;
}

uint64_t sub_1C0ED26E8(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t FormatSportsEventBinding.Asset.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static FormatSportsEventBinding.Asset.allCases.getter()
{
  return &unk_1F1B8A088;
}

uint64_t FormatSportsEventBinding.Asset.rawValue.getter()
{
  uint64_t v1 = 0x65756761656CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x74697465706D6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E657665;
  }
}

unint64_t sub_1C0ED27BC()
{
  unint64_t result = qword_1EA1A85B8;
  if (!qword_1EA1A85B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85B8);
  }
  return result;
}

uint64_t sub_1C0ED2810@<X0>(char *a1@<X8>)
{
  return FormatSportsEventBinding.Asset.init(rawValue:)(a1);
}

unint64_t sub_1C0ED2820()
{
  unint64_t result = qword_1EA1A85C0;
  if (!qword_1EA1A85C0)
  {
    sub_1C0ED2878();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85C0);
  }
  return result;
}

void sub_1C0ED2878()
{
  if (!qword_1EA1A85C8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A85C8);
    }
  }
}

void sub_1C0ED28D0(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B848;
}

unsigned char *_s5AssetOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ED29ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Asset()
{
  return &type metadata for FormatSportsEventBinding.Asset;
}

uint64_t getEnumTagSinglePayload for LayeredMediaEffects(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[25]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPatternPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects()
{
  return &type metadata for LayeredMediaEffects;
}

uint64_t sub_1C0ED2AA4()
{
  if (*v0) {
    return 0x647574696C706D61;
  }
  else {
    return 0x6F756E69746E6F63;
  }
}

uint64_t sub_1C0ED2AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0ED3C2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0ED2B10(uint64_t a1)
{
  unint64_t v2 = sub_1C0ED373C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0ED2B4C(uint64_t a1)
{
  unint64_t v2 = sub_1C0ED373C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C0ED2B88(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = sub_1C0ED2FA4(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = v4;
    *(double *)(a2 + 8) = v5;
  }
}

uint64_t sub_1C0ED2BB8()
{
  return 0x647574696C706D61;
}

uint64_t sub_1C0ED2BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x647574696C706D61 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0ED2C78(uint64_t a1)
{
  unint64_t v2 = sub_1C0ED37F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0ED2CB4(uint64_t a1)
{
  unint64_t v2 = sub_1C0ED37F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0ED2CF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v14 = a2;
  sub_1C0ED3790(0, &qword_1EB85E0D0, (void (*)(void))sub_1C0ED37F0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0ED37F0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v14;
  sub_1C15206BC();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v11;
  return result;
}

uint64_t sub_1C0ED2E94()
{
  if (*v0) {
    return 0x6E6F69746F6DLL;
  }
  else {
    return 0x78616C6C61726170;
  }
}

uint64_t sub_1C0ED2ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0ED3650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0ED2EF4(uint64_t a1)
{
  unint64_t v2 = sub_1C0ED3378();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0ED2F30(uint64_t a1)
{
  unint64_t v2 = sub_1C0ED3378();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0ED2F6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C0ED3174(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

double sub_1C0ED2FA4(void *a1)
{
  sub_1C0ED3790(0, &qword_1EA1A85D8, (void (*)(void))sub_1C0ED373C);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v8 = &v11[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0ED373C();
  sub_1C1520EBC();
  if (!v1)
  {
    v11[15] = 0;
    sub_1C152061C();
    v11[14] = 1;
    sub_1C15206BC();
    double v2 = v10;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1C0ED3174(void *a1)
{
  sub_1C0ED3790(0, &qword_1EB85E0C8, (void (*)(void))sub_1C0ED3378);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1C0ED3378();
  sub_1C1520EBC();
  if (!v1)
  {
    char v11 = 0;
    sub_1C0ED33CC();
    sub_1C152065C();
    uint64_t v8 = v10;
    char v11 = 1;
    sub_1C0ED3420();
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1C0ED3378()
{
  unint64_t result = qword_1EB85D400;
  if (!qword_1EB85D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D400);
  }
  return result;
}

unint64_t sub_1C0ED33CC()
{
  unint64_t result = qword_1EB85D438;
  if (!qword_1EB85D438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D438);
  }
  return result;
}

unint64_t sub_1C0ED3420()
{
  unint64_t result = qword_1EB85D430;
  if (!qword_1EB85D430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D430);
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.CodingKeys()
{
  return &type metadata for LayeredMediaEffects.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Motion()
{
  return &type metadata for LayeredMediaEffects.Motion;
}

uint64_t getEnumTagSinglePayload for LayeredMediaEffects.Parallax(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[16]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayeredMediaEffects.Parallax(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Parallax()
{
  return &type metadata for LayeredMediaEffects.Parallax;
}

unint64_t sub_1C0ED354C()
{
  unint64_t result = qword_1EA1A85D0;
  if (!qword_1EA1A85D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85D0);
  }
  return result;
}

unint64_t sub_1C0ED35A4()
{
  unint64_t result = qword_1EB85D410;
  if (!qword_1EB85D410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D410);
  }
  return result;
}

unint64_t sub_1C0ED35FC()
{
  unint64_t result = qword_1EB85D408;
  if (!qword_1EB85D408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D408);
  }
  return result;
}

uint64_t sub_1C0ED3650(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x78616C6C61726170 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C0ED373C()
{
  unint64_t result = qword_1EA1A85E0;
  if (!qword_1EA1A85E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85E0);
  }
  return result;
}

void sub_1C0ED3790(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C152072C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C0ED37F0()
{
  unint64_t result = qword_1EB85D418;
  if (!qword_1EB85D418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D418);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LayeredMediaEffects.Motion.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0ED38E0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Motion.CodingKeys()
{
  return &type metadata for LayeredMediaEffects.Motion.CodingKeys;
}

unsigned char *_s8NewsFeed19LayeredMediaEffectsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ED39E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Parallax.CodingKeys()
{
  return &type metadata for LayeredMediaEffects.Parallax.CodingKeys;
}

unint64_t sub_1C0ED3A20()
{
  unint64_t result = qword_1EA1A85E8;
  if (!qword_1EA1A85E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85E8);
  }
  return result;
}

unint64_t sub_1C0ED3A78()
{
  unint64_t result = qword_1EA1A85F0;
  if (!qword_1EA1A85F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85F0);
  }
  return result;
}

unint64_t sub_1C0ED3AD0()
{
  unint64_t result = qword_1EB85D428;
  if (!qword_1EB85D428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D428);
  }
  return result;
}

unint64_t sub_1C0ED3B28()
{
  unint64_t result = qword_1EB85D420;
  if (!qword_1EB85D420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D420);
  }
  return result;
}

unint64_t sub_1C0ED3B80()
{
  unint64_t result = qword_1EA1A85F8;
  if (!qword_1EA1A85F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A85F8);
  }
  return result;
}

unint64_t sub_1C0ED3BD8()
{
  unint64_t result = qword_1EA1A8600;
  if (!qword_1EA1A8600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8600);
  }
  return result;
}

uint64_t sub_1C0ED3C2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F756E69746E6F63 && a2 == 0xEA00000000007375;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647574696C706D61 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void FeedItemPrefetcher.prefetch(with:in:at:)(void **a1, void *a2)
{
  int v3 = v2;
  uint64_t v6 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  if ((unint64_t)*a1 >> 60 == 3)
  {
    v27[0] = a2;
    sub_1BFE29A3C();
    uint64_t v13 = swift_projectBox();
    sub_1C0ED4118(v13, (uint64_t)v11, type metadata accessor for FeedBannerAdViewLayout.Context);
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    uint64_t v14 = (void *)qword_1EB93C6F8;
    sub_1BFFDEB20();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
    id v16 = v14;
    uint64_t v17 = sub_1C151DB4C();
    uint64_t v19 = v18;
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = sub_1BFE9C558();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v20 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
    uint64_t v21 = sub_1C151DB4C();
    (*(void (**)(uint64_t))(v20 + 16))(v21);
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)sub_1C151670C();
    id v23 = v27[0];
    id v24 = objc_msgSend(v27[0], sel_layoutAttributesForItemAtIndexPath_, v22);

    sub_1C151D0EC();
    sub_1C0ED4118((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    v27[1] = v12;
    *(void *)&v28.origin.CGFloat x = FeedItemLayoutAttributes.frame.getter().n128_u64[0];
    CGRectGetWidth(v28);
    objc_msgSend(v23, sel_bounds);
    double Height = CGRectGetHeight(v29);
    if (v24) {
      objc_msgSend(v24, sel_frame, Height);
    }
    uint64_t v26 = (void *)sub_1C151D79C();

    swift_release();
    sub_1BFEE18FC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    sub_1BFEE18FC((uint64_t)v11, type metadata accessor for FeedBannerAdViewLayout.Context);
  }
}

uint64_t FeedItemPrefetcher.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t FeedItemPrefetcher.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

void sub_1C0ED40F4(void **a1, void *a2)
{
}

uint64_t sub_1C0ED4118(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of FeedItemPrefetcherType.prefetch(with:in:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FeedItemPrefetcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedItemPrefetcher);
}

uint64_t sub_1C0ED41AC()
{
  uint64_t v1 = type metadata accessor for FormatContentSubgroupFilterContext();
  if (*(void *)(v0 + *(int *)(v1 + 28)))
  {
    uint64_t ObjectType = swift_getObjectType();
    int v3 = sub_1BFFAFDA8(0x2D70756F7267, 0xE600000000000000, ObjectType);
  }
  else
  {
    int v3 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C0C328B0(v0 + *(int *)(v1 + 20), (uint64_t)&v12);
  uint64_t v4 = v13;
  if (v13)
  {
    uint64_t v5 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, v13);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v0, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  else
  {
    sub_1C0C3296C((uint64_t)&v12);
    uint64_t v6 = MEMORY[0x1E4FBC870];
  }
  uint64_t v7 = v3[2];
  if (v7)
  {
    uint64_t v8 = v3 + 5;
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v12, v9, v10);
      swift_bridgeObjectRelease();
      v8 += 2;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for FormatContentSubgroupFilterContext()
{
  uint64_t result = qword_1EB88EBC8;
  if (!qword_1EB88EBC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C0ED4344(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *a1 = *a2;
    unint64_t v36 = (void *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v125 = v12;
    uint64_t v127 = v11;
    v12(v9, v10, v11);
    uint64_t v13 = v7[6];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v7[7];
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = v7[8];
    uint64_t v22 = (void *)((char *)a1 + v21);
    id v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v7[9];
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = v7[10];
    uint64_t v135 = a1;
    uint64_t v136 = a2;
    __dst = (char *)a1 + v29;
    uint64_t v30 = (char *)a2 + v29;
    uint64_t v31 = sub_1C151D6DC();
    uint64_t v32 = *(void *)(v31 - 8);
    unint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33(v30, 1, v31))
    {
      sub_1BFFD9360(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
      memcpy(__dst, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    }
    *(void *)((char *)v135 + v7[11]) = *(void *)((char *)v136 + v7[11]);
    *(void *)((char *)v135 + v7[12]) = *(void *)((char *)v136 + v7[12]);
    *(void *)((char *)v135 + v7[13]) = *(void *)((char *)v136 + v7[13]);
    *(void *)((char *)v135 + v7[14]) = *(void *)((char *)v136 + v7[14]);
    *(void *)((char *)v135 + v7[15]) = *(void *)((char *)v136 + v7[15]);
    *(void *)((char *)v135 + v7[16]) = *(void *)((char *)v136 + v7[16]);
    *(void *)((char *)v135 + v7[17]) = *(void *)((char *)v136 + v7[17]);
    uint64_t v37 = *(int *)(a3 + 20);
    unint64_t v38 = (char *)v135 + v37;
    char v39 = (char *)v136 + v37;
    uint64_t v40 = *(void *)((char *)v136 + v37 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40)
    {
      uint64_t v41 = *((void *)v39 + 4);
      *((void *)v38 + 3) = v40;
      *((void *)v38 + 4) = v41;
      (**(void (***)(void *, char *, uint64_t))(v40 - 8))(v38, v39, v40);
    }
    else
    {
      long long v42 = *((_OWORD *)v39 + 1);
      *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v42;
      *((void *)v38 + 4) = *((void *)v39 + 4);
    }
    *((void *)v38 + 5) = *((void *)v39 + 5);
    v38[48] = v39[48];
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
    long long v43 = (int *)type metadata accessor for FormatServiceOptions();
    uint64_t v44 = v43[10];
    uint64_t v131 = v39;
    __dsta = v38;
    long long v45 = (void **)&v38[v44];
    long long v46 = (void **)&v39[v44];
    uint64_t v47 = type metadata accessor for FormatTransformKnobs();
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      sub_1BFFD9360(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v122 = v47;
      uint64_t v129 = v43;
      long long v50 = *v46;
      void *v45 = *v46;
      long long v51 = (int *)type metadata accessor for FeedContext();
      uint64_t v52 = v51[5];
      uint64_t v53 = (void **)((char *)v45 + v52);
      uint64_t v54 = (void **)((char *)v46 + v52);
      uint64_t v55 = (int *)type metadata accessor for BundleSession();
      uint64_t v56 = *((void *)v55 - 1);
      uint64_t v57 = *(unsigned int (**)(void *, uint64_t, int *))(v56 + 48);
      id v58 = v50;
      if (v57(v54, 1, v55))
      {
        sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        memcpy(v53, v54, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        *uint64_t v53 = *v54;
        v125((char *)v53 + v55[5], (char *)v54 + v55[5], v127);
        *((unsigned char *)v53 + v55[6]) = *((unsigned char *)v54 + v55[6]);
        *((unsigned char *)v53 + v55[7]) = *((unsigned char *)v54 + v55[7]);
        *(_OWORD *)((char *)v53 + v55[8]) = *(_OWORD *)((char *)v54 + v55[8]);
        *(void *)((char *)v53 + v55[9]) = *(void *)((char *)v54 + v55[9]);
        *((unsigned char *)v53 + v55[10]) = *((unsigned char *)v54 + v55[10]);
        *((unsigned char *)v53 + v55[11]) = *((unsigned char *)v54 + v55[11]);
        unint64_t v60 = *(void (**)(void *, void, uint64_t, int *))(v56 + 56);
        swift_bridgeObjectRetain();
        v60(v53, 0, 1, v55);
      }
      *((unsigned char *)v45 + v51[6]) = *((unsigned char *)v46 + v51[6]);
      *((unsigned char *)v45 + v51[7]) = *((unsigned char *)v46 + v51[7]);
      *((unsigned char *)v45 + v51[8]) = *((unsigned char *)v46 + v51[8]);
      *((unsigned char *)v45 + v51[9]) = *((unsigned char *)v46 + v51[9]);
      *(void **)((char *)v45 + v51[10]) = *(void **)((char *)v46 + v51[10]);
      *(void **)((char *)v45 + v51[11]) = *(void **)((char *)v46 + v51[11]);
      uint64_t v61 = v51[12];
      uint64_t v62 = (void **)((char *)v45 + v61);
      uint64_t v63 = (void **)((char *)v46 + v61);
      uint64_t v64 = *(uint64_t *)((char *)v46 + v61 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((unint64_t)(v64 - 1) >= 3)
      {
        *uint64_t v62 = *v63;
        v62[1] = v64;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
      }
      *((unsigned char *)v45 + v51[13]) = *((unsigned char *)v46 + v51[13]);
      uint64_t v65 = v51[14];
      uint64_t v66 = *(void **)((char *)v46 + v65);
      *(void **)((char *)v45 + v65) = v66;
      uint64_t v67 = v51[15];
      uint64_t v68 = (void **)((char *)v45 + v67);
      uint64_t v69 = (void **)((char *)v46 + v67);
      uint64_t v70 = v69[1];
      void *v68 = *v69;
      v68[1] = v70;
      uint64_t v71 = *(int *)(v122 + 20);
      uint64_t v72 = (char *)v45 + v71;
      uint64_t v73 = (char *)v46 + v71;
      long long v74 = *(_OWORD *)((char *)v46 + v71 + 24);
      *(_OWORD *)((char *)v45 + v71 + 24) = v74;
      uint64_t v75 = v74;
      unint64_t v76 = **(void (***)(char *, char *, uint64_t))(v74 - 8);
      id v77 = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76(v72, v73, v75);
      (*(void (**)(void **, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v122);
      long long v43 = v129;
    }
    uint64_t v78 = (int *)type metadata accessor for FormatTransformData();
    *(void **)((char *)v45 + v78[5]) = *(void **)((char *)v46 + v78[5]);
    *(void **)((char *)v45 + v78[6]) = *(void **)((char *)v46 + v78[6]);
    *(void **)((char *)v45 + v78[7]) = *(void **)((char *)v46 + v78[7]);
    *((unsigned char *)v45 + v78[8]) = *((unsigned char *)v46 + v78[8]);
    *((unsigned char *)v45 + v78[9]) = *((unsigned char *)v46 + v78[9]);
    uint64_t v79 = v78[10];
    long long v80 = (void **)((char *)v45 + v79);
    uint64_t v81 = (void **)((char *)v46 + v79);
    uint64_t v82 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
    uint64_t v83 = *((void *)v82 - 1);
    uint64_t v84 = *(unsigned int (**)(void *, uint64_t, int *))(v83 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v84(v81, 1, v82))
    {
      sub_1BFFD9360(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
      uint64_t v86 = v136;
      uint64_t v87 = a3;
    }
    else
    {
      uint64_t v128 = v83;
      unint64_t v130 = v43;
      *long long v80 = *v81;
      *((unsigned char *)v80 + 8) = *((unsigned char *)v81 + 8);
      v80[2] = v81[2];
      *((unsigned char *)v80 + 24) = *((unsigned char *)v81 + 24);
      uint64_t v88 = v82[6];
      uint64_t v89 = (void *)((char *)v80 + v88);
      uint64_t v90 = (void *)((char *)v81 + v88);
      uint64_t v91 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v92 = *(void *)(v91 - 8);
      uint64_t v86 = v136;
      uint64_t v93 = v80;
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
      {
        sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v89, v90, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        uint64_t v95 = v90[1];
        *uint64_t v89 = *v90;
        v89[1] = v95;
        uint64_t v96 = *(int *)(v91 + 24);
        uint64_t v124 = (char *)v90 + v96;
        uint64_t v126 = (char *)v89 + v96;
        uint64_t v97 = sub_1C1516D9C();
        uint64_t v123 = v93;
        uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v126, v124, v97);
        uint64_t v86 = v136;
        *(void *)((char *)v89 + *(int *)(v91 + 28)) = *(void *)((char *)v90 + *(int *)(v91 + 28));
        int v99 = *(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56);
        swift_bridgeObjectRetain();
        v99(v89, 0, 1, v91);
        uint64_t v93 = v123;
      }
      uint64_t v100 = v82[7];
      uint64_t v101 = (char *)v93 + v100;
      unint64_t v102 = (char *)v81 + v100;
      *(void *)uint64_t v101 = *(void *)v102;
      v101[8] = v102[8];
      uint64_t v103 = v82[8];
      unint64_t v104 = (char *)v93 + v103;
      uint64_t v105 = (char *)v81 + v103;
      v104[8] = v105[8];
      *(void *)unint64_t v104 = *(void *)v105;
      uint64_t v106 = v82[9];
      uint64_t v107 = (char *)v93 + v106;
      uint64_t v108 = (char *)v81 + v106;
      *(void *)uint64_t v107 = *(void *)v108;
      v107[8] = v108[8];
      uint64_t v109 = v82[10];
      uint64_t v110 = (char *)v93 + v109;
      uint64_t v111 = (char *)v81 + v109;
      uint64_t v112 = *((void *)v111 + 4);
      long long v43 = v130;
      if (v112 == 1)
      {
        long long v113 = *((_OWORD *)v111 + 1);
        *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
        *((_OWORD *)v110 + 1) = v113;
        *((void *)v110 + 4) = *((void *)v111 + 4);
      }
      else
      {
        *(void *)uint64_t v110 = *(void *)v111;
        v110[8] = v111[8];
        *((void *)v110 + 2) = *((void *)v111 + 2);
        v110[24] = v111[24];
        *((void *)v110 + 4) = v112;
        swift_bridgeObjectRetain();
      }
      uint64_t v87 = a3;
      (*(void (**)(void *, void, uint64_t, int *))(v128 + 56))(v93, 0, 1, v82);
    }
    *(void *)&__dsta[v43[11]] = *(void *)&v131[v43[11]];
    uint64_t v114 = v43[12];
    uint64_t v115 = *(void **)&v131[v114];
    *(void *)&__dsta[v114] = v115;
    uint64_t v116 = v43[13];
    uint64_t v117 = *(void **)&v131[v116];
    *(void *)&__dsta[v116] = v117;
    __dsta[v43[14]] = v131[v43[14]];
    *(void *)&__dsta[v43[15]] = *(void *)&v131[v43[15]];
    uint64_t v118 = *(int *)(v87 + 28);
    unint64_t v36 = v135;
    *(void *)((char *)v135 + *(int *)(v87 + 24)) = *(void *)((char *)v86 + *(int *)(v87 + 24));
    *(void *)((char *)v135 + v118) = *(void *)((char *)v86 + v118);
    swift_bridgeObjectRetain();
    id v119 = v115;
    id v120 = v117;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return v36;
}

uint64_t sub_1C0ED4E2C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for FormatContent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(v4 + 40);
  uint64_t v9 = sub_1C151D6DC();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  if (*(void *)(v11 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 20));
  }
  uint64_t v12 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v13 = (id *)(v11 + v12[10]);
  uint64_t v14 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v26 = (void (*)(char *, uint64_t))v7;

    uint64_t v15 = (int *)type metadata accessor for FeedContext();
    uint64_t v16 = (char *)v13 + v15[5];
    uint64_t v17 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
    {
      v26(&v16[*(int *)(v17 + 20)], v6);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v13 + v15[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13 + *(int *)(v14 + 20));
  }
  uint64_t v18 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = (char *)v13 + *(int *)(v18 + 40);
  uint64_t v20 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    uint64_t v21 = &v19[*(int *)(v20 + 24)];
    uint64_t v22 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
    {
      swift_bridgeObjectRelease();
      id v23 = &v21[*(int *)(v22 + 24)];
      uint64_t v24 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v19[*(int *)(v20 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void *sub_1C0ED52CC(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v122 = v11;
  uint64_t v124 = v10;
  v11(v8, v9, v10);
  uint64_t v12 = v6[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v6[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v6[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v6[9];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v6[10];
  uint64_t v132 = a2;
  uint64_t v133 = a1;
  __dst = (char *)a1 + v28;
  uint64_t v29 = (char *)a2 + v28;
  uint64_t v30 = sub_1C151D6DC();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *(void *)((char *)v133 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  *(void *)((char *)v133 + v6[12]) = *(void *)((char *)a2 + v6[12]);
  *(void *)((char *)v133 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  *(void *)((char *)v133 + v6[14]) = *(void *)((char *)a2 + v6[14]);
  *(void *)((char *)v133 + v6[15]) = *(void *)((char *)a2 + v6[15]);
  *(void *)((char *)v133 + v6[16]) = *(void *)((char *)a2 + v6[16]);
  *(void *)((char *)v133 + v6[17]) = *(void *)((char *)a2 + v6[17]);
  uint64_t v34 = a3[5];
  uint64_t v35 = (char *)v133 + v34;
  unint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)((char *)v132 + v34 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37)
  {
    uint64_t v38 = *((void *)v36 + 4);
    *((void *)v35 + 3) = v37;
    *((void *)v35 + 4) = v38;
    (**(void (***)(void *, char *, uint64_t))(v37 - 8))(v35, v36, v37);
  }
  else
  {
    long long v39 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v39;
    *((void *)v35 + 4) = *((void *)v36 + 4);
  }
  *((void *)v35 + 5) = *((void *)v36 + 5);
  v35[48] = v36[48];
  *(_OWORD *)(v35 + 56) = *(_OWORD *)(v36 + 56);
  *(_OWORD *)(v35 + 72) = *(_OWORD *)(v36 + 72);
  uint64_t v40 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v41 = v40[10];
  uint64_t v128 = v36;
  __dsta = v35;
  long long v42 = (void **)&v35[v41];
  long long v43 = (void **)&v36[v41];
  uint64_t v44 = type metadata accessor for FormatTransformKnobs();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    sub_1BFFD9360(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v118 = v45;
    uint64_t v119 = v44;
    uint64_t v126 = v40;
    uint64_t v47 = *v43;
    *long long v42 = *v43;
    uint64_t v48 = (int *)type metadata accessor for FeedContext();
    uint64_t v49 = v48[5];
    long long v50 = (void **)((char *)v42 + v49);
    long long v51 = (void **)((char *)v43 + v49);
    uint64_t v52 = (int *)type metadata accessor for BundleSession();
    uint64_t v53 = *((void *)v52 - 1);
    uint64_t v54 = *(unsigned int (**)(void *, uint64_t, int *))(v53 + 48);
    id v55 = v47;
    if (v54(v51, 1, v52))
    {
      sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      memcpy(v50, v51, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      void *v50 = *v51;
      v122((char *)v50 + v52[5], (char *)v51 + v52[5], v124);
      *((unsigned char *)v50 + v52[6]) = *((unsigned char *)v51 + v52[6]);
      *((unsigned char *)v50 + v52[7]) = *((unsigned char *)v51 + v52[7]);
      *(_OWORD *)((char *)v50 + v52[8]) = *(_OWORD *)((char *)v51 + v52[8]);
      *(void *)((char *)v50 + v52[9]) = *(void *)((char *)v51 + v52[9]);
      *((unsigned char *)v50 + v52[10]) = *((unsigned char *)v51 + v52[10]);
      *((unsigned char *)v50 + v52[11]) = *((unsigned char *)v51 + v52[11]);
      uint64_t v57 = *(void (**)(void *, void, uint64_t, int *))(v53 + 56);
      swift_bridgeObjectRetain();
      v57(v50, 0, 1, v52);
    }
    *((unsigned char *)v42 + v48[6]) = *((unsigned char *)v43 + v48[6]);
    *((unsigned char *)v42 + v48[7]) = *((unsigned char *)v43 + v48[7]);
    *((unsigned char *)v42 + v48[8]) = *((unsigned char *)v43 + v48[8]);
    *((unsigned char *)v42 + v48[9]) = *((unsigned char *)v43 + v48[9]);
    *(void **)((char *)v42 + v48[10]) = *(void **)((char *)v43 + v48[10]);
    *(void **)((char *)v42 + v48[11]) = *(void **)((char *)v43 + v48[11]);
    uint64_t v58 = v48[12];
    uint64_t v59 = (void **)((char *)v42 + v58);
    unint64_t v60 = (void **)((char *)v43 + v58);
    uint64_t v61 = *(uint64_t *)((char *)v43 + v58 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v61 - 1) >= 3)
    {
      *uint64_t v59 = *v60;
      v59[1] = v61;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
    }
    *((unsigned char *)v42 + v48[13]) = *((unsigned char *)v43 + v48[13]);
    uint64_t v62 = v48[14];
    uint64_t v63 = *(void **)((char *)v43 + v62);
    *(void **)((char *)v42 + v62) = v63;
    uint64_t v64 = v48[15];
    uint64_t v65 = (void **)((char *)v42 + v64);
    uint64_t v66 = (void **)((char *)v43 + v64);
    uint64_t v67 = v66[1];
    void *v65 = *v66;
    v65[1] = v67;
    uint64_t v68 = *(int *)(v119 + 20);
    uint64_t v69 = (char *)v42 + v68;
    uint64_t v70 = (char *)v43 + v68;
    long long v71 = *(_OWORD *)((char *)v43 + v68 + 24);
    *(_OWORD *)((char *)v42 + v68 + 24) = v71;
    uint64_t v72 = v71;
    uint64_t v73 = **(void (***)(char *, char *, uint64_t))(v71 - 8);
    id v74 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73(v69, v70, v72);
    (*(void (**)(void **, void, uint64_t, uint64_t))(v118 + 56))(v42, 0, 1, v119);
    uint64_t v40 = v126;
  }
  uint64_t v75 = (int *)type metadata accessor for FormatTransformData();
  *(void **)((char *)v42 + v75[5]) = *(void **)((char *)v43 + v75[5]);
  *(void **)((char *)v42 + v75[6]) = *(void **)((char *)v43 + v75[6]);
  *(void **)((char *)v42 + v75[7]) = *(void **)((char *)v43 + v75[7]);
  *((unsigned char *)v42 + v75[8]) = *((unsigned char *)v43 + v75[8]);
  *((unsigned char *)v42 + v75[9]) = *((unsigned char *)v43 + v75[9]);
  uint64_t v76 = v75[10];
  id v77 = (void **)((char *)v42 + v76);
  uint64_t v78 = (void **)((char *)v43 + v76);
  uint64_t v79 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v80 = *((void *)v79 - 1);
  uint64_t v81 = *(unsigned int (**)(void *, uint64_t, int *))(v80 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v81(v78, 1, v79))
  {
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v77, v78, *(void *)(*(void *)(v82 - 8) + 64));
    uint64_t v83 = __dsta;
  }
  else
  {
    uint64_t v125 = v80;
    uint64_t v127 = v40;
    *id v77 = *v78;
    *((unsigned char *)v77 + 8) = *((unsigned char *)v78 + 8);
    v77[2] = v78[2];
    *((unsigned char *)v77 + 24) = *((unsigned char *)v78 + 24);
    uint64_t v84 = v79[6];
    uint64_t v85 = (void *)((char *)v77 + v84);
    uint64_t v86 = (void *)((char *)v78 + v84);
    uint64_t v87 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v88 = *(void *)(v87 - 8);
    uint64_t v83 = __dsta;
    uint64_t v89 = v77;
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
    {
      sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v85, v86, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      uint64_t v91 = v86[1];
      void *v85 = *v86;
      v85[1] = v91;
      uint64_t v92 = *(int *)(v87 + 24);
      uint64_t v121 = (char *)v86 + v92;
      uint64_t v123 = (char *)v85 + v92;
      uint64_t v93 = sub_1C1516D9C();
      id v120 = v89;
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
      swift_bridgeObjectRetain();
      v94(v123, v121, v93);
      uint64_t v83 = __dsta;
      *(void *)((char *)v85 + *(int *)(v87 + 28)) = *(void *)((char *)v86 + *(int *)(v87 + 28));
      uint64_t v95 = *(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56);
      swift_bridgeObjectRetain();
      v95(v85, 0, 1, v87);
      uint64_t v89 = v120;
    }
    uint64_t v96 = v79[7];
    uint64_t v97 = (char *)v89 + v96;
    uint64_t v98 = (char *)v78 + v96;
    *(void *)uint64_t v97 = *(void *)v98;
    v97[8] = v98[8];
    uint64_t v99 = v79[8];
    uint64_t v100 = (char *)v89 + v99;
    uint64_t v101 = (char *)v78 + v99;
    v100[8] = v101[8];
    *(void *)uint64_t v100 = *(void *)v101;
    uint64_t v102 = v79[9];
    uint64_t v103 = (char *)v89 + v102;
    unint64_t v104 = (char *)v78 + v102;
    *(void *)uint64_t v103 = *(void *)v104;
    v103[8] = v104[8];
    uint64_t v105 = v79[10];
    uint64_t v106 = (char *)v89 + v105;
    uint64_t v107 = (char *)v78 + v105;
    uint64_t v108 = *((void *)v107 + 4);
    uint64_t v40 = v127;
    if (v108 == 1)
    {
      long long v109 = *((_OWORD *)v107 + 1);
      *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v109;
      *((void *)v106 + 4) = *((void *)v107 + 4);
    }
    else
    {
      *(void *)uint64_t v106 = *(void *)v107;
      v106[8] = v107[8];
      *((void *)v106 + 2) = *((void *)v107 + 2);
      v106[24] = v107[24];
      *((void *)v106 + 4) = v108;
      swift_bridgeObjectRetain();
    }
    (*(void (**)(void *, void, uint64_t, int *))(v125 + 56))(v89, 0, 1, v79);
  }
  *(void *)&v83[v40[11]] = *(void *)&v128[v40[11]];
  uint64_t v110 = v40[12];
  uint64_t v111 = *(void **)&v128[v110];
  *(void *)&v83[v110] = v111;
  uint64_t v112 = v40[13];
  long long v113 = *(void **)&v128[v112];
  *(void *)&v83[v112] = v113;
  v83[v40[14]] = v128[v40[14]];
  *(void *)&v83[v40[15]] = *(void *)&v128[v40[15]];
  uint64_t v114 = a3[7];
  *(void *)((char *)v133 + a3[6]) = *(void *)((char *)v132 + a3[6]);
  *(void *)((char *)v133 + v114) = *(void *)((char *)v132 + v114);
  swift_bridgeObjectRetain();
  id v115 = v111;
  id v116 = v113;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return v133;
}

void *sub_1C0ED5D60(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v199 = *(void *)(v9 - 8);
  uint64_t v201 = (void *)v9;
  __dst = *(void (**)(char *, char *))(v199 + 24);
  __dst(v7, v8);
  uint64_t v10 = v5[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v5[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v5[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v5[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[10];
  uint64_t v23 = (char *)a1 + v22;
  v215 = a2;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1C151D6DC();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_6:
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_7:
  *(void *)((char *)a1 + v5[11]) = *(void *)((char *)v215 + v5[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[12]) = *(void *)((char *)v215 + v5[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[13]) = *(void *)((char *)v215 + v5[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[14]) = *(void *)((char *)v215 + v5[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[15]) = *(void *)((char *)v215 + v5[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[16]) = *(void *)((char *)v215 + v5[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[17]) = *(void *)((char *)v215 + v5[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[5];
  uint64_t v32 = (uint64_t)a1 + v31;
  uint64_t v33 = (void *)((char *)v215 + v31);
  uint64_t v34 = *(void *)((char *)v215 + v31 + 24);
  if (*(void *)((char *)a1 + v31 + 24))
  {
    if (v34)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v32, v33);
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1(v32);
  }
  else if (v34)
  {
    *(void *)(v32 + 24) = v34;
    *(void *)(v32 + 32) = v33[4];
    (**(void (***)(uint64_t, char *))(v34 - 8))(v32, (char *)v33);
    goto LABEL_14;
  }
  long long v35 = *(_OWORD *)v33;
  long long v36 = *((_OWORD *)v33 + 1);
  *(void *)(v32 + 32) = v33[4];
  *(_OWORD *)uint64_t v32 = v35;
  *(_OWORD *)(v32 + 16) = v36;
LABEL_14:
  uint64_t v37 = v33[5];
  *(unsigned char *)(v32 + 48) = *((unsigned char *)v33 + 48);
  *(void *)(v32 + 40) = v37;
  *(void *)(v32 + 56) = v33[7];
  *(void *)(v32 + 64) = v33[8];
  *(void *)(v32 + 72) = v33[9];
  *(void *)(v32 + 80) = v33[10];
  uint64_t v213 = type metadata accessor for FormatServiceOptions();
  uint64_t v38 = *(int *)(v213 + 40);
  long long v39 = (void **)(v32 + v38);
  uint64_t v40 = (void **)((char *)v33 + v38);
  uint64_t v41 = type metadata accessor for FormatTransformKnobs();
  uint64_t v205 = *(void *)(v41 - 8);
  long long v42 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v205 + 48);
  int v43 = v42(v39, 1, v41);
  int v44 = v42(v40, 1, v41);
  if (!v43)
  {
    if (v44)
    {
      sub_1C0ED71A4((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatTransformKnobs);
      goto LABEL_20;
    }
    uint64_t v192 = v41;
    v210 = v33;
    uint64_t v54 = *v40;
    id v55 = *v39;
    *long long v39 = *v40;
    id v56 = v54;

    v206 = (int *)type metadata accessor for FeedContext();
    uint64_t v57 = v206[5];
    uint64_t v58 = (void **)((char *)v39 + v57);
    uint64_t v59 = (void **)((char *)v40 + v57);
    unint64_t v60 = (int *)type metadata accessor for BundleSession();
    uint64_t v187 = *((void *)v60 - 1);
    uint64_t v188 = v58;
    uint64_t v61 = *(uint64_t (**)(void *, uint64_t, int *))(v187 + 48);
    LODWORD(v58) = v61(v58, 1, v60);
    int v62 = v61(v59, 1, v60);
    if (v58)
    {
      if (v62)
      {
        sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v64 = *(void *)(*(void *)(v63 - 8) + 64);
        uint64_t v65 = v188;
LABEL_32:
        memcpy(v65, v59, v64);
        goto LABEL_35;
      }
      *uint64_t v188 = *v59;
      (*(void (**)(char *, char *, void *))(v199 + 16))((char *)v188 + v60[5], (char *)v59 + v60[5], v201);
      *((unsigned char *)v188 + v60[6]) = *((unsigned char *)v59 + v60[6]);
      *((unsigned char *)v188 + v60[7]) = *((unsigned char *)v59 + v60[7]);
      *(_OWORD *)((char *)v188 + v60[8]) = *(_OWORD *)((char *)v59 + v60[8]);
      *(void *)((char *)v188 + v60[9]) = *(void *)((char *)v59 + v60[9]);
      *((unsigned char *)v188 + v60[10]) = *((unsigned char *)v59 + v60[10]);
      *((unsigned char *)v188 + v60[11]) = *((unsigned char *)v59 + v60[11]);
      uint64_t v82 = *(void (**)(void *, void, uint64_t, int *))(v187 + 56);
      swift_bridgeObjectRetain();
      v82(v188, 0, 1, v60);
    }
    else
    {
      if (v62)
      {
        sub_1C0ED71A4((uint64_t)v188, (uint64_t (*)(void))type metadata accessor for BundleSession);
        sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v64 = *(void *)(*(void *)(v81 - 8) + 64);
        uint64_t v65 = v188;
        goto LABEL_32;
      }
      *uint64_t v188 = *v59;
      ((void (*)(char *, char *, void *))__dst)((char *)v188 + v60[5], (char *)v59 + v60[5], v201);
      *((unsigned char *)v188 + v60[6]) = *((unsigned char *)v59 + v60[6]);
      *((unsigned char *)v188 + v60[7]) = *((unsigned char *)v59 + v60[7]);
      *(_OWORD *)((char *)v188 + v60[8]) = *(_OWORD *)((char *)v59 + v60[8]);
      *(void *)((char *)v188 + v60[9]) = *(void *)((char *)v59 + v60[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)v188 + v60[10]) = *((unsigned char *)v59 + v60[10]);
      *((unsigned char *)v188 + v60[11]) = *((unsigned char *)v59 + v60[11]);
    }
LABEL_35:
    uint64_t v33 = v210;
    *((unsigned char *)v39 + v206[6]) = *((unsigned char *)v40 + v206[6]);
    *((unsigned char *)v39 + v206[7]) = *((unsigned char *)v40 + v206[7]);
    *((unsigned char *)v39 + v206[8]) = *((unsigned char *)v40 + v206[8]);
    *((unsigned char *)v39 + v206[9]) = *((unsigned char *)v40 + v206[9]);
    *(void **)((char *)v39 + v206[10]) = *(void **)((char *)v40 + v206[10]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void **)((char *)v39 + v206[11]) = *(void **)((char *)v40 + v206[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v83 = v206[12];
    uint64_t v84 = (void **)((char *)v39 + v83);
    uint64_t v85 = (void **)((char *)v40 + v83);
    uint64_t v86 = *(uint64_t *)((char *)v39 + v83 + 8);
    unint64_t v87 = *(unint64_t *)((char *)v40 + v83 + 8) - 1;
    if ((unint64_t)(v86 - 1) >= 3)
    {
      if (v87 >= 3)
      {
        void *v84 = *v85;
        v84[1] = v85[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      sub_1C0ED71A4((uint64_t)v84, (uint64_t (*)(void))sub_1BFF97D54);
    }
    else if (v87 >= 3)
    {
      void *v84 = *v85;
      v84[1] = v85[1];
      swift_bridgeObjectRetain();
LABEL_42:
      *((unsigned char *)v39 + v206[13]) = *((unsigned char *)v40 + v206[13]);
      uint64_t v88 = v206[14];
      uint64_t v89 = *(void **)((char *)v39 + v88);
      uint64_t v90 = *(void **)((char *)v40 + v88);
      *(void **)((char *)v39 + v88) = v90;
      id v91 = v90;

      uint64_t v92 = v206[15];
      uint64_t v93 = (char *)v39 + v92;
      uint64_t v94 = (char *)v40 + v92;
      *(void **)((char *)v39 + v92) = *(void **)((char *)v40 + v92);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v93 + 1) = *((void *)v94 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)v39 + *(int *)(v192 + 20)), (uint64_t *)((char *)v40 + *(int *)(v192 + 20)));
      goto LABEL_43;
    }
    *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
    goto LABEL_42;
  }
  if (v44)
  {
LABEL_20:
    sub_1BFFD9360(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(v39, v40, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_43;
  }
  uint64_t v191 = v41;
  v209 = v33;
  uint64_t v45 = *v40;
  *long long v39 = *v40;
  uint64_t v46 = (int *)type metadata accessor for FeedContext();
  uint64_t v47 = v46[5];
  __dsta = (void **)((char *)v39 + v47);
  uint64_t v48 = (void **)((char *)v40 + v47);
  uint64_t v49 = (int *)type metadata accessor for BundleSession();
  __src = (void *)*((void *)v49 - 1);
  long long v50 = (unsigned int (*)(void *, uint64_t, int *))__src[6];
  id v51 = v45;
  if (v50(v48, 1, v49))
  {
    sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
    memcpy(__dsta, v48, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    void *__dsta = *v48;
    (*(void (**)(char *, char *, void *))(v199 + 16))((char *)__dsta + v49[5], (char *)v48 + v49[5], v201);
    *((unsigned char *)__dsta + v49[6]) = *((unsigned char *)v48 + v49[6]);
    *((unsigned char *)__dsta + v49[7]) = *((unsigned char *)v48 + v49[7]);
    *(_OWORD *)((char *)__dsta + v49[8]) = *(_OWORD *)((char *)v48 + v49[8]);
    *(void *)((char *)__dsta + v49[9]) = *(void *)((char *)v48 + v49[9]);
    *((unsigned char *)__dsta + v49[10]) = *((unsigned char *)v48 + v49[10]);
    *((unsigned char *)__dsta + v49[11]) = *((unsigned char *)v48 + v49[11]);
    uint64_t v66 = (void (*)(void *, void, uint64_t, int *))__src[7];
    swift_bridgeObjectRetain();
    v66(__dsta, 0, 1, v49);
  }
  *((unsigned char *)v39 + v46[6]) = *((unsigned char *)v40 + v46[6]);
  *((unsigned char *)v39 + v46[7]) = *((unsigned char *)v40 + v46[7]);
  *((unsigned char *)v39 + v46[8]) = *((unsigned char *)v40 + v46[8]);
  *((unsigned char *)v39 + v46[9]) = *((unsigned char *)v40 + v46[9]);
  *(void **)((char *)v39 + v46[10]) = *(void **)((char *)v40 + v46[10]);
  *(void **)((char *)v39 + v46[11]) = *(void **)((char *)v40 + v46[11]);
  uint64_t v67 = v46[12];
  uint64_t v68 = (void **)((char *)v39 + v67);
  uint64_t v69 = (void **)((char *)v40 + v67);
  unint64_t v70 = *(unint64_t *)((char *)v40 + v67 + 8) - 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v70 >= 3)
  {
    void *v68 = *v69;
    v68[1] = v69[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
  }
  *((unsigned char *)v39 + v46[13]) = *((unsigned char *)v40 + v46[13]);
  uint64_t v71 = v46[14];
  uint64_t v72 = *(void **)((char *)v40 + v71);
  *(void **)((char *)v39 + v71) = v72;
  uint64_t v73 = v46[15];
  id v74 = (void **)((char *)v39 + v73);
  uint64_t v75 = (void **)((char *)v40 + v73);
  *id v74 = *v75;
  v74[1] = v75[1];
  uint64_t v76 = *(int *)(v191 + 20);
  id v77 = (char *)v39 + v76;
  uint64_t v78 = (char *)v40 + v76;
  uint64_t v79 = *(uint64_t *)((char *)v40 + v76 + 24);
  *((void *)v77 + 3) = v79;
  *((void *)v77 + 4) = *(void **)((char *)v40 + v76 + 32);
  uint64_t v202 = **(void (***)(char *, char *, uint64_t))(v79 - 8);
  id v80 = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v202(v77, v78, v79);
  (*(void (**)(void **, void, uint64_t, uint64_t))(v205 + 56))(v39, 0, 1, v191);
  uint64_t v33 = v209;
LABEL_43:
  uint64_t v95 = (int *)type metadata accessor for FormatTransformData();
  *(void **)((char *)v39 + v95[5]) = *(void **)((char *)v40 + v95[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v39 + v95[6]) = *(void **)((char *)v40 + v95[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v39 + v95[7]) = *(void **)((char *)v40 + v95[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v39 + v95[8]) = *((unsigned char *)v40 + v95[8]);
  *((unsigned char *)v39 + v95[9]) = *((unsigned char *)v40 + v95[9]);
  uint64_t v96 = v95[10];
  uint64_t v97 = (uint64_t)v39 + v96;
  uint64_t v98 = (char *)v40 + v96;
  uint64_t v99 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v100 = *((void *)v99 - 1);
  uint64_t v101 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v100 + 48);
  LODWORD(v95) = v101(v97, 1, v99);
  int v102 = v101((uint64_t)v98, 1, v99);
  if (!v95)
  {
    if (v102)
    {
      sub_1C0ED71A4(v97, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
      goto LABEL_49;
    }
    v212 = v33;
    uint64_t v113 = *(void *)v98;
    *(unsigned char *)(v97 + 8) = v98[8];
    *(void *)uint64_t v97 = v113;
    uint64_t v114 = *((void *)v98 + 2);
    *(unsigned char *)(v97 + 24) = v98[24];
    *(void *)(v97 + 16) = v114;
    uint64_t v115 = v99[6];
    id v116 = (void *)(v97 + v115);
    uint64_t v117 = &v98[v115];
    uint64_t v118 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v200 = *(void *)(v118 - 8);
    uint64_t v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v200 + 48);
    uint64_t v207 = v116;
    LODWORD(v116) = v119((char *)v116, 1, v118);
    v203 = v117;
    int v120 = v119(v117, 1, v118);
    if (v116)
    {
      if (v120)
      {
        sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        size_t v122 = *(void *)(*(void *)(v121 - 8) + 64);
        uint64_t v123 = v207;
LABEL_62:
        memcpy(v123, v117, v122);
        goto LABEL_65;
      }
      *uint64_t v207 = *(void *)v117;
      v207[1] = *((void *)v117 + 1);
      uint64_t v155 = *(int *)(v118 + 24);
      uint64_t v194 = &v117[v155];
      __dstc = (char *)v207 + v155;
      uint64_t v156 = sub_1C1516D9C();
      uint64_t v189 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
      swift_bridgeObjectRetain();
      v189(__dstc, v194, v156);
      *(void *)((char *)v207 + *(int *)(v118 + 28)) = *(void *)&v117[*(int *)(v118 + 28)];
      uint64_t v157 = *(void (**)(void *, void, uint64_t, uint64_t))(v200 + 56);
      swift_bridgeObjectRetain();
      v157(v207, 0, 1, v118);
    }
    else
    {
      if (v120)
      {
        sub_1C0ED71A4((uint64_t)v207, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
        sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        size_t v122 = *(void *)(*(void *)(v154 - 8) + 64);
        uint64_t v123 = v207;
        goto LABEL_62;
      }
      *uint64_t v207 = *(void *)v117;
      v207[1] = *((void *)v117 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v158 = *(int *)(v118 + 24);
      uint64_t v159 = (char *)v207 + v158;
      uint64_t v160 = &v117[v158];
      uint64_t v161 = sub_1C1516D9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 24))(v159, v160, v161);
      *(void *)((char *)v207 + *(int *)(v118 + 28)) = *(void *)&v203[*(int *)(v118 + 28)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_65:
    uint64_t v33 = v212;
    uint64_t v162 = v99[7];
    uint64_t v163 = v97 + v162;
    uint64_t v164 = &v98[v162];
    uint64_t v165 = *(void *)v164;
    *(unsigned char *)(v163 + 8) = v164[8];
    *(void *)uint64_t v163 = v165;
    uint64_t v166 = v99[8];
    uint64_t v167 = v97 + v166;
    uint64_t v168 = &v98[v166];
    uint64_t v169 = *(void *)v168;
    *(unsigned char *)(v167 + 8) = v168[8];
    *(void *)uint64_t v167 = v169;
    uint64_t v170 = v99[9];
    uint64_t v171 = v97 + v170;
    uint64_t v172 = &v98[v170];
    uint64_t v173 = *(void *)v172;
    *(unsigned char *)(v171 + 8) = v172[8];
    *(void *)uint64_t v171 = v173;
    uint64_t v174 = v99[10];
    uint64_t v175 = v97 + v174;
    uint64_t v176 = &v98[v174];
    uint64_t v177 = *(void *)(v97 + v174 + 32);
    uint64_t v178 = *(void *)&v98[v174 + 32];
    if (v177 == 1)
    {
      if (v178 == 1)
      {
        long long v179 = *(_OWORD *)v176;
        long long v180 = *((_OWORD *)v176 + 1);
        *(void *)(v175 + 32) = *((void *)v176 + 4);
        *(_OWORD *)uint64_t v175 = v179;
        *(_OWORD *)(v175 + 16) = v180;
      }
      else
      {
        uint64_t v183 = *(void *)v176;
        *(unsigned char *)(v175 + 8) = v176[8];
        *(void *)uint64_t v175 = v183;
        uint64_t v184 = *((void *)v176 + 2);
        *(unsigned char *)(v175 + 24) = v176[24];
        *(void *)(v175 + 16) = v184;
        *(void *)(v175 + 32) = *((void *)v176 + 4);
        swift_bridgeObjectRetain();
      }
    }
    else if (v178 == 1)
    {
      sub_1C0921044(v175);
      uint64_t v181 = *((void *)v176 + 4);
      long long v182 = *((_OWORD *)v176 + 1);
      *(_OWORD *)uint64_t v175 = *(_OWORD *)v176;
      *(_OWORD *)(v175 + 16) = v182;
      *(void *)(v175 + 32) = v181;
    }
    else
    {
      uint64_t v185 = *(void *)v176;
      *(unsigned char *)(v175 + 8) = v176[8];
      *(void *)uint64_t v175 = v185;
      uint64_t v186 = *((void *)v176 + 2);
      *(unsigned char *)(v175 + 24) = v176[24];
      *(void *)(v175 + 16) = v186;
      *(void *)(v175 + 32) = *((void *)v176 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    goto LABEL_50;
  }
  if (v102)
  {
LABEL_49:
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy((void *)v97, v98, *(void *)(*(void *)(v111 - 8) + 64));
LABEL_50:
    uint64_t v112 = (int *)v213;
    goto LABEL_59;
  }
  v211 = v33;
  uint64_t v103 = *(void *)v98;
  *(unsigned char *)(v97 + 8) = v98[8];
  *(void *)uint64_t v97 = v103;
  uint64_t v104 = *((void *)v98 + 2);
  *(unsigned char *)(v97 + 24) = v98[24];
  *(void *)(v97 + 16) = v104;
  uint64_t v105 = v99[6];
  uint64_t v106 = (void *)(v97 + v105);
  uint64_t v107 = &v98[v105];
  uint64_t v108 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v109 = *(void *)(v108 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
  {
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
  }
  else
  {
    *uint64_t v106 = *(void *)v107;
    v106[1] = *((void *)v107 + 1);
    uint64_t v124 = *(int *)(v108 + 24);
    v204 = &v107[v124];
    uint64_t v208 = (char *)v106 + v124;
    __dstb = (void *)sub_1C1516D9C();
    uint64_t v193 = *(void (**)(char *, char *, void *))(*(__dstb - 1) + 16);
    swift_bridgeObjectRetain();
    v193(v208, v204, __dstb);
    *(void *)((char *)v106 + *(int *)(v108 + 28)) = *(void *)&v107[*(int *)(v108 + 28)];
    uint64_t v125 = *(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56);
    swift_bridgeObjectRetain();
    v125(v106, 0, 1, v108);
  }
  uint64_t v126 = v99[7];
  uint64_t v127 = v97 + v126;
  uint64_t v128 = &v98[v126];
  uint64_t v129 = *(void *)v128;
  *(unsigned char *)(v127 + 8) = v128[8];
  *(void *)uint64_t v127 = v129;
  uint64_t v130 = v99[8];
  uint64_t v131 = v97 + v130;
  uint64_t v132 = &v98[v130];
  uint64_t v133 = *(void *)v132;
  *(unsigned char *)(v131 + 8) = v132[8];
  *(void *)uint64_t v131 = v133;
  uint64_t v134 = v99[9];
  uint64_t v135 = v97 + v134;
  uint64_t v136 = &v98[v134];
  uint64_t v137 = *(void *)v136;
  *(unsigned char *)(v135 + 8) = v136[8];
  *(void *)uint64_t v135 = v137;
  uint64_t v138 = v99[10];
  uint64_t v139 = v97 + v138;
  uint64_t v140 = &v98[v138];
  uint64_t v33 = v211;
  uint64_t v112 = (int *)v213;
  if (*((void *)v140 + 4) == 1)
  {
    long long v141 = *(_OWORD *)v140;
    long long v142 = *((_OWORD *)v140 + 1);
    *(void *)(v139 + 32) = *((void *)v140 + 4);
    *(_OWORD *)uint64_t v139 = v141;
    *(_OWORD *)(v139 + 16) = v142;
  }
  else
  {
    uint64_t v143 = *(void *)v140;
    *(unsigned char *)(v139 + 8) = v140[8];
    *(void *)uint64_t v139 = v143;
    uint64_t v144 = *((void *)v140 + 2);
    *(unsigned char *)(v139 + 24) = v140[24];
    *(void *)(v139 + 16) = v144;
    *(void *)(v139 + 32) = *((void *)v140 + 4);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v100 + 56))(v97, 0, 1, v99);
LABEL_59:
  *(void *)(v32 + v112[11]) = *(uint64_t *)((char *)v33 + v112[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v145 = v112[12];
  uint64_t v146 = *(void **)((char *)v33 + v145);
  uint64_t v147 = *(void **)(v32 + v145);
  *(void *)(v32 + v145) = v146;
  id v148 = v146;

  uint64_t v149 = v112[13];
  uint64_t v150 = *(void **)((char *)v33 + v149);
  unint64_t v151 = *(void **)(v32 + v149);
  *(void *)(v32 + v149) = v150;
  id v152 = v150;

  *(unsigned char *)(v32 + v112[14]) = *((unsigned char *)v33 + v112[14]);
  *(void *)(v32 + v112[15]) = *(uint64_t *)((char *)v33 + v112[15]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)v215 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v215 + a3[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1C0ED71A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1C0ED7204(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v72 = *(void (**)(char *, char *))(*(void *)(v10 - 8) + 32);
  uint64_t v73 = v10;
  v72(v8, v9);
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  uint64_t v11 = v6[10];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1C151D6DC();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
  *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
  *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
  *(void *)((char *)a1 + v6[16]) = *(void *)((char *)a2 + v6[16]);
  *(void *)((char *)a1 + v6[17]) = *(void *)((char *)a2 + v6[17]);
  uint64_t v17 = a3[5];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  long long v20 = *(_OWORD *)((char *)a2 + v17 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)((char *)a2 + v17);
  *((_OWORD *)v18 + 1) = v20;
  uint64_t v21 = *(void *)((char *)a2 + v17 + 40);
  *((void *)v18 + 4) = *(void *)((char *)a2 + v17 + 32);
  *((void *)v18 + 5) = v21;
  v18[48] = *((unsigned char *)a2 + v17 + 48);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)((char *)a2 + v17 + 56);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)((char *)a2 + v17 + 72);
  uint64_t v22 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v23 = v22[10];
  uint64_t v24 = &v18[v23];
  uint64_t v25 = &v19[v23];
  uint64_t v26 = type metadata accessor for FormatTransformKnobs();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BFFD9360(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v69 = v27;
    uint64_t v75 = v22;
    id v77 = a3;
    *(void *)uint64_t v24 = *(void *)v25;
    int v29 = (int *)type metadata accessor for FeedContext();
    uint64_t v30 = v29[5];
    __dst = &v24[v30];
    uint64_t v31 = &v25[v30];
    uint64_t v32 = (int *)type metadata accessor for BundleSession();
    uint64_t v66 = *((void *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v66 + 48))(v31, 1, v32))
    {
      sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      memcpy(__dst, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      *(void *)__dst = *(void *)v31;
      ((void (*)(char *, char *, uint64_t))v72)(&__dst[v32[5]], &v31[v32[5]], v73);
      __dst[v32[6]] = v31[v32[6]];
      __dst[v32[7]] = v31[v32[7]];
      *(_OWORD *)&__dst[v32[8]] = *(_OWORD *)&v31[v32[8]];
      *(void *)&__dst[v32[9]] = *(void *)&v31[v32[9]];
      __dst[v32[10]] = v31[v32[10]];
      __dst[v32[11]] = v31[v32[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v66 + 56))(__dst, 0, 1, v32);
    }
    v24[v29[6]] = v25[v29[6]];
    v24[v29[7]] = v25[v29[7]];
    v24[v29[8]] = v25[v29[8]];
    v24[v29[9]] = v25[v29[9]];
    *(void *)&v24[v29[10]] = *(void *)&v25[v29[10]];
    *(void *)&v24[v29[11]] = *(void *)&v25[v29[11]];
    *(_OWORD *)&v24[v29[12]] = *(_OWORD *)&v25[v29[12]];
    v24[v29[13]] = v25[v29[13]];
    *(void *)&v24[v29[14]] = *(void *)&v25[v29[14]];
    *(_OWORD *)&v24[v29[15]] = *(_OWORD *)&v25[v29[15]];
    uint64_t v34 = *(int *)(v26 + 20);
    long long v35 = &v24[v34];
    long long v36 = &v25[v34];
    long long v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)long long v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v37;
    *((void *)v35 + 4) = *((void *)v36 + 4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v24, 0, 1, v26);
    uint64_t v22 = v75;
    a3 = v77;
  }
  uint64_t v38 = (int *)type metadata accessor for FormatTransformData();
  *(void *)&v24[v38[5]] = *(void *)&v25[v38[5]];
  *(void *)&v24[v38[6]] = *(void *)&v25[v38[6]];
  *(void *)&v24[v38[7]] = *(void *)&v25[v38[7]];
  v24[v38[8]] = v25[v38[8]];
  v24[v38[9]] = v25[v38[9]];
  uint64_t v39 = v38[10];
  uint64_t v40 = &v24[v39];
  uint64_t v41 = &v25[v39];
  long long v42 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v43 = *((void *)v42 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
  {
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v76 = v22;
    uint64_t v78 = a3;
    *(void *)uint64_t v40 = *(void *)v41;
    v40[8] = v41[8];
    *((void *)v40 + 2) = *((void *)v41 + 2);
    v40[24] = v41[24];
    uint64_t v45 = v42[6];
    id v74 = &v40[v45];
    uint64_t v46 = &v41[v45];
    uint64_t v47 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v71 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v46, 1, v47))
    {
      sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v74, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      *(_OWORD *)id v74 = *(_OWORD *)v46;
      uint64_t v49 = *(int *)(v47 + 24);
      __dsta = &v46[v49];
      unint64_t v70 = &v74[v49];
      uint64_t v50 = sub_1C1516D9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v70, __dsta, v50);
      *(void *)&v74[*(int *)(v47 + 28)] = *(void *)&v46[*(int *)(v47 + 28)];
      (*(void (**)(void))(v71 + 56))();
    }
    uint64_t v22 = v76;
    a3 = v78;
    uint64_t v51 = v42[7];
    uint64_t v52 = &v40[v51];
    uint64_t v53 = &v41[v51];
    *(void *)uint64_t v52 = *(void *)v53;
    v52[8] = v53[8];
    uint64_t v54 = v42[8];
    id v55 = &v40[v54];
    id v56 = &v41[v54];
    v55[8] = v56[8];
    *(void *)id v55 = *(void *)v56;
    uint64_t v57 = v42[9];
    uint64_t v58 = &v40[v57];
    uint64_t v59 = &v41[v57];
    *(void *)uint64_t v58 = *(void *)v59;
    v58[8] = v59[8];
    uint64_t v60 = v42[10];
    uint64_t v61 = &v40[v60];
    int v62 = &v41[v60];
    long long v63 = *((_OWORD *)v62 + 1);
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v63;
    *((void *)v61 + 4) = *((void *)v62 + 4);
    (*(void (**)(char *, void, uint64_t, int *))(v43 + 56))(v40, 0, 1, v42);
  }
  *(void *)&v18[v22[11]] = *(void *)&v19[v22[11]];
  *(void *)&v18[v22[12]] = *(void *)&v19[v22[12]];
  *(void *)&v18[v22[13]] = *(void *)&v19[v22[13]];
  v18[v22[14]] = v19[v22[14]];
  *(void *)&v18[v22[15]] = *(void *)&v19[v22[15]];
  uint64_t v64 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v64) = *(void *)((char *)a2 + v64);
  return a1;
}

void *sub_1C0ED7A7C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v165 = *(void *)(v10 - 8);
  uint64_t v168 = v10;
  uint64_t v162 = *(void (**)(char *, char *))(v165 + 40);
  v162(v8, v9);
  uint64_t v11 = v6[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v6[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v6[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v6[9];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v6[10];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_1C151D6DC();
  uint64_t v35 = *(void *)(v34 - 8);
  long long v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_6:
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
LABEL_7:
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[16]) = *(void *)((char *)a2 + v6[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[17]) = *(void *)((char *)a2 + v6[17]);
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[5];
  uint64_t v41 = (uint64_t)a1 + v40;
  uint64_t v174 = a2;
  long long v42 = (char *)a2 + v40;
  if (*(void *)((char *)a1 + v40 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v41);
  }
  long long v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  uint64_t v44 = *((void *)v42 + 5);
  *(void *)(v41 + 32) = *((void *)v42 + 4);
  *(void *)(v41 + 40) = v44;
  *(unsigned char *)(v41 + 48) = v42[48];
  *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
  *(void *)(v41 + 72) = *((void *)v42 + 9);
  *(void *)(v41 + 80) = *((void *)v42 + 10);
  uint64_t v173 = type metadata accessor for FormatServiceOptions();
  uint64_t v45 = *(int *)(v173 + 40);
  uint64_t v46 = (char *)(v41 + v45);
  uint64_t v47 = &v42[v45];
  uint64_t v48 = type metadata accessor for FormatTransformKnobs();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  __dst = (int *)v48;
  int v52 = v50(v47, 1, v48);
  uint64_t v172 = v42;
  if (v51)
  {
    if (!v52)
    {
      *(void *)uint64_t v46 = *(void *)v47;
      uint64_t v53 = (int *)type metadata accessor for FeedContext();
      uint64_t v54 = v53[5];
      id v55 = &v46[v54];
      id v56 = &v47[v54];
      uint64_t v57 = (int *)type metadata accessor for BundleSession();
      uint64_t v163 = *((void *)v57 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v163 + 48))(v56, 1, v57))
      {
        sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        *(void *)id v55 = *(void *)v56;
        (*(void (**)(char *, char *, uint64_t))(v165 + 32))(&v55[v57[5]], &v56[v57[5]], v168);
        v55[v57[6]] = v56[v57[6]];
        v55[v57[7]] = v56[v57[7]];
        *(_OWORD *)&v55[v57[8]] = *(_OWORD *)&v56[v57[8]];
        *(void *)&v55[v57[9]] = *(void *)&v56[v57[9]];
        v55[v57[10]] = v56[v57[10]];
        v55[v57[11]] = v56[v57[11]];
        (*(void (**)(char *, void, uint64_t, int *))(v163 + 56))(v55, 0, 1, v57);
      }
      v46[v53[6]] = v47[v53[6]];
      v46[v53[7]] = v47[v53[7]];
      v46[v53[8]] = v47[v53[8]];
      v46[v53[9]] = v47[v53[9]];
      *(void *)&v46[v53[10]] = *(void *)&v47[v53[10]];
      *(void *)&v46[v53[11]] = *(void *)&v47[v53[11]];
      *(_OWORD *)&v46[v53[12]] = *(_OWORD *)&v47[v53[12]];
      v46[v53[13]] = v47[v53[13]];
      *(void *)&v46[v53[14]] = *(void *)&v47[v53[14]];
      *(_OWORD *)&v46[v53[15]] = *(_OWORD *)&v47[v53[15]];
      uint64_t v70 = __dst[5];
      uint64_t v71 = &v46[v70];
      uint64_t v72 = &v47[v70];
      long long v73 = *((_OWORD *)v72 + 1);
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v73;
      *((void *)v71 + 4) = *((void *)v72 + 4);
      (*(void (**)(char *, void, uint64_t))(v49 + 56))(v46, 0, 1);
      goto LABEL_22;
    }
LABEL_15:
    sub_1BFFD9360(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(v46, v47, *(void *)(*(void *)(v59 - 8) + 64));
LABEL_22:
    id v74 = v174;
    goto LABEL_23;
  }
  if (v52)
  {
    sub_1C0ED71A4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatTransformKnobs);
    goto LABEL_15;
  }
  uint64_t v60 = *(void **)v46;
  *(void *)uint64_t v46 = *(void *)v47;

  uint64_t v161 = (int *)type metadata accessor for FeedContext();
  uint64_t v61 = v161[5];
  int v62 = &v46[v61];
  long long v63 = &v47[v61];
  uint64_t v64 = (int *)type metadata accessor for BundleSession();
  uint64_t v159 = *((void *)v64 - 1);
  uint64_t v160 = v62;
  uint64_t v65 = *(uint64_t (**)(char *, uint64_t, int *))(v159 + 48);
  LODWORD(v62) = v65(v62, 1, v64);
  int v66 = v65(v63, 1, v64);
  if (v62)
  {
    if (v66)
    {
      sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      size_t v68 = *(void *)(*(void *)(v67 - 8) + 64);
      uint64_t v69 = v160;
LABEL_39:
      memcpy(v69, v63, v68);
      goto LABEL_46;
    }
    void *v160 = *(void *)v63;
    (*(void (**)(char *, char *, uint64_t))(v165 + 32))((char *)v160 + v64[5], &v63[v64[5]], v168);
    *((unsigned char *)v160 + v64[6]) = v63[v64[6]];
    *((unsigned char *)v160 + v64[7]) = v63[v64[7]];
    *(_OWORD *)((char *)v160 + v64[8]) = *(_OWORD *)&v63[v64[8]];
    *(void *)((char *)v160 + v64[9]) = *(void *)&v63[v64[9]];
    *((unsigned char *)v160 + v64[10]) = v63[v64[10]];
    *((unsigned char *)v160 + v64[11]) = v63[v64[11]];
    (*(void (**)(void *, void, uint64_t, int *))(v159 + 56))(v160, 0, 1, v64);
  }
  else
  {
    if (v66)
    {
      sub_1C0ED71A4((uint64_t)v160, (uint64_t (*)(void))type metadata accessor for BundleSession);
      sub_1BFFD9360(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      size_t v68 = *(void *)(*(void *)(v122 - 8) + 64);
      uint64_t v69 = v160;
      goto LABEL_39;
    }
    void *v160 = *(void *)v63;
    ((void (*)(char *, char *, uint64_t))v162)((char *)v160 + v64[5], &v63[v64[5]], v168);
    *((unsigned char *)v160 + v64[6]) = v63[v64[6]];
    *((unsigned char *)v160 + v64[7]) = v63[v64[7]];
    *(_OWORD *)((char *)v160 + v64[8]) = *(_OWORD *)&v63[v64[8]];
    *(void *)((char *)v160 + v64[9]) = *(void *)&v63[v64[9]];
    swift_bridgeObjectRelease();
    *((unsigned char *)v160 + v64[10]) = v63[v64[10]];
    *((unsigned char *)v160 + v64[11]) = v63[v64[11]];
  }
LABEL_46:
  id v74 = v174;
  v46[v161[6]] = v47[v161[6]];
  v46[v161[7]] = v47[v161[7]];
  v46[v161[8]] = v47[v161[8]];
  v46[v161[9]] = v47[v161[9]];
  *(void *)&v46[v161[10]] = *(void *)&v47[v161[10]];
  swift_bridgeObjectRelease();
  *(void *)&v46[v161[11]] = *(void *)&v47[v161[11]];
  swift_bridgeObjectRelease();
  uint64_t v128 = v161[12];
  uint64_t v129 = &v46[v128];
  uint64_t v130 = &v47[v128];
  if ((unint64_t)(*(void *)&v46[v128 + 8] - 1) >= 3)
  {
    uint64_t v131 = *((void *)v130 + 1);
    if ((unint64_t)(v131 - 1) >= 3)
    {
      *(void *)uint64_t v129 = *(void *)v130;
      *((void *)v129 + 1) = v131;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_1C0ED71A4((uint64_t)v129, (uint64_t (*)(void))sub_1BFF97D54);
  }
  *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
LABEL_51:
  v46[v161[13]] = v47[v161[13]];
  uint64_t v132 = v161[14];
  uint64_t v133 = *(void **)&v46[v132];
  *(void *)&v46[v132] = *(void *)&v47[v132];

  uint64_t v134 = v161[15];
  uint64_t v135 = &v46[v134];
  uint64_t v136 = &v47[v134];
  *(void *)&v46[v134] = *(void *)&v47[v134];
  swift_bridgeObjectRelease();
  *((void *)v135 + 1) = *((void *)v136 + 1);
  swift_bridgeObjectRelease();
  uint64_t v137 = __dst[5];
  uint64_t v138 = &v46[v137];
  uint64_t v139 = &v47[v137];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46[v137]);
  long long v140 = *((_OWORD *)v139 + 1);
  *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
  *((_OWORD *)v138 + 1) = v140;
  *((void *)v138 + 4) = *((void *)v139 + 4);
LABEL_23:
  uint64_t v75 = (int *)type metadata accessor for FormatTransformData();
  *(void *)&v46[v75[5]] = *(void *)&v47[v75[5]];
  swift_bridgeObjectRelease();
  *(void *)&v46[v75[6]] = *(void *)&v47[v75[6]];
  swift_bridgeObjectRelease();
  *(void *)&v46[v75[7]] = *(void *)&v47[v75[7]];
  swift_bridgeObjectRelease();
  v46[v75[8]] = v47[v75[8]];
  v46[v75[9]] = v47[v75[9]];
  uint64_t v76 = v75[10];
  uint64_t v77 = (uint64_t)&v46[v76];
  uint64_t v78 = &v47[v76];
  uint64_t v79 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v80 = *((void *)v79 - 1);
  uint64_t v81 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v80 + 48);
  LODWORD(v75) = v81(v77, 1, v79);
  int v82 = v81((uint64_t)v78, 1, v79);
  if (!v75)
  {
    if (v82)
    {
      sub_1C0ED71A4(v77, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
      goto LABEL_29;
    }
    *(void *)uint64_t v77 = *(void *)v78;
    *(unsigned char *)(v77 + 8) = v78[8];
    *(void *)(v77 + 16) = *((void *)v78 + 2);
    *(unsigned char *)(v77 + 24) = v78[24];
    uint64_t v93 = v79[6];
    uint64_t v94 = v77 + v93;
    uint64_t v95 = &v78[v93];
    uint64_t v96 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v166 = *(void *)(v96 - 8);
    uint64_t v169 = v94;
    uint64_t v97 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v166 + 48);
    LODWORD(v94) = v97(v94, 1, v96);
    int v98 = v97((uint64_t)v95, 1, v96);
    if (v94)
    {
      if (!v98)
      {
        *(_OWORD *)uint64_t v169 = *(_OWORD *)v95;
        uint64_t v124 = *(int *)(v96 + 24);
        uint64_t v125 = v169 + v124;
        uint64_t v126 = &v95[v124];
        uint64_t v127 = sub_1C1516D9C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
        *(void *)(v169 + *(int *)(v96 + 28)) = *(void *)&v95[*(int *)(v96 + 28)];
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v166 + 56))(v169, 0, 1, v96);
        goto LABEL_53;
      }
      sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      size_t v100 = *(void *)(*(void *)(v99 - 8) + 64);
      uint64_t v101 = (void *)v169;
    }
    else
    {
      if (!v98)
      {
        *(void *)uint64_t v169 = *(void *)v95;
        *(void *)(v169 + 8) = *((void *)v95 + 1);
        swift_bridgeObjectRelease();
        uint64_t v141 = *(int *)(v96 + 24);
        uint64_t v142 = v169 + v141;
        uint64_t v143 = &v95[v141];
        uint64_t v144 = sub_1C1516D9C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v144 - 8) + 40))(v142, v143, v144);
        *(void *)(v169 + *(int *)(v96 + 28)) = *(void *)&v95[*(int *)(v96 + 28)];
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
      sub_1C0ED71A4(v169, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
      sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      size_t v100 = *(void *)(*(void *)(v123 - 8) + 64);
      uint64_t v101 = (void *)v169;
    }
    memcpy(v101, v95, v100);
LABEL_53:
    uint64_t v89 = v172;
    uint64_t v145 = v79[7];
    uint64_t v146 = v77 + v145;
    uint64_t v147 = &v78[v145];
    *(void *)uint64_t v146 = *(void *)v147;
    *(unsigned char *)(v146 + 8) = v147[8];
    uint64_t v148 = v79[8];
    uint64_t v149 = v77 + v148;
    uint64_t v150 = &v78[v148];
    *(unsigned char *)(v149 + 8) = v150[8];
    *(void *)uint64_t v149 = *(void *)v150;
    uint64_t v151 = v79[9];
    uint64_t v152 = v77 + v151;
    uint64_t v153 = &v78[v151];
    *(void *)uint64_t v152 = *(void *)v153;
    *(unsigned char *)(v152 + 8) = v153[8];
    uint64_t v154 = v79[10];
    uint64_t v155 = v77 + v154;
    uint64_t v156 = &v78[v154];
    id v74 = v174;
    if (*(void *)(v77 + v154 + 32) != 1)
    {
      uint64_t v157 = *((void *)v156 + 4);
      if (v157 != 1)
      {
        *(void *)uint64_t v155 = *(void *)v156;
        *(unsigned char *)(v155 + 8) = v156[8];
        *(void *)(v155 + 16) = *((void *)v156 + 2);
        *(unsigned char *)(v155 + 24) = v156[24];
        *(void *)(v155 + 32) = v157;
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      sub_1C0921044(v155);
    }
    long long v158 = *((_OWORD *)v156 + 1);
    *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
    *(_OWORD *)(v155 + 16) = v158;
    *(void *)(v155 + 32) = *((void *)v156 + 4);
LABEL_30:
    uint64_t v92 = (int *)v173;
    goto LABEL_36;
  }
  if (v82)
  {
LABEL_29:
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy((void *)v77, v78, *(void *)(*(void *)(v91 - 8) + 64));
    uint64_t v89 = v172;
    goto LABEL_30;
  }
  *(void *)uint64_t v77 = *(void *)v78;
  *(unsigned char *)(v77 + 8) = v78[8];
  *(void *)(v77 + 16) = *((void *)v78 + 2);
  *(unsigned char *)(v77 + 24) = v78[24];
  uint64_t v83 = v79[6];
  __dsta = (_OWORD *)(v77 + v83);
  uint64_t v84 = &v78[v83];
  uint64_t v85 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v86 = *(void *)(v85 - 8);
  unint64_t v87 = v84;
  int v88 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85);
  uint64_t v89 = v172;
  if (v88)
  {
    sub_1BFFD9360(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(__dsta, v87, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    _OWORD *__dsta = *v87;
    uint64_t v102 = *(int *)(v85 + 24);
    uint64_t v164 = (char *)v87 + v102;
    uint64_t v167 = (char *)__dsta + v102;
    uint64_t v103 = sub_1C1516D9C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v167, v164, v103);
    *(void *)((char *)__dsta + *(int *)(v85 + 28)) = *(void *)((char *)v87 + *(int *)(v85 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v86 + 56))(__dsta, 0, 1, v85);
  }
  uint64_t v92 = (int *)v173;
  uint64_t v104 = v79[7];
  uint64_t v105 = v77 + v104;
  uint64_t v106 = &v78[v104];
  *(void *)uint64_t v105 = *(void *)v106;
  *(unsigned char *)(v105 + 8) = v106[8];
  uint64_t v107 = v79[8];
  uint64_t v108 = v77 + v107;
  uint64_t v109 = &v78[v107];
  *(unsigned char *)(v108 + 8) = v109[8];
  *(void *)uint64_t v108 = *(void *)v109;
  uint64_t v110 = v79[9];
  uint64_t v111 = v77 + v110;
  uint64_t v112 = &v78[v110];
  *(void *)uint64_t v111 = *(void *)v112;
  *(unsigned char *)(v111 + 8) = v112[8];
  uint64_t v113 = v79[10];
  uint64_t v114 = v77 + v113;
  uint64_t v115 = &v78[v113];
  long long v116 = *((_OWORD *)v115 + 1);
  *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
  *(_OWORD *)(v114 + 16) = v116;
  *(void *)(v114 + 32) = *((void *)v115 + 4);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v80 + 56))(v77, 0, 1, v79);
  id v74 = v174;
LABEL_36:
  *(void *)(v41 + v92[11]) = *(void *)&v89[v92[11]];
  swift_bridgeObjectRelease();
  uint64_t v117 = v92[12];
  uint64_t v118 = *(void **)(v41 + v117);
  *(void *)(v41 + v117) = *(void *)&v89[v117];

  uint64_t v119 = v92[13];
  int v120 = *(void **)(v41 + v119);
  *(void *)(v41 + v119) = *(void *)&v89[v119];

  *(unsigned char *)(v41 + v92[14]) = v89[v92[14]];
  *(void *)(v41 + v92[15]) = *(void *)&v89[v92[15]];
  swift_release();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)v74 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v74 + a3[7]);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1C0ED8BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0ED8BB8);
}

uint64_t sub_1C0ED8BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for FormatServiceOptions();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1C0ED8CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0ED8CE0);
}

uint64_t sub_1C0ED8CE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FormatContent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for FormatServiceOptions();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1C0ED8DF0()
{
  uint64_t result = type metadata accessor for FormatContent(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FormatServiceOptions();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0ED8ED0(uint64_t a1, void *a2)
{
  return sub_1C0ED97CC(a2);
}

void sub_1C0ED8EFC(void **a1, uint64_t a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image);
  *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image) = *a1;
  id v4 = v2;
}

uint64_t sub_1C0ED8F3C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_filePath);
  if (v1)
  {
    unint64_t v2 = v1;
    sub_1C151E62C();

    sub_1BFEFE008(0, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](0);
    sub_1BFEFE008(v4, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151911C();
  }
}

void sub_1C0ED906C(void *a1@<X8>)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithContentsOfFile_, v3);

  *a1 = v4;
}

void sub_1C0ED90F8(void *a1@<X1>, void *a2@<X8>)
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C15198DC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB93C7A8);
  swift_unknownObjectRetain_n();
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v7 = 136315138;
    id v8 = objc_msgSend(a1, sel_identifier);
    uint64_t v9 = sub_1C151E62C();
    unint64_t v11 = v10;

    sub_1BFDA76EC(v9, v11, &v13);
    sub_1C151FE1C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v5, v6, "Failed downloading asset handle for Puzzle ID: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v12, -1, -1);
    MEMORY[0x1C18C9B00](v7, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  *a2 = 0;
}

id SharingPuzzleImageActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingPuzzleImageActivityItemSource.init()()
{
}

id SharingPuzzleImageActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id SharingPuzzleImageActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image))
  {
    os_log_type_t v6 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image);
    unint64_t v8 = sub_1BFC3D764();
    *(void *)&long long v7 = v6;
    sub_1BFF993A8(&v7, (_OWORD *)a1);
    uint64_t v3 = v6;
  }
  else
  {
    unint64_t v4 = sub_1C09E2960();
    uint64_t v3 = 0;
    *(void *)(a1 + 24) = v4;
    *(void *)a1 = MEMORY[0x1E4FBC840] + 8;
  }
  return v3;
}

void SharingPuzzleImageActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  if (!a1) {
    goto LABEL_9;
  }
  if (sub_1C151E62C() == 0xD000000000000026 && v5 == 0x80000001C160BC20)
  {
    id v6 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v7 = sub_1C1520A9C();
  id v8 = a1;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {

LABEL_9:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
LABEL_6:
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image);
  if (v9)
  {
    unint64_t v14 = sub_1BFC3D764();
    *(void *)&long long v13 = v9;
    id v10 = v9;

    sub_1BFF993A8(&v13, (_OWORD *)a2);
  }
  else
  {
    sub_1BFEFE008(0, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
    uint64_t v12 = v11;
    *(void *)(a2 + 24) = sub_1C09E2B48();

    *(void *)a2 = v12;
  }
}

uint64_t type metadata accessor for SharingPuzzleImageActivityItemSource()
{
  return self;
}

uint64_t method lookup function for SharingPuzzleImageActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPuzzleImageActivityItemSource);
}

uint64_t sub_1C0ED97CC(void *a1)
{
  id v2 = objc_msgSend(a1, sel_thumbnailSmallImageAssetHandle);
  if (v2)
  {
    uint64_t v3 = v2;
    MEMORY[0x1F4188790](v2);
    sub_1C151932C();
    unint64_t v4 = (void *)sub_1C1518E7C();
    sub_1C0ABDC20();
    sub_1C1518FFC();
    swift_release();

    *(void *)(swift_allocObject() + 16) = a1;
    swift_unknownObjectRetain();
    uint64_t v5 = (void *)sub_1C1518E7C();
    uint64_t v6 = sub_1C15190DC();

    swift_release();
    swift_release();
  }
  else
  {
    sub_1C0ED9978(0, (unint64_t *)&unk_1EA1A8620, (uint64_t (*)(uint64_t))sub_1C0ABDC20, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  return v6;
}

void sub_1C0ED9978(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0ED99DC()
{
  return sub_1C0ED8F3C(*(void **)(v0 + 16));
}

uint64_t sub_1C0ED99F8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C0ED9A30(void *a1@<X8>)
{
  sub_1C0ED90F8(*(void **)(v1 + 16), a1);
}

uint64_t FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17 = v16;
  uint64_t v107 = a8;
  uint64_t v104 = a5;
  uint64_t v105 = a7;
  uint64_t v101 = a6;
  uint64_t v102 = a1;
  uint64_t v103 = a3;
  int v98 = a14;
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v97 = (uint64_t)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v106 = (uint64_t)&v88 - v24;
  uint64_t v25 = sub_1C151631C();
  uint64_t v109 = *(void *)(v25 - 8);
  uint64_t v110 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v108 = (char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (int *)type metadata accessor for FormatContent(0);
  MEMORY[0x1F4188790](v27);
  uint64_t v100 = (uint64_t)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v99 = (uint64_t)&v88 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v90 = (char *)&v88 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v89 = (uint64_t)&v88 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v91 = (uint64_t)&v88 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v88 - v38;
  MEMORY[0x1F4188790](v40);
  long long v42 = (char *)&v88 - v41;
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v88 - v44;
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)&v88 - v47;
  MEMORY[0x1F4188790](v49);
  int v51 = (uint64_t *)((char *)&v88 - v50);
  uint64_t v93 = *v98;
  sub_1BFE3391C(v17, (uint64_t)&v88 - v50, type metadata accessor for FormatContent);
  if (a2)
  {
    int v98 = a2;
  }
  else
  {
    int v52 = (uint64_t *)v51[1];
    uint64_t v102 = *v51;
    int v98 = v52;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFE38718((uint64_t)v51, type metadata accessor for FormatContent);
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v108, v17 + v27[5], v110);
  sub_1BFE3391C(v17, (uint64_t)v48, type metadata accessor for FormatContent);
  uint64_t v53 = a4;
  if (!a4)
  {
    uint64_t v54 = &v48[v27[6]];
    uint64_t v53 = *((void *)v54 + 1);
    uint64_t v103 = *(void *)v54;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFE38718((uint64_t)v48, type metadata accessor for FormatContent);
  sub_1BFE3391C(v17, (uint64_t)v45, type metadata accessor for FormatContent);
  uint64_t v55 = v101;
  if (!v101)
  {
    uint64_t v104 = *(void *)&v45[v27[7]];
    uint64_t v55 = swift_bridgeObjectRetain();
  }
  uint64_t v96 = v55;
  swift_bridgeObjectRetain();
  sub_1BFE38718((uint64_t)v45, type metadata accessor for FormatContent);
  sub_1BFE3391C(v17, (uint64_t)v42, type metadata accessor for FormatContent);
  uint64_t v57 = v107;
  if (!v107)
  {
    uint64_t v58 = &v42[v27[8]];
    uint64_t v57 = *((void *)v58 + 1);
    uint64_t v105 = *(void *)v58;
    swift_bridgeObjectRetain();
  }
  uint64_t v101 = v53;
  swift_bridgeObjectRetain();
  sub_1BFE38718((uint64_t)v42, type metadata accessor for FormatContent);
  sub_1BFE3391C(v17, (uint64_t)v39, type metadata accessor for FormatContent);
  uint64_t v59 = a11;
  if (!a11)
  {
    a10 = *(void *)&v39[v27[9]];
    uint64_t v59 = swift_bridgeObjectRetain();
  }
  uint64_t v92 = v59;
  swift_bridgeObjectRetain();
  sub_1BFE38718((uint64_t)v39, type metadata accessor for FormatContent);
  uint64_t v60 = v97;
  sub_1C0EDAC9C(a12, v97, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  uint64_t v61 = v91;
  sub_1BFE3391C(v17, v91, type metadata accessor for FormatContent);
  uint64_t v62 = sub_1C151D6DC();
  uint64_t v63 = *(void *)(v62 - 8);
  int v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v60, 1, v62);
  uint64_t v65 = v93;
  uint64_t v94 = v57;
  if (v64 == 1)
  {
    int v66 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
    sub_1C0EDAC9C(v61 + v27[10], v106, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    sub_1BFE38718(v61, type metadata accessor for FormatContent);
    sub_1BFDDF830(v60, (unint64_t *)&unk_1EB882A00, v66);
  }
  else
  {
    sub_1BFE38718(v61, type metadata accessor for FormatContent);
    uint64_t v67 = v106;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v106, v60, v62);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v62);
  }
  uint64_t v68 = (uint64_t)v90;
  uint64_t v69 = v89;
  uint64_t v70 = *(void *)(v17 + v27[11]);
  uint64_t v107 = *(void *)(v17 + v27[12]);
  uint64_t v71 = *(void *)(v17 + v27[13]);
  sub_1BFE3391C(v17, v89, type metadata accessor for FormatContent);
  uint64_t v95 = a10;
  if (v65)
  {
    uint64_t v97 = v65;
  }
  else
  {
    uint64_t v97 = *(void *)(v69 + v27[14]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFE38718(v69, type metadata accessor for FormatContent);
  sub_1BFE3391C(v17, v68, type metadata accessor for FormatContent);
  if (a15)
  {
    uint64_t v72 = a15;
  }
  else
  {
    uint64_t v72 = *(void *)(v68 + v27[15]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFE38718(v68, type metadata accessor for FormatContent);
  uint64_t v73 = v99;
  sub_1BFE3391C(v17, v99, type metadata accessor for FormatContent);
  if (a13)
  {
    uint64_t v74 = a13;
  }
  else
  {
    uint64_t v74 = *(void *)(v73 + v27[16]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFE38718(v73, type metadata accessor for FormatContent);
  uint64_t v75 = v100;
  sub_1BFE3391C(v17, v100, type metadata accessor for FormatContent);
  if (a16)
  {
    uint64_t v76 = a16;
  }
  else
  {
    uint64_t v76 = *(void *)(v75 + v27[17]);
    swift_bridgeObjectRetain();
  }
  uint64_t v77 = v96;
  swift_bridgeObjectRetain();
  sub_1BFE38718(v75, type metadata accessor for FormatContent);
  uint64_t v78 = v98;
  *(void *)a9 = v102;
  *((void *)a9 + 1) = v78;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&a9[v27[5]], v108, v110);
  uint64_t v79 = &a9[v27[6]];
  uint64_t v80 = v101;
  *(void *)uint64_t v79 = v103;
  *((void *)v79 + 1) = v80;
  uint64_t v81 = &a9[v27[7]];
  *(void *)uint64_t v81 = v104;
  *((void *)v81 + 1) = v77;
  int v82 = &a9[v27[8]];
  uint64_t v83 = v106;
  uint64_t v84 = v94;
  *(void *)int v82 = v105;
  *((void *)v82 + 1) = v84;
  uint64_t v85 = &a9[v27[9]];
  uint64_t v86 = v92;
  *(void *)uint64_t v85 = v95;
  *((void *)v85 + 1) = v86;
  uint64_t result = sub_1C0EDAC08(v83, (uint64_t)&a9[v27[10]]);
  *(void *)&a9[v27[11]] = v70;
  *(void *)&a9[v27[12]] = v107;
  *(void *)&a9[v27[13]] = v71;
  *(void *)&a9[v27[14]] = v97;
  *(void *)&a9[v27[15]] = v72;
  *(void *)&a9[v27[16]] = v74;
  *(void *)&a9[v27[17]] = v76;
  return result;
}

uint64_t FormatContent.selectors.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.properties.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.resolved(themes:subgroups:tag:issue:headline:webEmbed:subscription:subscriptionPaidAccess:options:selectors:sponsoredAdBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, char *a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v29 = *a8;
  uint64_t v27 = *v12;
  uint64_t v33 = v12[1];
  uint64_t v17 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v18 = (char *)v12 + v17[5];
  uint64_t v19 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v20 = (char *)a9 + v19[5];
  uint64_t v21 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v18, v21);
  sub_1C0EDAC9C(a6, (uint64_t)a9 + v19[14], &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
  uint64_t v22 = *(uint64_t *)((char *)v12 + v17[12]);
  uint64_t v23 = *(uint64_t *)((char *)v12 + v17[13]);
  sub_1C0EDAC9C(a12, (uint64_t)a9 + v19[18], (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  *a9 = v27;
  a9[1] = v33;
  *(void *)((char *)a9 + v19[6]) = v23;
  *(void *)((char *)a9 + v19[7]) = a1;
  *(void *)((char *)a9 + v19[8]) = a2;
  *(void *)((char *)a9 + v19[9]) = a10;
  *(void *)((char *)a9 + v19[11]) = a3;
  *(void *)((char *)a9 + v19[12]) = a4;
  *(void *)((char *)a9 + v19[13]) = a5;
  *(void *)((char *)a9 + v19[15]) = a7;
  *((unsigned char *)a9 + v19[16]) = v29;
  *(void *)((char *)a9 + v19[17]) = v22;
  *(void *)((char *)a9 + v19[10]) = a11;
  id v24 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v25 = a4;
  return swift_unknownObjectRetain();
}

uint64_t FormatContent.init(identifier:publishDate:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:equivalentTopicIDs:affinityTagIDs:iAdKeywords:themes:subgroups:properties:selectors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v34 = *a17;
  *a9 = a1;
  a9[1] = a2;
  id v24 = (int *)type metadata accessor for FormatContent(0);
  id v25 = (char *)a9 + v24[5];
  uint64_t v26 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a3, v26);
  uint64_t v27 = (void *)((char *)a9 + v24[6]);
  *uint64_t v27 = a4;
  v27[1] = a5;
  uint64_t v28 = (void *)((char *)a9 + v24[7]);
  void *v28 = a6;
  v28[1] = a7;
  char v29 = (void *)((char *)a9 + v24[8]);
  *char v29 = a8;
  v29[1] = a10;
  uint64_t v30 = (void *)((char *)a9 + v24[9]);
  *uint64_t v30 = a11;
  v30[1] = a12;
  uint64_t result = sub_1C0EDAC08(a13, (uint64_t)a9 + v24[10]);
  *(void *)((char *)a9 + v24[11]) = a14;
  *(void *)((char *)a9 + v24[12]) = a15;
  *(void *)((char *)a9 + v24[13]) = a16;
  *(void *)((char *)a9 + v24[14]) = v34;
  *(void *)((char *)a9 + v24[15]) = a18;
  *(void *)((char *)a9 + v24[16]) = a19;
  *(void *)((char *)a9 + v24[17]) = a20;
  return result;
}

uint64_t FormatContent.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatContent(0) + 20);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FormatContent.tagID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.issueID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.articleID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.webEmbedID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.sponsoredAdBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatContent(0);
  return sub_1C0EDAC9C(v1 + *(int *)(v3 + 40), a1, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
}

uint64_t FormatContent.equivalentTopicIDs.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EDA9F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContent(0) + 44);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.equivalentTopicIDs.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContent(0) + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.equivalentTopicIDs.modify())()
{
  return nullsub_1;
}

uint64_t FormatContent.affinityTagIDs.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EDAAFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContent(0) + 48);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.affinityTagIDs.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContent(0) + 48);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.affinityTagIDs.modify())()
{
  return nullsub_1;
}

uint64_t FormatContent.iAdKeywords.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EDAC08(uint64_t a1, uint64_t a2)
{
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0EDAC9C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFEC0BBC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0EDAD1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContent(0) + 52);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.iAdKeywords.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContent(0) + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.iAdKeywords.modify())()
{
  return nullsub_1;
}

uint64_t FormatContent.themes.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for FormatContent(0) + 56));
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.subgroups.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EDAE6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContent(0) + 64);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.properties.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContent(0) + 64);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.properties.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C0EDAF44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContent(0) + 68);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.selectors.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContent(0) + 68);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.selectors.modify())()
{
  return nullsub_1;
}

uint64_t FormatContent.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v24 = (char *)&v21 - v6;
  sub_1BFEC0BBC(0, &qword_1EB8812C0, (uint64_t (*)(uint64_t))sub_1BFE38BF0, v4);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v23 = (char *)&v21 - v8;
  sub_1BFE38B54(0, &qword_1EB85E108, (uint64_t (*)(void))sub_1BFE38CCC, (uint64_t)&type metadata for FormatContent.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v13 = (char *)&v21 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE38CCC();
  sub_1C1520F0C();
  LOBYTE(v27) = 0;
  unint64_t v14 = v25;
  sub_1C15207CC();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v16 = (uint64_t)v23;
  uint64_t v17 = (uint64_t)v24;
  uint64_t v21 = a1;
  uint64_t v22 = v11;
  uint64_t v18 = (int *)type metadata accessor for FormatContent(0);
  LOBYTE(v27) = 1;
  sub_1C151631C();
  id v25 = v13;
  sub_1BFE38930((unint64_t *)&unk_1EB871150, MEMORY[0x1E4F27928]);
  sub_1C152080C();
  LOBYTE(v27) = 2;
  sub_1C152074C();
  LOBYTE(v27) = 3;
  sub_1C152074C();
  LOBYTE(v27) = 5;
  sub_1C152074C();
  sub_1C0EDAC9C(v2 + v18[10], v17, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  Reference<A>.init(value:)(v17, v16);
  LOBYTE(v27) = 13;
  sub_1BFE38BF0(0);
  sub_1BFE38930((unint64_t *)&unk_1EB8611B0, sub_1BFE38BF0);
  sub_1C152078C();
  sub_1BFDDF830(v16, &qword_1EB8812C0, (uint64_t (*)(uint64_t))sub_1BFE38BF0);
  LOBYTE(v27) = 4;
  sub_1C152074C();
  uint64_t v27 = *(void *)(v2 + v18[11]);
  char v26 = 6;
  sub_1BFE9DFF4(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFD4A9F4((unint64_t *)&qword_1EB85DF50);
  sub_1C152080C();
  uint64_t v27 = *(void *)(v2 + v18[12]);
  char v26 = 7;
  sub_1C152080C();
  uint64_t v27 = *(void *)(v2 + v18[13]);
  char v26 = 8;
  sub_1C152080C();
  uint64_t v27 = *(void *)(v2 + v18[15]);
  char v26 = 10;
  sub_1BFEC0BBC(0, &qword_1EB879E70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, MEMORY[0x1E4FBB320]);
  sub_1C098A748();
  sub_1C152080C();
  uint64_t v27 = *(void *)(v2 + v18[16]);
  char v26 = 11;
  sub_1BFE9DFF4(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
  sub_1BFDB24C8((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
  sub_1C152080C();
  uint64_t v27 = *(void *)(v2 + v18[17]);
  char v26 = 12;
  sub_1BFD8B4C0(0, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
  sub_1BFE38AC8((unint64_t *)&qword_1EB85C4F0);
  sub_1C152080C();
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  uint64_t v19 = sub_1C1520EFC();
  char v20 = Dictionary<>.bindingContent.getter(v19);
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
    uint64_t v27 = *(void *)(v2 + v18[14]);
    char v26 = 9;
    sub_1BFE38D20();
    sub_1BFE38930(&qword_1EB85D980, (void (*)(uint64_t))sub_1BFE38D20);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v10);
}

unint64_t sub_1C0EDB85C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x446873696C627570;
      break;
    case 2:
      unint64_t result = 0x4449676174;
      break;
    case 3:
      unint64_t result = 0x44496575737369;
      break;
    case 4:
      unint64_t result = 0x49656C6369747261;
      break;
    case 5:
      unint64_t result = 0x6465626D45626577;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x7974696E69666661;
      break;
    case 8:
      unint64_t result = 0x6F7779654B644169;
      break;
    case 9:
      unint64_t result = 0x73656D656874;
      break;
    case 10:
      unint64_t result = 0x70756F7267627573;
      break;
    case 11:
      unint64_t result = 0x69747265706F7270;
      break;
    case 12:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0EDBA70(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C0EDB85C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0EDB85C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0EDBAFC()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0EDB85C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0EDBB60()
{
  sub_1C0EDB85C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0EDBBB4()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0EDB85C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0EDBC14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0EEE980();
  *a1 = result;
  return result;
}

unint64_t sub_1C0EDBC44@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0EDB85C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0EDBC70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0EEE980();
  *a1 = result;
  return result;
}

uint64_t sub_1C0EDBC98(uint64_t a1)
{
  unint64_t v2 = sub_1BFE38CCC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0EDBCD4(uint64_t a1)
{
  unint64_t v2 = sub_1BFE38CCC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0EDBD10()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0EDBD64()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0EDBD7C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0EDBDCC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C0EDBE20(void *a1@<X8>)
{
  *a1 = 0x3273656D656874;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1C0EDBE3C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C0EDBE94(uint64_t a1)
{
  unint64_t v2 = sub_1BFE38C78();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0EDBED0(uint64_t a1)
{
  unint64_t v2 = sub_1BFE38C78();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0EDBF0C(void *a1)
{
  return FormatContent.encode(to:)(a1);
}

uint64_t FormatContent.copy(sidecars:sidecarConfig:log:name:backingTag:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, char *a7@<X8>)
{
  unint64_t v333 = a6;
  v305 = a7;
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  v298 = (char *)v282 - v13;
  uint64_t v14 = type metadata accessor for FormatContentSlotItemObject();
  uint64_t v309 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v329 = (uint64_t)v282 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v314 = type metadata accessor for FormatContentSlotItem();
  uint64_t v303 = *(void *)(v314 - 8);
  MEMORY[0x1F4188790](v314);
  uint64_t v315 = (uint64_t)v282 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = type metadata accessor for FormatContentSubgroup();
  uint64_t v302 = *(void *)(v301 - 8);
  MEMORY[0x1F4188790](v301);
  uint64_t v299 = (uint64_t)v282 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v304 = (uint64_t)v282 - v19;
  MEMORY[0x1F4188790](v20);
  v310 = (char *)v282 - v21;
  uint64_t v300 = type metadata accessor for FeedGroupConfigSidecar();
  unint64_t v317 = *(void *)(v300 - 8);
  MEMORY[0x1F4188790](v300);
  uint64_t v23 = (char *)v282 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  v332 = (void *)((char *)v282 - v25);
  uint64_t v26 = type metadata accessor for FormatContentSidecarPlacement(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v334 = v26;
  uint64_t v335 = v27;
  MEMORY[0x1F4188790](v26);
  v307 = (void *)((char *)v282 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v282 - v30;
  uint64_t v32 = *a2;
  sub_1BFFDEB20();
  uint64_t v326 = v33;
  uint64_t v34 = swift_allocObject();
  long long v318 = xmmword_1C152C7F0;
  *(_OWORD *)(v34 + 16) = xmmword_1C152C7F0;
  *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v35 = sub_1BFE9C558();
  *(void *)(v34 + 32) = a4;
  *(void *)(v34 + 40) = a5;
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = MEMORY[0x1E4FBB550];
  uint64_t v38 = MEMORY[0x1E4FBB5C8];
  *(void *)(v34 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v34 + 104) = v38;
  unint64_t v325 = v35;
  *(void *)(v34 + 64) = v35;
  *(void *)(v34 + 72) = v36;
  uint64_t v39 = *(void *)(v32 + 16);
  *(void *)(v34 + 136) = v37;
  *(void *)(v34 + 144) = v38;
  *(void *)(v34 + 112) = v39;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v306 = v32;
  if (!*(void *)(v32 + 16) || !v36)
  {
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1C1529AE0;
    unint64_t v73 = v325;
    *(void *)(v72 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v72 + 64) = v73;
    *(void *)(v72 + 32) = a4;
    *(void *)(v72 + 40) = a5;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
LABEL_69:
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    return sub_1BFE3391C(v308, (uint64_t)v305, type metadata accessor for FormatContent);
  }
  uint64_t v40 = (void *)v333;
  swift_unknownObjectRetain();
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_1C0EEC408(v41, v40);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v43 = *(void *)(v42 + 16);
  uint64_t v316 = a3;
  uint64_t v321 = a4;
  uint64_t v324 = a5;
  if (v43)
  {
    unint64_t v331 = (unint64_t)v23;
    unint64_t v330 = (*(unsigned __int8 *)(v317 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80);
    uint64_t v44 = v42 + v330;
    unint64_t v333 = *(void *)(v317 + 72);
    unint64_t v327 = v42;
    swift_bridgeObjectRetain();
    uint64_t v45 = (void *)MEMORY[0x1E4FBC868];
    v328 = v31;
    uint64_t v46 = v332;
    do
    {
      sub_1BFE3391C(v44, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
      uint64_t v48 = *v46;
      uint64_t v49 = v46[1];
      uint64_t v50 = v45[2];
      swift_bridgeObjectRetain();
      if (v50)
      {
        int v51 = v45;
        unint64_t v52 = sub_1BFEF2D8C(v48, v49);
        unint64_t v53 = MEMORY[0x1E4FBC860];
        if (v54)
        {
          unint64_t v53 = *(void *)(v45[7] + 8 * v52);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        int v51 = v45;
        unint64_t v53 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      uint64_t v55 = v331;
      sub_1BFE3391C((uint64_t)v46, v331, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v53 = sub_1C0EDF7CC(0, *(void *)(v53 + 16) + 1, 1, v53, &qword_1EB86BA58, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
      }
      unint64_t v57 = *(void *)(v53 + 16);
      unint64_t v56 = *(void *)(v53 + 24);
      if (v57 >= v56 >> 1) {
        unint64_t v53 = sub_1C0EDF7CC(v56 > 1, v57 + 1, 1, v53, &qword_1EB86BA58, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
      }
      *(void *)(v53 + 16) = v57 + 1;
      sub_1C0EEC764(v55, v53 + v330 + v57 * v333, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
      swift_bridgeObjectRetain();
      uint64_t v58 = v51;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v337[0] = v51;
      unint64_t v61 = sub_1BFEF2D8C(v48, v49);
      uint64_t v62 = v51[2];
      BOOL v63 = (v60 & 1) == 0;
      uint64_t v64 = v62 + v63;
      if (__OFADD__(v62, v63))
      {
        __break(1u);
LABEL_232:
        __break(1u);
LABEL_233:
        __break(1u);
LABEL_234:
        __break(1u);
LABEL_235:
        __break(1u);
LABEL_236:
        __break(1u);
LABEL_237:
        __break(1u);
LABEL_238:
        __break(1u);
LABEL_239:
        __break(1u);
LABEL_240:
        __break(1u);
LABEL_241:
        __break(1u);
LABEL_242:
        __break(1u);
LABEL_243:
        __break(1u);
LABEL_244:
        __break(1u);
        goto LABEL_245;
      }
      char v65 = v60;
      if (v58[3] >= v64)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1C1073710();
        }
      }
      else
      {
        sub_1C10627E4(v64, isUniquelyReferenced_nonNull_native);
        unint64_t v66 = sub_1BFEF2D8C(v48, v49);
        if ((v65 & 1) != (v67 & 1))
        {
LABEL_252:
          uint64_t result = sub_1C1520CFC();
          __break(1u);
          return result;
        }
        unint64_t v61 = v66;
      }
      uint64_t v31 = v328;
      uint64_t v45 = *(void **)&v337[0];
      if (v65)
      {
        uint64_t v47 = *(void *)(*(void *)&v337[0] + 56);
        swift_bridgeObjectRelease();
        *(void *)(v47 + 8 * v61) = v53;
      }
      else
      {
        *(void *)(*(void *)&v337[0] + 8 * (v61 >> 6) + 64) |= 1 << v61;
        uint64_t v68 = (uint64_t *)(v45[6] + 16 * v61);
        uint64_t *v68 = v48;
        v68[1] = v49;
        *(void *)(v45[7] + 8 * v61) = v53;
        uint64_t v69 = v45[2];
        BOOL v70 = __OFADD__(v69, 1);
        uint64_t v71 = v69 + 1;
        if (v70) {
          goto LABEL_239;
        }
        _OWORD v45[2] = v71;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = v332;
      sub_1BFE38718((uint64_t)v332, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
      v44 += v333;
      --v43;
      a4 = v321;
    }
    while (v43);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v74 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  *(void *)&v337[0] = v74;
  uint64_t v75 = v310;
  uint64_t v312 = *(void *)(v306 + 16);
  if (v312)
  {
    v311 = (void *)(v306 + 32);
    swift_bridgeObjectRetain();
    long long v322 = xmmword_1C1527210;
    uint64_t v76 = 0;
    v323 = v45;
    do
    {
      uint64_t v313 = v76;
      uint64_t v78 = &v311[4 * v76];
      unint64_t v79 = v78[2];
      v328 = *(char **)(v79 + 16);
      if (v328)
      {
        unint64_t v80 = v78[1];
        unint64_t v333 = *v78;
        unint64_t v327 = v79 + 32;
        LODWORD(v332) = *((unsigned __int8 *)v78 + 24);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unint64_t v81 = 0;
        unint64_t v331 = MEMORY[0x1E4FBC860];
        do
        {
          int v82 = (uint64_t *)(v327 + 16 * v81);
          uint64_t v83 = *v82;
          uint64_t v84 = v82[1];
          uint64_t v85 = v45[2];
          swift_bridgeObjectRetain();
          unint64_t v330 = v81;
          if (v85 && (unint64_t v86 = sub_1BFEF2D8C(v83, v84), (v87 & 1) != 0))
          {
            uint64_t v88 = *(void *)(v45[7] + 8 * v86);
            uint64_t v89 = swift_allocObject();
            *(_OWORD *)(v89 + 16) = v318;
            uint64_t v90 = MEMORY[0x1E4FBB1A0];
            unint64_t v91 = v325;
            *(void *)(v89 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v89 + 64) = v91;
            *(void *)(v89 + 32) = a4;
            *(void *)(v89 + 40) = v324;
            uint64_t v92 = *(void *)(v88 + 16);
            *(void *)(v89 + 96) = MEMORY[0x1E4FBB550];
            *(void *)(v89 + 104) = MEMORY[0x1E4FBB5C8];
            *(void *)(v89 + 112) = v83;
            *(void *)(v89 + 72) = v92;
            *(void *)(v89 + 136) = v90;
            *(void *)(v89 + 144) = v91;
            *(void *)(v89 + 120) = v84;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C151F38C();
            sub_1C15197BC();
            swift_bridgeObjectRelease();
            int64_t v93 = *(void *)(v88 + 16);
            if (v93)
            {
              uint64_t v320 = v84;
              uint64_t v341 = MEMORY[0x1E4FBC860];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C05F834C(0, v93, 0);
              uint64_t v94 = v341;
              unint64_t v95 = (*(unsigned __int8 *)(v317 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80);
              uint64_t v319 = v88;
              uint64_t v96 = v88 + v95;
              uint64_t v97 = *(void *)(v317 + 72);
              do
              {
                sub_1BFE3391C(v96, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
                int v98 = &v31[*(int *)(v334 + 20)];
                *(void *)int v98 = v333;
                *((void *)v98 + 1) = v80;
                *((void *)v98 + 2) = v79;
                v98[24] = (char)v332;
                uint64_t v341 = v94;
                uint64_t v99 = (uint64_t)v31;
                unint64_t v101 = *(void *)(v94 + 16);
                unint64_t v100 = *(void *)(v94 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v101 >= v100 >> 1)
                {
                  sub_1C05F834C(v100 > 1, v101 + 1, 1);
                  uint64_t v94 = v341;
                }
                *(void *)(v94 + 16) = v101 + 1;
                sub_1C0EEC764(v99, v94+ ((*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80))+ *(void *)(v335 + 72) * v101, type metadata accessor for FormatContentSidecarPlacement);
                v96 += v97;
                --v93;
                uint64_t v31 = (char *)v99;
              }
              while (v93);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v94 = MEMORY[0x1E4FBC860];
            }
            a4 = v321;
          }
          else
          {
            uint64_t v102 = swift_allocObject();
            *(_OWORD *)(v102 + 16) = v322;
            uint64_t v103 = MEMORY[0x1E4FBB1A0];
            unint64_t v104 = v325;
            *(void *)(v102 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v102 + 64) = v104;
            *(void *)(v102 + 32) = a4;
            *(void *)(v102 + 40) = v324;
            *(void *)(v102 + 96) = v103;
            *(void *)(v102 + 104) = v104;
            *(void *)(v102 + 72) = v83;
            *(void *)(v102 + 80) = v84;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C151F38C();
            sub_1C15197BC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v94 = MEMORY[0x1E4FBC860];
          }
          uint64_t v105 = *(void *)(v94 + 16);
          int64_t v106 = *(void *)(v331 + 16);
          int64_t v107 = v106 + v105;
          if (__OFADD__(v106, v105)) {
            goto LABEL_224;
          }
          char v108 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v109 = v331;
          if ((v108 & 1) == 0 || v107 > *(void *)(v331 + 24) >> 1)
          {
            if (v106 <= v107) {
              int64_t v110 = v106 + v105;
            }
            else {
              int64_t v110 = v106;
            }
            uint64_t v109 = sub_1C0EDF7CC(v108, v110, 1, v331, &qword_1EB86BB90, type metadata accessor for FormatContentSidecarPlacement, type metadata accessor for FormatContentSidecarPlacement, type metadata accessor for FormatContentSidecarPlacement);
          }
          unint64_t v111 = v330;
          uint64_t v112 = *(void *)(v94 + 16);
          unint64_t v331 = v109;
          if (v112)
          {
            uint64_t v113 = *(void *)(v109 + 16);
            if ((*(void *)(v109 + 24) >> 1) - v113 < v105) {
              goto LABEL_227;
            }
            unint64_t v114 = (*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80);
            uint64_t v115 = *(void *)(v335 + 72);
            unint64_t v116 = v109 + v114 + v115 * v113;
            if (v94 + v114 < v116 + v115 * v105 && v116 < v94 + v114 + v115 * v105)
            {
LABEL_251:
              sub_1C152052C();
              __break(1u);
              goto LABEL_252;
            }
            swift_arrayInitWithCopy();
            if (v105)
            {
              uint64_t v118 = *(void *)(v331 + 16);
              BOOL v70 = __OFADD__(v118, v105);
              uint64_t v119 = v118 + v105;
              if (v70) {
                goto LABEL_229;
              }
              *(void *)(v331 + 16) = v119;
            }
          }
          else if (v105)
          {
            goto LABEL_225;
          }
          unint64_t v81 = v111 + 1;
          swift_bridgeObjectRelease();
          uint64_t v45 = v323;
        }
        while ((char *)v81 != v328);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v75 = v310;
        uint64_t v77 = v331;
      }
      else
      {
        uint64_t v77 = MEMORY[0x1E4FBC860];
      }
      uint64_t v76 = v313 + 1;
      sub_1C104B1E0(v77);
    }
    while (v76 != v312);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v120 = *(void *)&v337[0];
  uint64_t v121 = *(void *)(*(void *)&v337[0] + 16);
  if (!v121)
  {
    swift_bridgeObjectRelease();
    uint64_t v129 = swift_allocObject();
    *(_OWORD *)(v129 + 16) = xmmword_1C1529AE0;
    unint64_t v130 = v325;
    *(void *)(v129 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v129 + 64) = v130;
    *(void *)(v129 + 32) = a4;
    *(void *)(v129 + 40) = v324;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    goto LABEL_69;
  }
  uint64_t v122 = swift_allocObject();
  long long v283 = xmmword_1C1527210;
  *(_OWORD *)(v122 + 16) = xmmword_1C1527210;
  unint64_t v123 = v325;
  *(void *)(v122 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v122 + 64) = v123;
  *(void *)(v122 + 32) = a4;
  *(void *)(v122 + 40) = v324;
  uint64_t v124 = *(void *)(v120 + 16);
  *(void *)(v122 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v122 + 104) = MEMORY[0x1E4FBB5C8];
  *(void *)(v122 + 72) = v124;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v293 = type metadata accessor for FormatContent(0);
  uint64_t v125 = *(void *)(v308 + *(int *)(v293 + 60));
  uint64_t v340 = MEMORY[0x1E4FBC870];
  uint64_t v341 = v125;
  uint64_t v126 = v120 + ((*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80));
  swift_bridgeObjectRetain();
  unint64_t v127 = 0;
  uint64_t v128 = (uint64_t)v307;
  uint64_t v290 = v120;
  uint64_t v289 = v121;
  uint64_t v288 = v126;
LABEL_75:
  if (v127 >= *(void *)(v120 + 16)) {
    goto LABEL_241;
  }
  uint64_t v137 = *(void *)(v335 + 72);
  unint64_t v317 = v127;
  sub_1BFE3391C(v126 + v137 * v127, v128, type metadata accessor for FormatContentSidecarPlacement);
  uint64_t v138 = *(void *)(v341 + 16);
  if (!v138) {
    goto LABEL_74;
  }
  *(void *)&long long v322 = v128 + *(int *)(v334 + 20);
  unint64_t v139 = (*(unsigned __int8 *)(v302 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v302 + 80);
  uint64_t v140 = v341 + v139;
  uint64_t v320 = *(void *)(v302 + 72);
  swift_bridgeObjectRetain();
  unint64_t v141 = 0;
  while (1)
  {
    unint64_t v333 = v141;
    sub_1BFE3391C(v140, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    if (*v75 == *(void *)v322 && v75[1] == *(void *)(v322 + 8)) {
      break;
    }
    char v143 = sub_1C1520A9C();
    sub_1BFE38718((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    if (v143) {
      goto LABEL_86;
    }
    unint64_t v141 = v333 + 1;
    v140 += v320;
    if (v138 == v333 + 1)
    {
      swift_bridgeObjectRelease();
LABEL_71:
      uint64_t v128 = (uint64_t)v307;
LABEL_72:
      uint64_t v120 = v290;
      uint64_t v121 = v289;
      goto LABEL_73;
    }
  }
  sub_1BFE38718((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
LABEL_86:
  swift_bridgeObjectRelease();
  uint64_t v144 = *(int *)(v293 + 60);
  v286 = (char *)v307 + *(int *)(v300 + 20);
  uint64_t v285 = v144;
  uint64_t v145 = *(void *)&v286[v144];
  uint64_t v287 = *(void *)(v145 + 16);
  if (!v287)
  {
    uint64_t v148 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v230 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v230) {
      goto LABEL_207;
    }
    goto LABEL_197;
  }
  uint64_t v146 = v145 + v139;
  v282[0] = v145;
  swift_bridgeObjectRetain_n();
  uint64_t v147 = 0;
  uint64_t v148 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v284 = v146;
LABEL_88:
  uint64_t v149 = v146 + v147 * v320;
  uint64_t v150 = v304;
  sub_1BFE3391C(v149, v304, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  uint64_t v151 = *(void *)(v150 + *(int *)(v301 + 32));
  uint64_t v312 = *(void *)(v151 + 16);
  if (!v312)
  {
    long long v218 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_175;
  }
  uint64_t v313 = v151 + 32;
  v282[1] = v151;
  swift_bridgeObjectRetain_n();
  uint64_t v152 = 0;
  uint64_t v153 = (void *)MEMORY[0x1E4FBC860];
  v292 = v148;
  uint64_t v291 = v147;
LABEL_92:
  uint64_t v319 = v152;
  uint64_t v155 = (void *)(v313 + 48 * v152);
  uint64_t v156 = v155[4];
  v332 = *(uint64_t **)(v156 + 16);
  if (!v332)
  {
    uint64_t v163 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_156;
  }
  v311 = v153;
  uint64_t v157 = v155[1];
  uint64_t v158 = v155[2];
  uint64_t v159 = v155[3];
  uint64_t v160 = v155[5];
  uint64_t v161 = v303;
  unint64_t v331 = v156 + ((*(unsigned __int8 *)(v303 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v303 + 80));
  uint64_t v297 = v157;
  swift_bridgeObjectRetain_n();
  uint64_t v296 = v158;
  swift_bridgeObjectRetain_n();
  uint64_t v295 = v159;
  swift_bridgeObjectRetain_n();
  uint64_t v306 = v156;
  swift_bridgeObjectRetain_n();
  uint64_t v294 = v160;
  swift_bridgeObjectRetain_n();
  uint64_t v162 = 0;
  unint64_t v330 = *(void *)(v161 + 72);
  uint64_t v163 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v164 = v315;
    sub_1BFE3391C(v331 + v330 * (void)v162, v315, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    uint64_t v165 = (void *)sub_1BFE36384();
    uint64_t v166 = (uint64_t *)(v164 + *(int *)(v314 + 20));
    uint64_t v167 = *v166;
    if (*v166)
    {
      uint64_t v168 = v166[1];
      uint64_t v169 = *(void *)(v168 + 16);
      if (v169) {
        break;
      }
    }
    uint64_t v173 = (void *)MEMORY[0x1E4FBC860];
LABEL_121:
    unint64_t v186 = v173[2];
    int64_t v187 = v165[2];
    int64_t v188 = v187 + v186;
    if (__OFADD__(v187, v186)) {
      goto LABEL_232;
    }
    uint64_t v189 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v189 && v188 <= v165[3] >> 1)
    {
      unint64_t v190 = v173[2];
      if (!v190) {
        goto LABEL_138;
      }
    }
    else
    {
      if (v187 <= v188) {
        int64_t v196 = v187 + v186;
      }
      else {
        int64_t v196 = v187;
      }
      uint64_t v165 = sub_1BFE339EC(v189, v196, 1, v165, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      unint64_t v190 = v173[2];
      if (!v190)
      {
LABEL_138:
        if (v186) {
          goto LABEL_233;
        }
        goto LABEL_139;
      }
    }
    uint64_t v191 = v165[2];
    if ((v165[3] >> 1) - v191 < (uint64_t)v190) {
      goto LABEL_236;
    }
    unint64_t v192 = (unint64_t)&v165[6 * v191 + 4];
    if ((unint64_t)(v173 + 4) < v192 + 48 * v190 && v192 < (unint64_t)&v173[6 * v190 + 4]) {
      goto LABEL_251;
    }
    swift_arrayInitWithCopy();
    if (v190 < v186) {
      goto LABEL_233;
    }
    uint64_t v194 = v165[2];
    BOOL v70 = __OFADD__(v194, v190);
    uint64_t v195 = v194 + v190;
    if (v70) {
      goto LABEL_237;
    }
    v165[2] = v195;
LABEL_139:
    swift_bridgeObjectRelease();
    sub_1BFE38718(v315, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    uint64_t v197 = v165[2];
    int64_t v198 = *((void *)v163 + 2);
    int64_t v199 = v198 + v197;
    if (__OFADD__(v198, v197)) {
      goto LABEL_234;
    }
    uint64_t v200 = swift_isUniquelyReferenced_nonNull_native();
    if ((v200 & 1) != 0 && v199 <= *((void *)v163 + 3) >> 1)
    {
      if (v165[2]) {
        goto LABEL_148;
      }
    }
    else
    {
      if (v198 <= v199) {
        int64_t v201 = v198 + v197;
      }
      else {
        int64_t v201 = v198;
      }
      uint64_t v163 = (char *)sub_1BFE339EC((void *)v200, v201, 1, v163, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      if (v165[2])
      {
LABEL_148:
        uint64_t v202 = *((void *)v163 + 2);
        if ((*((void *)v163 + 3) >> 1) - v202 < v197) {
          goto LABEL_238;
        }
        unint64_t v203 = (unint64_t)&v163[48 * v202 + 32];
        if ((unint64_t)(v165 + 4) < v203 + 48 * v197 && v203 < (unint64_t)&v165[6 * v197 + 4]) {
          goto LABEL_251;
        }
        swift_arrayInitWithCopy();
        if (v197)
        {
          uint64_t v204 = *((void *)v163 + 2);
          BOOL v70 = __OFADD__(v204, v197);
          uint64_t v205 = v204 + v197;
          if (v70) {
            goto LABEL_240;
          }
          *((void *)v163 + 2) = v205;
        }
        goto LABEL_95;
      }
    }
    if (v197) {
      goto LABEL_235;
    }
LABEL_95:
    uint64_t v162 = (uint64_t *)((char *)v162 + 1);
    swift_bridgeObjectRelease();
    if (v162 == v332)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v148 = v292;
      uint64_t v147 = v291;
      uint64_t v153 = v311;
LABEL_156:
      uint64_t v206 = *((void *)v163 + 2);
      int64_t v207 = v153[2];
      int64_t v208 = v207 + v206;
      if (__OFADD__(v207, v206)) {
        goto LABEL_242;
      }
      v209 = v153;
      uint64_t v210 = swift_isUniquelyReferenced_nonNull_native();
      v211 = v209;
      if ((v210 & 1) == 0 || v208 > v209[3] >> 1)
      {
        if (v207 <= v208) {
          int64_t v212 = v207 + v206;
        }
        else {
          int64_t v212 = v207;
        }
        v211 = sub_1BFE339EC((void *)v210, v212, 1, v209, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
        if (*((void *)v163 + 2)) {
          goto LABEL_165;
        }
LABEL_90:
        uint64_t v154 = v211;
        if (!v206) {
          goto LABEL_91;
        }
        goto LABEL_243;
      }
      if (!*((void *)v163 + 2)) {
        goto LABEL_90;
      }
LABEL_165:
      uint64_t v213 = v211[2];
      if ((v211[3] >> 1) - v213 < v206) {
        goto LABEL_244;
      }
      unint64_t v214 = (unint64_t)&v211[6 * v213 + 4];
      if ((unint64_t)(v163 + 32) < v214 + 48 * v206 && v214 < (unint64_t)&v163[48 * v206 + 32]) {
        goto LABEL_251;
      }
      uint64_t v154 = v211;
      swift_arrayInitWithCopy();
      if (v206)
      {
        uint64_t v216 = v154[2];
        BOOL v70 = __OFADD__(v216, v206);
        uint64_t v217 = v216 + v206;
        if (!v70)
        {
          v154[2] = v217;
          goto LABEL_91;
        }
LABEL_245:
        __break(1u);
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
LABEL_249:
        __break(1u);
LABEL_250:
        __break(1u);
        goto LABEL_251;
      }
LABEL_91:
      uint64_t v152 = v319 + 1;
      swift_bridgeObjectRelease();
      uint64_t v153 = v154;
      if (v152 != v312) {
        goto LABEL_92;
      }
      long long v218 = v154;
      swift_bridgeObjectRelease_n();
LABEL_175:
      sub_1BFE38718(v304, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      long long v219 = v218;
      uint64_t v220 = v218[2];
      int64_t v221 = v148[2];
      int64_t v222 = v221 + v220;
      if (__OFADD__(v221, v220)) {
        goto LABEL_246;
      }
      uint64_t v223 = swift_isUniquelyReferenced_nonNull_native();
      if ((v223 & 1) == 0 || v222 > v148[3] >> 1)
      {
        if (v221 <= v222) {
          int64_t v224 = v221 + v220;
        }
        else {
          int64_t v224 = v221;
        }
        uint64_t v148 = sub_1BFE339EC((void *)v223, v224, 1, v148, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      }
      if (v219[2])
      {
        uint64_t v225 = v148[2];
        if ((v148[3] >> 1) - v225 < v220) {
          goto LABEL_248;
        }
        unint64_t v226 = (unint64_t)&v148[6 * v225 + 4];
        if ((unint64_t)(v219 + 4) < v226 + 48 * v220 && v226 < (unint64_t)&v219[6 * v220 + 4]) {
          goto LABEL_251;
        }
        swift_arrayInitWithCopy();
        if (v220)
        {
          uint64_t v228 = v148[2];
          BOOL v70 = __OFADD__(v228, v220);
          uint64_t v229 = v228 + v220;
          if (v70) {
            goto LABEL_249;
          }
          v148[2] = v229;
        }
      }
      else if (v220)
      {
        goto LABEL_247;
      }
      ++v147;
      swift_bridgeObjectRelease();
      uint64_t v146 = v284;
      if (v147 == v287)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v230 = v148[2];
        if (!v230)
        {
LABEL_207:
          v232 = (void *)MEMORY[0x1E4FBC860];
          goto LABEL_208;
        }
LABEL_197:
        swift_bridgeObjectRetain();
        long long v231 = v148 + 9;
        v232 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v234 = *((void *)v231 - 1);
          char v235 = *v231;
          long long v236 = *(_OWORD *)(v231 - 24);
          v337[0] = *(_OWORD *)(v231 - 40);
          v337[1] = v236;
          uint64_t v338 = v234;
          char v339 = v235;
          uint64_t v237 = FormatContentRequirement.sidecarDedupeIdentifier.getter();
          if (v238)
          {
            uint64_t v239 = v237;
            uint64_t v240 = v238;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v232 = sub_1BFEF9B68(0, v232[2] + 1, 1, v232);
            }
            unint64_t v242 = v232[2];
            unint64_t v241 = v232[3];
            if (v242 >= v241 >> 1) {
              v232 = sub_1BFEF9B68((void *)(v241 > 1), v242 + 1, 1, v232);
            }
            v232[2] = v242 + 1;
            long long v233 = &v232[2 * v242];
            v233[4] = v239;
            v233[5] = v240;
          }
          v231 += 48;
          --v230;
        }
        while (v230);
        swift_bridgeObjectRelease();
LABEL_208:
        swift_bridgeObjectRelease();
        uint64_t v336 = sub_1C151EFFC();
        uint64_t v243 = v232[2];
        if (v243)
        {
          v244 = v232 + 5;
          do
          {
            uint64_t v245 = *(v244 - 1);
            uint64_t v246 = *v244;
            swift_bridgeObjectRetain();
            sub_1BFEFFC1C((uint64_t *)v337, v245, v246);
            swift_bridgeObjectRelease();
            v244 += 2;
            --v243;
          }
          while (v243);
        }
        swift_bridgeObjectRelease();
        uint64_t v247 = v336;
        uint64_t v248 = v340;
        swift_bridgeObjectRetain();
        char v249 = sub_1BFEFB810(v247, v248);
        swift_bridgeObjectRelease();
        if ((v249 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v132 = swift_allocObject();
          *(_OWORD *)(v132 + 16) = v283;
          uint64_t v133 = MEMORY[0x1E4FBB1A0];
          unint64_t v134 = v325;
          *(void *)(v132 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v132 + 64) = v134;
          *(void *)(v132 + 32) = a4;
          *(void *)(v132 + 40) = v324;
          uint64_t v135 = *(void *)v322;
          uint64_t v136 = *(void *)(v322 + 8);
          *(void *)(v132 + 96) = v133;
          *(void *)(v132 + 104) = v134;
          *(void *)(v132 + 72) = v135;
          *(void *)(v132 + 80) = v136;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151F38C();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          uint64_t v75 = v310;
          goto LABEL_71;
        }
        sub_1BFEF3808(v247);
        uint64_t v75 = v310;
        if (!*(unsigned char *)(v322 + 24))
        {
          uint64_t v261 = swift_allocObject();
          *(_OWORD *)(v261 + 16) = v318;
          uint64_t v262 = MEMORY[0x1E4FBB1A0];
          unint64_t v263 = v325;
          *(void *)(v261 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v261 + 64) = v263;
          *(void *)(v261 + 32) = a4;
          *(void *)(v261 + 40) = v324;
          uint64_t v128 = (uint64_t)v307;
          uint64_t v264 = *v307;
          uint64_t v265 = v307[1];
          *(void *)(v261 + 96) = v262;
          *(void *)(v261 + 104) = v263;
          *(void *)(v261 + 72) = v264;
          *(void *)(v261 + 80) = v265;
          uint64_t v266 = *(void *)v322;
          uint64_t v267 = *(void *)(v322 + 8);
          *(void *)(v261 + 136) = v262;
          *(void *)(v261 + 144) = v263;
          *(void *)(v261 + 112) = v266;
          *(void *)(v261 + 120) = v267;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151F38C();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          uint64_t v277 = *(void *)&v286[v285];
          swift_bridgeObjectRetain();
          uint64_t v278 = v333;
          int64_t v279 = v333;
LABEL_220:
          sub_1C024A4D4(v278, v279, v277);
          swift_bridgeObjectRelease();
          goto LABEL_72;
        }
        uint64_t v250 = v324;
        if (*(unsigned char *)(v322 + 24) != 1)
        {
          uint64_t v268 = swift_allocObject();
          *(_OWORD *)(v268 + 16) = v318;
          uint64_t v269 = MEMORY[0x1E4FBB1A0];
          unint64_t v270 = v325;
          *(void *)(v268 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v268 + 64) = v270;
          *(void *)(v268 + 32) = a4;
          *(void *)(v268 + 40) = v250;
          uint64_t v128 = (uint64_t)v307;
          uint64_t v271 = *v307;
          uint64_t v272 = v307[1];
          *(void *)(v268 + 96) = v269;
          *(void *)(v268 + 104) = v270;
          *(void *)(v268 + 72) = v271;
          *(void *)(v268 + 80) = v272;
          uint64_t v273 = *(void *)v322;
          uint64_t v274 = *(void *)(v322 + 8);
          *(void *)(v268 + 136) = v269;
          *(void *)(v268 + 144) = v270;
          *(void *)(v268 + 112) = v273;
          *(void *)(v268 + 120) = v274;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151F38C();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          uint64_t v275 = v299;
          unint64_t v276 = v333;
          sub_1C0378DB0(v333, v299);
          sub_1BFE38718(v275, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
          uint64_t v277 = *(void *)&v286[v285];
          swift_bridgeObjectRetain();
          uint64_t v278 = v276;
          int64_t v279 = v276;
          goto LABEL_220;
        }
        uint64_t v251 = swift_allocObject();
        *(_OWORD *)(v251 + 16) = v318;
        uint64_t v252 = MEMORY[0x1E4FBB1A0];
        unint64_t v253 = v325;
        *(void *)(v251 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v251 + 64) = v253;
        *(void *)(v251 + 32) = a4;
        *(void *)(v251 + 40) = v250;
        uint64_t v254 = *v307;
        uint64_t v255 = v307[1];
        *(void *)(v251 + 96) = v252;
        *(void *)(v251 + 104) = v253;
        *(void *)(v251 + 72) = v254;
        *(void *)(v251 + 80) = v255;
        uint64_t v256 = *(void *)v322;
        uint64_t v257 = *(void *)(v322 + 8);
        *(void *)(v251 + 136) = v252;
        *(void *)(v251 + 144) = v253;
        *(void *)(v251 + 112) = v256;
        *(void *)(v251 + 120) = v257;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        uint64_t v258 = v333 + 1;
        if (__OFADD__(v333, 1)) {
          goto LABEL_250;
        }
        uint64_t v259 = *(void *)(v341 + 16);
        uint64_t v260 = *(void *)&v286[v285];
        swift_bridgeObjectRetain();
        uint64_t v121 = v289;
        if (v258 < v259)
        {
          sub_1C024A4D4(v258, v258, v260);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C104B1B4(v260);
        }
        uint64_t v128 = (uint64_t)v307;
        uint64_t v120 = v290;
LABEL_73:
        uint64_t v126 = v288;
LABEL_74:
        unint64_t v127 = v317 + 1;
        sub_1BFE38718(v128, type metadata accessor for FormatContentSidecarPlacement);
        if (v127 == v121) {
          goto LABEL_230;
        }
        goto LABEL_75;
      }
      goto LABEL_88;
    }
  }
  v328 = v163;
  uint64_t v170 = v309;
  uint64_t v171 = v168 + ((*(unsigned __int8 *)(v309 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v309 + 80));
  swift_bridgeObjectRetain_n();
  unint64_t v327 = v167;
  v323 = (void *)v168;
  sub_1BFDB3920(v167);
  uint64_t v172 = *(void *)(v170 + 72);
  uint64_t v173 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v174 = v329;
    sub_1BFE3391C(v171, v329, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    uint64_t v175 = sub_1BFE36384();
    sub_1BFE38718(v174, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    uint64_t v176 = *(void *)(v175 + 16);
    int64_t v177 = v173[2];
    int64_t v178 = v177 + v176;
    if (__OFADD__(v177, v176)) {
      break;
    }
    long long v179 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v179 && v178 <= v173[3] >> 1)
    {
      if (*(void *)(v175 + 16)) {
        goto LABEL_110;
      }
    }
    else
    {
      if (v177 <= v178) {
        int64_t v180 = v177 + v176;
      }
      else {
        int64_t v180 = v177;
      }
      uint64_t v173 = sub_1BFE339EC(v179, v180, 1, v173, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      if (*(void *)(v175 + 16))
      {
LABEL_110:
        uint64_t v181 = v173[2];
        if ((v173[3] >> 1) - v181 < v176) {
          goto LABEL_226;
        }
        unint64_t v182 = (unint64_t)&v173[6 * v181 + 4];
        if (v175 + 32 < v182 + 48 * v176 && v182 < v175 + 32 + 48 * v176) {
          goto LABEL_251;
        }
        swift_arrayInitWithCopy();
        if (v176)
        {
          uint64_t v184 = v173[2];
          BOOL v70 = __OFADD__(v184, v176);
          uint64_t v185 = v184 + v176;
          if (v70) {
            goto LABEL_228;
          }
          v173[2] = v185;
        }
        goto LABEL_100;
      }
    }
    if (v176) {
      goto LABEL_223;
    }
LABEL_100:
    swift_bridgeObjectRelease();
    v171 += v172;
    if (!--v169)
    {
      swift_bridgeObjectRelease_n();
      sub_1BFDB3960(v327);
      a4 = v321;
      uint64_t v163 = v328;
      goto LABEL_121;
    }
  }
  __break(1u);
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v280 = sub_1C151D6DC();
  uint64_t v281 = (uint64_t)v298;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v280 - 8) + 56))(v298, 1, 1, v280);
  *(void *)&v337[0] = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, v305, 0, 0, v281, 0, (uint64_t *)v337, v341, 0);
  swift_bridgeObjectRelease();
  return sub_1BFDDF830(v281, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
}

uint64_t FormatContent.expand(placeholder:placeholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = *(void *)(v4 + *(int *)(type metadata accessor for FormatContent(0) + 60));
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(v12 + 16);
  if (v14)
  {
    uint64_t v21 = a4;
    uint64_t v22 = v4;
    uint64_t v15 = *(void *)(type metadata accessor for FormatContentSubgroup() - 8);
    uint64_t v16 = v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v17 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      sub_1C0EDE2E4(v16, a1, a2, a3, &v23);
      sub_1C104B1B4(v23);
      v16 += v17;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    uint64_t v13 = v24;
    a4 = v21;
  }
  uint64_t v18 = sub_1C151D6DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  uint64_t v24 = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, a4, 0, 0, (uint64_t)v11, 0, &v24, v13, 0);
  swift_bridgeObjectRelease();
  return sub_1BFDDF830((uint64_t)v11, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
}

uint64_t sub_1C0EDE2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v56 = a5;
  uint64_t v52 = a4;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v6 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatContentSlotItem();
  uint64_t v66 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for FormatContentSubgroup();
  uint64_t v12 = *(int *)(v51 + 32);
  uint64_t v55 = a1;
  uint64_t v13 = *(void *)(a1 + v12);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v69 = MEMORY[0x1E4FBC860];
  uint64_t v58 = *(void *)(v13 + 16);
  if (v58)
  {
    uint64_t v57 = v13 + 32;
    uint64_t v50 = v13;
    swift_bridgeObjectRetain_n();
    uint64_t v15 = 0;
    uint64_t v59 = v6;
    do
    {
      uint64_t v16 = (void *)(v57 + 48 * v15);
      uint64_t v17 = v16[4];
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        uint64_t v65 = v15;
        uint64_t v19 = v16[2];
        uint64_t v20 = v16[3];
        uint64_t v21 = v16[5];
        uint64_t v22 = v17 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
        uint64_t v63 = v16[1];
        swift_bridgeObjectRetain_n();
        uint64_t v62 = v19;
        swift_bridgeObjectRetain_n();
        uint64_t v61 = v20;
        swift_bridgeObjectRetain_n();
        uint64_t v64 = v17;
        swift_bridgeObjectRetain_n();
        uint64_t v60 = v21;
        swift_bridgeObjectRetain_n();
        uint64_t v23 = *(void *)(v66 + 72);
        uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
        while (2)
        {
          sub_1BFE3391C(v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
          sub_1BFE3391C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 5u:
            case 0xAu:
              sub_1BFE38718((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
              goto LABEL_8;
            case 8u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_7;
            case 9u:
              uint64_t v26 = *(void *)v8;
              uint64_t v25 = *((void *)v8 + 1);
              int v67 = v8[16];
              sub_1BFE38718((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v68 = v25;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                uint64_t v24 = sub_1C0EE1BC0(0, v24[2] + 1, 1, v24, &qword_1EB86F4A0, (uint64_t)&type metadata for FormatPlaceholder);
              }
              unint64_t v29 = v24[2];
              unint64_t v28 = v24[3];
              uint64_t v30 = v24;
              if (v29 >= v28 >> 1) {
                uint64_t v30 = sub_1C0EE1BC0((void *)(v28 > 1), v29 + 1, 1, v24, &qword_1EB86F4A0, (uint64_t)&type metadata for FormatPlaceholder);
              }
              v30[2] = v29 + 1;
              uint64_t v24 = v30;
              uint64_t v31 = &v30[3 * v29];
              uint64_t v32 = v68;
              v31[4] = v26;
              v31[5] = v32;
              *((unsigned char *)v31 + 48) = v67;
              goto LABEL_9;
            default:
LABEL_7:
              swift_release();
LABEL_8:
              sub_1BFE38718((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
LABEL_9:
              v22 += v23;
              if (--v18) {
                continue;
              }
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              uint64_t v15 = v65;
              break;
          }
          break;
        }
      }
      else
      {
        uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v15;
      sub_1BFEC8A4C((uint64_t)v24);
    }
    while (v15 != v58);
    swift_bridgeObjectRelease_n();
    uint64_t v33 = v69;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    int64_t v34 = *(void *)(v69 + 16);
    if (v34) {
      goto LABEL_20;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  uint64_t v33 = MEMORY[0x1E4FBC860];
  int64_t v34 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v34) {
    goto LABEL_26;
  }
LABEL_20:
  uint64_t v69 = v14;
  sub_1BFF661B8(0, v34, 0);
  uint64_t v35 = v69;
  uint64_t v36 = (uint64_t *)(v33 + 40);
  do
  {
    uint64_t v38 = *(v36 - 1);
    uint64_t v37 = *v36;
    uint64_t v69 = v35;
    unint64_t v40 = *(void *)(v35 + 16);
    unint64_t v39 = *(void *)(v35 + 24);
    swift_bridgeObjectRetain();
    if (v40 >= v39 >> 1)
    {
      sub_1BFF661B8(v39 > 1, v40 + 1, 1);
      uint64_t v35 = v69;
    }
    v36 += 3;
    *(void *)(v35 + 16) = v40 + 1;
    uint64_t v41 = v35 + 16 * v40;
    *(void *)(v41 + 32) = v38;
    *(void *)(v41 + 40) = v37;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease();
LABEL_27:
  uint64_t v42 = sub_1BFEF4060(v35);
  swift_bridgeObjectRelease();
  uint64_t v44 = v53;
  uint64_t v43 = v54;
  char v45 = sub_1BFF896B4(v53, v54, v42);
  uint64_t v46 = swift_bridgeObjectRelease();
  if (v45)
  {
    MEMORY[0x1F4188790](v46);
    *(&v50 - 4) = v55;
    *(&v50 - 3) = v44;
    *(&v50 - 2) = v43;
    uint64_t result = sub_1C0184F9C((void (*)(void *))sub_1C0EF3074, (uint64_t)(&v50 - 6), v52);
    uint64_t v48 = result;
  }
  else
  {
    sub_1BFEC0BBC(0, &qword_1EB87A7B8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, MEMORY[0x1E4FBBE00]);
    unint64_t v49 = (*(unsigned __int8 *)(*(void *)(v51 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v51 - 8) + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1C1529AE0;
    uint64_t result = sub_1BFE3391C(v55, v48 + v49, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  }
  *unint64_t v56 = v48;
  return result;
}

uint64_t sub_1C0EDE97C@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_1BFE38B54(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - v11;
  long long v13 = a1[1];
  v32[0] = *a1;
  v32[1] = v13;
  long long v14 = a1[3];
  double v32[2] = a1[2];
  void v32[3] = v14;
  uint64_t v15 = a2[1];
  uint64_t v30 = *a2;
  uint64_t v31 = v15;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v27 = v31;
  uint64_t v28 = v30;
  uint64_t v16 = (int *)type metadata accessor for FormatContentSubgroup();
  sub_1BFE3391C((uint64_t)a2 + v16[5], (uint64_t)a5 + v16[5], (uint64_t (*)(void))sub_1BFEBC1C4);
  uint64_t v17 = *(uint64_t *)((char *)a2 + v16[6]);
  uint64_t v18 = *(uint64_t *)((char *)a2 + v16[7]);
  swift_bridgeObjectRetain();
  sub_1BFFD14FC((uint64_t)v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = v29;
  uint64_t v21 = sub_1C0EEA80C(v19, a3, a4, (uint64_t *)v32, (uint64_t)v33, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned char *))sub_1C0EEA49C);
  uint64_t v29 = v20;
  sub_1BFFD147C((uint64_t)v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(uint64_t *)((char *)a2 + v16[9]);
  sub_1BFEDB230((uint64_t)a2 + v16[10], (uint64_t)v12);
  sub_1C0EEC764((uint64_t)v12, (uint64_t)a5 + v16[10], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v23 = *(uint64_t *)((char *)a2 + v16[11]);
  uint64_t v24 = v27;
  *a5 = v28;
  a5[1] = v24;
  *(void *)((char *)a5 + v16[6]) = v17;
  *(void *)((char *)a5 + v16[7]) = v18;
  *(void *)((char *)a5 + v16[9]) = v22;
  *(void *)((char *)a5 + v16[8]) = v21;
  *(void *)((char *)a5 + v16[12]) = MEMORY[0x1E4FBC860];
  *(void *)((char *)a5 + v16[11]) = v23;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.expandAsSections(placeholder:placeholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  char v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - v10;
  type metadata accessor for FormatContent(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C0EE9FEC(v12, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1C151D6DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  uint64_t v17 = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, a4, 0, 0, (uint64_t)v11, 0, &v17, v13, 0);
  swift_bridgeObjectRelease();
  return sub_1BFDDF830((uint64_t)v11, (unint64_t *)&unk_1EB882A00, v8);
}

uint64_t sub_1C0EDEDBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v72 = (void *)a5;
  uint64_t v68 = a4;
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  sub_1BFE38B54(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v67 = (uint64_t)&v64 - v7;
  sub_1BFEBC1C4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v66 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatContentSlotItem();
  uint64_t v82 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for FormatContentSubgroup();
  uint64_t v16 = *(int *)(v65 + 32);
  uint64_t v71 = a1;
  uint64_t v17 = *(void *)((char *)a1 + v16);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v85 = MEMORY[0x1E4FBC860];
  uint64_t v74 = *(uint64_t **)(v17 + 16);
  if (v74)
  {
    uint64_t v73 = v17 + 32;
    uint64_t v64 = v17;
    swift_bridgeObjectRetain_n();
    uint64_t v19 = 0;
    uint64_t v75 = v10;
    do
    {
      uint64_t v20 = (void *)(v73 + 48 * (void)v19);
      uint64_t v21 = v20[4];
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        unint64_t v81 = v19;
        uint64_t v23 = v20[2];
        uint64_t v24 = v20[3];
        uint64_t v25 = v20[5];
        uint64_t v26 = v21 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
        uint64_t v79 = v20[1];
        swift_bridgeObjectRetain_n();
        uint64_t v78 = v23;
        swift_bridgeObjectRetain_n();
        uint64_t v77 = v24;
        swift_bridgeObjectRetain_n();
        uint64_t v80 = v21;
        swift_bridgeObjectRetain_n();
        uint64_t v76 = v25;
        swift_bridgeObjectRetain_n();
        uint64_t v27 = *(void *)(v82 + 72);
        uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
        while (2)
        {
          sub_1BFE3391C(v26, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
          sub_1BFE3391C((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 5u:
            case 0xAu:
              sub_1BFE38718((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
              goto LABEL_8;
            case 8u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_7;
            case 9u:
              uint64_t v30 = *(void *)v12;
              uint64_t v29 = *((void *)v12 + 1);
              LODWORD(v83) = v12[16];
              sub_1BFE38718((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v84 = v29;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                uint64_t v28 = sub_1C0EE1BC0(0, v28[2] + 1, 1, v28, &qword_1EB86F4A0, (uint64_t)&type metadata for FormatPlaceholder);
              }
              unint64_t v33 = v28[2];
              unint64_t v32 = v28[3];
              int64_t v34 = v28;
              if (v33 >= v32 >> 1) {
                int64_t v34 = sub_1C0EE1BC0((void *)(v32 > 1), v33 + 1, 1, v28, &qword_1EB86F4A0, (uint64_t)&type metadata for FormatPlaceholder);
              }
              v34[2] = v33 + 1;
              uint64_t v28 = v34;
              uint64_t v35 = &v34[3 * v33];
              uint64_t v36 = v84;
              v35[4] = v30;
              v35[5] = v36;
              *((unsigned char *)v35 + 48) = v83;
              goto LABEL_9;
            default:
LABEL_7:
              swift_release();
LABEL_8:
              sub_1BFE38718((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
LABEL_9:
              v26 += v27;
              if (--v22) {
                continue;
              }
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              uint64_t v19 = v81;
              break;
          }
          break;
        }
      }
      else
      {
        uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v19 = (uint64_t *)((char *)v19 + 1);
      sub_1BFEC8A4C((uint64_t)v28);
    }
    while (v19 != v74);
    swift_bridgeObjectRelease_n();
    uint64_t v37 = v85;
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  int64_t v38 = *(void *)(v37 + 16);
  uint64_t v39 = v70;
  if (v38)
  {
    uint64_t v85 = v18;
    sub_1BFF661B8(0, v38, 0);
    uint64_t v40 = v85;
    uint64_t v41 = (uint64_t *)(v37 + 40);
    do
    {
      uint64_t v43 = *(v41 - 1);
      uint64_t v42 = *v41;
      uint64_t v85 = v40;
      unint64_t v45 = *(void *)(v40 + 16);
      unint64_t v44 = *(void *)(v40 + 24);
      swift_bridgeObjectRetain();
      if (v45 >= v44 >> 1)
      {
        sub_1BFF661B8(v44 > 1, v45 + 1, 1);
        uint64_t v40 = v85;
      }
      v41 += 3;
      *(void *)(v40 + 16) = v45 + 1;
      uint64_t v46 = v40 + 16 * v45;
      *(void *)(v46 + 32) = v43;
      *(void *)(v46 + 40) = v42;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBC860];
  }
  uint64_t v47 = sub_1BFEF4060(v40);
  swift_bridgeObjectRelease();
  uint64_t v48 = v69;
  char v49 = sub_1BFF896B4(v69, v39, v47);
  swift_bridgeObjectRelease();
  if ((v49 & 1) == 0) {
    return sub_1BFE3391C((uint64_t)v71, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  }
  uint64_t v50 = v48;
  uint64_t v51 = v71;
  uint64_t v52 = *v71;
  uint64_t v83 = v71[1];
  uint64_t v84 = v52;
  uint64_t v53 = (int *)v65;
  uint64_t v54 = v66;
  uint64_t v55 = sub_1BFE3391C((uint64_t)v71 + *(int *)(v65 + 20), v66, (uint64_t (*)(void))sub_1BFEBC1C4);
  unint64_t v81 = &v64;
  uint64_t v56 = *(void *)((char *)v51 + v53[6]);
  uint64_t v57 = *(void *)((char *)v51 + v53[7]);
  MEMORY[0x1F4188790](v55);
  *(&v64 - 4) = (uint64_t)v51;
  *(&v64 - 3) = v50;
  *(&v64 - 2) = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_1C018522C((void (*)(uint64_t *__return_ptr, void *))sub_1C0EF3050, (uint64_t)(&v64 - 6), v68);
  uint64_t v58 = *(void *)((char *)v51 + v53[9]);
  uint64_t v59 = v67;
  sub_1BFEDB230((uint64_t)v51 + v53[10], v67);
  uint64_t v60 = v72;
  sub_1C0EEC764(v59, (uint64_t)v72 + v53[10], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v61 = *(void *)((char *)v51 + v53[11]);
  uint64_t v62 = v83;
  *uint64_t v60 = v84;
  v60[1] = v62;
  sub_1C0EEC764(v54, (uint64_t)v60 + v53[5], (uint64_t (*)(void))sub_1BFEBC1C4);
  *(void *)((char *)v60 + v53[6]) = v56;
  *(void *)((char *)v60 + v53[7]) = v57;
  *(void *)((char *)v60 + v53[9]) = v58;
  *(void *)((char *)v60 + v53[8]) = MEMORY[0x1E4FBC860];
  *(void *)((char *)v60 + v53[12]) = v82;
  *(void *)((char *)v60 + v53[11]) = v61;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EDF5AC@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v9 = sub_1C151635C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[1];
  v24[0] = *a1;
  v24[1] = v13;
  long long v14 = a1[3];
  v24[2] = a1[2];
  v24[3] = v14;
  uint64_t v15 = a2[1];
  uint64_t v22 = *a2;
  uint64_t v23 = v15;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151634C();
  sub_1C151633C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v16 = v22;
  uint64_t v17 = v23;
  type metadata accessor for FormatContentSubgroup();
  swift_bridgeObjectRetain();
  sub_1BFFD14FC((uint64_t)v24);
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C0EEA80C(v18, v21, a4, (uint64_t *)v24, (uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned char *))sub_1C0EEA49C);
  sub_1BFFD147C((uint64_t)v24);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v16;
  a5[1] = v17;
  a5[2] = v19;
  return result;
}

void *sub_1C0EDF770(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, &qword_1EB86BB00, (uint64_t)&type metadata for SportsDataVisualization);
}

uint64_t sub_1C0EDF784(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA19CA90, type metadata accessor for FormatVersioningModeSelection, type metadata accessor for FormatVersioningModeSelection, type metadata accessor for FormatVersioningModeSelection);
}

uint64_t sub_1C0EDF7CC(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1BFEC0BBC(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C0EE9A1C(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_1C0EDFA68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8718, type metadata accessor for FormatDeprecationWarning, type metadata accessor for FormatDeprecationWarning, type metadata accessor for FormatDeprecationWarning);
}

void *sub_1C0EDFAB0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1BFEFCD08, (unint64_t *)&qword_1EB863660);
}

uint64_t sub_1C0EDFAD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, type metadata accessor for FormatInspectionItem, type metadata accessor for FormatInspectionItem);
}

void *sub_1C0EDFB20(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE8FE0(a1, a2, a3, a4, (unint64_t *)&qword_1EA1A8720, (uint64_t)&type metadata for FormatInspectionGroup);
}

void *sub_1C0EDFB34(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1C0605F28, (unint64_t *)&qword_1EA1974E0);
}

void *sub_1C0EDFB5C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE87B0(a1, a2, a3, a4, (void (*)(void))sub_1C0EF34A8, &qword_1EB85F340);
}

void *sub_1C0EDFB84(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, &qword_1EB863620, (uint64_t)&type metadata for FormatDOMNode);
}

void *sub_1C0EDFB98(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      unint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 25;
      }
      void v12[2] = v10;
      v12[3] = 2 * (v14 >> 3);
      uint64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v10 + 4]) {
          memmove(v15, a4 + 4, 8 * v10);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEEFD8(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EDFCD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB890470, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
}

void *sub_1C0EDFD18(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEE07AC(a1, a2, a3, a4, &qword_1EB87A758, (uint64_t)&type metadata for FormatContentSlot.Resolved);
}

uint64_t sub_1C0EDFD2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&qword_1EB86BA98, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t (*)(void))type metadata accessor for FormatModel, (uint64_t (*)(void))type metadata accessor for FormatModel);
}

void *sub_1C0EDFD74(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF2F98();
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAC64(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EDFE80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB87A8F0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAB78(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EDFFB0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BB10, (uint64_t)&type metadata for SportsTaxonomyGraphNode);
}

uint64_t sub_1C0EDFFC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, (uint64_t (*)(void))sub_1C0181BEC, (uint64_t (*)(void))sub_1C0181BEC);
}

void *sub_1C0EE000C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB863628, (uint64_t)&type metadata for FormatMergeConfig, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEBFD0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE0154(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB8945B0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEA3A4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE029C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB85C710, (uint64_t)&type metadata for FormatWebArchiveResource, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEC0C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE03CC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1F1C(a1, a2, a3, a4, &qword_1EA1A8B60, (uint64_t)&type metadata for FormatContentResource);
}

void *sub_1C0EE03E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB86BBA0, (uint64_t)&type metadata for FormatContentSlotItemAuxiliary.Resolved, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BFFA7458(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE0510(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB86EDF0, type metadata accessor for WebEmbedDataVisualizationDataRequest, type metadata accessor for WebEmbedDataVisualizationDataRequest, type metadata accessor for WebEmbedDataVisualizationDataRequest);
}

void *sub_1C0EE0558(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB86EE28, (uint64_t)&type metadata for FormatPuzzleStatistic, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EED0B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE069C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF26B0();
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EED1B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE07A8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE2F00(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8B68, (uint64_t)&type metadata for FormatContentSubgroupSection.Resolved);
}

uint64_t sub_1C0EE07BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB86EE20, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1C0EE0804(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA196770, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
}

void *sub_1C0EE084C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1C060824C, qword_1EB871820);
}

void *sub_1C0EE0874(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1F1C(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8998, (uint64_t)&type metadata for FormatGroupColumnSystem);
}

void *sub_1C0EE0888(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA197260, (uint64_t)&type metadata for FormatDerivedDataOptionReference, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EE9CE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE09B8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1BC0(a1, a2, a3, a4, &qword_1EA1A8920, (uint64_t)&type metadata for FormatDerivedDataContextScope);
}

void *sub_1C0EE09CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF27AC();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EED4FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE0AF4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE33E4(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BAF0, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector);
}

void *sub_1C0EE0B08(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF283C();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EED640(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE0C28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB883240, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAF4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE0D58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF28CC();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4]) {
          memmove(v12, a4 + 4, 152 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EED784(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE0E80(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3EF0(a1, a2, a3, a4, &qword_1EA1A8770, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector);
}

void *sub_1C0EE0E94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF29B0();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 216);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[27 * v8 + 4]) {
          memmove(v12, a4 + 4, 216 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EED8C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE0FBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB870550, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4]) {
          memmove(v12, a4 + 4, 208 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB714(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE1108(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1534(a1, a2, a3, a4, (void (*)(void))sub_1C0EF2A40, (unint64_t *)&qword_1EA1A87A0, (uint64_t (*)(void))sub_1C0AEBAA0, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector);
}

void *sub_1C0EE1144(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE169C(a1, a2, a3, a4, &qword_1EA1A8790, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector);
}

void *sub_1C0EE1158(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF2AD0();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4]) {
          memmove(v12, a4 + 4, 160 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEDA04(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE1278(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A87B0, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4]) {
          memmove(v12, a4 + 4, 152 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB434(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE13C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF271C();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4]) {
          memmove(v12, a4 + 4, 160 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EED3B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE14E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3D68(a1, a2, a3, a4, &qword_1EA1A8758, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector);
}

void *sub_1C0EE14F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1534(a1, a2, a3, a4, (void (*)(void))sub_1C0EF2B60, (unint64_t *)&qword_1EA1A87E0, (uint64_t (*)(void))sub_1C0EF2BF0, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector);
}

void *sub_1C0EE1534(void *result, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6, uint64_t (*a7)(void), uint64_t a8)
{
  char v12 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v14 = a2;
    goto LABEL_8;
  }
  unint64_t v13 = a4[3];
  uint64_t v14 = v13 >> 1;
  if ((uint64_t)(v13 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v14 + 0x4000000000000000 >= 0)
  {
    uint64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v14 = a2;
    }
LABEL_8:
    uint64_t v15 = a4[2];
    if (v14 <= v15) {
      uint64_t v16 = a4[2];
    }
    else {
      uint64_t v16 = v14;
    }
    if (v16)
    {
      a5(0);
      uint64_t v17 = (void *)swift_allocObject();
      size_t v18 = _swift_stdlib_malloc_size(v17);
      v17[2] = v15;
      v17[3] = 2 * ((uint64_t)(v18 - 32) / 176);
      uint64_t v19 = v17 + 4;
      if (v12)
      {
LABEL_13:
        if (v17 != a4 || v19 >= &a4[22 * v15 + 4]) {
          memmove(v19, a4 + 4, 176 * v15);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v19 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEDB48(0, v15, (unint64_t)v19, (uint64_t)a4, a6, a7, a8);
LABEL_22:
    swift_bridgeObjectRelease();
    return v17;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE1688(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE169C(a1, a2, a3, a4, &qword_1EA1A87D0, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector);
}

void *sub_1C0EE169C(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      char v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      void v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 168);
      uint64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[21 * v10 + 4]) {
          memmove(v14, a4 + 4, 168 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB808(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE17F0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF2C44();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      char v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEDC70(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE1918(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFE339EC(a1, a2, a3, a4, &qword_1EA1A87F0, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector);
}

void *sub_1C0EE192C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF2CD4();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      char v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEDDB4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE1A50(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1A64(a1, a2, a3, a4, &qword_1EB870510, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector);
}

void *sub_1C0EE1A64(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      char v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      void v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 40);
      uint64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[5 * v10 + 4]) {
          memmove(v14, a4 + 4, 40 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EECFC4(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE1BAC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1BC0(a1, a2, a3, a4, (unint64_t *)&qword_1EB87C438, (uint64_t)&type metadata for FormatNodeCacheKey);
}

void *sub_1C0EE1BC0(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      char v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      void v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      uint64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4]) {
          memmove(v14, a4 + 4, 24 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEF1C0(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE1D0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB8931C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSourceItemTipSource, (uint64_t (*)(void))type metadata accessor for FormatSourceItemTipSource, (uint64_t (*)(void))type metadata accessor for FormatSourceItemTipSource);
}

void *sub_1C0EE1D54(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_1BFEC0BBC(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = (void *)swift_allocObject();
      int64_t v15 = _swift_stdlib_malloc_size(v14);
      uint64_t v16 = v15 - 32;
      if (v15 < 32) {
        uint64_t v16 = v15 - 25;
      }
      v14[2] = v12;
      void v14[3] = 2 * (v16 >> 3);
      uint64_t v17 = v14 + 4;
      if (v9) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v12 + 4]) {
          memmove(v17, a4 + 4, 8 * v12);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEA190(0, v12, (unint64_t)v17, (uint64_t)a4, a7);
LABEL_24:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE1E8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB870500, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
}

uint64_t sub_1C0EE1ED4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8768, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FAAFC8]);
}

void *sub_1C0EE1F1C(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 17;
      }
      void v12[2] = v10;
      v12[3] = 2 * (v14 >> 4);
      int64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      int64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v10 + 4]) {
          memmove(v15, a4 + 4, 16 * v10);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BFEF6BF8(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE2054(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB870518, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEDEF8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE2184(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB860E50, (uint64_t)&type metadata for FormatMenuItemData, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB040(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C0EE22CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB863648, MEMORY[0x1E4FBC6E0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      int64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      int64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EED2CC(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE23FC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8670, (uint64_t)&type metadata for FormatDerivedDataInstruction);
}

void *sub_1C0EE2410(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A5250, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEBBF4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE2540(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1BFF081C0, (unint64_t *)&qword_1EB8715C0);
}

void *sub_1C0EE2568(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1A64(a1, a2, a3, a4, &qword_1EB87A740, (uint64_t)&type metadata for FormatBorderEdge.Path);
}

void *sub_1C0EE257C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1C0031044, (unint64_t *)&qword_1EB877A00);
}

void *sub_1C0EE25A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB87A600, (uint64_t)&type metadata for FeedScoredHeadline, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAE58(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE26D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA19CA30, (uint64_t)&type metadata for FeedScoredIssue, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEB138(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE2804(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
}

void *sub_1C0EE284C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB85E198, (uint64_t)&type metadata for LayeredMediaLayer, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 95;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 7);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEB22C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE297C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA1A8AE8, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEE0E4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE2AC8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8B50, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEDFEC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE2C14(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE87B0(a1, a2, a3, a4, (void (*)(void))sub_1C0EF3228, &qword_1EA1A8AA0);
}

void *sub_1C0EE2C3C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1C00626B4, (unint64_t *)&qword_1EB887280);
}

void *sub_1C0EE2C64(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB890440, (uint64_t)&type metadata for GroupLayoutRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEE1DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE2D94(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1A64(a1, a2, a3, a4, &qword_1EA1A8690, (uint64_t)&type metadata for FormatBindResult.FailureReason);
}

void *sub_1C0EE2DA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8688, (uint64_t)&type metadata for FormatBindExpression, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEE2D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE2EEC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE2F00(a1, a2, a3, a4, &qword_1EA1A8850, (uint64_t)&type metadata for DebugFormatErrorModel.Section);
}

void *sub_1C0EE2F00(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      void v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      uint64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4]) {
          memmove(v14, a4 + 4, 24 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEF1C0(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE3050(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB894620, MEMORY[0x1E4FABF70], MEMORY[0x1E4FABF70], MEMORY[0x1E4FABF70]);
}

uint64_t sub_1C0EE3098(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB8945A0, MEMORY[0x1E4FAC148], MEMORY[0x1E4FAC148], MEMORY[0x1E4FAC148]);
}

void *sub_1C0EE30E0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE6BFC(a1, a2, a3, a4, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, sub_1C01004A4);
}

void *sub_1C0EE3114(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1BC0(a1, a2, a3, a4, &qword_1EB86F4A0, (uint64_t)&type metadata for FormatPlaceholder);
}

void *sub_1C0EE3128(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB880EA0, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFEE03A8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE3270(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA19C628, (uint64_t)&type metadata for DebugFormatAlert, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEE888(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE33BC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1F1C(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8A00, (uint64_t)&type metadata for DebugFormatUploadEntryResult);
}

void *sub_1C0EE33D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE33E4(a1, a2, a3, a4, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem);
}

void *sub_1C0EE33E4(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 + 31;
      }
      void v12[2] = v10;
      v12[3] = 2 * (v14 >> 6);
      int64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      int64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[8 * v10 + 4]) {
          memmove(v15, a4 + 4, v10 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BFEE08E4(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE351C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, qword_1EB8701F8, (uint64_t)&type metadata for SportsConfigResourceParameter, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EECAC8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE364C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB863618, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemAuxiliaryItem, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
}

uint64_t sub_1C0EE3694(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA19CAA8, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdRequester.ScheduledRequest, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
}

char *sub_1C0EE36DC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFFBAF14(a1, a2, a3, a4, (unint64_t *)&unk_1EB860E40, (uint64_t)&type metadata for FormatItemTrait);
}

uint64_t sub_1C0EE36F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB85EFF8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(void))type metadata accessor for FeedCustomItem, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
}

void *sub_1C0EE3738(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3C38(a1, a2, a3, a4, &qword_1EB85F020, &qword_1EB85EF58, (unint64_t *)&unk_1EB85EF60, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
}

uint64_t sub_1C0EE3768(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA196920, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
}

void *sub_1C0EE37B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3C38(a1, a2, a3, a4, &qword_1EA1A8B20, &qword_1EA1A8B28, (unint64_t *)&unk_1EA1A8B30, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
}

void *sub_1C0EE37E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA196918, (uint64_t)&type metadata for FeedPuzzleType, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEE3C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE3910(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3934(a1, a2, a3, a4, &qword_1EA1A8B00, &qword_1EA1A8B08, (unint64_t *)&unk_1EA1A8B10);
}

void *sub_1C0EE3934(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, unint64_t *a7)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1C0EF32F8(0, a5, a6, a7);
      int64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      void v13[2] = v11;
      void v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEA29C(0, v11, (unint64_t)v16, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE3A50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB86BA90, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4]) {
          memmove(v12, a4 + 4, 208 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEE4BC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE3B9C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3934(a1, a2, a3, a4, &qword_1EB86BC10, &qword_1EB86B368, &qword_1EB861AD0);
}

uint64_t sub_1C0EE3BC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB85C6F8, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
}

void *sub_1C0EE3C08(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3C38(a1, a2, a3, a4, (unint64_t *)&unk_1EB85C720, &qword_1EB85C4D8, &qword_1EB85C520, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

void *sub_1C0EE3C38(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, unint64_t *a7, void (*a8)(uint64_t))
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_1BFFB83DC(0, a5, a6, a7, a8);
      int64_t v14 = (void *)swift_allocObject();
      int64_t v15 = _swift_stdlib_malloc_size(v14);
      uint64_t v16 = v15 - 32;
      if (v15 < 32) {
        uint64_t v16 = v15 - 17;
      }
      v14[2] = v12;
      void v14[3] = 2 * (v16 >> 4);
      uint64_t v17 = v14 + 4;
      if (v9) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v14 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v12 + 4]) {
          memmove(v17, a4 + 4, 16 * v12);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEA29C(0, v12, (unint64_t)v17, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE3D54(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3D68(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BA80, (uint64_t)&type metadata for FeedTag);
}

void *sub_1C0EE3D68(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      void v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 152);
      int64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[19 * v10 + 4]) {
          memmove(v14, a4 + 4, 152 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEE5B0(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE3EB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3934(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BC00, (unint64_t *)&unk_1EB86B358, &qword_1EB86B410);
}

void *sub_1C0EE3EDC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3EF0(a1, a2, a3, a4, (unint64_t *)&unk_1EB85E170, (uint64_t)&type metadata for FeedIssue);
}

void *sub_1C0EE3EF0(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      void v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 144);
      int64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[18 * v10 + 4]) {
          memmove(v14, a4 + 4, 144 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEE6A0(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE4040(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3934(a1, a2, a3, a4, &qword_1EB860EA8, &qword_1EB860D00, &qword_1EB860D28);
}

void *sub_1C0EE4064(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFEC0BBC(0, (unint64_t *)&unk_1EA1A8650, (uint64_t (*)(uint64_t))sub_1BFFB4FA4, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAD50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE41A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&qword_1EB895EB8, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEC9D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE42D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A88F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
}

uint64_t sub_1C0EE431C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8660, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatsProcessingData, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
}

uint64_t sub_1C0EE4364(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA19C578, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(void))type metadata accessor for PuzzleStreak, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
}

void *sub_1C0EE43AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB85F008, (uint64_t)&type metadata for GeoLocation, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAC64(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE44DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB85E160, (uint64_t)&type metadata for FeedTopicCluster, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEBDE0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE4624(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE2F00(a1, a2, a3, a4, (unint64_t *)&qword_1EA19C720, (uint64_t)&type metadata for DebugInspectionDataSection);
}

void *sub_1C0EE4638(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFD4687C(0, &qword_1EA1A8860, &qword_1EA1A8868, (uint64_t)&type metadata for DebugInspectionDataSection, MEMORY[0x1E4FBB320]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEEAC0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE4770(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFE339EC(a1, a2, a3, a4, &qword_1EA1A8918, (uint64_t)&type metadata for FormatDerivedDataBindingScope);
}

void *sub_1C0EE4784(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8928, (uint64_t)&type metadata for FormatDerivedDataResultBlock, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 95;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 7);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEEBEC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE48B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA1A8930, (uint64_t)&type metadata for FormatDerivedDataResultBlockReference, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEECE0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE4A00(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA19C7C0, (uint64_t)&type metadata for FormatDerivedDataResultItemReference, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEC7CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE4B30(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8940, type metadata accessor for FormatDerivedDataResultOptionReference, type metadata accessor for FormatDerivedDataResultOptionReference, type metadata accessor for FormatDerivedDataResultOptionReference);
}

uint64_t sub_1C0EE4B78(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8950, (uint64_t (*)(uint64_t))sub_1C03B73C4, (uint64_t (*)(void))sub_1C03B73C4, (uint64_t (*)(void))sub_1C03B73C4);
}

uint64_t sub_1C0EE4BC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB87A810, type metadata accessor for FormatPropertyDefinition, type metadata accessor for FormatPropertyDefinition, type metadata accessor for FormatPropertyDefinition);
}

uint64_t sub_1C0EE4C08(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0EF2D64();
  sub_1BFE38B54(0, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1BFE38B54(0, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C0EE9B78(0, v8, v19, a4, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1C0EE4F14(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0EF2DF4();
  sub_1BFE38B54(0, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1BFE38B54(0, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C0EE9B78(0, v8, v19, a4, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1C0EE5220(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A88D8, (uint64_t (*)(uint64_t))sub_1C00F6BC8, (uint64_t (*)(void))sub_1C00F6BC8, (uint64_t (*)(void))sub_1C00F6BC8);
}

uint64_t sub_1C0EE5268(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0EF2E84();
  sub_1BFE38B54(0, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1BFE38B54(0, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C0EE9B78(0, v8, v19, a4, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1C0EE5574(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A88C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataWarningError, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
}

uint64_t sub_1C0EE55BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB87C370, type metadata accessor for FormatCompilingSlotDefinition, type metadata accessor for FormatCompilingSlotDefinition, type metadata accessor for FormatCompilingSlotDefinition);
}

uint64_t sub_1C0EE5604(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8910, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBinderResult, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
}

uint64_t sub_1C0EE564C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8900, (uint64_t (*)(uint64_t))sub_1C06066AC, (uint64_t (*)(void))sub_1C06066AC, (uint64_t (*)(void))sub_1C06066AC);
}

uint64_t sub_1C0EE5694(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA19C710, (uint64_t (*)(uint64_t))type metadata accessor for DebugJournalGroupItem, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
}

uint64_t sub_1C0EE56DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB861B10, type metadata accessor for FeedItem, type metadata accessor for FeedItem, type metadata accessor for FeedItem);
}

uint64_t sub_1C0EE5724(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8750, (uint64_t (*)(uint64_t))sub_1BFDA666C, (uint64_t (*)(void))sub_1BFDA666C, (uint64_t (*)(void))sub_1BFDA666C);
}

void *sub_1C0EE576C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1C06077B4, &qword_1EB8715F0);
}

void *sub_1C0EE5794(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB86BA50, (uint64_t)&type metadata for FeedJournalGroup, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 248);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[31 * v8 + 4]) {
          memmove(v12, a4 + 4, 248 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB528(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE58E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB86BA58, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
}

void *sub_1C0EE592C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFEC0BBC(0, &qword_1EA1A8808, (uint64_t (*)(uint64_t))sub_1C024A9E4, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EE9EE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE5A68(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE5AD0(a1, a2, a3, a4, &qword_1EA1A8818, (uint64_t (*)(uint64_t))sub_1C024AAB8, (void (*)(void))sub_1C024AAB8);
}

void *sub_1C0EE5A9C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE5AD0(a1, a2, a3, a4, &qword_1EA1A8830, (uint64_t (*)(uint64_t))sub_1C024ABEC, (void (*)(void))sub_1C024ABEC);
}

void *sub_1C0EE5AD0(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_1BFEC0BBC(0, a5, a6, MEMORY[0x1E4FBBE00]);
      size_t v14 = (void *)swift_allocObject();
      size_t v15 = _swift_stdlib_malloc_size(v14);
      v14[2] = v12;
      void v14[3] = 2 * ((uint64_t)(v15 - 32) / 24);
      uint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[3 * v12 + 4]) {
          memmove(v16, a4 + 4, 24 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v14 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EE9DD4(0, v12, (unint64_t)v16, (uint64_t)a4, a7);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE5C20(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE87B0(a1, a2, a3, a4, (void (*)(void))sub_1C0EF33A8, &qword_1EB8715E8);
}

void *sub_1C0EE5C48(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE6BFC(a1, a2, a3, a4, &qword_1EB894630, (uint64_t (*)(uint64_t))sub_1C01EE344, (void (*)(void))sub_1C01EE344);
}

void *sub_1C0EE5C7C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1BC0(a1, a2, a3, a4, (unint64_t *)&unk_1EB8904E8, (uint64_t)&type metadata for FormatAccessibilityCustomAction);
}

void *sub_1C0EE5C90(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1F1C(a1, a2, a3, a4, &qword_1EB860EA0, (uint64_t)&type metadata for FormatGroupMaskSupplementaryLayer);
}

uint64_t sub_1C0EE5CA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BB20, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
}

void *sub_1C0EE5CEC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1F1C(a1, a2, a3, a4, &qword_1EA1A8AF8, MEMORY[0x1E4FBAF58]);
}

uint64_t sub_1C0EE5D00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA19C750, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem);
}

void *sub_1C0EE5D48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A88A8, (uint64_t)&type metadata for DebugFormatVersioningModeSection, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEEDD4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE5E8C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE3EF0(a1, a2, a3, a4, &qword_1EA1A8AE0, (uint64_t)&type metadata for PuzzleMenuConfig);
}

char *sub_1C0EE5EA0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFFBAF14(a1, a2, a3, a4, &qword_1EA1A8AD8, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute);
}

uint64_t sub_1C0EE5EB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA19C5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
}

uint64_t sub_1C0EE5EFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB860E10, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
}

void *sub_1C0EE5F44(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB86F6B0, (uint64_t)&type metadata for FeedGapOffline, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEE794(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE6090(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFE339EC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A86C0, (uint64_t)&type metadata for DebugInspectViewSection);
}

void *sub_1C0EE60A4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, &qword_1EB87A7C0, (uint64_t)&type metadata for FormatDataLayoutValue);
}

void *sub_1C0EE60B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8B78, (uint64_t)&type metadata for HGroupLayoutContext, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 400);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[50 * v8 + 4]) {
          memmove(v12, a4 + 4, 400 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB620(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE6204(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFEC0BBC(0, (unint64_t *)&unk_1EA1A86B0, (uint64_t (*)(uint64_t))sub_1C066A370, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEEECC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE635C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1BFF05F54, (unint64_t *)&qword_1EB8779F0);
}

char *sub_1C0EE6384(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFFBAF14(a1, a2, a3, a4, &qword_1EA1A89F8, (uint64_t)&type metadata for DebugFormatInventoryStatus);
}

uint64_t sub_1C0EE6398(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8A10, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, (uint64_t (*)(void))type metadata accessor for SharedItem, (uint64_t (*)(void))type metadata accessor for SharedItem);
}

void *sub_1C0EE63E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA1A8AC8, (uint64_t)&type metadata for SharedItemManager.ShareAttributionViewContext, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EECBBC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE6510(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, &qword_1EB86BA60, (uint64_t)&type metadata for FeedPluginFactoryResult);
}

uint64_t sub_1C0EE6524(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A88B0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
}

void *sub_1C0EE656C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1BC0(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A89B0, (uint64_t)&type metadata for DebugFormatDebuggerSourceHighlighter.Token);
}

void *sub_1C0EE6580(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB86BAB0, (uint64_t)&type metadata for FormatWebEmbed.Traits, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAB78(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE66B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, qword_1EB863630, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEF0C8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE67F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, &qword_1EA1A8738, (uint64_t)&type metadata for DebugFormatTestCase);
}

void *sub_1C0EE680C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1A64(a1, a2, a3, a4, &qword_1EA1A8838, (uint64_t)&type metadata for DebugFormatTestSection);
}

void *sub_1C0EE6820(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A610, (uint64_t)&type metadata for FeedGroupDecoration);
}

uint64_t sub_1C0EE6834(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8740, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatTestSuiteResultItem, (uint64_t (*)(void))type metadata accessor for DebugFormatTestSuiteResultItem, (uint64_t (*)(void))type metadata accessor for DebugFormatTestSuiteResultItem);
}

uint64_t sub_1C0EE687C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8730, type metadata accessor for DebugFormatTestCaseResult, type metadata accessor for DebugFormatTestCaseResult, type metadata accessor for DebugFormatTestCaseResult);
}

uint64_t sub_1C0EE68C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA19C908, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatUploadHiddenEntry, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
}

uint64_t sub_1C0EE690C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A89F0, type metadata accessor for DebugFormatUploadPrivateEntry, type metadata accessor for DebugFormatUploadPrivateEntry, type metadata accessor for DebugFormatUploadPrivateEntry);
}

void *sub_1C0EE6954(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA19C8E0, (uint64_t)&type metadata for DebugFormatUploadSection, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EECDDC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE6A84(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1BC0(a1, a2, a3, a4, &qword_1EA1A88B8, (uint64_t)&type metadata for FormatFileKey);
}

void *sub_1C0EE6A98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA19C5C0, (uint64_t)&type metadata for FormatDebuggerBreakpoint, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEF2B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE6BC8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE6BFC(a1, a2, a3, a4, &qword_1EA1A2778, (uint64_t (*)(uint64_t))sub_1C03A1444, (void (*)(void))sub_1C03A1444);
}

void *sub_1C0EE6BFC(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_1BFEC0BBC(0, a5, a6, MEMORY[0x1E4FBBE00]);
      size_t v14 = (void *)swift_allocObject();
      size_t v15 = _swift_stdlib_malloc_size(v14);
      v14[2] = v12;
      void v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      uint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v14 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEC8C0(0, v12, (unint64_t)v16, (uint64_t)a4, a7);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE6D48(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8AB8, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, (uint64_t (*)(void))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, (uint64_t (*)(void))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
}

uint64_t sub_1C0EE6D90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8AB0, MEMORY[0x1E4F7AD70], MEMORY[0x1E4F7AD70], MEMORY[0x1E4F7AD70]);
}

void *sub_1C0EE6DD8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8728, (uint64_t)&type metadata for DebugFormatTestCaseMultiResultSection, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEF3A8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE6F08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA19C640, (uint64_t (*)(uint64_t))type metadata accessor for ZIndexable, (uint64_t (*)(void))type metadata accessor for ZIndexable, (uint64_t (*)(void))type metadata accessor for ZIndexable);
}

uint64_t sub_1C0EE6F50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB8945C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
}

void *sub_1C0EE6F98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA1A86D0, (uint64_t)&type metadata for DebugPersonalizationSection, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEE9CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE70C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB87A5E0, (uint64_t)&type metadata for FeedScoredItem, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB8F8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE7210(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB86BBB8, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
}

uint64_t sub_1C0EE7258(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A86F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
}

void *sub_1C0EE72A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA1A86E0, (uint64_t)&type metadata for SportsDataVisualizationResponseBracketItem, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEF49C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE73E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8980, (uint64_t)&type metadata for DebugFormatHistoryMeasurement, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEF594(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE7510(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB85F010, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Resolved, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
}

void *sub_1C0EE7558(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, (unint64_t *)&unk_1EB880EC0, (uint64_t)&type metadata for FormatSlotTransform);
}

uint64_t sub_1C0EE756C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A4D20, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatGroupItem, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
}

uint64_t sub_1C0EE75B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8888, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t (*)(void))type metadata accessor for FormatFile, (uint64_t (*)(void))type metadata accessor for FormatFile);
}

void *sub_1C0EE75FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA1A8898, (uint64_t)&type metadata for DebugFormatGroupSection, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEF688(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE772C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8960, (uint64_t)&type metadata for FormatInspectionIssue, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEF77C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE7870(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&qword_1EA1A8970, (uint64_t)&type metadata for DebugFormatLayoutModel, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 200);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[25 * v8 + 4]) {
          memmove(v12, a4 + 4, 200 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEF874(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE79BC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE2F00(a1, a2, a3, a4, &qword_1EA1A8978, (uint64_t)&type metadata for DebugFormatLayoutSection);
}

uint64_t sub_1C0EE79D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8968, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
}

uint64_t sub_1C0EE7A18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8AA8, type metadata accessor for PuzzleBarButtonItem, type metadata accessor for PuzzleBarButtonItem, type metadata accessor for PuzzleBarButtonItem);
}

void *sub_1C0EE7A60(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1C0EF31BC, &qword_1EA1A8A90);
}

uint64_t sub_1C0EE7A88(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA19C8B0, (uint64_t (*)(uint64_t))sub_1C06073AC, (uint64_t (*)(void))sub_1C06073AC, (uint64_t (*)(void))sub_1C06073AC);
}

void *sub_1C0EE7AD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB87A900, (uint64_t (*)(uint64_t))sub_1C0607558, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEB9F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE7C20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8A78, (uint64_t (*)(uint64_t))sub_1C0D0BDFC, (uint64_t (*)(void))sub_1C0D0BDFC, (uint64_t (*)(void))sub_1C0D0BDFC);
}

uint64_t sub_1C0EE7C68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8A70, (uint64_t (*)(uint64_t))sub_1C0D0B7A8, (uint64_t (*)(void))sub_1C0D0B7A8, (uint64_t (*)(void))sub_1C0D0B7A8);
}

uint64_t sub_1C0EE7CB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8A58, (uint64_t (*)(uint64_t))sub_1C0D0B2A0, (uint64_t (*)(void))sub_1C0D0B2A0, (uint64_t (*)(void))sub_1C0D0B2A0);
}

void *sub_1C0EE7CF8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF312C();
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEC1BC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE7E14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFEC0BBC(0, &qword_1EA1A8A38, (uint64_t (*)(uint64_t))sub_1C0EF3098, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEC300(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE7F50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8880, (uint64_t)&type metadata for DebugFormatInventoryViewController.VisibleItemFrame, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEBAFC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE8098(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C0EF2F14();
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEF968(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE81A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&qword_1EB86F770, MEMORY[0x1E4FAAC60], MEMORY[0x1E4FAAC60], MEMORY[0x1E4FAAC60]);
}

void *sub_1C0EE81EC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE33E4(a1, a2, a3, a4, (unint64_t *)&qword_1EA1A8840, (uint64_t)&type metadata for DebugFormatHistoryItem);
}

uint64_t sub_1C0EE8200(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB86BB90, type metadata accessor for FormatContentSidecarPlacement, type metadata accessor for FormatContentSidecarPlacement, type metadata accessor for FormatContentSidecarPlacement);
}

void *sub_1C0EE8248(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFD4687C(0, (unint64_t *)&qword_1EB87A898, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EF2260(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE8380(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EA1A86A0, (uint64_t)&type metadata for DebugInspectionTagMetadata, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[14 * v8 + 4]) {
          memmove(v12, a4 + 4, 112 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EF238C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE84C8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFE339EC(a1, a2, a3, a4, &qword_1EA1A8698, (uint64_t)&type metadata for DebugInspectionCohort);
}

void *sub_1C0EE84DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8958, (uint64_t)&type metadata for DebugFormatHistory, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 200);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[25 * v8 + 4]) {
          memmove(v12, a4 + 4, 200 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EECED0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE862C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A620, (uint64_t)&type metadata for FeedItemLayoutAttributes);
}

uint64_t sub_1C0EE8640(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8858, type metadata accessor for FormatDebuggerCallStackFrame, type metadata accessor for FormatDebuggerCallStackFrame, type metadata accessor for FormatDebuggerCallStackFrame);
}

uint64_t sub_1C0EE8688(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB86BB78, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreProperty, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreProperty, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreProperty);
}

void *sub_1C0EE86D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EDFB98(a1, a2, a3, a4, &qword_1EA1A8680, (uint64_t)&type metadata for WebEmbedDatastoreContents);
}

uint64_t sub_1C0EE86E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A89A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBindingContent, (uint64_t (*)(void))type metadata accessor for FormatBindingContent, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
}

uint64_t sub_1C0EE872C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8990, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
}

void *sub_1C0EE8774(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1A64(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A86F8, (uint64_t)&type metadata for PuzzleGameCenterPendingScoreEntry);
}

void *sub_1C0EE8788(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE87B0(a1, a2, a3, a4, (void (*)(void))sub_1C0EF258C, &qword_1EB86D5B8);
}

void *sub_1C0EE87B0(void *result, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      a5(0);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      void v13[2] = v11;
      void v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEB320(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE88D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8708, (uint64_t (*)(uint64_t))sub_1C032BC38, (uint64_t (*)(void))sub_1C032BC38, (uint64_t (*)(void))sub_1C032BC38);
}

uint64_t sub_1C0EE8920(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A89D8, (uint64_t (*)(uint64_t))sub_1C0EF301C, (uint64_t (*)(void))sub_1C0EF301C, (uint64_t (*)(void))sub_1C0EF301C);
}

uint64_t sub_1C0EE8968(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8B58, (uint64_t (*)(uint64_t))type metadata accessor for FeedFontManager.LocalFont, (uint64_t (*)(void))type metadata accessor for FeedFontManager.LocalFont, (uint64_t (*)(void))type metadata accessor for FeedFontManager.LocalFont);
}

uint64_t sub_1C0EE89B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB85C700, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive, (uint64_t (*)(void))type metadata accessor for WebArchive, (uint64_t (*)(void))type metadata accessor for WebArchive);
}

void *sub_1C0EE89F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1BC0(a1, a2, a3, a4, (unint64_t *)&unk_1EA19C568, (uint64_t)&type metadata for PuzzleHistoryServiceChange);
}

void *sub_1C0EE8A0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFEC0BBC(0, &qword_1EB85F238, (uint64_t (*)(uint64_t))sub_1C0607734, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EF2484(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE8B48(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A8A28, MEMORY[0x1E4FB7810], MEMORY[0x1E4FB7810], MEMORY[0x1E4FB7810]);
}

void *sub_1C0EE8B90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB87A8E0, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEAB78(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE8CC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EA1A8A20, MEMORY[0x1E4FB77E8], MEMORY[0x1E4FB77E8], MEMORY[0x1E4FB77E8]);
}

uint64_t sub_1C0EE8D08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB863610, (uint64_t (*)(uint64_t))sub_1C0607698, (uint64_t (*)(void))sub_1C0607698, (uint64_t (*)(void))sub_1C0607698);
}

uint64_t sub_1C0EE8D50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BA08, MEMORY[0x1E4FB7518], MEMORY[0x1E4FB7518], MEMORY[0x1E4FB7518]);
}

uint64_t sub_1C0EE8D98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB860DF0, MEMORY[0x1E4FB7550], MEMORY[0x1E4FB7550], MEMORY[0x1E4FB7550]);
}

void *sub_1C0EE8DE0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE5AD0(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BBE0, (uint64_t (*)(uint64_t))sub_1C0254A64, (void (*)(void))sub_1C0254A64);
}

void *sub_1C0EE8E14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB86EE00, (uint64_t)&type metadata for FeedChannelCluster, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEBCE8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE8F5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB86BA30, (uint64_t (*)(uint64_t))sub_1C0EF25F8, (uint64_t (*)(void))sub_1C0EF25F8, (uint64_t (*)(void))sub_1C0EF25F8);
}

void *sub_1C0EE8FA4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1A64(a1, a2, a3, a4, &qword_1EA1A8A18, (uint64_t)&type metadata for PuzzleAlertAction);
}

void *sub_1C0EE8FB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEE07AC(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A650, (uint64_t)&type metadata for FeedSlot);
}

void *sub_1C0EE8FCC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE8FE0(a1, a2, a3, a4, (unint64_t *)&unk_1EA1A3B30, (uint64_t)&type metadata for DebugFormatCompilerSection);
}

void *sub_1C0EE8FE0(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      void v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 40);
      int64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[5 * v10 + 4]) {
          memmove(v14, a4 + 4, 40 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EECFC4(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C0EE912C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB85C6F0, (uint64_t)&type metadata for FeedSuggestionCluster, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C0EEBED8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EE9274(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB861B00, MEMORY[0x1E4FB7948], MEMORY[0x1E4FB7948], MEMORY[0x1E4FB7948]);
}

uint64_t _s8NewsFeed13FormatContentV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C151D6DC();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EF3414();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  size_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v65 - v15;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v65 - v18;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v20 = 0;
    if ((sub_1C1520A9C() & 1) == 0) {
      return v20 & 1;
    }
  }
  BOOL v21 = (int *)type metadata accessor for FormatContent(0);
  if ((sub_1C15162AC() & 1) == 0) {
    goto LABEL_47;
  }
  uint64_t v22 = v21[6];
  unint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = *(void *)((char *)a1 + v22 + 8);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  if (v24)
  {
    if (!v26) {
      goto LABEL_47;
    }
    if (*v23 != *v25 || v24 != v26)
    {
      char v20 = 0;
      if ((sub_1C1520A9C() & 1) == 0) {
        return v20 & 1;
      }
    }
  }
  else if (v26)
  {
    goto LABEL_47;
  }
  uint64_t v27 = v21[7];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = *(void *)((char *)a1 + v27 + 8);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  if (v29)
  {
    if (!v31) {
      goto LABEL_47;
    }
    if (*v28 != *v30 || v29 != v31)
    {
      char v20 = 0;
      if ((sub_1C1520A9C() & 1) == 0) {
        return v20 & 1;
      }
    }
  }
  else if (v31)
  {
    goto LABEL_47;
  }
  uint64_t v32 = v21[8];
  unint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = *(void *)((char *)a1 + v32 + 8);
  uint64_t v35 = (void *)((char *)a2 + v32);
  uint64_t v36 = v35[1];
  if (v34)
  {
    if (!v36) {
      goto LABEL_47;
    }
    if (*v33 != *v35 || v34 != v36)
    {
      char v20 = 0;
      if ((sub_1C1520A9C() & 1) == 0) {
        return v20 & 1;
      }
    }
  }
  else if (v36)
  {
    goto LABEL_47;
  }
  uint64_t v37 = v21[9];
  int64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = *(void *)((char *)a1 + v37 + 8);
  uint64_t v40 = (void *)((char *)a2 + v37);
  uint64_t v41 = v40[1];
  if (!v39)
  {
    if (v41) {
      goto LABEL_47;
    }
    goto LABEL_33;
  }
  if (!v41) {
    goto LABEL_47;
  }
  if (*v38 == *v40 && v39 == v41 || (char v20 = 0, (sub_1C1520A9C() & 1) != 0))
  {
LABEL_33:
    uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
    sub_1C0EDAC9C((uint64_t)a1 + v21[10], (uint64_t)v19, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    sub_1C0EDAC9C((uint64_t)a2 + v21[10], (uint64_t)v16, (unint64_t *)&unk_1EB882A00, v42);
    uint64_t v43 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1C0EDAC9C((uint64_t)v19, (uint64_t)v10, (unint64_t *)&unk_1EB882A00, v42);
    uint64_t v66 = v43;
    sub_1C0EDAC9C((uint64_t)v16, v43, (unint64_t *)&unk_1EB882A00, v42);
    unint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    if (v44((uint64_t)v10, 1, v68) == 1)
    {
      unint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
      sub_1BFDDF830((uint64_t)v16, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
      sub_1BFDDF830((uint64_t)v19, (unint64_t *)&unk_1EB882A00, v45);
      if (v44(v66, 1, v68) == 1)
      {
        sub_1BFDDF830((uint64_t)v10, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
LABEL_40:
        if ((sub_1BFE9E788(*(void **)((char *)a1 + v21[11]), *(void **)((char *)a2 + v21[11])) & 1) != 0
          && (sub_1BFE9E788(*(void **)((char *)a1 + v21[12]), *(void **)((char *)a2 + v21[12])) & 1) != 0
          && (sub_1BFE9E788(*(void **)((char *)a1 + v21[13]), *(void **)((char *)a2 + v21[13])) & 1) != 0)
        {
          uint64_t v53 = v21[14];
          uint64_t v54 = *(void *)((char *)a1 + v53);
          uint64_t v55 = *(void *)((char *)a2 + v53);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v56 = sub_1C00E5A38(v54, v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0
            && (sub_1C00DEB48(*(void *)((char *)a1 + v21[15]), *(void *)((char *)a2 + v21[15])) & 1) != 0)
          {
            uint64_t v57 = v21[16];
            uint64_t v58 = *(void *)((char *)a1 + v57);
            uint64_t v59 = *(void *)((char *)a2 + v57);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v60 = sub_1C00E57C0(v58, v59);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v60)
            {
              uint64_t v61 = v21[17];
              uint64_t v62 = *(void *)((char *)a1 + v61);
              uint64_t v63 = *(void *)((char *)a2 + v61);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v20 = sub_1BFEFAE14(v62, v63);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v20 & 1;
            }
          }
        }
LABEL_47:
        char v20 = 0;
        return v20 & 1;
      }
    }
    else
    {
      sub_1C0EDAC9C((uint64_t)v10, (uint64_t)v13, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
      if (v44(v66, 1, v68) != 1)
      {
        uint64_t v47 = v67;
        uint64_t v48 = v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v6, v66, v68);
        sub_1BFE38930(&qword_1EA1A8B48, MEMORY[0x1E4F7ACE8]);
        LODWORD(v66) = sub_1C151E5CC();
        char v49 = *(void (**)(char *, uint64_t))(v47 + 8);
        uint64_t v67 = v47 + 8;
        uint64_t v50 = v6;
        uint64_t v51 = v49;
        v49(v50, v48);
        uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
        sub_1BFDDF830((uint64_t)v16, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        sub_1BFDDF830((uint64_t)v19, (unint64_t *)&unk_1EB882A00, v52);
        v51(v13, v48);
        sub_1BFDDF830((uint64_t)v10, (unint64_t *)&unk_1EB882A00, v52);
        if ((v66 & 1) == 0) {
          goto LABEL_47;
        }
        goto LABEL_40;
      }
      uint64_t v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
      sub_1BFDDF830((uint64_t)v16, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
      sub_1BFDDF830((uint64_t)v19, (unint64_t *)&unk_1EB882A00, v46);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v68);
    }
    sub_1BFE38718((uint64_t)v10, (uint64_t (*)(void))sub_1C0EF3414);
    goto LABEL_47;
  }
  return v20 & 1;
}

uint64_t type metadata accessor for FormatContentSidecarPlacement(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB868978);
}

uint64_t sub_1C0EE9A1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EE9B78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    sub_1BFE38B54(0, a5, a6, a7, a8);
    uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 72);
    unint64_t v14 = a4
        + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))
        + v13 * a1;
    unint64_t v15 = a3 + v13 * v8;
    if (v14 >= v15 || v14 + v13 * v8 <= a3)
    {
      swift_arrayInitWithCopy();
      return v15;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EE9CE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EE9DD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 24 * a1 + 32;
    unint64_t v7 = a3 + 24 * v5;
    if (v6 >= v7 || v6 + 24 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EE9EE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1C024A9E4();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EE9FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v7 = type metadata accessor for FormatContentSubgroup();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C05F64E8(0, v11, 0);
    uint64_t v12 = v23;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1C0EDEDBC(v14, v20, v21, v22, (uint64_t)v10);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      uint64_t v23 = v12;
      unint64_t v17 = *(void *)(v12 + 16);
      unint64_t v16 = *(void *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C05F64E8(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v23;
      }
      *(void *)(v12 + 16) = v17 + 1;
      sub_1C0EEC764((uint64_t)v10, v12 + v13 + v17 * v15, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      unint64_t v14 = (void *)((char *)v14 + v15);
      if (!--v11) {
        return v12;
      }
    }
    swift_release();
  }
  return v12;
}

uint64_t sub_1C0EEA190(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEA29C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BFF77188();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEA3A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEA49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_1C0EEA4B4(a1, a2, a3, a4);
}

uint64_t sub_1C0EEA4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v32 = a4;
  uint64_t v8 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v8);
  uint64_t v33 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v36 = (uint64_t)v30 - v11;
  uint64_t v31 = type metadata accessor for FormatContentSlotItem();
  uint64_t v12 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  unint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    v30[0] = v4;
    uint64_t v37 = MEMORY[0x1E4FBC860];
    sub_1C05F8394(0, v15, 0);
    unint64_t v35 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v17 = a1 + v35;
    uint64_t v34 = *(void *)(v12 + 72);
    v30[1] = v8;
    while (1)
    {
      sub_1BFE3391C(v17, v36, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_11;
      }
      uint64_t v18 = v33;
      sub_1BFE3391C(v36, v33, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      char v19 = *(unsigned char *)(v18 + 16);
      BOOL v20 = *(void *)v18 == a2 && *(void *)(v18 + 8) == a3;
      if (!v20 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      uint64_t v21 = a2;
      uint64_t v22 = a3;
      uint64_t v24 = *v32;
      uint64_t v23 = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)unint64_t v14 = v24;
      *((void *)v14 + 1) = v23;
      a3 = v22;
      a2 = v21;
      v14[16] = v19;
      swift_storeEnumTagMultiPayload();
      uint64_t v25 = &v14[*(int *)(v31 + 20)];
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
LABEL_12:
      sub_1BFE38718(v36, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v16 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F8394(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v37;
      }
      unint64_t v27 = *(void *)(v16 + 16);
      unint64_t v26 = *(void *)(v16 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1C05F8394(v26 > 1, v27 + 1, 1);
        uint64_t v16 = v37;
      }
      *(void *)(v16 + 16) = v27 + 1;
      uint64_t v28 = v34;
      sub_1C0EEC764((uint64_t)v14, v16 + v35 + v27 * v34, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
      v17 += v28;
      if (!--v15) {
        return v16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1BFE3391C(v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    goto LABEL_12;
  }
  return v16;
}

uint64_t sub_1C0EEA80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned char *))
{
  uint64_t v7 = v6;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1C05F759C(0, v9, 0);
    uint64_t v12 = a4;
    uint64_t v13 = 0;
    uint64_t result = v48;
    uint64_t v35 = a1 + 32;
    int64_t v36 = v9;
    uint64_t v44 = a3;
    do
    {
      uint64_t v42 = result;
      uint64_t v43 = v13;
      unint64_t v14 = (uint64_t *)(v35 + 48 * v13);
      uint64_t v15 = v14[1];
      uint64_t v17 = v14[2];
      uint64_t v16 = v14[3];
      int64_t v18 = *(void *)(v17 + 16);
      uint64_t v40 = v14[5];
      uint64_t v41 = *v14;
      if (v18)
      {
        uint64_t v39 = v7;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v38 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFFD14FC((uint64_t)v12);
        uint64_t v47 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1C05F757C(0, v18, 0);
        uint64_t v12 = a4;
        uint64_t v19 = v47;
        BOOL v20 = (uint64_t *)(v17 + 48);
        do
        {
          uint64_t v22 = *(v20 - 2);
          uint64_t v21 = *(v20 - 1);
          uint64_t v23 = *v20;
          if ((~*v20 & 0xF000000000000007) == 0
            && (v22 == a2 ? (BOOL v24 = v21 == v44) : (BOOL v24 = 0), v24 || (sub_1C1520A9C() & 1) != 0))
          {
            uint64_t v22 = *v12;
            uint64_t v21 = v12[1];
            swift_bridgeObjectRetain();
            uint64_t v23 = 0xF000000000000007;
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_1BFDC11A4(v23);
          }
          uint64_t v47 = v19;
          unint64_t v26 = *(void *)(v19 + 16);
          unint64_t v25 = *(void *)(v19 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_1C05F757C(v25 > 1, v26 + 1, 1);
            uint64_t v12 = a4;
            uint64_t v19 = v47;
          }
          v20 += 3;
          *(void *)(v19 + 16) = v26 + 1;
          unint64_t v27 = (void *)(v19 + 24 * v26);
          v27[4] = v22;
          v27[5] = v21;
          v27[6] = v23;
          --v18;
        }
        while (v18);
        sub_1BFFD147C((uint64_t)v12);
        swift_bridgeObjectRelease();
        a3 = v44;
        swift_bridgeObjectRelease();
        uint64_t v7 = v39;
        uint64_t v16 = v38;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v19 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRetain();
      sub_1BFFD14FC((uint64_t)v12);
      swift_bridgeObjectRetain();
      uint64_t v28 = swift_bridgeObjectRetain();
      uint64_t v29 = a6(v28, a2, a3, v12, v46);
      sub_1BFFD147C((uint64_t)v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v42;
      uint64_t v48 = v42;
      uint64_t v30 = v16;
      unint64_t v32 = *(void *)(v42 + 16);
      unint64_t v31 = *(void *)(v42 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1C05F759C(v31 > 1, v32 + 1, 1);
        uint64_t v12 = a4;
        uint64_t result = v48;
      }
      uint64_t v13 = v43 + 1;
      *(void *)(result + 16) = v32 + 1;
      uint64_t v33 = (void *)(result + 48 * v32);
      v33[4] = v41;
      id v33[5] = v15;
      v33[6] = v19;
      v33[7] = v30;
      unsigned char v33[8] = v29;
      v33[9] = v40;
    }
    while (v43 + 1 != v36);
  }
  return result;
}

char *sub_1C0EEAB78(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

char *sub_1C0EEAC64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEAD50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BFFB4FA4();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEAE58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEAF4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB040(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB138(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB22C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 7) + 32;
    unint64_t v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB320(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_1BFCB6824(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB434(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 152 * a1 + 32;
    unint64_t v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB528(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 248 * a1 + 32;
    unint64_t v6 = a3 + 248 * v4;
    if (v5 >= v6 || v5 + 248 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB620(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 400 * a1 + 32;
    unint64_t v6 = a3 + 400 * v4;
    if (v5 >= v6 || v5 + 400 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB714(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 208 * a1 + 32;
    unint64_t v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB808(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 168 * a1 + 32;
    unint64_t v6 = a3 + 168 * v4;
    if (v5 >= v6 || v5 + 168 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB8F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEB9F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      sub_1C0607558();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEBAFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEBBF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEBCE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEBDE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEBED8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEBFD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEC0C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEC1BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1BFE38B54(0, &qword_1EA1A8A50, (uint64_t (*)(void))sub_1C0607C34, (uint64_t)&type metadata for FeedItemFilterTagMatcher, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemFilterResultEntry);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEC300(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1C0EF3098();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEC408(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for FeedGroupConfigSidecar();
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return result;
  }
  uint64_t v32 = v2;
  uint64_t v33 = v5;
  uint64_t v14 = 0;
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v9 + 72);
  int64_t v36 = v7;
  unint64_t v37 = v15;
  uint64_t v38 = a1 + v15;
  uint64_t v39 = v16;
  uint64_t v34 = a2;
  uint64_t v35 = v13;
  while (1)
  {
    sub_1BFE3391C(v38 + v39 * v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
    if (!a2) {
      goto LABEL_15;
    }
    uint64_t v17 = &v11[*(int *)(v5 + 20)];
    int64_t v18 = *(void **)&v17[*(int *)(type metadata accessor for FormatContent(0) + 48)];
    if (!v18[2]) {
      goto LABEL_15;
    }
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = objc_msgSend(a2, sel_identifier);
    uint64_t v20 = sub_1C151E62C();
    uint64_t v22 = v21;

    uint64_t v23 = v18[2];
    if (v23) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_4:
    uint64_t v13 = v35;
    unint64_t v7 = v36;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1BFE38718((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
LABEL_5:
    if (++v14 == v13) {
      return v40;
    }
  }
  BOOL v24 = v18[4] == v20 && v18[5] == v22;
  if (v24 || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v34;
    swift_unknownObjectRelease();
    uint64_t v5 = v33;
    uint64_t v13 = v35;
    unint64_t v7 = v36;
LABEL_15:
    sub_1C0EEC764((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
    uint64_t v25 = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F8304(0, *(void *)(v25 + 16) + 1, 1);
      uint64_t v25 = v40;
    }
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_1C05F8304(v26 > 1, v27 + 1, 1);
      uint64_t v25 = v40;
    }
    *(void *)(v25 + 16) = v27 + 1;
    sub_1C0EEC764((uint64_t)v7, v25 + v37 + v27 * v39, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
    goto LABEL_5;
  }
  if (v23 == 1)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v5 = v33;
    a2 = v34;
    goto LABEL_4;
  }
  uint64_t v28 = v18 + 7;
  uint64_t v29 = 1;
  while (1)
  {
    uint64_t v30 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (*(v28 - 1) == v20 && *v28 == v22) {
      goto LABEL_14;
    }
    uint64_t result = sub_1C1520A9C();
    if (result) {
      goto LABEL_14;
    }
    v28 += 2;
    ++v29;
    if (v30 == v23) {
      goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0EEC764(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0EEC7CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEC8C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEC9D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EECAC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EECBBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EECCB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BFE9DFF4(0, &qword_1EB8603B0, (uint64_t)&type metadata for FormatColorProcessor, MEMORY[0x1E4FBB718]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EECDDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EECED0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 200 * a1 + 32;
    unint64_t v6 = a3 + 200 * v4;
    if (v5 >= v6 || v5 + 200 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EECFC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EED0B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EED1B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1C0EF3354(0, &qword_1EB879C18);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

char *sub_1C0EED2CC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EED3B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 160 * a1 + 32;
    unint64_t v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB868670, (uint64_t (*)(void))sub_1C02D13FC, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EED4FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB868680, (uint64_t (*)(void))sub_1C0461208, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EED640(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1BFE38B54(0, &qword_1EB88D010, (uint64_t (*)(void))sub_1C0406DBC, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EED784(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 152 * a1 + 32;
    unint64_t v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EA1A8780, (uint64_t (*)(void))sub_1C0EF295C, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EED8C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 216 * a1 + 32;
    unint64_t v6 = a3 + 216 * v4;
    if (v5 >= v6 || v5 + 216 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB870730, (uint64_t (*)(void))sub_1C09DA7F0, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEDA04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 160 * a1 + 32;
    unint64_t v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EA1A87C0, (uint64_t (*)(void))sub_1C040B8B8, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEDB48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v8 = a4 + 176 * a1 + 32;
    unint64_t v9 = a3 + 176 * v7;
    if (v8 >= v9 || v8 + 176 * v7 <= a3)
    {
      sub_1BFE38B54(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v9;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEDC70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB868660, (uint64_t (*)(void))sub_1C042E36C, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEDDB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB870488, (uint64_t (*)(void))sub_1C0CC69D4, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEDEF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEDFEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE0E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE1DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE2D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE3C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE4BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 208 * a1 + 32;
    unint64_t v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE5B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 152 * a1 + 32;
    unint64_t v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE6A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 144 * a1 + 32;
    unint64_t v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE794(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE888(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEE980()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE) {
    return 14;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0EEE9CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEEAC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BFE9DFF4(0, &qword_1EA1A8868, (uint64_t)&type metadata for DebugInspectionDataSection, MEMORY[0x1E4FBB320]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEEBEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 7) + 32;
    unint64_t v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEECE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEEDD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEEECC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1C066A370();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEEFD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF0C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF1C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF2B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF3A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF49C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF594(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF688(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF77C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF874(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 200 * a1 + 32;
    unint64_t v6 = a3 + 200 * v4;
    if (v5 >= v6 || v5 + 200 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEF968(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BFECEE7C(0, &qword_1EB85C4C0, (uint64_t)&qword_1EB87A140, 0x1E4F7E538, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EEFA9C(void *a1)
{
  a1[1] = sub_1BFE38930(&qword_1EA19D308, (void (*)(uint64_t))type metadata accessor for FormatContent);
  a1[2] = sub_1BFE38930(&qword_1EA1A8630, (void (*)(uint64_t))type metadata accessor for FormatContent);
  uint64_t result = sub_1BFE38930(&qword_1EA1A8638, (void (*)(uint64_t))type metadata accessor for FormatContent);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0EEFB48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 44));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EEFB94@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 48));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EEFBE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 52));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EEFC2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 64));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EEFC78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 68));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatContent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    unint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *unint64_t v15 = *v16;
    v15[1] = v17;
    int64_t v18 = (uint64_t *)((char *)v4 + v14);
    id v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *int64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (uint64_t *)((char *)v4 + v21);
    BOOL v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    unint64_t v26 = (uint64_t *)((char *)v4 + v22);
    unint64_t v27 = (uint64_t *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *unint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = a3[10];
    __dst = (char *)v4 + v29;
    uint64_t v30 = (char *)a2 + v29;
    uint64_t v31 = sub_1C151D6DC();
    uint64_t v38 = *(void *)(v31 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v30, 1, v31))
    {
      sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v31);
    }
    uint64_t v34 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v34) = *(uint64_t *)((char *)a2 + v34);
    uint64_t v35 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v4 + v35) = *(uint64_t *)((char *)a2 + v35);
    uint64_t v36 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v36) = *(uint64_t *)((char *)a2 + v36);
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for FormatContent(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  unint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  int64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  BOOL v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1C151D6DC();
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatContent(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1C151D6DC();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  return a1;
}

void *assignWithTake for FormatContent(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  unint64_t v27 = (void *)((char *)a1 + v26);
  int v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *unint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_1C151D6DC();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_6;
  }
  if (v38)
  {
LABEL_6:
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_7:
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0EF084C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151631C();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C0EF09A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1C151631C();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void *sub_1C0EF0B04(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v37 = *a2;
    *a1 = *a2;
    int v38 = (void *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
    uint64_t v48 = a2;
    char v49 = a1;
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
    *uint64_t v8 = *(void *)((char *)a2 + v7);
    v8[1] = v10;
    uint64_t v11 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_1C151631C();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = v11[6];
    uint64_t v18 = (void *)((char *)v8 + v17);
    uint64_t v19 = &v9[v17];
    uint64_t v45 = *((void *)v19 + 1);
    *uint64_t v18 = *(void *)v19;
    v18[1] = v45;
    uint64_t v20 = v11[7];
    uint64_t v21 = (void *)((char *)v8 + v20);
    uint64_t v22 = &v9[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *uint64_t v21 = *(void *)v22;
    v21[1] = v23;
    uint64_t v24 = v11[8];
    uint64_t v25 = (void *)((char *)v8 + v24);
    uint64_t v26 = &v9[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *uint64_t v25 = *(void *)v26;
    v25[1] = v27;
    uint64_t v28 = v11[9];
    uint64_t v29 = (void *)((char *)v8 + v28);
    uint64_t v30 = &v9[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *uint64_t v29 = *(void *)v30;
    v29[1] = v31;
    uint64_t v32 = v11[10];
    __dst = (char *)v8 + v32;
    uint64_t v33 = &v9[v32];
    uint64_t v34 = sub_1C151D6DC();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44(v33, 1, v34))
    {
      sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
    }
    *(void *)((char *)v8 + v11[11]) = *(void *)&v9[v11[11]];
    *(void *)((char *)v8 + v11[12]) = *(void *)&v9[v11[12]];
    *(void *)((char *)v8 + v11[13]) = *(void *)&v9[v11[13]];
    *(void *)((char *)v8 + v11[14]) = *(void *)&v9[v11[14]];
    *(void *)((char *)v8 + v11[15]) = *(void *)&v9[v11[15]];
    *(void *)((char *)v8 + v11[16]) = *(void *)&v9[v11[16]];
    *(void *)((char *)v8 + v11[17]) = *(void *)&v9[v11[17]];
    uint64_t v39 = *(int *)(a3 + 20);
    int v38 = v49;
    uint64_t v40 = (char *)v49 + v39;
    uint64_t v41 = (char *)v48 + v39;
    uint64_t v42 = *((void *)v41 + 1);
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = v42;
    *((void *)v40 + 2) = *((void *)v41 + 2);
    v40[24] = v41[24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v38;
}

uint64_t sub_1C0EF0E84(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for FormatContent(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + *(int *)(v3 + 40);
  uint64_t v7 = sub_1C151D6DC();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C0EF1060(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  uint64_t v10 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151631C();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = v10[6];
  uint64_t v17 = (void *)((char *)v7 + v16);
  uint64_t v18 = &v8[v16];
  uint64_t v42 = *((void *)v18 + 1);
  *uint64_t v17 = *(void *)v18;
  v17[1] = v42;
  uint64_t v19 = v10[7];
  uint64_t v20 = (void *)((char *)v7 + v19);
  uint64_t v21 = &v8[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *uint64_t v20 = *(void *)v21;
  v20[1] = v22;
  uint64_t v23 = v10[8];
  uint64_t v24 = (void *)((char *)v7 + v23);
  uint64_t v25 = &v8[v23];
  uint64_t v26 = *((void *)v25 + 1);
  *uint64_t v24 = *(void *)v25;
  v24[1] = v26;
  uint64_t v27 = v10[9];
  uint64_t v28 = (void *)((char *)v7 + v27);
  uint64_t v29 = &v8[v27];
  uint64_t v30 = *((void *)v29 + 1);
  void *v28 = *(void *)v29;
  v28[1] = v30;
  uint64_t v31 = v10[10];
  __dst = (char *)v7 + v31;
  uint64_t v32 = &v8[v31];
  uint64_t v33 = sub_1C151D6DC();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v41(v32, 1, v33))
  {
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
  }
  *(void *)((char *)v7 + v10[11]) = *(void *)&v8[v10[11]];
  *(void *)((char *)v7 + v10[12]) = *(void *)&v8[v10[12]];
  *(void *)((char *)v7 + v10[13]) = *(void *)&v8[v10[13]];
  *(void *)((char *)v7 + v10[14]) = *(void *)&v8[v10[14]];
  *(void *)((char *)v7 + v10[15]) = *(void *)&v8[v10[15]];
  *(void *)((char *)v7 + v10[16]) = *(void *)&v8[v10[16]];
  *(void *)((char *)v7 + v10[17]) = *(void *)&v8[v10[17]];
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = (char *)v46 + v36;
  int v38 = (char *)v45 + v36;
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = v39;
  *((void *)v37 + 2) = *((void *)v38 + 2);
  v37[24] = v38[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v46;
}

void *sub_1C0EF1390(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  uint64_t v39 = a2;
  uint64_t v40 = a1;
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  *uint64_t v6 = *(void *)((char *)a2 + v5);
  v6[1] = *(void *)((char *)a2 + v5 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = (char *)v6 + v9;
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = (void *)((char *)v6 + v13);
  uint64_t v15 = &v7[v13];
  *uint64_t v14 = *(void *)v15;
  v14[1] = *((void *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v8[7];
  uint64_t v17 = (void *)((char *)v6 + v16);
  uint64_t v18 = &v7[v16];
  *uint64_t v17 = *(void *)v18;
  v17[1] = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v8[8];
  uint64_t v20 = (void *)((char *)v6 + v19);
  uint64_t v21 = &v7[v19];
  *uint64_t v20 = *(void *)v21;
  v20[1] = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v8[9];
  uint64_t v23 = (void *)((char *)v6 + v22);
  uint64_t v24 = &v7[v22];
  *uint64_t v23 = *(void *)v24;
  v23[1] = *((void *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v8[10];
  uint64_t v26 = (char *)v6 + v25;
  uint64_t v27 = &v7[v25];
  uint64_t v28 = sub_1C151D6DC();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v32)
  {
LABEL_6:
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  *(void *)((char *)v6 + v8[11]) = *(void *)&v7[v8[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v6 + v8[12]) = *(void *)&v7[v8[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v6 + v8[13]) = *(void *)&v7[v8[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v6 + v8[14]) = *(void *)&v7[v8[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v6 + v8[15]) = *(void *)&v7[v8[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v6 + v8[16]) = *(void *)&v7[v8[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v6 + v8[17]) = *(void *)&v7[v8[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = (char *)v40 + v34;
  uint64_t v36 = (char *)v39 + v34;
  *(void *)uint64_t v35 = *(void *)((char *)v39 + v34);
  *((void *)v35 + 1) = *(void *)((char *)v39 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v35 + 2) = *((void *)v36 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[24] = v36[24];
  return v40;
}

_OWORD *sub_1C0EF17B8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
  *(_OWORD *)&v7[v9[7]] = *(_OWORD *)&v8[v9[7]];
  *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
  *(_OWORD *)&v7[v9[9]] = *(_OWORD *)&v8[v9[9]];
  uint64_t v14 = v9[10];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = sub_1C151D6DC();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(void *)&v7[v9[11]] = *(void *)&v8[v9[11]];
  *(void *)&v7[v9[12]] = *(void *)&v8[v9[12]];
  *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
  *(void *)&v7[v9[14]] = *(void *)&v8[v9[14]];
  *(void *)&v7[v9[15]] = *(void *)&v8[v9[15]];
  *(void *)&v7[v9[16]] = *(void *)&v8[v9[16]];
  *(void *)&v7[v9[17]] = *(void *)&v8[v9[17]];
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (_OWORD *)((char *)a1 + v20);
  uint64_t v22 = (_OWORD *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v22 + 9);
  return a1;
}

void *sub_1C0EF1A20(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = (void *)((char *)v7 + v15);
  uint64_t v17 = &v8[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v10[7];
  uint64_t v21 = (void *)((char *)v7 + v20);
  uint64_t v22 = &v8[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v10[8];
  uint64_t v26 = (void *)((char *)v7 + v25);
  uint64_t v27 = &v8[v25];
  uint64_t v29 = *(void *)v27;
  uint64_t v28 = *((void *)v27 + 1);
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = v10[9];
  int v31 = (void *)((char *)v7 + v30);
  int v32 = &v8[v30];
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  void *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = v10[10];
  uint64_t v36 = (char *)v7 + v35;
  uint64_t v37 = &v8[v35];
  uint64_t v38 = sub_1C151D6DC();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v36, v37, v38);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
    goto LABEL_6;
  }
  if (v42)
  {
LABEL_6:
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_7:
  *(void *)((char *)v7 + v10[11]) = *(void *)&v8[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v10[12]) = *(void *)&v8[v10[12]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v10[13]) = *(void *)&v8[v10[13]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v10[14]) = *(void *)&v8[v10[14]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v10[15]) = *(void *)&v8[v10[15]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v10[16]) = *(void *)&v8[v10[16]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v10[17]) = *(void *)&v8[v10[17]];
  swift_bridgeObjectRelease();
  uint64_t v44 = *(int *)(a3 + 20);
  uint64_t v45 = (char *)v51 + v44;
  uint64_t v46 = (char *)v50 + v44;
  uint64_t v47 = *(void *)((char *)v50 + v44 + 8);
  *(void *)uint64_t v45 = *(void *)((char *)v50 + v44);
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  *((void *)v45 + 2) = *((void *)v46 + 2);
  swift_bridgeObjectRelease();
  v45[24] = v46[24];
  return v51;
}

uint64_t sub_1C0EF1D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0EF1DAC);
}

uint64_t sub_1C0EF1DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedGroupConfigSidecar();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C0EF1E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0EF1E84);
}

uint64_t sub_1C0EF1E84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FeedGroupConfigSidecar();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C0EF1F44()
{
  uint64_t result = type metadata accessor for FeedGroupConfigSidecar();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0EF20A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContent.CodingKeys()
{
  return &type metadata for FormatContent.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FormatContent.AltCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0EF2178);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContent.AltCodingKeys()
{
  return &type metadata for FormatContent.AltCodingKeys;
}

unint64_t sub_1C0EF21B4()
{
  unint64_t result = qword_1EA1A8640;
  if (!qword_1EA1A8640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8640);
  }
  return result;
}

unint64_t sub_1C0EF220C()
{
  unint64_t result = qword_1EA1A8648;
  if (!qword_1EA1A8648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8648);
  }
  return result;
}

uint64_t sub_1C0EF2260(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EF238C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0EF2484(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C0607734();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1C0EF258C()
{
  if (!qword_1EB86EE30)
  {
    sub_1BFCB6824(255, &qword_1EB86D5B8);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86EE30);
    }
  }
}

void sub_1C0EF25F8()
{
  if (!qword_1EB864298)
  {
    type metadata accessor for FormatLayoutSectionDescriptor(255);
    sub_1BFE38930((unint64_t *)&qword_1EB896870, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
    sub_1C007D02C();
    unint64_t v0 = sub_1C151B67C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864298);
    }
  }
}

void sub_1C0EF26B0()
{
  if (!qword_1EB87A8B0)
  {
    sub_1C0EF3354(255, &qword_1EB879C18);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A8B0);
    }
  }
}

void sub_1C0EF271C()
{
  if (!qword_1EA1A8760)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB868670, (uint64_t (*)(void))sub_1C02D13FC, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8760);
    }
  }
}

void sub_1C0EF27AC()
{
  if (!qword_1EB86BB88)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB868680, (uint64_t (*)(void))sub_1C0461208, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BB88);
    }
  }
}

void sub_1C0EF283C()
{
  if (!qword_1EB8904C8)
  {
    sub_1BFE38B54(255, &qword_1EB88D010, (uint64_t (*)(void))sub_1C0406DBC, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8904C8);
    }
  }
}

void sub_1C0EF28CC()
{
  if (!qword_1EA1A8778)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EA1A8780, (uint64_t (*)(void))sub_1C0EF295C, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8778);
    }
  }
}

unint64_t sub_1C0EF295C()
{
  unint64_t result = qword_1EA1A8788;
  if (!qword_1EA1A8788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8788);
  }
  return result;
}

void sub_1C0EF29B0()
{
  if (!qword_1EB870768)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB870730, (uint64_t (*)(void))sub_1C09DA7F0, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB870768);
    }
  }
}

void sub_1C0EF2A40()
{
  if (!qword_1EA1A8798)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EA1A87A0, (uint64_t (*)(void))sub_1C0AEBAA0, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8798);
    }
  }
}

void sub_1C0EF2AD0()
{
  if (!qword_1EA1A87B8)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EA1A87C0, (uint64_t (*)(void))sub_1C040B8B8, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A87B8);
    }
  }
}

void sub_1C0EF2B60()
{
  if (!qword_1EA1A87D8)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EA1A87E0, (uint64_t (*)(void))sub_1C0EF2BF0, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A87D8);
    }
  }
}

unint64_t sub_1C0EF2BF0()
{
  unint64_t result = qword_1EA1A87E8;
  if (!qword_1EA1A87E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A87E8);
  }
  return result;
}

void sub_1C0EF2C44()
{
  if (!qword_1EA1A87F8)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB868660, (uint64_t (*)(void))sub_1C042E36C, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A87F8);
    }
  }
}

void sub_1C0EF2CD4()
{
  if (!qword_1EB870520)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB870488, (uint64_t (*)(void))sub_1C0CC69D4, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB870520);
    }
  }
}

void sub_1C0EF2D64()
{
  if (!qword_1EA1A88C8)
  {
    sub_1BFE38B54(255, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A88C8);
    }
  }
}

void sub_1C0EF2DF4()
{
  if (!qword_1EA1A88D0)
  {
    sub_1BFE38B54(255, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A88D0);
    }
  }
}

void sub_1C0EF2E84()
{
  if (!qword_1EA1A88E0)
  {
    sub_1BFE38B54(255, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A88E0);
    }
  }
}

void sub_1C0EF2F14()
{
  if (!qword_1EA1A8988)
  {
    sub_1BFECEE7C(255, &qword_1EB85C4C0, (uint64_t)&qword_1EB87A140, 0x1E4F7E538, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8988);
    }
  }
}

void sub_1C0EF2F98()
{
  if (!qword_1EA1A89C0)
  {
    sub_1BFD8B4C0(255, (unint64_t *)&unk_1EA1A89C8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB010]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A89C0);
    }
  }
}

void sub_1C0EF301C(uint64_t a1)
{
}

uint64_t sub_1C0EF3050@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0EDF5AC(a1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1C0EF3074@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0EDE97C(a1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_1C0EF3098()
{
  if (!qword_1EA1A8A40)
  {
    sub_1C0607BB8();
    sub_1BFE38930(&qword_1EA19C990, (void (*)(uint64_t))sub_1C0607BB8);
    unint64_t v0 = type metadata accessor for FeedItemFilterResultEntry();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8A40);
    }
  }
}

void sub_1C0EF312C()
{
  if (!qword_1EA1A8A48)
  {
    sub_1BFE38B54(255, &qword_1EA1A8A50, (uint64_t (*)(void))sub_1C0607C34, (uint64_t)&type metadata for FeedItemFilterTagMatcher, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemFilterResultEntry);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8A48);
    }
  }
}

void sub_1C0EF31BC()
{
  if (!qword_1EA1A8A88)
  {
    sub_1BFCB6824(255, &qword_1EA1A8A90);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8A88);
    }
  }
}

void sub_1C0EF3228()
{
  if (!qword_1EA1A8A98)
  {
    sub_1BFCB6824(255, &qword_1EA1A8AA0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8A98);
    }
  }
}

uint64_t sub_1C0EF3294(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    sub_1C0EF3354(255, a3);
    uint64_t result = swift_getFunctionTypeMetadata2();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C0EF32F8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C0EF3294(255, a3, a4);
    unint64_t v5 = sub_1C152089C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C0EF3354(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C0EF33A8()
{
  if (!qword_1EB87A5C0)
  {
    sub_1BFCB6824(255, &qword_1EB8715E8);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A5C0);
    }
  }
}

void sub_1C0EF3414()
{
  if (!qword_1EA1A8B40)
  {
    sub_1BFEC0BBC(255, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A8B40);
    }
  }
}

void sub_1C0EF34A8()
{
  if (!qword_1EB86F498)
  {
    sub_1BFCB6824(255, &qword_1EB85F340);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86F498);
    }
  }
}

double sub_1C0EF3514@<D0>(uint64_t a1@<X8>)
{
  return FeedGroupDescribing.feedGroupDebug.getter(a1);
}

double FeedGroupDescribing.feedGroupDebug.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t dispatch thunk of FeedGroupDescribing.feedLayoutOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedGroupKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedSlots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedGroupItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedGroupDebug.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

double FormatTransformKnobs.expireContentThreshold.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + *(int *)(type metadata accessor for FormatTransformKnobs() + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  unint64_t v6 = *(void *)(v5 + 24);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_5:
    double v9 = *(double *)(v5 + 16);
    swift_release();
    return v9;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for FeedContext() + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C03C71BC(v6, v7);
  double v9 = v8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t type metadata accessor for FormatTransformKnobs()
{
  uint64_t result = qword_1EB894358;
  if (!qword_1EB894358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FormatTransformKnobs.init(context:knobs:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C019CBB8(a1, a3);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for FormatTransformKnobs() + 20);
  return sub_1BFC773DC(a2, v5);
}

uint64_t FormatTransformKnobs.maxNumberOfItems.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + *(int *)(type metadata accessor for FormatTransformKnobs() + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  unint64_t v6 = *(void *)(v5 + 24);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v9 = *(void *)(v5 + 16);
    swift_release();
    return v9;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for FeedContext() + 40));
  uint64_t v8 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C00C9BB4(v8, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t FormatTransformKnobs.minNumberOfItems.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + *(int *)(type metadata accessor for FormatTransformKnobs() + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  unint64_t v6 = *(void *)(v5 + 24);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v9 = *(void *)(v5 + 16);
    swift_release();
    return v9;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for FeedContext() + 40));
  uint64_t v8 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C00C9BB4(v8, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C0EF3998()
{
  sub_1BFDC6F40();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t FormatTransformKnobsProviding.expireContent.getter()
{
  sub_1BFDC6F40();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1C0EF3A08()
{
  sub_1BFDC6EB0();
  uint64_t result = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t FormatTransformKnobsProviding.expireContentThreshold.getter()
{
  sub_1BFDC6EB0();
  uint64_t result = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = v1;
  return result;
}

void **initializeBufferWithCopyOfBuffer for FormatTransformKnobs(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v6 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    unint64_t v6 = a1;
    uint64_t v7 = (int *)type metadata accessor for FeedContext();
    uint64_t v8 = v7[5];
    uint64_t v9 = (void **)((char *)v6 + v8);
    uint64_t v10 = (void **)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for BundleSession();
    uint64_t v12 = *((void *)v11 - 1);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, int *))(v12 + 48);
    uint64_t v14 = v4;
    if (v13(v10, 1, v11))
    {
      sub_1C02DE94C(0);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      uint64_t v16 = v11[5];
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = (char *)v10 + v16;
      uint64_t v19 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *((unsigned char *)v9 + v11[6]) = *((unsigned char *)v10 + v11[6]);
      *((unsigned char *)v9 + v11[7]) = *((unsigned char *)v10 + v11[7]);
      *(_OWORD *)((char *)v9 + v11[8]) = *(_OWORD *)((char *)v10 + v11[8]);
      *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
      *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
      *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
      uint64_t v20 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      v20(v9, 0, 1, v11);
    }
    *((unsigned char *)v6 + v7[6]) = *((unsigned char *)a2 + v7[6]);
    *((unsigned char *)v6 + v7[7]) = *((unsigned char *)a2 + v7[7]);
    *((unsigned char *)v6 + v7[8]) = *((unsigned char *)a2 + v7[8]);
    *((unsigned char *)v6 + v7[9]) = *((unsigned char *)a2 + v7[9]);
    *(void **)((char *)v6 + v7[10]) = *(void **)((char *)a2 + v7[10]);
    *(void **)((char *)v6 + v7[11]) = *(void **)((char *)a2 + v7[11]);
    uint64_t v21 = v7[12];
    uint64_t v22 = (void **)((char *)v6 + v21);
    uint64_t v23 = (void **)((char *)a2 + v21);
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v24 - 1) >= 3)
    {
      *uint64_t v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
    *((unsigned char *)v6 + v7[13]) = *((unsigned char *)a2 + v7[13]);
    uint64_t v25 = v7[14];
    uint64_t v26 = *(void **)((char *)a2 + v25);
    *(void **)((char *)v6 + v25) = v26;
    uint64_t v27 = v7[15];
    uint64_t v28 = (void **)((char *)v6 + v27);
    uint64_t v29 = (void **)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = *(int *)(a3 + 20);
    int v32 = (char *)v6 + v31;
    uint64_t v33 = (char *)a2 + v31;
    long long v34 = *(_OWORD *)(v33 + 24);
    *(_OWORD *)((char *)v6 + v31 + 24) = v34;
    uint64_t v35 = v34;
    uint64_t v36 = **(void (***)(char *, char *, uint64_t))(v34 - 8);
    id v37 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v32, v33, v35);
  }
  return v6;
}

uint64_t destroy for FormatTransformKnobs(id *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for FeedContext();
  uint64_t v5 = (char *)a1 + v4[5];
  uint64_t v6 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = &v5[*(int *)(v6 + 20)];
    uint64_t v8 = sub_1C151631C();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)a1 + v4[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t)a1 + *(int *)(a2 + 20);
  return __swift_destroy_boxed_opaque_existential_1(v9);
}

void **initializeWithCopy for FormatTransformKnobs(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for FeedContext();
  uint64_t v7 = v6[5];
  uint64_t v8 = (void **)((char *)a1 + v7);
  uint64_t v9 = (void **)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for BundleSession();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, int *))(v11 + 48);
  id v13 = v5;
  if (v12(v9, 1, v10))
  {
    sub_1C02DE94C(0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v15 = v10[5];
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    *((unsigned char *)v8 + v10[6]) = *((unsigned char *)v9 + v10[6]);
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    uint64_t v19 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    v19(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
  *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  *(void **)((char *)a1 + v6[10]) = *(void **)((char *)a2 + v6[10]);
  *(void **)((char *)a1 + v6[11]) = *(void **)((char *)a2 + v6[11]);
  uint64_t v20 = v6[12];
  uint64_t v21 = (void **)((char *)a1 + v20);
  uint64_t v22 = (void **)((char *)a2 + v20);
  uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v23 - 1) >= 3)
  {
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
  uint64_t v24 = v6[14];
  uint64_t v25 = *(void **)((char *)a2 + v24);
  *(void **)((char *)a1 + v24) = v25;
  uint64_t v26 = v6[15];
  uint64_t v27 = (void **)((char *)a1 + v26);
  uint64_t v28 = (void **)((char *)a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = (char *)a1 + v30;
  int v32 = (char *)a2 + v30;
  long long v33 = *(_OWORD *)(v32 + 24);
  *(_OWORD *)((char *)a1 + v30 + 24) = v33;
  uint64_t v34 = v33;
  uint64_t v35 = **(void (***)(char *, char *, uint64_t))(v33 - 8);
  id v36 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v31, v32, v34);
  return a1;
}

void **assignWithCopy for FormatTransformKnobs(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *a1;
  *a1 = *a2;
  id v7 = v5;

  uint64_t v8 = (int *)type metadata accessor for FeedContext();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void **)((char *)a1 + v9);
  uint64_t v11 = (void **)((char *)a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for BundleSession();
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *uint64_t v10 = *v11;
      uint64_t v17 = v12[5];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      uint64_t v20 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      *((unsigned char *)v10 + v12[6]) = *((unsigned char *)v11 + v12[6]);
      *((unsigned char *)v10 + v12[7]) = *((unsigned char *)v11 + v12[7]);
      *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
      *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
      *((unsigned char *)v10 + v12[10]) = *((unsigned char *)v11 + v12[10]);
      *((unsigned char *)v10 + v12[11]) = *((unsigned char *)v11 + v12[11]);
      uint64_t v21 = *(void (**)(void *, void, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      v21(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1C0CC2A70((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_6:
    sub_1C02DE94C(0);
    memcpy(v10, v11, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v10 = *v11;
  uint64_t v36 = v12[5];
  id v37 = (char *)v10 + v36;
  uint64_t v38 = (char *)v11 + v36;
  uint64_t v39 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  *((unsigned char *)v10 + v12[6]) = *((unsigned char *)v11 + v12[6]);
  *((unsigned char *)v10 + v12[7]) = *((unsigned char *)v11 + v12[7]);
  *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
  *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v10 + v12[10]) = *((unsigned char *)v11 + v12[10]);
  *((unsigned char *)v10 + v12[11]) = *((unsigned char *)v11 + v12[11]);
LABEL_7:
  *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
  *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
  *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
  *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
  *(void **)((char *)a1 + v8[10]) = *(void **)((char *)a2 + v8[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + v8[11]) = *(void **)((char *)a2 + v8[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v8[12];
  uint64_t v24 = (void **)((char *)a1 + v23);
  uint64_t v25 = (void **)((char *)a2 + v23);
  uint64_t v26 = *(uint64_t *)((char *)a1 + v23 + 8);
  unint64_t v27 = *(unint64_t *)((char *)a2 + v23 + 8) - 1;
  if ((unint64_t)(v26 - 1) >= 3)
  {
    if (v27 >= 3)
    {
      *uint64_t v24 = *v25;
      v24[1] = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1C0CC2A70((uint64_t)v24, (uint64_t (*)(void))sub_1BFF97D54);
    goto LABEL_12;
  }
  if (v27 < 3)
  {
LABEL_12:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_14;
  }
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
LABEL_14:
  *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
  uint64_t v28 = v8[14];
  uint64_t v29 = *(void **)((char *)a1 + v28);
  uint64_t v30 = *(void **)((char *)a2 + v28);
  *(void **)((char *)a1 + v28) = v30;
  id v31 = v30;

  uint64_t v32 = v8[15];
  long long v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  *(void **)((char *)a1 + v32) = *(void **)((char *)a2 + v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)));
  return a1;
}

void *initializeWithTake for FormatTransformKnobs(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for FeedContext();
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for BundleSession();
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    sub_1C02DE94C(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[5];
    uint64_t v14 = (char *)v8 + v13;
    int v15 = (char *)v9 + v13;
    uint64_t v16 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *((unsigned char *)v8 + v10[6]) = *((unsigned char *)v9 + v10[6]);
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
  *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
  *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
  *(_OWORD *)((char *)a1 + v6[15]) = *(_OWORD *)((char *)a2 + v6[15]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  return a1;
}

void **assignWithTake for FormatTransformKnobs(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  *a1 = *a2;

  uint64_t v6 = (int *)type metadata accessor for FeedContext();
  uint64_t v7 = v6[5];
  uint64_t v8 = (void **)((char *)a1 + v7);
  uint64_t v9 = (void **)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for BundleSession();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *uint64_t v8 = *v9;
      uint64_t v15 = v10[5];
      uint64_t v16 = (char *)v8 + v15;
      uint64_t v17 = (char *)v9 + v15;
      uint64_t v18 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *((unsigned char *)v8 + v10[6]) = *((unsigned char *)v9 + v10[6]);
      *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
      *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
      *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
      *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
      *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1C0CC2A70((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_6:
    sub_1C02DE94C(0);
    memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  uint64_t v34 = v10[5];
  uint64_t v35 = (char *)v8 + v34;
  uint64_t v36 = (char *)v9 + v34;
  uint64_t v37 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  *((unsigned char *)v8 + v10[6]) = *((unsigned char *)v9 + v10[6]);
  *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
  *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
  *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
  *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
LABEL_7:
  *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
  *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  *(void **)((char *)a1 + v6[10]) = *(void **)((char *)a2 + v6[10]);
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + v6[11]) = *(void **)((char *)a2 + v6[11]);
  swift_bridgeObjectRelease();
  uint64_t v20 = v6[12];
  uint64_t v21 = (void **)((char *)a1 + v20);
  uint64_t v22 = (void **)((char *)a2 + v20);
  if (*(char **)((char *)a1 + v20 + 8) - 1 >= (char *)3)
  {
    uint64_t v23 = v22[1];
    if ((unint64_t)(v23 - 1) >= 3)
    {
      *uint64_t v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C0CC2A70((uint64_t)v21, (uint64_t (*)(void))sub_1BFF97D54);
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_12:
  *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
  uint64_t v24 = v6[14];
  uint64_t v25 = *(void **)((char *)a1 + v24);
  *(void **)((char *)a1 + v24) = *(void **)((char *)a2 + v24);

  uint64_t v26 = v6[15];
  unint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  *(void **)((char *)a1 + v26) = *(void **)((char *)a2 + v26);
  swift_bridgeObjectRelease();
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (char *)a1 + v29;
  id v31 = (char *)a2 + v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v29);
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((void *)v30 + 4) = *((void *)v31 + 4);
  return a1;
}

uint64_t sub_1C0EF4BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedContext();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FormatTransformKnobs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0EF4CBC);
}

uint64_t sub_1C0EF4CBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FeedContext();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C0EF4D7C()
{
  uint64_t result = type metadata accessor for FeedContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.maxNumberOfItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.minNumberOfItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.expireContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.expireContentThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C0EF4E60@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v7 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v7 + 24);
      long long v48 = *(_OWORD *)(v7 + 32);
      uint64_t v10 = *(void *)(v7 + 48);
      uint64_t v11 = *(void *)(v7 + 56);
      uint64_t v12 = *(void *)(v7 + 64);
      uint64_t v13 = *(void *)(v7 + 72);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_1C096B5E4(v8);
      *(void *)(v14 + 24) = v9;
      *(_OWORD *)(v14 + 32) = v48;
      *(void *)(v14 + 48) = v10;
      *(void *)(v14 + 56) = v11;
      *(void *)(v14 + 64) = v12;
      *(void *)(v14 + 72) = v13;
      *a1 = v14 | 0x2000000000000000;
      swift_bridgeObjectRetain();
      return sub_1BFDB3920(v12);
    case 2uLL:
      uint64_t v15 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      uint64_t v18 = *(void *)(v15 + 48);
      uint64_t v19 = *(void *)(v15 + 56);
      char v20 = *(unsigned char *)(v15 + 64);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = *(void *)(v15 + 80);
      long long v47 = *(_OWORD *)(v15 + 88);
      long long v49 = *(_OWORD *)(v15 + 32);
      uint64_t v23 = *(void *)(v15 + 104);
      uint64_t v24 = *(void *)(v15 + 112);
      char v25 = *(unsigned char *)(v15 + 120);
      uint64_t v26 = *(void *)(v15 + 128);
      uint64_t v27 = *(void *)(v15 + 136);
      uint64_t v28 = swift_allocObject();
      uint64_t v29 = sub_1C096B5E4(v26);
      *(void *)(v28 + 16) = v16;
      *(void *)(v28 + 24) = v17;
      *(_OWORD *)(v28 + 32) = v49;
      *(void *)(v28 + 48) = v18;
      *(void *)(v28 + 56) = v19;
      *(unsigned char *)(v28 + 64) = v20;
      *(void *)(v28 + 72) = v21;
      *(void *)(v28 + 80) = v22;
      *(_OWORD *)(v28 + 88) = v47;
      *(void *)(v28 + 104) = v23;
      *(void *)(v28 + 112) = v24;
      *(unsigned char *)(v28 + 120) = v25;
      *(void *)(v28 + 128) = v29;
      *(void *)(v28 + 136) = v27;
      *a1 = v28 | 0x4000000000000000;
      return swift_bridgeObjectRetain();
    case 3uLL:
      uint64_t v30 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v31 = swift_allocObject();
      *(void *)&long long v50 = v30;
      uint64_t result = sub_1C13BBC30((uint64_t *)(v31 + 16));
      unint64_t v32 = v31 | 0x6000000000000000;
      goto LABEL_22;
    case 4uLL:
      long long v33 = (_OWORD *)(v3 & 0x1FFFFFFFFFFFFFFFLL);
      long long v34 = v33[8];
      long long v56 = v33[7];
      *(_OWORD *)uint64_t v57 = v34;
      *(_OWORD *)&v57[16] = v33[9];
      *(_OWORD *)&v57[25] = *(_OWORD *)((char *)v33 + 153);
      long long v35 = v33[4];
      long long v52 = v33[3];
      long long v53 = v35;
      long long v36 = v33[6];
      long long v54 = v33[5];
      long long v55 = v36;
      long long v37 = v33[2];
      long long v50 = v33[1];
      long long v51 = v37;
      uint64_t v38 = swift_allocObject();
      uint64_t result = sub_1C03A99BC(v38 + 16);
      unint64_t v32 = v38 | 0x8000000000000000;
      goto LABEL_22;
    case 5uLL:
      uint64_t v39 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v40 = *(void *)(v39 + 16);
      if (*(void *)(v39 + 24))
      {
        swift_retain_n();
        swift_retain();
        uint64_t v41 = sub_1C12847C4();
      }
      else
      {
        swift_retain_n();
        uint64_t v41 = 0;
      }
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v40;
      *(void *)(v46 + 24) = v41;
      swift_release();
      uint64_t result = swift_release();
      unint64_t v32 = v46 | 0xA000000000000000;
LABEL_22:
      *a1 = v32;
      break;
    case 6uLL:
      uint64_t v42 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v43 = *(void *)(v42 + 16);
      sub_1C0A5C348(v42 + 24, (uint64_t)v61);
      sub_1C0A5C348((uint64_t)v61, (uint64_t)&v50);
      if (sub_1C00F6584((uint64_t *)&v50) == 1)
      {
        uint64_t v44 = v61;
      }
      else
      {
        v59[6] = v56;
        v60[0] = *(_OWORD *)v57;
        *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)&v57[9];
        v59[2] = v52;
        v59[3] = v53;
        void v59[4] = v54;
        v59[5] = v55;
        v59[0] = v50;
        v59[1] = v51;
        sub_1C0A5B17C((uint64_t)v58);
        nullsub_1();
        uint64_t v44 = v58;
      }
      sub_1C0A5C348((uint64_t)v44, (uint64_t)v59);
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v43;
      sub_1C0A5C348((uint64_t)v59, v45 + 24);
      *a1 = v45 | 0xC000000000000000;
      uint64_t result = swift_retain();
      break;
    case 7uLL:
      *a1 = v3;
      uint64_t result = swift_retain();
      break;
    default:
      uint64_t v4 = *(void *)(v3 + 16);
      uint64_t v5 = swift_allocObject();
      *(void *)&long long v50 = v4;
      uint64_t result = sub_1C10E55EC((void *)(v5 + 16));
      *a1 = v5;
      break;
  }
  return result;
}

uint64_t sub_1C0EF52D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatImageBackground.init(from:)(a1, a2);
}

uint64_t sub_1C0EF52E8(void *a1)
{
  return FormatImageBackground.encode(to:)(a1);
}

uint64_t sub_1C0EF5304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMicaBackground.init(from:)(a1, a2);
}

uint64_t sub_1C0EF531C(void *a1)
{
  return FormatMicaBackground.encode(to:)(a1);
}

BOOL _s8NewsFeed20FormatMicaBackgroundV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  sub_1C0A5C348((uint64_t)(a1 + 1), (uint64_t)v31);
  uint64_t v4 = *a2;
  sub_1C0A5C348((uint64_t)(a2 + 1), (uint64_t)v32);
  v28[0] = v3;
  v30[0] = v4;
  if ((static FormatMicaNodeContent.== infix(_:_:)((unint64_t *)v28, (unint64_t *)v30) & 1) == 0) {
    return 0;
  }
  sub_1C0A5C348((uint64_t)v31, (uint64_t)v30);
  if (sub_1C00F6584(v30) == 1)
  {
    sub_1C0A5C348((uint64_t)v32, (uint64_t)v28);
    if (sub_1C00F6584(v28) == 1) {
      return 1;
    }
    goto LABEL_7;
  }
  sub_1C0A5C348((uint64_t)v31, (uint64_t)&v20);
  sub_1C0A5C348((uint64_t)v32, (uint64_t)v28);
  if (sub_1C00F6584(v28) == 1)
  {
    long long v15 = v26;
    v16[0] = v27[0];
    *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v27 + 9);
    long long v11 = v22;
    long long v12 = v23;
    long long v13 = v24;
    long long v14 = v25;
    long long v9 = v20;
    long long v10 = v21;
    sub_1C0A5C348((uint64_t)v31, (uint64_t)v17);
    sub_1C0A5C348((uint64_t)v31, (uint64_t)v18);
    sub_1C00F676C((uint64_t)v18);
    sub_1C00F676C((uint64_t)v17);
    sub_1C00F6854((uint64_t)&v9);
LABEL_7:
    sub_1C0A5C348((uint64_t)v31, (uint64_t)v28);
    sub_1C0A5C348((uint64_t)v32, (uint64_t)&v29);
    sub_1C00F6940((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
    sub_1C00F6608((uint64_t)v28);
    return 0;
  }
  sub_1C0A5C348((uint64_t)v32, (uint64_t)&v9);
  v7[6] = v15;
  v8[0] = v16[0];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)v16 + 9);
  v7[2] = v11;
  v7[3] = v12;
  v7[4] = v13;
  void v7[5] = v14;
  v7[0] = v9;
  v7[1] = v10;
  sub_1C0A5C348((uint64_t)v31, (uint64_t)v17);
  sub_1C00F6940((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
  sub_1C00F676C((uint64_t)v17);
  BOOL v5 = _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0((uint64_t)&v20, (uint64_t)v7);
  v18[6] = v26;
  v19[0] = v27[0];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v27 + 9);
  void v18[2] = v22;
  v18[3] = v23;
  v18[4] = v24;
  v18[5] = v25;
  v18[0] = v20;
  v18[1] = v21;
  sub_1C00F6854((uint64_t)v18);
  sub_1C00F6940((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
  return v5;
}

uint64_t _s8NewsFeed21FormatImageBackgroundV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  uint64_t v8 = *a2;
  uint64_t v9 = v2;
  if (static FormatAsyncImageContent.== infix(_:_:)(&v9, &v8))
  {
    if (v3)
    {
      if (v4)
      {
        type metadata accessor for FormatImageNodeStyle();
        swift_retain();
        uint64_t v5 = swift_retain();
        char v6 = static FormatImageNodeStyle.== infix(_:_:)(v5, v4);
        swift_release();
        swift_release();
        if (v6) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t _s8NewsFeed16FormatBackgroundO2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_26;
      }
      uint64_t v5 = (_OWORD *)(v2 & 0x1FFFFFFFFFFFFFFFLL);
      uint64_t v7 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v6 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v8 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v9 = *(void *)(v8 + 16);
      uint64_t v10 = *(void *)(v8 + 24);
      *(void *)&long long v59 = v7;
      *((void *)&v59 + 1) = v6;
      long long v11 = v5[3];
      long long v60 = v5[2];
      long long v61 = v11;
      long long v62 = v5[4];
      *(void *)&long long v50 = v9;
      *((void *)&v50 + 1) = v10;
      long long v12 = *(_OWORD *)(v8 + 48);
      long long v51 = *(_OWORD *)(v8 + 32);
      long long v52 = v12;
      long long v53 = *(_OWORD *)(v8 + 64);
      swift_retain();
      swift_retain();
      char v13 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)&v59, (uint64_t)&v50);
      goto LABEL_25;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_26;
      }
      long long v14 = (_OWORD *)(v3 & 0x1FFFFFFFFFFFFFFFLL);
      long long v15 = v14[6];
      long long v54 = v14[5];
      long long v55 = v15;
      long long v16 = v14[8];
      long long v56 = v14[7];
      long long v57 = v16;
      long long v17 = v14[2];
      long long v50 = v14[1];
      long long v51 = v17;
      long long v18 = v14[4];
      long long v52 = v14[3];
      long long v53 = v18;
      long long v19 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      long long v63 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      long long v64 = v19;
      long long v20 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      long long v65 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      long long v66 = v20;
      long long v21 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v59 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v60 = v21;
      long long v22 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      long long v61 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      long long v62 = v22;
      swift_retain();
      swift_retain();
      char v13 = _s8NewsFeed20FormatRadialGradientV2eeoiySbAC_ACtFZ_0(&v59, &v50);
      goto LABEL_25;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_26;
      }
      uint64_t v23 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      switch(v23 & 7)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          v23 &= 0xFFFFFFFFFFFFFFF8;
          break;
        default:
          break;
      }
      *(void *)&long long v59 = v23;
      switch(v24 & 7)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          v24 &= 0xFFFFFFFFFFFFFFF8;
          break;
        default:
          break;
      }
      *(void *)&long long v50 = v24;
      swift_retain();
      goto LABEL_14;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_26;
      }
      long long v25 = (_OWORD *)(v3 & 0x1FFFFFFFFFFFFFFFLL);
      long long v26 = v25[8];
      long long v56 = v25[7];
      long long v57 = v26;
      *(_OWORD *)uint64_t v58 = v25[9];
      *(_OWORD *)&v58[9] = *(_OWORD *)((char *)v25 + 153);
      long long v27 = v25[4];
      long long v52 = v25[3];
      long long v53 = v27;
      long long v28 = v25[6];
      long long v54 = v25[5];
      long long v55 = v28;
      long long v29 = v25[2];
      long long v50 = v25[1];
      long long v51 = v29;
      long long v30 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      long long v65 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      long long v66 = v30;
      *(_OWORD *)uint64_t v67 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
      *(_OWORD *)&v67[9] = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x99);
      long long v31 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      long long v61 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      long long v62 = v31;
      long long v32 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      long long v63 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      long long v64 = v32;
      long long v33 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v59 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v60 = v33;
      swift_retain();
      swift_retain();
      char v13 = _s8NewsFeed21FormatSplitBackgroundV2eeoiySbAC_ACtFZ_0((uint64_t)&v59, (uint64_t)&v50);
      goto LABEL_25;
    case 5uLL:
      if (v3 >> 61 != 5) {
        goto LABEL_26;
      }
      long long v59 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v50 = *(_OWORD *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v13 = _s8NewsFeed21FormatImageBackgroundV2eeoiySbAC_ACtFZ_0((uint64_t *)&v59, (uint64_t *)&v50);
      goto LABEL_25;
    case 6uLL:
      if (v3 >> 61 != 6) {
        goto LABEL_26;
      }
      uint64_t v40 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      long long v41 = *(_OWORD *)(v40 + 128);
      long long v56 = *(_OWORD *)(v40 + 112);
      long long v57 = v41;
      *(_OWORD *)uint64_t v58 = *(_OWORD *)(v40 + 144);
      v58[16] = *(unsigned char *)(v40 + 160);
      long long v42 = *(_OWORD *)(v40 + 64);
      long long v52 = *(_OWORD *)(v40 + 48);
      long long v53 = v42;
      long long v43 = *(_OWORD *)(v40 + 96);
      long long v54 = *(_OWORD *)(v40 + 80);
      long long v55 = v43;
      long long v44 = *(_OWORD *)(v40 + 32);
      long long v50 = *(_OWORD *)(v40 + 16);
      long long v51 = v44;
      long long v45 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      long long v65 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      long long v66 = v45;
      *(_OWORD *)uint64_t v67 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
      v67[16] = *(unsigned char *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0xA0);
      long long v46 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      long long v61 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      long long v62 = v46;
      long long v47 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      long long v63 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      long long v64 = v47;
      long long v48 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v59 = *(_OWORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v60 = v48;
      swift_retain();
      swift_retain();
      char v13 = _s8NewsFeed20FormatMicaBackgroundV2eeoiySbAC_ACtFZ_0((uint64_t *)&v59, (uint64_t *)&v50);
      goto LABEL_25;
    case 7uLL:
      if (v3 >> 61 != 7) {
        goto LABEL_26;
      }
      char v34 = *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v59) = *(unsigned char *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v50) = v34;
      unint64_t v35 = FormatBlurEffectStyle.rawValue.getter();
      uint64_t v37 = v36;
      if (v35 == FormatBlurEffectStyle.rawValue.getter() && v37 == v38) {
        char v39 = 1;
      }
      else {
        char v39 = sub_1C1520A9C();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v39 & 1;
    default:
      if (v3 >> 61)
      {
LABEL_26:
        char v39 = 0;
      }
      else
      {
        uint64_t v4 = *(void *)(v3 + 16);
        *(void *)&long long v59 = *(void *)(v2 + 16);
        *(void *)&long long v50 = v4;
        swift_retain();
LABEL_14:
        swift_retain();
        char v13 = static FormatColor.== infix(_:_:)((uint64_t *)&v59, (unint64_t *)&v50);
LABEL_25:
        char v39 = v13;
        swift_release();
        swift_release();
      }
      return v39 & 1;
  }
}

unint64_t sub_1C0EF5A60(uint64_t a1)
{
  unint64_t result = sub_1C0EF5A88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EF5A88()
{
  unint64_t result = qword_1EA1A8B80;
  if (!qword_1EA1A8B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8B80);
  }
  return result;
}

uint64_t sub_1C0EF5ADC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EF5D3C(a1, a2, a3, (uint64_t (*)(void))sub_1BFE922A0, (uint64_t (*)(void))sub_1BFE7F0FC, (uint64_t (*)(void))sub_1C0EF5B1C);
}

unint64_t sub_1C0EF5B1C()
{
  unint64_t result = qword_1EA1A8B88;
  if (!qword_1EA1A8B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8B88);
  }
  return result;
}

unint64_t sub_1C0EF5B70(uint64_t a1)
{
  unint64_t result = sub_1C0EF5B98();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EF5B98()
{
  unint64_t result = qword_1EA1A8B90;
  if (!qword_1EA1A8B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8B90);
  }
  return result;
}

uint64_t sub_1C0EF5BEC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EF5D3C(a1, a2, a3, (uint64_t (*)(void))sub_1C08745EC, (uint64_t (*)(void))sub_1C0900108, (uint64_t (*)(void))sub_1C0EF5C2C);
}

unint64_t sub_1C0EF5C2C()
{
  unint64_t result = qword_1EA1A8B98;
  if (!qword_1EA1A8B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8B98);
  }
  return result;
}

unint64_t sub_1C0EF5C80(uint64_t a1)
{
  unint64_t result = sub_1C0EF5CA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EF5CA8()
{
  unint64_t result = qword_1EA1A8BA0;
  if (!qword_1EA1A8BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8BA0);
  }
  return result;
}

uint64_t sub_1C0EF5CFC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0EF5D3C(a1, a2, a3, (uint64_t (*)(void))sub_1C08744D8, (uint64_t (*)(void))sub_1C08FC58C, (uint64_t (*)(void))sub_1C0EF5D90);
}

uint64_t sub_1C0EF5D3C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EF5D90()
{
  unint64_t result = qword_1EA1A8BA8;
  if (!qword_1EA1A8BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8BA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBackground()
{
  return &type metadata for FormatBackground;
}

uint64_t destroy for FormatImageBackground()
{
  swift_release();
  return swift_release();
}

void *_s8NewsFeed21FormatImageBackgroundVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FormatImageBackground(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for FormatImageBackground(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageBackground()
{
  return &type metadata for FormatImageBackground;
}

uint64_t destroy for FormatMicaBackground(uint64_t a1)
{
  swift_release();
  uint64_t result = *(void *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int v3 = *(unsigned __int8 *)(a1 + 80);
    if (v3 != 255) {
      uint64_t result = sub_1BFE94AD4(*(void *)(a1 + 64), *(void *)(a1 + 72), v3 & 1);
    }
    int v4 = *(unsigned __int8 *)(a1 + 120);
    if (v4 != 255) {
      uint64_t result = sub_1C00F670C(*(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4 & 1);
    }
    int v5 = *(unsigned __int8 *)(a1 + 144);
    if (v5 != 255)
    {
      uint64_t v6 = *(void *)(a1 + 128);
      uint64_t v7 = *(void *)(a1 + 136);
      return sub_1BFE94AD4(v6, v7, v5 & 1);
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatMicaBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  swift_retain();
  if (v5 == 1)
  {
    long long v7 = v6[7];
    *(_OWORD *)(a1 + 104) = v6[6];
    *(_OWORD *)(a1 + 120) = v7;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)((char *)v6 + 121);
    long long v8 = v6[3];
    *(_OWORD *)(a1 + 40) = v6[2];
    *(_OWORD *)(a1 + 56) = v8;
    long long v9 = v6[5];
    *(_OWORD *)(a1 + 72) = v6[4];
    *(_OWORD *)(a1 + 88) = v9;
    long long v10 = v6[1];
    *int v4 = *v6;
    *(_OWORD *)(a1 + 24) = v10;
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = *(void *)(a2 + 24);
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v11;
    uint64_t v13 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v13;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    uint64_t v14 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v14;
    int v15 = *(unsigned __int8 *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 == 255)
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    }
    else
    {
      uint64_t v16 = *(void *)(a2 + 64);
      uint64_t v17 = *(void *)(a2 + 72);
      sub_1BFE94AB4(v16, v17, v15 & 1);
      *(void *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v17;
      *(unsigned char *)(a1 + 80) = v15 & 1;
    }
    int v18 = *(unsigned __int8 *)(a2 + 120);
    if (v18 == 255)
    {
      long long v19 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v19;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    }
    else
    {
      char v20 = v18 & 1;
      uint64_t v21 = *(void *)(a2 + 88);
      uint64_t v22 = *(void *)(a2 + 96);
      uint64_t v23 = *(void *)(a2 + 104);
      uint64_t v24 = *(void *)(a2 + 112);
      sub_1C00F65A8(v21, v22, v23, v24, v18 & 1);
      *(void *)(a1 + 88) = v21;
      *(void *)(a1 + 96) = v22;
      *(void *)(a1 + 104) = v23;
      *(void *)(a1 + 112) = v24;
      *(unsigned char *)(a1 + 120) = v20;
    }
    int v25 = *(unsigned __int8 *)(a2 + 144);
    if (v25 == 255)
    {
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    }
    else
    {
      char v26 = v25 & 1;
      uint64_t v28 = *(void *)(a2 + 128);
      uint64_t v27 = *(void *)(a2 + 136);
      sub_1BFE94AB4(v28, v27, v25 & 1);
      *(void *)(a1 + 128) = v28;
      *(void *)(a1 + 136) = v27;
      *(unsigned char *)(a1 + 144) = v26;
    }
  }
  return a1;
}

uint64_t assignWithCopy for FormatMicaBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  int v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v5 == 1)
    {
      *int v4 = *v6;
      long long v7 = *(_OWORD *)(a2 + 24);
      long long v8 = *(_OWORD *)(a2 + 40);
      long long v9 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v9;
      *(_OWORD *)(a1 + 24) = v7;
      *(_OWORD *)(a1 + 40) = v8;
      long long v10 = *(_OWORD *)(a2 + 88);
      long long v11 = *(_OWORD *)(a2 + 104);
      long long v12 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 104) = v11;
      *(_OWORD *)(a1 + 120) = v12;
      *(_OWORD *)(a1 + 88) = v10;
      return a1;
    }
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    int v19 = *(unsigned __int8 *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19 == 255)
    {
      long long v20 = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = v20;
    }
    else
    {
      uint64_t v25 = *(void *)(a2 + 64);
      uint64_t v26 = *(void *)(a2 + 72);
      sub_1BFE94AB4(v25, v26, v19 & 1);
      *(void *)(a1 + 64) = v25;
      *(void *)(a1 + 72) = v26;
      *(unsigned char *)(a1 + 80) = v19 & 1;
    }
    int v27 = *(unsigned __int8 *)(a2 + 120);
    if (v27 == 255)
    {
      long long v28 = *(_OWORD *)(a2 + 88);
      long long v29 = *(_OWORD *)(a2 + 104);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(_OWORD *)(a1 + 88) = v28;
      *(_OWORD *)(a1 + 104) = v29;
    }
    else
    {
      char v30 = v27 & 1;
      uint64_t v31 = *(void *)(a2 + 88);
      uint64_t v32 = *(void *)(a2 + 96);
      uint64_t v33 = *(void *)(a2 + 104);
      uint64_t v34 = *(void *)(a2 + 112);
      sub_1C00F65A8(v31, v32, v33, v34, v27 & 1);
      *(void *)(a1 + 88) = v31;
      *(void *)(a1 + 96) = v32;
      *(void *)(a1 + 104) = v33;
      *(void *)(a1 + 112) = v34;
      *(unsigned char *)(a1 + 120) = v30;
    }
    int v35 = *(unsigned __int8 *)(a2 + 144);
    if (v35 == 255)
    {
      long long v36 = *(_OWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = v36;
      return a1;
    }
LABEL_33:
    char v73 = v35 & 1;
    uint64_t v75 = *(void *)(a2 + 128);
    uint64_t v74 = *(void *)(a2 + 136);
    sub_1BFE94AB4(v75, v74, v35 & 1);
    *(void *)(a1 + 128) = v75;
    *(void *)(a1 + 136) = v74;
    *(unsigned char *)(a1 + 144) = v73;
    return a1;
  }
  if (v5 == 1)
  {
    sub_1C0EF669C(a1 + 8);
    *int v4 = *v6;
    long long v13 = *(_OWORD *)(a2 + 72);
    long long v15 = *(_OWORD *)(a2 + 24);
    long long v14 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
    *(_OWORD *)(a1 + 24) = v15;
    *(_OWORD *)(a1 + 40) = v14;
    long long v17 = *(_OWORD *)(a2 + 104);
    long long v16 = *(_OWORD *)(a2 + 120);
    long long v18 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 104) = v17;
    *(_OWORD *)(a1 + 120) = v16;
    *(_OWORD *)(a1 + 88) = v18;
    return a1;
  }
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = (long long *)(a1 + 64);
  uint64_t v22 = (long long *)(a2 + 64);
  int v23 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v23 == 255)
    {
      long long v37 = *v22;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *uint64_t v21 = v37;
    }
    else
    {
      char v44 = v23 & 1;
      uint64_t v45 = *(void *)(a2 + 64);
      uint64_t v46 = *(void *)(a2 + 72);
      sub_1BFE94AB4(v45, v46, v23 & 1);
      *(void *)(a1 + 64) = v45;
      *(void *)(a1 + 72) = v46;
      *(unsigned char *)(a1 + 80) = v44;
    }
  }
  else if (v23 == 255)
  {
    sub_1C0457C38(a1 + 64);
    char v24 = *(unsigned char *)(a2 + 80);
    *uint64_t v21 = *v22;
    *(unsigned char *)(a1 + 80) = v24;
  }
  else
  {
    char v38 = v23 & 1;
    uint64_t v39 = *(void *)(a2 + 64);
    uint64_t v40 = *(void *)(a2 + 72);
    sub_1BFE94AB4(v39, v40, v23 & 1);
    uint64_t v41 = *(void *)(a1 + 64);
    uint64_t v42 = *(void *)(a1 + 72);
    char v43 = *(unsigned char *)(a1 + 80);
    *(void *)(a1 + 64) = v39;
    *(void *)(a1 + 72) = v40;
    *(unsigned char *)(a1 + 80) = v38;
    sub_1BFE94AD4(v41, v42, v43);
  }
  long long v47 = (long long *)(a1 + 88);
  long long v48 = (long long *)(a2 + 88);
  int v49 = *(unsigned __int8 *)(a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) == 255)
  {
    if (v49 == 255)
    {
      long long v52 = *v48;
      long long v53 = *(_OWORD *)(a2 + 104);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *long long v47 = v52;
      *(_OWORD *)(a1 + 104) = v53;
    }
    else
    {
      char v64 = v49 & 1;
      uint64_t v65 = *(void *)(a2 + 88);
      uint64_t v66 = *(void *)(a2 + 96);
      uint64_t v67 = *(void *)(a2 + 104);
      uint64_t v68 = *(void *)(a2 + 112);
      sub_1C00F65A8(v65, v66, v67, v68, v49 & 1);
      *(void *)(a1 + 88) = v65;
      *(void *)(a1 + 96) = v66;
      *(void *)(a1 + 104) = v67;
      *(void *)(a1 + 112) = v68;
      *(unsigned char *)(a1 + 120) = v64;
    }
  }
  else if (v49 == 255)
  {
    sub_1C0A5C10C(a1 + 88);
    char v50 = *(unsigned char *)(a2 + 120);
    long long v51 = *(_OWORD *)(a2 + 104);
    *long long v47 = *v48;
    *(_OWORD *)(a1 + 104) = v51;
    *(unsigned char *)(a1 + 120) = v50;
  }
  else
  {
    char v54 = v49 & 1;
    uint64_t v55 = *(void *)(a2 + 88);
    uint64_t v56 = *(void *)(a2 + 96);
    uint64_t v57 = *(void *)(a2 + 104);
    uint64_t v58 = *(void *)(a2 + 112);
    sub_1C00F65A8(v55, v56, v57, v58, v49 & 1);
    uint64_t v59 = *(void *)(a1 + 88);
    uint64_t v60 = *(void *)(a1 + 96);
    uint64_t v61 = *(void *)(a1 + 104);
    uint64_t v62 = *(void *)(a1 + 112);
    char v63 = *(unsigned char *)(a1 + 120);
    *(void *)(a1 + 88) = v55;
    *(void *)(a1 + 96) = v56;
    *(void *)(a1 + 104) = v57;
    *(void *)(a1 + 112) = v58;
    *(unsigned char *)(a1 + 120) = v54;
    sub_1C00F670C(v59, v60, v61, v62, v63);
  }
  uint64_t v69 = (long long *)(a1 + 128);
  uint64_t v70 = (long long *)(a2 + 128);
  int v35 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 255)
  {
    if (v35 == 255)
    {
      long long v72 = *v70;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      long long *v69 = v72;
      return a1;
    }
    goto LABEL_33;
  }
  if (v35 == 255)
  {
    sub_1C0457C38(a1 + 128);
    char v71 = *(unsigned char *)(a2 + 144);
    long long *v69 = *v70;
    *(unsigned char *)(a1 + 144) = v71;
  }
  else
  {
    char v76 = v35 & 1;
    uint64_t v78 = *(void *)(a2 + 128);
    uint64_t v77 = *(void *)(a2 + 136);
    sub_1BFE94AB4(v78, v77, v35 & 1);
    uint64_t v79 = *(void *)(a1 + 128);
    uint64_t v80 = *(void *)(a1 + 136);
    char v81 = *(unsigned char *)(a1 + 144);
    *(void *)(a1 + 128) = v78;
    *(void *)(a1 + 136) = v77;
    *(unsigned char *)(a1 + 144) = v76;
    sub_1BFE94AD4(v79, v80, v81);
  }
  return a1;
}

uint64_t sub_1C0EF669C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatMicaBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  if (v4 == 1)
  {
    sub_1C0EF669C(a1 + 8);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v5;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    long long v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    long long v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v7;
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    return a1;
  }
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  long long v9 = (_OWORD *)(a2 + 64);
  int v10 = *(unsigned __int8 *)(a1 + 80);
  if (v10 == 255) {
    goto LABEL_8;
  }
  int v11 = *(unsigned __int8 *)(a2 + 80);
  if (v11 == 255)
  {
    sub_1C0457C38(a1 + 64);
LABEL_8:
    *(_OWORD *)(a1 + 64) = *v9;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *v9;
  *(unsigned char *)(a1 + 80) = v11 & 1;
  sub_1BFE94AD4(v12, v13, v10 & 1);
LABEL_10:
  int v14 = *(unsigned __int8 *)(a1 + 120);
  if (v14 != 255)
  {
    int v15 = *(unsigned __int8 *)(a2 + 120);
    if (v15 != 255)
    {
      uint64_t v17 = *(void *)(a1 + 88);
      uint64_t v18 = *(void *)(a1 + 96);
      uint64_t v19 = *(void *)(a1 + 104);
      uint64_t v20 = *(void *)(a1 + 112);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(unsigned char *)(a1 + 120) = v15 & 1;
      sub_1C00F670C(v17, v18, v19, v20, v14 & 1);
      goto LABEL_15;
    }
    sub_1C0A5C10C(a1 + 88);
  }
  long long v16 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v16;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
LABEL_15:
  uint64_t v21 = (_OWORD *)(a2 + 128);
  int v22 = *(unsigned __int8 *)(a1 + 144);
  if (v22 != 255)
  {
    int v23 = *(unsigned __int8 *)(a2 + 144);
    if (v23 != 255)
    {
      uint64_t v24 = *(void *)(a1 + 128);
      uint64_t v25 = *(void *)(a1 + 136);
      *(_OWORD *)(a1 + 128) = *v21;
      *(unsigned char *)(a1 + 144) = v23 & 1;
      sub_1BFE94AD4(v24, v25, v22 & 1);
      return a1;
    }
    sub_1C0457C38(a1 + 128);
  }
  *(_OWORD *)(a1 + 128) = *v21;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMicaBackground(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 145)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMicaBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 145) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaBackground()
{
  return &type metadata for FormatMicaBackground;
}

uint64_t sub_1C0EF69E8()
{
  swift_release();
  if (*(void *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 != 255) {
      sub_1BFE94AD4(*(void *)(v0 + 80), *(void *)(v0 + 88), v1 & 1);
    }
    int v2 = *(unsigned __int8 *)(v0 + 136);
    if (v2 != 255) {
      sub_1C00F670C(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), v2 & 1);
    }
    int v3 = *(unsigned __int8 *)(v0 + 160);
    if (v3 != 255) {
      sub_1BFE94AD4(*(void *)(v0 + 144), *(void *)(v0 + 152), v3 & 1);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0EF6AA8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0EF6AEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C03596EC(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  sub_1C03596EC(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_1C0EF6B6C()
{
  sub_1BFF7C0EC(*(void *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C0EF6BA4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0EF6BE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0EF6C38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0EF6C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for FormatAlphaColor();
  uint64_t v9 = a5 + *(int *)(result + 36);
  *(void *)uint64_t v9 = a2;
  *(unsigned char *)(v9 + 8) = a3 & 1;
  return result;
}

uint64_t static FormatAlphaColor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1C151E5CC() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for FormatAlphaColor() + 36);
  BOOL v5 = (double *)(a1 + v4);
  char v6 = *(unsigned char *)(a1 + v4 + 8);
  long long v7 = (double *)(a2 + v4);
  char v8 = *(unsigned char *)(a2 + v4 + 8);
  if (v6)
  {
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*v5 != *v7) {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  return 1;
}

uint64_t type metadata accessor for FormatAlphaColor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0EF6DB0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0EF6DEC(uint64_t a1, uint64_t a2)
{
  return static FormatAlphaColor.== infix(_:_:)(a1, a2);
}

uint64_t sub_1C0EF6DF8(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0EF6E78@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatAlphaColor.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1C0EF6E98(void *a1, uint64_t a2)
{
  return FormatAlphaColor.encode(to:)(a1, a2);
}

uint64_t sub_1C0EF6EB0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0EF6F48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v11 = *(unsigned char *)(v10 + 8);
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v10;
    *(unsigned char *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_1C0EF7048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1C0EF70CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1C0EF7150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1C0EF71D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1C0EF7258(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v7 = (a2 - v5 + 255) >> (8 * v6);
    if (v6 < 4) {
      unsigned int v8 = v7 + 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = 2;
    }
    if (v8 < 0x100) {
      unsigned int v9 = 1;
    }
    if (v8 >= 2) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    switch(v10)
    {
      case 1:
        int v11 = a1[v6];
        if (!a1[v6]) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v11 = *(unsigned __int16 *)&a1[v6];
        if (*(_WORD *)&a1[v6]) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0EF7388);
      case 4:
        int v11 = *(_DWORD *)&a1[v6];
        if (!v11) {
          break;
        }
LABEL_18:
        int v12 = (v11 - 1) << (8 * v6);
        if (v6 >= 4) {
          int v12 = 0;
        }
        if (((*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v13 = *a1;
        }
        else {
          int v13 = *(_DWORD *)a1;
        }
        return v5 + (v13 | v12) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_1C0EF739C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v9 = 8 * v8;
  if (v7 >= a3)
  {
    int v13 = 0;
    if (v7 >= a2)
    {
LABEL_14:
      switch(v13)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 3:
          goto LABEL_38;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_30;
        default:
LABEL_30:
          if (a2)
          {
LABEL_31:
            uint64_t v17 = *(void (**)(void))(v6 + 56);
            v17();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v10 = (a3 - v7 + 255) >> v9;
    if (v8 <= 3) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    if (v7 >= a2) {
      goto LABEL_14;
    }
  }
  unsigned int v14 = (~v7 + a2) >> v9;
  if (v8 < 4) {
    int v15 = v14 + 1;
  }
  else {
    int v15 = 1;
  }
  if (v8 >= 4) {
    unsigned int v16 = ~v7 + a2;
  }
  else {
    unsigned int v16 = (~(_BYTE)v7 + a2);
  }
  bzero(a1, v8);
  if (v8 == 1) {
    *a1 = v16;
  }
  else {
    *(_DWORD *)a1 = v16;
  }
  switch(v13)
  {
    case 1:
      a1[v8] = v15;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v15;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x1C0EF7570);
    case 4:
      *(_DWORD *)&a1[v8] = v15;
      break;
    default:
      return;
  }
}

uint64_t FormatBlock.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlock.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlock.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlock.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBlock.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlock.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatBlock.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlock.options.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatBlock.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlock.selectors.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatBlock.__allocating_init(identifier:children:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = a2;
  swift_beginAccess();
  uint64_t v10[4] = a3;
  swift_beginAccess();
  void v10[5] = a4;
  swift_beginAccess();
  v10[6] = a5;
  return v10;
}

void *FormatBlock.init(identifier:children:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a1;
  v5[3] = a2;
  swift_beginAccess();
  v5[4] = a3;
  swift_beginAccess();
  v5[5] = a4;
  swift_beginAccess();
  v5[6] = a5;
  return v5;
}

uint64_t FormatBlock.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBlock.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0EF7A00(uint64_t a1)
{
  uint64_t result = sub_1C0EF7AD0(&qword_1EA1A8BB0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0EF7A44(void *a1)
{
  a1[1] = sub_1C0EF7AD0(&qword_1EB87D510);
  a1[2] = sub_1C0EF7AD0(&qword_1EB87D508);
  uint64_t result = sub_1C0EF7AD0(&qword_1EA1A8BB8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0EF7AD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatBlock();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0EF7B10(void **a1, void **a2)
{
  return _s8NewsFeed11FormatBlockC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0EF7B1C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EF7B6C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0EF7BBC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBlock(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBlock);
}

uint64_t dispatch thunk of FormatBlock.__allocating_init(identifier:children:options:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C0EF7C38(uint64_t result, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v7 = result;
    size_t v8 = self;
    swift_bridgeObjectRetain();
    uint64_t v15 = v4;
    char v9 = (char *)(v4 + 40);
    while (1)
    {
      uint64_t v10 = *((void *)v9 - 1);
      char v11 = *v9;
      uint64_t v13 = v10;
      char v14 = v11;
      sub_1C0186BB8(v10, v11);
      id v12 = objc_msgSend(v8, sel_mainBundle);
      sub_1C0EF7D50((uint64_t)&v13, v7, a2, v12);
      if (v3) {
        break;
      }
      v9 += 16;

      sub_1C0186BC4(v10, v11);
      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }

    swift_bridgeObjectRelease();
    return sub_1C0186BC4(v10, v11);
  }
  return result;
}

uint64_t sub_1C0EF7D50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  double v4 = *(double *)a1;
  unsigned int v5 = *(unsigned __int8 *)(a1 + 8);
  switch(v5 >> 5)
  {
    case 1u:
      swift_bridgeObjectRetain();
      char v14 = (void *)sub_1C151769C();
      id v15 = objc_msgSend(v14, sel_userInterfaceIdiom);

      if (!sub_1C0452B10((uint64_t)v15, *(uint64_t *)&v4)) {
        return sub_1C0186BC4(*(uint64_t *)&v4, v5);
      }
      sub_1C0020AF0();
      swift_allocError();
      uint64_t v10 = v16;
      uint64_t v17 = (void *)sub_1C151769C();
      id v18 = objc_msgSend(v17, sel_userInterfaceIdiom);

      *(void *)uint64_t v10 = v18;
      v10[1] = v4;
      char v13 = 9;
      goto LABEL_34;
    case 2u:
      swift_bridgeObjectRetain();
      id v19 = objc_msgSend(a4, sel_bundleIdentifier);
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = sub_1C151E62C();
        uint64_t v23 = v22;

        LOBYTE(v20) = sub_1BFF896B4(v21, v23, *(uint64_t *)&v4);
        swift_bridgeObjectRelease();
        if (v20) {
          return sub_1C0186BC4(*(uint64_t *)&v4, v5);
        }
      }
      sub_1C0020AF0();
      swift_allocError();
      uint64_t v10 = v24;
      id v25 = objc_msgSend(a4, sel_bundleIdentifier);
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = sub_1C151E62C();
        uint64_t v29 = v28;
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v29 = 0;
      }
      *(void *)uint64_t v10 = v27;
      *((void *)v10 + 1) = v29;
      char v13 = 6;
      goto LABEL_33;
    case 3u:
      swift_bridgeObjectRetain();
      id v30 = objc_msgSend(a4, sel_bundleIdentifier);
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = sub_1C151E62C();
        uint64_t v34 = v33;

        LOBYTE(v31) = sub_1BFF896B4(v32, v34, *(uint64_t *)&v4);
        swift_bridgeObjectRelease();
        if ((v31 & 1) == 0) {
          return sub_1C0186BC4(*(uint64_t *)&v4, v5);
        }
      }
      sub_1C0020AF0();
      swift_allocError();
      uint64_t v10 = v35;
      id v36 = objc_msgSend(a4, sel_bundleIdentifier);
      if (v36)
      {
        long long v37 = v36;
        uint64_t v38 = sub_1C151E62C();
        uint64_t v40 = v39;
      }
      else
      {
        uint64_t v38 = 0;
        uint64_t v40 = 0;
      }
      *(void *)uint64_t v10 = v38;
      *((void *)v10 + 1) = v40;
      char v13 = 7;
LABEL_33:
      void v10[2] = v4;
      goto LABEL_34;
    case 4u:
      uint64_t result = sub_1C151765C();
      if (v42 >= v4) {
        return result;
      }
      double v43 = v42;
      sub_1C0020AF0();
      swift_allocError();
      uint64_t v10 = v44;
      double *v44 = v43;
      v44[1] = v4;
      char v13 = 4;
      goto LABEL_34;
    case 5u:
      uint64_t result = sub_1C151765C();
      if (v45 <= v4) {
        return result;
      }
      double v46 = v45;
      sub_1C0020AF0();
      swift_allocError();
      uint64_t v10 = v47;
      *long long v47 = v46;
      v47[1] = v4;
      char v13 = 5;
      goto LABEL_34;
    case 6u:
      uint64_t result = sub_1C151765C();
      double v53 = v52;
      if (v5)
      {
        sub_1C15174AC();
        double v64 = v63;
        sub_1C151755C();
        double v66 = (v4 + -1.0) * (v64 + v65);
        uint64_t result = sub_1C15174AC();
        double v68 = v67 + v66;
        if (v53 >= v68) {
          return result;
        }
        sub_1C0020AF0();
        swift_allocError();
        uint64_t v10 = v69;
        double *v69 = v53;
        v69[1] = v68;
        char v13 = 2;
      }
      else
      {
        if (v52 >= v4) {
          return result;
        }
        sub_1C0020AF0();
        swift_allocError();
        uint64_t v10 = v54;
        sub_1C151765C();
        *(void *)uint64_t v10 = v55;
        v10[1] = v4;
        char v13 = 2;
      }
      goto LABEL_34;
    case 7u:
      uint64_t result = sub_1C151765C();
      double v49 = v48;
      if (v5)
      {
        sub_1C15174AC();
        double v57 = v56;
        sub_1C151755C();
        double v59 = (v4 + -1.0) * (v57 + v58);
        uint64_t result = sub_1C15174AC();
        double v61 = v60 + v59;
        if (v61 > v49) {
          return result;
        }
        sub_1C0020AF0();
        swift_allocError();
        uint64_t v10 = v62;
        *uint64_t v62 = v49;
        v62[1] = v61;
        char v13 = 3;
      }
      else
      {
        if (v48 < v4) {
          return result;
        }
        sub_1C0020AF0();
        swift_allocError();
        uint64_t v10 = v50;
        sub_1C151765C();
        *(void *)uint64_t v10 = v51;
        v10[1] = v4;
        char v13 = 3;
      }
      goto LABEL_34;
    default:
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_1C151769C();
      id v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

      if (sub_1C0452B10((uint64_t)v8, *(uint64_t *)&v4)) {
        return sub_1C0186BC4(*(uint64_t *)&v4, v5);
      }
      sub_1C0020AF0();
      swift_allocError();
      uint64_t v10 = v9;
      char v11 = (void *)sub_1C151769C();
      id v12 = objc_msgSend(v11, sel_userInterfaceIdiom);

      *(void *)uint64_t v10 = v12;
      v10[1] = v4;
      char v13 = 8;
LABEL_34:
      *((unsigned char *)v10 + 40) = v13;
      return swift_willThrow();
  }
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.slot.getter()
{
  return *(void *)v0;
}

double FeedGroupExplicitSlotBundleArticleQuota.ratio.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.depthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota() + 24);
  return sub_1C0EF8318(v3, a1);
}

uint64_t type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota()
{
  uint64_t result = qword_1EB862D18;
  if (!qword_1EB862D18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0EF8318(uint64_t a1, uint64_t a2)
{
  sub_1C0EF837C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0EF837C()
{
  if (!qword_1EB8628E0)
  {
    sub_1C1516D9C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8628E0);
    }
  }
}

uint64_t sub_1C0EF83D8()
{
  uint64_t v1 = 0x6F69746172;
  if (*v0 != 1) {
    uint64_t v1 = 0x6172546874706564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1953459315;
  }
}

uint64_t sub_1C0EF8434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0EF99E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0EF845C(uint64_t a1)
{
  unint64_t v2 = sub_1C0EF8DC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0EF8498(uint64_t a1)
{
  unint64_t v2 = sub_1C0EF8DC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.encode(to:)(void *a1)
{
  sub_1C0EF8E1C(0, &qword_1EA1A8BC0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0EF8DC8();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C15207FC();
  if (!v1)
  {
    v9[14] = 1;
    sub_1C15207EC();
    type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
    v9[13] = 2;
    sub_1C1516D9C();
    sub_1C0EF9C10(&qword_1EB8628C8);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  sub_1C0EF837C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EF8E1C(0, &qword_1EA1A8BD0, MEMORY[0x1E4FBBDC0]);
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  MEMORY[0x1F4188790](v10);
  id v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0EF8DC8();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v13 = v18;
    char v22 = 0;
    *id v12 = sub_1C15206DC();
    char v21 = 1;
    sub_1C15206BC();
    v12[1] = v14;
    sub_1C1516D9C();
    char v20 = 2;
    sub_1C0EF9C10(&qword_1EB8628D8);
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v19);
    sub_1C0EF8E80((uint64_t)v6, (uint64_t)v12 + *(int *)(v10 + 24), (uint64_t (*)(void))sub_1C0EF837C);
    sub_1C0EF8E80((uint64_t)v12, v17, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0EF8994@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupExplicitSlotBundleArticleQuota.init(from:)(a1, a2);
}

uint64_t sub_1C0EF89AC(void *a1)
{
  return FeedGroupExplicitSlotBundleArticleQuota.encode(to:)(a1);
}

BOOL _s8NewsFeed0B35GroupExplicitSlotBundleArticleQuotaV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1516D9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EF9B4C();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EF837C();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v32 - v19;
  if (*(void *)a1 != *(void *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  uint64_t v33 = v7;
  uint64_t v21 = v5;
  uint64_t v22 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  sub_1C0EF8318(a1 + *(int *)(v22 + 24), (uint64_t)v20);
  uint64_t v23 = *(int *)(v22 + 24);
  uint64_t v24 = v21;
  sub_1C0EF8318(a2 + v23, (uint64_t)v17);
  uint64_t v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1C0EF8318((uint64_t)v20, (uint64_t)v11);
  sub_1C0EF8318((uint64_t)v17, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v26((uint64_t)v11, 1, v4) == 1)
  {
    sub_1C0EF9BB0((uint64_t)v17, (uint64_t (*)(void))sub_1C0EF837C);
    sub_1C0EF9BB0((uint64_t)v20, (uint64_t (*)(void))sub_1C0EF837C);
    if (v26(v25, 1, v4) == 1)
    {
      sub_1C0EF9BB0((uint64_t)v11, (uint64_t (*)(void))sub_1C0EF837C);
      return 1;
    }
    goto LABEL_8;
  }
  sub_1C0EF8318((uint64_t)v11, (uint64_t)v14);
  if (v26(v25, 1, v4) == 1)
  {
    sub_1C0EF9BB0((uint64_t)v17, (uint64_t (*)(void))sub_1C0EF837C);
    sub_1C0EF9BB0((uint64_t)v20, (uint64_t (*)(void))sub_1C0EF837C);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v4);
LABEL_8:
    sub_1C0EF9BB0((uint64_t)v11, (uint64_t (*)(void))sub_1C0EF9B4C);
    return 0;
  }
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v28 = v33;
  v27(v33, v25, v4);
  sub_1C0EF9C10(&qword_1EB8628D0);
  char v29 = sub_1C151E5CC();
  id v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  v30(v28, v4);
  sub_1C0EF9BB0((uint64_t)v17, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C0EF9BB0((uint64_t)v20, (uint64_t (*)(void))sub_1C0EF837C);
  v30(v14, v4);
  sub_1C0EF9BB0((uint64_t)v11, (uint64_t (*)(void))sub_1C0EF837C);
  return (v29 & 1) != 0;
}

unint64_t sub_1C0EF8DC8()
{
  unint64_t result = qword_1EA1A8BC8;
  if (!qword_1EA1A8BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8BC8);
  }
  return result;
}

void sub_1C0EF8E1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0EF8DC8();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0EF8E80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupExplicitSlotBundleArticleQuota(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    unint64_t v6 = (char *)a1 + v5;
    unint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1C1516D9C();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1C0EF837C();
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for FeedGroupExplicitSlotBundleArticleQuota(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1C1516D9C();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

_OWORD *initializeWithCopy for FeedGroupExplicitSlotBundleArticleQuota(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1516D9C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C0EF837C();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithCopy for FeedGroupExplicitSlotBundleArticleQuota(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1516D9C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1C0EF837C();
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_OWORD *initializeWithTake for FeedGroupExplicitSlotBundleArticleQuota(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1516D9C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C0EF837C();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for FeedGroupExplicitSlotBundleArticleQuota(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1516D9C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1C0EF837C();
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupExplicitSlotBundleArticleQuota(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0EF9648);
}

uint64_t sub_1C0EF9648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  sub_1C0EF837C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for FeedGroupExplicitSlotBundleArticleQuota(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0EF96CC);
}

uint64_t sub_1C0EF96CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  sub_1C0EF837C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

void sub_1C0EF9740()
{
  sub_1C0EF837C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0EF98A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys()
{
  return &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys;
}

unint64_t sub_1C0EF98E4()
{
  unint64_t result = qword_1EA1A8BD8;
  if (!qword_1EA1A8BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8BD8);
  }
  return result;
}

unint64_t sub_1C0EF993C()
{
  unint64_t result = qword_1EA1A8BE0;
  if (!qword_1EA1A8BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8BE0);
  }
  return result;
}

unint64_t sub_1C0EF9994()
{
  unint64_t result = qword_1EA1A8BE8[0];
  if (!qword_1EA1A8BE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A8BE8);
  }
  return result;
}

uint64_t sub_1C0EF99E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953459315 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746172 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6172546874706564 && a2 == 0xEE006D726F66736ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void sub_1C0EF9B4C()
{
  if (!qword_1EA196BC8)
  {
    sub_1C0EF837C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA196BC8);
    }
  }
}

uint64_t sub_1C0EF9BB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0EF9C10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1516D9C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0EF9C54()
{
  return swift_retain();
}

uint64_t FeedCursorReference.serviceContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[2];
  if ((v5 & 0x4000000000000000) != 0)
  {
    uint64_t v12 = *(void *)(v3 + 80);
    uint64_t v11 = *(void *)(v3 + 88);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    *(void *)(a1 + 24) = swift_getAssociatedTypeWitness();
    *(void *)(a1 + 32) = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    swift_retain();
    FeedCursorContainer.serviceContext.getter(v5 & 0xBFFFFFFFFFFFFFFFLL, v12, v11, (uint64_t)boxed_opaque_existential_0);
    goto LABEL_7;
  }
  uint64_t v6 = qword_1EB886330;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v4 + 80);
  uint64_t v8 = *(void *)(v4 + 88);
  uint64_t v9 = swift_retain();
  unint64_t v10 = FeedCursorStoreManager.get<A>(token:)(v9);
  sub_1BFC53D34();
  if ((~v10 & 0xF000000000000007) == 0)
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
LABEL_7:
    return sub_1BFC53D34();
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  *(void *)(a1 + 24) = swift_getAssociatedTypeWitness();
  *(void *)(a1 + 32) = swift_getAssociatedConformanceWitness();
  uint64_t v15 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
  FeedCursorContainer.serviceContext.getter(v10, v7, v8, (uint64_t)v15);
  sub_1BFC53D34();
  return sub_1BFE14324(v10);
}

uint64_t FeedCursorReference.identifier.getter()
{
  uint64_t v0 = sub_1C0EFA07C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FeedCursorReference.__allocating_init(cursorContainer:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  FeedCursorReference.init(cursorContainer:)(a1);
  return v2;
}

uint64_t FeedCursorReference.deinit()
{
  sub_1BFC53D34();
  return v0;
}

uint64_t sub_1C0EFA034()
{
  uint64_t v0 = sub_1C0EFA07C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C0EFA070(uint64_t *a1, uint64_t *a2)
{
  return static FeedCursorReference.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0EFA07C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if ((v1 & 0x4000000000000000) != 0) {
    return sub_1BFE16970(v1 & 0xBFFFFFFFFFFFFFFFLL);
  }
  else {
    return *(void *)(v1 + 16);
  }
}

uint64_t method lookup function for FeedCursorReference(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursorReference);
}

uint64_t dispatch thunk of FeedCursorReference.__allocating_init(cursorContainer:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void *sub_1C0EFA100(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_1C0EF9C54();
  *a1 = v3;
  return a1;
}

uint64_t sub_1C0EFA134()
{
  return sub_1BFC53D34();
}

void *sub_1C0EFA13C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_1C0EF9C54();
  *a1 = v3;
  sub_1BFC53D34();
  return a1;
}

void *sub_1C0EFA178(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1BFC53D34();
  return a1;
}

uint64_t sub_1C0EFA1AC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 63);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) & 1 | (2 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x3F;
  if (v3 >= 0x3E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1C0EFA204(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(void *)uint64_t result = a2 - 63;
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x1F | (32 * (-a2 & 0x3F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0x7000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C0EFA258(void *a1)
{
  return (*a1 >> 62) & 1;
}

void *sub_1C0EFA264(void *result)
{
  *result &= ~0x4000000000000000uLL;
  return result;
}

unint64_t *sub_1C0EFA274(unint64_t *result, char a2)
{
  *uint64_t result = *result & 0x8FFFFFFFFFFFFFF8 | ((unint64_t)(a2 & 1) << 62);
  return result;
}

uint64_t type metadata accessor for FeedCursorReference.Reference()
{
  return __swift_instantiateGenericMetadata();
}

void FormatVideoPlayerNodeBinding.bind(binder:context:)()
{
}

uint64_t sub_1C0EFA2C8(uint64_t result)
{
  if (*(unsigned __int8 *)(v1 + 24) >= 2u)
  {
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v5 = *(void *)v1;
    v8[0] = v5;
    v8[1] = v4;
    _OWORD v8[2] = v3;
    char v7 = 6;
    sub_1C00F6DB8(v5, v4, v3, 2);
    uint64_t result = sub_1C12ECBDC(v8, &v7);
    if (!v2)
    {
      uint64_t v6 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1C0EFA390(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v55 = (char *)a2;
  uint64_t v56 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v56);
  char v54 = (uint64_t *)((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0257DAC(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v51 - v5;
  uint64_t v7 = type metadata accessor for FormatOption();
  uint64_t v57 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0257DAC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v9 - 8);
  double v52 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v51 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v58 = *(void *)(v17 - 8);
  uint64_t v59 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)v2;
  if (*(unsigned char *)(v2 + 24))
  {
    if (*(unsigned char *)(v2 + 24) == 1)
    {
      uint64_t v27 = v60;
      sub_1C103C4A4(v63, *(void *)v2, (uint64_t)v13);
      if (!v27)
      {
        uint64_t v29 = v58;
        uint64_t v28 = v59;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v13, 1, v59) == 1)
        {
          sub_1C0EFB204((uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          sub_1BFE7E51C();
          swift_allocError();
          *id v30 = 0xD00000000000002BLL;
          v30[1] = 0x80000001C162EB40;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        else
        {
          double v49 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
          v49(v19, v13, v28);
          v49(v55, v19, v28);
        }
      }
    }
    else
    {
      uint64_t v37 = *(void *)(v2 + 8);
      uint64_t v38 = *(void *)(v2 + 16);
      uint64_t v39 = v63;
      FormatOptionCollection.subscript.getter(v26, v37, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v6, 1, v7) == 1)
      {
        sub_1C0EFB204((uint64_t)v6, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        uint64_t v40 = (uint64_t)v54;
        *char v54 = v26;
        *(void *)(v40 + 8) = v37;
        swift_storeEnumTagMultiPayload();
        char v41 = *(unsigned char *)(v39 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
        sub_1BFE7E51C();
        double v43 = (void *)swift_allocError();
        if (v41)
        {
          sub_1C04A8F1C(v40, v42);
          swift_bridgeObjectRetain();
          char v44 = v52;
          sub_1C1515F7C();
          uint64_t v46 = v58;
          uint64_t v45 = v59;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v44, 1, v59) == 1)
          {
            __break(1u);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v55, v44, v45);
            sub_1BFF5B5EC(v40, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
          }
        }
        else
        {
          sub_1C04A8F1C(v40, v42);
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BFF5B5EC(v40, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        }
      }
      else
      {
        uint64_t v47 = v53;
        sub_1C00AB068((uint64_t)v6, v53);
        swift_retain();
        uint64_t v48 = v60;
        sub_1BFF28A20(v39, &v61);
        swift_release();
        if (!v48)
        {
          sub_1C001CFA0(v61, v26, v37, v38, v39, (uint64_t)v55);
          swift_release();
        }
        sub_1BFF5B5EC(v47, (uint64_t (*)(void))type metadata accessor for FormatOption);
      }
    }
  }
  else
  {
    uint64_t v31 = v60;
    sub_1BFF23670(*(void *)(v63 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v25);
    if (!v31)
    {
      LOBYTE(v61) = v26;
      sub_1C0DEC80C((uint64_t)v25, (uint64_t)v16);
      uint64_t v33 = v58;
      uint64_t v32 = v59;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v16, 1, v59) == 1)
      {
        sub_1C0EFB204((uint64_t)v16, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        sub_1BFE7E51C();
        swift_allocError();
        int v35 = v34;
        unint64_t v61 = 0;
        unint64_t v62 = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        unint64_t v36 = v62;
        *int v35 = v61;
        v35[1] = v36;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1BFF5B5EC((uint64_t)v25, type metadata accessor for FeedHeadline);
      }
      else
      {
        sub_1BFF5B5EC((uint64_t)v25, type metadata accessor for FeedHeadline);
        char v50 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
        v50(v22, v16, v32);
        v50(v55, v22, v32);
      }
    }
  }
}

uint64_t sub_1C0EFAB84(void *a1)
{
  return FormatVideoPlayerNodeBinding.encode(to:)(a1);
}

uint64_t sub_1C0EFABA0(uint64_t a1)
{
  return sub_1C0EFA2C8(a1);
}

void sub_1C0EFABB8()
{
}

BOOL _s8NewsFeed28FormatVideoPlayerNodeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24))
    {
      sub_1C00F6E04(*(void *)a1, v3, v4, 0);
      sub_1C00F6E04(v6, v7, v8, 0);
      return v6 == v2;
    }
    goto LABEL_19;
  }
  if (v5 == 1)
  {
    if (v9 == 1)
    {
      sub_1C00F6E04(*(void *)a1, v3, v4, 1);
      sub_1C00F6E04(v6, v7, v8, 1);
      if ((v2 & 0x80) != 0)
      {
        if ((char)v6 < 0 && ((v6 ^ v2) & 1) == 0) {
          return 1;
        }
      }
      else if (((char)v6 & 0x80000000) == 0 && v6 == v2)
      {
        return 1;
      }
      return 0;
    }
    goto LABEL_19;
  }
  if (v9 != 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_19:
    sub_1C00F6DB8(v6, v7, v8, v9);
    sub_1C00F6E04(v2, v3, v4, v5);
    uint64_t v13 = v6;
    uint64_t v14 = v7;
    uint64_t v15 = v8;
    char v16 = v9;
LABEL_20:
    sub_1C00F6E04(v13, v14, v15, v16);
    return 0;
  }
  BOOL v11 = v2 == v6 && v3 == v7;
  if (!v11 && (sub_1C1520A9C() & 1) == 0)
  {
    sub_1C00F6DB8(v6, v7, v8, 2);
    sub_1C00F6DB8(v2, v3, v4, 2);
    sub_1C00F6E04(v2, v3, v4, 2);
    uint64_t v13 = v6;
    uint64_t v14 = v7;
    uint64_t v15 = v8;
    char v16 = 2;
    goto LABEL_20;
  }
  sub_1C00F6DB8(v6, v7, v8, 2);
  sub_1C00F6DB8(v2, v3, v4, 2);
  sub_1C00F6DB8(v6, v7, v8, 2);
  sub_1C00F6DB8(v2, v3, v4, 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00E3FD8(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C00F6E04(v2, v3, v4, 2);
  sub_1C00F6E04(v6, v7, v8, 2);
  sub_1C00F6E04(v6, v7, v8, 2);
  sub_1C00F6E04(v2, v3, v4, 2);
  return (v12 & 1) != 0;
}

void sub_1C0EFAE70()
{
  uint64_t v2 = v1;
  sub_1C0257DAC(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v3 - 8);
  int v5 = (char *)&v11[-1] - v4;
  if (*(unsigned __int8 *)(v0 + 24) >= 2u)
  {
    uint64_t v7 = *(void *)(v0 + 8);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v8 = *(void *)v0;
    v11[0] = *(void *)v0;
    v11[1] = v7;
    uint64_t v11[2] = v6;
    char v12 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C12ECBDC(v11, &v12);
    if (!v2)
    {
      sub_1C0EC63F8(v8, v7, v9, 1, (uint64_t)v5);
      sub_1C0EFB204((uint64_t)v5, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1C0EFAFB8(uint64_t a1)
{
  unint64_t result = sub_1C0EFAFE0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0EFAFE0()
{
  unint64_t result = qword_1EA1A8C70;
  if (!qword_1EA1A8C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8C70);
  }
  return result;
}

unint64_t sub_1C0EFB034(void *a1)
{
  a1[1] = sub_1BFC9E924();
  a1[2] = sub_1C08EADC4();
  unint64_t result = sub_1C0EFB06C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0EFB06C()
{
  unint64_t result = qword_1EA1A8C78;
  if (!qword_1EA1A8C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8C78);
  }
  return result;
}

uint64_t destroy for FormatVideoPlayerNodeBinding(uint64_t a1)
{
  return sub_1C00F6E04(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatVideoPlayerNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C00F6DB8(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C00F6DB8(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C00F6E04(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C00F6E04(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerNodeBinding()
{
  return &type metadata for FormatVideoPlayerNodeBinding;
}

uint64_t sub_1C0EFB204(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0257DAC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t PublisherLogoProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PublisherLogoProcessor.init()()
{
  return v0;
}

uint64_t PublisherLogoProcessor.deinit()
{
  return v0;
}

uint64_t PublisherLogoProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed22PublisherLogoProcessorC7processySo7UIImageCSg5TeaUI25ProcessedImageRequestType_pF_0(uint64_t a1)
{
  sub_1BFC66384(a1, (uint64_t)v16);
  sub_1BFD05974();
  type metadata accessor for PublisherLogoProcessorRequest(0);
  if (!swift_dynamicCast()) {
    return 0;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v15 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_assetHandle), *(void *)(v15 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_assetHandle + 24));
  uint64_t result = sub_1C151A71C();
  if (v2)
  {
    id v3 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    uint64_t v4 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v3, sel_initWithContentsOfFile_, v4);

    if (v5)
    {
      if (*(unsigned char *)(v15 + 64) == 1 && (*(unsigned char *)(v15 + 65) & 1) == 0)
      {
        id v6 = objc_msgSend(v5, sel_imageWithRenderingMode_, 2);

        uint64_t v7 = self;
        id v8 = v6;
        id v9 = objc_msgSend(v7, sel_whiteColor);
        id v5 = (id)sub_1C151FAEC();
      }
      double v11 = *(double *)(v15 + 40);
      double v10 = *(double *)(v15 + 48);
      objc_msgSend(v5, sel_size);
      if (v10 >= v12 && (objc_msgSend(v5, sel_size), v11 >= v13))
      {
        swift_release();
        return (uint64_t)v5;
      }
      else
      {
        uint64_t v14 = sub_1C151FA9C();

        swift_release();
      }
      return v14;
    }
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

id _s8NewsFeed22PublisherLogoProcessorC7process_14imageFromCacheSo7UIImageC5TeaUI25ProcessedImageRequestType_p_AGtF_0(uint64_t a1, void *a2)
{
  sub_1BFC66384(a1, (uint64_t)v6);
  sub_1BFD05974();
  type metadata accessor for PublisherLogoProcessorRequest(0);
  if (swift_dynamicCast())
  {
    if (*(unsigned char *)(v5 + 64) == 1)
    {
      id v2 = objc_msgSend(a2, sel_imageWithRenderingMode_, 2);
      swift_release();
      return v2;
    }
    swift_release();
  }
  return a2;
}

uint64_t method lookup function for PublisherLogoProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PublisherLogoProcessor);
}

uint64_t dispatch thunk of PublisherLogoProcessor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FormatLayoutViewRouterType.route(to:sourceView:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1C0EFB5B0(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v11 = *a4;
  uint64_t v10 = a4[1];
  uint64_t v13 = a4[2];
  uint64_t v12 = a4[3];
  sub_1C0EFDCB8(v6 + 40, (uint64_t)&v18, &qword_1EB88C2D0, (void (*)(uint64_t))sub_1C0EFDAE8);
  if (v20)
  {
    uint64_t v17 = v13;
    uint64_t v24 = v12;
    sub_1BFC773DC(&v18, (uint64_t)v21);
    uint64_t v14 = v22;
    uint64_t v15 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(v15 + 8))(a1, a2, a3, v14, v15);
    if (v5)
    {
      *(void *)&long long v18 = v11;
      *((void *)&v18 + 1) = v10;
      uint64_t v19 = v17;
      uint64_t v20 = v24;
      sub_1C0EFB730(a1, a2, (uint64_t *)&v18);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    sub_1C0EFDC5C((uint64_t)&v18, &qword_1EB88C2D0, (void (*)(uint64_t))sub_1C0EFDAE8);
    v21[0] = v11;
    v21[1] = v10;
    v21[2] = v13;
    uint64_t v22 = v12;
    return sub_1C0EFB730(a1, a2, v21);
  }
}

uint64_t sub_1C0EFB730(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v20 = a2;
  uint64_t v5 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for FormatLayoutViewRoute();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  uint64_t v16 = a3[2];
  uint64_t v17 = a3[3];
  sub_1C0EFDB40(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatLayoutViewRoute);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C049A100();
    uint64_t v10 = &v13[*(int *)(v18 + 48)];
    sub_1BFEE3420((uint64_t)v13, (uint64_t)v7, type metadata accessor for FeedItem);
    uint64_t v21 = v14;
    uint64_t v22 = v15;
    uint64_t v23 = v16;
    uint64_t v24 = v17;
    sub_1C0EFB94C((uint64_t)v7, v20, &v21);
    sub_1C0EFDBA8((uint64_t)v7, type metadata accessor for FeedItem);
  }
  else
  {
    sub_1BFEE3420((uint64_t)v13, (uint64_t)v10, type metadata accessor for FeedItem);
    uint64_t v21 = v14;
    uint64_t v22 = v15;
    uint64_t v23 = v16;
    uint64_t v24 = v17;
    sub_1C0EFB94C((uint64_t)v10, v20, &v21);
  }
  return sub_1C0EFDBA8((uint64_t)v10, type metadata accessor for FeedItem);
}

uint64_t sub_1C0EFB94C(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v243 = a2;
  uint64_t v249 = a1;
  uint64_t v215 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v213 = *(void *)(v215 - 8);
  MEMORY[0x1F4188790](v215);
  uint64_t v210 = (unint64_t *)((char *)&v204 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0EFDC08(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v214 = (uint64_t)&v204 - v6;
  sub_1C0EFDC08(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v224 = (uint64_t)&v204 - v8;
  uint64_t v240 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v240);
  unint64_t v241 = (char *)&v204 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EFDC08(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v238 = (uint64_t)&v204 - v11;
  uint64_t v12 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v234 = *(void *)(v12 - 8);
  uint64_t v235 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v222 = (uint64_t)&v204 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v223 = (uint64_t)&v204 - v15;
  uint64_t v231 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v231);
  uint64_t v239 = (uint64_t)&v204 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v247 = *(void *)(v17 - 8);
  uint64_t v248 = v17;
  MEMORY[0x1F4188790](v17);
  int64_t v207 = (char *)&v204 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v209 = (char *)&v204 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v205 = (char *)&v204 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v220 = (char *)&v204 - v24;
  MEMORY[0x1F4188790](v25);
  int64_t v221 = (char *)&v204 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v237 = (char *)&v204 - v28;
  MEMORY[0x1F4188790](v29);
  long long v236 = (char *)&v204 - v30;
  sub_1C0EFDC08(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v229 = (char *)&v204 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  v232 = (char *)&v204 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v230 = (char *)&v204 - v36;
  MEMORY[0x1F4188790](v37);
  long long v233 = (char *)&v204 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v206 = (char *)&v204 - v40;
  MEMORY[0x1F4188790](v41);
  int64_t v208 = (char *)&v204 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v204 = (char *)&v204 - v44;
  MEMORY[0x1F4188790](v45);
  v211 = (char *)&v204 - v46;
  MEMORY[0x1F4188790](v47);
  int64_t v212 = (char *)&v204 - v48;
  MEMORY[0x1F4188790](v49);
  long long v218 = (char *)&v204 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v204 - v52;
  MEMORY[0x1F4188790](v54);
  long long v219 = (char *)&v204 - v55;
  MEMORY[0x1F4188790](v56);
  unint64_t v226 = (char *)&v204 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v228 = (char *)&v204 - v59;
  MEMORY[0x1F4188790](v60);
  long long v227 = (char *)&v204 - v61;
  MEMORY[0x1F4188790](v62);
  uint64_t v225 = (char *)&v204 - v63;
  MEMORY[0x1F4188790](v64);
  double v66 = (char *)&v204 - v65;
  MEMORY[0x1F4188790](v67);
  uint64_t v69 = (char *)&v204 - v68;
  uint64_t v70 = type metadata accessor for FeedHeadline(0);
  uint64_t v217 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v216 = (uint64_t)&v204 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v72);
  uint64_t v74 = (id *)((char *)&v204 - v73);
  uint64_t v75 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v75);
  uint64_t v77 = (char *)&v204 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = a3[1];
  uint64_t v244 = *a3;
  uint64_t v245 = v78;
  uint64_t v79 = a3[2];
  uint64_t v80 = a3[3];
  uint64_t v246 = v79;
  sub_1C0EFDB40(v249, (uint64_t)v77, type metadata accessor for FeedItem);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v86 = *((void *)v77 + 9);
      unint64_t v84 = *((void *)v77 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v85 = v86;
      return sub_1BFEEFC20(v85, v84);
    case 2:
    case 6:
    case 9:
    case 10:
    case 15:
      uint64_t v82 = type metadata accessor for FeedItem;
      return sub_1C0EFDBA8((uint64_t)v77, v82);
    case 3:
      uint64_t v87 = v80;
      sub_1BFEE3420((uint64_t)v77, (uint64_t)v74, type metadata accessor for FeedHeadline);
      id v88 = objc_msgSend(v74[5], sel_identifier);
      if (!v88)
      {
        sub_1C151E62C();
        id v88 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v89 = objc_msgSend(self, sel_nss_NewsURLForArticleID_, v88);

      if (v89)
      {
        sub_1C1515F1C();

        uint64_t v90 = 0;
      }
      else
      {
        uint64_t v90 = 1;
      }
      uint64_t v164 = v243;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v247 + 56))(v66, v90, 1, v248);
      sub_1C002F694((uint64_t)v66, (uint64_t)v69);
      sub_1C0EFD64C((uint64_t)v69, v242, v164, v244, v245, v246, v87);
      sub_1C0EFDC5C((uint64_t)v69, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      return sub_1C0EFDBA8((uint64_t)v74, type metadata accessor for FeedHeadline);
    case 4:
      uint64_t v91 = (uint64_t)v77;
      uint64_t v77 = v241;
      sub_1BFEE3420(v91, (uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v92 = v240;
      sub_1C0EFDCB8((uint64_t)&v77[*(int *)(v240 + 36)], (uint64_t)v53, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v94 = v247;
      uint64_t v93 = v248;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(v53, 1, v248) != 1)
      {
        uint64_t v155 = v220;
        (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v220, v53, v93);
        uint64_t v156 = (uint64_t)v218;
        (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v218, v155, v93);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v156, 0, 1, v93);
        sub_1C0EFD64C(v156, v242, v243, v244, v245, v246, v80);
        sub_1C0EFDC5C(v156, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v155, v93);
        goto LABEL_37;
      }
      sub_1C0EFDC5C((uint64_t)v53, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v95 = (uint64_t)&v77[*(int *)(v92 + 48)];
      uint64_t v96 = v92;
      uint64_t v97 = v224;
      sub_1C0EFDCB8(v95, v224, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v217 + 48))(v97, 1, v70) != 1)
      {
        uint64_t v167 = v80;
        sub_1BFEE3420(v97, v216, type metadata accessor for FeedHeadline);
        uint64_t v168 = self;
        swift_bridgeObjectRetain();
        uint64_t v169 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v170 = objc_msgSend(v168, sel_nss_NewsURLForArticleID_, v169);

        if (v170)
        {
          uint64_t v171 = (uint64_t)v211;
          sub_1C1515F1C();

          uint64_t v172 = 0;
          uint64_t v174 = v242;
          uint64_t v173 = v243;
          uint64_t v175 = v167;
        }
        else
        {
          uint64_t v172 = 1;
          uint64_t v174 = v242;
          uint64_t v173 = v243;
          uint64_t v175 = v167;
          uint64_t v171 = (uint64_t)v211;
        }
        uint64_t v176 = (uint64_t)v212;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v171, v172, 1, v93);
        sub_1C002F694(v171, v176);
        sub_1C0EFD64C(v176, v174, v173, v244, v245, v246, v175);
        sub_1C0EFDC5C(v176, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        sub_1C0EFDBA8(v216, type metadata accessor for FeedHeadline);
        return sub_1C0EFDBA8((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      }
      sub_1C0EFDC5C(v97, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      uint64_t v98 = (uint64_t)&v77[*(int *)(v96 + 52)];
      uint64_t v99 = v214;
      sub_1C0EFDCB8(v98, v214, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48))(v99, 1, v215) == 1)
      {
        sub_1C0EFDC5C(v99, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_37;
      }
      int64_t v177 = v210;
      sub_1C0EFDB40(v99, (uint64_t)v210, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C0EFDBA8((uint64_t)v177, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1C0EFDBA8(v99, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_37:
        uint64_t v82 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
        return sub_1C0EFDBA8((uint64_t)v77, v82);
      }
      break;
    case 5:
      long long v100 = *((_OWORD *)v77 + 7);
      long long v256 = *((_OWORD *)v77 + 6);
      v257[0] = v100;
      *(_OWORD *)((char *)v257 + 9) = *(_OWORD *)(v77 + 121);
      long long v101 = *((_OWORD *)v77 + 1);
      long long v250 = *(_OWORD *)v77;
      long long v251 = v101;
      long long v102 = *((_OWORD *)v77 + 3);
      long long v252 = *((_OWORD *)v77 + 2);
      long long v253 = v102;
      long long v103 = *((_OWORD *)v77 + 5);
      long long v254 = *((_OWORD *)v77 + 4);
      long long v255 = v103;
      id v104 = objc_msgSend((id)v250, sel_identifier);
      if (!v104)
      {
        sub_1C151E62C();
        id v104 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v105 = objc_msgSend(self, sel_nss_NewsURLForIssueID_, v104);

      uint64_t v106 = (uint64_t)v226;
      if (v105)
      {
        sub_1C1515F1C();

        uint64_t v107 = 0;
      }
      else
      {
        uint64_t v107 = 1;
      }
      uint64_t v165 = (uint64_t)v228;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 56))(v106, v107, 1, v248);
      sub_1C002F694(v106, v165);
      sub_1C0EFD64C(v165, v242, v243, v244, v245, v246, v80);
      sub_1C0EFDC5C(v165, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      return sub_1C01880A4((uint64_t)&v250);
    case 7:
      long long v108 = *((_OWORD *)v77 + 7);
      long long v256 = *((_OWORD *)v77 + 6);
      v257[0] = v108;
      v257[1] = *((_OWORD *)v77 + 8);
      LOBYTE(v258) = v77[144];
      long long v109 = *((_OWORD *)v77 + 3);
      long long v252 = *((_OWORD *)v77 + 2);
      long long v253 = v109;
      long long v110 = *((_OWORD *)v77 + 5);
      long long v254 = *((_OWORD *)v77 + 4);
      long long v255 = v110;
      long long v111 = *((_OWORD *)v77 + 1);
      long long v250 = *(_OWORD *)v77;
      long long v251 = v111;
      id v112 = objc_msgSend((id)v111, sel_identifier);
      if (!v112)
      {
        sub_1C151E62C();
        id v112 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v113 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v112);

      unint64_t v114 = v236;
      sub_1C1515F1C();

      uint64_t v115 = v247;
      uint64_t v116 = v248;
      uint64_t v117 = (uint64_t)v225;
      (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v225, v114, v248);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56))(v117, 0, 1, v116);
      sub_1C0EFD64C(v117, v242, v243, v244, v245, v246, v80);
      sub_1C0EFDC5C(v117, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      (*(void (**)(char *, uint64_t))(v115 + 8))(v114, v116);
      return sub_1BFEA4290((uint64_t)&v250);
    case 8:
      uint64_t v118 = v239;
      sub_1BFEE3420((uint64_t)v77, v239, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v119 = *(int *)(v231 + 20);
      uint64_t v120 = v118 + v119 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v121 = v238;
      sub_1C0EFDCB8(v120, v238, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48))(v121, 1, v235) == 1)
      {
        sub_1C0EFDBA8(v118, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
        return sub_1C0EFDC5C(v121, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
      }
      else
      {
        uint64_t v157 = v223;
        sub_1BFEE3420(v121, v223, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
        uint64_t v158 = v222;
        sub_1C0EFDB40(v157, v222, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
        uint64_t v159 = v247;
        uint64_t v160 = v221;
        uint64_t v161 = v158;
        uint64_t v162 = v248;
        (*(void (**)(char *, uint64_t, uint64_t))(v247 + 32))(v221, v161, v248);
        uint64_t v163 = (uint64_t)v219;
        (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v219, v160, v162);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v159 + 56))(v163, 0, 1, v162);
        sub_1C0EFD64C(v163, v242, v243, v244, v245, v246, v80);
        sub_1C0EFDC5C(v163, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        (*(void (**)(char *, uint64_t))(v159 + 8))(v160, v162);
        sub_1C0EFDBA8(v157, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
        return sub_1C0EFDBA8(v118, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      }
    case 11:
      return swift_release();
    case 12:
      uint64_t v122 = v80;
      id v123 = objc_msgSend(*((id *)v77 + 2), sel_identifier);
      if (!v123)
      {
        sub_1C151E62C();
        id v123 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v124 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v123);

      uint64_t v125 = v237;
      sub_1C1515F1C();

      uint64_t v126 = v247;
      uint64_t v127 = v248;
      uint64_t v128 = (uint64_t)v227;
      (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v227, v125, v248);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v128, 0, 1, v127);
      sub_1C0EFD64C(v128, v242, v243, v244, v245, v246, v122);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0EFDC5C(v128, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v125, v127);
    case 13:
      long long v129 = *((_OWORD *)v77 + 11);
      long long v259 = *((_OWORD *)v77 + 10);
      long long v260 = v129;
      long long v261 = *((_OWORD *)v77 + 12);
      long long v130 = *((_OWORD *)v77 + 7);
      long long v256 = *((_OWORD *)v77 + 6);
      v257[0] = v130;
      long long v131 = *((_OWORD *)v77 + 9);
      v257[1] = *((_OWORD *)v77 + 8);
      long long v258 = v131;
      long long v132 = *((_OWORD *)v77 + 3);
      long long v252 = *((_OWORD *)v77 + 2);
      long long v253 = v132;
      long long v133 = *((_OWORD *)v77 + 5);
      long long v254 = *((_OWORD *)v77 + 4);
      long long v255 = v133;
      long long v134 = *((_OWORD *)v77 + 1);
      long long v250 = *(_OWORD *)v77;
      long long v251 = v134;
      id v135 = objc_msgSend(*((id *)&v132 + 1), sel_identifier);
      if (!v135)
      {
        sub_1C151E62C();
        id v135 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v136 = objc_msgSend(self, sel_nss_NewsURLForPuzzleID_, v135);

      uint64_t v137 = (uint64_t)v230;
      if (v136)
      {
        sub_1C1515F1C();

        uint64_t v138 = 0;
      }
      else
      {
        uint64_t v138 = 1;
      }
      uint64_t v166 = (uint64_t)v233;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 56))(v137, v138, 1, v248);
      sub_1C002F694(v137, v166);
      sub_1C0EFD64C(v166, v242, v243, v244, v245, v246, v80);
      sub_1C0EFDC5C(v166, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      return sub_1C01F0A74((uint64_t)&v250);
    case 14:
      uint64_t v139 = v80;
      uint64_t v141 = *((void *)v77 + 3);
      unint64_t v140 = *((void *)v77 + 4);
      id v142 = objc_msgSend(*((id *)v77 + 7), sel_identifier);
      if (!v142)
      {
        sub_1C151E62C();
        id v142 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v143 = objc_msgSend(self, sel_nss_NewsURLForPuzzleTypeID_, v142);

      if (v143)
      {
        uint64_t v144 = v229;
        sub_1C1515F1C();

        uint64_t v145 = (uint64_t)v144;
        uint64_t v146 = 0;
        uint64_t v147 = (uint64_t)v232;
      }
      else
      {
        uint64_t v146 = 1;
        uint64_t v147 = (uint64_t)v232;
        uint64_t v145 = (uint64_t)v229;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 56))(v145, v146, 1, v248);
      sub_1C002F694(v145, v147);
      sub_1C0EFD64C(v147, v242, v243, v244, v245, v246, v139);
      sub_1C0EFDC5C(v147, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      sub_1BFEEFC20(v141, v140);
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    case 16:
      long long v148 = *((_OWORD *)v77 + 13);
      long long v261 = *((_OWORD *)v77 + 12);
      long long v262 = v148;
      long long v263 = *((_OWORD *)v77 + 14);
      uint64_t v264 = *((void *)v77 + 30);
      long long v149 = *((_OWORD *)v77 + 9);
      v257[1] = *((_OWORD *)v77 + 8);
      long long v258 = v149;
      long long v150 = *((_OWORD *)v77 + 11);
      long long v259 = *((_OWORD *)v77 + 10);
      long long v260 = v150;
      long long v151 = *((_OWORD *)v77 + 5);
      long long v254 = *((_OWORD *)v77 + 4);
      long long v255 = v151;
      long long v152 = *((_OWORD *)v77 + 7);
      long long v256 = *((_OWORD *)v77 + 6);
      v257[0] = v152;
      long long v153 = *((_OWORD *)v77 + 1);
      long long v250 = *(_OWORD *)v77;
      long long v251 = v153;
      long long v154 = *((_OWORD *)v77 + 3);
      long long v252 = *((_OWORD *)v77 + 2);
      long long v253 = v154;
      return sub_1C01F0AC8((uint64_t)&v250);
    case 17:
      return result;
    default:
      uint64_t v83 = *((void *)v77 + 5);
      unint64_t v84 = *((void *)v77 + 6);
      swift_bridgeObjectRelease();
      uint64_t v85 = v83;
      return sub_1BFEEFC20(v85, v84);
  }
  unint64_t v178 = *v177;
  sub_1C0EFDBA8(v99, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  switch(v178 >> 61)
  {
    case 1uLL:
      uint64_t v249 = v80;
      uint64_t v187 = *(void *)((v178 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      if (*(void *)(v187 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8)
        && (int64_t v188 = *(void **)(v187 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16)) != 0
        || (int64_t v188 = *(void **)(v187 + 56)) != 0)
      {
        swift_unknownObjectRetain();
        swift_retain();
        id v189 = objc_msgSend(v188, sel_identifier);
        if (!v189)
        {
          sub_1C151E62C();
          id v189 = (id)sub_1C151E5EC();
          swift_bridgeObjectRelease();
        }
        id v190 = objc_msgSend(self, sel_nss_NewsURLForTagID_feedConfiguration_, v189, 4);

        uint64_t v191 = v209;
        sub_1C1515F1C();

        unint64_t v192 = v191;
        uint64_t v193 = (uint64_t)v208;
        uint64_t v194 = v191;
        uint64_t v195 = v248;
        (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v208, v194, v248);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v193, 0, 1, v195);
        sub_1C0EFD64C(v193, v242, v243, v244, v245, v246, v249);
        swift_unknownObjectRelease();
        swift_release();
        sub_1C0EFDC5C(v193, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v192, v195);
      }
      sub_1C0EFDBA8((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return swift_release();
    case 2uLL:
      uint64_t v249 = v80;
      swift_retain();
      int64_t v196 = (void *)SportsBracketGroupDataVisualization.routeTag.getter();
      if (!v196) {
        goto LABEL_75;
      }
      id v197 = objc_msgSend(v196, sel_identifier);
      if (!v197)
      {
        sub_1C151E62C();
        id v197 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v198 = objc_msgSend(self, sel_nss_NewsURLForTagID_feedConfiguration_, v197, 7);

      int64_t v199 = v207;
      sub_1C1515F1C();

      uint64_t v200 = v199;
      uint64_t v201 = (uint64_t)v206;
      uint64_t v202 = v199;
      uint64_t v203 = v248;
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v206, v202, v248);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v201, 0, 1, v203);
      sub_1C0EFD64C(v201, v242, v243, v244, v245, v246, v249);
      swift_unknownObjectRelease();
      swift_release();
      sub_1C0EFDC5C(v201, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v200, v203);
      sub_1C0EFDBA8((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return swift_release();
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
      swift_release();
      goto LABEL_37;
    default:
      long long v179 = *(void **)(*(void *)(v178 + 16) + 56);
      if (!v179)
      {
        swift_retain();
LABEL_75:
        sub_1C0EFDBA8((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        swift_release();
        return swift_release();
      }
      swift_retain();
      if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_isRouteable) & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_75;
      }
      uint64_t v249 = v80;
      id v180 = objc_msgSend(v179, sel_identifier);
      if (!v180)
      {
        sub_1C151E62C();
        id v180 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v181 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v180);

      unint64_t v182 = v205;
      sub_1C1515F1C();

      uint64_t v183 = v182;
      uint64_t v184 = (uint64_t)v204;
      uint64_t v185 = v182;
      uint64_t v186 = v248;
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v204, v185, v248);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v184, 0, 1, v186);
      sub_1C0EFD64C(v184, v242, v243, v244, v245, v246, v249);
      swift_unknownObjectRelease();
      swift_release();
      sub_1C0EFDC5C(v184, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v183, v186);
      sub_1C0EFDBA8((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return swift_release();
  }
}

uint64_t sub_1C0EFD64C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v31 = a2;
  uint64_t v32 = a5;
  uint64_t v26 = a4;
  id v30 = a3;
  uint64_t v8 = sub_1C151BBCC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C0EFDC08(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v33 = (uint64_t)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EFDCB8(a1, (uint64_t)v16, (unint64_t *)&qword_1EB8948A0, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_1C0EFDC5C((uint64_t)v16, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v29, *MEMORY[0x1E4FACB48], v8);
  uint64_t v22 = *(void *)(v31 + 32);
  uint64_t v35 = sub_1C1517D0C();
  unint64_t v36 = sub_1C0EFDD24();
  uint64_t v34 = v22;
  long long v37 = 0u;
  long long v38 = 0u;
  char v39 = 1;
  sub_1C151B75C();
  swift_allocObject();
  swift_retain();
  id v23 = v30;
  sub_1C151B73C();
  if (qword_1EB87B130 != -1) {
    swift_once();
  }
  uint64_t v24 = v33;
  if (v32) {
    sub_1C0C5D594((uint64_t)v20, v26, v32, v27, v28, v33);
  }
  else {
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v33, v20, v17);
  }
  swift_getObjectType();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
  swift_retain();
  sub_1C151AD8C();
  swift_release_n();
  sub_1C0EFDC5C(v24, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_1C0EFDA84()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1C0EFDC5C(v0 + 40, &qword_1EB88C2D0, (void (*)(uint64_t))sub_1C0EFDAE8);
  return swift_deallocClassInstance();
}

unint64_t sub_1C0EFDAE8()
{
  unint64_t result = qword_1EB88C2C8;
  if (!qword_1EB88C2C8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB88C2C8);
  }
  return result;
}

uint64_t sub_1C0EFDB40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0EFDBA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0EFDC08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0EFDC5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0EFDC08(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0EFDCB8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C0EFDC08(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C0EFDD24()
{
  unint64_t result = qword_1EB871390;
  if (!qword_1EB871390)
  {
    sub_1C1517D0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871390);
  }
  return result;
}

uint64_t sub_1C0EFDD7C()
{
  uint64_t v1 = sub_1C151E68C();
  MEMORY[0x1F4188790](v1 - 8);
  id v2 = *(void **)(v0 + 16);
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    sub_1C0EFDF30();
    swift_allocObject();
    id v3 = v2;
    return sub_1C151906C();
  }
  else
  {
    unint64_t v5 = *(void *)(v0 + 24);
    sub_1BFE95820((uint64_t)v2, v5);
    sub_1C151E67C();
    sub_1C0336260();
    sub_1C151E65C();
    sub_1C0EFDF30();
    swift_allocObject();
    uint64_t v6 = sub_1C151908C();
    sub_1C0C48560(v2, v5, 0);
    return v6;
  }
}

uint64_t sub_1C0EFDE9C()
{
  sub_1C0C48560(*(id *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatCodeJSONLoader()
{
  return self;
}

uint64_t sub_1C0EFDEFC()
{
  return 1313821514;
}

uint64_t sub_1C0EFDF0C()
{
  return sub_1C0EFDD7C();
}

void sub_1C0EFDF30()
{
  if (!qword_1EA1A8C80)
  {
    sub_1BFF97D54();
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8C80);
    }
  }
}

void sub_1C0EFE038()
{
  uint64_t v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    unint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView];
    id v6 = objc_msgSend(self, sel_monospacedSystemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09D8]);
    objc_msgSend(v5, sel_setFont_, v6);

    id v7 = objc_msgSend(v1, sel_view);
    if (v7)
    {
      uint64_t v8 = v7;
      objc_msgSend(v7, sel_addSubview_, v5);

      MEMORY[0x1F4188790](v9);
      sub_1BFE4F908(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      sub_1C151932C();
      sub_1BFE4597C();
      uint64_t v10 = (void *)sub_1C151F56C();
      sub_1C151901C();
      swift_release();

      uint64_t v11 = (void *)sub_1C151F56C();
      sub_1C151904C();
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C0EFE2A4(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView);
  if (*(void *)(a1 + 8)) {
    id v3 = (void *)sub_1C151E5EC();
  }
  else {
    id v3 = 0;
  }
  objc_msgSend(v2, sel_setText_, v3);
}

void sub_1C0EFE314(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView);
  sub_1C151E80C();
  sub_1C017F734();
  sub_1C152036C();
  id v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);
}

uint64_t type metadata accessor for DebugFormatCodeDisplayViewController()
{
  return self;
}

void sub_1C0EFE6B4()
{
  sub_1BFE4F908(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C15320E0;
  id v2 = (void *)sub_1C151E5EC();
  id v3 = objc_msgSend(self, sel_systemImageNamed_, v2);

  if (v3)
  {
    id v4 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v5 = v0;
    id v6 = objc_msgSend(v4, sel_initWithImage_style_target_action_, v3, 0, v5, sel_doDismiss);

    *(void *)(v1 + 32) = v6;
    sub_1C151EBEC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C0EFE7E8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

void sub_1C0EFE858()
{
}

uint64_t sub_1C0EFE87C()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

void sub_1C0EFE90C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C151CCDC();
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v63 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1C151CCEC();
  uint64_t v62 = *(void *)(v64 - 8);
  *(void *)&double v5 = MEMORY[0x1F4188790](v64).n128_u64[0];
  uint64_t v61 = (void *)((char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72.receiver = v0;
  v72.super_class = ObjectType;
  objc_msgSendSuper2(&v72, sel_viewDidLoad, v5);
  id v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(v1, sel_navigationItem);
  uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24];
  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 32];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem], v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v11 + 8) + 40))(&v70, v12);
  uint64_t v14 = v70;
  unint64_t v13 = v71;
  uint64_t v68 = v70;
  unint64_t v69 = v71;
  unint64_t v15 = FeedItem.Kind.description.getter();
  unint64_t v17 = v16;
  sub_1BFEEFC20(v14, v13);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1BFE7E4D4(v15, v17);
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    uint64_t v68 = v18;
    unint64_t v69 = v20;
    sub_1BFF27ECC();
    uint64_t v21 = sub_1C151FE5C();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1C029748C(1uLL, v15, v17);
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v24, v26, v28, v30);
    swift_bridgeObjectRelease();
    uint64_t v68 = v21;
    unint64_t v69 = v23;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v60[1] = ObjectType;
  uint64_t v31 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_, v31);

  id v32 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v32, sel_setLeftItemsSupplementBackButton_, 1);

  id v33 = objc_msgSend(v1, sel_navigationItem);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v34 = swift_allocObject();
  long long v67 = xmmword_1C15320E0;
  *(_OWORD *)(v34 + 16) = xmmword_1C15320E0;
  uint64_t v35 = (void *)sub_1C151E5EC();
  unint64_t v36 = self;
  id v37 = objc_msgSend(v36, sel_systemImageNamed_, v35);

  if (!v37) {
    goto LABEL_9;
  }
  id v38 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  char v39 = v1;
  id v40 = objc_msgSend(v38, sel_initWithImage_style_target_action_, v37, 0, v39, sel_doTapToRadar);

  *(void *)(v34 + 32) = v40;
  uint64_t v70 = v34;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v41 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setLeftBarButtonItems_, v41);

  id v42 = objc_msgSend(v39, (SEL)&selRef_bundlePaidMultiplier);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v67;
  uint64_t v44 = (void *)sub_1C151E5EC();
  id v45 = objc_msgSend(v36, sel_systemImageNamed_, v44);

  if (!v45)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v46 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v47 = v39;
  id v48 = objc_msgSend(v46, sel_initWithImage_style_target_action_, v45, 2, v47, sel_doDismiss);

  *(void *)(v43 + 32) = v48;
  uint64_t v70 = v43;
  sub_1C151EBEC();
  uint64_t v49 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_setRightBarButtonItems_, v49);

  id v50 = objc_msgSend(v47, sel_view);
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v52 = *(void **)&v47[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView];
    objc_msgSend(v50, sel_addSubview_, v52);

    objc_msgSend(v52, sel_setDelegate_, v47);
    objc_msgSend(v52, sel_setDataSource_, v47);
    objc_msgSend(v52, sel_setAlwaysBounceVertical_, 1);
    sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
    sub_1C151F26C();
    type metadata accessor for SubtitleTableViewCell();
    sub_1C151F26C();
    sub_1C151AB8C();
    uint64_t v53 = v61;
    static CoverView.loading.getter(v61);
    uint64_t v55 = v65;
    uint64_t v54 = v66;
    uint64_t v56 = v63;
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v63, *MEMORY[0x1E4FAD888], v66);
    sub_1C151AB7C();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
    (*(void (**)(uint64_t *, uint64_t))(v62 + 8))(v53, v64);
    sub_1C0F6DE28();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    uint64_t v57 = (void *)sub_1C151F56C();
    sub_1C151901C();
    swift_release();

    uint64_t v58 = (void *)sub_1C151F56C();
    sub_1C151904C();
    swift_release();

    uint64_t v59 = (void *)sub_1C151F56C();
    sub_1C15190AC();
    swift_release();
    swift_release();

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_1C0EFF16C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugInspectionWebEmbed();
  MEMORY[0x1F4188790](v4 - 8);
  id v112 = (void *)((char *)v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v111 = type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1F4188790](v111);
  long long v110 = (void *)((char *)v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for DebugInspectionHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v109 = (uint64_t)v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F02C64(0, (unint64_t *)&unk_1EA1A8CF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v113 = (uint64_t)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v114 = (uint64_t)v105 - v12;
  uint64_t v128 = type metadata accessor for DebugInspectionItem();
  uint64_t v125 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  long long v130 = (void *)((char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v116 = (char *)v105 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (void *)((char *)v105 - v17);
  MEMORY[0x1F4188790](v19);
  uint64_t v127 = (char *)v105 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v106 = (uint64_t)v105 - v22;
  uint64_t v23 = a1[1];
  uint64_t v24 = a1[3];
  uint64_t v126 = a1[4];
  uint64_t v121 = a1[5];
  uint64_t v122 = v23;
  uint64_t v25 = a1[6];
  uint64_t v119 = a1[7];
  uint64_t v120 = v25;
  uint64_t v26 = a1[8];
  uint64_t v117 = a1[9];
  uint64_t v118 = v26;
  uint64_t v123 = a1[11];
  uint64_t v124 = v24;
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  long long v132 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))qword_1EA2B5358;
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  v105[1] = v27;
  uint64_t v28 = swift_allocObject();
  long long v115 = xmmword_1C1529AE0;
  *(_OWORD *)(v28 + 16) = xmmword_1C1529AE0;
  uint64_t v108 = a2;
  uint64_t v29 = (void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem);
  uint64_t v30 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24);
  uint64_t v31 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem), v30);
  uint64_t v32 = *(void *)(v31 + 8);
  id v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
  long long v132 = v132;
  uint64_t v34 = v33(v30, v32);
  uint64_t v36 = v35;
  *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
  v105[0] = sub_1BFE9C558();
  *(void *)(v28 + 64) = v105[0];
  *(void *)(v28 + 32) = v34;
  *(void *)(v28 + 40) = v36;
  sub_1C151F38C();
  id v37 = v132;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v39 = v29[3];
  uint64_t v38 = v29[4];
  uint64_t v107 = v29;
  __swift_project_boxed_opaque_existential_1(v29, v39);
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(*(void *)(v38 + 8) + 8))(v39);
  long long v132 = v41;
  uint64_t v42 = *(void *)(v126 + 16);
  if (v42)
  {
    uint64_t v43 = v40;
    uint64_t v44 = v126 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    long long v129 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 72);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = (uint64_t)v127;
    uint64_t v46 = v128;
    while (1)
    {
      sub_1C0F02E70(v44, v45, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
      sub_1C0F02E70(v45, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          memcpy(v131, v18, 0x230uLL);
          uint64_t v47 = v131[0];
          id v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v131[1];
          swift_bridgeObjectRetain();
          sub_1C0BB21D8((uint64_t)v131);
          goto LABEL_12;
        case 2u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = *v18;
          id v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18[1];
          goto LABEL_7;
        case 3u:
          id v50 = v112;
          sub_1C0F02E08((uint64_t)v18, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed);
          uint64_t v47 = *v50;
          id v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50[1];
          swift_bridgeObjectRetain();
          uint64_t v52 = (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed;
          goto LABEL_11;
        case 7u:
          uint64_t v47 = *v18;
          id v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18[1];
          swift_bridgeObjectRelease();
          uint64_t v45 = (uint64_t)v127;
LABEL_7:
          swift_bridgeObjectRelease();
          goto LABEL_12;
        default:
          uint64_t v49 = v109;
          sub_1C0F02E08((uint64_t)v18, v109, type metadata accessor for DebugInspectionHeadline);
          id v50 = v110;
          sub_1C0F02E70(v49, (uint64_t)v110, type metadata accessor for DebugInspectionArticleData);
          sub_1C0F02ED8(v49, type metadata accessor for DebugInspectionHeadline);
          uint64_t v51 = (uint64_t *)((char *)v50 + *(int *)(v111 + 60));
          uint64_t v47 = *v51;
          id v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v51[1];
          swift_bridgeObjectRetain();
          uint64_t v52 = type metadata accessor for DebugInspectionArticleData;
LABEL_11:
          uint64_t v53 = (uint64_t)v50;
          uint64_t v45 = (uint64_t)v127;
          sub_1C0F02ED8(v53, v52);
LABEL_12:
          if (v47 == v43 && v48 == v132)
          {
            swift_bridgeObjectRelease();
LABEL_22:
            swift_bridgeObjectRelease();
            uint64_t v56 = v113;
            sub_1C0F02E08(v45, v113, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
            uint64_t v57 = v125;
            uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
            v58(v56, 0, 1, v46);
            goto LABEL_24;
          }
          char v55 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v55) {
            goto LABEL_22;
          }
          sub_1C0F02ED8(v45, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
          v44 += (uint64_t)v129;
          if (!--v42)
          {
            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
          break;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = v128;
LABEL_23:
  uint64_t v57 = v125;
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
  uint64_t v56 = v113;
  v58(v113, 1, 1, v46);
LABEL_24:
  uint64_t v59 = v114;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = (char *)(v57 + 48);
  uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v61(v56, 1, v46) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0F02E08(v56, v59, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
    v58(v59, 0, 1, v46);
    goto LABEL_47;
  }
  long long v132 = v58;
  long long v129 = v61;
  __swift_project_boxed_opaque_existential_1(v107, v107[3]);
  uint64_t v62 = v126;
  uint64_t v63 = sub_1C151811C();
  uint64_t v65 = v64;
  uint64_t v66 = *(void *)(v62 + 16);
  if (!v66)
  {
    swift_bridgeObjectRetain();
    uint64_t v81 = 1;
    uint64_t v46 = v128;
    goto LABEL_46;
  }
  uint64_t v67 = v63;
  uint64_t v127 = v60;
  uint64_t v68 = v62 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
  uint64_t v69 = *(void *)(v125 + 72);
  swift_bridgeObjectRetain_n();
  uint64_t v70 = (uint64_t)v116;
  while (2)
  {
    sub_1C0F02E70(v68, v70, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
    sub_1C0F02E70(v70, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        memcpy(v131, v130, 0x230uLL);
        uint64_t v71 = v131[0];
        uint64_t v72 = v131[1];
        swift_bridgeObjectRetain();
        sub_1C0BB21D8((uint64_t)v131);
        goto LABEL_34;
      case 2u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v71 = *v130;
        uint64_t v72 = v130[1];
        goto LABEL_29;
      case 3u:
        uint64_t v74 = v112;
        sub_1C0F02E08((uint64_t)v130, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed);
        uint64_t v71 = *v74;
        uint64_t v72 = v74[1];
        swift_bridgeObjectRetain();
        uint64_t v76 = (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed;
        goto LABEL_33;
      case 7u:
        uint64_t v71 = *v130;
        uint64_t v72 = v130[1];
        swift_bridgeObjectRelease();
        uint64_t v70 = (uint64_t)v116;
LABEL_29:
        swift_bridgeObjectRelease();
        goto LABEL_34;
      default:
        uint64_t v73 = v109;
        sub_1C0F02E08((uint64_t)v130, v109, type metadata accessor for DebugInspectionHeadline);
        uint64_t v74 = v110;
        sub_1C0F02E70(v73, (uint64_t)v110, type metadata accessor for DebugInspectionArticleData);
        sub_1C0F02ED8(v73, type metadata accessor for DebugInspectionHeadline);
        uint64_t v75 = (uint64_t *)((char *)v74 + *(int *)(v111 + 60));
        uint64_t v71 = *v75;
        uint64_t v72 = v75[1];
        swift_bridgeObjectRetain();
        uint64_t v76 = type metadata accessor for DebugInspectionArticleData;
LABEL_33:
        uint64_t v77 = (uint64_t)v74;
        uint64_t v70 = (uint64_t)v116;
        sub_1C0F02ED8(v77, v76);
LABEL_34:
        if (v71 != v67 || v72 != v65)
        {
          char v79 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v79) {
            goto LABEL_45;
          }
          sub_1C0F02ED8(v70, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
          v68 += v69;
          if (!--v66)
          {
            swift_bridgeObjectRelease();
            uint64_t v81 = 1;
            uint64_t v56 = v113;
            uint64_t v59 = v114;
            uint64_t v46 = v128;
            goto LABEL_46;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_45:
        swift_bridgeObjectRelease();
        uint64_t v80 = v70;
        uint64_t v59 = v114;
        sub_1C0F02E08(v80, v114, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
        uint64_t v81 = 0;
        uint64_t v46 = v128;
        uint64_t v56 = v113;
LABEL_46:
        uint64_t v61 = v129;
        v132(v59, v81, 1, v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0F02D98(v56, (unint64_t *)&unk_1EA1A8CF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem);
LABEL_47:
        if (v61(v59, 1, v46) == 1)
        {
          sub_1C0F02D98(v59, (unint64_t *)&unk_1EA1A8CF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem);
          id v82 = (id)qword_1EA2B5358;
          sub_1C151F36C();
          uint64_t v83 = swift_allocObject();
          *(_OWORD *)(v83 + 16) = v115;
          unint64_t v84 = v107;
          uint64_t v86 = v107[3];
          uint64_t v85 = v107[4];
          __swift_project_boxed_opaque_existential_1(v107, v86);
          uint64_t v87 = (*(uint64_t (**)(uint64_t))(*(void *)(v85 + 8) + 8))(v86);
          uint64_t v88 = v105[0];
          *(void *)(v83 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v83 + 64) = v88;
          *(void *)(v83 + 32) = v87;
          *(void *)(v83 + 40) = v89;
          sub_1C15197BC();

          swift_bridgeObjectRelease();
          sub_1BFE4F744(0, (unint64_t *)&qword_1EA19C720);
          uint64_t v90 = swift_allocObject();
          *(_OWORD *)(v90 + 16) = v115;
          sub_1BFE4F744(0, (unint64_t *)&qword_1EA198210);
          uint64_t v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = v115;
          uint64_t v93 = v84[3];
          uint64_t v92 = v84[4];
          __swift_project_boxed_opaque_existential_1(v84, v93);
          uint64_t v94 = (*(uint64_t (**)(uint64_t))(*(void *)(v92 + 8) + 8))(v93);
          uint64_t v96 = v95;
          sub_1C0F02F38();
          uint64_t v97 = swift_allocError();
          *(void *)uint64_t v98 = v94;
          *(void *)(v98 + 8) = v96;
          *(unsigned char *)(v98 + 16) = 0;
          *(void *)(v91 + 32) = v97;
          *(unsigned char *)(v91 + 88) = 1;
          *(void *)(v90 + 32) = 0x726F727245;
          *(void *)(v90 + 40) = 0xE500000000000000;
          *(void *)(v90 + 48) = v91;
          uint64_t v99 = v108;
          *(void *)(v108 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections) = v90;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v100 = v106;
          sub_1C0F02E08(v59, v106, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
          sub_1C13C52FC(v131);
          uint64_t v101 = v131[3];
          uint64_t v102 = v131[4];
          __swift_project_boxed_opaque_existential_1(v131, v131[3]);
          uint64_t v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 8))(v101, v102);
          sub_1C0F02ED8(v100, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
          uint64_t v99 = v108;
          *(void *)(v108 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections) = v103;
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
        }
        return objc_msgSend(*(id *)(v99 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView), sel_reloadData);
    }
  }
}

id sub_1C0F0009C(void *a1, uint64_t a2)
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EA2B5358;
  sub_1C151F36C();
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1527210;
  uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24);
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem), v7);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 8))(v7);
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1BFE9C558();
  *(void *)(v5 + 64) = v12;
  *(void *)(v5 + 32) = v8;
  *(void *)(v5 + 40) = v10;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v5 + 96) = v11;
  *(void *)(v5 + 104) = v12;
  *(void *)(v5 + 72) = 0;
  *(void *)(v5 + 80) = 0xE000000000000000;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1BFE4F744(0, (unint64_t *)&qword_1EA19C720);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  sub_1BFE4F744(0, (unint64_t *)&qword_1EA198210);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  *(void *)(v14 + 32) = a1;
  *(unsigned char *)(v14 + 88) = 1;
  *(void *)(v13 + 32) = 0x726F727245;
  *(void *)(v13 + 40) = 0xE500000000000000;
  *(void *)(v13 + 48) = v14;
  *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections) = v13;
  id v15 = a1;
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView), sel_reloadData);
}

uint64_t sub_1C0F00320()
{
  uint64_t v0 = sub_1C151CCDC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151CCEC();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4FAD860], v4, v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAD880], v0);
  sub_1C151AB7C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t type metadata accessor for DebugInspectionViewController()
{
  return self;
}

void sub_1C0F00780()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  id v2 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320E0;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_init);
  objc_msgSend(v4, sel_sizeToFit);
  objc_msgSend(v4, sel_startAnimating);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v4);

  *(void *)(v3 + 32) = v5;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  __n128 v6 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setLeftBarButtonItems_, v6);

  sub_1C151932C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v7 = (void *)sub_1C151F56C();
  *(void *)(swift_allocObject() + 16) = v1;
  id v8 = v1;
  sub_1C151901C();
  swift_release();

  swift_release();
  uint64_t v9 = (void *)sub_1C151F56C();
  sub_1C151904C();
  swift_release();
  swift_release();
}

uint64_t sub_1C0F009E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v178 = a3;
  uint64_t v5 = sub_1C151AC0C();
  uint64_t v179 = *(void *)(v5 - 8);
  uint64_t v180 = v5;
  MEMORY[0x1F4188790](v5);
  id v181 = (char *)&v176 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0F02C64(0, (unint64_t *)&unk_1EB893810, MEMORY[0x1E4FABF68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v189 = (char *)&v176 - v9;
  sub_1C0F02C64(0, &qword_1EA1AF1D0, MEMORY[0x1E4FAD738], v7);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v182 = (char *)&v176 - v11;
  uint64_t v12 = type metadata accessor for DebugInspectionWebEmbed();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v186 = (uint64_t *)((char *)&v176 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v185 = type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1F4188790](v185);
  uint64_t v184 = (uint64_t)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DebugInspectionHeadline(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v183 = (uint64_t)&v176 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F02C64(0, (unint64_t *)&unk_1EA1A8CF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem, v7);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v187 = (uint64_t *)((char *)&v176 - v18);
  uint64_t v200 = (void (*)(void))type metadata accessor for DebugInspectionItem();
  uint64_t v194 = *((void *)v200 - 1);
  MEMORY[0x1F4188790](v200);
  uint64_t v20 = (uint64_t *)((char *)&v176 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v176 - v22;
  *(void *)&double v25 = MEMORY[0x1F4188790](v24).n128_u64[0];
  uint64_t v188 = (uint64_t)&v176 - v26;
  uint64_t v27 = (uint64_t **)a1[1];
  uint64_t v198 = a1[3];
  int64_t v199 = v27;
  uint64_t v195 = a1[4];
  id v197 = (id)a1[5];
  uint64_t v204 = a1[6];
  uint64_t v28 = a1[7];
  uint64_t v192 = a1[8];
  uint64_t ObjectType = v28;
  uint64_t v191 = a1[9];
  uint64_t v29 = (uint64_t *)a1[11];
  uint64_t v30 = a2;
  int64_t v196 = v29;
  id v202 = objc_msgSend(a2, sel_navigationItem, v25);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C15320E0;
  uint64_t v32 = (void *)sub_1C151E5EC();
  id v33 = objc_msgSend(self, sel_systemImageNamed_, v32);

  if (!v33)
  {
    __break(1u);
    JUMPOUT(0x1C0F02050);
  }
  id v34 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v35 = v30;
  id v36 = objc_msgSend(v34, sel_initWithImage_style_target_action_, v33, 0, v35, sel_doTapToRadar);

  *(void *)(v31 + 32) = v36;
  v203[0] = v31;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  id v37 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v38 = v202;
  objc_msgSend(v202, sel_setLeftBarButtonItems_, v37);

  int64_t v177 = v35;
  uint64_t v39 = &v35[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem];
  uint64_t v41 = *(void *)&v35[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24];
  uint64_t v40 = *((void *)v39 + 4);
  __swift_project_boxed_opaque_existential_1(v39, v41);
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)(v40 + 8) + 8))(v41);
  id v202 = v43;
  uint64_t v44 = *(void *)(v195 + 16);
  if (v44)
  {
    uint64_t v45 = v42;
    uint64_t v46 = v195 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
    uint64_t v201 = *(void *)(v194 + 72);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = v200;
    uint64_t v176 = v23;
    while (1)
    {
      sub_1C0F02E70(v46, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
      sub_1C0F02E70((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          memcpy(v203, v20, 0x230uLL);
          uint64_t v48 = v203[0];
          id v49 = (id)v203[1];
          swift_bridgeObjectRetain();
          sub_1C0BB21D8((uint64_t)v203);
          break;
        case 2u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v48 = *v20;
          id v49 = (id)v20[1];
          goto LABEL_10;
        case 3u:
          uint64_t v54 = v47;
          char v55 = v186;
          sub_1C0F02E08((uint64_t)v20, (uint64_t)v186, (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed);
          uint64_t v48 = *v55;
          id v49 = (id)v55[1];
          swift_bridgeObjectRetain();
          uint64_t v56 = (uint64_t)v55;
          uint64_t v47 = v54;
          uint64_t v23 = v176;
          sub_1C0F02ED8(v56, (uint64_t (*)(void))type metadata accessor for DebugInspectionWebEmbed);
          break;
        case 7u:
          uint64_t v48 = *v20;
          id v49 = (id)v20[1];
          swift_bridgeObjectRelease();
          uint64_t v47 = v200;
LABEL_10:
          swift_bridgeObjectRelease();
          break;
        default:
          uint64_t v50 = v183;
          sub_1C0F02E08((uint64_t)v20, v183, type metadata accessor for DebugInspectionHeadline);
          uint64_t v51 = v184;
          sub_1C0F02E70(v50, v184, type metadata accessor for DebugInspectionArticleData);
          sub_1C0F02ED8(v50, type metadata accessor for DebugInspectionHeadline);
          uint64_t v52 = (uint64_t *)(v51 + *(int *)(v185 + 60));
          uint64_t v48 = *v52;
          id v49 = (id)v52[1];
          swift_bridgeObjectRetain();
          uint64_t v53 = v51;
          uint64_t v47 = v200;
          sub_1C0F02ED8(v53, type metadata accessor for DebugInspectionArticleData);
          break;
      }
      if (v48 == v45 && v49 == v202)
      {
        uint64_t v61 = v47;
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      char v58 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v58) {
        break;
      }
      sub_1C0F02ED8((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
      v46 += v201;
      if (!--v44)
      {
        swift_bridgeObjectRelease();
        uint64_t v59 = 1;
        uint64_t v60 = v187;
        uint64_t v61 = v47;
        goto LABEL_22;
      }
    }
    uint64_t v61 = v47;
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v60 = v187;
    sub_1C0F02E08((uint64_t)v23, (uint64_t)v187, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
    uint64_t v59 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v59 = 1;
    uint64_t v61 = v200;
    uint64_t v60 = v187;
  }
LABEL_22:
  uint64_t v62 = v194;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, void (*)(void)))(v194 + 56))(v60, v59, 1, v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, void (*)(void)))(v62 + 48))(v60, 1, v61) == 1) {
    return sub_1C0F02D98((uint64_t)v60, (unint64_t *)&unk_1EA1A8CF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem);
  }
  uint64_t v64 = v188;
  sub_1C0F02E08((uint64_t)v60, v188, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
  uint64_t v65 = *(void *)&v177[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_commandCenter + 8];
  uint64_t v194 = *(void *)&v177[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_commandCenter];
  uint64_t v195 = v65;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C151CA1C();
  uint64_t v192 = sub_1C151C9CC();
  uint64_t v66 = sub_1C151A5FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v189, 1, 1, v66);
  sub_1C0F02C64(0, (unint64_t *)&unk_1EB8945A0, MEMORY[0x1E4FAC148], MEMORY[0x1E4FBBE00]);
  uint64_t v67 = sub_1C151A95C();
  uint64_t v68 = *(void *)(v67 - 8);
  unint64_t v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v201 = *(void *)(v68 + 72);
  uint64_t v70 = v201;
  uint64_t v71 = swift_allocObject();
  uint64_t v191 = v71;
  *(_OWORD *)(v71 + 16) = xmmword_1C152E280;
  uint64_t v72 = (uint64_t **)(v71 + v69);
  uint64_t v73 = (uint64_t *)swift_allocObject();
  void v73[5] = (uint64_t)v61;
  v73[6] = sub_1C0F02D08();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v73 + 2);
  sub_1C0F02E70(v64, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
  v73[7] = 0xD000000000000014;
  v73[8] = 0x80000001C162ED40;
  *uint64_t v72 = v73;
  uint64_t v75 = *MEMORY[0x1E4FAC128];
  uint64_t v76 = *(void (**)(uint64_t **, uint64_t, uint64_t))(v68 + 104);
  int64_t v199 = v72;
  uint64_t v77 = v67;
  v76(v72, v75, v67);
  id v202 = (id)(v68 + 104);
  uint64_t v78 = (uint64_t *)((char *)v72 + v70);
  uint64_t v79 = swift_allocObject();
  id v197 = *(id *)(v178 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_cloudContext);
  id v80 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v81 = sub_1C151E62C();
  uint64_t v83 = v82;

  v203[0] = v81;
  v203[1] = v83;
  sub_1C151E80C();
  uint64_t v84 = v203[1];
  *(void *)(v79 + 16) = v203[0];
  *(void *)(v79 + 24) = v84;
  *uint64_t v78 = v79;
  LODWORD(v204) = *MEMORY[0x1E4FAC140];
  uint64_t v198 = v67;
  ((void (*)(uint64_t *))v76)(v78);
  uint64_t v200 = (void (*)(void))v76;
  int64_t v196 = (uint64_t *)(2 * v201);
  uint64_t v85 = (uint64_t *)((char *)v199 + 2 * v201);
  uint64_t v86 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v87 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v88 = sub_1C151E62C();
  uint64_t v90 = v89;
  swift_bridgeObjectRelease();

  v203[0] = v88;
  v203[1] = v90;
  sub_1C151E80C();
  uint64_t v91 = v203[1];
  *(void *)(v86 + 16) = v203[0];
  *(void *)(v86 + 24) = v91;
  uint64_t *v85 = v86;
  v76((uint64_t **)v85, v204, v77);
  uint64_t v92 = v201;
  uint64_t v93 = v199;
  int64_t v196 = (uint64_t *)((char *)v196 + v201 + (void)v199);
  uint64_t v94 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v95 = v197;
  id v96 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v97 = sub_1C151E62C();
  uint64_t v99 = v98;
  swift_bridgeObjectRelease();

  v203[0] = v97;
  v203[1] = v99;
  sub_1C151E80C();
  uint64_t v100 = v203[1];
  *(void *)(v94 + 16) = v203[0];
  *(void *)(v94 + 24) = v100;
  *int64_t v196 = v94;
  v200();
  int64_t v196 = (uint64_t *)(4 * v92);
  uint64_t v101 = (uint64_t *)((char *)v93 + 4 * v92);
  uint64_t v102 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v103 = objc_msgSend(v95, sel_privateDataDirectory);
  uint64_t v104 = sub_1C151E62C();
  uint64_t v106 = v105;
  swift_bridgeObjectRelease();

  v203[0] = v104;
  v203[1] = v106;
  sub_1C151E80C();
  uint64_t v107 = v203[1];
  *(void *)(v102 + 16) = v203[0];
  *(void *)(v102 + 24) = v107;
  *uint64_t v101 = v102;
  uint64_t v108 = v200;
  ((void (*)(uint64_t *, void, uint64_t))v200)(v101, v204, v198);
  int64_t v196 = (uint64_t *)((char *)v196 + v201 + (void)v199);
  uint64_t v109 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v110 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v111 = sub_1C151E62C();
  uint64_t v113 = v112;
  swift_bridgeObjectRelease();

  v203[0] = v111;
  v203[1] = v113;
  sub_1C151E80C();
  uint64_t v114 = v203[1];
  *(void *)(v109 + 16) = v203[0];
  *(void *)(v109 + 24) = v114;
  *int64_t v196 = v109;
  uint64_t v115 = v198;
  v108();
  uint64_t v116 = (uint64_t *)((char *)v199 + 6 * v201);
  uint64_t v117 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v118 = v197;
  id v119 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v120 = sub_1C151E62C();
  uint64_t v122 = v121;
  swift_bridgeObjectRelease();

  v203[0] = v120;
  v203[1] = v122;
  sub_1C151E80C();
  uint64_t v123 = v203[1];
  *(void *)(v117 + 16) = v203[0];
  *(void *)(v117 + 24) = v123;
  uint64_t *v116 = v117;
  ((void (*)(uint64_t *, void, uint64_t))v200)(v116, v204, v115);
  int64_t v196 = (uint64_t *)(8 * v201);
  uint64_t v124 = v199;
  uint64_t v187 = (uint64_t *)((char *)v199 + 7 * v201);
  uint64_t v125 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v126 = objc_msgSend(v118, sel_privateDataDirectory);
  uint64_t v127 = sub_1C151E62C();
  uint64_t v129 = v128;
  swift_bridgeObjectRelease();

  v203[0] = v127;
  v203[1] = v129;
  sub_1C151E80C();
  uint64_t v130 = v203[1];
  *(void *)(v125 + 16) = v203[0];
  *(void *)(v125 + 24) = v130;
  *uint64_t v187 = v125;
  uint64_t v131 = v204;
  v200();
  long long v132 = (uint64_t *)((char *)v196 + (void)v124);
  uint64_t v133 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v134 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v135 = sub_1C151E62C();
  uint64_t v137 = v136;
  swift_bridgeObjectRelease();

  v203[0] = v135;
  v203[1] = v137;
  sub_1C151E80C();
  uint64_t v138 = v203[1];
  *(void *)(v133 + 16) = v203[0];
  *(void *)(v133 + 24) = v138;
  *long long v132 = v133;
  uint64_t v139 = v132;
  unint64_t v140 = v200;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v200)(v139, v131, v198);
  int64_t v196 = (uint64_t *)((char *)v196 + v201 + (void)v199);
  uint64_t v141 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v142 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v143 = sub_1C151E62C();
  uint64_t v145 = v144;
  swift_bridgeObjectRelease();

  v203[0] = v143;
  v203[1] = v145;
  sub_1C151E80C();
  uint64_t v146 = v203[1];
  *(void *)(v141 + 16) = v203[0];
  *(void *)(v141 + 24) = v146;
  *int64_t v196 = v141;
  v140();
  uint64_t v147 = v199;
  uint64_t v148 = v201;
  int64_t v196 = (uint64_t *)((char *)v199 + 10 * v201);
  uint64_t v149 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v150 = v197;
  id v151 = objc_msgSend(v197, sel_privateDataDirectory);
  uint64_t v152 = sub_1C151E62C();
  uint64_t v154 = v153;
  swift_bridgeObjectRelease();

  v203[0] = v152;
  v203[1] = v154;
  sub_1C151E80C();
  uint64_t v155 = v203[1];
  *(void *)(v149 + 16) = v203[0];
  *(void *)(v149 + 24) = v155;
  *int64_t v196 = v149;
  v200();
  uint64_t v156 = (uint64_t *)((char *)v147 + 11 * v148);
  uint64_t v157 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v158 = objc_msgSend(v150, sel_contentDirectory);
  uint64_t v159 = sub_1C151E62C();
  uint64_t v161 = v160;
  swift_bridgeObjectRelease();

  v203[0] = v159;
  v203[1] = v161;
  sub_1C151E80C();
  uint64_t v162 = v203[1];
  *(void *)(v157 + 16) = v203[0];
  *(void *)(v157 + 24) = v162;
  *uint64_t v156 = v157;
  uint64_t v163 = v156;
  uint64_t v164 = v198;
  uint64_t v165 = v200;
  ((void (*)(uint64_t *, void, uint64_t))v200)(v163, v204, v198);
  uint64_t v166 = (uint64_t *)((char *)v147 + 12 * v201);
  uint64_t v167 = swift_allocObject();
  v203[0] = 0;
  v203[1] = 0xE000000000000000;
  sub_1C15200FC();
  id v168 = objc_msgSend(v150, sel_contentDirectory);
  uint64_t v169 = sub_1C151E62C();
  uint64_t v171 = v170;
  swift_bridgeObjectRelease();

  v203[0] = v169;
  v203[1] = v171;
  sub_1C151E80C();
  uint64_t v172 = v203[1];
  *(void *)(v167 + 16) = v203[0];
  *(void *)(v167 + 24) = v172;
  *uint64_t v166 = v167;
  ((void (*)(uint64_t *, void, uint64_t))v165)(v166, v204, v164);
  (*(void (**)(char *, void, uint64_t))(v179 + 104))(v181, *MEMORY[0x1E4FAC1F8], v180);
  uint64_t v173 = (uint64_t)v182;
  sub_1C151C81C();
  uint64_t v174 = sub_1C151C82C();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v174 - 8) + 56))(v173, 0, 1, v174);
  uint64_t v175 = v190;
  sub_1C151ADBC();
  swift_release();
  if (v175) {

  }
  sub_1C0F02D98(v173, &qword_1EA1AF1D0, MEMORY[0x1E4FAD738]);
  return sub_1C0F02ED8(v188, (uint64_t (*)(void))type metadata accessor for DebugInspectionItem);
}

void sub_1C0F02070(uint64_t a1, void *a2)
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EA2B5358;
  sub_1C151F36C();
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1BFE9C558();
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C152036C();
  id v4 = (void *)sub_1C151E5EC();
  uint64_t v5 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v4, v5, 1);

  uint64_t v7 = (void *)sub_1C151E5EC();
  id v8 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v7, 0, 0);

  objc_msgSend(v6, sel_addAction_, v8);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v6, 1, 0);
  id v9 = objc_msgSend(a2, sel_navigationItem);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C15320E0;
  uint64_t v11 = (void *)sub_1C151E5EC();
  id v12 = objc_msgSend(self, sel_systemImageNamed_, v11);

  if (v12)
  {
    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v14 = a2;
    id v15 = objc_msgSend(v13, sel_initWithImage_style_target_action_, v12, 0, v14, sel_doTapToRadar);

    *(void *)(v10 + 32) = v15;
    sub_1C151EBEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    uint64_t v16 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setLeftBarButtonItems_, v16);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1C0F024F0()
{
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections);
  if (result >= *(void *)(v2 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v3 = *(void *)(v2 + 24 * result + 48);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (result < *(void *)(v3 + 16))
  {
    sub_1C0F02B28(v3 + (result << 6) + 32, (uint64_t)v36);
    swift_bridgeObjectRelease();
    sub_1C0F02B28((uint64_t)v36, (uint64_t)&v34);
    if (v35[40])
    {
      id v4 = v34;
      sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
      uint64_t v5 = (void *)sub_1C151F24C();
      id v6 = objc_msgSend(v5, sel_textLabel);
      if (v6)
      {
        uint64_t v7 = v6;
        sub_1C01A9804(v4);
        id v8 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setText_, v8);
      }
      id v9 = objc_msgSend(v5, sel_textLabel);
      if (v9)
      {
        uint64_t v10 = v9;
        id v11 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v10, sel_setFont_, v11);
      }
      id v12 = objc_msgSend(v5, sel_textLabel);
      if (!v12)
      {
        sub_1C0F02B84((uint64_t)v36);

        return (unint64_t)v5;
      }
      id v13 = v12;
      objc_msgSend(v12, sel_setNumberOfLines_, 0);
    }
    else
    {
      sub_1C01DC970((uint64_t)v35, (uint64_t)v33);
      type metadata accessor for SubtitleTableViewCell();
      uint64_t v5 = (void *)sub_1C151F24C();
      id v14 = objc_msgSend(v5, sel_textLabel);
      if (v14)
      {
        id v15 = v14;
        uint64_t v16 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setText_, v16);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v17 = objc_msgSend(v5, sel_textLabel);
      if (v17)
      {
        uint64_t v18 = v17;
        id v19 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v18, sel_setFont_, v19);
      }
      id v20 = objc_msgSend(v5, sel_detailTextLabel);
      if (v20)
      {
        uint64_t v21 = v20;
        sub_1C01DC9D4((uint64_t)v33, (uint64_t)v31);
        if (v32)
        {
          __swift_project_boxed_opaque_existential_1(v31, v32);
          sub_1C152088C();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        }
        else
        {
          sub_1C01DC8AC((uint64_t)v31);
        }
        uint64_t v22 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v21, sel_setText_, v22);
      }
      id v23 = objc_msgSend(v5, sel_detailTextLabel);
      if (v23)
      {
        uint64_t v24 = v23;
        id v25 = objc_msgSend(self, sel_secondaryLabelColor);
        objc_msgSend(v24, sel_setTextColor_, v25);
      }
      id v26 = objc_msgSend(v5, sel_detailTextLabel);
      if (v26)
      {
        uint64_t v27 = v26;
        objc_msgSend(v26, sel_setNumberOfLines_, 0);
      }
      id v28 = objc_msgSend(v5, sel_detailTextLabel);
      if (v28)
      {
        uint64_t v29 = v28;
        id v30 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
        objc_msgSend(v29, sel_setFont_, v30);
      }
      sub_1C01DC8AC((uint64_t)v33);
    }
    sub_1C0F02B84((uint64_t)v36);
    return (unint64_t)v5;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1C0F02B28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0F02B84(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0F02BD8()
{
  return sub_1C0F6DE28();
}

uint64_t sub_1C0F02C10()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F02C48(void *a1, void *a2)
{
  return sub_1C0F009E8(a1, a2, *(void *)(v2 + 16));
}

void sub_1C0F02C64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0F02CC8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0F02D08()
{
  unint64_t result = qword_1EA1A8D00;
  if (!qword_1EA1A8D00)
  {
    type metadata accessor for DebugInspectionItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D00);
  }
  return result;
}

uint64_t sub_1C0F02D60()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F02D98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0F02C64(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0F02E08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F02E70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F02ED8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C0F02F38()
{
  unint64_t result = qword_1EA1A8D10;
  if (!qword_1EA1A8D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D10);
  }
  return result;
}

id sub_1C0F02F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v27[3] = a7;
  v27[4] = a8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_0, a2, a7);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView;
  id v19 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  id v20 = a6;
  *(void *)&a6[v18] = objc_msgSend(v19, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections] = MEMORY[0x1E4FBC860];
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  *(void *)&v20[v21] = sub_1C151AB9C();
  *(void *)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_inspector] = a1;
  sub_1BFC66384((uint64_t)v27, (uint64_t)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem]);
  uint64_t v22 = &v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_commandCenter];
  *(void *)uint64_t v22 = a3;
  *((void *)v22 + 1) = a4;
  *(void *)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_cloudContext] = a5;
  swift_retain();
  swift_unknownObjectRetain();
  id v23 = a5;

  v26.receiver = v20;
  v26.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v26, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v24;
}

void sub_1C0F0313C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections] = MEMORY[0x1E4FBC860];
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  *(void *)&v1[v3] = sub_1C151AB9C();

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0F0321C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1C1080E58(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a3, v3, a2);
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
  return v9(a3, 0, 1, a2);
}

uint64_t FeedCursorGroup.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FeedCursorGroup.group.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t FeedCursorGroup.configIdentifier.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FeedCursorGroup.serviceConfig.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t static FeedCursorGroup.== infix(_:_:)()
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0F036B0()
{
  return static FeedCursorGroup.== infix(_:_:)();
}

uint64_t *sub_1C0F036BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(v8 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unsigned int v15 = v14 | *(_DWORD *)(v6 + 80) & 0xF8 | v11;
  if (((*(_DWORD *)(v13 + 80) | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((uint64_t v16 = v7 + v11,
         uint64_t v17 = (v7 + v11) & ~v11,
         uint64_t v18 = v12 + 7,
         ((v14 + ((v12 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v14) + *(void *)(*(void *)(v8 - 8) + 64) <= 0x18)
      ? (BOOL v19 = v15 > 7)
      : (BOOL v19 = 1),
        v19))
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    uint64_t v28 = v29 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7));
    swift_retain();
  }
  else
  {
    uint64_t v32 = a1;
    uint64_t v20 = ~v11;
    uint64_t v31 = AssociatedTypeWitness;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(v32, a2, v5);
    unint64_t v21 = ((unint64_t)v32 + v16) & v20;
    unint64_t v22 = ((unint64_t)a2 + v16) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v21, v22, v31);
    id v23 = (void *)((v18 + v21) & 0xFFFFFFFFFFFFFFF8);
    id v24 = (void *)((v18 + v22) & 0xFFFFFFFFFFFFFFF8);
    *id v23 = *v24;
    v23[1] = v24[1];
    uint64_t v25 = ((unint64_t)v23 + v14 + 16) & ~v14;
    uint64_t v26 = ((unint64_t)v24 + v14 + 16) & ~v14;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    v27(v25, v26, v8);
    return v32;
  }
  return (uint64_t *)v28;
}

uint64_t sub_1C0F0398C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = v11 + 24;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v8 + v13 + a1) & ~v13;
  uint64_t v15 = (v8 + v13 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v12 + 40) + 7;
  uint64_t v17 = (void *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 24))(((unint64_t)v17 + *(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)v18 + *(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), v9);
  return a1;
}

uint64_t sub_1C0F03B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v8 + v13 + a1) & ~v13;
  uint64_t v15 = (v8 + v13 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v12 + 32) + 7;
  uint64_t v17 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (_OWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  uint64_t v19 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 32))(((unint64_t)v17 + *(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)v18 + *(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), v9);
  return a1;
}

uint64_t sub_1C0F03CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v8 + v13 + a1) & ~v13;
  uint64_t v15 = (v8 + v13 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v12 + 24) + 7;
  uint64_t v17 = (void *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 40))(((unint64_t)v17 + *(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)v18 + *(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), v9);
  return a1;
}

uint64_t sub_1C0F03FB0()
{
  unint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRelease();
  sub_1BFFCB2B8(v1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t getEnumTagSinglePayload for FormatLayoutViewContainer.View(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x6D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 109);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatLayoutViewContainer.View(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x6C)
  {
    *(void *)unint64_t result = a2 - 109;
    if (a3 >= 0x6D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutViewContainer.View()
{
  return &type metadata for FormatLayoutViewContainer.View;
}

void sub_1C0F040E4(unint64_t a1)
{
  switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    case 3uLL:
      id v29 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      FormatButton.prepareForReuse()();
      goto LABEL_33;
    case 4uLL:
    case 0x11uLL:
      id v29 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      FormatLayoutView.prepareForReuse()();
      goto LABEL_33;
    case 5uLL:
      unint64_t v1 = (char *)*(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      MEMORY[0x1C18C4390]();

      uint64_t v2 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction];
      swift_beginAccess();
      uint64_t v3 = *v2;
      *uint64_t v2 = 0;
      v2[1] = 0;
      sub_1BFC3E5C0(v3);
      uint64_t v4 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation];
      swift_beginAccess();
      uint64_t v5 = *v4;
      *uint64_t v4 = 0;
      v4[1] = 0;
      sub_1BFC3E5C0(v5);
      uint64_t v6 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize];
      *(void *)uint64_t v6 = 0;
      *((void *)v6 + 1) = 0;
      v6[16] = 1;
      goto LABEL_37;
    case 6uLL:
      uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      swift_retain();
      sub_1C0F040E4(v8);
      uint64_t v9 = v7 + 64;
      uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
      uint64_t v11 = -1;
      if (v10 < 64) {
        uint64_t v11 = ~(-1 << v10);
      }
      unint64_t v12 = v11 & *(void *)(v7 + 64);
      int64_t v13 = (unint64_t)(v10 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v14 = 0;
      break;
    case 7uLL:
      id v29 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C10C1308();
      goto LABEL_33;
    case 0xAuLL:
      id v29 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C151CACC();
      goto LABEL_33;
    case 0xEuLL:
      uint64_t v24 = swift_retain();
      MEMORY[0x1C18C4390](v24);
      id v29 = (id)sub_1C151C84C();
      swift_release();
      goto LABEL_33;
    case 0xFuLL:
      id v25 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      MEMORY[0x1C18C4390]();
      id v29 = (id)sub_1C151C84C();

LABEL_33:

      return;
    case 0x12uLL:
      unint64_t v1 = (char *)*(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      MEMORY[0x1C18C4390]();

      uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController];
      uint64_t v27 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
      swift_beginAccess();
      uint64_t v28 = *v27;
      *uint64_t v27 = 0;
      v27[1] = 0;
      sub_1BFC3E5C0(v28);
      *(unsigned char *)(v26 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
LABEL_37:

      return;
    default:
      return;
  }
  while (v12)
  {
    unint64_t v16 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v17 = v16 | (v14 << 6);
LABEL_27:
    uint64_t v21 = *(void *)(v7 + 56) + 16 * v17;
    unint64_t v22 = *(void **)v21;
    switch(*(unsigned char *)(v21 + 8))
    {
      case 1:
      case 2:
      case 3:
      case 5:
        continue;
      case 4:
        id v15 = v22;
        sub_1C151CACC();

        break;
      default:
        id v23 = v22;
        sub_1C151CDFC();

        break;
    }
  }
  int64_t v18 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v18 >= v13) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v18);
  ++v14;
  if (v19) {
    goto LABEL_26;
  }
  int64_t v14 = v18 + 1;
  if (v18 + 1 >= v13) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v14);
  if (v19) {
    goto LABEL_26;
  }
  int64_t v14 = v18 + 2;
  if (v18 + 2 >= v13) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v14);
  if (v19) {
    goto LABEL_26;
  }
  int64_t v14 = v18 + 3;
  if (v18 + 3 >= v13) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v14);
  if (v19)
  {
LABEL_26:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
    goto LABEL_27;
  }
  int64_t v20 = v18 + 4;
  if (v20 < v13)
  {
    unint64_t v19 = *(void *)(v9 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v14 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v14 >= v13) {
          goto LABEL_38;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v14);
        ++v20;
        if (v19) {
          goto LABEL_26;
        }
      }
LABEL_42:
      __break(1u);
      JUMPOUT(0x1C0F04568);
    }
    int64_t v14 = v20;
    goto LABEL_26;
  }
LABEL_38:
  swift_release();
  swift_release();
}

void sub_1C0F045D0()
{
  sub_1C0F040E4(*v0);
}

void sub_1C0F045D8()
{
  sub_1C0F0466C();
  JUMPOUT(0x1C18C4650);
}

unint64_t sub_1C0F04618()
{
  unint64_t result = qword_1EA1A8D20;
  if (!qword_1EA1A8D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D20);
  }
  return result;
}

unint64_t sub_1C0F0466C()
{
  unint64_t result = qword_1EA1A8D28;
  if (!qword_1EA1A8D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D28);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDOMNode()
{
  return &type metadata for FormatDOMNode;
}

uint64_t sub_1C0F046D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v1; ++i)
  {
    if ((*(void *)(a1 + 8 * i + 32) & 0x8000000000000000) != 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_beginAccess();
      swift_retain();
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_1C0F046D0(v4);
      swift_bridgeObjectRelease();
    }
    sub_1C151E80C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0F047D0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0F04844(*a1, *a2);
}

uint64_t sub_1C0F047DC()
{
  if ((*v0 & 0x8000000000000000) != 0)
  {
    uint64_t v1 = *(void *)((*v0 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    uint64_t v1 = sub_1C0AC6D0C();
    swift_release();
  }
  return v1;
}

uint64_t sub_1C0F04844(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      if (sub_1C093BB60(v4, v5))
      {
        swift_beginAccess();
        uint64_t v6 = *(void *)(a1 + 24);
        swift_beginAccess();
        uint64_t v7 = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v8 = sub_1C00DD510(v6, v7);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v8) {
          return 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
      }
    }
    return 0;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return 0;
  }
  if (*(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10)
    && *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18))
  {
    return 1;
  }
  return sub_1C1520A9C();
}

uint64_t sub_1C0F04990@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v27 = a2;
  sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v28 = (uint64_t)&v26 - v6;
  sub_1BFC44A9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v11 = *(void *)v2;
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v12 = *(void *)(v2 + 16);
  char v13 = *(unsigned char *)(v2 + 24);
  sub_1BFDEB94C(*(void *)v2, v10, v12, v13);
  uint64_t v14 = a1;
  uint64_t v15 = sub_1C0AF2B18(a1, v11, v10, v12, v13);
  uint64_t v17 = v16;
  uint64_t result = sub_1BFDEB9E0(v11, v10, v12, v13);
  if (!v3)
  {
    unint64_t v19 = v27;
    uint64_t v20 = v2 + *(int *)(type metadata accessor for FormatPurchaseLandingPage() + 20);
    uint64_t v21 = v28;
    sub_1C0E9D198(v20, v28);
    uint64_t v22 = type metadata accessor for FormatPostPurchase();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22) == 1)
    {
      sub_1C0F06780(v21);
      uint64_t v23 = type metadata accessor for FormatPostPurchaseData();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
    }
    else
    {
      sub_1C11C826C(v14, (uint64_t)v9);
      sub_1BFFAEFF8(v21, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
      uint64_t v24 = type metadata accessor for FormatPostPurchaseData();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 0, 1, v24);
    }
    uint64_t v25 = type metadata accessor for FormatPurchaseLandingPageData();
    uint64_t result = sub_1C0F067F8((uint64_t)v9, (uint64_t)v19 + *(int *)(v25 + 20));
    *unint64_t v19 = v15;
    v19[1] = v17;
  }
  return result;
}

uint64_t FormatPurchaseLandingPage.articleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return sub_1BFDEB94C(v2, v3, v4, v5);
}

uint64_t FormatPurchaseLandingPage.postPurchase.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatPurchaseLandingPage() + 20);
  return sub_1C0E9D198(v3, a1);
}

uint64_t sub_1C0F04CC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPurchaseLandingPage.init(from:)(a1, a2);
}

uint64_t sub_1C0F04CD8(void *a1)
{
  return FormatPurchaseLandingPage.encode(to:)(a1);
}

BOOL _s8NewsFeed25FormatPurchaseLandingPageV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  uint64_t v4 = type metadata accessor for FormatPostPurchase();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EA18D4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v31 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v31 - v19;
  uint64_t v21 = *((void *)a1 + 2);
  char v22 = *((unsigned char *)a1 + 24);
  long long v36 = *a1;
  uint64_t v37 = v21;
  char v38 = v22;
  uint64_t v23 = *((void *)a2 + 2);
  char v24 = *((unsigned char *)a2 + 24);
  long long v33 = *a2;
  uint64_t v34 = v23;
  char v35 = v24;
  if ((_s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v36, (uint64_t)&v33) & 1) == 0) {
    return 0;
  }
  uint64_t v32 = v7;
  uint64_t v25 = type metadata accessor for FormatPurchaseLandingPage();
  sub_1C0E9D198((uint64_t)a1 + *(int *)(v25 + 20), (uint64_t)v20);
  sub_1C0E9D198((uint64_t)a2 + *(int *)(v25 + 20), (uint64_t)v17);
  uint64_t v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1C0E9D198((uint64_t)v20, (uint64_t)v11);
  sub_1C0E9D198((uint64_t)v17, v26);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v27((uint64_t)v11, 1, v4) == 1)
  {
    sub_1C0F06780((uint64_t)v17);
    sub_1C0F06780((uint64_t)v20);
    if (v27(v26, 1, v4) == 1)
    {
      sub_1C0F06780((uint64_t)v11);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1C0E9D198((uint64_t)v11, (uint64_t)v14);
  if (v27(v26, 1, v4) == 1)
  {
    sub_1C0F06780((uint64_t)v17);
    sub_1C0F06780((uint64_t)v20);
    sub_1BFFAEFF8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1BFFAEFF8((uint64_t)v11, (uint64_t (*)(void))sub_1C0EA18D4);
    return 0;
  }
  uint64_t v28 = (uint64_t)v32;
  sub_1C0F06878(v26, (uint64_t)v32);
  char v29 = _s8NewsFeed18FormatPostPurchaseO2eeoiySbAC_ACtFZ_0((uint64_t)v14, v28);
  sub_1BFFAEFF8(v28, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  sub_1C0F06780((uint64_t)v17);
  sub_1C0F06780((uint64_t)v20);
  sub_1BFFAEFF8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  sub_1C0F06780((uint64_t)v11);
  return (v29 & 1) != 0;
}

uint64_t sub_1C0F05080(uint64_t a1)
{
  uint64_t result = sub_1C0F05150(&qword_1EA1A8D40);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F050C4(void *a1)
{
  a1[1] = sub_1C0F05150(&qword_1EB87FCD0);
  a1[2] = sub_1C0F05150(&qword_1EA1A0DE0);
  uint64_t result = sub_1C0F05150(&qword_1EA1A8D48);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F05150(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatPurchaseLandingPage();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatPurchaseLandingPage(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_1BFDEB94C(*(void *)a2, v8, v9, v10);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)(a1 + v11);
    uint64_t v13 = (uint64_t *)(a2 + v11);
    uint64_t v14 = type metadata accessor for FormatPostPurchase();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for FormatURL();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v13, 2, v18))
      {
        memcpy(v12, v13, *(void *)(v15 + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v22 = *v13;
          uint64_t v23 = v13[1];
          uint64_t v29 = *v13;
          uint64_t v24 = v13[2];
          char v25 = *((unsigned char *)v13 + 24);
          sub_1BFE86E48(v22, v23, v24, v25);
          *uint64_t v12 = v29;
          v12[1] = v23;
          void v12[2] = v24;
          *((unsigned char *)v12 + 24) = v25;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v21 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v21;
            void v12[2] = v13[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v26 = sub_1C1515FDC();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16))(v12, v13, v26);
            uint64_t v27 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v12 + *(int *)(v27 + 20)) = *(uint64_t *)((char *)v13 + *(int *)(v27 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(v12, 0, 2, v18);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2)
{
  sub_1BFDEB9E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatPostPurchase();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = type metadata accessor for FormatURL();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 2, v7);
    if (!result)
    {
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        uint64_t v9 = *(void *)v4;
        uint64_t v10 = *(void *)(v4 + 8);
        uint64_t v11 = *(void *)(v4 + 16);
        char v12 = *(unsigned char *)(v4 + 24);
        return sub_1BFD7418C(v9, v10, v11, v12);
      }
      else
      {
        if (result == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if (result) {
            return result;
          }
          uint64_t v8 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
          type metadata accessor for FormatAbsoluteURL();
        }
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_1BFDEB94C(*(void *)a2, v7, v8, v9);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (uint64_t *)(a1 + v10);
  char v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = type metadata accessor for FormatPostPurchase();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for FormatURL();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v12, 2, v16))
    {
      memcpy(v11, v12, *(void *)(v14 + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v20 = *v12;
        uint64_t v21 = v12[1];
        uint64_t v27 = *v12;
        uint64_t v22 = v12[2];
        char v23 = *((unsigned char *)v12 + 24);
        sub_1BFE86E48(v20, v21, v22, v23);
        *uint64_t v11 = v27;
        v11[1] = v21;
        uint64_t v11[2] = v22;
        *((unsigned char *)v11 + 24) = v23;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v19 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v19;
          uint64_t v11[2] = v12[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v24 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v12, v24);
          uint64_t v25 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v11 + *(int *)(v25 + 20)) = *(uint64_t *)((char *)v12 + *(int *)(v25 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 2, v16);
    }
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithCopy for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_1BFDEB94C(*(void *)a2, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_1BFDEB9E0(v10, v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (uint64_t *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = type metadata accessor for FormatPostPurchase();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v8) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (v8)
  {
    if (!v20)
    {
      uint64_t v21 = type metadata accessor for FormatURL();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48))(v16, 2, v21))
      {
        memcpy(v15, v16, *(void *)(v18 + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v32 = *v16;
          uint64_t v33 = v16[1];
          uint64_t v52 = *v16;
          uint64_t v34 = v16[2];
          char v35 = *((unsigned char *)v16 + 24);
          sub_1BFE86E48(v32, v33, v34, v35);
          *uint64_t v15 = v52;
          v15[1] = v33;
          v15[2] = v34;
          *((unsigned char *)v15 + 24) = v35;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            *uint64_t v15 = *v16;
            v15[1] = v16[1];
            v15[2] = v16[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v36 = sub_1C1515FDC();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v36 - 8) + 16))(v15, v16, v36);
            uint64_t v37 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v15 + *(int *)(v37 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v37 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v22 + 56))(v15, 0, 2, v21);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      return a1;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_1BFFAEFF8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
LABEL_8:
    memcpy(v15, v16, v24);
    return a1;
  }
  uint64_t v25 = type metadata accessor for FormatURL();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v15, 2, v25);
  int v29 = v27(v16, 2, v25);
  if (v28)
  {
    if (!v29)
    {
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 2)
      {
        uint64_t v40 = *v16;
        uint64_t v41 = v16[1];
        uint64_t v42 = v16[2];
        char v43 = *((unsigned char *)v16 + 24);
        sub_1BFE86E48(v40, v41, v42, v43);
        *uint64_t v15 = v40;
        v15[1] = v41;
        v15[2] = v42;
        *((unsigned char *)v15 + 24) = v43;
      }
      else
      {
        if (v30 == 1)
        {
          *uint64_t v15 = *v16;
          v15[1] = v16[1];
          v15[2] = v16[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v44 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v44 - 8) + 16))(v15, v16, v44);
          uint64_t v45 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v15 + *(int *)(v45 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v45 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v26 + 56))(v15, 0, 2, v25);
      return a1;
    }
    goto LABEL_19;
  }
  if (v29)
  {
    sub_1BFFAEFF8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_19:
    size_t v24 = *(void *)(v18 + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1BFFAEFF8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v39 = swift_getEnumCaseMultiPayload();
    if (v39 == 2)
    {
      uint64_t v46 = *v16;
      uint64_t v47 = v16[1];
      uint64_t v48 = v16[2];
      char v49 = *((unsigned char *)v16 + 24);
      sub_1BFE86E48(v46, v47, v48, v49);
      *uint64_t v15 = v46;
      v15[1] = v47;
      v15[2] = v48;
      *((unsigned char *)v15 + 24) = v49;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v39 == 1)
      {
        *uint64_t v15 = *v16;
        v15[1] = v16[1];
        v15[2] = v16[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v50 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v50 - 8) + 16))(v15, v16, v50);
        uint64_t v51 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v15 + *(int *)(v51 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v51 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatPurchaseLandingPage(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for FormatPostPurchase();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for FormatURL();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 2, v10))
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v5, v6, *(void *)(v11 + 64));
      }
      else
      {
        uint64_t v12 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
        uint64_t v13 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v5[*(int *)(v13 + 20)] = *(void *)&v6[*(int *)(v13 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 2, v10);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1BFDEB9E0(v8, v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for FormatPostPurchase();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      uint64_t v24 = type metadata accessor for FormatURL();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      int v27 = v26(v13, 2, v24);
      int v28 = v26(v14, 2, v24);
      if (v27)
      {
        if (!v28)
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v13, v14, *(void *)(v25 + 64));
          }
          else
          {
            uint64_t v32 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v13, v14, v32);
            uint64_t v33 = type metadata accessor for FormatAbsoluteURL();
            *(void *)&v13[*(int *)(v33 + 20)] = *(void *)&v14[*(int *)(v33 + 20)];
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v13, 0, 2, v24);
          return a1;
        }
      }
      else
      {
        if (!v28)
        {
          if (a1 == a2) {
            return a1;
          }
          sub_1BFFAEFF8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatURL);
          if (!swift_getEnumCaseMultiPayload())
          {
            uint64_t v34 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v13, v14, v34);
            uint64_t v35 = type metadata accessor for FormatAbsoluteURL();
            *(void *)&v13[*(int *)(v35 + 20)] = *(void *)&v14[*(int *)(v35 + 20)];
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          size_t v23 = *(void *)(v25 + 64);
          goto LABEL_8;
        }
        sub_1BFFAEFF8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      size_t v23 = *(void *)(v16 + 64);
LABEL_8:
      memcpy(v13, v14, v23);
      return a1;
    }
    sub_1BFFAEFF8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    size_t v23 = *(void *)(*(void *)(v22 - 8) + 64);
    goto LABEL_8;
  }
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v20 = type metadata accessor for FormatURL();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 2, v20))
  {
    memcpy(v13, v14, *(void *)(v16 + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v13, v14, *(void *)(v21 + 64));
    }
    else
    {
      uint64_t v29 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v13, v14, v29);
      uint64_t v30 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v13[*(int *)(v30 + 20)] = *(void *)&v14[*(int *)(v30 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v13, 0, 2, v20);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F065E8);
}

uint64_t sub_1C0F065E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F066C0);
}

uint64_t sub_1C0F066C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 24) = -(char)a2;
  }
  else
  {
    sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F06780(uint64_t a1)
{
  sub_1BFC44A9C(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0F067F8(uint64_t a1, uint64_t a2)
{
  sub_1BFC44A9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F06878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPostPurchase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedSponsorshipAdService.fetchSponsoredAdForTag(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v37 = a2;
  uint64_t v38 = a1;
  uint64_t v5 = *v4;
  uint64_t v31 = v4;
  uint64_t v36 = v5;
  uint64_t v6 = sub_1C151D40C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1C151D90C();
  uint64_t v10 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v33 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  int v18 = (char *)v30 - v17;
  v30[1] = v4[7];
  sub_1C0F06D78();
  sub_1C151D0DC();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F7A9D8], v6);
  swift_bridgeObjectRetain();
  sub_1C151D8FC();
  uint64_t v39 = v34;
  uint64_t v40 = v35;
  sub_1C151D54C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
  sub_1BFE4597C();
  int v19 = (void *)sub_1C151F56C();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = (uint64_t)v18;
  sub_1C0F07478((uint64_t)v18, (uint64_t)v15);
  uint64_t v22 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v20;
  sub_1C0F077C0((uint64_t)v15, v23 + ((v22 + 24) & ~v22));
  sub_1C0F078C4();
  sub_1C151930C();

  swift_release();
  sub_1C0F07478((uint64_t)v18, (uint64_t)v15);
  uint64_t v24 = swift_allocObject();
  sub_1C0F077C0((uint64_t)v15, v24 + ((v22 + 16) & ~v22));
  uint64_t v25 = (void *)sub_1C1518E7C();
  sub_1C151D6DC();
  sub_1C1518FEC();
  swift_release();
  swift_release();

  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v38;
  *(void *)(v26 + 24) = v37;
  swift_bridgeObjectRetain();
  int v27 = (void *)sub_1C1518E7C();
  uint64_t v28 = sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0F087F4(v21);
  return v28;
}

void sub_1C0F06D78()
{
  if (!qword_1EB86C338)
  {
    sub_1C151D82C();
    sub_1C151D8CC();
    sub_1C151D90C();
    sub_1C0F0899C(qword_1EB8812D0, MEMORY[0x1E4F7AE58]);
    unint64_t v0 = sub_1C151DA3C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C338);
    }
  }
}

uint64_t sub_1C0F06E4C(void *a1)
{
  return swift_release();
}

uint64_t sub_1C0F06F6C(void *a1)
{
  return sub_1C0F06E4C(a1);
}

uint64_t sub_1C0F06F88()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0F06FC0(uint64_t a1, uint64_t a2)
{
  sub_1C0F07650(0, &qword_1EB86C348, MEMORY[0x1E4F7B0F0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    sub_1C0F07478(a2, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      sub_1C0F08A98(0, &qword_1EB86C278, (uint64_t (*)(uint64_t))sub_1C0F078C4, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v14 = sub_1C151906C();
      swift_release();
    }
    else
    {
      sub_1C0F07714();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      uint64_t v25 = v2;
      uint64_t v17 = v13[5];
      uint64_t v21 = v13[6];
      uint64_t v22 = __swift_project_boxed_opaque_existential_1(v13 + 2, v17);
      sub_1C0F06D78();
      sub_1C151D0DC();
      sub_1C151D82C();
      uint64_t v18 = sub_1C151D8CC();
      sub_1C151D90C();
      sub_1C0F0899C(qword_1EB8812D0, MEMORY[0x1E4F7AE58]);
      uint64_t v14 = (uint64_t)v22;
      uint64_t v19 = v25;
      sub_1C151D2EC();
      if (!v19)
      {
        swift_release();
        uint64_t v23 = v18;
        uint64_t v24 = MEMORY[0x1E4F7AEC0];
        sub_1C0F08A98(0, &qword_1EB86C278, (uint64_t (*)(uint64_t))sub_1C0F078C4, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        swift_retain();
        uint64_t v14 = sub_1C151908C();
      }
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    uint64_t v15 = sub_1C151813C();
    sub_1C0F0899C((unint64_t *)&unk_1EA1AAE70, MEMORY[0x1E4FAA9B0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v16, *MEMORY[0x1E4FAA9A0], v15);
    sub_1C0F08A98(0, &qword_1EB86C278, (uint64_t (*)(uint64_t))sub_1C0F078C4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  return v14;
}

uint64_t sub_1C0F07478(uint64_t a1, uint64_t a2)
{
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F074F8()
{
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    sub_1C0F07650(0, &qword_1EB86C348, MEMORY[0x1E4F7B0F0]);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
    sub_1C0F07714();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1C0F07650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = sub_1C151D82C();
    v8[1] = sub_1C151D90C();
    _OWORD v8[2] = sub_1C0F0899C(qword_1EB8812D0, MEMORY[0x1E4F7AE58]);
    uint64_t v8[3] = MEMORY[0x1E4F7AF18];
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0F07714()
{
  if (!qword_1EB86C340)
  {
    sub_1C0F07650(255, &qword_1EB86C348, MEMORY[0x1E4F7B0F0]);
    sub_1C0F07650(255, (unint64_t *)&qword_1EB884930, MEMORY[0x1E4F7B068]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86C340);
    }
  }
}

uint64_t sub_1C0F077C0(uint64_t a1, uint64_t a2)
{
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F07840()
{
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  return sub_1C0F06FC0(*(void *)(v0 + 16), v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)));
}

unint64_t sub_1C0F078C4()
{
  unint64_t result = qword_1EB86C330;
  if (!qword_1EB86C330)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB86C330);
  }
  return result;
}

uint64_t sub_1C0F0791C(void *a1, uint64_t a2)
{
  sub_1C0F07650(0, &qword_1EB86C348, MEMORY[0x1E4F7B0F0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v14 - v7;
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v14 - v10;
  sub_1C0F07478(a2, (uint64_t)v14 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1C0F08A98(0, &qword_1EA1A8D50, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  else
  {
    sub_1C0F07714();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_1C151DC1C();
    sub_1C151DADC();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v12 = sub_1C151D9CC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v12;
}

uint64_t sub_1C0F07B98()
{
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    sub_1C0F07650(0, &qword_1EB86C348, MEMORY[0x1E4F7B0F0]);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
    sub_1C0F07714();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F07CE4(void *a1)
{
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  return sub_1C0F0791C(a1, v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)));
}

uint64_t sub_1C0F07D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v65 = a4;
  uint64_t v63 = a3;
  uint64_t v74 = a5;
  uint64_t v68 = sub_1C151D69C();
  uint64_t v72 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v66 = (void (*)(uint64_t, char *, uint64_t))((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0F08A98(0, &qword_1EB882BA0, MEMORY[0x1E4F7B090], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v62 = (char *)&v59 - v8;
  sub_1C0F08944(0, &qword_1EB86C320, &qword_1EB86C318, MEMORY[0x1E4F7A948]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v59 - v10;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4F7B0F0];
  sub_1C0F08944(0, &qword_1EB86C350, &qword_1EB86C348, MEMORY[0x1E4F7B0F0]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v60 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v59 - v16;
  sub_1C0F07650(0, &qword_1EB86C348, v12);
  uint64_t v64 = v18;
  uint64_t v71 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v61 = (char *)&v59 - v19;
  uint64_t v20 = sub_1C151D6CC();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C151D6DC();
  uint64_t v25 = *(void *)(v24 - 8);
  __n128 v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16);
  uint64_t v67 = a1;
  v29(v28, a1, v24, v26);
  unsigned int v30 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v24);
  if (v30 == *MEMORY[0x1E4F7ACE0])
  {
    unsigned int v69 = v30;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v25 + 96);
    uint64_t v70 = v24;
    v31(v28, v24);
    uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
    uint64_t v72 = v20;
    uint64_t v68 = v21 + 32;
    uint64_t v66 = v32;
    v32((uint64_t)v23, v28, v20);
    uint64_t v33 = *MEMORY[0x1E4F7A940];
    uint64_t v34 = MEMORY[0x1E4F7A948];
    sub_1C0F07650(0, &qword_1EB86C318, MEMORY[0x1E4F7A948]);
    uint64_t v36 = v35;
    uint64_t v37 = *(void *)(v35 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v11, v33, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v11, 0, 1, v36);
    sub_1C151D37C();
    sub_1C0F08A38((uint64_t)v11, (uint64_t)&qword_1EB86C320, (uint64_t)&qword_1EB86C318, v34, (uint64_t (*)(void))sub_1C0F08944);
    uint64_t v38 = v64;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v17, 1, v64) == 1)
    {
      sub_1C0F08A38((uint64_t)v17, (uint64_t)&qword_1EB86C350, (uint64_t)&qword_1EB86C348, MEMORY[0x1E4F7B0F0], (uint64_t (*)(void))sub_1C0F08944);
    }
    else
    {
      uint64_t v52 = v71;
      uint64_t v53 = v61;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v61, v17, v38);
      uint64_t v73 = sub_1C151D67C();
      uint64_t v67 = sub_1C151D68C();
      sub_1C151D6AC();
      uint64_t v54 = sub_1C151DB3C();
      uint64_t v55 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v62, 1, 1, v54);
      sub_1C151DACC();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0F08A38(v55, (uint64_t)&qword_1EB882BA0, MEMORY[0x1E4F7B090], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0F08A98);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v38);
    }
    uint64_t v48 = v74;
    v66(v74, v23, v72);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v25 + 104))(v48, v69, v70);
  }
  uint64_t v39 = v74;
  uint64_t v40 = v73;
  if (v30 == *MEMORY[0x1E4F7ACD8])
  {
    unsigned int v69 = v30;
    uint64_t v41 = *(void (**)(char *, uint64_t))(v25 + 96);
    uint64_t v70 = v24;
    v41(v28, v24);
    uint64_t v71 = *(void *)(v72 + 32);
    v72 += 32;
    ((void (*)(void, char *, uint64_t))v71)(v66, v28, v68);
    uint64_t v67 = sub_1C151D67C();
    sub_1C0F089E4();
    uint64_t v65 = swift_allocError();
    uint64_t v73 = *(void *)(v40 + 64);
    uint64_t v64 = sub_1C151D68C();
    uint64_t v42 = *MEMORY[0x1E4F7A940];
    uint64_t v43 = MEMORY[0x1E4F7A948];
    sub_1C0F07650(0, &qword_1EB86C318, MEMORY[0x1E4F7A948]);
    uint64_t v45 = v44;
    uint64_t v46 = *(void *)(v44 - 8);
    uint64_t v47 = v42;
    uint64_t v48 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 104))(v11, v47, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v11, 0, 1, v45);
    uint64_t v49 = (uint64_t)v60;
    sub_1C151D37C();
    swift_bridgeObjectRelease();
    sub_1C0F08A38((uint64_t)v11, (uint64_t)&qword_1EB86C320, (uint64_t)&qword_1EB86C318, v43, (uint64_t (*)(void))sub_1C0F08944);
    uint64_t v50 = v66;
    sub_1C151D68C();
    uint64_t v51 = (void *)v65;
    sub_1C151DAAC();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C0F08A38(v49, (uint64_t)&qword_1EB86C350, (uint64_t)&qword_1EB86C348, MEMORY[0x1E4F7B0F0], (uint64_t (*)(void))sub_1C0F08944);

    ((void (*)(uint64_t, void, uint64_t))v71)(v48, v50, v68);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v25 + 104))(v48, v69, v70);
  }
  uint64_t v57 = sub_1C151813C();
  sub_1C0F0899C((unint64_t *)&unk_1EA1AAE70, MEMORY[0x1E4FAA9B0]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v57 - 8) + 104))(v58, *MEMORY[0x1E4FAA990], v57);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v24);
}

uint64_t sub_1C0F087A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F087D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0F07D6C(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1C0F087F4(uint64_t a1)
{
  sub_1C0F07650(0, &qword_1EB86C328, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FeedSponsorshipAdService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return v0;
}

uint64_t FeedSponsorshipAdService.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0F088F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FeedSponsorshipAdService.fetchSponsoredAdForTag(placementIdentifier:build:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FeedSponsorshipAdServiceType.fetchSponsoredAdForTag(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for FeedSponsorshipAdService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedSponsorshipAdService);
}

void sub_1C0F08944(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_1C0F07650(255, a3, a4);
    unint64_t v5 = sub_1C151FD8C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0F0899C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0F089E4()
{
  unint64_t result = qword_1EB86C3B8[0];
  if (!qword_1EB86C3B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB86C3B8);
  }
  return result;
}

uint64_t sub_1C0F08A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1C0F08A98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FeedSponsorshipAdService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0F08B98);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedSponsorshipAdService.Errors()
{
  return &type metadata for FeedSponsorshipAdService.Errors;
}

unint64_t sub_1C0F08BD4()
{
  unint64_t result = qword_1EA1A8D58;
  if (!qword_1EA1A8D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D58);
  }
  return result;
}

uint64_t FormatColorColorExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  FormatColor.bind(binder:context:)(a1, a2);
  uint64_t result = swift_release();
  if (!v2)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0F08CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v19 = v2[1];
  uint64_t v41 = *v2;
  uint64_t v27 = v4;
  char v20 = v5;
  char v28 = v5;
  char v29 = v6;
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  uint64_t v34 = v12;
  uint64_t v35 = v11;
  uint64_t v24 = v14;
  uint64_t v25 = v13;
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  uint64_t v22 = v16;
  uint64_t v23 = v15;
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  uint64_t v21 = v17;
  uint64_t v40 = v17;
  uint64_t result = sub_1BFF79540(a1, (uint64_t)&v27);
  if (!v3)
  {
    uint64_t v41 = v19;
    uint64_t v27 = v4;
    char v28 = v20;
    char v29 = v6;
    uint64_t v30 = v7;
    uint64_t v31 = v8;
    uint64_t v32 = v9;
    uint64_t v33 = v10;
    uint64_t v34 = v12;
    uint64_t v35 = v11;
    uint64_t v36 = v25;
    uint64_t v37 = v24;
    uint64_t v38 = v23;
    uint64_t v39 = v22;
    uint64_t v40 = v21;
    return sub_1BFF7B258(a1, &v27);
  }
  return result;
}

uint64_t FormatColorColorExpression.color.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatColorColorExpression.expression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1C0F08DFC(uint64_t a1, uint64_t a2)
{
  return FormatColorColorExpression.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C0F08E14(uint64_t a1, uint64_t a2)
{
  return sub_1C0F08CCC(a1, a2);
}

uint64_t _s8NewsFeed011FormatColorD10ExpressionV2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  uint64_t v8 = v2;
  if (static FormatColor.== infix(_:_:)(&v8, &v7))
  {
    unint64_t v7 = v4;
    uint64_t v8 = v3;
    char v5 = static FormatColorExpression.== infix(_:_:)(&v8, &v7);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1C0F08E88(uint64_t a1)
{
  unint64_t result = sub_1C0F08EB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F08EB0()
{
  unint64_t result = qword_1EA1A8D60;
  if (!qword_1EA1A8D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D60);
  }
  return result;
}

unint64_t sub_1C0F08F04(void *a1)
{
  a1[1] = sub_1BFD55EDC();
  a1[2] = sub_1BFD4DF08();
  unint64_t result = sub_1C0F08F3C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F08F3C()
{
  unint64_t result = qword_1EA1A8D68;
  if (!qword_1EA1A8D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D68);
  }
  return result;
}

uint64_t destroy for FormatColorColorExpression()
{
  swift_release();
  return swift_release();
}

void *_s8NewsFeed26FormatColorColorExpressionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FormatColorColorExpression(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatColorColorExpression(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorColorExpression()
{
  return &type metadata for FormatColorColorExpression;
}

uint64_t FormatStateMachineDefinition.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateMachineDefinition.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateMachineDefinition.input.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  char v6 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1BFF429DC(v2, v3, v4, v5, v6);
}

uint64_t sub_1C0F09110(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147C888(*a1, *a2);
}

uint64_t sub_1C0F0911C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F091B4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F09238()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F092CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F09898();
  *a1 = result;
  return result;
}

void sub_1C0F092FC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x73746E657665;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7475706E69;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x736574617473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0F09350@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F09898();
  *a1 = result;
  return result;
}

uint64_t sub_1C0F09378(uint64_t a1)
{
  unint64_t v2 = sub_1BFDEF7D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F093B4(uint64_t a1)
{
  unint64_t v2 = sub_1BFDEF7D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t _s8NewsFeed28FormatStateMachineDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 48);
  if (sub_1BFE9E788(*(void **)a1, *(void **)a2) & 1) != 0 && (sub_1C00F116C(v15, v6))
  {
    v18[0] = v14;
    v18[1] = v2;
    void v18[2] = v4;
    v18[3] = v3;
    char v19 = v5;
    v16[0] = v7;
    v16[1] = v8;
    _OWORD v16[2] = v9;
    v16[3] = v10;
    char v17 = v11;
    char v12 = static FormatStateMachineInput.== infix(_:_:)(v18, v16);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

unint64_t sub_1C0F094CC(void *a1)
{
  a1[1] = sub_1BFDB8EB4();
  a1[2] = sub_1BFD7BC80();
  unint64_t result = sub_1C0F09504();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F09504()
{
  unint64_t result = qword_1EA1A8D70;
  if (!qword_1EA1A8D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D70);
  }
  return result;
}

uint64_t destroy for FormatStateMachineDefinition(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  return sub_1BFEC41E8(v2, v3, v4, v5, v6);
}

uint64_t initializeWithCopy for FormatStateMachineDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF429DC(v4, v5, v6, v7, v8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for FormatStateMachineDefinition(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_1BFF429DC(v4, v5, v6, v7, (char)v2);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_1BFEC41E8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatStateMachineDefinition(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 48) = v4;
  sub_1BFEC41E8(v5, v6, v7, v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineDefinition()
{
  return &type metadata for FormatStateMachineDefinition;
}

unsigned char *storeEnumTagSinglePayload for FormatStateMachineDefinition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F09808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStateMachineDefinition.CodingKeys()
{
  return &type metadata for FormatStateMachineDefinition.CodingKeys;
}

unint64_t sub_1C0F09844()
{
  unint64_t result = qword_1EA1A8D78;
  if (!qword_1EA1A8D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D78);
  }
  return result;
}

uint64_t sub_1C0F09898()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for A12_V19()
{
  return &type metadata for A12_V19;
}

uint64_t sub_1C0F098F4(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0F0CB08(0, &qword_1EA1A8E20, (uint64_t (*)(void))sub_1C0F0CAB4, (uint64_t)&type metadata for A12_V19.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F0CAB4();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0F0C400(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0F09B3C(uint64_t a1)
{
  unint64_t v2 = sub_1C0F0CAB4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F09B78(uint64_t a1)
{
  unint64_t v2 = sub_1C0F0CAB4();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0F09BB4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0F0C804(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0F09BFC(void *a1)
{
  return sub_1C0F098F4(a1);
}

uint64_t sub_1C0F09C14()
{
  sub_1C0F0C538();
  return sub_1C151798C();
}

uint64_t sub_1C0F09C90@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0F0CB08(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0F09D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v46 = a3;
  uint64_t v49 = sub_1C151635C();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  char v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v58 = a1;
  sub_1BFF1AFA4(a1, v50, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v54 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v47 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  uint64_t v67 = &type metadata for A12_V19;
  unint64_t v20 = sub_1C0186584();
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v22;
  uint64_t v63 = 95;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 45;
  unint64_t v62 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  __n128 v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v47;
  *__n128 v26 = v48;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v65, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  uint64_t v29 = (uint64_t)v53;
  sub_1BFF2389C(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v30, 0, 1, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  sub_1BFFFC630(v17, v18);
  uint64_t v67 = &type metadata for A12_V19;
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  uint64_t v31 = v29;
  sub_1BFF1AFA4(v55, v29, (uint64_t (*)(void))v54);
  sub_1C001930C(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v33 = (void *)(v32 + 16);
  swift_beginAccess();
  uint64_t v34 = *(void **)(v32 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v32 + 16) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v34 = sub_1BFFB83AC(0, v34[2] + 1, 1, v34);
    *uint64_t v33 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v34 = sub_1BFFB83AC((void *)(v36 > 1), v37 + 1, 1, v34);
    *uint64_t v33 = v34;
  }
  v34[2] = v37 + 1;
  uint64_t v38 = &v34[2 * v37];
  v38[4] = sub_1C064667C;
  v38[5] = 0;
  swift_endAccess();
  uint64_t v39 = v69;
  uint64_t v40 = sub_1C001E608((uint64_t)&unk_1F1B83648, 0, 0, v32, 0, 0, 0, 0);
  if (v39)
  {
    swift_release();
    swift_release();
    sub_1BFF1F284(v31, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  }
  else
  {
    uint64_t v42 = v40;
    swift_release();
    uint64_t v43 = type metadata accessor for A12_V19.Bound();
    uint64_t v44 = v46;
    v46[3] = v43;
    v44[4] = sub_1C0F0C400(&qword_1EA1A8D90, (void (*)(uint64_t))type metadata accessor for A12_V19.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v65, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v31, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

uint64_t sub_1C0F0A3C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  *(void *)&long long v29 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  long long v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A12_V19.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v36);
  sub_1BFC66384(v9 + 56, (uint64_t)v35);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v36, inited + 16);
  sub_1BFC773DC(v35, inited + 56);
  *(double *)(inited + 96) = v11;
  v34[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v34, v40);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  double v32[2] = v2;
  void v32[3] = v40;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C0F0C448, (uint64_t)v32, v13, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v14;
  sub_1C001930C(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v16 = v15;
  sub_1C0F0C468(&qword_1EA197690);
  v28[1] = v16;
  uint64_t v17 = sub_1C151F0BC();
  uint64_t v18 = *MEMORY[0x1E4FAB6D8];
  uint64_t v19 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v29);
  uint64_t v31 = v17;
  sub_1C0F0C5F0(0, &qword_1EA1A8DB0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C1517BFC();
  long long v29 = v36;
  uint64_t v21 = v37;
  uint64_t v22 = v38;
  *(void *)&long long v36 = v14;
  *(void *)&v35[0] = v39;
  MEMORY[0x1F4188790](v20);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C0F0C468((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v23;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v24 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = v30;
  *uint64_t v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((void *)v25 + 3) = v21;
  *((void *)v25 + 4) = v22;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *((void *)v25 + 5) = v24;
  *((void *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_1C0F0A8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0F0A98C(uint64_t a1, uint64_t a2)
{
  sub_1C0F0CB08(0, &qword_1EA1A8DC8, (uint64_t (*)(void))sub_1C0F0C4E4, (uint64_t)&type metadata for A12_V19.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 12;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  double v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0F0C5F0(0, &qword_1EA1A8DD0, MEMORY[0x1E4FAB6F0]);
  sub_1C0F0C5AC(&qword_1EA1A8DD8, &qword_1EA1A8DD0, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C0F0AB78(uint64_t a1, uint64_t a2)
{
  sub_1C0F0CB08(0, &qword_1EA1A8DC8, (uint64_t (*)(void))sub_1C0F0C4E4, (uint64_t)&type metadata for A12_V19.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v20 - v7);
  uint64_t v28 = a2;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = sub_1C151729C();
    unsigned int v25 = *MEMORY[0x1E4FAB4E8];
    uint64_t v26 = v10;
    uint64_t v24 = v10 - 8;
    unsigned int v23 = *MEMORY[0x1E4FAB940];
    uint64_t v21 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v22 = (void (**)(uint64_t *, void, uint64_t))(v6 + 104);
    HIDWORD(v20) = *MEMORY[0x1E4FAB9E0];
    swift_bridgeObjectRetain();
    uint64_t v30 = a1;
    uint64_t v11 = 0;
    uint64_t v27 = v9;
    do
    {
      uint64_t v29 = *(void *)(v28 + 8 * v11++ + 32);
      uint64_t v31 = v30;
      uint64_t v12 = v26;
      uint64_t v13 = swift_allocBox();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, v25, v12);
      *uint64_t v8 = v13;
      uint64_t v15 = (uint64_t (*)(uint64_t *, void, uint64_t))*v22;
      (*v22)(v8, v23, v5);
      uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0F0C5F0(0, &qword_1EA1A8DE0, MEMORY[0x1E4FAB4D0]);
      sub_1C0F0C5AC(&qword_1EA1A8DE8, &qword_1EA1A8DE0, v16);
      swift_bridgeObjectRetain();
      sub_1C151738C();
      uint64_t v17 = *v21;
      (*v21)(v8, v5);
      uint64_t v31 = v30;
      uint64_t v18 = v15(v8, HIDWORD(v20), v5);
      MEMORY[0x1F4188790](v18);
      sub_1C151731C();
      uint64_t v19 = v27;
      v17(v8, v5);
      swift_bridgeObjectRelease();
    }
    while (v19 != v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1C0F0AEBC(uint64_t a1, uint64_t a2)
{
  sub_1C0F0CB08(0, &qword_1EA1A8DC8, (uint64_t (*)(void))sub_1C0F0C4E4, (uint64_t)&type metadata for A12_V19.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  uint64_t v19 = a2;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v11 = v19 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v18 = *(void *)(v10 + 72);
    unsigned int v17 = *MEMORY[0x1E4FABA10];
    uint64_t v15 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v16 = (uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v20 = a1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 6;
      *uint64_t v8 = v12;
      uint64_t v13 = (*v16)(v8, v17, v5);
      MEMORY[0x1F4188790](v13);
      uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0F0C5F0(0, &qword_1EA1A8DE0, MEMORY[0x1E4FAB4D0]);
      sub_1C0F0C5AC(&qword_1EA1A8DE8, &qword_1EA1A8DE0, v14);
      sub_1C151734C();
      (*v15)(v8, v5);
      v11 += v18;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0F0B198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a2;
  uint64_t v5 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v36 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0F0CB08(0, &qword_1EA1A8DC8, (uint64_t (*)(void))sub_1C0F0C4E4, (uint64_t)&type metadata for A12_V19.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (uint64_t *)((char *)&v35 - v14);
  uint64_t v40 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0x4060E00000000000;
  *uint64_t v15 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB958], v12);
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v39 = v13;
  uint64_t v37 = KeyPath;
  if (v18)
  {
    uint64_t v19 = a3;
    uint64_t v35 = v12;
    uint64_t v20 = a3 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    uint64_t v21 = *(void *)(v36 + 72);
    uint64_t v36 = v19;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BFF1AFA4(v20, (uint64_t)v7, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v22 = *(void *)&v7[*(int *)(v5 + 20) + 32];
      sub_1BFF1F284((uint64_t)v7, type metadata accessor for HeadlineViewLayout.Context);
      if ((v22 & 4) == 0) {
        break;
      }
      v20 += v21;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = qword_1F1B8A0D0;
LABEL_7:
    uint64_t v12 = v35;
  }
  unsigned int v23 = (char *)v10 + v8[5];
  uint64_t v24 = *MEMORY[0x1E4FAB8C8];
  uint64_t v25 = sub_1C1517A7C();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  uint64_t v27 = (void *)*MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v18;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  double v28 = *MEMORY[0x1E4FB2848];
  double v29 = *(double *)(MEMORY[0x1E4FB2848] + 8);
  double v30 = *(double *)(MEMORY[0x1E4FB2848] + 16);
  double v31 = *(double *)(MEMORY[0x1E4FB2848] + 24);
  id v32 = v27;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v38, (uint64_t)v10, v28, v29, v30, v31);
  sub_1BFF1F284((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v33 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0F0C5F0(0, &qword_1EA1A8DE0, MEMORY[0x1E4FAB4D0]);
  sub_1C0F0C5AC(&qword_1EA1A8DE8, &qword_1EA1A8DE0, v33);
  sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v39 + 8))(v15, v12);
}

uint64_t sub_1C0F0B64C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V19.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0F0B73C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0F09D4C(a1, a2, a3);
}

uint64_t sub_1C0F0B754()
{
  return sub_1C12BC31C();
}

unint64_t sub_1C0F0B764(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0F0B794();
  unint64_t result = sub_1C0F0B7E8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F0B794()
{
  unint64_t result = qword_1EA1A8D80;
  if (!qword_1EA1A8D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D80);
  }
  return result;
}

unint64_t sub_1C0F0B7E8()
{
  unint64_t result = qword_1EA1A8D88;
  if (!qword_1EA1A8D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8D88);
  }
  return result;
}

uint64_t type metadata accessor for A12_V19.Bound()
{
  uint64_t result = qword_1EA1A8D98;
  if (!qword_1EA1A8D98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C0F0B888(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F284((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    double v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F284(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    double v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0F0BD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F284((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F284(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0F0C178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F0C18C);
}

uint64_t sub_1C0F0C18C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0F0C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F0C250);
}

void *sub_1C0F0C250(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F0C2F8()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0F0C3A8(uint64_t a1)
{
  uint64_t result = sub_1C0F0C400(&qword_1EA1A8DA8, (void (*)(uint64_t))type metadata accessor for A12_V19.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F0C400(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F0C448@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0F0A8B4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C0F0C468(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C001930C(255, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F0C4DC(uint64_t a1)
{
  return sub_1C0F0A98C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0F0C4E4()
{
  unint64_t result = qword_1EA1A8DB8;
  if (!qword_1EA1A8DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8DB8);
  }
  return result;
}

unint64_t sub_1C0F0C538()
{
  unint64_t result = qword_1EA1A8DC0;
  if (!qword_1EA1A8DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8DC0);
  }
  return result;
}

uint64_t sub_1C0F0C58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0F0B64C(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0F0C594()
{
  return swift_deallocObject();
}

void sub_1C0F0C5A4(uint64_t a1)
{
  sub_1C0F0AB78(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0F0C5AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F0C5F0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0F0C5F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V19.Layout;
    v8[1] = &type metadata for A12_V19.Layout.Attributes;
    _OWORD v8[2] = sub_1C0F0C4E4();
    uint64_t v8[3] = sub_1C0F0C538();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0F0C674(uint64_t a1)
{
  sub_1C0F0AEBC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0F0C67C(uint64_t a1)
{
  return sub_1C0F0B198(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for A12_V19.Layout.Attributes()
{
  return &type metadata for A12_V19.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V19.Layout()
{
  return &type metadata for A12_V19.Layout;
}

unint64_t sub_1C0F0C6A8()
{
  unint64_t result = qword_1EA1A8DF0;
  if (!qword_1EA1A8DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8DF0);
  }
  return result;
}

unint64_t sub_1C0F0C700()
{
  unint64_t result = qword_1EA1A8DF8;
  if (!qword_1EA1A8DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8DF8);
  }
  return result;
}

unint64_t sub_1C0F0C758()
{
  unint64_t result = qword_1EA1A8E00;
  if (!qword_1EA1A8E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E00);
  }
  return result;
}

unint64_t sub_1C0F0C7B0()
{
  unint64_t result = qword_1EA1A8E08;
  if (!qword_1EA1A8E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E08);
  }
  return result;
}

uint64_t sub_1C0F0C804@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0F0CB08(0, &qword_1EA1A8E10, (uint64_t (*)(void))sub_1C0F0CAB4, (uint64_t)&type metadata for A12_V19.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F0CAB4();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0F0C400(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  uint64_t v10[4] = v15;
  return result;
}

unint64_t sub_1C0F0CAB4()
{
  unint64_t result = qword_1EA1A8E18;
  if (!qword_1EA1A8E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E18);
  }
  return result;
}

void sub_1C0F0CB08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for A12_V19.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F0CC3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V19.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V19.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0F0CC78()
{
  unint64_t result = qword_1EA1A8E28;
  if (!qword_1EA1A8E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E28);
  }
  return result;
}

unint64_t sub_1C0F0CCD0()
{
  unint64_t result = qword_1EA1A8E30;
  if (!qword_1EA1A8E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E30);
  }
  return result;
}

unint64_t sub_1C0F0CD28()
{
  unint64_t result = qword_1EA1A8E38;
  if (!qword_1EA1A8E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E38);
  }
  return result;
}

uint64_t sub_1C0F0CD7C(uint64_t a1, uint64_t a2)
{
  return static OfflineModelProviding.poorConnection.getter(a1, a2);
}

uint64_t static OfflineModelProviding.poorConnection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C0F0CDC8@<X0>(void *a1@<X8>)
{
  return static OfflineModelProviding.unsupportedRegion.getter(a1);
}

uint64_t static OfflineModelProviding.unsupportedRegion.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA194898 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA1A61D0;
  uint64_t v3 = qword_1EA1A61D8;
  uint64_t v4 = unk_1EA1A61E0;
  uint64_t v5 = qword_1EA1A61E8;
  uint64_t v6 = unk_1EA1A61F0;
  uint64_t v7 = qword_1EA1A61F8;
  *a1 = qword_1EA1A61C8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of static OfflineModelProviding.deviceOffline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static OfflineModelProviding.poorConnection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static OfflineModelProviding.serverProblem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static OfflineModelProviding.updateRequired.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static OfflineModelProviding.deviceObsoletion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static OfflineModelProviding.unsupportedRegion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1C0F0CF00@<X0>(void *a1@<X8>)
{
  if (qword_1EB8612C0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EB93C368;
  uint64_t v3 = qword_1EB93C370;
  uint64_t v4 = unk_1EB93C378;
  uint64_t v5 = qword_1EB93C380;
  uint64_t v6 = unk_1EB93C388;
  uint64_t v7 = qword_1EB93C390;
  *a1 = qword_1EB93C360;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F0CFA8@<X0>(void *a1@<X8>)
{
  if (qword_1EA194C60 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA2B5570;
  uint64_t v3 = qword_1EA2B5578;
  uint64_t v4 = unk_1EA2B5580;
  uint64_t v5 = qword_1EA2B5588;
  uint64_t v6 = unk_1EA2B5590;
  uint64_t v7 = qword_1EA2B5598;
  *a1 = qword_1EA2B5568;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C0F0D73C(a2);
  FormatResetNode.bindChildren(binder:context:)(a1, v3);
  return swift_release();
}

uint64_t FormatResetNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatResetNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.regexSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatResetNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatResetNode.regexSelectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.regexSelectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatResetNode.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.children.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatResetNode.__allocating_init(identifier:selectors:regexSelectors:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = (void *)swift_allocObject();
  swift_beginAccess();
  void v10[2] = a1;
  v10[3] = a2;
  swift_beginAccess();
  uint64_t v10[4] = a3;
  swift_beginAccess();
  void v10[5] = a4;
  swift_beginAccess();
  v10[6] = a5;
  return v10;
}

void *FormatResetNode.init(identifier:selectors:regexSelectors:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  v5[2] = a1;
  v5[3] = a2;
  swift_beginAccess();
  v5[4] = a3;
  swift_beginAccess();
  v5[5] = a4;
  swift_beginAccess();
  v5[6] = a5;
  return v5;
}

uint64_t FormatResetNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatResetNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0F0D60C(void *a1)
{
  return FormatResetNode.encode(to:)(a1);
}

uint64_t sub_1C0F0D630(void **a1, void **a2)
{
  return _s8NewsFeed15FormatResetNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0F0D63C(uint64_t a1)
{
  sub_1C1517EFC();
  uint64_t v2 = *(void *)(*(void *)(v9 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 16) + 16))
  {
    uint64_t v8 = *(void *)(v9 + 56);
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1BFEF3B08(v3);
    sub_1BFEF3808(v4);
    swift_release();
    uint64_t v5 = v8;
  }
  else
  {
    uint64_t v5 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v6 = sub_1C0F0DC08(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    a1 = sub_1BFF1B2E4(v6, 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t sub_1C0F0D73C(uint64_t a1)
{
  sub_1C1517EFC();
  uint64_t v2 = *(void *)(*(void *)(v8[0] + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 16) + 16))
  {
    v8[0] = *(void *)(v8[0] + 56);
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1BFEF3B08(v3);
    sub_1BFEF3808(v4);
    swift_release();
    unint64_t v5 = v8[0];
  }
  else
  {
    unint64_t v5 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v6 = sub_1C0F0DC08(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    memset(v16, 0, sizeof(v16));
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    memset(v13, 0, sizeof(v13));
    v8[0] = 0;
    v8[1] = 0;
    _OWORD v8[2] = 1;
    long long v9 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    uint64_t v12 = 0;
    a1 = sub_1C0EC66B4(0, 0, MEMORY[0x1E4FBC860], v6, 1, 0, 0, MEMORY[0x1E4FBC860], (uint64_t *)v16, (uint64_t)v14, (uint64_t *)v13, v8);
    swift_bridgeObjectRelease();
    sub_1C0F0E56C((uint64_t)v14, (uint64_t (*)(void))sub_1C0C397C8);
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t sub_1C0F0D8C0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0F0E524(&qword_1EA1A8E40, a2, (void (*)(uint64_t))type metadata accessor for FormatResetNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F0D918(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0F0E524(&qword_1EB8878E8, a2, (void (*)(uint64_t))type metadata accessor for FormatResetNode);
  a1[2] = sub_1C0F0E524(&qword_1EB865BC8, v3, (void (*)(uint64_t))type metadata accessor for FormatResetNode);
  uint64_t result = sub_1C0F0E524(&qword_1EA1A8E48, v4, (void (*)(uint64_t))type metadata accessor for FormatResetNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F0D9C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0F0E524(&qword_1EA1A8E50, a2, (void (*)(uint64_t))type metadata accessor for FormatResetNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F0DA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C0F0D73C(a2);
  FormatResetNode.bindChildren(binder:context:)(a1, v3);
  return swift_release();
}

uint64_t sub_1C0F0DA78(uint64_t a1)
{
  return sub_1C05C0A5C(a1);
}

uint64_t sub_1C0F0DA9C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F0DAEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F0DB3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F0DB8C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatResetNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatResetNode);
}

uint64_t dispatch thunk of FormatResetNode.__allocating_init(identifier:selectors:regexSelectors:children:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C0F0DC08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatRegex();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v27 - v8;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 32);
  unint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    if (v11 <= *(void *)(a1 + 16) >> 3)
    {
      uint64_t v29 = a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0A8BCFC(v10);
      swift_bridgeObjectRelease();
      uint64_t v12 = v29;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1BFC63BD0(v10, a1);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(v1 + 40) + 16)) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = a1;
  }
  swift_beginAccess();
  uint64_t v13 = *(void *)(v2 + 40);
  if (!*(void *)(v13 + 16))
  {
LABEL_30:
    if ((sub_1BFEFAE14(v12, a1) & 1) == 0) {
      return v12;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v27 = a1;
  uint64_t v14 = v13 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v13 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v22 = v21 | (v20 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v18) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v14 + 8 * v20);
    if (!v25) {
      break;
    }
LABEL_24:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_12:
    sub_1C0F0E0DC(*(void *)(v13 + 48) + *(void *)(v28 + 72) * v22, (uint64_t)v9);
    uint64_t v23 = sub_1BFCC0818((uint64_t)v9, (uint64_t)v6);
    MEMORY[0x1F4188790](v23);
    *(&v27 - 2) = (uint64_t)v6;
    uint64_t v12 = sub_1C0F0E160((uint64_t)sub_1C0F0E140, (uint64_t)(&v27 - 4), v12);
    uint64_t result = sub_1C0F0E56C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRegex);
  }
  int64_t v26 = v20 + 1;
  if (v20 + 1 >= v18) {
    goto LABEL_29;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (v25) {
    goto LABEL_23;
  }
  int64_t v26 = v20 + 2;
  if (v20 + 2 >= v18) {
    goto LABEL_29;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (v25) {
    goto LABEL_23;
  }
  int64_t v26 = v20 + 3;
  if (v20 + 3 >= v18)
  {
LABEL_29:
    swift_release();
    a1 = v27;
    goto LABEL_30;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (v25)
  {
LABEL_23:
    int64_t v20 = v26;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v20 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v20 >= v18) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v14 + 8 * v20);
    ++v26;
    if (v25) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

BOOL sub_1C0F0DF68(void *a1)
{
  sub_1C0F0E4F0(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1[1];
  v9[0] = *a1;
  v9[1] = v5;
  type metadata accessor for FormatRegex();
  sub_1BFC82330(0);
  sub_1C0180128();
  sub_1C0F0E524((unint64_t *)&qword_1EB862998, 255, sub_1BFC82330);
  sub_1C151E4FC();
  sub_1C0C38DA8(0);
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) == 1;
  sub_1C0F0E56C((uint64_t)v4, (uint64_t (*)(void))sub_1C0F0E4F0);
  return v7;
}

uint64_t sub_1C0F0E0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatRegex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1C0F0E140(void *a1)
{
  return sub_1C0F0DF68(a1);
}

uint64_t sub_1C0F0E160(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(void *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_1C0F0E2E4((uint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = sub_1C0F0E2E4((uint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x1C18C9B00](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1C0F0E2E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  int64_t v20 = (unint64_t *)result;
  int64_t v7 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v12 = v11 | (v7 << 6);
LABEL_17:
    uint64_t v16 = (void *)(*(void *)(a3 + 48) + 16 * v12);
    uint64_t v17 = v16[1];
    v23[0] = *v16;
    v23[1] = v17;
    swift_bridgeObjectRetain();
    char v18 = a4(v23);
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      return result;
    }
    if (v18)
    {
      *(unint64_t *)((char *)v20 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = __OFADD__(v21++, 1);
      if (v13) {
        goto LABEL_30;
      }
    }
  }
  BOOL v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v7);
  if (v14)
  {
LABEL_16:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v15 = v7 + 1;
  if (v7 + 1 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v7 + 2;
  if (v7 + 2 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_26:
    swift_retain();
    return sub_1BFEFB580(v20, a2, v21, a3);
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_15:
    int64_t v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v24) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v22 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0F0E4F0(uint64_t a1)
{
}

uint64_t sub_1C0F0E524(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F0E56C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0F0E5D0(void *a1)
{
  return FormatResize.encode(to:)(a1);
}

uint64_t _s8NewsFeed12FormatResizeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 16);
  uint64_t v3 = *(void *)(*(void *)a2 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C00ACCAC(v4, v5);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_1C0F0E6B4(uint64_t a1)
{
  unint64_t result = sub_1C0F0E6DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F0E6DC()
{
  unint64_t result = qword_1EA1A8E58;
  if (!qword_1EA1A8E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E58);
  }
  return result;
}

unint64_t sub_1C0F0E730(void *a1)
{
  a1[1] = sub_1BFE3CEF4();
  a1[2] = sub_1C08E98C8();
  unint64_t result = sub_1C0F0E768();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F0E768()
{
  unint64_t result = qword_1EA1A8E60;
  if (!qword_1EA1A8E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E60);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatResize()
{
  return &type metadata for FormatResize;
}

uint64_t sub_1C0F0E7CC@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v32 = v6;
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = v33;
  MEMORY[0x1F4188790](v6);
  uint64_t v35 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v11;
  long long v13 = a1[3];
  long long v43 = a1[2];
  long long v12 = v43;
  long long v44 = v13;
  long long v45 = a1[4];
  long long v14 = v45;
  uint64_t v46 = *((void *)a1 + 10);
  long long v16 = a1[1];
  long long v41 = *a1;
  long long v15 = v41;
  long long v42 = v16;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  *(void *)(a3 + 80) = v46;
  *(_OWORD *)(a3 + 32) = v12;
  *(_OWORD *)(a3 + 48) = v13;
  *(_OWORD *)(a3 + 64) = v14;
  *(_OWORD *)a3 = v15;
  *(_OWORD *)(a3 + 16) = v16;
  sub_1BFC66384(a2, a3 + 88);
  sub_1BFC66384(a2, (uint64_t)v38);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v11, 1, 1, v6);
  uint64_t v17 = swift_allocObject();
  long long v18 = v44;
  *(_OWORD *)(v17 + 48) = v43;
  *(_OWORD *)(v17 + 64) = v18;
  *(_OWORD *)(v17 + 80) = v45;
  *(void *)(v17 + 96) = v46;
  long long v19 = v42;
  *(_OWORD *)(v17 + 16) = v41;
  *(_OWORD *)(v17 + 32) = v19;
  sub_1C0F10A38();
  int64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = 0xC04E000000000000;
  uint64_t v22 = v39;
  uint64_t v21 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  uint64_t v23 = *((void *)&v43 + 1);
  long long v25 = v44;
  uint64_t v24 = v45;
  uint64_t v31 = *(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))(v21 + 8);
  sub_1C0641DF8((uint64_t)&v41);
  sub_1C0641DF8((uint64_t)&v41);
  int64_t v26 = (void *)v31(v23, v25, *((void *)&v25 + 1), v24, v22, v21);
  sub_1C0641D4C((uint64_t)&v41);
  *(void *)&v20[*(void *)(*(void *)v20 + 120)] = v26;
  *(void *)&v20[*(void *)(*(void *)v20 + 136)] = v26;
  id v27 = v26;
  uint64_t v28 = v35;
  sub_1C151630C();
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v20[*(void *)(*(void *)v20 + 128)], v28, v32);
  LOBYTE(v23) = objc_msgSend(self, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v20[qword_1EB8739C0] = v23;
  sub_1BFCB311C((uint64_t)v34, (uint64_t)&v20[qword_1EB8739C8]);
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = sub_1C0F10A30;
  v29[3] = v17;
  v29[4] = v27;
  *((void *)v20 + 3) = sub_1C0F10AE0;
  *((void *)v20 + 4) = v29;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v36);
  *(void *)(v37 + 128) = v20;
  return result;
}

uint64_t GapOfflineViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t GapOfflineViewLayout.offlineLabelFrame.getter()
{
  return swift_retain();
}

double GapOfflineViewLayout.Attributes.frame.getter()
{
  return *(double *)v0;
}

double GapOfflineViewLayout.Attributes.offlineLabelFrame.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1C0F0EB64()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_1C0F0EBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0F10684(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0F0EBC8(uint64_t a1)
{
  unint64_t v2 = sub_1C0F0EE68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F0EC04(uint64_t a1)
{
  unint64_t v2 = sub_1C0F0EE68();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GapOfflineViewLayout.Attributes.encode(to:)(void *a1)
{
  sub_1C0F108AC(0, &qword_1EA1A8E68, (uint64_t (*)(void))sub_1C0F0EE68, (uint64_t)&type metadata for GapOfflineViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  long long v16 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v11 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v13 = *((void *)v1 + 6);
  uint64_t v14 = *((void *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F0EE68();
  sub_1C1520F0C();
  long long v17 = v16;
  uint64_t v18 = v9;
  uint64_t v19 = v10;
  char v20 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE131FC(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&long long v17 = v11;
    *((void *)&v17 + 1) = v12;
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    char v20 = 1;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C0F0EE68()
{
  unint64_t result = qword_1EB86F5B8;
  if (!qword_1EB86F5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5B8);
  }
  return result;
}

uint64_t GapOfflineViewLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v17 = a2;
  sub_1C0F108AC(0, &qword_1EB86F698, (uint64_t (*)(void))sub_1C0F0EE68, (uint64_t)&type metadata for GapOfflineViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F0EE68();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v17;
    type metadata accessor for CGRect(0);
    char v20 = 0;
    sub_1BFE131FC(&qword_1EB87A290, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v11 = v18;
    long long v12 = v19;
    char v20 = 1;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    long long v14 = v18;
    long long v15 = v19;
    *uint64_t v10 = v11;
    v10[1] = v12;
    void v10[2] = v14;
    v10[3] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0F0F118(uint64_t a1)
{
  unint64_t v2 = sub_1C0F1076C();
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C0F0F154@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return GapOfflineViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1C0F0F16C(void *a1)
{
  return GapOfflineViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1C0F0F184()
{
  sub_1C0C47AA8();
  return sub_1C151798C();
}

uint64_t GapOfflineViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t GapOfflineViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  unint64_t v9 = *(void *)(v1 + 80);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(unsigned char *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BFF7FF04(v8, v9);
}

uint64_t GapOfflineViewLayout.Context.styler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFC66384(v1 + 88, a1);
}

unint64_t sub_1C0F0F334()
{
  unint64_t result = qword_1EB86F5D8;
  if (!qword_1EB86F5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5D8);
  }
  return result;
}

unint64_t sub_1C0F0F38C()
{
  unint64_t result = qword_1EA1A8E70;
  if (!qword_1EA1A8E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E70);
  }
  return result;
}

unint64_t sub_1C0F0F3E4()
{
  unint64_t result = qword_1EB86F5F0;
  if (!qword_1EB86F5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5F0);
  }
  return result;
}

unint64_t sub_1C0F0F43C()
{
  unint64_t result = qword_1EB86F5E8;
  if (!qword_1EB86F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5E8);
  }
  return result;
}

unint64_t sub_1C0F0F494()
{
  unint64_t result = qword_1EB86F5D0;
  if (!qword_1EB86F5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5D0);
  }
  return result;
}

uint64_t sub_1C0F0F4E8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t result = (*(uint64_t (**)(void, void, void, void, uint64_t, uint64_t))(v6 + 8))(a2[5], a2[6], a2[7], a2[8], v5, v6);
  *a3 = result;
  return result;
}

uint64_t sub_1C0F0F554(uint64_t a1, uint64_t a2)
{
  sub_1C0F108AC(0, &qword_1EB86F508, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v4);
  unint64_t v9 = &v12[-v8];
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v6 + 104))(&v12[-v8], *MEMORY[0x1E4FAB9E0], v5, v7);
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0F1091C(0, &qword_1EB86F4F8, MEMORY[0x1E4FAB6F0]);
  sub_1C0F107C8(&qword_1EB86F4F0, &qword_1EB86F4F8, v10);
  sub_1C151731C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1C0F0F71C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  sub_1C0F108AC(0, &qword_1EB86F508, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  __n128 v7 = (uint64_t *)((char *)&v19 - v6);
  uint64_t v22 = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0x3FE8000000000000;
  *__n128 v7 = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB948], v4);
  sub_1C0F1081C();
  sub_1C0F108AC(0, &qword_1EB86F4E8, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  unint64_t v14 = v13 + v12;
  uint64_t v15 = *MEMORY[0x1E4FAB5F8];
  sub_1C0F108AC(0, &qword_1EB86F4E0, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E4FAB620], v10);
  uint64_t v21 = v20;
  long long v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0F1091C(0, &qword_1EB86F4D8, MEMORY[0x1E4FAB4D0]);
  sub_1C0F107C8(&qword_1EB86F4D0, &qword_1EB86F4D8, v17);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0F0FA68(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_1C151E24C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0F108AC(0, &qword_1EB86F508, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v39 - v10);
  uint64_t v48 = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4034000000000000;
  *uint64_t v11 = v12;
  uint64_t v13 = *(void (**)(void))(v9 + 104);
  unsigned int v44 = *MEMORY[0x1E4FABA08];
  uint64_t v46 = (void (*)(uint64_t *, void, uint64_t))v13;
  uint64_t v47 = v9 + 104;
  v13(v11);
  unint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0F1091C(0, &qword_1EB86F4D8, MEMORY[0x1E4FAB4D0]);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C0F107C8(&qword_1EB86F4D0, &qword_1EB86F4D8, v14);
  uint64_t v43 = v16;
  sub_1C151738C();
  uint64_t v19 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t v18 = v9 + 8;
  long long v42 = v19;
  v19(v11, v8);
  uint64_t v48 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *(void *)(v45 + 128);
  if ((*(unsigned char *)(v20 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0),
        *uint64_t v6 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBD8], v3),
        char v21 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3),
        (v21 & 1) != 0))
  {
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = *(void *)(*(void *)v20 + 136);
    uint64_t v45 = v17;
    long long v25 = *(void **)(v20 + v24);
    *(void *)(v23 + 16) = v25;
    *uint64_t v11 = v23;
    v46(v11, *MEMORY[0x1E4FAB968], v8);
    sub_1C0F1081C();
    sub_1C0F108AC(0, &qword_1EB86F4E8, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FAB678]);
    uint64_t v27 = v26;
    uint64_t v28 = *(void *)(v26 - 8);
    uint64_t v40 = a1;
    uint64_t v29 = v28;
    uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v39 = v18;
    uint64_t v31 = (v30 + 32) & ~v30;
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
    uint64_t v33 = v32 + v31;
    uint64_t v34 = *MEMORY[0x1E4FAB5F8];
    sub_1C0F108AC(0, &qword_1EB86F4E0, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FAB618]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v33, v34, v35);
    (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v33, *MEMORY[0x1E4FAB620], v27);
    sub_1BFE131FC(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v36 = v25;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v37 = v42;
    v42(v11, v8);
    uint64_t v48 = v40;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = 0x4034000000000000;
    *uint64_t v11 = v38;
    v46(v11, v44, v8);
    sub_1C151738C();
    return v37(v11, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout()
{
  return &type metadata for GapOfflineViewLayout;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout.Attributes()
{
  return &type metadata for GapOfflineViewLayout.Attributes;
}

uint64_t destroy for GapOfflineViewLayout.Context(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  return swift_release();
}

uint64_t initializeWithCopy for GapOfflineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = (void *)(a2 + 72);
  unint64_t v9 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >= 0x11)
  {
    *(void *)(a1 + 72) = *v8;
    *(void *)(a1 + 80) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
  }
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 88, a2 + 88);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GapOfflineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >= 0x11uLL)
  {
    if (v5 >= 0x11)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C01A7564(a1 + 72);
    goto LABEL_6;
  }
  if (v5 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GapOfflineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(a2 + 72);
  if (*(void *)(a1 + 80) >= 0x11uLL)
  {
    unint64_t v9 = *(void *)(a2 + 80);
    if (v9 >= 0x11)
    {
      *(void *)(a1 + 72) = *v8;
      *(void *)(a1 + 80) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C01A7564(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAdMetricsNodeLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout.Context()
{
  return &type metadata for GapOfflineViewLayout.Context;
}

unsigned char *storeEnumTagSinglePayload for GapOfflineViewLayout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F10544);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout.Attributes.CodingKeys()
{
  return &type metadata for GapOfflineViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1C0F10580()
{
  unint64_t result = qword_1EA1A8E78;
  if (!qword_1EA1A8E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E78);
  }
  return result;
}

unint64_t sub_1C0F105D8()
{
  unint64_t result = qword_1EB86F5C8;
  if (!qword_1EB86F5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5C8);
  }
  return result;
}

unint64_t sub_1C0F10630()
{
  unint64_t result = qword_1EB86F5C0;
  if (!qword_1EB86F5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5C0);
  }
  return result;
}

uint64_t sub_1C0F10684(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C162EFF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C0F1076C()
{
  unint64_t result = qword_1EA1A8E80;
  if (!qword_1EA1A8E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8E80);
  }
  return result;
}

uint64_t sub_1C0F107C0(uint64_t a1)
{
  return sub_1C0F0F71C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0F107C8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0F1091C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0F1080C()
{
  return swift_deallocObject();
}

void sub_1C0F1081C()
{
  if (!qword_1EB86F6A0)
  {
    sub_1C0F108AC(255, &qword_1EB86F4E8, (uint64_t (*)(void))sub_1C0C47A54, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86F6A0);
    }
  }
}

void sub_1C0F108AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0F10914(uint64_t a1)
{
  return sub_1C0F0FA68(a1, *(void *)(v1 + 16));
}

void sub_1C0F1091C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for GapOfflineViewLayout;
    v8[1] = &type metadata for GapOfflineViewLayout.Attributes;
    _OWORD v8[2] = sub_1C0C47A54();
    unint64_t v8[3] = sub_1C0C47AA8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0F109A0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F109D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0F10A30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0F0F4E8(a1, (void *)(v2 + 16), a2);
}

void sub_1C0F10A38()
{
  if (!qword_1EB873A58)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A1C0);
    unint64_t v0 = type metadata accessor for CachedText();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB873A58);
    }
  }
}

uint64_t sub_1C0F10AA0()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1C0F10AE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1C1393D58(a1, *(void (**)(_OWORD *__return_ptr, unsigned char *))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t FormatItemNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.options.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatItemNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 112);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatItemNode.sourceItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F10C38(unint64_t a1)
{
  unint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  swift_beginAccess();
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  swift_beginAccess();
  unint64_t v7 = v1[12];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0F49E70(v3, v4, 1, v5, v6, v7, a1, v1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatItemNode.blocks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 104);
}

uint64_t FormatItemNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatItemNode.itemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t FormatItemNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 48);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatItemNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatItemNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.styles.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.styles.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.blocks.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.blocks.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatItemNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C0F11288(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 112);
  *(void *)(v3 + 112) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatItemNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatItemNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.sourceItems.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.sourceItems.modify())()
{
  return j_j__swift_endAccess;
}

void *sub_1C0F11420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v21 = *a5;
  uint64_t v22 = *a6;
  uint64_t v24 = *a13;
  swift_beginAccess();
  _OWORD v14[2] = a1;
  void v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = v21;
  v14[7] = v22;
  swift_beginAccess();
  v14[8] = a7;
  swift_beginAccess();
  v14[9] = a8;
  swift_beginAccess();
  v14[10] = a9;
  swift_beginAccess();
  v14[11] = a10;
  swift_beginAccess();
  v14[12] = a11;
  swift_beginAccess();
  v14[13] = a12;
  swift_beginAccess();
  v14[14] = v24;
  swift_beginAccess();
  v14[15] = a14;
  return v14;
}

uint64_t FormatItemNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatItemNode.__deallocating_deinit()
{
  FormatItemNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0F11650(void *a1, void *a2)
{
  return static FormatItemNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0F1165C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9, unint64_t a10, uint64_t a11)
{
  uint64_t v49 = a8;
  uint64_t v48 = a7;
  uint64_t v65 = a5;
  sub_1BFF47094(0, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v52 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v53 = (uint64_t)&v46 - v19;
  uint64_t v51 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (int *)type metadata accessor for FormatItemNodeData();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v25 = *(void *)(a3 + 120);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v55 = a4;
  uint64_t v56 = a2;
  unint64_t v26 = sub_1C02834C0((void (*)(uint64_t *))sub_1C01742B0, (uint64_t)v54, v25);
  if (v11) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v28 = v26;
  uint64_t v46 = a11;
  uint64_t v47 = v21;
  uint64_t v29 = a6;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v48 + 24);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v57 = *(void *)(v30 + 40);
  *(void *)(v30 + 40) = 0x8000000000000000;
  uint64_t v48 = 0;
  sub_1C10660D0(v65, v29, v28, v65, v29, isUniquelyReferenced_nonNull_native);
  *(void *)(v30 + 40) = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1BFC66384(v49, (uint64_t)&v58);
  sub_1BFFF4D94(&v58, (uint64_t)v24);
  long long v32 = a9[5];
  long long v62 = a9[4];
  long long v63 = v32;
  v64[0] = a9[6];
  *(_OWORD *)((char *)v64 + 9) = *(long long *)((char *)a9 + 105);
  long long v33 = a9[3];
  long long v60 = a9[2];
  long long v61 = v33;
  long long v34 = a9[1];
  long long v58 = *a9;
  long long v59 = v34;
  uint64_t v35 = &v24[v22[7]];
  uint64_t v36 = sub_1C151AC1C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v35, v46, v36);
  uint64_t v37 = &v24[v22[5]];
  long long v38 = v63;
  *((_OWORD *)v37 + 4) = v62;
  *((_OWORD *)v37 + 5) = v38;
  *((_OWORD *)v37 + 6) = v64[0];
  *(_OWORD *)(v37 + 105) = *(_OWORD *)((char *)v64 + 9);
  long long v39 = v59;
  *(_OWORD *)uint64_t v37 = v58;
  *((_OWORD *)v37 + 1) = v39;
  long long v40 = v61;
  *((_OWORD *)v37 + 2) = v60;
  *((_OWORD *)v37 + 3) = v40;
  *(void *)&v24[v22[6]] = a10;
  long long v41 = &v24[v22[8]];
  *(void *)long long v41 = v65;
  *((void *)v41 + 1) = a6;
  *((void *)v41 + 2) = v28;
  uint64_t v42 = (uint64_t)v47;
  sub_1BFEAF8F8((uint64_t)v24, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
  uint64_t v43 = v51;
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = v53;
  sub_1BFEAF8F8(v42, v53, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v44, 0, 1, v43);
  uint64_t v45 = v52;
  sub_1BFF1F82C(v44, v52, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C025AE48((uint64_t)&v58);
  sub_1BFF45054(a10);
  sub_1BFF3D9D4(v45, v65, v29);
  swift_endAccess();
  sub_1BFF3BF2C(v44, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BFFF5894((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  return sub_1BFFF5894((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
}

uint64_t sub_1C0F11BA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a3[7];
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v12 = *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  uint64_t v11 = *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1517EFC();
  swift_beginAccess();
  uint64_t v13 = a3[13];
  swift_beginAccess();
  unint64_t v14 = a3[14];
  type metadata accessor for FormatItemNodeLayoutAttributes();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v8;
  void v15[3] = a2;
  v15[4] = v10;
  v15[5] = v12;
  v15[6] = v11;
  v15[7] = v19;
  v15[8] = v13;
  v15[9] = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *a5 = v16;
  sub_1BFE6FA30(v14);
  return swift_retain();
}

uint64_t sub_1C0F11CE0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFF7CEC(&qword_1EA1A8E88, a2, (void (*)(uint64_t))type metadata accessor for FormatItemNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F11D38(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFFF7CEC(&qword_1EB87D888, a2, (void (*)(uint64_t))type metadata accessor for FormatItemNode);
  a1[2] = sub_1BFFF7CEC(&qword_1EB85FD68, v3, (void (*)(uint64_t))type metadata accessor for FormatItemNode);
  uint64_t result = sub_1BFFF7CEC(&qword_1EA1A8E90, v4, (void (*)(uint64_t))type metadata accessor for FormatItemNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F11DE4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFF7CEC(&qword_1EA1A8E98, a2, (void (*)(uint64_t))type metadata accessor for FormatItemNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0F11E3C(unint64_t a1, void *a2)
{
  return FormatItemNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C0F11E60(unint64_t a1)
{
  return sub_1C0F10C38(a1);
}

uint64_t sub_1C0F11E84@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F11ED4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F11F24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F11F74@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F11FC4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F12014@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F12064@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 104);
  return result;
}

uint64_t sub_1C0F120AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 104) = v2;
  return result;
}

unint64_t sub_1C0F120F0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 112);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C0F12140@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatItemNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatItemNode);
}

uint64_t sub_1C0F121A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F121E0()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C0F12224(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0F1228C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a2;
  uint64_t v3 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v22 = *(void *)(v4 + 72);
    while (2)
    {
      sub_1C0F125C8(v11, (uint64_t)v6);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (__OFADD__(v19, 1)) {
            goto LABEL_23;
          }
          ++v19;
          goto LABEL_4;
        case 2u:
          uint64_t v13 = *((void *)v6 + 5);
          v17[1] = *((void *)v6 + 3);
          v17[2] = v13;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (__OFADD__(v20, 1)) {
            goto LABEL_24;
          }
          ++v20;
          goto LABEL_4;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (__OFADD__(v21, 1)) {
            goto LABEL_25;
          }
          ++v21;
          goto LABEL_4;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v12 = __OFADD__(v10++, 1);
          if (!v12) {
            goto LABEL_4;
          }
          goto LABEL_27;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v12 = __OFADD__(v9++, 1);
          if (!v12) {
            goto LABEL_4;
          }
          goto LABEL_26;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v12 = __OFADD__(v8++, 1);
          if (!v12) {
            goto LABEL_4;
          }
          __break(1u);
          break;
        default:
          if (__OFADD__(v18, 1))
          {
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            JUMPOUT(0x1C0F125ACLL);
          }
          ++v18;
          sub_1C0F1262C((uint64_t)v6);
LABEL_4:
          v11 += v22;
          if (--v7) {
            continue;
          }
          goto LABEL_21;
      }
      break;
    }
  }
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
LABEL_21:
  unint64_t v14 = (void *)v17[0];
  uint64_t v15 = v19;
  *(void *)v17[0] = v18;
  v14[1] = v15;
  uint64_t v16 = v21;
  _OWORD v14[2] = v20;
  void v14[3] = v16;
  v14[4] = v10;
  v14[5] = v9;
  v14[6] = v8;
}

uint64_t sub_1C0F125C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponseItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F1262C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsDataVisualizationResponseItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0F1268C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatFloatBinding.init(from:)(a1, a2);
}

uint64_t sub_1C0F126A4(void *a1)
{
  return FormatFloatBinding.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatFloatBindingO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  int v3 = *a2;
  int v4 = (v2 >> 5) & 3;
  if (v4)
  {
    if (v4 == 1)
    {
      int v5 = v3 & 0x60;
      BOOL v6 = ((v3 ^ v2) & 0x9F) == 0;
      return v5 == 32 && v6;
    }
    if ((v3 & 0x60) == 0x40)
    {
      if ((v2 & 0x80) != 0)
      {
        if ((v3 & 0x80) != 0 && ((v3 ^ v2) & 0x1F) == 0) {
          return 1;
        }
      }
      else if ((v3 & 0x80) == 0 && ((v3 ^ v2) & 1) == 0)
      {
        return 1;
      }
    }
    return 0;
  }
  BOOL v8 = ((v3 ^ v2) & 1) == 0;
  return (v3 & 0x60) == 0 && v8;
}

unint64_t sub_1C0F12750(uint64_t a1)
{
  unint64_t result = sub_1C0F12778();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F12778()
{
  unint64_t result = qword_1EA1A8EA0;
  if (!qword_1EA1A8EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8EA0);
  }
  return result;
}

unint64_t sub_1C0F127CC(void *a1)
{
  a1[1] = sub_1C08762D0();
  a1[2] = sub_1C08F3060();
  unint64_t result = sub_1C0F12804();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F12804()
{
  unint64_t result = qword_1EA1A8EA8;
  if (!qword_1EA1A8EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8EA8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFloatBinding(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE) {
    goto LABEL_17;
  }
  if (a2 + 242 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 242) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 242;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 242;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 242;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0xC | (*a1 >> 5) & 3) ^ 0xF;
  if (v6 >= 0xD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for FormatFloatBinding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 242 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 242) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD)
  {
    unsigned int v6 = ((a2 - 14) >> 8) + 1;
    *unint64_t result = a2 - 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F129D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * ((((-a2 >> 2) & 3) - 4 * a2) & 0xF);
        break;
    }
  }
  return result;
}

uint64_t sub_1C0F129F8(unsigned __int8 *a1)
{
  return (*a1 >> 5) & 3;
}

unsigned char *sub_1C0F12A04(unsigned char *result)
{
  *result &= 0x9Fu;
  return result;
}

unsigned char *sub_1C0F12A14(unsigned char *result, char a2)
{
  *unint64_t result = *result & 0x87 | (32 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for FormatFloatBinding()
{
  return &type metadata for FormatFloatBinding;
}

uint64_t IssueCoverImageProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double IssueCoverImageProcessorRequest.size.getter()
{
  return *(double *)(v0 + 32);
}

double IssueCoverImageProcessorRequest.scale.getter()
{
  return *(double *)(v0 + 48);
}

__n128 IssueCoverImageProcessorRequest.corners.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 72);
  __n128 result = *(__n128 *)(v1 + 56);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t IssueCoverImageProcessorRequest.assetHandles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IssueCoverImageProcessorRequest.__allocating_init(assetHandle:size:scale:corners:)(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v14 = sub_1C0F13030(v13, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v14;
}

uint64_t IssueCoverImageProcessorRequest.init(assetHandle:size:scale:corners:)(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
  uint64_t v18 = sub_1C0F12DAC(a3, a4, a5, (uint64_t)v16, a2, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v18;
}

uint64_t IssueCoverImageProcessorRequest.Corners.init(cornerRadius:roundedCorners:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  double v3 = a3;
  if (a3 > 0.0)
  {
    uint64_t v4 = result;
  }
  else
  {
    double v3 = 0.0;
    uint64_t v4 = 0;
  }
  *(double *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = a3 <= 0.0;
  return result;
}

uint64_t IssueCoverImageProcessorRequest.Corners.description.getter()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 0x657261757173;
  }
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return 0x3A3A646E756F72;
}

uint64_t IssueCoverImageProcessorRequest.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return v0;
}

uint64_t IssueCoverImageProcessorRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0F12DA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0F12DAC(double a1, double a2, double a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v19[3] = a7;
  v19[4] = a8;
  __swift_allocate_boxed_opaque_existential_0(v19);
  (*(void (**)(void))(*(void *)(a7 - 8) + 32))();
  uint64_t v15 = *a5;
  uint64_t v14 = a5[1];
  char v16 = *((unsigned char *)a5 + 16);
  sub_1C0F131C8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 0x616D497265766F63;
  *(void *)(inited + 40) = 0xEA00000000006567;
  sub_1BFC66384((uint64_t)v19, inited + 48);
  *(void *)(a6 + 80) = sub_1BFF59AB8(inited);
  sub_1BFC66384((uint64_t)v19, a6 + 88);
  *(double *)(a6 + 32) = a1;
  *(double *)(a6 + 40) = a2;
  *(double *)(a6 + 48) = a3;
  *(void *)(a6 + 56) = v15;
  *(void *)(a6 + 64) = v14;
  *(unsigned char *)(a6 + 72) = v16;
  sub_1C151A72C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  type metadata accessor for CGSize(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  if ((v16 & 1) == 0)
  {
    sub_1C151EF4C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  *(void *)(a6 + 16) = 0;
  *(void *)(a6 + 24) = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return a6;
}

uint64_t sub_1C0F13030(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a7);
  return sub_1C0F12DAC(a3, a4, a5, (uint64_t)v17, a2, v18, a7, a8);
}

uint64_t type metadata accessor for IssueCoverImageProcessorRequest()
{
  return self;
}

uint64_t method lookup function for IssueCoverImageProcessorRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IssueCoverImageProcessorRequest);
}

uint64_t dispatch thunk of IssueCoverImageProcessorRequest.__allocating_init(assetHandle:size:scale:corners:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for IssueCoverImageProcessorRequest.Corners()
{
  return &type metadata for IssueCoverImageProcessorRequest.Corners;
}

uint64_t dispatch thunk of IssueCoverImageRequestProviding.issueCoverImageRequests(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_1C0F131C8()
{
  if (!qword_1EB87A8A0)
  {
    sub_1C0065520();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A8A0);
    }
  }
}

ValueMetadata *type metadata accessor for A6_V4()
{
  return &type metadata for A6_V4;
}

uint64_t sub_1C0F13230(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFCA4380(0, &qword_1EA1A8EB0, (uint64_t (*)(void))sub_1C0065FBC, (uint64_t)&type metadata for A6_V4.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0065FBC();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C001814C(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0F13478(uint64_t a1)
{
  unint64_t v2 = sub_1C0065FBC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F134B4(uint64_t a1)
{
  unint64_t v2 = sub_1C0065FBC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0F134F0(void *a1)
{
  return sub_1C0F13230(a1);
}

uint64_t sub_1C0F13508()
{
  sub_1BFCA4504();
  return sub_1C151798C();
}

uint64_t sub_1C0F13584()
{
  return sub_1C12BC4A8();
}

uint64_t sub_1C0F13594()
{
  return swift_deallocObject();
}

uint64_t sub_1C0F135A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0F135DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C001809C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C0F13920(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  long long v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  long long v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F104((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C001809C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F104(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001809C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0F13DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C001809C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C0F14098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F104((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C001809C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F104(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001809C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0F144F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0F14508);
}

uint64_t sub_1C0F14508(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0F145B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0F145CC);
}

void *sub_1C0F145CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0F14674()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for A6_V4.Layout.Attributes()
{
  return &type metadata for A6_V4.Layout.Attributes;
}

unsigned char *storeEnumTagSinglePayload for A6_V4.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F14760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A6_V4.Layout.Attributes.CodingKeys()
{
  return &type metadata for A6_V4.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0F1479C()
{
  unint64_t result = qword_1EA1A8EB8;
  if (!qword_1EA1A8EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8EB8);
  }
  return result;
}

void FormatContentSizeCategory.groupLayoutContentSizeCategory.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = (char)*v1;
  int v3 = *v1;
  switch(v2 >> 5)
  {
    case 1:
      uint64_t v7 = (void *)**((void **)&unk_1E6417EA8 + (v2 & 0x1F));
      *(void *)a1 = v7;
      *(unsigned char *)(a1 + 8) = 1;
      id v6 = v7;
      break;
    case 2:
      uint64_t v9 = (void *)**((void **)&unk_1E6417EA8 + (v3 & 0x1F));
      *(void *)a1 = v9;
      *(unsigned char *)(a1 + 8) = 2;
      id v10 = v9;
      break;
    case 3:
      uint64_t v11 = (void *)**((void **)&unk_1E6417EA8 + (v3 & 0x1F));
      *(void *)a1 = v11;
      *(unsigned char *)(a1 + 8) = 3;
      id v12 = v11;
      break;
    case 4:
      uint64_t v13 = (void *)**((void **)&unk_1E6417EA8 + (v2 & 0x1F));
      *(void *)a1 = v13;
      *(unsigned char *)(a1 + 8) = 4;
      id v14 = v13;
      break;
    case 5:
      uint64_t v15 = (void *)**((void **)&unk_1E6417EA8 + (v2 & 0x1F));
      *(void *)a1 = v15;
      *(unsigned char *)(a1 + 8) = 5;
      id v16 = v15;
      break;
    case 6:
      if (v3 == 192)
      {
        *(void *)a1 = 0;
      }
      else
      {
        if (v3 == 193) {
          uint64_t v17 = 1;
        }
        else {
          uint64_t v17 = 2;
        }
        *(void *)a1 = v17;
      }
      *(unsigned char *)(a1 + 8) = 6;
      break;
    default:
      unsigned int v4 = (void **)*((void *)&unk_1E6417EA8 + v2);
      uint64_t v5 = *v4;
      *(void *)a1 = *v4;
      *(unsigned char *)(a1 + 8) = 0;
      id v8 = v5;
      break;
  }
}

uint64_t sub_1C0F1493C()
{
  unsigned int v1 = *v0;
  switch(v1 >> 5)
  {
    case 1u:
      char v17 = v1 & 0x1F;
      id v2 = (id)sub_1C0F65B1C(&v17);
      char v3 = sub_1C151F6AC();
      goto LABEL_6;
    case 2u:
      char v18 = v1 & 0x1F;
      id v2 = (id)sub_1C0F65B1C(&v18);
      char v3 = sub_1C151F67C();
      goto LABEL_6;
    case 3u:
      char v19 = v1 & 0x1F;
      id v2 = (id)sub_1C0F65B1C(&v19);
      char v3 = sub_1C151F69C();
      goto LABEL_6;
    case 4u:
      char v20 = v1 & 0x1F;
      sub_1C0F65B1C(&v20);
      uint64_t v5 = sub_1C151E62C();
      uint64_t v7 = v6;
      if (v5 == sub_1C151E62C() && v7 == v8) {
        char v4 = 1;
      }
      else {
        char v4 = sub_1C1520A9C();
      }
      goto LABEL_24;
    case 5u:
      char v21 = v1 & 0x1F;
      sub_1C0F65B1C(&v21);
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;
      if (v10 == sub_1C151E62C() && v12 == v13) {
        char v4 = 0;
      }
      else {
        char v4 = sub_1C1520A9C() ^ 1;
      }
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4 & 1;
    case 6u:
      if (v1 == 192)
      {
        char v4 = 1;
        return v4 & 1;
      }
      else if (v1 == 193)
      {
        return sub_1C151F6AC();
      }
      else
      {
        return sub_1C151F69C();
      }
    default:
      char v16 = *v0;
      id v2 = (id)sub_1C0F65B1C(&v16);
      char v3 = sub_1C151F68C();
LABEL_6:
      char v4 = v3;

      return v4 & 1;
  }
}

uint64_t sub_1C0F14C48(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C005322C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C005322C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0F14CD4()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C005322C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0F14D38()
{
  sub_1C005322C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F14D8C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C005322C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0F14DEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F155EC();
  *a1 = result;
  return result;
}

uint64_t sub_1C0F14E1C()
{
  return sub_1C151EB5C();
}

uint64_t FormatContentSizeCategory.description.getter()
{
  unsigned int v1 = *v0;
  switch(v1 >> 5)
  {
    case 1u:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000013;
      goto LABEL_9;
    case 2u:
      uint64_t v2 = 0x2072657461657247;
      goto LABEL_8;
    case 3u:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000016;
      goto LABEL_9;
    case 4u:
      uint64_t v2 = 0x206C61757145;
      goto LABEL_8;
    case 5u:
      uint64_t v2 = 0x6175714520746F4ELL;
      goto LABEL_8;
    case 6u:
      uint64_t v4 = 0x5841206F4ELL;
      if (v1 != 193) {
        uint64_t v4 = 0x584120796C6E4FLL;
      }
      if (v1 == 192) {
        return 7958081;
      }
      else {
        return v4;
      }
    default:
      uint64_t v2 = 0x616854207373654CLL;
LABEL_8:
      unint64_t v5 = v2;
LABEL_9:
      FormatContentSizeCategoryValue.rawValue.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return v5;
  }
}

uint64_t _s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 5)
  {
    case 1u:
      if ((v3 & 0xE0) != 0x20) {
        goto LABEL_25;
      }
      goto LABEL_13;
    case 2u:
      if ((v3 & 0xE0) == 0x40) {
        goto LABEL_13;
      }
      goto LABEL_25;
    case 3u:
      if ((v3 & 0xE0) == 0x60) {
        goto LABEL_13;
      }
      goto LABEL_25;
    case 4u:
      if ((v3 & 0xE0) == 0x80) {
        goto LABEL_13;
      }
      goto LABEL_25;
    case 5u:
      if ((v3 & 0xE0) == 0xA0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    case 6u:
      if (v2 == 192)
      {
        if (v3 == 192) {
          goto LABEL_21;
        }
      }
      else if (v2 == 193)
      {
        if (v3 == 193)
        {
LABEL_21:
          char v8 = 1;
          return v8 & 1;
        }
      }
      else if (v3 == 194)
      {
        goto LABEL_21;
      }
LABEL_25:
      char v8 = 0;
      return v8 & 1;
    default:
      if (v3 > 0x1F) {
        goto LABEL_25;
      }
LABEL_13:
      unint64_t v4 = FormatContentSizeCategoryValue.rawValue.getter();
      uint64_t v6 = v5;
      if (v4 == FormatContentSizeCategoryValue.rawValue.getter() && v6 == v7) {
        char v8 = 1;
      }
      else {
        char v8 = sub_1C1520A9C();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

unint64_t sub_1C0F15290()
{
  unint64_t result = qword_1EB884B20;
  if (!qword_1EB884B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884B20);
  }
  return result;
}

unint64_t sub_1C0F152E4()
{
  unint64_t result = qword_1EB8849B8;
  if (!qword_1EB8849B8)
  {
    sub_1BFEFF520(255, &qword_1EB8849C0, (uint64_t (*)(void))sub_1C08E57F0, (uint64_t)&type metadata for FormatContentSizeCategoryValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8849B8);
  }
  return result;
}

unint64_t sub_1C0F15374(void *a1)
{
  a1[1] = sub_1BFDCA204();
  a1[2] = sub_1BFFB47F4();
  unint64_t result = sub_1C0F153AC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F153AC()
{
  unint64_t result = qword_1EA1A8EC0;
  if (!qword_1EA1A8EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8EC0);
  }
  return result;
}

uint64_t sub_1C0F15428(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0xBF) {
    return v1 >> 5;
  }
  else {
    return (v1 & 0x1F) + 6;
  }
}

unsigned char *sub_1C0F15444(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1C0F15454(unsigned char *result, unsigned int a2)
{
  if (a2 < 6) {
    *unint64_t result = *result & 0x1F | (32 * a2);
  }
  else {
    *unint64_t result = (a2 + 26) & 0x1F | 0xC0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategory()
{
  return &type metadata for FormatContentSizeCategory;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSizeCategory.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F1555CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategory.CodingType()
{
  return &type metadata for FormatContentSizeCategory.CodingType;
}

unint64_t sub_1C0F15598()
{
  unint64_t result = qword_1EA1A8EC8;
  if (!qword_1EA1A8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8EC8);
  }
  return result;
}

uint64_t sub_1C0F155EC()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF) {
    return 15;
  }
  else {
    return v0;
  }
}

id sub_1C0F15638(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_sourceMetrics] = 0;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)&v1[v4] = v5;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_editor] = a1;
  type metadata accessor for DebugFormatFileTreeModel();
  swift_allocObject();
  swift_retain();
  unsigned int v6 = v1;
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_model] = sub_1C0D74154(a1, MEMORY[0x1E4FBC860], 1);
  sub_1C0F16A94();
  swift_retain_n();
  uint64_t v13 = sub_1C151DCBC();
  uint64_t v14 = v7;
  sub_1C0D27070();
  id v9 = objc_allocWithZone(v8);
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_fileViewController] = sub_1C151DDEC();

  v12.receiver = v6;
  v12.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151891C();
  swift_release();
  swift_release();

  swift_release();
  return v10;
}

uint64_t sub_1C0F157E8(uint64_t a1, uint64_t a2)
{
  sub_1C0F16C30(a2, (uint64_t)v4, (uint64_t (*)(void))sub_1C017F2CC);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C0F16C30((uint64_t)v4, (uint64_t)&v3, (uint64_t (*)(void))sub_1C017F2CC);
  sub_1C0A0C01C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
  swift_retain();
  return sub_1C151CF7C();
}

id sub_1C0F15960()
{
  unsigned int v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v1, sel_navigationItem);
  id v7 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
  sub_1C149EA4C(v6, (uint64_t)v7);

  Class v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_fileViewController];
  objc_msgSend(v1, sel_addChildViewController_, v8);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v9 = result;
  id result = objc_msgSend(v8, sel_view);
  if (result)
  {
    id v10 = result;
    objc_msgSend(v9, sel_addSubview_, result);

    objc_msgSend(v8, sel_didMoveToParentViewController_, v1);
    swift_retain();
    sub_1C151896C();
    swift_release();
    sub_1C151891C();
    swift_release();
    swift_retain();
    sub_1C151896C();
    swift_release();
    sub_1C151897C();
    return (id)swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C0F15BB0()
{
  return sub_1C0F15BD4();
}

uint64_t sub_1C0F15BD4()
{
  uint64_t v44 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v0 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  unsigned int v2 = (unint64_t *)((char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0F16AF4(0, (unint64_t *)&qword_1EA1A5240, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v40 = (uint64_t)&v40 - v6;
  sub_1C0F16AF4(0, &qword_1EA1A8EF8, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v40 - v8;
  uint64_t v10 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v41 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v13 = *(void *)&v50[0];
  if (!*(void *)&v50[0])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&v50[0] = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1C151CF7C();
    sub_1C017F2B4(v50);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C0F16C30((uint64_t)v50, (uint64_t)v49, (uint64_t (*)(void))sub_1C017F2CC);
    swift_retain();
    return sub_1C151CF7C();
  }
  uint64_t v42 = v0;
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v14 = *((void *)&v50[0] + 1);
  uint64_t v45 = v13;
  uint64_t v15 = swift_retain();
  uint64_t v16 = sub_1C0ED19A4(v15, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v45;
  swift_release();
  if (v16)
  {
    if (*(void *)(v16 + 16))
    {
      sub_1C0F16B50(v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v18, 1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      uint64_t v31 = v41;
      sub_1C0F16C30((uint64_t)v9, v41, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1C1118198();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      v48[0] = v32;
      swift_retain();
      sub_1C151CF7C();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1C151CF6C();
      swift_release();
      swift_release();
      sub_1C0F16C30((uint64_t)v48, (uint64_t)v49, (uint64_t (*)(void))sub_1C017F2CC);
      sub_1C0F16C30((uint64_t)v49, (uint64_t)v50, (uint64_t (*)(void))sub_1C017F2CC);
      if (sub_1C0263AB8((uint64_t)v50) == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1C0F16C30((uint64_t)v49, (uint64_t)v48, (uint64_t (*)(void))sub_1C017F2CC);
        swift_retain();
        sub_1C151CF7C();
      }
      else
      {
        uint64_t v34 = *(void *)(v31 + *(int *)(v10 + 28));
        if (*(void *)(v34 + 16))
        {
          long long v35 = v50[0];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v36 = sub_1BFEF2D8C(v35, *((uint64_t *)&v35 + 1));
          if (v37)
          {
            uint64_t v38 = v42;
            uint64_t v39 = v40;
            sub_1C0F16B50(*(void *)(v34 + 56) + *(void *)(v42 + 72) * v36, v40, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v44);
          }
          else
          {
            uint64_t v39 = v40;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v40, 1, 1, v44);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v39 = v40;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v40, 1, 1, v44);
        }
        memset(v46, 0, 32);
        memset(v47, 0, 40);
        sub_1C017ED10(v39, v46, v47, (uint64_t)v48);
        sub_1C0F16C30((uint64_t)v48, (uint64_t)v47, (uint64_t (*)(void))sub_1C017F2CC);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1C0F16C30((uint64_t)v47, (uint64_t)v46, (uint64_t (*)(void))sub_1C017F2CC);
        swift_retain();
        sub_1C151CF7C();
        sub_1C0A0C01C(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
      }
      swift_release();
      return sub_1C0F16C98(v31, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
    }
    sub_1C0F16BB8((uint64_t)v9);
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C1118198();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&v50[0] = v20;
  swift_retain();
  sub_1C151CF7C();
  uint64_t v21 = *(void *)(v17 + 24);
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    swift_bridgeObjectRetain();
LABEL_22:
    uint64_t v33 = v43;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v43, 1, 1, v44);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t v23 = v42;
  uint64_t v24 = v21 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
  uint64_t v41 = v21;
  swift_bridgeObjectRetain_n();
  uint64_t v25 = *(void *)(v23 + 72);
  for (uint64_t i = v22 - 1; ; --i)
  {
    sub_1C0F16B50(v24, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    unint64_t v27 = *v2;
    unint64_t v28 = v2[1];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_1C151CF6C();
    swift_release();
    swift_release();
    sub_1C0F16C30((uint64_t)v48, (uint64_t)v49, (uint64_t (*)(void))sub_1C017F2CC);
    sub_1C0F16C30((uint64_t)v49, (uint64_t)v50, (uint64_t (*)(void))sub_1C017F2CC);
    if (sub_1C0263AB8((uint64_t)v50) == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    long long v29 = *(_OWORD *)v48;
    sub_1C0F16C30((uint64_t)v48, (uint64_t)v47, (uint64_t (*)(void))sub_1C017F2CC);
    swift_bridgeObjectRetain();
    sub_1C0A0C01C(v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
    if (__PAIR128__(v28, v27) == v29) {
      break;
    }
    char v30 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_26;
    }
LABEL_16:
    sub_1C0F16C98((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    if (!i)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    v24 += v25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v33 = v43;
  sub_1C0F16C30((uint64_t)v2, v43, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v33, 0, 1, v44);
  swift_bridgeObjectRelease();
LABEL_27:
  memset(v48, 0, 32);
  memset(v49, 0, 40);
  sub_1C017ED10(v33, v48, v49, (uint64_t)v50);
  sub_1C0F16C30((uint64_t)v50, (uint64_t)v49, (uint64_t (*)(void))sub_1C017F2CC);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C0F16C30((uint64_t)v49, (uint64_t)v48, (uint64_t (*)(void))sub_1C017F2CC);
  swift_retain();
  sub_1C151CF7C();
  return swift_release();
}

uint64_t type metadata accessor for DebugFormatFileViewController()
{
  return self;
}

uint64_t sub_1C0F168B4()
{
  id v1 = objc_msgSend(*v0, sel_toolbarItems);
  if (!v1) {
    return 0;
  }
  unsigned int v2 = v1;
  sub_1C03E7D9C();
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

uint64_t sub_1C0F1691C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C151CF6C();
  swift_release();
  swift_release();
  sub_1C0F16C30((uint64_t)&v3, (uint64_t)v4, (uint64_t (*)(void))sub_1C017F2CC);
  return sub_1C0F16C30((uint64_t)v4, a1, (uint64_t (*)(void))sub_1C017F2CC);
}

uint64_t sub_1C0F169D0(uint64_t a1)
{
  sub_1C0F16C30(a1, (uint64_t)v3, (uint64_t (*)(void))sub_1C017F2CC);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C0F16C30((uint64_t)v3, (uint64_t)&v2, (uint64_t (*)(void))sub_1C017F2CC);
  sub_1C0A0C01C(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
  swift_retain();
  return sub_1C151CF7C();
}

unint64_t sub_1C0F16A94()
{
  unint64_t result = qword_1EA1A63D8;
  if (!qword_1EA1A63D8)
  {
    type metadata accessor for DebugFormatFileTreeModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A63D8);
  }
  return result;
}

void sub_1C0F16AF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0F16B50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F16BB8(uint64_t a1)
{
  sub_1C0F16AF4(0, &qword_1EA1A8EF8, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0F16C30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F16C98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0F16CF8(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0F18020(0, &qword_1EA1A8F00, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F17FCC();
  sub_1C1520F0C();
  LOBYTE(v19) = 0;
  sub_1BFF0A354();
  sub_1BFEBF42C(&qword_1EA1A8F08, (void (*)(uint64_t))sub_1BFF0A354);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SportsDataConfiguration();
    uint64_t v11 = *(void *)(v3 + *(int *)(v10 + 20));
    if (*(void *)(v11 + 16))
    {
      uint64_t v17 = v10;
      char v20 = 1;
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      uint64_t v18 = v12;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v18);
      swift_release();
      uint64_t v19 = (uint64_t)v18;
      sub_1C0F180F0();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v17;
    }
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    if (*(void *)(v13 + 16))
    {
      char v20 = 2;
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_1C00B1278(v13);
      swift_bridgeObjectRelease();
      uint64_t v18 = (void *)v14;
      swift_retain();
      sub_1C0F18084((uint64_t *)&v18);
      swift_release();
      uint64_t v19 = (uint64_t)v18;
      sub_1C0F180F0();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EA1A8178);
      sub_1C0F18164();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0F17054@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  sub_1C0F17E4C();
  uint64_t v42 = v3;
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v39 = v5;
  uint64_t v36 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF0A354();
  uint64_t v8 = v7;
  uint64_t v41 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v44 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F18020(0, &qword_1EB86B680, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = type metadata accessor for SportsDataConfiguration();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0F17FCC();
  uint64_t v17 = v45;
  sub_1C1520EBC();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33 = v14;
  uint64_t v34 = v16;
  uint64_t v18 = v41;
  uint64_t v19 = v42;
  uint64_t v45 = a1;
  uint64_t v20 = v43;
  char v50 = 0;
  sub_1BFEBF42C(&qword_1EB863DE0, (void (*)(uint64_t))sub_1BFF0A354);
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v34, v44, v8);
  char v49 = 1;
  char v22 = sub_1C152071C();
  uint64_t v44 = v13;
  if (v22)
  {
    char v46 = 1;
    sub_1BFEBF42C(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v24 = v38;
    uint64_t v23 = v39;
    sub_1C15206EC();
    uint64_t v25 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v23);
  }
  else
  {
    uint64_t v25 = MEMORY[0x1E4FBC870];
  }
  uint64_t v26 = v20;
  uint64_t v27 = (uint64_t)v34;
  *(void *)&v34[*(int *)(v33 + 20)] = v25;
  char v48 = 2;
  if (sub_1C152071C())
  {
    char v47 = 2;
    sub_1BFEBF42C(&qword_1EB863BA8, (void (*)(uint64_t))sub_1C0F17E4C);
    unint64_t v28 = v37;
    sub_1C15206EC();
    uint64_t v29 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v19);
    uint64_t v30 = (uint64_t)v45;
    uint64_t v31 = v40;
    uint64_t v27 = (uint64_t)v34;
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC870];
    uint64_t v30 = (uint64_t)v45;
    uint64_t v31 = v40;
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v44, v11);
  *(void *)(v27 + *(int *)(v33 + 24)) = v29;
  sub_1C0250AE4(v27, v26);
  __swift_destroy_boxed_opaque_existential_1(v30);
  return sub_1C0250B48(v27);
}

uint64_t sub_1C0F17640()
{
  unint64_t v1 = 0x64656C6261736964;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x70614D6465626D65;
  }
}

uint64_t sub_1C0F176B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0F1AE28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0F176E0(uint64_t a1)
{
  unint64_t v2 = sub_1C0F17FCC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F1771C(uint64_t a1)
{
  unint64_t v2 = sub_1C0F17FCC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0F17758@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0F17054(a1, a2);
}

uint64_t sub_1C0F17770(void *a1)
{
  return sub_1C0F16CF8(a1);
}

unint64_t SportsDataVisualizationResponseEmbedType.description.getter()
{
  unint64_t result = 0x535F5354524F5053;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x425F5354524F5053;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional __swiftcall SportsDataVisualizationResponseEmbedType.init(_:)(Swift::String a1)
{
  unint64_t v2 = v1;
  result.value = SportsDataVisualizationResponseEmbedType.init(rawValue:)(a1).value;
  *unint64_t v2 = v4;
  return result;
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional sub_1C0F178E0@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = SportsDataVisualizationResponseEmbedType.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t *sub_1C0F1791C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1BFF0A354();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0F179FC(uint64_t a1)
{
  sub_1BFF0A354();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F17A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF0A354();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0F17B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF0A354();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0F17BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF0A354();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1C0F17C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF0A354();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0F17CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF0A354();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

void sub_1C0F17D90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1BFF0A354();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_1C0F17E4C()
{
  if (!qword_1EB863BB0)
  {
    sub_1C0F17ED0();
    sub_1C0F17F24();
    sub_1C0F17F78();
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863BB0);
    }
  }
}

unint64_t sub_1C0F17ED0()
{
  unint64_t result = qword_1EB86A090;
  if (!qword_1EB86A090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A090);
  }
  return result;
}

unint64_t sub_1C0F17F24()
{
  unint64_t result = qword_1EB86A070;
  if (!qword_1EB86A070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A070);
  }
  return result;
}

unint64_t sub_1C0F17F78()
{
  unint64_t result = qword_1EB86A078;
  if (!qword_1EB86A078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A078);
  }
  return result;
}

unint64_t sub_1C0F17FCC()
{
  unint64_t result = qword_1EB867558;
  if (!qword_1EB867558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867558);
  }
  return result;
}

void sub_1C0F18020(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0F17FCC();
    unint64_t v7 = a3(a1, &type metadata for SportsDataConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0F18084(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C0636374(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C0F181E4(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1C0F180F0()
{
  unint64_t result = qword_1EA1A8F10;
  if (!qword_1EA1A8F10)
  {
    sub_1C0F18020(255, &qword_1EA1A8F00, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F10);
  }
  return result;
}

unint64_t sub_1C0F18164()
{
  unint64_t result = qword_1EA1A8F18;
  if (!qword_1EA1A8F18)
  {
    sub_1BFC6CA08(255, (unint64_t *)&qword_1EA1A8178);
    sub_1C0F17F24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F18);
  }
  return result;
}

uint64_t sub_1C0F181E4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result < v4)
  {
    uint64_t v125 = result;
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1) {
      goto LABEL_318;
    }
    uint64_t v127 = v4;
    if (v4 < 2)
    {
      uint64_t v9 = MEMORY[0x1E4FBC860];
      __dst = (unsigned __int8 *)(MEMORY[0x1E4FBC860] + 32);
      if (v4 != 1)
      {
        unint64_t v52 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        uint64_t v133 = (char *)MEMORY[0x1E4FBC860];
        if (v52 < 2) {
          goto LABEL_271;
        }
        goto LABEL_274;
      }
      uint64_t v124 = MEMORY[0x1E4FBC860];
      uint64_t v134 = v1;
    }
    else
    {
      uint64_t v134 = v1;
      uint64_t v7 = v6 >> 1;
      uint64_t v8 = sub_1C151ECCC();
      *(void *)(v8 + 16) = v7;
      uint64_t v124 = v8;
      __dst = (unsigned __int8 *)(v8 + 32);
    }
    uint64_t v10 = 0;
    uint64_t v123 = v3;
    uint64_t v137 = *v3;
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v12 = v127;
LABEL_14:
    uint64_t v133 = v11;
    uint64_t v13 = v10 + 1;
    uint64_t v128 = v10;
    if (v10 + 1 >= v12)
    {
      uint64_t v14 = v137;
      goto LABEL_123;
    }
    uint64_t v14 = v137;
    unsigned __int8 v15 = *(unsigned char *)(v137 + v10);
    uint64_t v16 = sub_1C0295B58(*(unsigned char *)(v137 + v13), (uint64_t)&unk_1F1B63E30);
    if (v17) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = v16;
    }
    uint64_t v135 = v18;
    uint64_t v19 = sub_1C0295B58(v15, (uint64_t)&unk_1F1B63E30);
    if (v20) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = v19;
    }
    uint64_t v129 = v21;
    uint64_t v22 = v10 + 2;
    if (v10 + 2 >= v12)
    {
LABEL_112:
      uint64_t v13 = v22;
      if (v135 < v129)
      {
        if (v22 < v10) {
          goto LABEL_311;
        }
LABEL_114:
        if (v10 < v22)
        {
          uint64_t v44 = v22 - 1;
          uint64_t v45 = v10;
          do
          {
            if (v45 != v44)
            {
              if (!v14) {
                goto LABEL_316;
              }
              char v46 = *(unsigned char *)(v14 + v45);
              *(unsigned char *)(v14 + v45) = *(unsigned char *)(v14 + v44);
              *(unsigned char *)(v14 + v44) = v46;
            }
            BOOL v100 = ++v45 < v44--;
          }
          while (v100);
        }
        uint64_t v13 = v22;
      }
LABEL_123:
      if (v13 >= v12) {
        goto LABEL_218;
      }
      if (__OFSUB__(v13, v10)) {
        goto LABEL_309;
      }
      if (v13 - v10 >= v125) {
        goto LABEL_218;
      }
      uint64_t v47 = v10 + v125;
      if (__OFADD__(v10, v125)) {
        goto LABEL_312;
      }
      if (v47 >= v12) {
        uint64_t v47 = v12;
      }
      if (v47 < v10) {
        goto LABEL_313;
      }
      uint64_t v126 = v47;
      if (v13 == v47) {
        goto LABEL_218;
      }
LABEL_133:
      char v48 = *(unsigned char *)(v14 + v13);
      uint64_t v130 = v13;
      uint64_t v136 = v13;
      while (1)
      {
        uint64_t v49 = qword_1F1B63E40;
        if (!qword_1F1B63E40) {
          goto LABEL_132;
        }
        uint64_t v50 = 0;
        uint64_t v51 = v136 - 1;
        unint64_t v52 = *(unsigned __int8 *)(v137 + v136 - 1);
        while (2)
        {
          unint64_t v53 = 0xE700000000000000;
          uint64_t v54 = 0x656D6167657270;
          switch(*((unsigned char *)&unk_1F1B63E30 + v50 + 32))
          {
            case 1:
              unint64_t v53 = 0xE800000000000000;
              uint64_t v54 = 0x6576694C7261656ELL;
              break;
            case 2:
              uint64_t v54 = 0x6572676F72506E69;
              unint64_t v53 = 0xEA00000000007373;
              break;
            case 3:
              unint64_t v53 = 0xE500000000000000;
              uint64_t v54 = 0x6B61657262;
              break;
            case 4:
              uint64_t v54 = 0x656E6F7074736F70;
              goto LABEL_145;
            case 5:
              uint64_t v54 = 0x65646E6570737573;
              goto LABEL_145;
            case 6:
              uint64_t v54 = 0x656C6C65636E6163;
LABEL_145:
              unint64_t v53 = 0xE900000000000064;
              break;
            case 7:
              uint64_t v54 = 0x646579616C6564;
              break;
            case 8:
              unint64_t v53 = 0xE500000000000000;
              uint64_t v54 = 0x6C616E6966;
              break;
            case 9:
              uint64_t v54 = 0x74696566726F66;
              break;
            case 0xA:
              uint64_t v54 = 0x6E776F6E6B6E75;
              break;
            default:
              break;
          }
          unint64_t v55 = 0xE700000000000000;
          uint64_t v56 = 0x656D6167657270;
          switch(v48)
          {
            case 1:
              unint64_t v55 = 0xE800000000000000;
              if (v54 == 0x6576694C7261656ELL) {
                goto LABEL_166;
              }
              goto LABEL_167;
            case 2:
              unint64_t v55 = 0xEA00000000007373;
              if (v54 != 0x6572676F72506E69) {
                goto LABEL_167;
              }
              goto LABEL_166;
            case 3:
              unint64_t v55 = 0xE500000000000000;
              if (v54 != 0x6B61657262) {
                goto LABEL_167;
              }
              goto LABEL_166;
            case 4:
              uint64_t v57 = 0x656E6F7074736F70;
              goto LABEL_162;
            case 5:
              uint64_t v57 = 0x65646E6570737573;
              goto LABEL_162;
            case 6:
              uint64_t v57 = 0x656C6C65636E6163;
LABEL_162:
              unint64_t v55 = 0xE900000000000064;
              if (v54 != v57) {
                goto LABEL_167;
              }
              goto LABEL_166;
            case 7:
              if (v54 != 0x646579616C6564) {
                goto LABEL_167;
              }
              goto LABEL_166;
            case 8:
              unint64_t v55 = 0xE500000000000000;
              if (v54 != 0x6C616E6966) {
                goto LABEL_167;
              }
              goto LABEL_166;
            case 9:
              if (v54 != 0x74696566726F66) {
                goto LABEL_167;
              }
              goto LABEL_166;
            case 10:
              uint64_t v56 = 0x6E776F6E6B6E75;
              goto LABEL_165;
            default:
LABEL_165:
              if (v54 != v56) {
                goto LABEL_167;
              }
LABEL_166:
              if (v53 != v55)
              {
LABEL_167:
                char v58 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v58) {
                  goto LABEL_173;
                }
                if (v49 == ++v50)
                {
                  uint64_t v50 = 0;
                  goto LABEL_173;
                }
                continue;
              }
              swift_bridgeObjectRelease_n();
LABEL_173:
              uint64_t v59 = qword_1F1B63E40;
              if (!qword_1F1B63E40) {
                goto LABEL_132;
              }
              uint64_t v60 = 0;
              while (2)
              {
                unint64_t v61 = 0xE700000000000000;
                uint64_t v62 = 0x656D6167657270;
                switch(*((unsigned char *)&unk_1F1B63E30 + v60 + 32))
                {
                  case 1:
                    unint64_t v61 = 0xE800000000000000;
                    uint64_t v62 = 0x6576694C7261656ELL;
                    break;
                  case 2:
                    uint64_t v62 = 0x6572676F72506E69;
                    unint64_t v61 = 0xEA00000000007373;
                    break;
                  case 3:
                    unint64_t v61 = 0xE500000000000000;
                    uint64_t v62 = 0x6B61657262;
                    break;
                  case 4:
                    uint64_t v62 = 0x656E6F7074736F70;
                    goto LABEL_184;
                  case 5:
                    uint64_t v62 = 0x65646E6570737573;
                    goto LABEL_184;
                  case 6:
                    uint64_t v62 = 0x656C6C65636E6163;
LABEL_184:
                    unint64_t v61 = 0xE900000000000064;
                    break;
                  case 7:
                    uint64_t v62 = 0x646579616C6564;
                    break;
                  case 8:
                    unint64_t v61 = 0xE500000000000000;
                    uint64_t v62 = 0x6C616E6966;
                    break;
                  case 9:
                    uint64_t v62 = 0x74696566726F66;
                    break;
                  case 0xA:
                    uint64_t v62 = 0x6E776F6E6B6E75;
                    break;
                  default:
                    break;
                }
                unint64_t v63 = 0xE700000000000000;
                uint64_t v64 = 0x656D6167657270;
                switch(v52)
                {
                  case 1uLL:
                    unint64_t v63 = 0xE800000000000000;
                    if (v62 != 0x6576694C7261656ELL) {
                      goto LABEL_206;
                    }
                    goto LABEL_205;
                  case 2uLL:
                    unint64_t v63 = 0xEA00000000007373;
                    if (v62 != 0x6572676F72506E69) {
                      goto LABEL_206;
                    }
                    goto LABEL_205;
                  case 3uLL:
                    unint64_t v63 = 0xE500000000000000;
                    if (v62 != 0x6B61657262) {
                      goto LABEL_206;
                    }
                    goto LABEL_205;
                  case 4uLL:
                    uint64_t v65 = 0x656E6F7074736F70;
                    goto LABEL_201;
                  case 5uLL:
                    uint64_t v65 = 0x65646E6570737573;
                    goto LABEL_201;
                  case 6uLL:
                    uint64_t v65 = 0x656C6C65636E6163;
LABEL_201:
                    unint64_t v63 = 0xE900000000000064;
                    if (v62 != v65) {
                      goto LABEL_206;
                    }
                    goto LABEL_205;
                  case 7uLL:
                    if (v62 != 0x646579616C6564) {
                      goto LABEL_206;
                    }
                    goto LABEL_205;
                  case 8uLL:
                    unint64_t v63 = 0xE500000000000000;
                    if (v62 != 0x6C616E6966) {
                      goto LABEL_206;
                    }
                    goto LABEL_205;
                  case 9uLL:
                    if (v62 != 0x74696566726F66) {
                      goto LABEL_206;
                    }
                    goto LABEL_205;
                  case 0xAuLL:
                    uint64_t v64 = 0x6E776F6E6B6E75;
                    goto LABEL_204;
                  default:
LABEL_204:
                    if (v62 != v64) {
                      goto LABEL_206;
                    }
LABEL_205:
                    if (v61 != v63)
                    {
LABEL_206:
                      char v66 = sub_1C1520A9C();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (v66) {
                        goto LABEL_213;
                      }
                      uint64_t v67 = v60 + 1;
                      if (__OFADD__(v60, 1))
                      {
                        __break(1u);
                        goto LABEL_286;
                      }
                      ++v60;
                      if (v67 == v59) {
                        goto LABEL_132;
                      }
                      continue;
                    }
                    swift_bridgeObjectRelease_n();
LABEL_213:
                    if (v50 >= v60)
                    {
LABEL_132:
                      uint64_t v13 = v130 + 1;
                      uint64_t v14 = v137;
                      if (v130 + 1 != v126) {
                        goto LABEL_133;
                      }
                      uint64_t v13 = v126;
LABEL_218:
                      if (v13 < v128) {
                        goto LABEL_308;
                      }
                      uint64_t v11 = v133;
                      uint64_t v131 = v13;
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        uint64_t v11 = sub_1C0634CC8(0, *((void *)v133 + 2) + 1, 1, v133);
                      }
                      unint64_t v69 = *((void *)v11 + 2);
                      unint64_t v68 = *((void *)v11 + 3);
                      unint64_t v52 = v69 + 1;
                      if (v69 >= v68 >> 1) {
                        uint64_t v11 = sub_1C0634CC8((char *)(v68 > 1), v69 + 1, 1, v11);
                      }
                      *((void *)v11 + 2) = v52;
                      uint64_t v70 = v11 + 32;
                      uint64_t v71 = &v11[16 * v69 + 32];
                      *(void *)uint64_t v71 = v128;
                      *((void *)v71 + 1) = v13;
                      uint64_t v133 = v11;
                      if (v69)
                      {
                        while (2)
                        {
                          unint64_t v72 = v52 - 1;
                          if (v52 >= 4)
                          {
                            uint64_t v77 = &v70[16 * v52];
                            uint64_t v78 = *((void *)v77 - 8);
                            uint64_t v79 = *((void *)v77 - 7);
                            BOOL v83 = __OFSUB__(v79, v78);
                            uint64_t v80 = v79 - v78;
                            if (v83) {
                              goto LABEL_293;
                            }
                            uint64_t v82 = *((void *)v77 - 6);
                            uint64_t v81 = *((void *)v77 - 5);
                            BOOL v83 = __OFSUB__(v81, v82);
                            uint64_t v75 = v81 - v82;
                            char v76 = v83;
                            if (v83) {
                              goto LABEL_294;
                            }
                            unint64_t v84 = v52 - 2;
                            uint64_t v85 = &v70[16 * v52 - 32];
                            uint64_t v87 = *(void *)v85;
                            uint64_t v86 = *((void *)v85 + 1);
                            BOOL v83 = __OFSUB__(v86, v87);
                            uint64_t v88 = v86 - v87;
                            if (v83) {
                              goto LABEL_296;
                            }
                            BOOL v83 = __OFADD__(v75, v88);
                            uint64_t v89 = v75 + v88;
                            if (v83) {
                              goto LABEL_299;
                            }
                            if (v89 >= v80)
                            {
                              uint64_t v107 = &v70[16 * v72];
                              uint64_t v109 = *(void *)v107;
                              uint64_t v108 = *((void *)v107 + 1);
                              BOOL v83 = __OFSUB__(v108, v109);
                              uint64_t v110 = v108 - v109;
                              if (v83) {
                                goto LABEL_303;
                              }
                              BOOL v100 = v75 < v110;
                            }
                            else
                            {
LABEL_237:
                              if (v76) {
                                goto LABEL_295;
                              }
                              unint64_t v84 = v52 - 2;
                              uint64_t v90 = &v70[16 * v52 - 32];
                              uint64_t v92 = *(void *)v90;
                              uint64_t v91 = *((void *)v90 + 1);
                              BOOL v93 = __OFSUB__(v91, v92);
                              uint64_t v94 = v91 - v92;
                              char v95 = v93;
                              if (v93) {
                                goto LABEL_298;
                              }
                              id v96 = &v70[16 * v72];
                              uint64_t v98 = *(void *)v96;
                              uint64_t v97 = *((void *)v96 + 1);
                              BOOL v83 = __OFSUB__(v97, v98);
                              uint64_t v99 = v97 - v98;
                              if (v83) {
                                goto LABEL_301;
                              }
                              if (__OFADD__(v94, v99)) {
                                goto LABEL_302;
                              }
                              if (v94 + v99 < v75) {
                                goto LABEL_249;
                              }
                              BOOL v100 = v75 < v99;
                            }
                            if (v100) {
                              unint64_t v72 = v84;
                            }
                          }
                          else
                          {
                            if (v52 == 3)
                            {
                              uint64_t v74 = *((void *)v11 + 4);
                              uint64_t v73 = *((void *)v11 + 5);
                              BOOL v83 = __OFSUB__(v73, v74);
                              uint64_t v75 = v73 - v74;
                              char v76 = v83;
                              goto LABEL_237;
                            }
                            uint64_t v101 = *((void *)v11 + 4);
                            uint64_t v102 = *((void *)v11 + 5);
                            BOOL v83 = __OFSUB__(v102, v101);
                            uint64_t v94 = v102 - v101;
                            char v95 = v83;
LABEL_249:
                            if (v95) {
                              goto LABEL_297;
                            }
                            id v103 = &v70[16 * v72];
                            uint64_t v105 = *(void *)v103;
                            uint64_t v104 = *((void *)v103 + 1);
                            BOOL v83 = __OFSUB__(v104, v105);
                            uint64_t v106 = v104 - v105;
                            if (v83) {
                              goto LABEL_300;
                            }
                            if (v106 < v94) {
                              goto LABEL_266;
                            }
                          }
                          unint64_t v111 = v72 - 1;
                          if (v72 - 1 >= v52) {
                            goto LABEL_289;
                          }
                          if (!v137) {
                            goto LABEL_314;
                          }
                          uint64_t v112 = &v70[16 * v111];
                          uint64_t v113 = *(void *)v112;
                          uint64_t v114 = &v70[16 * v72];
                          uint64_t v115 = *((void *)v114 + 1);
                          sub_1C0F19CC8((unsigned __int8 *)(v137 + *(void *)v112), (unsigned __int8 *)(v137 + *(void *)v114), v137 + v115, __dst);
                          if (v134)
                          {
                            uint64_t v9 = v124;
                            goto LABEL_271;
                          }
                          if (v115 < v113) {
                            goto LABEL_290;
                          }
                          if (v72 > *((void *)v133 + 2)) {
                            goto LABEL_291;
                          }
                          *(void *)uint64_t v112 = v113;
                          *(void *)&v70[16 * v111 + 8] = v115;
                          unint64_t v116 = *((void *)v133 + 2);
                          if (v72 >= v116) {
                            goto LABEL_292;
                          }
                          uint64_t v11 = v133;
                          unint64_t v52 = v116 - 1;
                          memmove(&v70[16 * v72], v114 + 16, 16 * (v116 - 1 - v72));
                          *((void *)v133 + 2) = v116 - 1;
                          if (v116 <= 2) {
                            goto LABEL_266;
                          }
                          continue;
                        }
                      }
                      unint64_t v52 = 1;
LABEL_266:
                      uint64_t v12 = v127;
                      uint64_t v10 = v131;
                      if (v131 >= v127)
                      {
LABEL_286:
                        uint64_t v2 = v134;
                        uint64_t v3 = v123;
                        uint64_t v9 = v124;
                        if (v52 < 2)
                        {
LABEL_271:
                          swift_bridgeObjectRelease();
                          *(void *)(v9 + 16) = 0;
                          return swift_bridgeObjectRelease();
                        }
LABEL_274:
                        uint64_t v117 = *v3;
                        while (1)
                        {
                          unint64_t v118 = v52 - 2;
                          if (v52 < 2) {
                            goto LABEL_304;
                          }
                          if (!v117) {
                            goto LABEL_317;
                          }
                          uint64_t v119 = *(void *)&v133[16 * v118 + 32];
                          uint64_t v120 = *(void *)&v133[16 * v52 + 24];
                          sub_1C0F19CC8((unsigned __int8 *)(v117 + v119), (unsigned __int8 *)(v117 + *(void *)&v133[16 * v52 + 16]), v117 + v120, __dst);
                          if (v2) {
                            goto LABEL_271;
                          }
                          if (v120 < v119) {
                            goto LABEL_305;
                          }
                          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                            uint64_t v133 = sub_1C063604C((uint64_t)v133);
                          }
                          if (v118 >= *((void *)v133 + 2)) {
                            goto LABEL_306;
                          }
                          uint64_t v121 = &v133[16 * v118 + 32];
                          *(void *)uint64_t v121 = v119;
                          *((void *)v121 + 1) = v120;
                          unint64_t v122 = *((void *)v133 + 2);
                          if (v52 > v122) {
                            goto LABEL_307;
                          }
                          memmove(&v133[16 * v52 + 16], &v133[16 * v52 + 32], 16 * (v122 - v52));
                          *((void *)v133 + 2) = v122 - 1;
                          unint64_t v52 = v122 - 1;
                          if (v122 <= 2) {
                            goto LABEL_271;
                          }
                        }
                      }
                      goto LABEL_14;
                    }
                    if (!v137) {
                      goto LABEL_315;
                    }
                    char v48 = *(unsigned char *)(v137 + v136);
                    *(unsigned char *)(v137 + v136) = *(unsigned char *)(v137 + v51);
                    *(unsigned char *)(v137 + v51) = v48;
                    --v136;
                    if (v51 == v128) {
                      goto LABEL_132;
                    }
                    break;
                }
                break;
              }
              break;
          }
          break;
        }
      }
    }
LABEL_25:
    uint64_t v23 = qword_1F1B63E40;
    if (!qword_1F1B63E40)
    {
      if (v135 >= v129) {
        goto LABEL_24;
      }
      uint64_t v10 = v128;
      if (v22 < v128) {
        goto LABEL_311;
      }
      goto LABEL_114;
    }
    uint64_t v24 = 0;
    uint64_t v25 = *(unsigned __int8 *)(v14 + v22);
    uint64_t v26 = *(unsigned __int8 *)(v14 + v13);
    while (1)
    {
      unint64_t v27 = 0xE700000000000000;
      uint64_t v28 = 0x656D6167657270;
      switch(*((unsigned char *)&unk_1F1B63E30 + v24 + 32))
      {
        case 1:
          unint64_t v27 = 0xE800000000000000;
          uint64_t v28 = 0x6576694C7261656ELL;
          break;
        case 2:
          uint64_t v28 = 0x6572676F72506E69;
          unint64_t v27 = 0xEA00000000007373;
          break;
        case 3:
          unint64_t v27 = 0xE500000000000000;
          uint64_t v28 = 0x6B61657262;
          break;
        case 4:
          uint64_t v28 = 0x656E6F7074736F70;
          goto LABEL_36;
        case 5:
          uint64_t v28 = 0x65646E6570737573;
          goto LABEL_36;
        case 6:
          uint64_t v28 = 0x656C6C65636E6163;
LABEL_36:
          unint64_t v27 = 0xE900000000000064;
          break;
        case 7:
          uint64_t v28 = 0x646579616C6564;
          break;
        case 8:
          unint64_t v27 = 0xE500000000000000;
          uint64_t v28 = 0x6C616E6966;
          break;
        case 9:
          uint64_t v28 = 0x74696566726F66;
          break;
        case 0xA:
          uint64_t v28 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v29 = 0xE700000000000000;
      uint64_t v30 = 0x656D6167657270;
      switch(v25)
      {
        case 1:
          unint64_t v29 = 0xE800000000000000;
          if (v28 == 0x6576694C7261656ELL) {
            goto LABEL_57;
          }
          goto LABEL_58;
        case 2:
          unint64_t v29 = 0xEA00000000007373;
          if (v28 != 0x6572676F72506E69) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 3:
          unint64_t v29 = 0xE500000000000000;
          if (v28 != 0x6B61657262) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 4:
          uint64_t v31 = 0x656E6F7074736F70;
          goto LABEL_53;
        case 5:
          uint64_t v31 = 0x65646E6570737573;
          goto LABEL_53;
        case 6:
          uint64_t v31 = 0x656C6C65636E6163;
LABEL_53:
          unint64_t v29 = 0xE900000000000064;
          if (v28 != v31) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 7:
          if (v28 != 0x646579616C6564) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 8:
          unint64_t v29 = 0xE500000000000000;
          if (v28 != 0x6C616E6966) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 9:
          if (v28 != 0x74696566726F66) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 10:
          uint64_t v30 = 0x6E776F6E6B6E75;
          goto LABEL_56;
        default:
LABEL_56:
          if (v28 != v30) {
            goto LABEL_58;
          }
LABEL_57:
          if (v27 == v29)
          {
            uint64_t v33 = v22;
            swift_bridgeObjectRelease_n();
            goto LABEL_65;
          }
LABEL_58:
          char v32 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v32)
          {
            uint64_t v33 = v22;
LABEL_65:
            uint64_t v34 = qword_1F1B63E40;
            if (!qword_1F1B63E40)
            {
LABEL_104:
              uint64_t v12 = v127;
              uint64_t v14 = v137;
              uint64_t v22 = v33;
              if (v135 < v129) {
                goto LABEL_111;
              }
              goto LABEL_24;
            }
            uint64_t v35 = 0;
            while (2)
            {
              unint64_t v36 = 0xE700000000000000;
              uint64_t v37 = 0x656D6167657270;
              switch(*((unsigned char *)&unk_1F1B63E30 + v35 + 32))
              {
                case 1:
                  unint64_t v36 = 0xE800000000000000;
                  uint64_t v37 = 0x6576694C7261656ELL;
                  break;
                case 2:
                  uint64_t v37 = 0x6572676F72506E69;
                  unint64_t v36 = 0xEA00000000007373;
                  break;
                case 3:
                  unint64_t v36 = 0xE500000000000000;
                  uint64_t v37 = 0x6B61657262;
                  break;
                case 4:
                  uint64_t v37 = 0x656E6F7074736F70;
                  goto LABEL_76;
                case 5:
                  uint64_t v37 = 0x65646E6570737573;
                  goto LABEL_76;
                case 6:
                  uint64_t v37 = 0x656C6C65636E6163;
LABEL_76:
                  unint64_t v36 = 0xE900000000000064;
                  break;
                case 7:
                  uint64_t v37 = 0x646579616C6564;
                  break;
                case 8:
                  unint64_t v36 = 0xE500000000000000;
                  uint64_t v37 = 0x6C616E6966;
                  break;
                case 9:
                  uint64_t v37 = 0x74696566726F66;
                  break;
                case 0xA:
                  uint64_t v37 = 0x6E776F6E6B6E75;
                  break;
                default:
                  break;
              }
              unint64_t v38 = 0xE700000000000000;
              uint64_t v39 = 0x656D6167657270;
              switch(v26)
              {
                case 1:
                  unint64_t v38 = 0xE800000000000000;
                  if (v37 != 0x6576694C7261656ELL) {
                    goto LABEL_98;
                  }
                  goto LABEL_97;
                case 2:
                  unint64_t v38 = 0xEA00000000007373;
                  if (v37 != 0x6572676F72506E69) {
                    goto LABEL_98;
                  }
                  goto LABEL_97;
                case 3:
                  unint64_t v38 = 0xE500000000000000;
                  if (v37 != 0x6B61657262) {
                    goto LABEL_98;
                  }
                  goto LABEL_97;
                case 4:
                  uint64_t v40 = 0x656E6F7074736F70;
                  goto LABEL_93;
                case 5:
                  uint64_t v40 = 0x65646E6570737573;
                  goto LABEL_93;
                case 6:
                  uint64_t v40 = 0x656C6C65636E6163;
LABEL_93:
                  unint64_t v38 = 0xE900000000000064;
                  if (v37 != v40) {
                    goto LABEL_98;
                  }
                  goto LABEL_97;
                case 7:
                  if (v37 != 0x646579616C6564) {
                    goto LABEL_98;
                  }
                  goto LABEL_97;
                case 8:
                  unint64_t v38 = 0xE500000000000000;
                  if (v37 != 0x6C616E6966) {
                    goto LABEL_98;
                  }
                  goto LABEL_97;
                case 9:
                  if (v37 != 0x74696566726F66) {
                    goto LABEL_98;
                  }
                  goto LABEL_97;
                case 10:
                  uint64_t v39 = 0x6E776F6E6B6E75;
                  goto LABEL_96;
                default:
LABEL_96:
                  if (v37 != v39) {
                    goto LABEL_98;
                  }
LABEL_97:
                  if (v36 != v38)
                  {
LABEL_98:
                    char v41 = sub_1C1520A9C();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v41) {
                      goto LABEL_107;
                    }
                    uint64_t v42 = v35 + 1;
                    if (__OFADD__(v35, 1))
                    {
                      __break(1u);
LABEL_289:
                      __break(1u);
LABEL_290:
                      __break(1u);
LABEL_291:
                      __break(1u);
LABEL_292:
                      __break(1u);
LABEL_293:
                      __break(1u);
LABEL_294:
                      __break(1u);
LABEL_295:
                      __break(1u);
LABEL_296:
                      __break(1u);
LABEL_297:
                      __break(1u);
LABEL_298:
                      __break(1u);
LABEL_299:
                      __break(1u);
LABEL_300:
                      __break(1u);
LABEL_301:
                      __break(1u);
LABEL_302:
                      __break(1u);
LABEL_303:
                      __break(1u);
LABEL_304:
                      __break(1u);
LABEL_305:
                      __break(1u);
LABEL_306:
                      __break(1u);
LABEL_307:
                      __break(1u);
LABEL_308:
                      __break(1u);
LABEL_309:
                      __break(1u);
LABEL_310:
                      __break(1u);
LABEL_311:
                      __break(1u);
LABEL_312:
                      __break(1u);
LABEL_313:
                      __break(1u);
LABEL_314:
                      __break(1u);
LABEL_315:
                      __break(1u);
LABEL_316:
                      __break(1u);
LABEL_317:
                      __break(1u);
LABEL_318:
                      sub_1C15203FC();
                      __break(1u);
                      JUMPOUT(0x1C0F19448);
                    }
                    ++v35;
                    if (v42 == v34) {
                      goto LABEL_104;
                    }
                    continue;
                  }
                  swift_bridgeObjectRelease_n();
LABEL_107:
                  BOOL v43 = v24 >= v35;
                  uint64_t v12 = v127;
                  uint64_t v14 = v137;
                  uint64_t v22 = v33;
                  if (v135 < v129 == v43)
                  {
LABEL_111:
                    uint64_t v10 = v128;
                    goto LABEL_112;
                  }
LABEL_24:
                  uint64_t v13 = v22++;
                  if (v22 == v12)
                  {
                    uint64_t v22 = v12;
                    goto LABEL_111;
                  }
                  break;
              }
              goto LABEL_25;
            }
          }
          if (v23 == ++v24)
          {
            uint64_t v33 = v22;
            uint64_t v24 = 0;
            goto LABEL_65;
          }
          break;
      }
    }
  }
  if (v4 < 0) {
    goto LABEL_310;
  }
  if (v4) {
    return sub_1C0F195A8(0, v4, 1, v3);
  }
  return result;
}

uint64_t sub_1C0F195A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v26 = result;
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v28 = *a4;
LABEL_5:
    char v5 = *(unsigned char *)(v4 + a3);
    uint64_t v27 = a3;
    uint64_t v29 = a3;
LABEL_6:
    uint64_t v6 = qword_1F1B63E40;
    if (!qword_1F1B63E40) {
      goto LABEL_4;
    }
    uint64_t v7 = 0;
    uint64_t v8 = v29 - 1;
    uint64_t v9 = *(unsigned __int8 *)(v28 + v29 - 1);
    while (1)
    {
      unint64_t v10 = 0xE700000000000000;
      uint64_t v11 = 0x656D6167657270;
      switch(*((unsigned char *)&unk_1F1B63E30 + v7 + 32))
      {
        case 1:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x6576694C7261656ELL;
          break;
        case 2:
          uint64_t v11 = 0x6572676F72506E69;
          unint64_t v10 = 0xEA00000000007373;
          break;
        case 3:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x6B61657262;
          break;
        case 4:
          uint64_t v11 = 0x656E6F7074736F70;
          goto LABEL_17;
        case 5:
          uint64_t v11 = 0x65646E6570737573;
          goto LABEL_17;
        case 6:
          uint64_t v11 = 0x656C6C65636E6163;
LABEL_17:
          unint64_t v10 = 0xE900000000000064;
          break;
        case 7:
          uint64_t v11 = 0x646579616C6564;
          break;
        case 8:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x6C616E6966;
          break;
        case 9:
          uint64_t v11 = 0x74696566726F66;
          break;
        case 0xA:
          uint64_t v11 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v12 = 0xE700000000000000;
      uint64_t v13 = 0x656D6167657270;
      switch(v5)
      {
        case 1:
          unint64_t v12 = 0xE800000000000000;
          if (v11 == 0x6576694C7261656ELL) {
            goto LABEL_38;
          }
          goto LABEL_39;
        case 2:
          unint64_t v12 = 0xEA00000000007373;
          if (v11 != 0x6572676F72506E69) {
            goto LABEL_39;
          }
          goto LABEL_38;
        case 3:
          unint64_t v12 = 0xE500000000000000;
          if (v11 != 0x6B61657262) {
            goto LABEL_39;
          }
          goto LABEL_38;
        case 4:
          uint64_t v14 = 0x656E6F7074736F70;
          goto LABEL_34;
        case 5:
          uint64_t v14 = 0x65646E6570737573;
          goto LABEL_34;
        case 6:
          uint64_t v14 = 0x656C6C65636E6163;
LABEL_34:
          unint64_t v12 = 0xE900000000000064;
          if (v11 != v14) {
            goto LABEL_39;
          }
          goto LABEL_38;
        case 7:
          if (v11 != 0x646579616C6564) {
            goto LABEL_39;
          }
          goto LABEL_38;
        case 8:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x6C616E6966;
          goto LABEL_37;
        case 9:
          if (v11 != 0x74696566726F66) {
            goto LABEL_39;
          }
          goto LABEL_38;
        case 10:
          if (v11 != 0x6E776F6E6B6E75) {
            goto LABEL_39;
          }
          goto LABEL_38;
        default:
LABEL_37:
          if (v11 != v13) {
            goto LABEL_39;
          }
LABEL_38:
          if (v10 == v12)
          {
            uint64_t result = swift_bridgeObjectRelease_n();
LABEL_45:
            uint64_t v16 = qword_1F1B63E40;
            if (!qword_1F1B63E40) {
              goto LABEL_4;
            }
            uint64_t v17 = 0;
            while (2)
            {
              unint64_t v18 = 0xE700000000000000;
              uint64_t v19 = 0x656D6167657270;
              switch(*((unsigned char *)&unk_1F1B63E30 + v17 + 32))
              {
                case 1:
                  unint64_t v18 = 0xE800000000000000;
                  uint64_t v19 = 0x6576694C7261656ELL;
                  break;
                case 2:
                  uint64_t v19 = 0x6572676F72506E69;
                  unint64_t v18 = 0xEA00000000007373;
                  break;
                case 3:
                  unint64_t v18 = 0xE500000000000000;
                  uint64_t v19 = 0x6B61657262;
                  break;
                case 4:
                  uint64_t v19 = 0x656E6F7074736F70;
                  goto LABEL_54;
                case 5:
                  uint64_t v19 = 0x65646E6570737573;
                  goto LABEL_54;
                case 6:
                  uint64_t v19 = 0x656C6C65636E6163;
LABEL_54:
                  unint64_t v18 = 0xE900000000000064;
                  break;
                case 7:
                  uint64_t v19 = 0x646579616C6564;
                  break;
                case 8:
                  unint64_t v18 = 0xE500000000000000;
                  uint64_t v19 = 0x6C616E6966;
                  break;
                case 9:
                  uint64_t v19 = 0x74696566726F66;
                  break;
                case 0xA:
                  uint64_t v19 = 0x6E776F6E6B6E75;
                  break;
                default:
                  break;
              }
              unint64_t v20 = 0xE700000000000000;
              uint64_t v21 = 0x656D6167657270;
              switch(v9)
              {
                case 1:
                  unint64_t v20 = 0xE800000000000000;
                  if (v19 != 0x6576694C7261656ELL) {
                    goto LABEL_78;
                  }
                  goto LABEL_77;
                case 2:
                  unint64_t v20 = 0xEA00000000007373;
                  if (v19 != 0x6572676F72506E69) {
                    goto LABEL_78;
                  }
                  goto LABEL_77;
                case 3:
                  unint64_t v20 = 0xE500000000000000;
                  if (v19 != 0x6B61657262) {
                    goto LABEL_78;
                  }
                  goto LABEL_77;
                case 4:
                  uint64_t v22 = 0x656E6F7074736F70;
                  goto LABEL_69;
                case 5:
                  uint64_t v22 = 0x65646E6570737573;
                  goto LABEL_69;
                case 6:
                  uint64_t v22 = 0x656C6C65636E6163;
LABEL_69:
                  unint64_t v20 = 0xE900000000000064;
                  if (v19 != v22) {
                    goto LABEL_78;
                  }
                  goto LABEL_77;
                case 7:
                  if (v19 != 0x646579616C6564) {
                    goto LABEL_78;
                  }
                  goto LABEL_77;
                case 8:
                  unint64_t v20 = 0xE500000000000000;
                  if (v19 != 0x6C616E6966) {
                    goto LABEL_78;
                  }
                  goto LABEL_77;
                case 9:
                  uint64_t v21 = 0x74696566726F66;
                  goto LABEL_76;
                case 10:
                  if (v19 != 0x6E776F6E6B6E75) {
                    goto LABEL_78;
                  }
                  goto LABEL_77;
                default:
LABEL_76:
                  if (v19 != v21) {
                    goto LABEL_78;
                  }
LABEL_77:
                  if (v18 != v20)
                  {
LABEL_78:
                    char v23 = sub_1C1520A9C();
                    swift_bridgeObjectRelease();
                    uint64_t result = swift_bridgeObjectRelease();
                    if (v23) {
                      goto LABEL_85;
                    }
                    uint64_t v24 = v17 + 1;
                    if (__OFADD__(v17, 1))
                    {
                      __break(1u);
                      goto LABEL_90;
                    }
                    ++v17;
                    if (v24 == v16) {
                      goto LABEL_4;
                    }
                    continue;
                  }
                  uint64_t result = swift_bridgeObjectRelease_n();
LABEL_85:
                  if (v7 < v17)
                  {
                    if (!v28)
                    {
LABEL_90:
                      __break(1u);
                      JUMPOUT(0x1C0F19C18);
                    }
                    char v5 = *(unsigned char *)(v28 + v29);
                    *(unsigned char *)(v28 + v29) = *(unsigned char *)(v28 + v8);
                    *(unsigned char *)(v28 + v8) = v5;
                    --v29;
                    if (v8 != v26) {
                      goto LABEL_6;
                    }
                  }
LABEL_4:
                  a3 = v27 + 1;
                  uint64_t v4 = v28;
                  if (v27 + 1 != a2) {
                    goto LABEL_5;
                  }
                  return result;
              }
            }
          }
LABEL_39:
          char v15 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_45;
          }
          if (v6 == ++v7)
          {
            uint64_t v7 = 0;
            goto LABEL_45;
          }
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C0F19CC8(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  char v66 = __dst;
  uint64_t v4 = __dst;
  char v5 = a2;
  uint64_t v6 = __src;
  size_t v7 = a2 - __src;
  unint64_t v8 = a3 - (void)a2;
  uint64_t v67 = __src;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v8 & 0x8000000000000000) != 0) {
      goto LABEL_205;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    uint64_t v31 = &v4[v8];
    uint64_t v65 = &v4[v8];
    uint64_t v67 = v5;
    char v32 = (unsigned __int8 *)a3;
    if (v6 >= v5 || (unsigned __int8 *)a3 == v5) {
      goto LABEL_202;
    }
    uint64_t v60 = v6;
    uint64_t v62 = v4;
LABEL_109:
    uint64_t v33 = v31 - 1;
    uint64_t v34 = *(v31 - 1);
    uint64_t v35 = qword_1F1B63E40;
    if (!qword_1F1B63E40)
    {
      uint64_t v44 = v32 - 1;
      goto LABEL_198;
    }
    uint64_t v64 = v32;
    uint64_t v36 = 0;
    uint64_t v37 = *(v5 - 1);
    unint64_t v55 = v5 - 1;
    uint64_t v56 = v31;
    char v58 = v5;
    while (1)
    {
      unint64_t v38 = 0xE700000000000000;
      uint64_t v39 = 0x656D6167657270;
      switch(*((unsigned char *)&unk_1F1B63E30 + v36 + 32))
      {
        case 1:
          unint64_t v38 = 0xE800000000000000;
          uint64_t v39 = 0x6576694C7261656ELL;
          break;
        case 2:
          uint64_t v39 = 0x6572676F72506E69;
          unint64_t v38 = 0xEA00000000007373;
          break;
        case 3:
          unint64_t v38 = 0xE500000000000000;
          uint64_t v39 = 0x6B61657262;
          break;
        case 4:
          uint64_t v39 = 0x656E6F7074736F70;
          goto LABEL_120;
        case 5:
          uint64_t v39 = 0x65646E6570737573;
          goto LABEL_120;
        case 6:
          uint64_t v39 = 0x656C6C65636E6163;
LABEL_120:
          unint64_t v38 = 0xE900000000000064;
          break;
        case 7:
          uint64_t v39 = 0x646579616C6564;
          break;
        case 8:
          unint64_t v38 = 0xE500000000000000;
          uint64_t v39 = 0x6C616E6966;
          break;
        case 9:
          uint64_t v39 = 0x74696566726F66;
          break;
        case 0xA:
          uint64_t v39 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v40 = 0xE700000000000000;
      uint64_t v41 = 0x656D6167657270;
      switch(v34)
      {
        case 1:
          unint64_t v40 = 0xE800000000000000;
          if (v39 == 0x6576694C7261656ELL) {
            goto LABEL_141;
          }
          goto LABEL_142;
        case 2:
          unint64_t v40 = 0xEA00000000007373;
          if (v39 != 0x6572676F72506E69) {
            goto LABEL_142;
          }
          goto LABEL_141;
        case 3:
          unint64_t v40 = 0xE500000000000000;
          if (v39 != 0x6B61657262) {
            goto LABEL_142;
          }
          goto LABEL_141;
        case 4:
          uint64_t v42 = 0x656E6F7074736F70;
          goto LABEL_137;
        case 5:
          uint64_t v42 = 0x65646E6570737573;
          goto LABEL_137;
        case 6:
          uint64_t v42 = 0x656C6C65636E6163;
LABEL_137:
          unint64_t v40 = 0xE900000000000064;
          if (v39 != v42) {
            goto LABEL_142;
          }
          goto LABEL_141;
        case 7:
          if (v39 != 0x646579616C6564) {
            goto LABEL_142;
          }
          goto LABEL_141;
        case 8:
          unint64_t v40 = 0xE500000000000000;
          if (v39 != 0x6C616E6966) {
            goto LABEL_142;
          }
          goto LABEL_141;
        case 9:
          if (v39 != 0x74696566726F66) {
            goto LABEL_142;
          }
          goto LABEL_141;
        case 10:
          uint64_t v41 = 0x6E776F6E6B6E75;
          goto LABEL_140;
        default:
LABEL_140:
          if (v39 != v41) {
            goto LABEL_142;
          }
LABEL_141:
          if (v38 == v40)
          {
            swift_bridgeObjectRelease_n();
LABEL_149:
            uint64_t v45 = qword_1F1B63E40;
            char v32 = v64;
            uint64_t v44 = v64 - 1;
            if (!qword_1F1B63E40)
            {
              uint64_t v6 = v60;
              uint64_t v4 = v62;
              goto LABEL_197;
            }
            uint64_t v46 = 0;
            while (2)
            {
              unint64_t v47 = 0xE700000000000000;
              uint64_t v48 = 0x656D6167657270;
              switch(*((unsigned char *)&unk_1F1B63E30 + v46 + 32))
              {
                case 1:
                  unint64_t v47 = 0xE800000000000000;
                  uint64_t v48 = 0x6576694C7261656ELL;
                  break;
                case 2:
                  uint64_t v48 = 0x6572676F72506E69;
                  unint64_t v47 = 0xEA00000000007373;
                  break;
                case 3:
                  unint64_t v47 = 0xE500000000000000;
                  uint64_t v48 = 0x6B61657262;
                  break;
                case 4:
                  uint64_t v48 = 0x656E6F7074736F70;
                  goto LABEL_160;
                case 5:
                  uint64_t v48 = 0x65646E6570737573;
                  goto LABEL_160;
                case 6:
                  uint64_t v48 = 0x656C6C65636E6163;
LABEL_160:
                  unint64_t v47 = 0xE900000000000064;
                  break;
                case 7:
                  uint64_t v48 = 0x646579616C6564;
                  break;
                case 8:
                  unint64_t v47 = 0xE500000000000000;
                  uint64_t v48 = 0x6C616E6966;
                  break;
                case 9:
                  uint64_t v48 = 0x74696566726F66;
                  break;
                case 0xA:
                  uint64_t v48 = 0x6E776F6E6B6E75;
                  break;
                default:
                  break;
              }
              unint64_t v49 = 0xE700000000000000;
              uint64_t v50 = 0x656D6167657270;
              switch(v37)
              {
                case 1:
                  unint64_t v49 = 0xE800000000000000;
                  if (v48 != 0x6576694C7261656ELL) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                case 2:
                  unint64_t v49 = 0xEA00000000007373;
                  if (v48 != 0x6572676F72506E69) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                case 3:
                  unint64_t v49 = 0xE500000000000000;
                  if (v48 != 0x6B61657262) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                case 4:
                  uint64_t v51 = 0x656E6F7074736F70;
                  goto LABEL_177;
                case 5:
                  uint64_t v51 = 0x65646E6570737573;
                  goto LABEL_177;
                case 6:
                  uint64_t v51 = 0x656C6C65636E6163;
LABEL_177:
                  unint64_t v49 = 0xE900000000000064;
                  if (v48 != v51) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                case 7:
                  if (v48 != 0x646579616C6564) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                case 8:
                  unint64_t v49 = 0xE500000000000000;
                  if (v48 != 0x6C616E6966) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                case 9:
                  if (v48 != 0x74696566726F66) {
                    goto LABEL_182;
                  }
                  goto LABEL_181;
                case 10:
                  uint64_t v50 = 0x6E776F6E6B6E75;
                  goto LABEL_180;
                default:
LABEL_180:
                  if (v48 != v50) {
                    goto LABEL_182;
                  }
LABEL_181:
                  if (v47 != v49)
                  {
LABEL_182:
                    char v52 = sub_1C1520A9C();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v52) {
                      goto LABEL_190;
                    }
                    uint64_t v53 = v46 + 1;
                    if (__OFADD__(v46, 1))
                    {
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      sub_1C152052C();
                      __break(1u);
                      JUMPOUT(0x1C0F1AABCLL);
                    }
                    ++v46;
                    if (v53 == v45) {
                      goto LABEL_196;
                    }
                    continue;
                  }
                  swift_bridgeObjectRelease_n();
LABEL_190:
                  if (v36 >= v46)
                  {
LABEL_196:
                    uint64_t v6 = v60;
                    uint64_t v4 = v62;
                    char v32 = v64;
LABEL_197:
                    uint64_t v31 = v56;
                    char v5 = v58;
LABEL_198:
                    uint64_t v65 = v33;
                    if (v32 < v31 || v44 >= v31 || v32 != v31) {
                      unsigned __int8 *v44 = *v33;
                    }
                    uint64_t v31 = v33;
                    if (v5 <= v6) {
                      goto LABEL_202;
                    }
                    goto LABEL_108;
                  }
                  uint64_t v4 = v62;
                  uint64_t v6 = v60;
                  char v5 = v55;
                  uint64_t v31 = v56;
                  if (v64 != v58 || v44 >= v58) {
                    unsigned __int8 *v44 = *v55;
                  }
                  uint64_t v67 = v55;
                  if (v55 <= v60) {
                    goto LABEL_202;
                  }
LABEL_108:
                  char v32 = v44;
                  if (v31 <= v4) {
                    goto LABEL_202;
                  }
                  break;
              }
              goto LABEL_109;
            }
          }
LABEL_142:
          char v43 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v43) {
            goto LABEL_149;
          }
          if (v35 == ++v36)
          {
            uint64_t v36 = 0;
            goto LABEL_149;
          }
          break;
      }
    }
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_205;
  }
  if (__dst != __src || a2 <= __dst) {
    memmove(__dst, __src, v7);
  }
  uint64_t v57 = &v4[v7];
  uint64_t v65 = &v4[v7];
  if (v5 != v6 && (unint64_t)v5 < a3)
  {
LABEL_8:
    uint64_t v59 = v6;
    unint64_t v61 = v4;
    uint64_t v9 = v5;
    uint64_t v10 = qword_1F1B63E40;
    if (!qword_1F1B63E40)
    {
LABEL_93:
      uint64_t v30 = v59;
      if (v59 != v61) {
        *uint64_t v59 = *v61;
      }
      uint64_t v4 = v61 + 1;
      char v66 = v61 + 1;
      uint64_t v29 = v9;
      goto LABEL_96;
    }
    uint64_t v11 = 0;
    uint64_t v12 = *v9;
    uint64_t v13 = *v4;
    while (1)
    {
      unint64_t v14 = 0xE700000000000000;
      uint64_t v15 = 0x656D6167657270;
      switch(*((unsigned char *)&unk_1F1B63E30 + v11 + 32))
      {
        case 1:
          unint64_t v14 = 0xE800000000000000;
          uint64_t v15 = 0x6576694C7261656ELL;
          break;
        case 2:
          uint64_t v15 = 0x6572676F72506E69;
          unint64_t v14 = 0xEA00000000007373;
          break;
        case 3:
          unint64_t v14 = 0xE500000000000000;
          uint64_t v15 = 0x6B61657262;
          break;
        case 4:
          uint64_t v15 = 0x656E6F7074736F70;
          goto LABEL_19;
        case 5:
          uint64_t v15 = 0x65646E6570737573;
          goto LABEL_19;
        case 6:
          uint64_t v15 = 0x656C6C65636E6163;
LABEL_19:
          unint64_t v14 = 0xE900000000000064;
          break;
        case 7:
          uint64_t v15 = 0x646579616C6564;
          break;
        case 8:
          unint64_t v14 = 0xE500000000000000;
          uint64_t v15 = 0x6C616E6966;
          break;
        case 9:
          uint64_t v15 = 0x74696566726F66;
          break;
        case 0xA:
          uint64_t v15 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v16 = 0xE700000000000000;
      uint64_t v17 = 0x656D6167657270;
      switch(v12)
      {
        case 1:
          unint64_t v16 = 0xE800000000000000;
          if (v15 == 0x6576694C7261656ELL) {
            goto LABEL_40;
          }
          goto LABEL_41;
        case 2:
          unint64_t v16 = 0xEA00000000007373;
          if (v15 != 0x6572676F72506E69) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 3:
          unint64_t v16 = 0xE500000000000000;
          if (v15 != 0x6B61657262) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 4:
          uint64_t v18 = 0x656E6F7074736F70;
          goto LABEL_36;
        case 5:
          uint64_t v18 = 0x65646E6570737573;
          goto LABEL_36;
        case 6:
          uint64_t v18 = 0x656C6C65636E6163;
LABEL_36:
          unint64_t v16 = 0xE900000000000064;
          if (v15 != v18) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 7:
          if (v15 != 0x646579616C6564) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 8:
          unint64_t v16 = 0xE500000000000000;
          uint64_t v17 = 0x6C616E6966;
          goto LABEL_39;
        case 9:
          if (v15 != 0x74696566726F66) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 10:
          if (v15 != 0x6E776F6E6B6E75) {
            goto LABEL_41;
          }
          goto LABEL_40;
        default:
LABEL_39:
          if (v15 != v17) {
            goto LABEL_41;
          }
LABEL_40:
          if (v14 == v16)
          {
            swift_bridgeObjectRelease_n();
LABEL_47:
            uint64_t v20 = qword_1F1B63E40;
            if (!qword_1F1B63E40) {
              goto LABEL_93;
            }
            uint64_t v21 = 0;
            while (2)
            {
              unint64_t v22 = 0xE700000000000000;
              uint64_t v23 = 0x656D6167657270;
              switch(*((unsigned char *)&unk_1F1B63E30 + v21 + 32))
              {
                case 1:
                  unint64_t v22 = 0xE800000000000000;
                  uint64_t v23 = 0x6576694C7261656ELL;
                  break;
                case 2:
                  uint64_t v23 = 0x6572676F72506E69;
                  unint64_t v22 = 0xEA00000000007373;
                  break;
                case 3:
                  unint64_t v22 = 0xE500000000000000;
                  uint64_t v23 = 0x6B61657262;
                  break;
                case 4:
                  uint64_t v23 = 0x656E6F7074736F70;
                  goto LABEL_58;
                case 5:
                  uint64_t v23 = 0x65646E6570737573;
                  goto LABEL_58;
                case 6:
                  uint64_t v23 = 0x656C6C65636E6163;
LABEL_58:
                  unint64_t v22 = 0xE900000000000064;
                  break;
                case 7:
                  uint64_t v23 = 0x646579616C6564;
                  break;
                case 8:
                  unint64_t v22 = 0xE500000000000000;
                  uint64_t v23 = 0x6C616E6966;
                  break;
                case 9:
                  uint64_t v23 = 0x74696566726F66;
                  break;
                case 0xA:
                  uint64_t v23 = 0x6E776F6E6B6E75;
                  break;
                default:
                  break;
              }
              unint64_t v24 = 0xE700000000000000;
              uint64_t v25 = 0x656D6167657270;
              switch(v13)
              {
                case 1:
                  unint64_t v24 = 0xE800000000000000;
                  if (v23 != 0x6576694C7261656ELL) {
                    goto LABEL_80;
                  }
                  goto LABEL_79;
                case 2:
                  unint64_t v24 = 0xEA00000000007373;
                  if (v23 != 0x6572676F72506E69) {
                    goto LABEL_80;
                  }
                  goto LABEL_79;
                case 3:
                  unint64_t v24 = 0xE500000000000000;
                  if (v23 != 0x6B61657262) {
                    goto LABEL_80;
                  }
                  goto LABEL_79;
                case 4:
                  uint64_t v26 = 0x656E6F7074736F70;
                  goto LABEL_75;
                case 5:
                  uint64_t v26 = 0x65646E6570737573;
                  goto LABEL_75;
                case 6:
                  uint64_t v26 = 0x656C6C65636E6163;
LABEL_75:
                  unint64_t v24 = 0xE900000000000064;
                  if (v23 != v26) {
                    goto LABEL_80;
                  }
                  goto LABEL_79;
                case 7:
                  if (v23 != 0x646579616C6564) {
                    goto LABEL_80;
                  }
                  goto LABEL_79;
                case 8:
                  unint64_t v24 = 0xE500000000000000;
                  uint64_t v25 = 0x6C616E6966;
                  goto LABEL_78;
                case 9:
                  if (v23 != 0x74696566726F66) {
                    goto LABEL_80;
                  }
                  goto LABEL_79;
                case 10:
                  if (v23 != 0x6E776F6E6B6E75) {
                    goto LABEL_80;
                  }
                  goto LABEL_79;
                default:
LABEL_78:
                  if (v23 != v25) {
                    goto LABEL_80;
                  }
LABEL_79:
                  if (v22 != v24)
                  {
LABEL_80:
                    char v27 = sub_1C1520A9C();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v27) {
                      goto LABEL_87;
                    }
                    uint64_t v28 = v21 + 1;
                    if (__OFADD__(v21, 1)) {
                      goto LABEL_204;
                    }
                    ++v21;
                    if (v28 == v20) {
                      goto LABEL_93;
                    }
                    continue;
                  }
                  swift_bridgeObjectRelease_n();
LABEL_87:
                  if (v11 >= v21) {
                    goto LABEL_93;
                  }
                  uint64_t v29 = v9 + 1;
                  uint64_t v30 = v59;
                  if (v59 < v9 || v59 >= v29 || v59 != v9) {
                    *uint64_t v59 = *v9;
                  }
                  uint64_t v4 = v61;
LABEL_96:
                  uint64_t v6 = v30 + 1;
                  if (v4 >= v57 || (char v5 = v29, (unint64_t)v29 >= a3))
                  {
                    uint64_t v67 = v6;
                    goto LABEL_202;
                  }
                  break;
              }
              goto LABEL_8;
            }
          }
LABEL_41:
          char v19 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_47;
          }
          if (v10 == ++v11)
          {
            uint64_t v11 = 0;
            goto LABEL_47;
          }
          break;
      }
    }
  }
LABEL_202:
  sub_1C063502C(&v67, &v66, &v65);
  return 1;
}

unsigned char *storeEnumTagSinglePayload for SportsDataConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F1ACE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfiguration.CodingKeys()
{
  return &type metadata for SportsDataConfiguration.CodingKeys;
}

unint64_t sub_1C0F1AD24()
{
  unint64_t result = qword_1EA1A8F20;
  if (!qword_1EA1A8F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F20);
  }
  return result;
}

unint64_t sub_1C0F1AD7C()
{
  unint64_t result = qword_1EB867568;
  if (!qword_1EB867568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867568);
  }
  return result;
}

unint64_t sub_1C0F1ADD4()
{
  unint64_t result = qword_1EB867560;
  if (!qword_1EB867560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867560);
  }
  return result;
}

uint64_t sub_1C0F1AE28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70614D6465626D65 && a2 == 0xED000073676E6970;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xEE0073746E657645 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C162F190)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

NewsFeed::FeedGroupFreezingDisallow __swiftcall FeedGroupFreezingDisallow.init(rehydrate:)(NewsFeed::FeedGroupFreezingDisallow rehydrate)
{
  v1->rehydrate = rehydrate.rehydrate;
  return rehydrate;
}

uint64_t sub_1C0F1AFCC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0F1B02C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0F1B090(uint64_t a1)
{
  unint64_t v2 = sub_1BFCA47AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F1B0CC(uint64_t a1)
{
  unint64_t v2 = sub_1BFCA47AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0F1B108()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F1B15C()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0F1B174()
{
  return sub_1C1520E0C();
}

BOOL static FeedGroupFreezing.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static FeedGroupFreezingDisallow.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t FeedGroupFreezing.description.getter()
{
  return 0xD000000000000014;
}

uint64_t FeedGroupFreezingDisallow.rehydrate.getter()
{
  return *v0;
}

uint64_t sub_1C0F1B2A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7461726479686572 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0F1B344(uint64_t a1)
{
  unint64_t v2 = sub_1BFC98184();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0F1B380(uint64_t a1)
{
  unint64_t v2 = sub_1BFC98184();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupFreezingDisallow.encode(to:)(void *a1)
{
  sub_1BFC9811C(0, &qword_1EB85C628, (uint64_t (*)(void))sub_1BFC98184, (uint64_t)&type metadata for FeedGroupFreezingDisallow.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC98184();
  sub_1C1520F0C();
  sub_1C15207DC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedGroupFreezingDisallow.CodingKeys()
{
  return &type metadata for FeedGroupFreezingDisallow.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedGroupFreezing.CodingType()
{
  return &type metadata for FeedGroupFreezing.CodingType;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupFreezing.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F1B65CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupFreezing.CodingKeys()
{
  return &type metadata for FeedGroupFreezing.CodingKeys;
}

unint64_t sub_1C0F1B698()
{
  unint64_t result = qword_1EA1A8F28;
  if (!qword_1EA1A8F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F28);
  }
  return result;
}

unint64_t sub_1C0F1B6F0()
{
  unint64_t result = qword_1EA1A8F30;
  if (!qword_1EA1A8F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F30);
  }
  return result;
}

unint64_t sub_1C0F1B748()
{
  unint64_t result = qword_1EA1A8F38;
  if (!qword_1EA1A8F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F38);
  }
  return result;
}

id String.isNaturallyRTL.getter()
{
  unint64_t v0 = (void *)sub_1C151E5EC();
  id v1 = objc_msgSend(v0, sel_ne_isNaturallyRTL);

  return v1;
}

void *sub_1C0F1B7D8(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1C15155DC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C002FEFC(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v42 - v11;
  uint64_t v13 = sub_1C15154CC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v49 = a1;
  unint64_t v50 = a2;
  sub_1C151545C();
  sub_1BFF27ECC();
  uint64_t v17 = sub_1C151FE9C();
  unint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    unint64_t v49 = 0;
    unint64_t v50 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v49 = 0xD000000000000012;
    unint64_t v50 = 0x80000001C162F1F0;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C15156BC();
    swift_bridgeObjectRelease();
    sub_1C09CFBB0((uint64_t)v12, (uint64_t)v9);
    uint64_t v21 = sub_1C15156FC();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v9, 1, v21) == 1)
    {
      sub_1C0F1C3E4((uint64_t)v9);
      uint64_t v23 = v45;
    }
    else
    {
      uint64_t v25 = sub_1C15155FC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v21);
      uint64_t v23 = v45;
      if (v25)
      {
        uint64_t v26 = *(void *)(v25 + 16);
        if (!v26)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          unint64_t v24 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
          sub_1C0F1C3E4((uint64_t)v12);
          return v24;
        }
LABEL_9:
        v42[1] = v25;
        char v43 = v12;
        uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        uint64_t v27 = v5 + 16;
        unint64_t v29 = v25 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
        uint64_t v46 = *(void *)(v27 + 56);
        unint64_t v47 = v28;
        uint64_t v48 = v27;
        uint64_t v30 = (void (**)(char *, uint64_t))(v27 - 8);
        swift_bridgeObjectRetain();
        unint64_t v24 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v44 = v4;
        do
        {
          v47(v23, v29, v4);
          uint64_t v31 = sub_1C15155CC();
          if (v32)
          {
            uint64_t v33 = v31;
            uint64_t v34 = v32;
            uint64_t v35 = sub_1C15155BC();
            uint64_t v37 = v36;
            (*v30)(v23, v4);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v24 = sub_1C0EE351C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v39 = v24[2];
            unint64_t v38 = v24[3];
            if (v39 >= v38 >> 1) {
              unint64_t v24 = sub_1C0EE351C((void *)(v38 > 1), v39 + 1, 1, v24);
            }
            v24[2] = v39 + 1;
            unint64_t v40 = &v24[4 * v39];
            v40[4] = v35;
            v40[5] = v37;
            uint64_t v40[6] = v33;
            v40[7] = v34;
            uint64_t v4 = v44;
            uint64_t v23 = v45;
          }
          else
          {
            (*v30)(v23, v4);
          }
          v29 += v46;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease_n();
        uint64_t v12 = v43;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    uint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v26) {
      goto LABEL_19;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

unint64_t sub_1C0F1BC78(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1C151E8EC();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0F1BCC4(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1BFE7E4D4(a1, a2);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    sub_1BFF27ECC();
    uint64_t v6 = sub_1C151FE5C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1C029748C(1uLL, a1, a2);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v7, v9, v11, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t String.replacingCharacters(from:with:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  sub_1BFF27ECC();
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1C151FE6C();
  if ((v11 & 1) == 0)
  {
    do
    {
      a4 = sub_1C0F1BEF8(v9, v10, a2, a3, a4, a5);
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      unint64_t v9 = sub_1C151FE6C();
      a5 = v13;
    }
    while ((v14 & 1) == 0);
  }
  return a4;
}

uint64_t sub_1C0F1BEF8(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  sub_1C151FDFC();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1C151FDFC();
  uint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    uint64_t result = sub_1C149BAC0(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    uint64_t result = sub_1C151E85C();
    uint64_t v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    uint64_t v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unint64_t v33 = v20;
    uint64_t v34 = v22;
    uint64_t result = sub_1C149BAC0(v33, a5, a6);
    uint64_t v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unint64_t v35 = v26 | (v24 << 16);
    uint64_t v36 = v22;
    uint64_t result = sub_1C149BAC0(v35, a5, a6);
    uint64_t v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    uint64_t v37 = v22;
    uint64_t v38 = sub_1C151E85C();
    uint64_t v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        uint64_t result = HIBYTE(a4) & 0xF;
        uint64_t v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v40 & 0xFFFFFFFFFFFFLL;
        uint64_t v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    uint64_t v39 = v22;
    uint64_t result = sub_1C151E82C();
    uint64_t v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      uint64_t result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1C18C6240](result);
LABEL_25:
        sub_1C151E8EC();
        sub_1C0B345F0();
        sub_1C151E7FC();
        swift_bridgeObjectRelease();
        sub_1C151E7FC();
        sub_1C0F1BC78(a2, a5, a6);
        sub_1C151E7FC();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t static String.puzzleShowTeaserSelector.getter()
{
  return sub_1C0F1C2C8((uint64_t *)&unk_1EA1A8F40);
}

uint64_t static String.puzzleShowTeaserSelector.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C0F1C32C(a1, a2, qword_1EA1A8F40, &qword_1EA1A8F40[1]);
}

uint64_t (*static String.puzzleShowTeaserSelector.modify())()
{
  return j__swift_endAccess;
}

uint64_t static String.teaserEmbedContainerName.getter()
{
  return sub_1C0F1C2C8((uint64_t *)aTeaserembed);
}

uint64_t sub_1C0F1C2C8(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static String.teaserEmbedContainerName.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C0F1C32C(a1, a2, aTeaserembed, &aTeaserembed[1]);
}

uint64_t sub_1C0F1C32C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static String.teaserEmbedContainerName.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0F1C3E4(uint64_t a1)
{
  sub_1C002FEFC(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FeedGroupDebug.debugFormat.getter()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t FeedGroupDebug.debugIdentifier.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t FeedGroupDebug.debugName.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t FeedGroupDebug.debugTitle.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t FeedGroupDebug.debugCandidates.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t FeedGroupDebug.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_1C0F1C5E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1C0F1C638()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_1C0F1C690()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t method lookup function for FeedGroupDebug(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupDebug);
}

id FCIssue.coverImagePrimaryLimitedColor.getter()
{
  id v1 = objc_msgSend(v0, sel_coverImagePrimaryColor);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_ne_color);

  uint64_t v4 = sub_1C151F9EC();
  if (!v4)
  {

    return 0;
  }
  uint64_t v5 = (void *)v4;
  uint64_t v6 = sub_1C151F9EC();
  if (!v6)
  {

    return 0;
  }
  unint64_t v7 = (void *)v6;
  id v8 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

  return v8;
}

id FCIssue.coverImagePrimaryExtraLimitedColor.getter()
{
  id v1 = objc_msgSend(v0, sel_coverImagePrimaryColor);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_ne_color);

  uint64_t v4 = sub_1C151F9EC();
  if (!v4)
  {

    return 0;
  }
  uint64_t v5 = (void *)v4;
  uint64_t v6 = sub_1C151F9EC();
  if (!v6)
  {

    return 0;
  }
  unint64_t v7 = (void *)v6;
  id v8 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

  return v8;
}

void FCIssue.issueCoverModel.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1C0376414();
  *(void *)&double v5 = MEMORY[0x1F4188790](v4 - 8).n128_u64[0];
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v1, sel_coverImageAssetHandle, v5);
  if (v8)
  {
    unint64_t v9 = v8;
    id v10 = v2;
    objc_msgSend(v10, sel_coverImageAspectRatio);
    uint64_t v12 = v11;
    id v13 = v9;
    id v14 = objc_msgSend(v10, sel_layeredCoverJSON);
    if (!v14)
    {
LABEL_5:

      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(unsigned char *)(a1 + 56) = 0;
      return;
    }
    uint64_t v15 = v14;
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    sub_1C151545C();
    uint64_t v19 = sub_1C15154CC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 0, 1, v19);
    LOBYTE(v15) = sub_1C151823C();
    swift_bridgeObjectRelease();
    sub_1C03766D8((uint64_t)v7);
    if (v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    id v20 = v10;
    objc_msgSend(v20, sel_layeredCoverAspectRatio);
    uint64_t v22 = v21;

    *(void *)a1 = v20;
    *(void *)(a1 + 8) = v22;
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v20;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = 1;
  }
  else
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(unsigned char *)(a1 + 56) = 2;
  }
}

uint64_t sub_1C0F1CAF8()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

void FCIssue.traits.getter(uint64_t *a1@<X8>)
{
  FCIssue.issueCoverModel.getter((uint64_t)&v4);
  if (v11)
  {
    if (v11 == 1)
    {
      sub_1C00FA1F0(v4, v5, v6, v7, v8, v9, v10, 1);
      uint64_t v2 = qword_1F1B63DD8[0];
      if ((qword_1F1B63DD8[0] & ~qword_1F1B63DD0) == 0) {
        uint64_t v2 = 0;
      }
      uint64_t v3 = v2 | qword_1F1B63DD0;
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  else
  {
    sub_1C00FA1F0(v4, v5, v6, v7, v8, v9, v10, 0);
    uint64_t v3 = qword_1F1B63DA8;
  }
  *a1 = v3;
}

uint64_t _s8NewsFeed11FormatRatioO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      if (v4 != 1) {
        goto LABEL_6;
      }
LABEL_8:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      char v5 = sub_1C00DE998(v2, v3);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return v5 & 1;
    }
    if (v4 == 2) {
      goto LABEL_8;
    }
  }
  else if (!*(unsigned char *)(a2 + 8))
  {
    goto LABEL_8;
  }
LABEL_6:
  char v5 = 0;
  return v5 & 1;
}

unint64_t sub_1C0F1CC8C(uint64_t a1)
{
  unint64_t result = sub_1C0F1CCB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F1CCB4()
{
  unint64_t result = qword_1EA1A8F60;
  if (!qword_1EA1A8F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F60);
  }
  return result;
}

unint64_t sub_1C0F1CD08(void *a1)
{
  a1[1] = sub_1BFE41B98();
  a1[2] = sub_1BFE28654();
  unint64_t result = sub_1C0F1CD40();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F1CD40()
{
  unint64_t result = qword_1EA1A8F68;
  if (!qword_1EA1A8F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F68);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatRatio()
{
  return &type metadata for FormatRatio;
}

uint64_t static SharingActivity.download(issue:)(void *a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EB85F490 != -1) {
    swift_once();
  }
  sub_1BFE4DBE0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320E0;
  *(void *)(v3 + 32) = a1;
  sub_1C151EBEC();
  swift_retain();
  id v4 = a1;
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB870740 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EB870540;
  sub_1C151B39C();
  swift_allocObject();
  return sub_1C151A9EC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE8download5issueACSo7FCIssueC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB85F490 != -1) {
    swift_once();
  }
  sub_1BFE4DBE0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C15320E0;
  *(void *)(v6 + 32) = a1;
  uint64_t v16 = v6;
  sub_1C151EBEC();
  uint64_t v7 = v16;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  swift_retain();
  id v10 = a1;
  id v11 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB870740 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_1EB870540;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  uint64_t v16 = v7;
  sub_1C151A81C();
  swift_allocObject();
  id v13 = v12;
  return sub_1C151A7FC();
}

unsigned char *storeEnumTagSinglePayload for DebugFormatAccessibilityItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0F1D34CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatAccessibilityItem()
{
  return &type metadata for DebugFormatAccessibilityItem;
}

unint64_t sub_1C0F1D388()
{
  unint64_t result = qword_1EA1A8F70;
  if (!qword_1EA1A8F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F70);
  }
  return result;
}

uint64_t sub_1C0F1D3E0(void *a1)
{
  return FormatRunMode.encode(to:)(a1);
}

uint64_t _s8NewsFeed13FormatRunModeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)a1;
  float v3 = *(float *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (*(unsigned char *)(a1 + 4) == 1)
    {
      if (v4 == 1 && v2 == v3) {
        return 1;
      }
    }
    else if (v2 == 0.0)
    {
      if (v4 == 2 && LODWORD(v3) == 0) {
        return 1;
      }
    }
    else if (LODWORD(v2) == 1)
    {
      if (v4 == 2 && LODWORD(v3) == 1) {
        return 1;
      }
    }
    else if (v4 == 2 && LODWORD(v3) == 2)
    {
      return 1;
    }
  }
  else if (!*(unsigned char *)(a2 + 4) && v2 == v3)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1C0F1D4AC(uint64_t a1)
{
  unint64_t result = sub_1C0F1D4D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F1D4D4()
{
  unint64_t result = qword_1EA1A8F78;
  if (!qword_1EA1A8F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F78);
  }
  return result;
}

unint64_t sub_1C0F1D528(void *a1)
{
  a1[1] = sub_1BFCE85C0();
  a1[2] = sub_1C089BF18();
  unint64_t result = sub_1C0F1D560();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F1D560()
{
  unint64_t result = qword_1EA1A8F80;
  if (!qword_1EA1A8F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F80);
  }
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatRunMode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_1C0F1D610(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u) {
    return *(unsigned __int8 *)(a1 + 4);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C0F1D628(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatRunMode()
{
  return &type metadata for FormatRunMode;
}

void *sub_1C0F1D650(unsigned int *a1)
{
  if (*((unsigned __int8 *)a1 + 4) == 255)
  {
    id v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v1);
    sub_1C0181BEC(0);
    unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
    unsigned int v6 = (void *)(v5 + v4);
    uint64_t v7 = v6;
    uint64_t v8 = 1701736270;
    goto LABEL_3;
  }
  unsigned int v11 = *a1;
  if (!*((unsigned char *)a1 + 4))
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v21);
    sub_1C0181BEC(0);
    uint64_t v14 = *(void *)(*(void *)(v22 - 8) + 72);
    unint64_t v23 = (*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1527210;
    uint64_t v17 = (void *)(v16 + v23);
    id v20 = v17;
    uint64_t v18 = 0x206E6F2065636E4FLL;
    uint64_t v19 = 0xEE006E6565726353;
    goto LABEL_9;
  }
  if (*((unsigned char *)a1 + 4) == 1)
  {
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v12);
    sub_1C0181BEC(0);
    uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
    unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1527210;
    uint64_t v17 = (void *)(v16 + v15);
    uint64_t v18 = 0xD00000000000001ALL;
    uint64_t v19 = 0x80000001C162F330;
    id v20 = v17;
LABEL_9:
    sub_1C0433600(1701869908, 0xE400000000000000, v18, v19, v20);
    uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v25 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    v25(v17, 0, 1, v24);
    uint64_t v26 = (void *)((char *)v17 + v14);
    LOBYTE(v37[0]) = 0;
    sub_1C0437250(0xD000000000000014, 0x80000001C162F350, v11, v26);
    v25(v26, 0, 1, v24);
    sub_1C09BCFA4(0x65646F4D206E7552, 0xE800000000000000, 0, 0, v16, v37);
    swift_setDeallocating();
    goto LABEL_10;
  }
  if (*a1)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v31);
    sub_1C0181BEC(0);
    unint64_t v33 = (*(unsigned __int8 *)(*(void *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v32 - 8) + 80);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
    unsigned int v6 = (void *)(v5 + v33);
    if (v11 == 1)
    {
      uint64_t v8 = 0xD000000000000010;
      uint64_t v9 = 0x80000001C162F370;
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v7 = v6;
      uint64_t v8 = 0x737961776C41;
      uint64_t v9 = 0xE600000000000000;
    }
    goto LABEL_4;
  }
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v34);
  sub_1C0181BEC(0);
  unint64_t v36 = (*(unsigned __int8 *)(*(void *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
  unsigned int v6 = (void *)(v5 + v36);
  uint64_t v7 = v6;
  uint64_t v8 = 1701015119;
LABEL_3:
  uint64_t v9 = 0xE400000000000000;
LABEL_4:
  sub_1C0433600(1701869908, 0xE400000000000000, v8, v9, v7);
  uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
  sub_1C09BCFA4(0x65646F4D206E7552, 0xE800000000000000, 0, 0, v5, v37);
  swift_setDeallocating();
LABEL_10:
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v27 = swift_allocObject();
  *(void *)(inited + 32) = v27;
  *(void *)(v27 + 48) = v38;
  long long v28 = v37[1];
  *(_OWORD *)(v27 + 16) = v37[0];
  *(_OWORD *)(v27 + 32) = v28;
  unint64_t v29 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v29;
}

uint64_t sub_1C0F1DF74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F1DFBC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion;
  uint64_t v2 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_bundleSessionManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0F1E09C()
{
  return type metadata accessor for FormatSystemFactory();
}

uint64_t sub_1C0F1E0A4(uint64_t a1, uint64_t (*a2)(uint64_t a1), unsigned __int8 *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v622)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v623;
  uint64_t v624;
  unint64_t v625;
  uint64_t v626;
  void *v627;
  void *v628;
  uint64_t *v630;
  char v631;
  uint64_t *v632;
  char v633;
  uint64_t *v634;
  char v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  char *v641;
  uint64_t v642;
  uint64_t v643;
  char *v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  void *v649;
  uint64_t (*v650)(void);
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t (*v659)(void);
  uint64_t v660;
  uint64_t v661;
  unint64_t v662;
  uint64_t v663;
  char *v664;
  char *v665;
  uint64_t (*v666)(uint64_t);
  uint64_t v667;
  void (*v668)(uint64_t, uint64_t);
  uint64_t v669;
  int *v670;
  void *v671;
  uint64_t v672;
  void (*v673)(uint64_t, void, uint64_t, uint64_t);
  uint64_t v674;
  uint64_t v675;
  char *v676;
  void *v677;
  void (*v678)(char *, uint64_t (*)(void));
  long long v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  unint64_t v683;
  uint64_t v684;
  unint64_t v685;
  uint64_t v686;
  unint64_t v687;
  uint64_t v688[5];

  v662 = a5;
  v666 = a2;
  v669 = a1;
  v646 = sub_1C151794C();
  v645 = *(void *)(v646 - 8);
  MEMORY[0x1F4188790](v646);
  v644 = (char *)&v636 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v674 = type metadata accessor for FormatVersionRequirement(0);
  v677 = *(void **)(v674 - 8);
  MEMORY[0x1F4188790](v674);
  v658 = (uint64_t)&v636 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v657 = (uint64_t)&v636 - v14;
  MEMORY[0x1F4188790](v15);
  v656 = (uint64_t)&v636 - v16;
  MEMORY[0x1F4188790](v17);
  v655 = (uint64_t)&v636 - v18;
  MEMORY[0x1F4188790](v19);
  v654 = (uint64_t)&v636 - v20;
  MEMORY[0x1F4188790](v21);
  v653 = (uint64_t)&v636 - v22;
  MEMORY[0x1F4188790](v23);
  v652 = (uint64_t)&v636 - v24;
  MEMORY[0x1F4188790](v25);
  v651 = (uint64_t)&v636 - v26;
  MEMORY[0x1F4188790](v27);
  v667 = (uint64_t)&v636 - v28;
  unint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0F23EF0(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v30 - 8);
  v643 = (uint64_t)&v636 - v31;
  v638 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v638);
  v639 = (uint64_t)&v636 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  v641 = (char *)&v636 - v34;
  v642 = type metadata accessor for BundleSession();
  v640 = *(void *)(v642 - 8);
  MEMORY[0x1F4188790](v642);
  v637 = (uint64_t)&v636 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v647 = sub_1C151631C();
  v650 = *(uint64_t (**)(void))(v647 - 8);
  MEMORY[0x1F4188790](v647);
  v649 = (uint64_t *)((char *)&v636 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0F23EF0(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], v29);
  MEMORY[0x1F4188790](v37 - 8);
  v671 = (uint64_t *)((char *)&v636 - v38);
  sub_1C0F23EF0(0, &qword_1EB884D18, MEMORY[0x1E4F27A00], v29);
  MEMORY[0x1F4188790](v39 - 8);
  v670 = (int *)((char *)&v636 - v40);
  v675 = sub_1C151648C();
  v668 = *(void (**)(uint64_t, uint64_t))(v675 - 8);
  MEMORY[0x1F4188790](v675);
  v665 = (char *)&v636 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  v661 = (uint64_t)&v636 - v43;
  sub_1C0F23EF0(0, &qword_1EB884D10, MEMORY[0x1E4F279D8], v29);
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = (char *)&v636 - v45;
  unint64_t v47 = (uint64_t (*)(void))sub_1C15164AC();
  uint64_t v48 = *((void *)v47 - 1);
  MEMORY[0x1F4188790](v47);
  v664 = (char *)&v636 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  char v52 = (char *)&v636 - v51;
  MEMORY[0x1F4188790](v53);
  unint64_t v55 = (char *)&v636 - v54;
  v688[3] = a6;
  v688[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v688);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(boxed_opaque_existential_0, a4, a6);
  LODWORD(v648) = *a3;
  v672 = OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion;
  uint64_t v57 = self;
  char v58 = (void *)sub_1C151E5EC();
  sub_1C151644C();
  uint64_t v59 = (void *)sub_1C15163DC();
  uint64_t v60 = *(void (**)(char *, uint64_t (*)(void)))(v48 + 8);
  v660 = (uint64_t)v55;
  v673 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v48 + 8);
  v678 = v60;
  v60(v55, v47);
  id v61 = objc_msgSend(v57, sel_dateFormatFromTemplate_options_locale_, v58, 0, v59);

  if (v61)
  {
    uint64_t v62 = sub_1C151E62C();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xE000000000000000;
  }
  *(void *)&v679 = v62;
  *((void *)&v679 + 1) = v64;
  v686 = 72;
  v687 = 0xE100000000000000;
  unint64_t v65 = sub_1BFF27ECC();
  char v66 = sub_1C151FF0C();
  v676 = (char *)v65;
  if (v66)
  {
    swift_bridgeObjectRelease();
    LODWORD(v663) = 1;
  }
  else
  {
    *(void *)&v679 = v62;
    *((void *)&v679 + 1) = v64;
    v686 = 107;
    v687 = 0xE100000000000000;
    LODWORD(v663) = sub_1C151FF0C();
    swift_bridgeObjectRelease();
  }
  sub_1BFEF9A78();
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1C15A2640;
  *(void *)&v679 = 11624;
  *((void *)&v679 + 1) = 0xE200000000000000;
  unint64_t v68 = (void *)sub_1C151769C();
  objc_msgSend(v68, sel_horizontalSizeClass);

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v69 = *((void *)&v679 + 1);
  *(void *)(v67 + 32) = v679;
  *(void *)(v67 + 40) = v69;
  *(void *)&v679 = 11638;
  *((void *)&v679 + 1) = 0xE200000000000000;
  uint64_t v70 = (void *)sub_1C151769C();
  objc_msgSend(v70, sel_verticalSizeClass);

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v71 = *((void *)&v679 + 1);
  *(void *)(v67 + 48) = v679;
  *(void *)(v67 + 56) = v71;
  strcpy((char *)&v679, "column-");
  *((void *)&v679 + 1) = 0xE700000000000000;
  v686 = sub_1C151754C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v72 = *((void *)&v679 + 1);
  *(void *)(v67 + 64) = v679;
  *(void *)(v67 + 72) = v72;
  *(void *)&v679 = 0x2D676E616CLL;
  *((void *)&v679 + 1) = 0xE500000000000000;
  sub_1C151644C();
  uint64_t v73 = v661;
  sub_1C151649C();
  v678(v52, v47);
  sub_1C151645C();
  v668 = (void (*)(uint64_t, uint64_t))*((void *)v668 + 1);
  v668(v73, v675);
  uint64_t v74 = sub_1C15163AC();
  uint64_t v75 = *(void *)(v74 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v46, 1, v74) == 1)
  {
    sub_1C0F23DBC((uint64_t)v46, &qword_1EB884D10, MEMORY[0x1E4F279D8]);
  }
  else
  {
    sub_1C151639C();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v74);
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v76 = sub_1C151E6BC();
  uint64_t v78 = v77;
  swift_bridgeObjectRelease();
  *(void *)(v67 + 80) = v76;
  *(void *)(v67 + 88) = v78;
  *(void *)&v679 = 0x2D676E616CLL;
  *((void *)&v679 + 1) = 0xE500000000000000;
  uint64_t v79 = v660;
  sub_1C151644C();
  uint64_t v80 = v665;
  sub_1C151649C();
  v659 = v47;
  v678((char *)v79, v47);
  sub_1C151647C();
  uint64_t v81 = v675;
  uint64_t v82 = (void (*)(char *, uint64_t))v668;
  v668((uint64_t)v80, v675);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v83 = sub_1C151E6BC();
  uint64_t v85 = v84;
  swift_bridgeObjectRelease();
  *(void *)(v67 + 96) = v83;
  *(void *)(v67 + 104) = v85;
  *(void *)&v679 = 0x2D676E616CLL;
  *((void *)&v679 + 1) = 0xE500000000000000;
  sub_1C151644C();
  sub_1C151649C();
  uint64_t v86 = v659;
  v678((char *)v79, v659);
  sub_1C151646C();
  v82(v80, v81);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v87 = sub_1C151E6BC();
  uint64_t v89 = v88;
  swift_bridgeObjectRelease();
  *(void *)(v67 + 112) = v87;
  *(void *)(v67 + 120) = v89;
  strcpy((char *)&v679, "region-");
  *((void *)&v679 + 1) = 0xE700000000000000;
  uint64_t v90 = v664;
  sub_1C151644C();
  id v91 = v670;
  sub_1C151643C();
  v678(v90, v86);
  uint64_t v92 = sub_1C151642C();
  uint64_t v93 = *(void *)(v92 - 8);
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92) == 1)
  {
    sub_1C0F23DBC((uint64_t)v91, &qword_1EB884D18, MEMORY[0x1E4F27A00]);
  }
  else
  {
    sub_1C151639C();
    (*(void (**)(id, uint64_t))(v93 + 8))(v91, v92);
  }
  unint64_t v94 = 0xEA00000000002D64;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v95 = sub_1C151E6BC();
  uint64_t v97 = v96;
  swift_bridgeObjectRelease();
  *(void *)(v67 + 128) = v95;
  *(void *)(v67 + 136) = v97;
  strcpy((char *)&v679, "time-hour-");
  BYTE11(v679) = 0;
  HIDWORD(v679) = -369098752;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v98 = *((void *)&v679 + 1);
  *(void *)(v67 + 144) = v679;
  *(void *)(v67 + 152) = v98;
  strcpy((char *)&v679, "platform-");
  WORD5(v679) = 0;
  HIDWORD(v679) = -385875968;
  uint64_t v99 = (void *)sub_1C151769C();
  objc_msgSend(v99, sel_userInterfaceIdiom);

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v100 = *((void *)&v679 + 1);
  *(void *)(v67 + 160) = v679;
  *(void *)(v67 + 168) = v100;
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  v661 = 0xD000000000000012;
  *(void *)&v679 = 0xD000000000000012;
  *((void *)&v679 + 1) = 0x80000001C16257A0;
  uint64_t v101 = (void *)sub_1C151769C();
  objc_msgSend(v101, sel_legibilityWeight);

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v102 = *((void *)&v679 + 1);
  *(void *)(v67 + 176) = v679;
  *(void *)(v67 + 184) = v102;
  strcpy((char *)&v679, "ax-contrast-");
  BYTE13(v679) = 0;
  HIWORD(v679) = -5120;
  id v103 = (void *)sub_1C151769C();
  objc_msgSend(v103, sel_accessibilityContrast);

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v104 = *((void *)&v679 + 1);
  *(void *)(v67 + 192) = v679;
  *(void *)(v67 + 200) = v104;
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&v679 = 0xD000000000000016;
  *((void *)&v679 + 1) = 0x80000001C16257C0;
  uint64_t v105 = (void *)sub_1C15176CC();
  UIContentSizeCategory.description.getter();

  uint64_t v106 = sub_1C151E6BC();
  unint64_t v108 = v107;
  swift_bridgeObjectRelease();
  v686 = v106;
  v687 = v108;
  v684 = 95;
  v685 = 0xE100000000000000;
  v682 = 45;
  v683 = 0xE100000000000000;
  sub_1C151FEBC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v109 = *((void *)&v679 + 1);
  *(void *)(v67 + 208) = v679;
  *(void *)(v67 + 216) = v109;
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&v679 = 0x762D74616D726F66;
  *((void *)&v679 + 1) = 0xEF2D6E6F69737265;
  sub_1C151920C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v110 = *((void *)&v679 + 1);
  *(void *)(v67 + 224) = v679;
  *(void *)(v67 + 232) = v110;
  strcpy((char *)&v679, "app-version-");
  BYTE13(v679) = 0;
  HIWORD(v679) = -5120;
  unint64_t v111 = self;
  id v112 = objc_msgSend(v111, sel_mainBundle);
  uint64_t v113 = (uint64_t)v671;
  sub_1C15192CC();
  uint64_t v114 = sub_1C151928C();
  uint64_t v115 = *(void *)(v114 - 8);
  int v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114);
  v675 = v115;
  v672 = v114;
  if (v116 == 1)
  {
    sub_1C0F23DBC(v113, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  }
  else
  {
    sub_1C151920C();
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v113, v114);
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v117 = sub_1C151E6BC();
  uint64_t v119 = v118;
  swift_bridgeObjectRelease();
  *(void *)(v67 + 240) = v117;
  *(void *)(v67 + 248) = v119;
  strcpy((char *)&v679, "app-build-");
  BYTE11(v679) = 0;
  HIDWORD(v679) = -369098752;
  id v120 = objc_msgSend(v111, sel_mainBundle);
  sub_1C151FB2C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v121 = sub_1C151E6BC();
  uint64_t v123 = v122;
  swift_bridgeObjectRelease();
  *(void *)(v67 + 256) = v121;
  *(void *)(v67 + 264) = v123;
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  strcpy((char *)&v679, "app-bundle-id-");
  HIBYTE(v679) = -18;
  id v124 = objc_msgSend(v111, sel_mainBundle);
  id v125 = objc_msgSend(v124, sel_bundleIdentifier);

  int64_t v126 = v669;
  uint64_t v127 = (uint64_t)v676;
  if (v125)
  {
    uint64_t v128 = sub_1C151E62C();
    unint64_t v130 = v129;

    v686 = v128;
    v687 = v130;
    v684 = 46;
    v685 = 0xE100000000000000;
    v682 = 45;
    v683 = 0xE100000000000000;
    sub_1C151FEBC();
    swift_bridgeObjectRelease();
  }
  uint64_t v131 = 0xD000000000000016;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  long long v132 = (void *)*((void *)&v679 + 1);
  uint64_t v133 = sub_1C151E6BC();
  uint64_t v135 = v134;
  swift_bridgeObjectRelease();
  *(void *)(v67 + 272) = v133;
  *(void *)(v67 + 280) = v135;
  *(void *)&v679 = 0x2D656C616373;
  *((void *)&v679 + 1) = 0xE600000000000000;
  sub_1C15176EC();
  if ((~*(void *)&v136 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_186;
  }
  if (v136 <= -9.22337204e18)
  {
LABEL_186:
    __break(1u);
    goto LABEL_187;
  }
  if (v136 >= 9.22337204e18)
  {
LABEL_187:
    __break(1u);
LABEL_188:
    swift_once();
    goto LABEL_53;
  }
  v686 = (uint64_t)v136;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v137 = *((void *)&v679 + 1);
  *(void *)(v67 + 288) = v679;
  *(void *)(v67 + 296) = v137;
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&v679 = 0xD000000000000015;
  *((void *)&v679 + 1) = 0x80000001C16257E0;
  uint64_t v138 = (void *)sub_1C151769C();
  objc_msgSend(v138, sel_userInterfaceStyle);

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v139 = *((void *)&v679 + 1);
  *(void *)(v67 + 304) = v679;
  *(void *)(v67 + 312) = v139;
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  v664 = (char *)0xD000000000000011;
  *(void *)&v679 = 0xD000000000000011;
  *((void *)&v679 + 1) = 0x80000001C1625800;
  sub_1C151768C();
  v663 = 0xD000000000000015;
  uint64_t v140 = sub_1C151E6BC();
  unint64_t v142 = v141;
  swift_bridgeObjectRelease();
  v686 = v140;
  v687 = v142;
  v684 = 32;
  v685 = 0xE100000000000000;
  v682 = 45;
  v683 = 0xE100000000000000;
  sub_1C151FEBC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v143 = *((void *)&v679 + 1);
  *(void *)(v67 + 320) = v679;
  *(void *)(v67 + 328) = v143;
  uint64_t v144 = sub_1BFEF4060(v67);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v686 = v144;
  uint64_t v145 = (void *)sub_1C15176CC();
  LOBYTE(v144) = sub_1C151F66C();

  if (v144)
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000018, 0x80000001C1626100);
    swift_bridgeObjectRelease();
  }
  uint64_t v146 = (void *)sub_1C151769C();
  id v147 = objc_msgSend(v146, sel_legibilityWeight);

  if (v147 == (id)-1)
  {
    BOOL IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
    unint64_t v94 = v662;
    if (!IsBoldTextEnabled) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  unint64_t v94 = v662;
  if (v147 && (v147 == (id)1 || UIAccessibilityIsBoldTextEnabled()))
  {
LABEL_29:
    sub_1BFEFFC1C((uint64_t *)&v679, 0x2D646C6F622D7861, 0xEC00000074786574);
    swift_bridgeObjectRelease();
  }
LABEL_30:
  if (UIAccessibilityIsGrayscaleEnabled())
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0x73796172672D7861, 0xEC000000656C6163);
    swift_bridgeObjectRelease();
  }
  uint64_t v149 = (void *)sub_1C151769C();
  id v150 = objc_msgSend(v149, sel_accessibilityContrast);

  if (v150 == (id)-1)
  {
    BOOL v152 = UIAccessibilityDarkerSystemColorsEnabled();
    uint64_t v151 = v647;
    if (!v152) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  uint64_t v151 = v647;
  if (v150 && (v150 == (id)1 || UIAccessibilityDarkerSystemColorsEnabled()))
  {
LABEL_38:
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000017, 0x80000001C16260E0);
    swift_bridgeObjectRelease();
  }
LABEL_39:
  if (UIAccessibilityIsInvertColorsEnabled())
  {
    sub_1BFEFFC1C((uint64_t *)&v679, v661, 0x80000001C16260C0);
    swift_bridgeObjectRelease();
    if (!UIAccessibilityIsReduceMotionEnabled())
    {
LABEL_41:
      if (!UIAccessibilityIsReduceTransparencyEnabled()) {
        goto LABEL_42;
      }
      goto LABEL_80;
    }
  }
  else if (!UIAccessibilityIsReduceMotionEnabled())
  {
    goto LABEL_41;
  }
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000010, 0x80000001C16260A0);
  swift_bridgeObjectRelease();
  if (!UIAccessibilityIsReduceTransparencyEnabled())
  {
LABEL_42:
    if (!UIAccessibilityShouldDifferentiateWithoutColor()) {
      goto LABEL_43;
    }
    goto LABEL_81;
  }
LABEL_80:
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000016, 0x80000001C1626080);
  swift_bridgeObjectRelease();
  if (!UIAccessibilityShouldDifferentiateWithoutColor())
  {
LABEL_43:
    if (!UIAccessibilityButtonShapesEnabled()) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
LABEL_81:
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000025, 0x80000001C1626050);
  swift_bridgeObjectRelease();
  if (UIAccessibilityButtonShapesEnabled())
  {
LABEL_44:
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000010, 0x80000001C1626030);
    swift_bridgeObjectRelease();
  }
LABEL_45:
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  uint64_t v153 = swift_bridgeObjectRelease();
  *(void *)&v679 = 0x6D726F6674616C70;
  *((void *)&v679 + 1) = 0xEF2D6C65646F6D2DLL;
  id v154 = (id)MEMORY[0x1C18C8ED0](v153);
  sub_1C151E62C();

  sub_1C151E6BC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, v679, *((uint64_t *)&v679 + 1));
  swift_bridgeObjectRelease();
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&v679 = v664;
  *((void *)&v679 + 1) = 0x80000001C1625820;
  id v155 = (id)NSSNTPBAnalyticsOsVersionValue();
  sub_1C151E62C();

  sub_1C151E6BC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, v679, *((uint64_t *)&v679 + 1));
  swift_bridgeObjectRelease();
  *(void *)&v679 = 0;
  *((void *)&v679 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&v679 = 0xD000000000000019;
  *((void *)&v679 + 1) = 0x80000001C1610500;
  sub_1C15180CC();
  sub_1C151809C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, v679, *((uint64_t *)&v679 + 1));
  swift_bridgeObjectRelease();
  sub_1BFEDFA3C();
  if (sub_1C151FD1C())
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000017, 0x80000001C1626010);
    swift_bridgeObjectRelease();
  }
  uint64_t v156 = v649;
  sub_1C151630C();
  uint64_t v157 = sub_1BFEDEB48();
  (*((void (**)(void *, uint64_t))v650 + 1))(v156, v151);
  uint64_t v158 = v157[2];
  if (v158)
  {
    uint64_t v159 = v157 + 5;
    do
    {
      uint64_t v160 = *(v159 - 1);
      uint64_t v161 = *v159;
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C((uint64_t *)&v679, v160, v161);
      swift_bridgeObjectRelease();
      v159 += 2;
      --v158;
    }
    while (v158);
  }
  swift_bridgeObjectRelease();
  uint64_t v162 = *(void *)(v94 + 40);
  uint64_t v163 = *(void *)(v94 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v94 + 16), v162);
  uint64_t v164 = (*(uint64_t (**)(uint64_t, uint64_t))(v163 + 8))(v162, v163);
  sub_1BFEF3808(v164);
  LOBYTE(v679) = v648;
  unint64_t v165 = FeedKind.selector.getter();
  if (v166)
  {
    sub_1BFEFFC1C((uint64_t *)&v679, v165, v166);
    swift_bridgeObjectRelease();
  }
  v684 = v686;
  long long v132 = (void *)(v94 + 56);
  uint64_t v127 = MEMORY[0x1E4FBC870];
  v682 = MEMORY[0x1E4FBC870];
  int64_t v126 = v675;
  if (qword_1EB886BA0 != -1) {
    goto LABEL_188;
  }
LABEL_53:
  uint64_t v167 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v167);
  if (qword_1EB887670 != -1) {
    swift_once();
  }
  uint64_t v168 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v168);
  uint64_t v169 = *(void *)(v94 + 80);
  uint64_t v170 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v169);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v170 + 8))(v169, v170))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, v661, 0x80000001C1625FF0);
    swift_bridgeObjectRelease();
  }
  uint64_t v171 = *(void *)(v94 + 80);
  uint64_t v172 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v171);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v172 + 32))(v171, v172))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD00000000000001FLL, 0x80000001C1625FD0);
    swift_bridgeObjectRelease();
  }
  uint64_t v173 = *(void *)(v94 + 80);
  uint64_t v174 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v173);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v174 + 112))(v173, v174))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD00000000000001CLL, 0x80000001C1625FB0);
    swift_bridgeObjectRelease();
  }
  uint64_t v175 = *(void *)(v94 + 80);
  uint64_t v176 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v175);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v176 + 88))(v175, v176))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000018, 0x80000001C1625F60);
    swift_bridgeObjectRelease();
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000021, 0x80000001C1625F80);
    swift_bridgeObjectRelease();
  }
  uint64_t v177 = *(void *)(v94 + 80);
  uint64_t v178 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v177);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v178 + 128))(v177, v178))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, v663, 0x80000001C1625F40);
    swift_bridgeObjectRelease();
  }
  uint64_t v179 = *(void *)(v94 + 80);
  uint64_t v180 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v179);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v180 + 96))(v179, v180))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD00000000000002DLL, 0x80000001C1625F10);
    swift_bridgeObjectRelease();
  }
  uint64_t v181 = *(void *)(v94 + 80);
  uint64_t v182 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v181);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v182 + 168))(v181, v182))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000016, 0x80000001C1625EF0);
    swift_bridgeObjectRelease();
  }
  uint64_t v183 = *(void *)(v94 + 80);
  uint64_t v184 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v183);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v184 + 192))(v183, v184))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000026, 0x80000001C1625EC0);
    swift_bridgeObjectRelease();
  }
  uint64_t v185 = *(void *)(v94 + 80);
  uint64_t v186 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v185);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v186 + 176))(v185, v186))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000014, 0x80000001C1625EA0);
    swift_bridgeObjectRelease();
  }
  uint64_t v187 = *(void *)(v94 + 80);
  uint64_t v188 = *(void *)(v94 + 88);
  __swift_project_boxed_opaque_existential_1(v132, v187);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v188 + 184))(v187, v188))
  {
    sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000016, 0x80000001C1625E80);
    swift_bridgeObjectRelease();
  }
  char v189 = sub_1C151809C();
  sub_1BFC66384((uint64_t)v132, (uint64_t)&v679);
  if (v189)
  {
    uint64_t v190 = v680;
    uint64_t v191 = v681;
    __swift_project_boxed_opaque_existential_1(&v679, v680);
    LOBYTE(v190) = (*(uint64_t (**)(uint64_t, uint64_t))(v191 + 200))(v190, v191);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v679);
    if (v190)
    {
      sub_1BFEFFC1C(&v686, 0xD000000000000019, 0x80000001C1625E60);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v679);
  }
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD00000000000001DLL, 0x80000001C1625840);
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000019, 0x80000001C1625860);
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD00000000000001DLL, 0x80000001C1625880);
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD00000000000001CLL, 0x80000001C16258A0);
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000018, 0x80000001C16258C0);
  swift_bridgeObjectRelease();
  unint64_t v192 = 0xD000000000000014;
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000014, 0x80000001C16258E0);
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD00000000000001BLL, 0x80000001C1625900);
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000018, 0x80000001C1625920);
  swift_bridgeObjectRelease();
  sub_1BFEF3808(v682);
  v670 = (int *)self;
  uint64_t v193 = (int64_t *)objc_msgSend(v670, sel_sharedAccount);
  v686 = v127;
  id v194 = objc_msgSend(v193, sel_currentStoreFrontID);
  if (v194)
  {
    uint64_t v195 = v194;
    uint64_t v196 = sub_1C151E62C();
    uint64_t v198 = v197;

    uint64_t v199 = sub_1C151E62C();
    if (v198)
    {
      if (v199 == v196 && v198 == v200)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v201 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v201 & 1) == 0)
        {
          if (sub_1C151E62C() == v196 && v198 == v203)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v204 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if ((v204 & 1) == 0)
            {
              if (sub_1C151E62C() == v196 && v198 == v630)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                v631 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                if ((v631 & 1) == 0) {
                  goto LABEL_175;
                }
              }
              swift_bridgeObjectRelease();
              id v202 = "account-store-front-ca";
              goto LABEL_98;
            }
          }
          swift_bridgeObjectRelease();
          id v202 = "account-store-front-au";
LABEL_98:
          sub_1BFEFFC1C((uint64_t *)&v679, 0xD000000000000016, (unint64_t)(v202 - 32) | 0x8000000000000000);
          goto LABEL_99;
        }
      }
      swift_bridgeObjectRelease();
      id v202 = "account-store-front-us";
      goto LABEL_98;
    }
  }
  else
  {
    sub_1C151E62C();
  }
  swift_bridgeObjectRelease();
  sub_1C151E62C();
  swift_bridgeObjectRelease();
  sub_1C151E62C();
  swift_bridgeObjectRelease();
  sub_1C151E62C();
  swift_bridgeObjectRelease();
  sub_1C151E62C();
LABEL_99:
  swift_bridgeObjectRelease();
  uint64_t v205 = v663;
  while (1)
  {
    if (objc_msgSend(v193, sel_isPrimaryAccountEmailAddress))
    {
      sub_1BFEFFC1C((uint64_t *)&v679, v131 + 7, 0x80000001C1625DA0);
      swift_bridgeObjectRelease();
    }
    *(void *)&v679 = 0;
    *((void *)&v679 + 1) = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    *(void *)&v679 = v205;
    *((void *)&v679 + 1) = 0x80000001C1625940;
    id v206 = objc_msgSend(v193, sel_primaryLanguageCode);
    sub_1C151E62C();

    sub_1C151E6BC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1BFEFFC1C((uint64_t *)&v679, v679, *((uint64_t *)&v679 + 1));

    swift_bridgeObjectRelease();
    sub_1BFEF3808(v686);
    uint64_t v207 = *(void *)(v94 + 120);
    uint64_t v208 = *(void *)(v94 + 128);
    v649 = (void *)(v94 + 96);
    __swift_project_boxed_opaque_existential_1((void *)(v94 + 96), v207);
    uint64_t v193 = (int64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v208 + 8))(v207, v208);
    int64_t v209 = v193[2];
    v665 = (char *)v192;
    if (!v209) {
      break;
    }
    v686 = MEMORY[0x1E4FBC860];
    uint64_t v198 = &v686;
    sub_1BFF661B8(0, v209, 0);
    uint64_t v196 = v686;
    int64_t v126 = sub_1BFD44A04((uint64_t)v193);
    unint64_t v94 = v210;
    v676 = (char *)(v193 + 7);
    int v212 = v211 & 1;
    v673 = (void (*)(uint64_t, void, uint64_t, uint64_t))0xD000000000000010;
    v671 = (void *)0x80000001C1610560;
    while ((v126 & 0x8000000000000000) == 0 && v126 < 1 << *((unsigned char *)v193 + 32))
    {
      if (((*(void *)&v676[((unint64_t)v126 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v126) & 1) == 0) {
        goto LABEL_173;
      }
      if (*((_DWORD *)v193 + 9) != v94) {
        goto LABEL_174;
      }
      LODWORD(v678) = v212;
      uint64_t v131 = (uint64_t)v193;
      int v213 = *(_DWORD *)(v193[6] + 4 * v126);
      *(void *)&v679 = 0;
      *((void *)&v679 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      *(void *)&v679 = v673;
      *((void *)&v679 + 1) = v671;
      LODWORD(v682) = v213;
      sub_1C152088C();
      uint64_t v198 = (uint64_t *)&v679;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v214 = *((void *)&v679 + 1);
      unint64_t v192 = v679;
      v686 = v196;
      unint64_t v216 = *(void *)(v196 + 16);
      unint64_t v215 = *(void *)(v196 + 24);
      if (v216 >= v215 >> 1)
      {
        uint64_t v198 = &v686;
        sub_1BFF661B8(v215 > 1, v216 + 1, 1);
        uint64_t v196 = v686;
      }
      *(void *)(v196 + 16) = v216 + 1;
      uint64_t v217 = v196 + 16 * v216;
      *(void *)(v217 + 32) = v192;
      *(void *)(v217 + 40) = v214;
      int64_t v218 = sub_1BFD43BF8(v126, v94, v678 & 1, v131);
      int64_t v126 = v218;
      unint64_t v94 = v219;
      int v212 = v220 & 1;
      --v209;
      uint64_t v193 = (int64_t *)v131;
      if (!v209)
      {
        sub_1C0153754(v218, v219, v212);
        swift_bridgeObjectRelease();
        unint64_t v94 = v662;
        uint64_t v131 = 0xD000000000000016;
        int64_t v126 = v675;
        goto LABEL_113;
      }
    }
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    if (sub_1C151E62C() == v196 && v198 == v632)
    {
      swift_bridgeObjectRelease();
LABEL_179:
      swift_bridgeObjectRelease();
      id v202 = "account-store-front-uk";
      goto LABEL_98;
    }
    v633 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v633) {
      goto LABEL_179;
    }
    if (sub_1C151E62C() == v196 && v198 == v634)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v205 = v663;
      goto LABEL_184;
    }
    v635 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v205 = v663;
    if (v635)
    {
LABEL_184:
      sub_1BFEFFC1C((uint64_t *)&v679, v131 + 3, 0x80000001C1625DC0);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v196 = MEMORY[0x1E4FBC860];
LABEL_113:
  uint64_t v221 = sub_1BFEF4060(v196);
  swift_bridgeObjectRelease();
  sub_1BFEF3808(v221);
  id v222 = objc_msgSend(*(id *)(v94 + 136), sel_cachedSubscription);
  uint64_t v223 = v131 + 5;
  unint64_t v224 = 0x80000001C1606DA0;
  switch((unint64_t)objc_msgSend(v222, sel_unprotectedSubscriptionState))
  {
    case 0uLL:
      uint64_t v223 = v131 + 3;
      uint64_t v225 = "bundle-subscription-trial";
      goto LABEL_118;
    case 1uLL:
      uint64_t v223 = v131 + 8;
      uint64_t v225 = "bundle-subscription-subscribed";
      goto LABEL_118;
    case 2uLL:
      goto LABEL_119;
    case 3uLL:
      uint64_t v223 = v131 + 12;
      uint64_t v225 = "bundle-subscription-not-subscribed";
      goto LABEL_118;
    default:
      uint64_t v225 = "bundle-subscription-unknown";
LABEL_118:
      unint64_t v224 = (unint64_t)(v225 - 32) | 0x8000000000000000;
LABEL_119:

      sub_1BFEFFC1C((uint64_t *)&v679, v223, v224);
      swift_bridgeObjectRelease();
      sub_1BFEDFA7C((uint64_t)&v679);
      uint64_t v226 = *((void *)&v679 + 1);
      sub_1BFEDF9D8(v679, *((uint64_t *)&v679 + 1));
      if (v226) {
        uint64_t v227 = 0xEE00656E696C6666;
      }
      else {
        uint64_t v227 = 0xED0000656E696C6ELL;
      }
      sub_1BFEFFC1C((uint64_t *)&v679, 0x6F2D656369766564, v227);
      swift_bridgeObjectRelease();
      uint64_t v228 = *(void *)(v94 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_bundleSessionManager + 24);
      uint64_t v229 = *(void *)(v94 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_bundleSessionManager + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v94 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_bundleSessionManager), v228);
      uint64_t v230 = (uint64_t)v641;
      (*(void (**)(uint64_t, uint64_t))(v229 + 40))(v228, v229);
      uint64_t v231 = v639;
      sub_1C0F23E2C(v230, v639);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v233 = v667;
        uint64_t v234 = v643;
        uint64_t v235 = v642;
        uint64_t v236 = v640;
        if (EnumCaseMultiPayload == 1) {
          sub_1C0EA3E7C(v231, v643);
        }
        else {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v640 + 56))(v643, 1, 1, v642);
        }
      }
      else
      {
        uint64_t v234 = v643;
        sub_1C0EA3E7C(v231, v643);
        uint64_t v233 = v667;
        uint64_t v235 = v642;
        uint64_t v236 = v640;
      }
      sub_1C0F23E90(v230, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235) == 1)
      {
        sub_1C0F23DBC(v234, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession);
      }
      else
      {
        uint64_t v237 = v234;
        uint64_t v238 = v637;
        sub_1C0F23F8C(v237, v637, (uint64_t (*)(void))type metadata accessor for BundleSession);
        uint64_t v239 = sub_1C0D43270();
        sub_1BFEF3808(v239);
        sub_1C0F23E90(v238, (uint64_t (*)(void))type metadata accessor for BundleSession);
      }
      uint64_t v240 = v663;
      v668 = (void (*)(uint64_t, uint64_t))objc_msgSend(v670, sel_sharedAccount);
      sub_1C0F23EF0(0, &qword_1EB87A6B0, (uint64_t (*)(uint64_t))sub_1BFF9544C, MEMORY[0x1E4FBBE00]);
      uint64_t v241 = swift_allocObject();
      *(_OWORD *)(v241 + 16) = xmmword_1C15A2650;
      uint64_t v242 = type metadata accessor for FormatOption();
      v660 = swift_allocBox();
      uint64_t v244 = v243;
      if (qword_1EB887610 != -1) {
        swift_once();
      }
      uint64_t v245 = v672;
      uint64_t v246 = (uint64_t (*)(void))__swift_project_value_buffer(v672, (uint64_t)qword_1EB93CA20);
      uint64_t v247 = *(void (**)(uint64_t, uint64_t (*)(void), uint64_t))(v126 + 16);
      v247(v233, v246, v245);
      v678 = (void (*)(char *, uint64_t (*)(void)))v247;
      v676 = (char *)type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C151765C();
      uint64_t v249 = v248;
      uint64_t v250 = swift_allocObject();
      *(void *)(v250 + 16) = v249;
      *(void *)(v250 + 24) = MEMORY[0x1E4FBC860];
      uint64_t *v244 = v240;
      v244[1] = 0x80000001C1625960;
      v244[2] = v250 | 0x3000000000000000;
      v244[3] = 1;
      uint64_t v251 = (uint64_t)v244 + *(int *)(v242 + 28);
      v659 = type metadata accessor for FormatVersionRequirement;
      sub_1C0F23F8C(v233, v251, type metadata accessor for FormatVersionRequirement);
      v673 = (void (*)(uint64_t, void, uint64_t, uint64_t))v677[7];
      v677 += 7;
      uint64_t v252 = v674;
      v673(v251, 0, 1, v674);
      *(void *)(v241 + 32) = v660;
      uint64_t v253 = swift_allocBox();
      v671 = (void *)v241;
      v660 = v253;
      long long v255 = v254;
      long long v256 = v246;
      v650 = v246;
      v247(v233, v246, v245);
      swift_storeEnumTagMultiPayload();
      sub_1C151765C();
      uint64_t v258 = v257;
      uint64_t v259 = swift_allocObject();
      *(void *)(v259 + 16) = v258;
      *(void *)(v259 + 24) = MEMORY[0x1E4FBC860];
      *long long v255 = 0xD000000000000016;
      v255[1] = 0x80000001C1625980;
      v255[2] = v259 | 0x3000000000000000;
      v255[3] = 1;
      uint64_t v260 = (uint64_t)v255 + *(int *)(v242 + 28);
      long long v261 = v659;
      sub_1C0F23F8C(v233, v260, v659);
      long long v262 = v673;
      v673(v260, 0, 1, v252);
      v671[5] = v660;
      v648 = swift_allocBox();
      uint64_t v264 = v263;
      uint64_t v265 = v256;
      uint64_t v266 = (void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v233, v265, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C151762C();
      uint64_t v268 = v267;
      uint64_t v269 = swift_allocObject();
      *(void *)(v269 + 16) = v268;
      *(void *)(v269 + 24) = MEMORY[0x1E4FBC860];
      v675 = v126 + 16;
      v660 = 0xD000000000000013;
      *uint64_t v264 = 0xD000000000000013;
      v264[1] = 0x80000001C16259A0;
      v264[2] = v269 | 0x3000000000000000;
      v264[3] = 1;
      uint64_t v270 = (uint64_t)v264 + *(int *)(v242 + 28);
      sub_1C0F23F8C(v233, v270, v261);
      v262(v270, 0, 1, v252);
      uint64_t v271 = v266;
      v671[6] = v648;
      v648 = swift_allocBox();
      uint64_t v273 = v272;
      uint64_t v274 = v672;
      v271(v233, v650, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C151762C();
      uint64_t v276 = v275;
      uint64_t v277 = swift_allocObject();
      *(void *)(v277 + 16) = v276;
      *(void *)(v277 + 24) = MEMORY[0x1E4FBC860];
      *uint64_t v273 = v665;
      v273[1] = 0x80000001C16259C0;
      v273[2] = v277 | 0x3000000000000000;
      v273[3] = 1;
      uint64_t v278 = (uint64_t)v273 + *(int *)(v242 + 28);
      sub_1C0F23F8C(v233, v278, v659);
      uint64_t v279 = v278;
      uint64_t v280 = v674;
      uint64_t v281 = v673;
      v673(v279, 0, 1, v674);
      v671[7] = v648;
      uint64_t v282 = swift_allocBox();
      uint64_t v284 = v283;
      v271(v233, v650, v274);
      swift_storeEnumTagMultiPayload();
      sub_1C15176EC();
      uint64_t v286 = v285;
      uint64_t v287 = swift_allocObject();
      *(void *)(v287 + 16) = v286;
      *(void *)(v287 + 24) = MEMORY[0x1E4FBC860];
      strcpy((char *)v284, "layout-scale");
      *(unsigned char *)(v284 + 13) = 0;
      *(_WORD *)(v284 + 14) = -5120;
      *(void *)(v284 + 16) = v287 | 0x3000000000000000;
      *(void *)(v284 + 24) = 1;
      uint64_t v288 = v284 + *(int *)(v242 + 28);
      sub_1C0F23F8C(v233, v288, v659);
      uint64_t v289 = v288;
      uint64_t v290 = v280;
      v281(v289, 0, 1, v280);
      v671[8] = v282;
      uint64_t v291 = swift_allocBox();
      uint64_t v293 = v292;
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v294 = v672;
      v659 = (uint64_t (*)(void))__swift_project_value_buffer(v672, (uint64_t)qword_1EB93CA98);
      uint64_t v295 = (void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v233, v659, v294);
      swift_storeEnumTagMultiPayload();
      sub_1C151766C();
      uint64_t v297 = v296;
      uint64_t v298 = swift_allocObject();
      *(void *)(v298 + 16) = v297;
      *(void *)(v298 + 24) = MEMORY[0x1E4FBC860];
      *uint64_t v293 = v664;
      v293[1] = 0x80000001C16259E0;
      v293[2] = v298 | 0x3000000000000000;
      v293[3] = 1;
      uint64_t v299 = (uint64_t)v293 + *(int *)(v242 + 28);
      sub_1C0F23F8C(v233, v299, type metadata accessor for FormatVersionRequirement);
      uint64_t v300 = v299;
      uint64_t v301 = v673;
      v673(v300, 0, 1, v290);
      v671[9] = v291;
      v648 = swift_allocBox();
      uint64_t v303 = v302;
      uint64_t v304 = v659;
      uint64_t v305 = v294;
      uint64_t v306 = (int *)v242;
      v295(v233, v659, v305);
      swift_storeEnumTagMultiPayload();
      sub_1C151766C();
      uint64_t v308 = v307;
      uint64_t v309 = swift_allocObject();
      *(void *)(v309 + 16) = v308;
      *(void *)(v309 + 24) = MEMORY[0x1E4FBC860];
      *uint64_t v303 = v661;
      v303[1] = 0x80000001C1625A00;
      v303[2] = v309 | 0x3000000000000000;
      v303[3] = 1;
      uint64_t v310 = (uint64_t)v303 + *(int *)(v242 + 28);
      v650 = type metadata accessor for FormatVersionRequirement;
      sub_1C0F23F8C(v233, v310, type metadata accessor for FormatVersionRequirement);
      v301(v310, 0, 1, v674);
      v311 = v301;
      v671[10] = v648;
      v648 = swift_allocBox();
      uint64_t v313 = v312;
      uint64_t v314 = v672;
      uint64_t v315 = (void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v233, v304, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C151766C();
      uint64_t v317 = v316;
      uint64_t v318 = swift_allocObject();
      *(void *)(v318 + 16) = v317;
      *(void *)(v318 + 24) = MEMORY[0x1E4FBC860];
      *uint64_t v313 = v665;
      v313[1] = 0x80000001C1625A20;
      v313[2] = v318 | 0x3000000000000000;
      v313[3] = 1;
      uint64_t v319 = (uint64_t)v313 + *(int *)(v242 + 28);
      sub_1C0F23F8C(v233, v319, type metadata accessor for FormatVersionRequirement);
      uint64_t v320 = v674;
      v311(v319, 0, 1, v674);
      v671[11] = v648;
      v648 = swift_allocBox();
      long long v322 = v321;
      v323 = v659;
      v315(v233, v659, v314);
      swift_storeEnumTagMultiPayload();
      sub_1C151766C();
      uint64_t v325 = v324;
      uint64_t v326 = swift_allocObject();
      *(void *)(v326 + 16) = v325;
      *(void *)(v326 + 24) = MEMORY[0x1E4FBC860];
      uint64_t v327 = v660;
      *long long v322 = v660;
      v322[1] = 0x80000001C1625A40;
      v322[2] = v326 | 0x3000000000000000;
      v322[3] = 1;
      uint64_t v328 = (uint64_t)v322 + v306[7];
      uint64_t v329 = v650;
      sub_1C0F23F8C(v233, v328, v650);
      unint64_t v330 = v673;
      v673(v328, 0, 1, v320);
      v671[12] = v648;
      v648 = swift_allocBox();
      v332 = v331;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v233, v323, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C15174BC();
      uint64_t v334 = v333;
      uint64_t v335 = swift_allocObject();
      *(void *)(v335 + 16) = v334;
      *(void *)(v335 + 24) = MEMORY[0x1E4FBC860];
      uint64_t *v332 = v327;
      v332[1] = 0x80000001C1625A60;
      v332[2] = v335 | 0x3000000000000000;
      v332[3] = 1;
      uint64_t v336 = (uint64_t)v332 + v306[7];
      sub_1C0F23F8C(v233, v336, v329);
      uint64_t v337 = v336;
      uint64_t v338 = v674;
      v330(v337, 0, 1, v674);
      v671[13] = v648;
      uint64_t v339 = swift_allocBox();
      uint64_t v341 = v340;
      uint64_t v342 = v672;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v233, v659, v672);
      swift_storeEnumTagMultiPayload();
      uint64_t v343 = swift_allocObject();
      *(void *)(v343 + 16) = 0x400921FB54442D18;
      *(void *)(v343 + 24) = MEMORY[0x1E4FBC860];
      *uint64_t v341 = 26992;
      v341[1] = 0xE200000000000000;
      v341[2] = v343 | 0x3000000000000000;
      v341[3] = 1;
      uint64_t v344 = (uint64_t)v341 + v306[7];
      v345 = v671;
      sub_1C0F23F8C(v233, v344, v650);
      v673(v344, 0, 1, v338);
      v345[14] = v339;
      v670 = v306;
      v659 = (uint64_t (*)(void))swift_allocBox();
      v347 = v346;
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v348 = v342;
      v650 = (uint64_t (*)(void))__swift_project_value_buffer(v342, (uint64_t)qword_1EB93CA08);
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v233, v650, v342);
      swift_storeEnumTagMultiPayload();
      sub_1C15176DC();
      uint64_t v350 = v349;
      uint64_t v351 = swift_allocObject();
      *(void *)(v351 + 16) = v350;
      *(void *)(v351 + 24) = MEMORY[0x1E4FBC860];
      void *v347 = v665;
      v347[1] = 0x80000001C1625A80;
      v347[2] = v351 | 0x3000000000000000;
      v347[3] = 1;
      v352 = v670;
      uint64_t v353 = (uint64_t)v347 + v670[7];
      sub_1C0F23F8C(v667, v353, type metadata accessor for FormatVersionRequirement);
      uint64_t v354 = v674;
      v355 = v673;
      v673(v353, 0, 1, v674);
      v345[15] = v659;
      v659 = (uint64_t (*)(void))swift_allocBox();
      v357 = v356;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v667, v650, v348);
      swift_storeEnumTagMultiPayload();
      sub_1C15176DC();
      uint64_t v359 = v358;
      uint64_t v360 = swift_allocObject();
      *(void *)(v360 + 16) = v359;
      *(void *)(v360 + 24) = MEMORY[0x1E4FBC860];
      void *v357 = v663;
      v357[1] = 0x80000001C1625AA0;
      v357[2] = v360 | 0x3000000000000000;
      v357[3] = 1;
      uint64_t v361 = (uint64_t)v357 + v352[7];
      sub_1C0F23F8C(v667, v361, type metadata accessor for FormatVersionRequirement);
      v355(v361, 0, 1, v354);
      v671[16] = v659;
      v648 = swift_allocBox();
      v363 = v362;
      if (qword_1EB887628 != -1) {
        swift_once();
      }
      uint64_t v364 = v672;
      v650 = (uint64_t (*)(void))__swift_project_value_buffer(v672, (uint64_t)qword_1EB93CA68);
      uint64_t v365 = v667;
      v366 = (void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v667, v650, v364);
      swift_storeEnumTagMultiPayload();
      v367 = v644;
      sub_1C15176BC();
      sub_1C151793C();
      uint64_t v369 = v368;
      (*(void (**)(char *, uint64_t))(v645 + 8))(v367, v646);
      uint64_t v370 = swift_allocObject();
      *(void *)(v370 + 16) = v369;
      uint64_t v371 = MEMORY[0x1E4FBC860];
      *(void *)(v370 + 24) = MEMORY[0x1E4FBC860];
      void *v363 = 0xD00000000000001BLL;
      v363[1] = 0x80000001C1625AC0;
      v363[2] = v370 | 0x3000000000000000;
      v363[3] = 1;
      v372 = v670;
      uint64_t v373 = (uint64_t)v363 + v670[7];
      v659 = type metadata accessor for FormatVersionRequirement;
      sub_1C0F23F8C(v365, v373, type metadata accessor for FormatVersionRequirement);
      v673(v373, 0, 1, v674);
      v671[17] = v648;
      v648 = swift_allocBox();
      v375 = v374;
      v376 = v650;
      v366(v365, v650, v364);
      swift_storeEnumTagMultiPayload();
      sub_1C151767C();
      uint64_t v378 = v377;
      uint64_t v379 = swift_allocObject();
      *(void *)(v379 + 16) = v378;
      *(void *)(v379 + 24) = v371;
      void *v375 = v665;
      v375[1] = 0x80000001C1625AE0;
      v375[2] = v379 | 0x3000000000000000;
      v375[3] = 1;
      uint64_t v380 = (uint64_t)v375 + v372[7];
      sub_1C0F23F8C(v365, v380, type metadata accessor for FormatVersionRequirement);
      v381 = v673;
      v673(v380, 0, 1, v674);
      v671[18] = v648;
      v648 = swift_allocBox();
      v383 = v382;
      v384 = v376;
      uint64_t v385 = v672;
      v386 = (void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v365, v384, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C151767C();
      uint64_t v388 = v387;
      uint64_t v389 = swift_allocObject();
      *(void *)(v389 + 16) = v388;
      *(void *)(v389 + 24) = MEMORY[0x1E4FBC860];
      void *v383 = v663;
      v383[1] = 0x80000001C1625B00;
      v383[2] = v389 | 0x3000000000000000;
      v383[3] = 1;
      uint64_t v390 = (uint64_t)v383 + v372[7];
      sub_1C0F23F8C(v365, v390, v659);
      v381(v390, 0, 1, v674);
      v671[19] = v648;
      v663 = swift_allocBox();
      v392 = v391;
      v393 = v650;
      uint64_t v394 = v385;
      v386(v365, v650, v385);
      swift_storeEnumTagMultiPayload();
      sub_1C151767C();
      uint64_t v396 = v395;
      uint64_t v397 = swift_allocObject();
      *(void *)(v397 + 16) = v396;
      *(void *)(v397 + 24) = MEMORY[0x1E4FBC860];
      void *v392 = 0xD000000000000017;
      v392[1] = 0x80000001C1625B20;
      v392[2] = v397 | 0x3000000000000000;
      v392[3] = 1;
      uint64_t v398 = (uint64_t)v392 + v372[7];
      v399 = v659;
      sub_1C0F23F8C(v365, v398, v659);
      v400 = v673;
      v673(v398, 0, 1, v674);
      v671[20] = v663;
      v663 = swift_allocBox();
      v402 = v401;
      ((void (*)(uint64_t, uint64_t (*)(void), uint64_t))v678)(v365, v393, v394);
      swift_storeEnumTagMultiPayload();
      sub_1C151767C();
      uint64_t v404 = v403;
      uint64_t v405 = swift_allocObject();
      *(void *)(v405 + 16) = v404;
      *(void *)(v405 + 24) = MEMORY[0x1E4FBC860];
      void *v402 = 0xD000000000000016;
      v402[1] = 0x80000001C1625B40;
      v402[2] = v405 | 0x3000000000000000;
      v402[3] = 1;
      uint64_t v406 = (uint64_t)v402 + v372[7];
      sub_1C0F23F8C(v365, v406, v399);
      uint64_t v407 = v674;
      v400(v406, 0, 1, v674);
      v671[21] = v663;
      v408 = v671;
      uint64_t v409 = swift_allocBox();
      uint64_t v411 = v410;
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      v669 = __swift_project_value_buffer(v394, (uint64_t)qword_1EB93CA80);
      uint64_t v412 = v667;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v667, v669, v394);
      swift_storeEnumTagMultiPayload();
      uint64_t v413 = v394;
      uint64_t v414 = sub_1C151754C();
      uint64_t v415 = swift_allocObject();
      *(void *)(v415 + 16) = v414;
      *(void *)(v415 + 24) = MEMORY[0x1E4FBC860];
      strcpy((char *)v411, "column-count");
      *(unsigned char *)(v411 + 13) = 0;
      *(_WORD *)(v411 + 14) = -5120;
      *(void *)(v411 + 16) = v415 | 0x4000000000000000;
      *(void *)(v411 + 24) = 1;
      v416 = v670;
      uint64_t v417 = v411 + v670[7];
      sub_1C0F23F8C(v412, v417, type metadata accessor for FormatVersionRequirement);
      v673(v417, 0, 1, v407);
      v408[22] = v409;
      v418 = v408;
      uint64_t v419 = v407;
      v663 = swift_allocBox();
      uint64_t v421 = v420;
      uint64_t v422 = v669;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v412, v669, v413);
      swift_storeEnumTagMultiPayload();
      sub_1C15174AC();
      uint64_t v424 = v423;
      uint64_t v425 = swift_allocObject();
      *(void *)(v425 + 16) = v424;
      *(void *)(v425 + 24) = MEMORY[0x1E4FBC860];
      strcpy((char *)v421, "column-width");
      *(unsigned char *)(v421 + 13) = 0;
      *(_WORD *)(v421 + 14) = -5120;
      *(void *)(v421 + 16) = v425 | 0x3000000000000000;
      *(void *)(v421 + 24) = 1;
      uint64_t v426 = v421 + v416[7];
      v659 = type metadata accessor for FormatVersionRequirement;
      sub_1C0F23F8C(v412, v426, type metadata accessor for FormatVersionRequirement);
      uint64_t v427 = v419;
      v428 = v673;
      v673(v426, 0, 1, v427);
      v418[23] = v663;
      v663 = swift_allocBox();
      v430 = v429;
      uint64_t v431 = v422;
      v432 = (void (*)(uint64_t, uint64_t, uint64_t))v678;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v412, v431, v413);
      swift_storeEnumTagMultiPayload();
      sub_1C15174BC();
      uint64_t v434 = v433;
      uint64_t v435 = swift_allocObject();
      *(void *)(v435 + 16) = v434;
      *(void *)(v435 + 24) = MEMORY[0x1E4FBC860];
      uint64_t *v430 = v660;
      v430[1] = 0x80000001C1625B60;
      v430[2] = v435 | 0x3000000000000000;
      v430[3] = 1;
      uint64_t v436 = (uint64_t)v430 + v416[7];
      sub_1C0F23F8C(v412, v436, type metadata accessor for FormatVersionRequirement);
      uint64_t v437 = v674;
      v428(v436, 0, 1, v674);
      v438 = v671;
      v671[24] = v663;
      v650 = (uint64_t (*)(void))swift_allocBox();
      v440 = v439;
      v432(v412, v669, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C151755C();
      uint64_t v442 = v441;
      uint64_t v443 = swift_allocObject();
      *(void *)(v443 + 16) = v442;
      *(void *)(v443 + 24) = MEMORY[0x1E4FBC860];
      v663 = 0xD000000000000010;
      void *v440 = 0xD000000000000010;
      v440[1] = 0x80000001C1625B80;
      v440[2] = v443 | 0x3000000000000000;
      v440[3] = 1;
      v444 = v670;
      uint64_t v445 = (uint64_t)v440 + v670[7];
      v446 = v659;
      sub_1C0F23F8C(v412, v445, v659);
      v428(v445, 0, 1, v437);
      v438[25] = v650;
      v648 = swift_allocBox();
      v448 = v447;
      uint64_t v449 = v672;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v412, v669, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C15174DC();
      uint64_t v451 = v450;
      uint64_t v452 = swift_allocObject();
      *(void *)(v452 + 16) = v451;
      *(void *)(v452 + 24) = MEMORY[0x1E4FBC860];
      v650 = (uint64_t (*)(void))0xD000000000000019;
      void *v448 = 0xD000000000000019;
      v448[1] = 0x80000001C1625BA0;
      v448[2] = v452 | 0x3000000000000000;
      v448[3] = 1;
      uint64_t v453 = (uint64_t)v448 + v444[7];
      sub_1C0F23F8C(v412, v453, v446);
      uint64_t v454 = v453;
      uint64_t v455 = v674;
      v673(v454, 0, 1, v674);
      v671[26] = v648;
      v648 = swift_allocBox();
      v457 = v456;
      uint64_t v458 = v449;
      v459 = (void (*)(uint64_t, uint64_t, uint64_t))v678;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v412, v669, v458);
      swift_storeEnumTagMultiPayload();
      sub_1C151756C();
      uint64_t v461 = v460;
      uint64_t v462 = swift_allocObject();
      *(void *)(v462 + 16) = v461;
      *(void *)(v462 + 24) = MEMORY[0x1E4FBC860];
      void *v457 = v663;
      v457[1] = 0x80000001C1625BC0;
      v457[2] = v462 | 0x3000000000000000;
      v457[3] = 1;
      uint64_t v463 = (uint64_t)v457 + v444[7];
      sub_1C0F23F8C(v412, v463, v446);
      v464 = v673;
      v673(v463, 0, 1, v455);
      v465 = v671;
      v671[27] = v648;
      v648 = swift_allocBox();
      v467 = v466;
      v459(v412, v669, v672);
      swift_storeEnumTagMultiPayload();
      sub_1C15174EC();
      uint64_t v469 = v468;
      uint64_t v470 = swift_allocObject();
      *(void *)(v470 + 16) = v469;
      *(void *)(v470 + 24) = MEMORY[0x1E4FBC860];
      void *v467 = v650;
      v467[1] = 0x80000001C1625BE0;
      v467[2] = v470 | 0x3000000000000000;
      v467[3] = 1;
      uint64_t v471 = (uint64_t)v467 + v444[7];
      sub_1C0F23F8C(v412, v471, v659);
      v464(v471, 0, 1, v674);
      v472 = v465;
      v465[28] = v648;
      if (qword_1EB893B08 != -1) {
        swift_once();
      }
      v669 = __swift_project_value_buffer(v672, (uint64_t)qword_1EB93CBA0);
      ((void (*)(uint64_t))v678)(v651);
      swift_storeEnumTagMultiPayload();
      id v473 = objc_msgSend(v668, sel_firstName);
      if (v473)
      {
        v474 = v473;
        uint64_t v475 = sub_1C151E62C();
        unint64_t v477 = v476;
      }
      else
      {
        uint64_t v475 = 0;
        unint64_t v477 = 0xE000000000000000;
      }
      uint64_t v478 = MEMORY[0x1E4FBC860];
      v479 = v670;
      uint64_t v480 = swift_allocBox();
      v482 = v481;
      uint64_t v483 = swift_allocObject();
      *(void *)(v483 + 16) = v475;
      *(void *)(v483 + 24) = v477;
      *(void *)(v483 + 32) = v478;
      void *v482 = v661;
      v482[1] = 0x80000001C1625C00;
      v482[2] = v483 | 0x5000000000000000;
      v482[3] = 1;
      uint64_t v484 = (uint64_t)v482 + v479[7];
      sub_1C0F23F8C(v651, v484, type metadata accessor for FormatVersionRequirement);
      v673(v484, 0, 1, v674);
      v472[29] = v480;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v652, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v485 = objc_msgSend(v668, sel_middleName);
      if (v485)
      {
        v486 = v485;
        uint64_t v487 = sub_1C151E62C();
        unint64_t v489 = v488;
      }
      else
      {
        uint64_t v487 = 0;
        unint64_t v489 = 0xE000000000000000;
      }
      v490 = v670;
      uint64_t v491 = swift_allocBox();
      v493 = v492;
      uint64_t v494 = swift_allocObject();
      *(void *)(v494 + 16) = v487;
      *(void *)(v494 + 24) = v489;
      *(void *)(v494 + 32) = v478;
      uint64_t *v493 = v660;
      v493[1] = 0x80000001C1625C20;
      v493[2] = v494 | 0x5000000000000000;
      v493[3] = 1;
      uint64_t v495 = (uint64_t)v493 + v490[7];
      sub_1C0F23F8C(v652, v495, type metadata accessor for FormatVersionRequirement);
      v673(v495, 0, 1, v674);
      v472[30] = v491;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v653, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v496 = objc_msgSend(v668, sel_lastName);
      if (v496)
      {
        v497 = v496;
        uint64_t v498 = sub_1C151E62C();
        unint64_t v500 = v499;
      }
      else
      {
        uint64_t v498 = 0;
        unint64_t v500 = 0xE000000000000000;
      }
      v501 = v670;
      uint64_t v502 = swift_allocBox();
      v504 = v503;
      uint64_t v505 = swift_allocObject();
      *(void *)(v505 + 16) = v498;
      *(void *)(v505 + 24) = v500;
      *(void *)(v505 + 32) = v478;
      void *v504 = v664;
      v504[1] = 0x80000001C1625C40;
      v504[2] = v505 | 0x5000000000000000;
      v504[3] = 1;
      uint64_t v506 = (uint64_t)v504 + v501[7];
      sub_1C0F23F8C(v653, v506, type metadata accessor for FormatVersionRequirement);
      v673(v506, 0, 1, v674);
      v472[31] = v502;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v654, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v507 = objc_msgSend(v668, sel_fullName);
      if (v507)
      {
        v508 = v507;
        uint64_t v509 = sub_1C151E62C();
        unint64_t v511 = v510;
      }
      else
      {
        uint64_t v509 = 0;
        unint64_t v511 = 0xE000000000000000;
      }
      v512 = v670;
      uint64_t v513 = swift_allocBox();
      v515 = v514;
      uint64_t v516 = swift_allocObject();
      *(void *)(v516 + 16) = v509;
      *(void *)(v516 + 24) = v511;
      *(void *)(v516 + 32) = v478;
      void *v515 = v664;
      v515[1] = 0x80000001C1625C60;
      v515[2] = v516 | 0x5000000000000000;
      v515[3] = 1;
      uint64_t v517 = (uint64_t)v515 + v512[7];
      sub_1C0F23F8C(v654, v517, type metadata accessor for FormatVersionRequirement);
      v673(v517, 0, 1, v674);
      v472[32] = v513;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v655, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v518 = objc_msgSend(v668, sel_username);
      if (v518)
      {
        v519 = v518;
        uint64_t v520 = sub_1C151E62C();
        unint64_t v522 = v521;
      }
      else
      {
        uint64_t v520 = 0;
        unint64_t v522 = 0xE000000000000000;
      }
      v523 = v670;
      uint64_t v524 = swift_allocBox();
      v526 = v525;
      uint64_t v527 = swift_allocObject();
      *(void *)(v527 + 16) = v520;
      *(void *)(v527 + 24) = v522;
      *(void *)(v527 + 32) = v478;
      void *v526 = v663;
      v526[1] = 0x80000001C1625C80;
      v526[2] = v527 | 0x5000000000000000;
      v526[3] = 1;
      uint64_t v528 = (uint64_t)v526 + v523[7];
      sub_1C0F23F8C(v655, v528, type metadata accessor for FormatVersionRequirement);
      v673(v528, 0, 1, v674);
      v472[33] = v524;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v656, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v529 = objc_msgSend(v668, sel_formattedUsername);
      if (v529)
      {
        v530 = v529;
        uint64_t v531 = sub_1C151E62C();
        unint64_t v533 = v532;
      }
      else
      {
        uint64_t v531 = 0;
        unint64_t v533 = 0xE000000000000000;
      }
      v534 = v670;
      uint64_t v535 = swift_allocBox();
      v537 = v536;
      uint64_t v538 = swift_allocObject();
      *(void *)(v538 + 16) = v531;
      *(void *)(v538 + 24) = v533;
      *(void *)(v538 + 32) = v478;
      void *v537 = 0xD00000000000001ALL;
      v537[1] = 0x80000001C1625CA0;
      v537[2] = v538 | 0x5000000000000000;
      v537[3] = 1;
      uint64_t v539 = (uint64_t)v537 + v534[7];
      sub_1C0F23F8C(v656, v539, type metadata accessor for FormatVersionRequirement);
      v673(v539, 0, 1, v674);
      v472[34] = v535;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v657, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v540 = objc_msgSend(v668, sel_personID);
      if (v540)
      {
        v541 = v540;
        uint64_t v542 = sub_1C151E62C();
        unint64_t v544 = v543;
      }
      else
      {
        uint64_t v542 = 0;
        unint64_t v544 = 0xE000000000000000;
      }
      v545 = v670;
      uint64_t v546 = swift_allocBox();
      v548 = v547;
      uint64_t v549 = swift_allocObject();
      *(void *)(v549 + 16) = v542;
      *(void *)(v549 + 24) = v544;
      *(void *)(v549 + 32) = v478;
      void *v548 = v664;
      v548[1] = 0x80000001C1625CC0;
      v548[2] = v549 | 0x5000000000000000;
      v548[3] = 1;
      uint64_t v550 = (uint64_t)v548 + v545[7];
      sub_1C0F23F8C(v657, v550, type metadata accessor for FormatVersionRequirement);
      v673(v550, 0, 1, v674);
      v472[35] = v546;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v658, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v551 = objc_msgSend(v668, sel_normalizedPersonId);
      if (v551)
      {
        v552 = v551;
        uint64_t v553 = sub_1C151E62C();
        unint64_t v555 = v554;
      }
      else
      {
        uint64_t v553 = 0;
        unint64_t v555 = 0xE000000000000000;
      }
      v556 = v670;
      uint64_t v557 = swift_allocBox();
      v559 = v558;
      uint64_t v560 = swift_allocObject();
      *(void *)(v560 + 16) = v553;
      *(void *)(v560 + 24) = v555;
      *(void *)(v560 + 32) = v478;
      void *v559 = 0xD00000000000001CLL;
      v559[1] = 0x80000001C1625CE0;
      v559[2] = v560 | 0x5000000000000000;
      v559[3] = 1;
      uint64_t v561 = (uint64_t)v559 + v556[7];
      v666 = type metadata accessor for FormatVersionRequirement;
      sub_1C0F23F8C(v658, v561, type metadata accessor for FormatVersionRequirement);
      uint64_t v562 = v674;
      ((void (*)(uint64_t, void, uint64_t))v673)(v561, 0, 1);
      v472[36] = v557;
      v664 = (char *)swift_allocBox();
      v564 = v563;
      uint64_t v565 = v667;
      uint64_t v566 = v672;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v667, v669, v672);
      swift_storeEnumTagMultiPayload();
      id v567 = objc_msgSend(v668, sel_ageCategory);
      uint64_t v568 = swift_allocObject();
      *(void *)(v568 + 16) = v567;
      *(void *)(v568 + 24) = v478;
      void *v564 = v665;
      v564[1] = 0x80000001C1625D00;
      v564[2] = v568 | 0x4000000000000000;
      v564[3] = 1;
      uint64_t v569 = (uint64_t)v564 + v556[7];
      v570 = v666;
      sub_1C0F23F8C(v565, v569, v666);
      uint64_t v571 = v562;
      v572 = v673;
      v673(v569, 0, 1, v562);
      v472[37] = v664;
      v664 = (char *)swift_allocBox();
      v574 = v573;
      uint64_t v575 = v669;
      v576 = (void (*)(uint64_t, uint64_t, uint64_t))v678;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v565, v669, v566);
      swift_storeEnumTagMultiPayload();
      unsigned __int8 v577 = objc_msgSend(v668, sel_isSuspended);
      uint64_t v578 = swift_allocObject();
      *(unsigned char *)(v578 + 16) = v577;
      *(void *)(v578 + 24) = MEMORY[0x1E4FBC860];
      void *v574 = v665;
      v574[1] = 0x80000001C1625D20;
      v574[2] = v578;
      v574[3] = 1;
      v579 = v670;
      uint64_t v580 = (uint64_t)v574 + v670[7];
      sub_1C0F23F8C(v565, v580, v570);
      v572(v580, 0, 1, v571);
      v581 = v671;
      v671[38] = v664;
      v582 = v579;
      v664 = (char *)swift_allocBox();
      v584 = v583;
      uint64_t v585 = v672;
      v576(v565, v575, v672);
      swift_storeEnumTagMultiPayload();
      v586 = v668;
      LOBYTE(v579) = objc_msgSend(v668, sel_isiCloudSuspended);
      uint64_t v587 = swift_allocObject();
      *(unsigned char *)(v587 + 16) = (_BYTE)v579;
      uint64_t v588 = MEMORY[0x1E4FBC860];
      *(void *)(v587 + 24) = MEMORY[0x1E4FBC860];
      v665 = (char *)0xD00000000000001BLL;
      void *v584 = 0xD00000000000001BLL;
      v584[1] = 0x80000001C1625D40;
      v584[2] = v587;
      v584[3] = 1;
      v589 = v582;
      uint64_t v590 = (uint64_t)v584 + v582[7];
      sub_1C0F23F8C(v565, v590, v666);
      v591 = v673;
      v673(v590, 0, 1, v674);
      v581[39] = v664;
      v592 = v589;
      v664 = (char *)swift_allocBox();
      v594 = v593;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v565, v669, v585);
      swift_storeEnumTagMultiPayload();
      LOBYTE(v589) = objc_msgSend(v586, sel_isFamilySuspended);
      uint64_t v595 = swift_allocObject();
      *(unsigned char *)(v595 + 16) = (_BYTE)v589;
      *(void *)(v595 + 24) = v588;
      void *v594 = v665;
      v594[1] = 0x80000001C1625D60;
      v594[2] = v595;
      v594[3] = 1;
      v596 = v592;
      uint64_t v597 = (uint64_t)v594 + v592[7];
      v598 = v666;
      sub_1C0F23F8C(v565, v597, v666);
      uint64_t v599 = v674;
      v591(v597, 0, 1, v674);
      v600 = v671;
      v671[40] = v664;
      uint64_t v601 = swift_allocBox();
      v603 = v602;
      ((void (*)(uint64_t, uint64_t, uint64_t))v678)(v565, v669, v672);
      swift_storeEnumTagMultiPayload();
      LOBYTE(v591) = objc_msgSend(v586, sel_isFamilyEligible);
      uint64_t v604 = swift_allocObject();
      *(unsigned char *)(v604 + 16) = (_BYTE)v591;
      *(void *)(v604 + 24) = v588;
      void *v603 = 0xD00000000000001ALL;
      v603[1] = 0x80000001C1625D80;
      v603[2] = v604;
      v603[3] = 1;
      uint64_t v605 = (uint64_t)v603 + v596[7];
      sub_1C0F23F8C(v565, v605, v598);
      v673(v605, 0, 1, v599);
      v600[41] = v601;

      unint64_t v606 = v662;
      uint64_t v607 = *(void *)(v662 + 120);
      uint64_t v608 = *(void *)(v662 + 128);
      v609 = v649;
      __swift_project_boxed_opaque_existential_1(v649, v607);
      uint64_t v610 = (*(uint64_t (**)(uint64_t, uint64_t))(v608 + 8))(v607, v608);
      uint64_t v611 = *(void *)(v606 + 120);
      uint64_t v612 = *(void *)(v606 + 128);
      __swift_project_boxed_opaque_existential_1(v609, v611);
      v613 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v612 + 16))(v611, v612);
      v677 = v613;
      uint64_t v614 = *(void *)(v606 + 120);
      uint64_t v615 = *(void *)(v606 + 128);
      __swift_project_boxed_opaque_existential_1(v609, v614);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v615 + 24))(&v679, v614, v615);
      long long v616 = v679;
      uint64_t v617 = *(void *)(v606 + 120);
      uint64_t v618 = *(void *)(v606 + 128);
      __swift_project_boxed_opaque_existential_1(v609, v617);
      uint64_t v619 = (*(uint64_t (**)(uint64_t, uint64_t))(v618 + 40))(v617, v618);
      v678 = (void (*)(char *, uint64_t (*)(void)))v684;
      sub_1BFC66384((uint64_t)v688, (uint64_t)&v679);
      uint64_t v621 = *(void *)(v606 + 120);
      uint64_t v620 = *(void *)(v606 + 128);
      __swift_project_boxed_opaque_existential_1(v609, v621);
      v622 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v620 + 32);
      v623 = v613;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v622(&v686, v621, v620);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v624 = v686;
      v625 = v687;
      type metadata accessor for FormatSystem();
      v626 = swift_allocObject();
      v627 = v671;
      *(void *)(v626 + 16) = v678;
      *(void *)(v626 + 24) = v627;
      sub_1BFC773DC(&v679, v626 + 32);
      v628 = v677;
      *(void *)(v626 + 72) = v610;
      *(void *)(v626 + 80) = v628;
      *(_OWORD *)(v626 + 88) = v616;
      *(void *)(v626 + 104) = v619;
      *(void *)(v626 + 112) = v624;
      *(void *)(v626 + 120) = v625;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v688);
      return v626;
  }
}

uint64_t sub_1C0F23DBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0F23EF0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0F23E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BundleSessionCache();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F23E90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0F23EF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0F23F54()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F23F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F23FF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0F2403C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  unint64_t v5 = a1;
  unint64_t v65 = a4;
  v77[3] = *MEMORY[0x1E4F143B8];
  uint64_t v67 = *(void *)(a2 + 16);
  if (v67)
  {
    uint64_t v66 = a2 + 32;
    sub_1BFC7E2FC(a1);
    uint64_t v64 = a2;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v74 = (void *)a3;
LABEL_5:
    unint64_t v71 = v5;
    uint64_t v10 = (uint64_t *)(v66 + 24 * v7);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    unint64_t v13 = v10[2];
    swift_bridgeObjectRetain();
    unint64_t v70 = v13;
    sub_1BFC7E2FC(v13);
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_1EB93C770;
    uint64_t v15 = *(void *)(qword_1EB93C770 + 24);
    swift_bridgeObjectRetain();
    sub_1C1517E7C();
    uint64_t v16 = (uint64_t *)(v14 + 16);
    swift_beginAccess();
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v72 = v7;
    if (v18)
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1BFEF2D8C(v12, v11);
      if (v20)
      {
        uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 24 * v19 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v46 = *(void *)(v21 + 16);
        if (!v46)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          unint64_t v9 = v70;
          unint64_t v8 = v71;
          unint64_t v5 = v71;
          goto LABEL_4;
        }
        uint64_t v69 = v11;
        uint64_t v73 = v21;
        unint64_t v47 = (uint64_t *)(v21 + 64);
        while (1)
        {
          uint64_t v48 = *(v47 - 1);
          uint64_t v49 = *v47;
          char v50 = *(unsigned char *)(v48 + 32);
          unsigned int v51 = v50 & 0x3F;
          unint64_t v52 = (unint64_t)((1 << v50) + 63) >> 6;
          size_t v53 = 8 * v52;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v51 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)&v64 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
            uint64_t v56 = v74;
            id v55 = v75;
            uint64_t v57 = sub_1BFEFB09C((uint64_t)&v64 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, (uint64_t)v74);
            swift_bridgeObjectRelease();
            id v75 = v55;
            if (v55)
            {
              id v63 = v75;
              swift_willThrow();

              __break(1u);
LABEL_42:
              swift_bridgeObjectRelease();

              MEMORY[0x1C18C9B00](v56, -1, -1);
              __break(1u);
LABEL_43:
              uint64_t result = sub_1C1520CFC();
              __break(1u);
              return result;
            }
          }
          else
          {
            uint64_t v56 = (void *)swift_slowAlloc();
            bzero(v56, v53);
            id v58 = v75;
            uint64_t v59 = sub_1BFEFB09C((uint64_t)v56, v52, v48, (uint64_t)v74);
            id v75 = v58;
            if (v58) {
              goto LABEL_42;
            }
            uint64_t v57 = v59;
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v56, -1, -1);
            uint64_t v56 = v74;
          }
          char v60 = sub_1BFEFAE14(v57, v48);
          swift_release();
          if (v60)
          {
            char v61 = sub_1BFEFB810((uint64_t)v56, v49);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v61)
            {
              swift_bridgeObjectRelease();
              unint64_t v9 = v70;
              unint64_t v8 = v71;
              unint64_t v5 = v70;
LABEL_4:
              uint64_t v7 = v72 + 1;
              sub_1BFC7E2FC(v5);
              swift_bridgeObjectRelease();
              sub_1C00544B4(v9);
              sub_1C00544B4(v8);
              if (v7 == v67)
              {
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v47 += 5;
          if (!--v46) {
            goto LABEL_3;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v68 = v15;
    swift_endAccess();
    v76[0] = v12;
    v76[1] = v11;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v76, v77);
    uint64_t v22 = v77[1];
    uint64_t v69 = v77[0];
    uint64_t v23 = v77[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v73 = v23;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = v12;
    char v26 = isUniquelyReferenced_nonNull_native;
    v76[0] = *v16;
    uint64_t v27 = v76[0];
    *uint64_t v16 = 0x8000000000000000;
    uint64_t v28 = v25;
    uint64_t v29 = v11;
    unint64_t v31 = sub_1BFEF2D8C(v25, v11);
    uint64_t v32 = *(void *)(v27 + 16);
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33))
    {
      __break(1u);
LABEL_41:
      __break(1u);
    }
    char v35 = v30;
    if (*(void *)(v27 + 24) < v34)
    {
      sub_1BFFDF158(v34, v26);
      unint64_t v36 = sub_1BFEF2D8C(v28, v29);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_43;
      }
      unint64_t v31 = v36;
      uint64_t v38 = (void *)v76[0];
      if ((v35 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      uint64_t v39 = (uint64_t *)(v38[7] + 24 * v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v39 = v69;
      v39[1] = v22;
      uint64_t v40 = v73;
      v39[2] = v73;
      uint64_t v21 = v40;
      uint64_t v11 = v29;
LABEL_22:
      *uint64_t v16 = (uint64_t)v38;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_23;
    }
    if (v26)
    {
      uint64_t v38 = (void *)v76[0];
      if (v30) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v38 = (void *)v76[0];
      if (v35) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v38[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v41 = (uint64_t *)(v38[6] + 16 * v31);
    *uint64_t v41 = v28;
    v41[1] = v29;
    uint64_t v42 = (uint64_t *)(v38[7] + 24 * v31);
    *uint64_t v42 = v69;
    v42[1] = v22;
    uint64_t v21 = v73;
    void v42[2] = v73;
    uint64_t v43 = v38[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_41;
    }
    uint64_t v11 = v29;
    v38[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  sub_1BFC7E2FC(a1);
LABEL_39:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t *v65 = v5;
  return result;
}

uint64_t sub_1C0F24664(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v114 = a1;
  uint64_t v133 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)v5;
  switch(*(void *)v5 >> 60)
  {
    case 1:
      id v31 = v127;
      uint64_t v20 = sub_1C14BD890((uint64_t)v114);
      if (!v31) {
        return v20;
      }
      return (uint64_t)a2;
    case 2:
      uint64_t v21 = *(uint64_t **)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = (char *)a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 40);
      uint64_t v23 = *(void *)&v22[*(int *)(type metadata accessor for FormatTransformData() + 20)];
      unint64_t v130 = v21;
      sub_1BFC7E2FC((unint64_t)v21);
      sub_1C0A4E63C((char *)v129);
      if (sub_1C045271C(v129[0], v23))
      {
        unint64_t v130 = v21;
        a2 = (void *)sub_1C0F24664(v114, a2, a3, a4);
      }
      else
      {
        a2 = v114;
        swift_bridgeObjectRetain();
      }
      sub_1C00544B4((unint64_t)v21);
      return (uint64_t)a2;
    case 3:
      uint64_t v24 = *(uint64_t **)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v25 = *(unsigned char *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v26 = (uint64_t)a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 40);
      unint64_t v130 = v24;
      LOBYTE(v131) = v25;
      return FormatSlotExpireContent.expireContent(resolutions:data:)((uint64_t)v114, v26);
    case 4:
      uint64_t v16 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      MEMORY[0x1F4188790](v12);
      v109[-4] = v16;
      v109[-3] = a2;
      v109[-2] = a3;
      uint64_t v17 = v114;
      swift_bridgeObjectRetain();
      sub_1C08B3F8C(v16);
      sub_1C0621F20((uint64_t (*)(char *))sub_1C0F2C5BC, (uint64_t)&v109[-6], (uint64_t)v17);
      a2 = v18;
      sub_1C08B19E0(v16);
      return (uint64_t)a2;
    case 5:
      LOBYTE(v129[0]) = *(unsigned char *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      id v32 = v127;
      uint64_t v20 = (uint64_t)sub_1C123E9C0((uint64_t)v114, (unsigned __int8 *)v129);
      if (!v32) {
        return v20;
      }
      return (uint64_t)a2;
    case 6:
      unint64_t v34 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v33 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (*(void *)(v33 + 16))
      {
        uint64_t v35 = *(void *)(a3 + 96);
        sub_1BFC7E2FC(*(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10));
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BFC7E2FC(v34);
        sub_1C0F2403C(v34, v33, v35, (unint64_t *)&v130);
        sub_1C00544B4(v34);
        swift_bridgeObjectRelease();
        unint64_t v36 = v130;
      }
      else
      {
        sub_1BFC7E2FC(*(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10));
        swift_bridgeObjectRetain();
        sub_1BFC7E2FC(v34);
        unint64_t v36 = (void *)v34;
      }
      v129[0] = (uint64_t)v36;
      a2 = (void *)sub_1C0F24664(v114, a2, a3, a4);
      sub_1C00544B4((unint64_t)v36);
      sub_1C00544B4(v34);
      swift_bridgeObjectRelease();
      return (uint64_t)a2;
    case 7:
      uint64_t v27 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v29 = *(void *)(v27 + 16);
      uint64_t v28 = *(void *)(v27 + 24);
      char v30 = v114;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a2 = (void *)sub_1C0F2C100((uint64_t)v30, v29, v28);
      swift_bridgeObjectRelease();
      goto LABEL_81;
    case 8:
      uint64_t v37 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v38 = *(void *)(v37 + 16);
      uint64_t v128 = (uint64_t *)MEMORY[0x1E4FBC868];
      uint64_t v39 = v114;
      uint64_t v113 = v114[2];
      v109[1] = v37;
      if (v113)
      {
        uint64_t v40 = v38;
        uint64_t v110 = type metadata accessor for FormatContentSlotItemResolution();
        uint64_t v41 = *(void *)(v110 - 8);
        id v112 = (char *)v39
             + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
        uint64_t v111 = *(void *)(v41 + 72);
        uint64_t v115 = v40;
        uint64_t v120 = v40 + 32;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v42 = 0;
        while (1)
        {
          uint64_t v116 = v42;
          BOOL v44 = &v112[v111 * v42];
          uint64_t v117 = FormatContentSlotItemObject.Resolved.identifier.getter();
          uint64_t v118 = v45;
          uint64_t v121 = *(void *)(v115 + 16);
          if (v121) {
            break;
          }
          uint64_t v119 = 0;
LABEL_62:
          uint64_t v11 = v128;
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v130 = v11;
          uint64_t v128 = (uint64_t *)0x8000000000000000;
          unint64_t v56 = sub_1BFEF2D8C(v117, v118);
          uint64_t v87 = v11[2];
          BOOL v88 = (v86 & 1) == 0;
          uint64_t v89 = v87 + v88;
          if (__OFADD__(v87, v88))
          {
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            swift_unknownObjectRelease();
LABEL_75:
            uint64_t v101 = sub_1C00B1F14(v56, a3, isUniquelyReferenced_nonNull_native, v5);
LABEL_93:
            swift_unknownObjectRelease();
            sub_1C0F2C6B0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
            return v101;
          }
          a3 = v86;
          if (v11[3] >= v89)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v11 = (uint64_t *)&v130;
              sub_1C106CB6C();
            }
          }
          else
          {
            sub_1C1057680(v89, isUniquelyReferenced_nonNull_native);
            uint64_t v11 = v130;
            unint64_t v90 = sub_1BFEF2D8C(v117, v118);
            if ((a3 & 1) != (v91 & 1)) {
              goto LABEL_103;
            }
            unint64_t v56 = v90;
          }
          uint64_t v92 = v118;
          uint64_t v93 = v130;
          if (a3)
          {
            *(void *)(v130[7] + 8 * v56) = v119;
          }
          else
          {
            v130[(v56 >> 6) + 8] |= 1 << v56;
            unint64_t v94 = (void *)(v93[6] + 16 * v56);
            *unint64_t v94 = v117;
            v94[1] = v92;
            *(void *)(v93[7] + 8 * v56) = v119;
            uint64_t v95 = v93[2];
            BOOL v73 = __OFADD__(v95, 1);
            uint64_t v96 = v95 + 1;
            if (v73) {
              goto LABEL_98;
            }
            v93[2] = v96;
            swift_bridgeObjectRetain();
          }
          uint64_t v43 = v116 + 1;
          uint64_t v128 = v93;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v42 = v43;
          if (v43 == v113)
          {
            uint64_t v39 = v114;
            swift_bridgeObjectRelease();
            goto LABEL_79;
          }
        }
        uint64_t v126 = *(void *)&v44[*(int *)(v110 + 24)];
        swift_bridgeObjectRetain();
        uint64_t v46 = 0;
        uint64_t v119 = 0;
LABEL_28:
        uint64_t v124 = v46;
        unint64_t v47 = (uint64_t *)(v120 + 24 * v46);
        a3 = *v47;
        unint64_t v5 = v47[1];
        uint64_t v48 = v47[2];
        uint64_t v49 = qword_1EB87F148;
        swift_bridgeObjectRetain();
        if (v49 != -1) {
          swift_once();
        }
        uint64_t v50 = qword_1EB93C770;
        swift_bridgeObjectRetain();
        sub_1C1517E7C();
        uint64_t isUniquelyReferenced_nonNull_native = v50 + 16;
        swift_beginAccess();
        uint64_t v52 = *(void *)(v50 + 16);
        uint64_t v53 = *(void *)(v52 + 16);
        uint64_t v122 = v48;
        if (v53)
        {
          swift_bridgeObjectRetain();
          unint64_t v54 = sub_1BFEF2D8C(a3, v5);
          if (v55)
          {
            unint64_t v56 = *(void *)(*(void *)(v52 + 56) + 24 * v54 + 16);
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_45:
            swift_bridgeObjectRelease();
            sub_1C1517E8C();
            swift_bridgeObjectRelease();
            a3 = *(void *)(v56 + 16);
            if (!a3)
            {
LABEL_26:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
            uint64_t v123 = (void *)v5;
            unint64_t v125 = v56;
            id v75 = (uint64_t *)(v56 + 64);
            while (1)
            {
              uint64_t v11 = (uint64_t *)*(v75 - 3);
              unint64_t v56 = *(v75 - 1);
              uint64_t isUniquelyReferenced_nonNull_native = *v75;
              char v76 = *(unsigned char *)(v56 + 32);
              unsigned int v77 = v76 & 0x3F;
              unint64_t v78 = (unint64_t)((1 << v76) + 63) >> 6;
              size_t v79 = 8 * v78;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
              if (v77 <= 0xD
                || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
              {
                MEMORY[0x1F4188790](isStackAllocationSafe);
                uint64_t v81 = (char *)v109 - ((v79 + 15) & 0x3FFFFFFFFFFFFFF0);
                bzero(v81, v79);
                id v82 = v127;
                unint64_t v5 = sub_1BFEFB09C((uint64_t)v81, v78, v56, v126);
                swift_bridgeObjectRelease();
                id v127 = v82;
                if (v82)
                {
                  id v108 = v127;
                  swift_willThrow();

                  __break(1u);
LABEL_101:
                  swift_bridgeObjectRelease();

                  MEMORY[0x1C18C9B00](v81, -1, -1);
                  __break(1u);
LABEL_102:
                  sub_1C1520CFC();
                  __break(1u);
LABEL_103:
                  sub_1C1520CFC();
                  __break(1u);
LABEL_104:
                  swift_release();
                  __break(1u);
                  JUMPOUT(0x1C0F2540CLL);
                }
              }
              else
              {
                uint64_t v81 = (char *)swift_slowAlloc();
                bzero(v81, v79);
                id v83 = v127;
                uint64_t v84 = sub_1BFEFB09C((uint64_t)v81, v78, v56, v126);
                id v127 = v83;
                if (v83) {
                  goto LABEL_101;
                }
                unint64_t v5 = v84;
                swift_bridgeObjectRelease();
                MEMORY[0x1C18C9B00](v81, -1, -1);
              }
              char v85 = sub_1BFEFAE14(v5, v56);
              swift_release();
              if (v85)
              {
                unint64_t v5 = sub_1BFEFB810(v126, isUniquelyReferenced_nonNull_native);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v5)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (__OFADD__(v119, v122)) {
                    goto LABEL_96;
                  }
                  v119 += v122;
LABEL_27:
                  uint64_t v46 = v124 + 1;
                  if (v124 + 1 == v121)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_62;
                  }
                  goto LABEL_28;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v75 += 5;
              if (!--a3) {
                goto LABEL_26;
              }
            }
          }
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        v129[0] = a3;
        v129[1] = v5;
        swift_bridgeObjectRetain();
        sub_1BFF04A00(v129, &v130);
        uint64_t v57 = v131;
        uint64_t v123 = v130;
        unint64_t v58 = v132;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v125 = v58;
        swift_bridgeObjectRetain();
        char v59 = swift_isUniquelyReferenced_nonNull_native();
        v129[0] = *(void *)isUniquelyReferenced_nonNull_native;
        uint64_t v11 = (uint64_t *)v129[0];
        *(void *)uint64_t isUniquelyReferenced_nonNull_native = 0x8000000000000000;
        uint64_t v60 = v5;
        unint64_t v56 = sub_1BFEF2D8C(a3, v5);
        uint64_t v62 = v11[2];
        BOOL v63 = (v61 & 1) == 0;
        uint64_t v64 = v62 + v63;
        if (__OFADD__(v62, v63))
        {
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
          goto LABEL_97;
        }
        unint64_t v5 = v61;
        if (v11[3] >= v64)
        {
          if ((v59 & 1) == 0)
          {
            uint64_t v11 = v129;
            sub_1C106B39C();
            uint64_t v67 = (void *)v129[0];
            if (v5) {
              goto LABEL_40;
            }
            goto LABEL_42;
          }
        }
        else
        {
          sub_1BFFDF158(v64, v59);
          uint64_t v11 = (uint64_t *)v129[0];
          unint64_t v65 = sub_1BFEF2D8C(a3, v60);
          if ((v5 & 1) != (v66 & 1)) {
            goto LABEL_102;
          }
          unint64_t v56 = v65;
        }
        uint64_t v67 = (void *)v129[0];
        if (v5)
        {
LABEL_40:
          uint64_t v68 = (void *)(v67[7] + 24 * v56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          void *v68 = v123;
          v68[1] = v57;
          unint64_t v69 = v125;
          v68[2] = v125;
          unint64_t v56 = v69;
          unint64_t v5 = v60;
LABEL_44:
          *(void *)uint64_t isUniquelyReferenced_nonNull_native = v67;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          goto LABEL_45;
        }
LABEL_42:
        v67[(v56 >> 6) + 8] |= 1 << v56;
        unint64_t v70 = (uint64_t *)(v67[6] + 16 * v56);
        *unint64_t v70 = a3;
        v70[1] = v60;
        unint64_t v71 = (void *)(v67[7] + 24 * v56);
        *unint64_t v71 = v123;
        v71[1] = v57;
        unint64_t v56 = v125;
        uint64_t v71[2] = v125;
        uint64_t v72 = v67[2];
        BOOL v73 = __OFADD__(v72, 1);
        uint64_t v74 = v72 + 1;
        if (v73) {
          goto LABEL_95;
        }
        unint64_t v5 = v60;
        v67[2] = v74;
        swift_bridgeObjectRetain();
        goto LABEL_44;
      }
      swift_retain();
LABEL_79:
      unint64_t v130 = v39;
      swift_bridgeObjectRetain();
      id v102 = v127;
      sub_1C0F26810(&v130, (uint64_t *)&v128);
      if (v102) {
        goto LABEL_104;
      }
      a2 = v130;
      swift_release();
LABEL_81:
      swift_bridgeObjectRelease();
      return (uint64_t)a2;
    case 9:
      if (v12 == 0x9000000000000000)
      {
        uint64_t v103 = type metadata accessor for FormatServiceOptions();
        id v104 = v127;
        uint64_t v20 = sub_1C06604D0((uint64_t)v114, (uint64_t)a2 + *(int *)(v103 + 40));
        if (v104) {
          return (uint64_t)a2;
        }
        return v20;
      }
      if (v12 == 0x9000000000000008)
      {
        id v19 = v127;
        uint64_t v20 = sub_1C0E8891C(v114, (uint64_t)a2, a3, a4);
        if (v19) {
          return (uint64_t)a2;
        }
        return v20;
      }
      a2 = v114;
      swift_bridgeObjectRetain();
      return (uint64_t)a2;
    default:
      uint64_t v13 = swift_projectBox();
      sub_1C0F2C5E0(v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      a2 = (void *)((char *)a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 40));
      uint64_t v14 = v114;
      id v15 = v127;
      sub_1C11A920C((uint64_t)v114, (uint64_t)a2);
      if (v15)
      {
        sub_1C0F2C6B0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
        return (uint64_t)a2;
      }
      uint64_t v97 = sub_1C11A8BE8((uint64_t)a2);
      unint64_t v56 = sub_1C0B823F0(v97, (uint64_t)v14);
      a3 = v98;
      uint64_t isUniquelyReferenced_nonNull_native = v99;
      unint64_t v5 = v100;
      if ((v100 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        goto LABEL_75;
      }
      sub_1C1520B6C();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v106 = swift_dynamicCastClass();
      if (!v106)
      {
        swift_unknownObjectRelease();
        uint64_t v106 = MEMORY[0x1E4FBC860];
      }
      uint64_t v107 = *(void *)(v106 + 16);
      swift_release();
      if (__OFSUB__(v5 >> 1, isUniquelyReferenced_nonNull_native)) {
        goto LABEL_99;
      }
      if (v107 != (v5 >> 1) - isUniquelyReferenced_nonNull_native) {
        goto LABEL_100;
      }
      uint64_t v101 = swift_dynamicCastClass();
      if (!v101)
      {
        swift_unknownObjectRelease();
        uint64_t v101 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_93;
  }
}

uint64_t FormatSlotTransform.description.getter()
{
  uint64_t v1 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  switch((unint64_t)*v0 >> 60)
  {
    case 1uLL:
      unint64_t v21 = 0x2065726975716572;
      unint64_t v22 = 0xE900000000000028;
      sub_1C00801EC();
      swift_bridgeObjectRetain();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 2uLL:
      unint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v21 = 0x28207963696C6F70;
      unint64_t v22 = 0xE800000000000000;
      unint64_t v19 = v7;
      unint64_t v8 = sub_1BFC7E2FC(v7);
      FormatSlotTransform.description.getter(v8);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C00544B4(v7);
      goto LABEL_20;
    case 3uLL:
      uint64_t v11 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v12 = *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v21 = 0xD000000000000010;
      unint64_t v22 = 0x80000001C162F400;
      if ((v12 & 1) == 0)
      {
        unint64_t v19 = 0;
        unint64_t v20 = 0xE000000000000000;
        v18[1] = v11;
        sub_1C0AF4CF0();
        sub_1C152036C();
      }
      sub_1C151E80C();
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 4uLL:
      uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_1C08B3F8C(v9);
      sub_1C151E80C();
      unint64_t v19 = v9;
      sub_1C152036C();
      sub_1C151E80C();
      sub_1C08B19E0(v9);
      goto LABEL_20;
    case 5uLL:
      char v13 = *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      LOBYTE(v19) = v13;
      sub_1C152036C();
LABEL_19:
      sub_1C151E80C();
      goto LABEL_20;
    case 6uLL:
      unint64_t v14 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v15 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_1BFC7E2FC(v14);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      unint64_t v19 = v14;
      unint64_t v20 = v15;
      sub_1C0F2597C();
      sub_1C152036C();
      sub_1C151E80C();
      sub_1C00544B4(v14);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 7uLL:
    case 8uLL:
      unint64_t v16 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      swift_retain();
      sub_1C151E80C();
      unint64_t v19 = v16;
      sub_1C152036C();
      swift_release();
LABEL_20:
      uint64_t v6 = v21;
      break;
    case 9uLL:
      uint64_t v10 = 0x6C616E6F73726570;
      if (v4 != 0x9000000000000008) {
        uint64_t v10 = 0x7974706D65;
      }
      if (v4 == 0x9000000000000000) {
        uint64_t v6 = 0x657571696E75;
      }
      else {
        uint64_t v6 = v10;
      }
      break;
    default:
      uint64_t v5 = swift_projectBox();
      sub_1C0F2C5E0(v5, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      unint64_t v21 = 0x282074696D696CLL;
      unint64_t v22 = 0xE700000000000000;
      FormatSlotItemCountLimit.description.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v6 = v21;
      sub_1C0F2C6B0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      break;
  }
  return v6;
}

void sub_1C0F2597C()
{
  if (!qword_1EA19E2F0)
  {
    sub_1C08B3C28();
    unint64_t v0 = type metadata accessor for FormatSelectorValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19E2F0);
    }
  }
}

uint64_t sub_1C0F259D8(uint64_t a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = (unint64_t)*v1 >> 60;
  uint64_t v4 = 2;
  switch(v3)
  {
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 7uLL:
      uint64_t v4 = 0;
      break;
    case 2uLL:
      unint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v12 = v6;
      sub_1BFC7E2FC(v6);
      uint64_t v4 = sub_1C0F259D8(a1);
      goto LABEL_11;
    case 5uLL:
      uint64_t v4 = *(unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != 2;
      break;
    case 6uLL:
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v9 = *(void *)(v7 + 16);
      uint64_t v8 = *(void *)(v7 + 24);
      if (*(void *)(v8 + 16))
      {
        uint64_t v10 = *(void *)(a1 + 96);
        sub_1BFC7E2FC(v9);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BFC7E2FC(v9);
        sub_1C0F2403C(v9, v8, v10, &v12);
        sub_1C00544B4(v9);
        swift_bridgeObjectRelease();
        unint64_t v6 = v12;
      }
      else
      {
        sub_1BFC7E2FC(v9);
        swift_bridgeObjectRetain();
        sub_1BFC7E2FC(v9);
        unint64_t v6 = v9;
      }
      uint64_t v4 = sub_1C0F259D8(a1);
      sub_1C00544B4(v9);
      swift_bridgeObjectRelease();
LABEL_11:
      sub_1C00544B4(v6);
      break;
    case 8uLL:
      uint64_t v4 = 1;
      break;
    case 9uLL:
      uint64_t v4 = v2 == 0x9000000000000008;
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t static FormatSlotTransform.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)v37 - v8;
  unint64_t v10 = *a1;
  unint64_t v11 = *a2;
  switch(v10 >> 60)
  {
    case 1uLL:
      if (v11 >> 60 != 1) {
        goto LABEL_40;
      }
      uint64_t v15 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
      char v17 = sub_1C00ADD70(v15, v16);
      goto LABEL_14;
    case 2uLL:
      if (v11 >> 60 != 2) {
        goto LABEL_40;
      }
      uint64_t v18 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v38[0] = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v37[0] = v18;
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
      char v17 = static FormatSlotTransform.== infix(_:_:)(v38, v37);
      goto LABEL_14;
    case 3uLL:
      if (v11 >> 60 != 3) {
        goto LABEL_40;
      }
      double v19 = *(double *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v20 = *(unsigned char *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      double v21 = *(double *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v22 = *(unsigned char *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
      sub_1C00544B4(v10);
      sub_1C00544B4(v11);
      if (v20)
      {
        if ((v22 & 1) == 0) {
          goto LABEL_42;
        }
      }
      else
      {
        if (v19 == v21) {
          char v35 = v22;
        }
        else {
          char v35 = 1;
        }
        if (v35) {
          goto LABEL_42;
        }
      }
      goto LABEL_54;
    case 4uLL:
      if (v11 >> 60 != 4) {
        goto LABEL_40;
      }
      uint64_t v23 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v38[0] = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v37[0] = v23;
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
      char v17 = _s8NewsFeed23FormatSlotItemTagFilterO2eeoiySbAC_ACtFZ_0(v38, v37);
LABEL_14:
      char v14 = v17;
      goto LABEL_50;
    case 5uLL:
      if (v11 >> 60 != 5) {
        goto LABEL_40;
      }
      int v28 = *(unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v29 = *(unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      if (v28 == 2)
      {
        sub_1BFC7E2FC(v11);
        sub_1BFC7E2FC(v10);
        sub_1C00544B4(v10);
        sub_1C00544B4(v11);
        if (v29 != 2) {
          goto LABEL_42;
        }
      }
      else
      {
        sub_1BFC7E2FC(v11);
        sub_1BFC7E2FC(v10);
        sub_1C00544B4(v10);
        sub_1C00544B4(v11);
        if (v29 == 2 || ((v29 ^ v28) & 1) != 0) {
          goto LABEL_42;
        }
      }
      goto LABEL_54;
    case 6uLL:
      if (v11 >> 60 != 6) {
        goto LABEL_40;
      }
      uint64_t v30 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v33 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      v38[0] = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v31 = v38[0];
      v38[1] = v30;
      v37[0] = v33;
      v37[1] = v32;
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
      sub_1BFC7E2FC(v31);
      swift_bridgeObjectRetain();
      sub_1BFC7E2FC(v33);
      swift_bridgeObjectRetain();
      if ((static FormatSlotTransform.== infix(_:_:)(v38, v37) & 1) == 0)
      {
        sub_1C00544B4(v33);
        swift_bridgeObjectRelease();
        sub_1C00544B4(v31);
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v34 = sub_1C00EA9C4(v30, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C00544B4(v33);
      swift_bridgeObjectRelease();
      sub_1C00544B4(v31);
      swift_bridgeObjectRelease();
      sub_1C00544B4(v10);
      sub_1C00544B4(v11);
      if ((v34 & 1) == 0) {
        goto LABEL_42;
      }
LABEL_54:
      char v14 = 1;
      return v14 & 1;
    case 7uLL:
      if (v11 >> 60 != 7) {
        goto LABEL_40;
      }
      uint64_t v24 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      if (*(void *)(v24 + 16) == *(void *)(v25 + 16) && *(void *)(v24 + 24) == *(void *)(v25 + 24)) {
        char v14 = 1;
      }
      else {
        char v14 = sub_1C1520A9C();
      }
      goto LABEL_49;
    case 8uLL:
      if (v11 >> 60 != 8) {
        goto LABEL_40;
      }
      char v14 = sub_1C00EA9DC(*(void *)(*(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10) + 16), *(void *)(*(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10) + 16));
LABEL_49:
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
      goto LABEL_50;
    case 9uLL:
      if (v10 == 0x9000000000000000)
      {
        if (v11 == 0x9000000000000000)
        {
          sub_1C00544B4(0x9000000000000000);
          unint64_t v27 = 0x9000000000000000;
          goto LABEL_39;
        }
      }
      else if (v10 == 0x9000000000000008)
      {
        if (v11 == 0x9000000000000008)
        {
          sub_1C00544B4(0x9000000000000008);
          unint64_t v27 = 0x9000000000000008;
LABEL_39:
          sub_1C00544B4(v27);
          char v14 = 1;
          return v14 & 1;
        }
      }
      else if (v11 == 0x9000000000000010)
      {
        sub_1C00544B4(0x9000000000000010);
        unint64_t v27 = 0x9000000000000010;
        goto LABEL_39;
      }
LABEL_40:
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
LABEL_41:
      sub_1C00544B4(v10);
      sub_1C00544B4(v11);
LABEL_42:
      char v14 = 0;
      return v14 & 1;
    default:
      if (v11 >> 60) {
        goto LABEL_40;
      }
      uint64_t v12 = swift_projectBox();
      uint64_t v13 = swift_projectBox();
      sub_1C0F2C5E0(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      sub_1C0F2C5E0(v13, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      sub_1BFC7E2FC(v11);
      sub_1BFC7E2FC(v10);
      char v14 = _s8NewsFeed24FormatSlotItemCountLimitO2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v6);
      sub_1C0F2C6B0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      sub_1C0F2C6B0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
LABEL_50:
      sub_1C00544B4(v10);
      sub_1C00544B4(v11);
      return v14 & 1;
  }
}

uint64_t FormatSlotTransform.identifier.getter()
{
  uint64_t v1 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  uint64_t v5 = 0x6F43657269707865;
  switch((unint64_t)*v0 >> 60)
  {
    case 1uLL:
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_1C00B115C(v9);
      swift_bridgeObjectRelease();
      int64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        uint64_t v40 = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v11, 0);
        uint64_t v12 = 0;
        uint64_t v13 = v40;
        do
        {
          LOBYTE(v38) = *(unsigned char *)(v10 + v12 + 32);
          unint64_t v14 = FormatItemTrait.rawValue.getter();
          uint64_t v16 = v15;
          uint64_t v40 = v13;
          unint64_t v18 = *(void *)(v13 + 16);
          unint64_t v17 = *(void *)(v13 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_1BFF661B8(v17 > 1, v18 + 1, 1);
            uint64_t v13 = v40;
          }
          ++v12;
          *(void *)(v13 + 16) = v18 + 1;
          uint64_t v19 = v13 + 16 * v18;
          *(void *)(v19 + 32) = v14;
          *(void *)(v19 + 40) = v16;
        }
        while (v11 != v12);
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v13 = MEMORY[0x1E4FBC860];
      }
      uint64_t v40 = v13;
      swift_bridgeObjectRetain();
      sub_1BFD8BB48(&v40);
      swift_bridgeObjectRelease();
      sub_1BFED9C20();
      sub_1BFE99E40();
      sub_1C151E55C();
      swift_release();
      uint64_t v40 = 0x2D7265746C6966;
      unint64_t v41 = 0xE700000000000000;
      sub_1C151E80C();
      goto LABEL_33;
    case 2uLL:
      unint64_t v20 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = 0x2D7963696C6F70;
      unint64_t v41 = 0xE700000000000000;
      uint64_t v38 = v20;
      unint64_t v21 = sub_1BFC7E2FC(v20);
      FormatSlotTransform.identifier.getter(v21);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C00544B4(v20);
      goto LABEL_34;
    case 3uLL:
      return v5;
    case 4uLL:
      uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = 0x746C69662D676174;
      unint64_t v41 = 0xEB000000002D7265;
      uint64_t v38 = v7;
      sub_1C08B3F8C(v7);
      sub_1C13E7CA0();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C08B19E0(v7);
      goto LABEL_34;
    case 5uLL:
      int v22 = *(unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v40 = 0xD000000000000011;
      unint64_t v41 = 0x80000001C162F420;
      if (v22 != 2)
      {
        uint64_t v38 = 0x2D726564726FLL;
        unint64_t v39 = 0xE600000000000000;
        sub_1C151E80C();
        swift_bridgeObjectRelease();
      }
      sub_1C151E80C();
      goto LABEL_33;
    case 6uLL:
      unint64_t v24 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v23 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      int64_t v25 = *(void *)(v23 + 16);
      if (v25)
      {
        sub_1BFC7E2FC(*(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10));
        uint64_t v40 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain_n();
        uint64_t v26 = sub_1BFF661B8(0, v25, 0);
        uint64_t v27 = 48;
        uint64_t v28 = v40;
        do
        {
          uint64_t v38 = *(void *)(v23 + v27);
          uint64_t v26 = FormatSlotTransform.identifier.getter(v26);
          uint64_t v29 = v26;
          uint64_t v31 = v30;
          uint64_t v40 = v28;
          unint64_t v33 = *(void *)(v28 + 16);
          unint64_t v32 = *(void *)(v28 + 24);
          if (v33 >= v32 >> 1)
          {
            uint64_t v26 = sub_1BFF661B8(v32 > 1, v33 + 1, 1);
            uint64_t v28 = v40;
          }
          *(void *)(v28 + 16) = v33 + 1;
          uint64_t v34 = v28 + 16 * v33;
          *(void *)(v34 + 32) = v29;
          *(void *)(v34 + 40) = v31;
          v27 += 24;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BFC7E2FC(*(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10));
        swift_bridgeObjectRetain();
        uint64_t v28 = MEMORY[0x1E4FBC860];
      }
      uint64_t v40 = v28;
      swift_bridgeObjectRetain();
      sub_1BFD8BB48(&v40);
      swift_bridgeObjectRelease();
      sub_1BFED9C20();
      sub_1BFE99E40();
      sub_1C151E55C();
      swift_release();
      uint64_t v40 = 0x726F7463656C6573;
      unint64_t v41 = 0xE90000000000002DLL;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C00544B4(v24);
      goto LABEL_33;
    case 7uLL:
      uint64_t v40 = 0x2D7265746C6966;
      unint64_t v41 = 0xE700000000000000;
      uint64_t v38 = 0x726F7463656C6573;
      unint64_t v39 = 0xE90000000000002DLL;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    case 8uLL:
      uint64_t v35 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = 0x2D74726F73;
      unint64_t v41 = 0xE500000000000000;
      uint64_t v38 = v35;
      swift_retain();
      FormatSlotItemSort.identifier.getter();
LABEL_26:
      sub_1C151E80C();
      swift_release();
LABEL_33:
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v5 = v40;
      break;
    case 9uLL:
      uint64_t v8 = 0x6C616E6F73726570;
      if (v4 != 0x9000000000000008) {
        uint64_t v8 = 0x7974706D65;
      }
      if (v4 == 0x9000000000000000) {
        uint64_t v5 = 0x657571696E75;
      }
      else {
        uint64_t v5 = v8;
      }
      break;
    default:
      uint64_t v6 = swift_projectBox();
      sub_1C0F2C5E0(v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      uint64_t v40 = 0x2D74696D696CLL;
      unint64_t v41 = 0xE600000000000000;
      FormatSlotItemCountLimit.identifier.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v5 = v40;
      sub_1C0F2C6B0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      break;
  }
  return v5;
}

void sub_1C0F26810(void **a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
  uint64_t v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1C0636450(v5);
  }
  uint64_t v6 = v5[2];
  v7[0] = (uint64_t)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7[1] = v6;
  sub_1C0F268C8(v7, a2);
  *a1 = v5;
}

void sub_1C0F268C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v351 = a2;
  uint64_t v3 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v332 = (uint64_t)v288 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v288 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v288 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v288 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v297 = (uint64_t)v288 - v15;
  uint64_t v320 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v320);
  unint64_t v17 = (char *)v288 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v305 = (uint64_t)v288 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v308 = (uint64_t)v288 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v315 = (uint64_t)v288 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)v288 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v306 = (uint64_t)v288 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v309 = (uint64_t)v288 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v317 = (uint64_t)v288 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)v288 - v34;
  MEMORY[0x1F4188790](v36);
  uint64_t v316 = (char *)v288 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v292 = (uint64_t)v288 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v295 = (uint64_t)v288 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v294 = (uint64_t)v288 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v318 = (char *)v288 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v298 = (uint64_t)v288 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v300 = (uint64_t)v288 - v49;
  uint64_t v331 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v331);
  uint64_t v325 = (uint64_t)v288 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v51);
  uint64_t v328 = (uint64_t)v288 - v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v302 = (uint64_t)v288 - v54;
  MEMORY[0x1F4188790](v55);
  uint64_t v312 = (uint64_t)v288 - v56;
  uint64_t v330 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v330);
  uint64_t v326 = (id *)((char *)v288 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v58);
  uint64_t v327 = (id *)((char *)v288 - v59);
  MEMORY[0x1F4188790](v60);
  uint64_t v303 = (id *)((char *)v288 - v61);
  MEMORY[0x1F4188790](v62);
  v311 = (id *)((char *)v288 - v63);
  uint64_t v64 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v64 - 8);
  uint64_t v329 = (uint64_t)v288 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v349);
  uint64_t v346 = (uint64_t)v288 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v67);
  uint64_t v347 = (uint64_t)v288 - v68;
  MEMORY[0x1F4188790](v69);
  uint64_t v319 = (uint64_t)v288 - v70;
  MEMORY[0x1F4188790](v71);
  uint64_t v334 = (uint64_t)v288 - v72;
  uint64_t v73 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v338 = *(void *)(v73 - 8);
  uint64_t v339 = v73;
  MEMORY[0x1F4188790](v73);
  uint64_t v323 = (uint64_t)v288 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v75);
  uint64_t v345 = (uint64_t)v288 - v76;
  MEMORY[0x1F4188790](v77);
  uint64_t v354 = (uint64_t)v288 - v78;
  MEMORY[0x1F4188790](v79);
  uint64_t v348 = (uint64_t)v288 - v80;
  MEMORY[0x1F4188790](v81);
  uint64_t v337 = (uint64_t)v288 - v82;
  MEMORY[0x1F4188790](v83);
  uint64_t v335 = (uint64_t)v288 - v84;
  MEMORY[0x1F4188790](v85);
  uint64_t v314 = (uint64_t)v288 - v86;
  MEMORY[0x1F4188790](v87);
  uint64_t v313 = (uint64_t)v288 - v88;
  uint64_t v89 = a1[1];
  uint64_t v90 = sub_1C152086C();
  if (v90 >= v89)
  {
    if (v89 < 0) {
      goto LABEL_249;
    }
    if (v89) {
      sub_1C0F29A18(0, v89, 1, a1, v351);
    }
  }
  else
  {
    if (v89 >= 0) {
      uint64_t v91 = v89;
    }
    else {
      uint64_t v91 = v89 + 1;
    }
    if (v89 < -1) {
      goto LABEL_257;
    }
    uint64_t v299 = v7;
    uint64_t v301 = v10;
    uint64_t v296 = v90;
    if (v89 >= 2)
    {
      v288[0] = (uint64_t)v13;
      uint64_t v92 = v91 >> 1;
      uint64_t v93 = sub_1C151ECCC();
      *(void *)(v93 + 16) = v92;
      uint64_t v94 = *(unsigned __int8 *)(v338 + 80);
      uint64_t v291 = v93;
      unint64_t v336 = v93 + ((v94 + 32) & ~v94);
LABEL_13:
      uint64_t v95 = 0;
      uint64_t v96 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v307 = "uzzlesSolved";
      uint64_t v293 = "fastestTimeByDifficultyLevel";
      v288[1] = (uint64_t)"averageTimeByDifficultyLevel";
      uint64_t v310 = "fficultyLevel";
      uint64_t v341 = a1;
      uint64_t v289 = v17;
      uint64_t v290 = v26;
      uint64_t v333 = v35;
      while (1)
      {
        uint64_t v98 = v95;
        uint64_t v99 = v95 + 1;
        long long v322 = v96;
        if (v95 + 1 >= v89)
        {
          uint64_t v114 = v95 + 1;
        }
        else
        {
          uint64_t v100 = *a1;
          uint64_t v101 = *(void *)(v338 + 72);
          sub_1C0F2C5E0(*a1 + v101 * v99, v313, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          uint64_t v321 = v100;
          uint64_t v350 = v101;
          sub_1C0F2C5E0(v100 + v101 * v98, v314, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          uint64_t v102 = FormatContentSlotItemObject.Resolved.identifier.getter();
          uint64_t v104 = *v351;
          if (*(void *)(*v351 + 16)
            && (unint64_t v105 = sub_1BFEF2D8C(v102, v103), (v106 & 1) != 0)
            && (uint64_t v107 = *(void *)(*(void *)(v104 + 56) + 8 * v105),
                swift_bridgeObjectRelease(),
                uint64_t v108 = FormatContentSlotItemObject.Resolved.identifier.getter(),
                uint64_t v110 = *v351,
                *(void *)(*v351 + 16))
            && (unint64_t v111 = sub_1BFEF2D8C(v108, v109), (v112 & 1) != 0))
          {
            uint64_t v113 = *(void *)(*(void *)(v110 + 56) + 8 * v111);
            swift_bridgeObjectRelease();
            LODWORD(v344) = v113 < v107;
          }
          else
          {
            swift_bridgeObjectRelease();
            LODWORD(v344) = 0;
          }
          sub_1C0F2C6B0(v314, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          sub_1C0F2C6B0(v313, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          uint64_t v114 = v98 + 2;
          uint64_t v342 = v89;
          if (v98 + 2 < v89)
          {
            uint64_t v324 = v98;
            uint64_t v343 = v350 * v99;
            uint64_t v115 = v321;
            uint64_t v116 = v350 * v114;
            uint64_t v117 = (uint64_t)v318;
            while (1)
            {
              uint64_t v118 = v114;
              uint64_t v119 = v335;
              sub_1C0F2C5E0(v115 + v116, v335, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              sub_1C0F2C5E0(v115 + v343, v337, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              sub_1C0F2C5E0(v119, v334, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  id v124 = *(id *)v334;
                  id v125 = objc_msgSend(*(id *)v334, sel_identifier);
                  id v122 = (id)sub_1C151E62C();
                  uint64_t v121 = v126;

                  goto LABEL_32;
                case 3u:
                  uint64_t v120 = v329;
                  sub_1C0F2C648(v334, v329, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                  id v122 = *(id *)v120;
                  uint64_t v121 = *(void *)(v120 + 8);
                  swift_bridgeObjectRetain();
                  uint64_t v123 = type metadata accessor for FormatWebEmbed.Resolved;
                  goto LABEL_29;
                case 6u:
                  uint64_t v135 = v311;
                  sub_1C0F2C648(v334, (uint64_t)v311, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                  id v136 = objc_msgSend(*v135, sel_identifier);
                  uint64_t v304 = sub_1C151E62C();
                  uint64_t v138 = v137;

                  sub_1C0F2C5E0((uint64_t)v135 + *(int *)(v330 + 20), v312, type metadata accessor for PuzzleStatisticCategory);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      uint64_t v159 = v297;
                      sub_1C0F2C648(v312, v297, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                      sub_1C0F2C5E0(v159, v117, type metadata accessor for PuzzleStatisticValue);
                      if (swift_getEnumCaseMultiPayload() == 2)
                      {
                        sub_1C0F2C6B0(v159, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                      }
                      else
                      {
                        sub_1C0F2C6B0(v117, type metadata accessor for PuzzleStatisticValue);
                        uint64_t v160 = v294;
                        sub_1C0F2C5E0(v159, v294, type metadata accessor for PuzzleStatisticValue);
                        if (swift_getEnumCaseMultiPayload() != 3) {
                          sub_1C0F2C6B0(v160, type metadata accessor for PuzzleStatisticValue);
                        }
                        sub_1C0F2C6B0(v159, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                        uint64_t v117 = (uint64_t)v318;
                      }
                      break;
                    case 2u:
                      sub_1C0F2C6B0(v312, type metadata accessor for PuzzleStatisticCategory);
                      break;
                    case 3u:
                      sub_1C0F2C6B0(v312, type metadata accessor for PuzzleStatisticCategory);
                      break;
                    default:
                      uint64_t v139 = v300;
                      sub_1C0F2C648(v312, v300, type metadata accessor for PuzzleStatisticValue);
                      sub_1C0F2C5E0(v139, v298, type metadata accessor for PuzzleStatisticValue);
                      switch(swift_getEnumCaseMultiPayload())
                      {
                        case 4u:
                        case 5u:
                          sub_1C0F2C6B0(v298, type metadata accessor for PuzzleStatisticValue);
                          sub_1C0F2C6B0(v300, type metadata accessor for PuzzleStatisticValue);
                          break;
                        case 6u:
                          sub_1C0F2C6B0(v300, type metadata accessor for PuzzleStatisticValue);
                          break;
                        default:
                          sub_1C0F2C6B0(v300, type metadata accessor for PuzzleStatisticValue);
                          break;
                      }
                      break;
                  }
                  v352 = (void *)v304;
                  uint64_t v353 = v138;
                  swift_bridgeObjectRetain();
                  sub_1C151E80C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  id v122 = v352;
                  uint64_t v121 = v353;
                  sub_1C0F2C6B0((uint64_t)v311, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                  break;
                case 7u:
                  uint64_t v120 = v332;
                  sub_1C0F2C648(v334, v332, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
                  id v122 = *(id *)v120;
                  uint64_t v121 = *(void *)(v120 + 8);
                  swift_bridgeObjectRetain();
                  uint64_t v123 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_29:
                  sub_1C0F2C6B0(v120, (uint64_t (*)(void))v123);
                  break;
                case 8u:
                  id v122 = *(id *)v334;
                  uint64_t v121 = *(void *)(v334 + 8);
                  break;
                default:
                  id v125 = objc_msgSend(*(id *)v334, sel_identifier);
                  id v122 = (id)sub_1C151E62C();
                  uint64_t v121 = v127;
                  swift_unknownObjectRelease();
LABEL_32:

                  uint64_t v89 = v342;
                  break;
              }
              uint64_t v128 = *v351;
              if (*(void *)(*v351 + 16) && (unint64_t v129 = sub_1BFEF2D8C((uint64_t)v122, v121), (v130 & 1) != 0))
              {
                uint64_t v131 = *(void *)(*(void *)(v128 + 56) + 8 * v129);
                swift_bridgeObjectRelease();
                sub_1C0F2C5E0(v337, v319, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                uint64_t v133 = (uint64_t)v316;
                switch(EnumCaseMultiPayload)
                {
                  case 1:
                    id v144 = *(id *)v319;
                    id v145 = objc_msgSend(*(id *)v319, sel_identifier);
                    id v142 = (id)sub_1C151E62C();
                    uint64_t v141 = v146;

                    goto LABEL_46;
                  case 3:
                    uint64_t v140 = v329;
                    sub_1C0F2C648(v319, v329, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                    id v142 = *(id *)v140;
                    uint64_t v141 = *(void *)(v140 + 8);
                    swift_bridgeObjectRetain();
                    uint64_t v143 = type metadata accessor for FormatWebEmbed.Resolved;
                    goto LABEL_43;
                  case 6:
                    BOOL v152 = v303;
                    sub_1C0F2C648(v319, (uint64_t)v303, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                    id v153 = objc_msgSend(*v152, sel_identifier);
                    uint64_t v304 = sub_1C151E62C();
                    uint64_t v155 = v154;

                    sub_1C0F2C5E0((uint64_t)v152 + *(int *)(v330 + 20), v302, type metadata accessor for PuzzleStatisticCategory);
                    int v156 = swift_getEnumCaseMultiPayload();
                    uint64_t v89 = v342;
                    switch(v156)
                    {
                      case 1:
                        uint64_t v161 = v288[0];
                        sub_1C0F2C648(v302, v288[0], type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                        sub_1C0F2C5E0(v161, v133, type metadata accessor for PuzzleStatisticValue);
                        if (swift_getEnumCaseMultiPayload() != 2)
                        {
                          sub_1C0F2C6B0(v133, type metadata accessor for PuzzleStatisticValue);
                          sub_1C0F2C5E0(v161, (uint64_t)v35, type metadata accessor for PuzzleStatisticValue);
                          if (swift_getEnumCaseMultiPayload() != 3) {
                            sub_1C0F2C6B0((uint64_t)v35, type metadata accessor for PuzzleStatisticValue);
                          }
                        }
                        sub_1C0F2C6B0(v161, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                        uint64_t v89 = v342;
                        goto LABEL_77;
                      case 2:
                      case 3:
                        sub_1C0F2C6B0(v302, type metadata accessor for PuzzleStatisticCategory);
LABEL_77:
                        uint64_t v158 = v155;
                        break;
                      default:
                        uint64_t v157 = v295;
                        sub_1C0F2C648(v302, v295, type metadata accessor for PuzzleStatisticValue);
                        sub_1C0F2C5E0(v157, v292, type metadata accessor for PuzzleStatisticValue);
                        uint64_t v158 = v155;
                        switch(swift_getEnumCaseMultiPayload())
                        {
                          case 4u:
                          case 5u:
                            sub_1C0F2C6B0(v292, type metadata accessor for PuzzleStatisticValue);
                            sub_1C0F2C6B0(v295, type metadata accessor for PuzzleStatisticValue);
                            break;
                          default:
                            sub_1C0F2C6B0(v295, type metadata accessor for PuzzleStatisticValue);
                            break;
                        }
                        break;
                    }
                    v352 = (void *)v304;
                    uint64_t v353 = v158;
                    swift_bridgeObjectRetain();
                    sub_1C151E80C();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    id v142 = v352;
                    uint64_t v141 = v353;
                    sub_1C0F2C6B0((uint64_t)v303, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                    break;
                  case 7:
                    uint64_t v140 = v332;
                    sub_1C0F2C648(v319, v332, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
                    id v142 = *(id *)v140;
                    uint64_t v141 = *(void *)(v140 + 8);
                    swift_bridgeObjectRetain();
                    uint64_t v143 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_43:
                    sub_1C0F2C6B0(v140, (uint64_t (*)(void))v143);
                    break;
                  case 8:
                    id v142 = *(id *)v319;
                    uint64_t v141 = *(void *)(v319 + 8);
                    break;
                  default:
                    id v145 = objc_msgSend(*(id *)v319, sel_identifier);
                    id v142 = (id)sub_1C151E62C();
                    uint64_t v141 = v147;
                    swift_unknownObjectRelease();
LABEL_46:

                    uint64_t v89 = v342;
                    break;
                }
                uint64_t v148 = *v351;
                if (*(void *)(*v351 + 16) && (unint64_t v149 = sub_1BFEF2D8C((uint64_t)v142, v141), (v150 & 1) != 0))
                {
                  uint64_t v151 = *(void *)(*(void *)(v148 + 56) + 8 * v149);
                  swift_bridgeObjectRelease();
                  int v134 = v151 < v131;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  int v134 = 0;
                }
                uint64_t v117 = (uint64_t)v318;
              }
              else
              {
                swift_bridgeObjectRelease();
                int v134 = 0;
              }
              sub_1C0F2C6B0(v337, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              sub_1C0F2C6B0(v335, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              if (v344 != v134) {
                break;
              }
              uint64_t v114 = v118 + 1;
              v115 += v350;
              if (v89 == v118 + 1)
              {
                uint64_t v114 = v89;
                a1 = v341;
                goto LABEL_81;
              }
            }
            a1 = v341;
            uint64_t v114 = v118;
LABEL_81:
            uint64_t v98 = v324;
          }
          if (v344)
          {
            if (v114 < v98) {
              goto LABEL_250;
            }
            if (v98 < v114)
            {
              uint64_t v162 = 0;
              uint64_t v163 = v350 * (v114 - 1);
              uint64_t v164 = v98;
              uint64_t v165 = v114 * v350;
              uint64_t v166 = v164;
              uint64_t v324 = v164;
              uint64_t v167 = v164 * v350;
              do
              {
                if (v166 != v114 + v162 - 1)
                {
                  uint64_t v168 = v321;
                  if (!v321) {
                    goto LABEL_255;
                  }
                  unint64_t v169 = v321 + v167;
                  sub_1C0F2C648(v321 + v167, v323, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  if (v167 < v163 || v169 >= v168 + v165)
                  {
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else if (v167 != v163)
                  {
                    swift_arrayInitWithTakeBackToFront();
                  }
                  sub_1C0F2C648(v323, v168 + v163, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                }
                ++v166;
                --v162;
                v163 -= v350;
                v165 -= v350;
                v167 += v350;
              }
              while (v166 < v114 + v162);
              uint64_t v35 = v333;
              uint64_t v98 = v324;
              a1 = v341;
              uint64_t v89 = v342;
            }
          }
        }
        if (v114 < v89)
        {
          if (__OFSUB__(v114, v98)) {
            goto LABEL_248;
          }
          if (v114 - v98 < v296)
          {
            if (__OFADD__(v98, v296)) {
              goto LABEL_251;
            }
            if (v98 + v296 >= v89) {
              uint64_t v170 = v89;
            }
            else {
              uint64_t v170 = v98 + v296;
            }
            if (v170 < v98)
            {
LABEL_252:
              __break(1u);
LABEL_253:
              __break(1u);
LABEL_254:
              __break(1u);
LABEL_255:
              __break(1u);
LABEL_256:
              __break(1u);
LABEL_257:
              sub_1C15203FC();
              __break(1u);
              JUMPOUT(0x1C0F298D8);
            }
            if (v114 != v170)
            {
              uint64_t v324 = v98;
              uint64_t v171 = *(void *)(v338 + 72);
              uint64_t v350 = v171 * (v114 - 1);
              uint64_t v342 = v171;
              uint64_t v172 = v114 * v171;
              uint64_t v321 = v170;
              do
              {
                uint64_t v174 = 0;
                uint64_t v175 = v324;
                uint64_t v343 = v172;
                uint64_t v344 = v114;
                while (1)
                {
                  uint64_t v176 = *a1;
                  uint64_t v177 = v172 + v174 + *a1;
                  uint64_t v178 = v348;
                  sub_1C0F2C5E0(v177, v348, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  sub_1C0F2C5E0(v350 + v174 + v176, v354, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  sub_1C0F2C5E0(v178, v347, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      id v183 = *(id *)v347;
                      id v184 = objc_msgSend(*(id *)v347, sel_identifier);
                      id v181 = (id)sub_1C151E62C();
                      uint64_t v180 = v185;

                      goto LABEL_118;
                    case 3u:
                      uint64_t v179 = v329;
                      sub_1C0F2C648(v347, v329, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                      id v181 = *(id *)v179;
                      uint64_t v180 = *(void *)(v179 + 8);
                      swift_bridgeObjectRetain();
                      uint64_t v182 = type metadata accessor for FormatWebEmbed.Resolved;
                      goto LABEL_115;
                    case 6u:
                      uint64_t v191 = v327;
                      sub_1C0F2C648(v347, (uint64_t)v327, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                      id v192 = objc_msgSend(*v191, sel_identifier);
                      uint64_t v193 = sub_1C151E62C();
                      uint64_t v195 = v194;

                      sub_1C0F2C5E0((uint64_t)v191 + *(int *)(v330 + 20), v328, type metadata accessor for PuzzleStatisticCategory);
                      switch(swift_getEnumCaseMultiPayload())
                      {
                        case 1u:
                          uint64_t v304 = v193;
                          uint64_t v217 = (uint64_t)v301;
                          sub_1C0F2C648(v328, (uint64_t)v301, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                          uint64_t v218 = v306;
                          sub_1C0F2C5E0(v217, v306, type metadata accessor for PuzzleStatisticValue);
                          if (swift_getEnumCaseMultiPayload() != 2)
                          {
                            sub_1C0F2C6B0(v218, type metadata accessor for PuzzleStatisticValue);
                            uint64_t v219 = (uint64_t)v290;
                            sub_1C0F2C5E0(v217, (uint64_t)v290, type metadata accessor for PuzzleStatisticValue);
                            if (swift_getEnumCaseMultiPayload() != 3) {
                              sub_1C0F2C6B0(v219, type metadata accessor for PuzzleStatisticValue);
                            }
                          }
                          sub_1C0F2C6B0(v217, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                          uint64_t v193 = v304;
                          break;
                        case 2u:
                          sub_1C0F2C6B0(v328, type metadata accessor for PuzzleStatisticCategory);
                          break;
                        case 3u:
                          sub_1C0F2C6B0(v328, type metadata accessor for PuzzleStatisticCategory);
                          break;
                        default:
                          uint64_t v196 = v317;
                          sub_1C0F2C648(v328, v317, type metadata accessor for PuzzleStatisticValue);
                          sub_1C0F2C5E0(v196, v309, type metadata accessor for PuzzleStatisticValue);
                          switch(swift_getEnumCaseMultiPayload())
                          {
                            case 4u:
                            case 5u:
                              sub_1C0F2C6B0(v309, type metadata accessor for PuzzleStatisticValue);
                              sub_1C0F2C6B0(v317, type metadata accessor for PuzzleStatisticValue);
                              break;
                            case 6u:
                              sub_1C0F2C6B0(v317, type metadata accessor for PuzzleStatisticValue);
                              break;
                            default:
                              sub_1C0F2C6B0(v317, type metadata accessor for PuzzleStatisticValue);
                              break;
                          }
                          break;
                      }
                      v352 = (void *)v193;
                      uint64_t v353 = v195;
                      swift_bridgeObjectRetain();
                      sub_1C151E80C();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      id v181 = v352;
                      uint64_t v180 = v353;
                      sub_1C0F2C6B0((uint64_t)v327, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                      break;
                    case 7u:
                      uint64_t v179 = v332;
                      sub_1C0F2C648(v347, v332, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
                      id v181 = *(id *)v179;
                      uint64_t v180 = *(void *)(v179 + 8);
                      swift_bridgeObjectRetain();
                      uint64_t v182 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_115:
                      sub_1C0F2C6B0(v179, (uint64_t (*)(void))v182);
                      break;
                    case 8u:
                      id v181 = *(id *)v347;
                      uint64_t v180 = *(void *)(v347 + 8);
                      break;
                    default:
                      id v184 = objc_msgSend(*(id *)v347, sel_identifier);
                      id v181 = (id)sub_1C151E62C();
                      uint64_t v180 = v186;
                      swift_unknownObjectRelease();
LABEL_118:

                      break;
                  }
                  uint64_t v187 = *v351;
                  if (!*(void *)(*v351 + 16)) {
                    goto LABEL_107;
                  }
                  unint64_t v188 = sub_1BFEF2D8C((uint64_t)v181, v180);
                  if ((v189 & 1) == 0) {
                    goto LABEL_107;
                  }
                  uint64_t v190 = *(void *)(*(void *)(v187 + 56) + 8 * v188);
                  swift_bridgeObjectRelease();
                  sub_1C0F2C5E0(v354, v346, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      id v201 = *(id *)v346;
                      id v202 = objc_msgSend(*(id *)v346, sel_identifier);
                      id v199 = (id)sub_1C151E62C();
                      uint64_t v198 = v203;

                      goto LABEL_131;
                    case 3u:
                      uint64_t v197 = v329;
                      sub_1C0F2C648(v346, v329, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                      id v199 = *(id *)v197;
                      uint64_t v198 = *(void *)(v197 + 8);
                      swift_bridgeObjectRetain();
                      uint64_t v200 = type metadata accessor for FormatWebEmbed.Resolved;
                      goto LABEL_128;
                    case 6u:
                      char v211 = v326;
                      sub_1C0F2C648(v346, (uint64_t)v326, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                      id v212 = objc_msgSend(*v211, sel_identifier);
                      uint64_t v213 = sub_1C151E62C();
                      uint64_t v215 = v214;

                      sub_1C0F2C5E0((uint64_t)v211 + *(int *)(v330 + 20), v325, type metadata accessor for PuzzleStatisticCategory);
                      switch(swift_getEnumCaseMultiPayload())
                      {
                        case 1u:
                          uint64_t v304 = v213;
                          uint64_t v220 = (uint64_t)v299;
                          sub_1C0F2C648(v325, (uint64_t)v299, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                          uint64_t v221 = v305;
                          sub_1C0F2C5E0(v220, v305, type metadata accessor for PuzzleStatisticValue);
                          if (swift_getEnumCaseMultiPayload() != 2)
                          {
                            sub_1C0F2C6B0(v221, type metadata accessor for PuzzleStatisticValue);
                            uint64_t v222 = (uint64_t)v289;
                            sub_1C0F2C5E0(v220, (uint64_t)v289, type metadata accessor for PuzzleStatisticValue);
                            if (swift_getEnumCaseMultiPayload() != 3) {
                              sub_1C0F2C6B0(v222, type metadata accessor for PuzzleStatisticValue);
                            }
                          }
                          sub_1C0F2C6B0(v220, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                          uint64_t v213 = v304;
                          break;
                        case 2u:
                          sub_1C0F2C6B0(v325, type metadata accessor for PuzzleStatisticCategory);
                          break;
                        case 3u:
                          sub_1C0F2C6B0(v325, type metadata accessor for PuzzleStatisticCategory);
                          break;
                        default:
                          uint64_t v216 = v315;
                          sub_1C0F2C648(v325, v315, type metadata accessor for PuzzleStatisticValue);
                          sub_1C0F2C5E0(v216, v308, type metadata accessor for PuzzleStatisticValue);
                          switch(swift_getEnumCaseMultiPayload())
                          {
                            case 4u:
                            case 5u:
                              sub_1C0F2C6B0(v308, type metadata accessor for PuzzleStatisticValue);
                              sub_1C0F2C6B0(v315, type metadata accessor for PuzzleStatisticValue);
                              break;
                            case 6u:
                              sub_1C0F2C6B0(v315, type metadata accessor for PuzzleStatisticValue);
                              break;
                            default:
                              sub_1C0F2C6B0(v315, type metadata accessor for PuzzleStatisticValue);
                              break;
                          }
                          break;
                      }
                      v352 = (void *)v213;
                      uint64_t v353 = v215;
                      swift_bridgeObjectRetain();
                      sub_1C151E80C();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      id v199 = v352;
                      uint64_t v198 = v353;
                      sub_1C0F2C6B0((uint64_t)v326, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                      break;
                    case 7u:
                      uint64_t v197 = v332;
                      sub_1C0F2C648(v346, v332, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
                      id v199 = *(id *)v197;
                      uint64_t v198 = *(void *)(v197 + 8);
                      swift_bridgeObjectRetain();
                      uint64_t v200 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_128:
                      sub_1C0F2C6B0(v197, (uint64_t (*)(void))v200);
                      break;
                    case 8u:
                      id v199 = *(id *)v346;
                      uint64_t v198 = *(void *)(v346 + 8);
                      break;
                    default:
                      id v202 = objc_msgSend(*(id *)v346, sel_identifier);
                      id v199 = (id)sub_1C151E62C();
                      uint64_t v198 = v204;
                      swift_unknownObjectRelease();
LABEL_131:

                      break;
                  }
                  uint64_t v205 = *v351;
                  if (!*(void *)(*v351 + 16) || (unint64_t v206 = sub_1BFEF2D8C((uint64_t)v199, v198), (v207 & 1) == 0))
                  {
                    a1 = v341;
LABEL_107:
                    uint64_t v172 = v343;
                    swift_bridgeObjectRelease();
                    sub_1C0F2C6B0(v354, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                    sub_1C0F2C6B0(v348, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                    goto LABEL_108;
                  }
                  uint64_t v208 = *(void *)(*(void *)(v205 + 56) + 8 * v206);
                  swift_bridgeObjectRelease();
                  sub_1C0F2C6B0(v354, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  sub_1C0F2C6B0(v348, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  uint64_t v172 = v343;
                  if (v208 >= v190) {
                    break;
                  }
                  a1 = v341;
                  uint64_t v209 = *v341;
                  if (!*v341) {
                    goto LABEL_253;
                  }
                  uint64_t v210 = v209 + v350 + v174;
                  sub_1C0F2C648(v209 + v343 + v174, v345, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  swift_arrayInitWithTakeFrontToBack();
                  sub_1C0F2C648(v345, v210, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  v174 -= v342;
                  ++v175;
                  uint64_t v173 = v344;
                  if (v344 == v175) {
                    goto LABEL_109;
                  }
                }
                a1 = v341;
LABEL_108:
                uint64_t v173 = v344;
LABEL_109:
                uint64_t v114 = v173 + 1;
                v350 += v342;
                v172 += v342;
              }
              while (v114 != v321);
              uint64_t v114 = v321;
              uint64_t v35 = v333;
              uint64_t v98 = v324;
            }
          }
        }
        if (v114 < v98) {
          goto LABEL_243;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v344 = v114;
        if (isUniquelyReferenced_nonNull_native) {
          uint64_t v96 = v322;
        }
        else {
          uint64_t v96 = sub_1C0634CC8(0, *((void *)v322 + 2) + 1, 1, v322);
        }
        unint64_t v225 = *((void *)v96 + 2);
        unint64_t v224 = *((void *)v96 + 3);
        unint64_t v97 = v225 + 1;
        if (v225 >= v224 >> 1) {
          uint64_t v96 = sub_1C0634CC8((char *)(v224 > 1), v225 + 1, 1, v96);
        }
        *((void *)v96 + 2) = v97;
        uint64_t v226 = v96 + 32;
        uint64_t v227 = &v96[16 * v225 + 32];
        uint64_t v228 = v344;
        *(void *)uint64_t v227 = v98;
        *((void *)v227 + 1) = v228;
        if (v225)
        {
          while (1)
          {
            unint64_t v229 = v97 - 1;
            if (v97 >= 4)
            {
              uint64_t v234 = &v226[16 * v97];
              uint64_t v235 = *((void *)v234 - 8);
              uint64_t v236 = *((void *)v234 - 7);
              BOOL v240 = __OFSUB__(v236, v235);
              uint64_t v237 = v236 - v235;
              if (v240) {
                goto LABEL_232;
              }
              uint64_t v239 = *((void *)v234 - 6);
              uint64_t v238 = *((void *)v234 - 5);
              BOOL v240 = __OFSUB__(v238, v239);
              uint64_t v232 = v238 - v239;
              char v233 = v240;
              if (v240) {
                goto LABEL_233;
              }
              unint64_t v241 = v97 - 2;
              uint64_t v242 = &v226[16 * v97 - 32];
              uint64_t v244 = *(void *)v242;
              uint64_t v243 = *((void *)v242 + 1);
              BOOL v240 = __OFSUB__(v243, v244);
              uint64_t v245 = v243 - v244;
              if (v240) {
                goto LABEL_235;
              }
              BOOL v240 = __OFADD__(v232, v245);
              uint64_t v246 = v232 + v245;
              if (v240) {
                goto LABEL_238;
              }
              if (v246 >= v237)
              {
                uint64_t v264 = &v226[16 * v229];
                uint64_t v266 = *(void *)v264;
                uint64_t v265 = *((void *)v264 + 1);
                BOOL v240 = __OFSUB__(v265, v266);
                uint64_t v267 = v265 - v266;
                if (v240) {
                  goto LABEL_242;
                }
                BOOL v257 = v232 < v267;
                goto LABEL_202;
              }
            }
            else
            {
              if (v97 != 3)
              {
                uint64_t v258 = *((void *)v96 + 4);
                uint64_t v259 = *((void *)v96 + 5);
                BOOL v240 = __OFSUB__(v259, v258);
                uint64_t v251 = v259 - v258;
                char v252 = v240;
                goto LABEL_196;
              }
              uint64_t v231 = *((void *)v96 + 4);
              uint64_t v230 = *((void *)v96 + 5);
              BOOL v240 = __OFSUB__(v230, v231);
              uint64_t v232 = v230 - v231;
              char v233 = v240;
            }
            if (v233) {
              goto LABEL_234;
            }
            unint64_t v241 = v97 - 2;
            uint64_t v247 = &v226[16 * v97 - 32];
            uint64_t v249 = *(void *)v247;
            uint64_t v248 = *((void *)v247 + 1);
            BOOL v250 = __OFSUB__(v248, v249);
            uint64_t v251 = v248 - v249;
            char v252 = v250;
            if (v250) {
              goto LABEL_237;
            }
            uint64_t v253 = &v226[16 * v229];
            uint64_t v255 = *(void *)v253;
            uint64_t v254 = *((void *)v253 + 1);
            BOOL v240 = __OFSUB__(v254, v255);
            uint64_t v256 = v254 - v255;
            if (v240) {
              goto LABEL_240;
            }
            if (__OFADD__(v251, v256)) {
              goto LABEL_241;
            }
            if (v251 + v256 >= v232)
            {
              BOOL v257 = v232 < v256;
LABEL_202:
              if (v257) {
                unint64_t v229 = v241;
              }
              goto LABEL_204;
            }
LABEL_196:
            if (v252) {
              goto LABEL_236;
            }
            uint64_t v260 = &v226[16 * v229];
            uint64_t v262 = *(void *)v260;
            uint64_t v261 = *((void *)v260 + 1);
            BOOL v240 = __OFSUB__(v261, v262);
            uint64_t v263 = v261 - v262;
            if (v240) {
              goto LABEL_239;
            }
            if (v263 < v251) {
              goto LABEL_15;
            }
LABEL_204:
            unint64_t v268 = v229 - 1;
            if (v229 - 1 >= v97)
            {
              __break(1u);
LABEL_229:
              __break(1u);
LABEL_230:
              __break(1u);
LABEL_231:
              __break(1u);
LABEL_232:
              __break(1u);
LABEL_233:
              __break(1u);
LABEL_234:
              __break(1u);
LABEL_235:
              __break(1u);
LABEL_236:
              __break(1u);
LABEL_237:
              __break(1u);
LABEL_238:
              __break(1u);
LABEL_239:
              __break(1u);
LABEL_240:
              __break(1u);
LABEL_241:
              __break(1u);
LABEL_242:
              __break(1u);
LABEL_243:
              __break(1u);
LABEL_244:
              __break(1u);
LABEL_245:
              __break(1u);
LABEL_246:
              __break(1u);
LABEL_247:
              __break(1u);
LABEL_248:
              __break(1u);
LABEL_249:
              __break(1u);
LABEL_250:
              __break(1u);
LABEL_251:
              __break(1u);
              goto LABEL_252;
            }
            uint64_t v269 = a1;
            uint64_t v270 = *a1;
            if (!*a1) {
              goto LABEL_254;
            }
            uint64_t v271 = v96;
            uint64_t v272 = &v226[16 * v268];
            uint64_t v273 = *(void *)v272;
            uint64_t v274 = v226;
            unint64_t v275 = v229;
            uint64_t v276 = &v226[16 * v229];
            uint64_t v277 = *((void *)v276 + 1);
            uint64_t v278 = v340;
            sub_1C0F2AFA8(v270 + *(void *)(v338 + 72) * *(void *)v272, v270 + *(void *)(v338 + 72) * *(void *)v276, v270 + *(void *)(v338 + 72) * v277, v336, v351);
            uint64_t v340 = v278;
            if (v278) {
              goto LABEL_227;
            }
            if (v277 < v273) {
              goto LABEL_229;
            }
            if (v275 > *((void *)v271 + 2)) {
              goto LABEL_230;
            }
            *(void *)uint64_t v272 = v273;
            *(void *)&v274[16 * v268 + 8] = v277;
            unint64_t v279 = *((void *)v271 + 2);
            if (v275 >= v279) {
              goto LABEL_231;
            }
            unint64_t v97 = v279 - 1;
            memmove(v276, v276 + 16, 16 * (v279 - 1 - v275));
            uint64_t v226 = v274;
            uint64_t v96 = v271;
            *((void *)v271 + 2) = v279 - 1;
            uint64_t v35 = v333;
            a1 = v269;
            if (v279 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v97 = 1;
LABEL_15:
        uint64_t v89 = a1[1];
        uint64_t v95 = v344;
        if (v344 >= v89) {
          goto LABEL_216;
        }
      }
    }
    unint64_t v336 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v338 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v338 + 80));
    uint64_t v291 = MEMORY[0x1E4FBC860];
    if (v89 == 1)
    {
      v288[0] = (uint64_t)v13;
      goto LABEL_13;
    }
    unint64_t v97 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v96 = (char *)MEMORY[0x1E4FBC860];
LABEL_216:
    if (v97 >= 2)
    {
      uint64_t v280 = *a1;
      uint64_t v281 = v340;
      do
      {
        unint64_t v282 = v97 - 2;
        if (v97 < 2) {
          goto LABEL_244;
        }
        if (!v280) {
          goto LABEL_256;
        }
        uint64_t v283 = v96;
        uint64_t v284 = *(void *)&v96[16 * v282 + 32];
        uint64_t v285 = *(void *)&v96[16 * v97 + 24];
        sub_1C0F2AFA8(v280 + *(void *)(v338 + 72) * v284, v280 + *(void *)(v338 + 72) * *(void *)&v96[16 * v97 + 16], v280 + *(void *)(v338 + 72) * v285, v336, v351);
        if (v281) {
          break;
        }
        if (v285 < v284) {
          goto LABEL_245;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v283 = sub_1C063604C((uint64_t)v283);
        }
        if (v282 >= *((void *)v283 + 2)) {
          goto LABEL_246;
        }
        uint64_t v286 = &v283[16 * v282 + 32];
        *(void *)uint64_t v286 = v284;
        *((void *)v286 + 1) = v285;
        unint64_t v287 = *((void *)v283 + 2);
        if (v97 > v287) {
          goto LABEL_247;
        }
        memmove(&v283[16 * v97 + 16], &v283[16 * v97 + 32], 16 * (v287 - v97));
        uint64_t v96 = v283;
        *((void *)v283 + 2) = v287 - 1;
        unint64_t v97 = v287 - 1;
      }
      while (v287 > 2);
    }
LABEL_227:
    swift_bridgeObjectRelease();
    *(void *)(v291 + 16) = 0;
    swift_bridgeObjectRelease();
  }
}

void sub_1C0F29A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v138 = a5;
  uint64_t v135 = a4;
  uint64_t v117 = a1;
  uint64_t v7 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v124 = (uint64_t)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v105 - v13;
  uint64_t v15 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v108 = (uint64_t)&v105 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v109 = (uint64_t)&v105 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v113 = (uint64_t)&v105 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v105 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v115 = (char *)&v105 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v110 = (uint64_t)&v105 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v114 = (uint64_t)&v105 - v32;
  uint64_t v123 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v123);
  uint64_t v118 = (uint64_t)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v126 = (uint64_t)&v105 - v35;
  uint64_t v122 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v122);
  uint64_t v119 = (id *)((char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v37);
  id v125 = (id *)((char *)&v105 - v38);
  uint64_t v39 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v121 = (uint64_t)&v105 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v137);
  uint64_t v136 = (uint64_t)&v105 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v139 = (uint64_t)&v105 - v43;
  uint64_t v127 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v127);
  uint64_t v132 = (uint64_t)&v105 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v45);
  uint64_t v145 = (uint64_t)&v105 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v140 = (uint64_t)&v105 - v49;
  uint64_t v131 = a3;
  uint64_t v116 = a2;
  if (a3 != a2)
  {
    uint64_t v50 = (uint64_t)v14;
    uint64_t v130 = *(void *)(v48 + 72);
    uint64_t v141 = v130 * v131;
    uint64_t v142 = v130 * (v131 - 1);
    unint64_t v111 = "uzzlesSolved";
    uint64_t v107 = "fastestTimeByDifficultyLevel";
    unint64_t v105 = "averageTimeByDifficultyLevel";
    char v112 = "fficultyLevel";
    char v106 = v17;
    uint64_t v128 = v15;
    unint64_t v129 = v26;
    while (1)
    {
      uint64_t v51 = 0;
      uint64_t v52 = v117;
      while (2)
      {
        uint64_t v53 = *v135;
        uint64_t v54 = v140;
        uint64_t v134 = v141 + v51;
        sub_1C0F2C5E0(v141 + v51 + v53, v140, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        uint64_t v133 = v142 + v51;
        sub_1C0F2C5E0(v142 + v51 + v53, v145, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        sub_1C0F2C5E0(v54, v139, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            id v55 = *(id *)v139;
            id v56 = objc_msgSend(*(id *)v139, sel_identifier);
            id v57 = (id)sub_1C151E62C();
            uint64_t v59 = v58;

            goto LABEL_32;
          case 3u:
            uint64_t v60 = v121;
            sub_1C0F2C648(v139, v121, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
            id v57 = *(id *)v60;
            uint64_t v59 = *(void *)(v60 + 8);
            swift_bridgeObjectRetain();
            uint64_t v61 = type metadata accessor for FormatWebEmbed.Resolved;
            goto LABEL_16;
          case 6u:
            uint64_t v64 = v125;
            sub_1C0F2C648(v139, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            id v65 = objc_msgSend(*v64, sel_identifier, v105);
            uint64_t v120 = sub_1C151E62C();
            uint64_t v67 = v66;

            sub_1C0F2C5E0((uint64_t)v64 + *(int *)(v122 + 20), v126, type metadata accessor for PuzzleStatisticCategory);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v69 = (uint64_t)v115;
            switch(EnumCaseMultiPayload)
            {
              case 1:
                sub_1C0F2C648(v126, v50, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                sub_1C0F2C5E0(v50, v69, type metadata accessor for PuzzleStatisticValue);
                if (swift_getEnumCaseMultiPayload() == 2) {
                  goto LABEL_25;
                }
                sub_1C0F2C6B0(v69, type metadata accessor for PuzzleStatisticValue);
                sub_1C0F2C5E0(v50, (uint64_t)v26, type metadata accessor for PuzzleStatisticValue);
                if (swift_getEnumCaseMultiPayload() == 3)
                {
                  uint64_t v73 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
                  uint64_t v74 = v50;
                }
                else
                {
                  sub_1C0F2C6B0((uint64_t)v26, type metadata accessor for PuzzleStatisticValue);
LABEL_25:
                  uint64_t v73 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
                  uint64_t v74 = v50;
                }
LABEL_29:
                sub_1C0F2C6B0(v74, v73);
LABEL_30:
                uint64_t v143 = (void *)v120;
                uint64_t v144 = v67;
                swift_bridgeObjectRetain();
                sub_1C151E80C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                id v57 = v143;
                uint64_t v59 = v144;
                uint64_t v71 = type metadata accessor for PuzzleStatistic;
                uint64_t v72 = (uint64_t)v125;
LABEL_31:
                sub_1C0F2C6B0(v72, (uint64_t (*)(void))v71);
LABEL_32:
                uint64_t v75 = *v138;
                if (*(void *)(*v138 + 16))
                {
                  unint64_t v76 = sub_1BFEF2D8C((uint64_t)v57, v59);
                  if (v77)
                  {
                    uint64_t v78 = *(void *)(*(void *)(v75 + 56) + 8 * v76);
                    swift_bridgeObjectRelease();
                    sub_1C0F2C5E0(v145, v136, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 1u:
                        id v79 = *(id *)v136;
                        id v80 = objc_msgSend(*(id *)v136, sel_identifier);
                        id v81 = (id)sub_1C151E62C();
                        uint64_t v83 = v82;

                        break;
                      case 3u:
                        uint64_t v84 = v121;
                        sub_1C0F2C648(v136, v121, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                        id v81 = *(id *)v84;
                        uint64_t v83 = *(void *)(v84 + 8);
                        swift_bridgeObjectRetain();
                        uint64_t v85 = type metadata accessor for FormatWebEmbed.Resolved;
                        goto LABEL_42;
                      case 6u:
                        uint64_t v88 = v119;
                        sub_1C0F2C648(v136, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                        id v89 = objc_msgSend(*v88, sel_identifier);
                        uint64_t v120 = sub_1C151E62C();
                        uint64_t v91 = v90;

                        sub_1C0F2C5E0((uint64_t)v88 + *(int *)(v122 + 20), v118, type metadata accessor for PuzzleStatisticCategory);
                        switch(swift_getEnumCaseMultiPayload())
                        {
                          case 1u:
                            sub_1C0F2C648(v118, (uint64_t)v11, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                            uint64_t v97 = v108;
                            sub_1C0F2C5E0((uint64_t)v11, v108, type metadata accessor for PuzzleStatisticValue);
                            if (swift_getEnumCaseMultiPayload() != 2)
                            {
                              sub_1C0F2C6B0(v97, type metadata accessor for PuzzleStatisticValue);
                              uint64_t v98 = (uint64_t)v106;
                              sub_1C0F2C5E0((uint64_t)v11, (uint64_t)v106, type metadata accessor for PuzzleStatisticValue);
                              if (swift_getEnumCaseMultiPayload() != 3) {
                                sub_1C0F2C6B0(v98, type metadata accessor for PuzzleStatisticValue);
                              }
                            }
                            sub_1C0F2C6B0((uint64_t)v11, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                            goto LABEL_50;
                          case 2u:
                          case 3u:
                            sub_1C0F2C6B0(v118, type metadata accessor for PuzzleStatisticCategory);
LABEL_50:
                            uint64_t v94 = v120;
                            break;
                          default:
                            uint64_t v92 = v113;
                            sub_1C0F2C648(v118, v113, type metadata accessor for PuzzleStatisticValue);
                            sub_1C0F2C5E0(v92, v109, type metadata accessor for PuzzleStatisticValue);
                            int v93 = swift_getEnumCaseMultiPayload();
                            uint64_t v94 = v120;
                            switch(v93)
                            {
                              case 4:
                              case 5:
                                sub_1C0F2C6B0(v109, type metadata accessor for PuzzleStatisticValue);
                                sub_1C0F2C6B0(v113, type metadata accessor for PuzzleStatisticValue);
                                break;
                              default:
                                sub_1C0F2C6B0(v113, type metadata accessor for PuzzleStatisticValue);
                                break;
                            }
                            break;
                        }
                        uint64_t v143 = (void *)v94;
                        uint64_t v144 = v91;
                        swift_bridgeObjectRetain();
                        sub_1C151E80C();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        id v81 = v143;
                        uint64_t v83 = v144;
                        uint64_t v95 = type metadata accessor for PuzzleStatistic;
                        uint64_t v96 = (uint64_t)v119;
                        goto LABEL_52;
                      case 7u:
                        uint64_t v84 = v124;
                        sub_1C0F2C648(v136, v124, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
                        id v81 = *(id *)v84;
                        uint64_t v83 = *(void *)(v84 + 8);
                        swift_bridgeObjectRetain();
                        uint64_t v85 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_42:
                        uint64_t v95 = v85;
                        uint64_t v96 = v84;
LABEL_52:
                        sub_1C0F2C6B0(v96, (uint64_t (*)(void))v95);
                        break;
                      case 8u:
                        id v81 = *(id *)v136;
                        uint64_t v83 = *(void *)(v136 + 8);
                        break;
                      default:
                        id v86 = objc_msgSend(*(id *)v136, sel_identifier);
                        id v81 = (id)sub_1C151E62C();
                        uint64_t v83 = v87;
                        swift_unknownObjectRelease();

                        break;
                    }
                    uint64_t v99 = *v138;
                    if (*(void *)(*v138 + 16))
                    {
                      unint64_t v100 = sub_1BFEF2D8C((uint64_t)v81, v83);
                      if (v101)
                      {
                        uint64_t v102 = *(void *)(*(void *)(v99 + 56) + 8 * v100);
                        swift_bridgeObjectRelease();
                        sub_1C0F2C6B0(v145, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                        sub_1C0F2C6B0(v140, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                        uint64_t v26 = v129;
                        if (v102 >= v78) {
                          goto LABEL_5;
                        }
                        uint64_t v103 = *v135;
                        if (!*v135)
                        {
                          __break(1u);
                          JUMPOUT(0x1C0F2AF08);
                        }
                        uint64_t v104 = v103 + v142 + v51;
                        sub_1C0F2C648(v103 + v141 + v51, v132, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                        swift_arrayInitWithTakeFrontToBack();
                        sub_1C0F2C648(v132, v104, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                        v51 -= v130;
                        if (v131 == ++v52) {
                          goto LABEL_5;
                        }
                        continue;
                      }
                    }
                  }
                }
                uint64_t v26 = v129;
                swift_bridgeObjectRelease();
                sub_1C0F2C6B0(v145, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                sub_1C0F2C6B0(v140, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
LABEL_5:
                v142 += v130;
                v141 += v130;
                if (++v131 == v116) {
                  return;
                }
                break;
              case 2:
                sub_1C0F2C6B0(v126, type metadata accessor for PuzzleStatisticCategory);
                goto LABEL_30;
              case 3:
                sub_1C0F2C6B0(v126, type metadata accessor for PuzzleStatisticCategory);
                goto LABEL_30;
              default:
                uint64_t v70 = v114;
                sub_1C0F2C648(v126, v114, type metadata accessor for PuzzleStatisticValue);
                sub_1C0F2C5E0(v70, v110, type metadata accessor for PuzzleStatisticValue);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 2u:
                    uint64_t v73 = type metadata accessor for PuzzleStatisticValue;
                    uint64_t v74 = v114;
                    goto LABEL_29;
                  case 3u:
                    uint64_t v73 = type metadata accessor for PuzzleStatisticValue;
                    uint64_t v74 = v114;
                    goto LABEL_29;
                  case 4u:
                  case 5u:
                    sub_1C0F2C6B0(v110, type metadata accessor for PuzzleStatisticValue);
                    sub_1C0F2C6B0(v114, type metadata accessor for PuzzleStatisticValue);
                    break;
                  case 6u:
                    sub_1C0F2C6B0(v114, type metadata accessor for PuzzleStatisticValue);
                    break;
                  default:
                    sub_1C0F2C6B0(v114, type metadata accessor for PuzzleStatisticValue);
                    break;
                }
                goto LABEL_30;
            }
            break;
          case 7u:
            uint64_t v60 = v124;
            sub_1C0F2C648(v139, v124, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
            id v57 = *(id *)v60;
            uint64_t v59 = *(void *)(v60 + 8);
            swift_bridgeObjectRetain();
            uint64_t v61 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_16:
            uint64_t v71 = v61;
            uint64_t v72 = v60;
            goto LABEL_31;
          case 8u:
            id v57 = *(id *)v139;
            uint64_t v59 = *(void *)(v139 + 8);
            goto LABEL_32;
          default:
            id v62 = objc_msgSend(*(id *)v139, sel_identifier);
            id v57 = (id)sub_1C151E62C();
            uint64_t v59 = v63;
            swift_unknownObjectRelease();

            goto LABEL_32;
        }
        break;
      }
    }
  }
}

uint64_t sub_1C0F2AFA8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v110 = a5;
  uint64_t v9 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v103 = (uint64_t)v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v102);
  unint64_t v100 = (char *)v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v99 = (id *)((char *)v97 - v13);
  uint64_t v14 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v101 = (uint64_t)v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v109);
  uint64_t v107 = (char *)v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v97 - v18;
  uint64_t v106 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v106);
  unint64_t v105 = (char *)v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  unint64_t v108 = (unint64_t)v97 - v22;
  MEMORY[0x1F4188790](v23);
  unint64_t v104 = (unint64_t)v97 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)v97 - v26;
  uint64_t v29 = *(void *)(v28 + 72);
  if (!v29)
  {
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  if (a2 - a1 == 0x8000000000000000 && v29 == -1) {
    goto LABEL_95;
  }
  int64_t v30 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v29 == -1) {
    goto LABEL_96;
  }
  uint64_t v31 = (uint64_t)(a2 - a1) / v29;
  unint64_t v116 = a1;
  unint64_t v115 = a4;
  uint64_t v32 = v30 / v29;
  if (v31 >= v30 / v29)
  {
    if ((v32 & 0x8000000000000000) == 0)
    {
      uint64_t v34 = v32 * v29;
      uint64_t v35 = (uint64_t)v105;
      if (a4 < a2 || a2 + v34 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v65 = a4 + v34;
      unint64_t v114 = a4 + v34;
      unint64_t v116 = a2;
      if (v34 >= 1 && a1 < a2)
      {
        uint64_t v68 = -v29;
        v97[3] = "fastestTimeByDifficultyLevel";
        uint64_t v98 = "uzzlesSolved";
        void v97[2] = "averageTimeByDifficultyLevel";
        v97[1] = "fficultyLevel";
        unint64_t v104 = a1;
        do
        {
          uint64_t v69 = v108;
          sub_1C0F2C5E0(v65 + v68, v108, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          unint64_t v70 = a2 + v68;
          sub_1C0F2C5E0(a2 + v68, v35, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          sub_1C0F2C5E0(v69, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              id v75 = *(id *)v107;
              id v76 = objc_msgSend(*(id *)v107, sel_identifier);
              id v73 = (id)sub_1C151E62C();
              uint64_t v72 = v77;

              goto LABEL_68;
            case 3u:
              uint64_t v71 = v101;
              sub_1C0F2C648((uint64_t)v107, v101, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
              id v73 = *(id *)v71;
              uint64_t v72 = *(void *)(v71 + 8);
              swift_bridgeObjectRetain();
              uint64_t v74 = type metadata accessor for FormatWebEmbed.Resolved;
              goto LABEL_65;
            case 6u:
              int v93 = (id *)v100;
              sub_1C0F2C648((uint64_t)v107, (uint64_t)v100, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              id v94 = objc_msgSend(*v93, sel_identifier);
              uint64_t v99 = (id *)sub_1C151E62C();
              uint64_t v96 = v95;

              PuzzleStatisticCategory.statisticType.getter(&v113);
              uint64_t v111 = (uint64_t)v99;
              uint64_t v112 = v96;
              swift_bridgeObjectRetain();
              sub_1C151E80C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v73 = (id)v111;
              uint64_t v72 = v112;
              sub_1C0F2C6B0((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              break;
            case 7u:
              uint64_t v71 = v103;
              sub_1C0F2C648((uint64_t)v107, v103, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
              id v73 = *(id *)v71;
              uint64_t v72 = *(void *)(v71 + 8);
              swift_bridgeObjectRetain();
              uint64_t v74 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_65:
              sub_1C0F2C6B0(v71, (uint64_t (*)(void))v74);
              break;
            case 8u:
              id v73 = *(id *)v107;
              uint64_t v72 = *((void *)v107 + 1);
              break;
            default:
              id v76 = objc_msgSend(*(id *)v107, sel_identifier);
              id v73 = (id)sub_1C151E62C();
              uint64_t v72 = v78;
              swift_unknownObjectRelease();
LABEL_68:

              break;
          }
          uint64_t v79 = *v110;
          if (*(void *)(*v110 + 16) && (unint64_t v80 = sub_1BFEF2D8C((uint64_t)v73, v72), (v81 & 1) != 0))
          {
            uint64_t v82 = *(void *)(*(void *)(v79 + 56) + 8 * v80);
            swift_bridgeObjectRelease();
            uint64_t v35 = (uint64_t)v105;
            uint64_t v83 = FormatContentSlotItemObject.Resolved.identifier.getter();
            uint64_t v85 = *v110;
            if (*(void *)(*v110 + 16) && (unint64_t v86 = sub_1BFEF2D8C(v83, v84), (v87 & 1) != 0))
            {
              uint64_t v88 = *(void *)(*(void *)(v85 + 56) + 8 * v86);
              swift_bridgeObjectRelease();
              BOOL v89 = v88 < v82;
            }
            else
            {
              swift_bridgeObjectRelease();
              BOOL v89 = 0;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            BOOL v89 = 0;
            uint64_t v35 = (uint64_t)v105;
          }
          unint64_t v90 = a3 + v68;
          sub_1C0F2C6B0(v35, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          sub_1C0F2C6B0(v108, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          if (v89)
          {
            if (a3 < a2 || v90 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v91 = v104;
            }
            else
            {
              unint64_t v91 = v104;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v116 += v68;
          }
          else
          {
            unint64_t v92 = v114;
            v114 += v68;
            if (a3 < v92 || v90 >= v92)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v70 = a2;
              unint64_t v91 = v104;
            }
            else
            {
              unint64_t v91 = v104;
              if (a3 != v92) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v70 = a2;
            }
          }
          unint64_t v65 = v114;
          if (v114 <= a4) {
            break;
          }
          a2 = v70;
          a3 += v68;
        }
        while (v70 > v91);
      }
      goto LABEL_61;
    }
LABEL_97:
    sub_1C152052C();
    __break(1u);
    JUMPOUT(0x1C0F2BEF4);
  }
  if (v31 < 0) {
    goto LABEL_97;
  }
  uint64_t v33 = v31 * v29;
  if (a4 < a1 || a1 + v33 <= a4)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a4 != a1)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  unint64_t v108 = a4 + v33;
  unint64_t v114 = a4 + v33;
  BOOL v36 = v33 < 1 || a2 >= a3;
  uint64_t v37 = v104;
  if (!v36)
  {
    uint64_t v107 = "uzzlesSolved";
    unint64_t v105 = "fastestTimeByDifficultyLevel";
    unint64_t v100 = "averageTimeByDifficultyLevel";
    uint64_t v98 = "fficultyLevel";
    while (1)
    {
      sub_1C0F2C5E0(a2, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C0F2C5E0(a4, v37, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C0F2C5E0((uint64_t)v27, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          id v42 = *(id *)v19;
          id v43 = objc_msgSend(*(id *)v19, sel_identifier);
          uint64_t v40 = sub_1C151E62C();
          uint64_t v39 = v44;

          goto LABEL_29;
        case 3u:
          uint64_t v38 = v101;
          sub_1C0F2C648((uint64_t)v19, v101, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
          uint64_t v40 = *(void *)v38;
          uint64_t v39 = *(void *)(v38 + 8);
          swift_bridgeObjectRetain();
          uint64_t v41 = type metadata accessor for FormatWebEmbed.Resolved;
          goto LABEL_26;
        case 6u:
          uint64_t v60 = v99;
          sub_1C0F2C648((uint64_t)v19, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          id v61 = objc_msgSend(*v60, sel_identifier);
          uint64_t v62 = sub_1C151E62C();
          uint64_t v64 = v63;

          PuzzleStatisticCategory.statisticType.getter(&v113);
          uint64_t v111 = v62;
          uint64_t v112 = v64;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v40 = v111;
          uint64_t v39 = v112;
          sub_1C0F2C6B0((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          goto LABEL_30;
        case 7u:
          uint64_t v38 = v103;
          sub_1C0F2C648((uint64_t)v19, v103, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
          uint64_t v40 = *(void *)v38;
          uint64_t v39 = *(void *)(v38 + 8);
          swift_bridgeObjectRetain();
          uint64_t v41 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_26:
          sub_1C0F2C6B0(v38, (uint64_t (*)(void))v41);
          break;
        case 8u:
          uint64_t v40 = *(void *)v19;
          uint64_t v39 = *((void *)v19 + 1);
          break;
        default:
          id v43 = objc_msgSend(*(id *)v19, sel_identifier);
          uint64_t v40 = sub_1C151E62C();
          uint64_t v39 = v45;
          swift_unknownObjectRelease();
LABEL_29:

LABEL_30:
          uint64_t v37 = v104;
          break;
      }
      uint64_t v46 = *v110;
      if (!*(void *)(*v110 + 16)) {
        break;
      }
      unint64_t v47 = sub_1BFEF2D8C(v40, v39);
      if ((v48 & 1) == 0) {
        break;
      }
      uint64_t v49 = *(void *)(*(void *)(v46 + 56) + 8 * v47);
      swift_bridgeObjectRelease();
      uint64_t v50 = FormatContentSlotItemObject.Resolved.identifier.getter();
      uint64_t v52 = *v110;
      if (!*(void *)(*v110 + 16)) {
        break;
      }
      unint64_t v53 = sub_1BFEF2D8C(v50, v51);
      if ((v54 & 1) == 0) {
        break;
      }
      uint64_t v55 = *(void *)(*(void *)(v52 + 56) + 8 * v53);
      swift_bridgeObjectRelease();
      sub_1C0F2C6B0(v104, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C0F2C6B0((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      BOOL v56 = v55 < v49;
      uint64_t v37 = v104;
      if (!v56) {
        goto LABEL_42;
      }
      unint64_t v57 = v116;
      unint64_t v58 = a2 + v29;
      if (v116 < a2 || v116 >= v58)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v116 == a2)
      {
        unint64_t v57 = a2;
      }
      else
      {
        swift_arrayInitWithTakeBackToFront();
      }
LABEL_48:
      unint64_t v116 = v57 + v29;
      a4 = v115;
      if (v115 < v108)
      {
        a2 = v58;
        if (v58 < a3) {
          continue;
        }
      }
      goto LABEL_61;
    }
    swift_bridgeObjectRelease();
    sub_1C0F2C6B0(v37, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    sub_1C0F2C6B0((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
LABEL_42:
    unint64_t v57 = v116;
    unint64_t v59 = v115 + v29;
    if (v116 < v115 || v116 >= v59)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v116 != v115)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v115 = v59;
    unint64_t v58 = a2;
    goto LABEL_48;
  }
LABEL_61:
  sub_1C0635614(&v116, &v115, (uint64_t *)&v114);
  return 1;
}

unint64_t sub_1C0F2BF84(uint64_t a1)
{
  unint64_t result = sub_1C08B3C28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F2BFAC(void *a1)
{
  a1[1] = sub_1BFD34D88();
  a1[2] = sub_1BFD1B910();
  unint64_t result = sub_1C0F2BFE4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0F2BFE4()
{
  unint64_t result = qword_1EA1A8F88;
  if (!qword_1EA1A8F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F88);
  }
  return result;
}

unint64_t *assignWithCopy for FormatSlotTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFC7E2FC(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1C00544B4(v4);
  return a1;
}

unint64_t *assignWithTake for FormatSlotTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1C00544B4(v3);
  return a1;
}

uint64_t sub_1C0F2C0A8(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 <= 8) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 9;
  }
}

unint64_t *sub_1C0F2C0C4(unint64_t *result, uint64_t a2)
{
  if (a2 < 9)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 9);
    unint64_t v3 = 0x9000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotTransform()
{
  return &type metadata for FormatSlotTransform;
}

uint64_t sub_1C0F2C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v41 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v41);
  uint64_t v37 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    uint64_t v12 = 0;
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v44 = *(void *)(v8 + 72);
    uint64_t v35 = (v13 + 32) & ~v13;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v38 = (char *)&v35 - v9;
    uint64_t v39 = a1 + v35;
    do
    {
      sub_1C0F2C5E0(v39 + v44 * v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v47 = *(void *)&v10[*(int *)(v41 + 24)];
      if (qword_1EB87F148 != -1) {
        swift_once();
      }
      v49[0] = v42;
      v49[1] = v43;
      uint64_t v14 = sub_1BFEF53C0(v49);
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v45 = v14;
        uint64_t v46 = v12;
        uint64_t v16 = (uint64_t *)(v14 + 64);
        while (1)
        {
          char v48 = v4;
          uint64_t v17 = *(v16 - 1);
          uint64_t v18 = *v16;
          char v19 = *(unsigned char *)(v17 + 32);
          unsigned int v20 = v19 & 0x3F;
          unint64_t v21 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v22 = 8 * v21;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v20 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            uint64_t v24 = (char *)&v35 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0);
            bzero(v24, v22);
            uint64_t v25 = v48;
            uint64_t v26 = sub_1BFEFB09C((uint64_t)v24, v21, v17, v47);
            unint64_t v4 = v25;
            swift_bridgeObjectRelease();
            if (v25)
            {
              swift_willThrow();

              __break(1u);
LABEL_28:
              swift_bridgeObjectRelease();

              uint64_t result = MEMORY[0x1C18C9B00](v24, -1, -1);
              __break(1u);
              return result;
            }
          }
          else
          {
            uint64_t v24 = (char *)swift_slowAlloc();
            bzero(v24, v22);
            uint64_t v27 = v48;
            uint64_t v28 = sub_1BFEFB09C((uint64_t)v24, v21, v17, v47);
            unint64_t v4 = v27;
            if (v27) {
              goto LABEL_28;
            }
            uint64_t v26 = v28;
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v24, -1, -1);
          }
          char v29 = sub_1BFEFAE14(v26, v17);
          swift_release();
          if (v29)
          {
            char v30 = sub_1BFEFB810(v47, v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v30)
            {
              swift_bridgeObjectRelease();
              uint64_t v10 = v38;
              sub_1C0F2C648((uint64_t)v38, v37, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              uint64_t v31 = v36;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1C05F694C(0, *(void *)(v31 + 16) + 1, 1);
              }
              uint64_t v32 = v50;
              unint64_t v34 = *(void *)(v50 + 16);
              unint64_t v33 = *(void *)(v50 + 24);
              if (v34 >= v33 >> 1)
              {
                sub_1C05F694C(v33 > 1, v34 + 1, 1);
                uint64_t v32 = v50;
              }
              *(void *)(v32 + 16) = v34 + 1;
              uint64_t v36 = v32;
              sub_1C0F2C648(v37, v32 + v35 + v34 * v44, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              uint64_t v12 = v46;
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v16 += 5;
          if (!--v15)
          {
            swift_bridgeObjectRelease();
            uint64_t v10 = v38;
            uint64_t v12 = v46;
            goto LABEL_4;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_4:
      sub_1C0F2C6B0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
LABEL_5:
      ++v12;
    }
    while (v12 != v40);
    return v50;
  }
  return result;
}

uint64_t sub_1C0F2C5BC(uint64_t a1)
{
  return sub_1C1009B30(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32)) & 1;
}

uint64_t sub_1C0F2C5E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F2C648(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0F2C6B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatTextAlignment.textAlignment.getter()
{
  return qword_1C15B7B20[*v0];
}

uint64_t FormatTextAlignment.rawValue.getter()
{
  uint64_t result = 1952867692;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7468676972;
      break;
    case 2:
      uint64_t result = 0x7265746E6563;
      break;
    case 3:
      uint64_t result = 0x656966697473756ALL;
      break;
    case 4:
      uint64_t result = 0x6C61727574616ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0F2C7C4(unsigned __int8 *a1, char *a2)
{
  return sub_1C14891FC(*a1, *a2);
}

uint64_t sub_1C0F2C7D0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0F2C8BC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0F2C990()
{
  return sub_1C1520E0C();
}

void sub_1C0F2CA78(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1952867692;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7468676972;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265746E6563;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x656966697473756ALL;
      a1[1] = 0xE900000000000064;
      break;
    case 4:
      *a1 = 0x6C61727574616ELL;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t FormatTextAlignment.description.getter()
{
  uint64_t result = 1952867692;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7468676972;
      break;
    case 2:
      uint64_t result = 0x7265746E6563;
      break;
    case 3:
      uint64_t result = 0x656966697473756ALL;
      break;
    case 4:
      uint64_t result = 0x6C61727574616ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0F2CBCC()
{
  unint64_t result = qword_1EA1A8F90;
  if (!qword_1EA1A8F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F90);
  }
  return result;
}

unint64_t sub_1C0F2CC20(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0F2CC50();
  unint64_t result = sub_1BFC73CF8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0F2CC50()
{
  unint64_t result = qword_1EA1A8F98;
  if (!qword_1EA1A8F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8F98);
  }
  return result;
}

unint64_t sub_1C0F2CCA4(uint64_t a1)
{
  unint64_t result = sub_1C0F2CCCC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0F2CCCC()
{
  unint64_t result = qword_1EA1A8FA0;
  if (!qword_1EA1A8FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8FA0);
  }
  return result;
}

unint64_t sub_1C0F2CD20(void *a1)
{
  a1[1] = sub_1BFDAD970();
  a1[2] = sub_1BFE570B4();
  unint64_t result = sub_1C0F2CBCC();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0F2CD58()
{
  uint64_t result = 1952867692;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7468676972;
      break;
    case 2:
      uint64_t result = 0x7265746E6563;
      break;
    case 3:
      uint64_t result = 0x656966697473756ALL;
      break;
    case 4:
      uint64_t result = 0x6C61727574616ELL;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextAlignment()
{
  return &type metadata for FormatTextAlignment;
}

uint64_t sub_1C0F2CE30(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v16;
    unint64_t v4 = (void **)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      swift_unknownObjectRetain();
      id v7 = v5;
      id v8 = objc_msgSend(v6, sel_articleID);
      uint64_t v9 = sub_1C151E62C();
      uint64_t v11 = v10;

      swift_unknownObjectRelease();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_1BFF661B8(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FeedTopicCluster.replacing(headlines:titleModification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v6 = *(unsigned __int8 *)(a2 + 16);
  id v7 = *(id *)v3;
  uint64_t v8 = *(void *)(v3 + 16);
  if (v6 == 255)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    uint64_t v10 = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1C151E5EC();
    if (v6) {
      id v12 = objc_msgSend(v7, sel_setTitleDisplaySuffixOverride_, v11);
    }
    else {
      id v12 = objc_msgSend(v7, sel_setTitleDisplayPrefixOverride_, v11);
    }
    id v7 = v12;

    sub_1C0F2D1B8(v9, v10, v6);
  }
  *a3 = v7;
  a3[1] = a1;
  a3[2] = v8;
  return swift_bridgeObjectRetain();
}

uint64_t FeedTopicCluster.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedTopicCluster.scoredHeadlines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedTopicCluster.minClusterSize.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FeedTopicCluster.headlines.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 8) + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C152028C();
    uint64_t v3 = 32;
    do
    {
      swift_unknownObjectRetain();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      v3 += 16;
      --v1;
    }
    while (v1);
    uint64_t v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t FeedTopicCluster.articleIDs.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C0F2CE30(v0);
  swift_bridgeObjectRelease();
  return v1;
}

BOOL FeedTopicCluster.titleHasPrefix.getter()
{
  id v1 = objc_msgSend(*v0, sel_titleDisplayPrefix);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t FeedTopicCluster.init(tag:scoredHeadlines:minClusterSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_1C0F2D1B8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1C02F6038();
  }
  return result;
}

uint64_t destroy for FeedTopicCluster()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed16FeedTopicClusterVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedTopicCluster(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for FeedTopicCluster(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FeedTopicCluster()
{
  return &type metadata for FeedTopicCluster;
}

ValueMetadata *type metadata accessor for FeedTopicCluster.TopicTitleModification()
{
  return &type metadata for FeedTopicCluster.TopicTitleModification;
}

uint64_t SharingActivityProviderFactoryType.createActivityProvider(for:tracker:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void, uint64_t, void, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, 0, 0, 0, 0, a2, 0, a3, a4, a5);
}

uint64_t SharingActivityProviderFactoryType.createActivityProvider(for:feedItemIdentifier:tracker:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(a7 + 8))(a1, 0, 0, a2, a3, a4, 0, a5, a6, a7);
}

uint64_t SharingActivityProviderFactoryType.createActivityProvider(for:feedItemIdentifier:tracker:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a7 + 8))(a1, 0, 0, a2, a3, a4, a5, 0, a6, a7);
}

uint64_t SharingActivityProviderFactory.__allocating_init(sharingActivityItemFactory:activityTypeProvider:issueActivityTypeProvider:puzzleActivityTypeProvider:puzzleTypeActivityTypeProvider:paidAccessChecker:subscriptionController:)(long long *a1, long long *a2, long long *a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  sub_1BFC773DC(a1, v14 + 16);
  sub_1BFC773DC(a2, v14 + 56);
  sub_1BFC773DC(a3, v14 + 96);
  sub_1BFC773DC(a4, v14 + 136);
  sub_1C0F2D550(a5, v14 + 176);
  *(void *)(v14 + 216) = a6;
  *(void *)(v14 + 224) = a7;
  return v14;
}

uint64_t SharingActivityProviderFactory.init(sharingActivityItemFactory:activityTypeProvider:issueActivityTypeProvider:puzzleActivityTypeProvider:puzzleTypeActivityTypeProvider:paidAccessChecker:subscriptionController:)(long long *a1, long long *a2, long long *a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1BFC773DC(a1, v7 + 16);
  sub_1BFC773DC(a2, v7 + 56);
  sub_1BFC773DC(a3, v7 + 96);
  sub_1BFC773DC(a4, v7 + 136);
  sub_1C0F2D550(a5, v7 + 176);
  *(void *)(v7 + 216) = a6;
  *(void *)(v7 + 224) = a7;
  return v7;
}

uint64_t sub_1C0F2D550(uint64_t a1, uint64_t a2)
{
  sub_1C0F30548(0, &qword_1EB890CD0, (uint64_t (*)(uint64_t))sub_1C0F2D5E4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0F2D5E4()
{
  unint64_t result = qword_1EB890CC8;
  if (!qword_1EB890CC8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB890CC8);
  }
  return result;
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:selectedText:feedItemIdentifier:tracker:sourceView:sourceItem:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v9 = v8;
  BOOL v15 = sub_1C0F2D9E0(a1);
  uint64_t v16 = v8[10];
  uint64_t v17 = v8[11];
  __swift_project_boxed_opaque_existential_1(v8 + 7, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v19 = a7;
  unint64_t v20 = sub_1C0F2FC90(v18, a1, v9, a4, a5, a6, (uint64_t)a7, a8, v15);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v44)
    {
LABEL_3:
      if (!v15) {
        goto LABEL_13;
      }
      if (objc_msgSend(a1, sel_respondsToSelector_, sel_parentIssue))
      {
        id v21 = objc_msgSend(a1, sel_parentIssue);
        if (v21)
        {
          size_t v22 = v21;
          if (objc_msgSend(a1, sel_respondsToSelector_, sel_role))
          {
            id v23 = v22;
            if (objc_msgSend(a1, sel_role) == (id)2)
            {
              uint64_t v24 = v9[5];
              uint64_t v25 = v9[6];
              __swift_project_boxed_opaque_existential_1(v9 + 2, v24);
              (*(void (**)(id, uint64_t, uint64_t))(v25 + 32))(v23, v24, v25);

LABEL_13:
              sub_1C0F30548(0, &qword_1EA1A8FA8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x1E4FBBE00]);
              uint64_t v28 = swift_allocObject();
              *(_OWORD *)(v28 + 16) = xmmword_1C152FC70;
              char v29 = (void *)*MEMORY[0x1E4F43588];
              char v30 = (void *)*MEMORY[0x1E4F43600];
              *(void *)(v28 + 32) = *MEMORY[0x1E4F43588];
              *(void *)(v28 + 40) = v30;
              uint64_t v31 = (void *)*MEMORY[0x1E4F43598];
              uint64_t v32 = (void *)*MEMORY[0x1E4F43608];
              *(void *)(v28 + 48) = *MEMORY[0x1E4F43598];
              *(void *)(v28 + 56) = v32;
              unint64_t v33 = (void *)*MEMORY[0x1E4F435D8];
              unint64_t v34 = (void *)*MEMORY[0x1E4F435F0];
              *(void *)(v28 + 64) = *MEMORY[0x1E4F435D8];
              *(void *)(v28 + 72) = v34;
              uint64_t v35 = (void *)*MEMORY[0x1E4F435A0];
              *(void *)(v28 + 80) = *MEMORY[0x1E4F435A0];
              objc_allocWithZone((Class)sub_1C151BA7C());
              id v36 = v29;
              id v37 = v30;
              id v38 = v31;
              id v39 = v32;
              id v40 = v33;
              id v41 = v34;
              id v42 = v35;
              return sub_1C151BA5C();
            }
          }
        }
      }
      uint64_t v26 = v9[5];
      uint64_t v27 = v9[6];
      __swift_project_boxed_opaque_existential_1(v9 + 2, v26);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8))(a1, a2, a3, v26, v27);
      goto LABEL_13;
    }
  }
  else if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  sub_1C151BA7C();
  return sub_1C151BA6C();
}

BOOL sub_1C0F2D9E0(void *a1)
{
  uint64_t v3 = &selRef_setSpacing_;
  id v4 = objc_msgSend(a1, sel_sourceChannel);
  if (v4)
  {
    uint64_t v5 = v4;
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_role) & 1) != 0
      && objc_msgSend(a1, sel_role) == (id)2)
    {
      int v6 = *(void **)(v1 + 216);
      swift_unknownObjectRetain();
      id v47 = v6;
      id v7 = objc_msgSend(v6, sel_purchaseProvider);
      if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
      {
        id v8 = objc_msgSend(v5, sel_asSection);
        if (!v8
          || (id v9 = objc_msgSend(v8, sel_parentID), swift_unknownObjectRelease(), !v9))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_40;
        }
      }
      else
      {
        id v9 = objc_msgSend(v5, sel_identifier);
      }
      uint64_t v27 = sub_1C151E62C();
      uint64_t v29 = v28;

      id v30 = objc_msgSend(v7, sel_purchasedTagIDs);
      uint64_t v31 = sub_1C151EFBC();

      LOBYTE(v30) = sub_1BFF896B4(v27, v29, v31);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
LABEL_40:
        uint64_t v32 = (char *)objc_msgSend(objc_msgSend(v47, sel_bundleSubscriptionProvider), sel_bundleSubscription);
        swift_unknownObjectRelease();
        if (objc_getAssociatedObject(v32, v32 + 1))
        {
          sub_1C151FF3C();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v49 = 0u;
          long long v50 = 0u;
        }
        sub_1BFFBE2FC((uint64_t)&v49, (uint64_t)v51);
        if (v52)
        {
          sub_1BFFBE2BC();
          if (swift_dynamicCast())
          {
            uint64_t v35 = v48;
            id v36 = objc_msgSend(v48, sel_integerValue);
            if (v36 == (id)-1)
            {

              goto LABEL_73;
            }
            unint64_t v37 = (unint64_t)v36;
LABEL_57:
            if (objc_getAssociatedObject(v32, (const void *)~v37))
            {
              sub_1C151FF3C();
              swift_unknownObjectRelease();
            }
            else
            {
              long long v49 = 0u;
              long long v50 = 0u;
            }
            sub_1BFFBE2FC((uint64_t)&v49, (uint64_t)v51);
            if (v52)
            {
              sub_1BFFBE2BC();
              if (swift_dynamicCast())
              {
                id v38 = v48;
                unsigned int v39 = objc_msgSend(v38, sel_integerValue);

                if (((v39 + 1) ^ (v37 + 1)))
                {
LABEL_73:
                  id v44 = objc_msgSend(objc_msgSend(v47, sel_bundleSubscriptionProvider), sel_bundleSubscription);
                  swift_unknownObjectRelease();
                  id v45 = objc_msgSend(v5, sel_identifier);
                  if (!v45)
                  {
                    sub_1C151E62C();
                    id v45 = (id)sub_1C151E5EC();
                    swift_bridgeObjectRelease();
                  }
                  unsigned int v46 = objc_msgSend(v44, sel_containsTagID_, v45);
                  swift_unknownObjectRelease();

                  if (v46)
                  {
                    swift_unknownObjectRelease();
                    uint64_t v3 = &selRef_setSpacing_;
                    goto LABEL_9;
                  }
LABEL_77:
                  id v22 = objc_msgSend(v5, sel_isSandbox);
                  swift_unknownObjectRelease();
                  return (BOOL)v22;
                }
LABEL_66:
                swift_unknownObjectRelease();
                goto LABEL_77;
              }
            }
            else
            {
              sub_1BFEFE4A0((uint64_t)v51);
            }

            if (v37) {
              goto LABEL_73;
            }
            goto LABEL_66;
          }
        }
        else
        {
          sub_1BFEFE4A0((uint64_t)v51);
        }
        uint64_t v35 = 0;
        unint64_t v37 = 0;
        goto LABEL_57;
      }
      swift_unknownObjectRelease_n();
      uint64_t v3 = &selRef_setSpacing_;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
LABEL_9:
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_role))
  {
    unint64_t v10 = (unint64_t)objc_msgSend(a1, sel_role);
    if (v10 < 8 && ((0x99u >> v10) & 1) != 0) {
      return 0;
    }
  }
  uint64_t v11 = *(void **)(v1 + 216);
  unsigned int v12 = objc_msgSend(a1, sel_isPaid);
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned __int8 v13 = objc_msgSend(a1, sel_isBundlePaid);
  }
  else {
    unsigned __int8 v13 = 0;
  }
  id v14 = [a1 v3[66]];
  uint64_t v15 = (uint64_t)v14;
  if (v14)
  {
    id v16 = objc_msgSend(v14, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v17 = sub_1C151E62C();
    uint64_t v15 = v18;

    if (v12) {
      goto LABEL_17;
    }
LABEL_22:
    if (v13) {
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  uint64_t v17 = 0;
  if (!v12) {
    goto LABEL_22;
  }
LABEL_17:
  id v19 = objc_msgSend(v11, sel_purchaseProvider);
  if (v15)
  {
    id v20 = objc_msgSend(v19, sel_purchasedTagIDs);
    uint64_t v21 = sub_1C151EFBC();

    LOBYTE(v20) = sub_1BFF896B4(v17, v15, v21);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      if ((v13 & 1) == 0) {
        goto LABEL_49;
      }
      goto LABEL_25;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_unknownObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_49;
  }
LABEL_25:
  if (!v15) {
    return 0;
  }
  id v23 = (char *)objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v23, v23 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v49, (uint64_t)v51);
  if (!v52)
  {
    sub_1BFEFE4A0((uint64_t)v51);
    goto LABEL_34;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_34:
    uint64_t v24 = 0;
    unint64_t v26 = 0;
    goto LABEL_35;
  }
  uint64_t v24 = v48;
  id v25 = objc_msgSend(v48, sel_integerValue);
  if (v25 == (id)-1)
  {

    goto LABEL_68;
  }
  unint64_t v26 = (unint64_t)v25;
LABEL_35:
  if (objc_getAssociatedObject(v23, (const void *)~v26))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v49, (uint64_t)v51);
  if (v52)
  {
    sub_1BFFBE2BC();
    if (swift_dynamicCast())
    {
      id v33 = v48;
      unsigned int v34 = objc_msgSend(v33, sel_integerValue);

      if (((v34 + 1) ^ (v26 + 1))) {
        goto LABEL_68;
      }
LABEL_49:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v51);
  }

  if ((v26 & 1) == 0) {
    goto LABEL_49;
  }
LABEL_68:
  id v40 = objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v41 = objc_msgSend(v40, sel_bundleChannelIDs);

  id v42 = (void *)sub_1C151E5EC();
  LOBYTE(v40) = objc_msgSend(v41, sel_containsObject_, v42);
  swift_bridgeObjectRelease();

  return (v40 & 1) != 0;
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(void *a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  id v7 = a1;
  id v8 = (void *)v3[27];
  unsigned int v9 = objc_msgSend(a1, sel_isPaid);
  unsigned int v10 = objc_msgSend(v7, sel_isBundlePaid);
  id v11 = objc_msgSend(objc_msgSend(v7, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  if (!v9)
  {
    if (v10) {
      goto LABEL_6;
    }
LABEL_8:
    unint64_t v58 = a3;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  unsigned int v57 = v10;
  id v15 = objc_msgSend(objc_msgSend(v8, sel_purchaseProvider), sel_purchasedTagIDs);
  id v16 = v4;
  uint64_t v17 = a3;
  uint64_t v18 = v7;
  uint64_t v19 = a2;
  id v20 = v8;
  uint64_t v21 = sub_1C151EFBC();

  LOBYTE(v15) = sub_1BFF896B4(v12, v14, v21);
  swift_unknownObjectRelease();
  id v8 = v20;
  a2 = v19;
  id v7 = v18;
  a3 = v17;
  id v4 = v16;
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_8;
  }
  if (!v57) {
    goto LABEL_26;
  }
LABEL_6:
  id v22 = (char *)objc_msgSend(objc_msgSend(v8, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  unint64_t v58 = a3;
  if (objc_getAssociatedObject(v22, v22 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v60 = 0u;
    long long v61 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v60, (uint64_t)&v62);
  if (!*((void *)&v63 + 1))
  {
    sub_1BFEFE4A0((uint64_t)&v62);
    goto LABEL_16;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    id v48 = 0;
    unint64_t v50 = 0;
    goto LABEL_17;
  }
  id v48 = v59;
  id v49 = objc_msgSend(v59, sel_integerValue);
  if (v49 == (id)-1)
  {

    goto LABEL_28;
  }
  unint64_t v50 = (unint64_t)v49;
LABEL_17:
  if (objc_getAssociatedObject(v22, (const void *)~v50))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v60 = 0u;
    long long v61 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v60, (uint64_t)&v62);
  if (!*((void *)&v63 + 1))
  {
    sub_1BFEFE4A0((uint64_t)&v62);
LABEL_25:

    if (v50) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  id v51 = v59;
  unsigned int v52 = objc_msgSend(v51, sel_integerValue);

  if ((v52 ^ v50))
  {
LABEL_28:
    id v53 = objc_msgSend(objc_msgSend(v8, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    id v54 = objc_msgSend(v53, sel_bundleChannelIDs);

    uint64_t v55 = (void *)sub_1C151E5EC();
    unsigned __int8 v56 = objc_msgSend(v54, sel_containsObject_, v55);
    swift_bridgeObjectRelease();

    if ((v56 & 1) == 0) {
      goto LABEL_29;
    }
LABEL_9:
    uint64_t v23 = v4[15];
    uint64_t v24 = v4[16];
    __swift_project_boxed_opaque_existential_1(v4 + 12, v23);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    id v26 = v58;
    swift_retain();
    id v27 = v7;
    swift_retain();
    sub_1C0F30060(v25, v4, (uint64_t)v27, a2, (uint64_t)v58);
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    uint64_t v28 = v4 + 2;
    uint64_t v30 = v4[5];
    uint64_t v29 = v4[6];
    __swift_project_boxed_opaque_existential_1(v28, v30);
    (*(void (**)(id, uint64_t, uint64_t))(v29 + 32))(v27, v30, v29);
    sub_1C0F30548(0, &qword_1EA1A8FA8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C152FC70;
    uint64_t v32 = (void *)*MEMORY[0x1E4F43588];
    id v33 = (void *)*MEMORY[0x1E4F43600];
    *(void *)(v31 + 32) = *MEMORY[0x1E4F43588];
    *(void *)(v31 + 40) = v33;
    unsigned int v34 = (void *)*MEMORY[0x1E4F43598];
    uint64_t v35 = (void *)*MEMORY[0x1E4F43608];
    *(void *)(v31 + 48) = *MEMORY[0x1E4F43598];
    *(void *)(v31 + 56) = v35;
    id v36 = (void *)*MEMORY[0x1E4F435D8];
    unint64_t v37 = (void *)*MEMORY[0x1E4F435F0];
    *(void *)(v31 + 64) = *MEMORY[0x1E4F435D8];
    *(void *)(v31 + 72) = v37;
    id v38 = (void *)*MEMORY[0x1E4F435A0];
    *(void *)(v31 + 80) = *MEMORY[0x1E4F435A0];
    unsigned int v39 = (objc_class *)sub_1C151BA7C();
    long long v62 = 0u;
    long long v63 = 0u;
    objc_allocWithZone(v39);
    id v40 = v32;
    id v41 = v33;
    id v42 = v34;
    id v43 = v35;
    id v44 = v36;
    id v45 = v37;
    id v46 = v38;
    return sub_1C151BA5C();
  }
LABEL_26:
  swift_bridgeObjectRelease();
LABEL_29:
  sub_1C151BA7C();
  return sub_1C151BA6C();
}

{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;

  id v4 = v3;
  id v8 = v3[10];
  unsigned int v9 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v8);
  unsigned int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  id v11 = a3;
  uint64_t v12 = a1;
  swift_retain();
  swift_retain();
  sub_1C0F2FF08(v10, v12, v4, a2, (uint64_t)a3);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  uint64_t v13 = v4 + 2;
  uint64_t v14 = v4[5];
  id v15 = v4[6];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(id, uint64_t, uint64_t))(v15 + 64))(v12, v14, v15);
  sub_1C0F30548(0, &qword_1EA1A8FA8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x1E4FBBE00]);
  id v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C152FC70;
  uint64_t v17 = (void *)*MEMORY[0x1E4F43588];
  uint64_t v18 = (void *)*MEMORY[0x1E4F43600];
  *(void *)(v16 + 32) = *MEMORY[0x1E4F43588];
  *(void *)(v16 + 40) = v18;
  uint64_t v19 = (void *)*MEMORY[0x1E4F43598];
  id v20 = (void *)*MEMORY[0x1E4F43608];
  *(void *)(v16 + 48) = *MEMORY[0x1E4F43598];
  *(void *)(v16 + 56) = v20;
  uint64_t v21 = (void *)*MEMORY[0x1E4F435D8];
  id v22 = (void *)*MEMORY[0x1E4F435F0];
  *(void *)(v16 + 64) = *MEMORY[0x1E4F435D8];
  *(void *)(v16 + 72) = v22;
  uint64_t v23 = (void *)*MEMORY[0x1E4F435A0];
  *(void *)(v16 + 80) = *MEMORY[0x1E4F435A0];
  objc_allocWithZone((Class)sub_1C151BA7C());
  uint64_t v24 = v17;
  uint64_t v25 = v18;
  id v26 = v19;
  id v27 = v20;
  uint64_t v28 = v21;
  uint64_t v29 = v22;
  uint64_t v30 = v23;
  return sub_1C151BA5C();
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:shareData:tracker:sourceView:sourceItem:)(id a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v47 = a2[1];
  uint64_t v48 = *a2;
  uint64_t v8 = a2[3];
  uint64_t v46 = a2[2];
  char v9 = *((unsigned char *)a2 + 32);
  if (v8 != 1 && (v9 & 1) != 0) {
    goto LABEL_28;
  }
  id v11 = (void *)v4[27];
  if (!objc_msgSend(a1, sel_isPaid)) {
    goto LABEL_28;
  }
  uint64_t v12 = (char *)objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id object = v12;
  if (objc_getAssociatedObject(v12, v12 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v50, (uint64_t)&v52);
  if (!*((void *)&v53 + 1))
  {
    char v16 = v9;
    sub_1BFEFE4A0((uint64_t)&v52);
LABEL_16:
    uint64_t v13 = 0;
    unint64_t v15 = 0;
    goto LABEL_17;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0)
  {
    char v16 = v9;
    goto LABEL_16;
  }
  uint64_t v13 = v49;
  id v14 = objc_msgSend(v49, sel_integerValue);
  if (v14 == (id)-1)
  {

    goto LABEL_28;
  }
  unint64_t v15 = (unint64_t)v14;
  char v16 = v9;
LABEL_17:
  if (objc_getAssociatedObject(object, (const void *)~v15))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  char v9 = v16;
  sub_1BFFBE2FC((uint64_t)&v50, (uint64_t)&v52);
  if (*((void *)&v53 + 1))
  {
    sub_1BFFBE2BC();
    if (swift_dynamicCast())
    {
      uint64_t v17 = v13;
      char v18 = v9;
      id v19 = v49;
      unsigned int v44 = objc_msgSend(v19, sel_integerValue);

      char v9 = v18;
      if (((v44 + 1) ^ (v15 + 1))) {
        goto LABEL_28;
      }
LABEL_26:
      sub_1C151BA7C();
      return sub_1C151BA6C();
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)&v52);
  }

  if ((v15 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_28:
  uint64_t v21 = v5[20];
  uint64_t v22 = v5[21];
  __swift_project_boxed_opaque_existential_1(v5 + 17, v21);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  id v24 = a4;
  sub_1C0F3019C(v23, v5, (uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  uint64_t v25 = v5 + 2;
  uint64_t v27 = v5[5];
  uint64_t v26 = v5[6];
  __swift_project_boxed_opaque_existential_1(v25, v27);
  *(void *)&long long v52 = v48;
  *((void *)&v52 + 1) = v47;
  *(void *)&long long v53 = v46;
  *((void *)&v53 + 1) = v8;
  char v54 = v9;
  (*(void (**)(id, long long *, uint64_t, uint64_t))(v26 + 40))(a1, &v52, v27, v26);
  sub_1C0F30548(0, &qword_1EA1A8FA8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x1E4FBBE00]);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C152FC70;
  uint64_t v29 = (void *)*MEMORY[0x1E4F43588];
  uint64_t v30 = (void *)*MEMORY[0x1E4F43600];
  *(void *)(v28 + 32) = *MEMORY[0x1E4F43588];
  *(void *)(v28 + 40) = v30;
  uint64_t v31 = (void *)*MEMORY[0x1E4F43598];
  uint64_t v32 = (void *)*MEMORY[0x1E4F43608];
  *(void *)(v28 + 48) = *MEMORY[0x1E4F43598];
  *(void *)(v28 + 56) = v32;
  id v33 = (void *)*MEMORY[0x1E4F435D8];
  unsigned int v34 = (void *)*MEMORY[0x1E4F435F0];
  *(void *)(v28 + 64) = *MEMORY[0x1E4F435D8];
  *(void *)(v28 + 72) = v34;
  uint64_t v35 = (void *)*MEMORY[0x1E4F435A0];
  *(void *)(v28 + 80) = *MEMORY[0x1E4F435A0];
  id v36 = (objc_class *)sub_1C151BA7C();
  long long v52 = 0u;
  long long v53 = 0u;
  objc_allocWithZone(v36);
  id v37 = v29;
  id v38 = v30;
  id v39 = v31;
  id v40 = v32;
  id v41 = v33;
  id v42 = v34;
  id v43 = v35;
  return sub_1C151BA5C();
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1C0F302CC((uint64_t)(v4 + 22), (uint64_t)&v34);
  if (v35)
  {
    sub_1BFC773DC(&v34, (uint64_t)&v36);
    uint64_t v10 = *((void *)&v37 + 1);
    uint64_t v11 = v38;
    __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    swift_unknownObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    id v13 = a3;
    sub_1C0F30360(v12, v5, a1, a2, (uint64_t)a3, a4);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  else
  {
    sub_1BFF513AC((uint64_t)&v34, &qword_1EB890CD0, (uint64_t (*)(uint64_t))sub_1C0F2D5E4);
  }
  id v14 = v5 + 2;
  uint64_t v15 = v5[5];
  uint64_t v16 = v5[6];
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a1, v15, v16);
  sub_1C0F30548(0, &qword_1EA1A8FA8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C152FC70;
  char v18 = (void *)*MEMORY[0x1E4F43588];
  id v19 = (void *)*MEMORY[0x1E4F43600];
  *(void *)(v17 + 32) = *MEMORY[0x1E4F43588];
  *(void *)(v17 + 40) = v19;
  id v20 = (void *)*MEMORY[0x1E4F43598];
  uint64_t v21 = (void *)*MEMORY[0x1E4F43608];
  *(void *)(v17 + 48) = *MEMORY[0x1E4F43598];
  *(void *)(v17 + 56) = v21;
  uint64_t v22 = (void *)*MEMORY[0x1E4F435D8];
  uint64_t v23 = (void *)*MEMORY[0x1E4F435F0];
  *(void *)(v17 + 64) = *MEMORY[0x1E4F435D8];
  *(void *)(v17 + 72) = v23;
  id v24 = (void *)*MEMORY[0x1E4F435A0];
  *(void *)(v17 + 80) = *MEMORY[0x1E4F435A0];
  uint64_t v25 = (objc_class *)sub_1C151BA7C();
  long long v36 = 0u;
  long long v37 = 0u;
  objc_allocWithZone(v25);
  id v26 = v18;
  id v27 = v19;
  id v28 = v20;
  id v29 = v21;
  id v30 = v22;
  id v31 = v23;
  id v32 = v24;
  return sub_1C151BA5C();
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  id v11 = a3;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C0F2FDCC(v10, v4, a1, a2, (uint64_t)a3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v12 = v4 + 2;
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1, v13, v14);
  sub_1C0F30548(0, &qword_1EA1A8FA8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C152FC70;
  uint64_t v16 = (void *)*MEMORY[0x1E4F43588];
  uint64_t v17 = (void *)*MEMORY[0x1E4F43600];
  *(void *)(v15 + 32) = *MEMORY[0x1E4F43588];
  *(void *)(v15 + 40) = v17;
  char v18 = (void *)*MEMORY[0x1E4F43598];
  id v19 = (void *)*MEMORY[0x1E4F43608];
  *(void *)(v15 + 48) = *MEMORY[0x1E4F43598];
  *(void *)(v15 + 56) = v19;
  id v20 = (void *)*MEMORY[0x1E4F435D8];
  uint64_t v21 = (void *)*MEMORY[0x1E4F435F0];
  *(void *)(v15 + 64) = *MEMORY[0x1E4F435D8];
  *(void *)(v15 + 72) = v21;
  uint64_t v22 = (void *)*MEMORY[0x1E4F435A0];
  *(void *)(v15 + 80) = *MEMORY[0x1E4F435A0];
  objc_allocWithZone((Class)sub_1C151BA7C());
  id v23 = v16;
  id v24 = v17;
  id v25 = v18;
  id v26 = v19;
  id v27 = v20;
  id v28 = v21;
  id v29 = v22;
  return sub_1C151BA5C();
}

uint64_t SharingActivityProviderFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  sub_1BFF513AC(v0 + 176, &qword_1EB890CD0, (uint64_t (*)(uint64_t))sub_1C0F2D5E4);
  swift_unknownObjectRelease();

  return v0;
}

uint64_t SharingActivityProviderFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  sub_1BFF513AC(v0 + 176, &qword_1EB890CD0, (uint64_t (*)(uint64_t))sub_1C0F2D5E4);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C0F2F498(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  return SharingActivityProviderFactory.createActivityProvider(for:selectedText:feedItemIdentifier:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C0F2F4BC(void *a1, uint64_t a2, void *a3)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(a1, a2, a3);
}

uint64_t sub_1C0F2F4E0(void *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  return SharingActivityProviderFactory.createActivityProvider(for:shareData:tracker:sourceView:sourceItem:)(a1, a2, a3, a4);
}

uint64_t sub_1C0F2F504(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:sourceItem:)(a1, a2, a3, a4);
}

uint64_t sub_1C0F2F528(uint64_t a1, uint64_t a2, void *a3)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(a1, a2, a3);
}

uint64_t sub_1C0F2F54C(void *a1, uint64_t a2, void *a3)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(a1, a2, a3);
}

void sub_1C0F2F570(unsigned __int8 *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, char a10)
{
  long long v62 = a9;
  uint64_t v58 = a8;
  uint64_t v59 = a6;
  uint64_t v60 = a7;
  long long v61 = a3;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0F30548(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  char v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v56 - v20;
  *(void *)&double v23 = MEMORY[0x1F4188790](v22).n128_u64[0];
  id v25 = (char *)&v56 - v24;
  uint64_t v26 = *a1;
  switch(v26)
  {
    case 3:
    case 4:
    case 6:
    case 8:
    case 9:
      id v27 = objc_msgSend(a2, sel_routeURL, v23);
      if (v27)
      {
        id v28 = v27;
        sub_1C1515F1C();

        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v15, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v25, 1, v12) != 1)
        {
          id v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v30 = (uint64_t)v25;
          goto LABEL_14;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v25, 1, 1, v12);
      }
      sub_1BFF513AC((uint64_t)v25, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v33 = v61[5];
      uint64_t v34 = v61[6];
      __swift_project_boxed_opaque_existential_1(v61 + 2, v33);
      char v63 = v26;
      uint64_t v35 = (*(uint64_t (**)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 104))(a2, v56, v57, &v63, v59, v60, v58, v33, v34);
      goto LABEL_32;
    case 5:
      id v36 = objc_msgSend(a2, sel_routeURL, v23);
      if (v36)
      {
        long long v37 = v36;
        sub_1C1515F1C();

        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) != 1)
        {
          id v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v30 = (uint64_t)v18;
          goto LABEL_14;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
      }
      sub_1BFF513AC((uint64_t)v18, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v48 = v61;
      id v49 = (void *)v61[28];
      id v50 = objc_msgSend(a2, sel_sourceChannelID);
      LOBYTE(v49) = objc_msgSend(v49, sel_isChannelPermanentForTagID_, v50);

      if (v49)
      {
LABEL_27:
        uint64_t v38 = 0;
        goto LABEL_33;
      }
      long long v51 = v48 + 2;
      uint64_t v52 = v48[5];
      uint64_t v53 = v48[6];
      __swift_project_boxed_opaque_existential_1(v51, v52);
      char v65 = 5;
      uint64_t v35 = (*(uint64_t (**)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 104))(a2, v56, v57, &v65, v59, v60, v58, v52, v53);
      goto LABEL_32;
    case 7:
      if ((a10 & 1) == 0) {
        goto LABEL_27;
      }
      if ((objc_msgSend(a2, sel_respondsToSelector_, sel_parentIssue, v23) & 1) == 0) {
        goto LABEL_31;
      }
      id v39 = objc_msgSend(a2, sel_parentIssue);
      if (!v39) {
        goto LABEL_31;
      }
      id v40 = v39;
      if ((objc_msgSend(a2, sel_respondsToSelector_, sel_role) & 1) == 0) {
        goto LABEL_30;
      }
      id v41 = v40;
      if (objc_msgSend(a2, sel_role) == (id)2)
      {
        uint64_t v42 = v61[5];
        uint64_t v43 = v61[6];
        __swift_project_boxed_opaque_existential_1(v61 + 2, v42);
        char v66 = 0;
        uint64_t v38 = (*(uint64_t (**)(id, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 128))(v41, &v66, v59, v60, v42, v43);

        goto LABEL_33;
      }

LABEL_30:
LABEL_31:
      uint64_t v54 = v61[5];
      uint64_t v55 = v61[6];
      __swift_project_boxed_opaque_existential_1(v61 + 2, v54);
      char v67 = 7;
      uint64_t v35 = (*(uint64_t (**)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 104))(a2, v56, v57, &v67, v59, v60, v58, v54, v55);
      goto LABEL_32;
    case 10:
      if ((a10 & 1) == 0) {
        goto LABEL_27;
      }
      uint64_t v44 = v61[5];
      uint64_t v45 = v61[6];
      __swift_project_boxed_opaque_existential_1(v61 + 2, v44);
      char v68 = 10;
      uint64_t v35 = (*(uint64_t (**)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 104))(a2, v56, v57, &v68, v59, v60, v58, v44, v45);
      goto LABEL_32;
    default:
      if ((a10 & 1) == 0) {
        goto LABEL_27;
      }
      id v31 = objc_msgSend(a2, sel_routeURL, v23);
      if (v31)
      {
        id v32 = v31;
        sub_1C1515F1C();

        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v15, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1, v12) != 1)
        {
          id v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v30 = (uint64_t)v21;
LABEL_14:
          sub_1BFF513AC(v30, (unint64_t *)&qword_1EB8948A0, v29);
          uint64_t v38 = 0;
          goto LABEL_33;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v21, 1, 1, v12);
      }
      sub_1BFF513AC((uint64_t)v21, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v46 = v61[5];
      uint64_t v47 = v61[6];
      __swift_project_boxed_opaque_existential_1(v61 + 2, v46);
      char v64 = v26;
      uint64_t v35 = (*(uint64_t (**)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 104))(a2, v56, v57, &v64, v59, v60, v58, v46, v47);
LABEL_32:
      uint64_t v38 = v35;
LABEL_33:
      *long long v62 = v38;
      return;
  }
}

uint64_t sub_1C0F2FC90(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unsigned __int8 v22 = *(unsigned char *)(a1 + i + 32);
      sub_1C0F2F570(&v22, a2, a3, a4, a5, a6, a7, a8, &v21, a9 & 1);
      if (v9)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v21)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    return v23;
  }
  return result;
}

uint64_t sub_1C0F2FDCC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v9 = a2 + 2;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v7; ++i)
    {
      char v11 = *(unsigned char *)(a1 + i + 32);
      uint64_t v12 = a2[5];
      uint64_t v13 = a2[6];
      __swift_project_boxed_opaque_existential_1(v9, v12);
      char v17 = v11;
      if ((*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 112))(a3, &v17, a4, a5, v12, v13))
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_1C0F2FF08(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v15 = a3 + 2;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v7; ++i)
    {
      int v11 = *(unsigned __int8 *)(a1 + i + 32);
      if (objc_msgSend(a2, sel_feedConfiguration) != (id)3 || v11 != 6)
      {
        uint64_t v13 = a3[5];
        uint64_t v14 = a3[6];
        __swift_project_boxed_opaque_existential_1(v15, v13);
        char v18 = v11;
        if ((*(uint64_t (**)(void *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 160))(a2, &v18, a4, a5, v13, v14))
        {
          MEMORY[0x1C18C66D0]();
          if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v19;
  }
  return result;
}

uint64_t sub_1C0F30060(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v9 = a2 + 2;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v7; ++i)
    {
      char v11 = *(unsigned char *)(a1 + i + 32);
      uint64_t v12 = a2[5];
      uint64_t v13 = a2[6];
      __swift_project_boxed_opaque_existential_1(v9, v12);
      char v17 = v11;
      if ((*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 128))(a3, &v17, a4, a5, v12, v13))
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_1C0F3019C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v8 = a2 + 2;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = a2[6];
      __swift_project_boxed_opaque_existential_1(v8, a2[5]);
      if ((*(uint64_t (**)(uint64_t))(v9 + 136))(a3))
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1C0F302CC(uint64_t a1, uint64_t a2)
{
  sub_1C0F30548(0, &qword_1EB890CD0, (uint64_t (*)(uint64_t))sub_1C0F2D5E4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0F30360(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v10 = a2 + 2;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v8; ++i)
    {
      char v12 = *(unsigned char *)(a1 + i + 32);
      uint64_t v13 = a2[5];
      uint64_t v14 = a2[6];
      __swift_project_boxed_opaque_existential_1(v10, v13);
      char v19 = v12;
      if ((*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 144))(a3, &v19, a4, a5, a6, v13, v14))
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:selectedText:feedItemIdentifier:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 8))();
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:tracker:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:shareData:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t method lookup function for SharingActivityProviderFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingActivityProviderFactory);
}

uint64_t dispatch thunk of SharingActivityProviderFactory.__allocating_init(sharingActivityItemFactory:activityTypeProvider:issueActivityTypeProvider:puzzleActivityTypeProvider:puzzleTypeActivityTypeProvider:paidAccessChecker:subscriptionController:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1C0F30548(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t LayeredMediaLayerRenderableProvider.renderable(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0199430(a1, (uint64_t)v48);
  sub_1C0199430((uint64_t)v48, (uint64_t)v49);
  if (sub_1C019948C((uint64_t)v49) == 1)
  {
    uint64_t v3 = (long long *)sub_1C0199498((uint64_t)v49);
    id v4 = objc_allocWithZone(MEMORY[0x1E4F9F8C8]);
    sub_1C0199430((uint64_t)v48, (uint64_t)v34);
    uint64_t v5 = sub_1C0199498((uint64_t)v34);
    sub_1C01994A8(v5);
    id v6 = objc_msgSend(v4, sel_init);
    sub_1C0199650(0, &qword_1EB85C8E8, (unint64_t *)&qword_1EB85DFA8);
    id v8 = objc_allocWithZone(v7);
    id v9 = v6;
    uint64_t v10 = sub_1C151A04C();
    long long v39 = v3[4];
    long long v40 = v3[5];
    v41[0] = v3[6];
    *(_OWORD *)((char *)v41 + 9) = *(long long *)((char *)v3 + 105);
    long long v35 = *v3;
    long long v36 = v3[1];
    long long v37 = v3[2];
    long long v38 = v3[3];
    uint64_t v42 = v10;
    id v43 = v9;
    *(_OWORD *)&v46[32] = v39;
    *(_OWORD *)&v46[48] = v40;
    *(_OWORD *)uint64_t v47 = v41[0];
    *(_OWORD *)&v47[9] = *(_OWORD *)((char *)v41 + 9);
    long long v44 = v35;
    long long v45 = v36;
    *(_OWORD *)uint64_t v46 = v37;
    *(_OWORD *)&uint64_t v46[16] = v38;
    sub_1C01995D4((uint64_t)&v42);
    uint64_t v11 = a2;
  }
  else
  {
    uint64_t v12 = sub_1C0199498((uint64_t)v49);
    uint64_t v23 = *(void *)(v12 + 8);
    uint64_t v24 = *(void *)v12;
    char v13 = *(unsigned char *)(v12 + 16);
    uint64_t v31 = a2;
    char v14 = *(unsigned char *)(v12 + 32);
    long long v28 = *(_OWORD *)(v12 + 56);
    long long v29 = *(_OWORD *)(v12 + 40);
    long long v27 = *(_OWORD *)(v12 + 72);
    uint64_t v25 = *(void *)(v12 + 24);
    uint64_t v26 = *(void *)(v12 + 88);
    char v15 = *(unsigned char *)(v12 + 96);
    uint64_t v30 = *(void *)(v12 + 104);
    char v16 = *(unsigned char *)(v12 + 112);
    id v17 = objc_allocWithZone(MEMORY[0x1E4F9F8C0]);
    sub_1C0199430((uint64_t)v48, (uint64_t)&v35);
    sub_1C0199498((uint64_t)&v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = objc_msgSend(v17, sel_init);
    sub_1C0199650(0, &qword_1EB85C8E0, (unint64_t *)&unk_1EB85DF90);
    id v20 = objc_allocWithZone(v19);
    id v21 = v18;
    uint64_t v42 = sub_1C151A04C();
    id v43 = v21;
    *(void *)&long long v44 = v24;
    *((void *)&v44 + 1) = v23;
    LOBYTE(v45) = v13;
    *(_DWORD *)((char *)&v45 + 1) = *(_DWORD *)v34;
    DWORD1(v45) = *(_DWORD *)&v34[3];
    *((void *)&v45 + 1) = v25;
    v46[0] = v14;
    *(_DWORD *)&v46[4] = *(_DWORD *)&v33[3];
    *(_DWORD *)&v46[1] = *(_DWORD *)v33;
    *(_OWORD *)&unsigned char v46[8] = v29;
    *(_OWORD *)&v46[24] = v28;
    *(_OWORD *)&v46[40] = v27;
    *(void *)&v46[56] = v26;
    v47[0] = v15;
    *(_DWORD *)&v47[4] = *(_DWORD *)&v32[3];
    *(_DWORD *)&v47[1] = *(_DWORD *)v32;
    *(void *)&v47[8] = v30;
    uint64_t v47[16] = v16;
    sub_1C01996A8((uint64_t)&v42);
    uint64_t v11 = v31;
  }
  return sub_1C01995F4((uint64_t)&v42, v11);
}

uint64_t LayeredMediaLayerRenderableProvider.deinit()
{
  return v0;
}

uint64_t LayeredMediaLayerRenderableProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for LayeredMediaLayerRenderableProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaLayerRenderableProvider);
}

uint64_t CategoryViewLayoutAttributesFactory.__allocating_init(styler:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BFC773DC(a1, v2 + 16);
  return v2;
}

uint64_t CategoryViewLayoutAttributesFactory.init(styler:)(long long *a1)
{
  sub_1BFC773DC(a1, v1 + 16);
  return v1;
}

double sub_1C0F3093C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v106 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  uint64_t v108 = a1;
  uint64_t v6 = a1 + v106[5];
  uint64_t v7 = *(uint64_t *)v6;
  int v8 = *(unsigned __int8 *)(v6 + 8);
  if (v8)
  {
    if (v8 == 1 && v7 >= 1)
    {
      sub_1C151764C();
      double v10 = v9 / (double)v7;
      if (v10 > 110.0) {
        double v11 = v10;
      }
      else {
        double v11 = 110.0;
      }
    }
    else
    {
      double v11 = 110.0;
    }
  }
  else
  {
    double v11 = *(double *)&v7;
  }
  uint64_t v12 = v3[5];
  uint64_t v13 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  double v104 = v11;
  uint64_t v14 = v3[5];
  uint64_t v15 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  id v17 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v19 = v3[5];
  uint64_t v18 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v19);
  id v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
  swift_bridgeObjectRetain();
  id v21 = v17;
  uint64_t v22 = v20(v19, v18);
  *(void *)(inited + 64) = sub_1BFF63CD0();
  *(void *)(inited + 40) = v22;
  sub_1BFF991DC(inited);
  id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v24 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C0F31A54((unint64_t *)&qword_1EB87A1F0, 255, type metadata accessor for Key);
  uint64_t v25 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  sub_1C151F60C();
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;

  uint64_t v35 = v3[5];
  uint64_t v36 = v3[6];
  long long v37 = v3 + 2;
  __swift_project_boxed_opaque_existential_1(v3 + 2, v35);
  long long v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
  objc_msgSend(v38, sel_pointSize);
  double v40 = v39;

  double v41 = v40 + *(double *)(v108 + v106[8]) + *(double *)(v108 + v106[8]);
  uint64_t v42 = (double *)(v108 + v106[7]);
  double v43 = v42[2];
  uint64_t v44 = v3[5];
  uint64_t v45 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v44);
  double v46 = (*(double (**)(uint64_t, uint64_t))(v45 + 16))(v44, v45);
  double v98 = *v42;
  double rect = *v42 + v41 + v43 * v46;
  double v47 = rect - *v42 - v43;
  double v48 = rect * 35.0 / 60.0;
  double v103 = *(double *)(v108 + v106[9]);
  uint64_t v49 = v3[5];
  uint64_t v50 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v49);
  v109.origin.double x = v103 * (*(double (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
  double v51 = v47 * 0.5;
  v109.origin.CGFloat y = v51 - v48 * 0.5;
  v109.size.CGFloat width = v48;
  v109.size.CGFloat height = v48;
  CGRect v110 = CGRectIntegral(v109);
  double x = v110.origin.x;
  CGFloat y = v110.origin.y;
  v110.size.CGFloat width = v48;
  v110.size.CGFloat height = v48;
  double MaxX = CGRectGetMaxX(v110);
  double v53 = *(double *)(v108 + v106[10]);
  uint64_t v54 = v3[5];
  uint64_t v55 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v54);
  CGFloat v56 = MaxX + v53 * (*(double (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
  v111.origin.double x = v28;
  v111.origin.CGFloat y = v30;
  v111.size.CGFloat width = v32;
  v111.size.CGFloat height = v34;
  CGFloat v57 = v51 - CGRectGetHeight(v111) * 0.5;
  v112.origin.double x = v28;
  v112.origin.CGFloat y = v30;
  v112.size.CGFloat width = v32;
  v112.size.CGFloat height = v34;
  CGFloat Width = CGRectGetWidth(v112);
  v113.origin.double x = v28;
  v113.origin.CGFloat y = v30;
  v113.size.CGFloat width = v32;
  v113.size.CGFloat height = v34;
  v114.size.CGFloat height = CGRectGetHeight(v113);
  v114.origin.double x = v56;
  v114.origin.CGFloat y = v57;
  v114.size.CGFloat width = Width;
  CGRect v115 = CGRectIntegral(v114);
  double v59 = v115.origin.x;
  CGFloat v60 = v115.origin.y;
  CGFloat v92 = v115.size.width;
  CGFloat v93 = v115.origin.y;
  CGFloat v61 = v115.size.width;
  CGFloat height = v115.size.height;
  CGFloat v91 = v115.size.height;
  double v63 = *(double *)(v108 + v106[11]);
  uint64_t v64 = v3[5];
  uint64_t v65 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v64);
  double v66 = v63;
  double v94 = v63;
  double v67 = v104 - v63 * (*(double (**)(uint64_t, uint64_t))(v65 + 16))(v64, v65);
  v116.origin.double x = v59;
  v116.origin.CGFloat y = v60;
  v116.size.CGFloat width = v61;
  v116.size.CGFloat height = height;
  double v68 = CGRectGetMaxX(v116);
  uint64_t v69 = v3[5];
  uint64_t v70 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v69);
  double v71 = v68 + v66 * (*(double (**)(uint64_t, uint64_t))(v70 + 16))(v69, v70);
  if (v67 > v71) {
    double v72 = v67;
  }
  else {
    double v72 = v71;
  }
  uint64_t v73 = 0;
  uint64_t v74 = 0;
  double v75 = rect;
  CGRect v117 = CGRectIntegral(*(CGRect *)(&v72 - 2));
  CGFloat v105 = v117.origin.y;
  CGFloat v107 = v117.origin.x;
  CGFloat recta = v117.size.width;
  double v95 = v117.size.height;
  v118.origin.double x = UIEdgeInsetsInsetRect(v117.origin.x, v117.origin.y, v117.size.width, v117.size.height, v98, v42[1]);
  CGRect v119 = CGRectIntegral(v118);
  CGFloat v99 = v119.origin.y;
  CGFloat v100 = v119.origin.x;
  CGFloat v89 = v119.size.height;
  CGFloat v90 = v119.size.width;
  double v76 = CGRectGetWidth(v119);
  uint64_t v77 = v3[5];
  uint64_t v78 = v3[6];
  __swift_project_boxed_opaque_existential_1(v37, v77);
  double v79 = v76 - v103 * (*(double (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78);
  v120.origin.double x = x;
  v120.origin.CGFloat y = y;
  v120.size.CGFloat width = v48;
  v120.size.CGFloat height = v48;
  double v80 = v79 - CGRectGetWidth(v120);
  v121.origin.double x = v59;
  v121.origin.CGFloat y = v93;
  v121.size.CGFloat width = v92;
  v121.size.CGFloat height = v91;
  double v81 = v80 - CGRectGetWidth(v121);
  uint64_t v82 = v3[5];
  uint64_t v83 = v3[6];
  __swift_project_boxed_opaque_existential_1(v37, v82);
  double v84 = (v81 - v94 * (*(double (**)(uint64_t, uint64_t))(v83 + 16))(v82, v83)) * 0.5;
  double v85 = x + v84;
  double v86 = v59 + v84;
  sub_1C15176EC();
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(CGFloat *)(a2 + 32) = v100;
  *(CGFloat *)(a2 + 40) = v99;
  *(CGFloat *)(a2 + 48) = v90;
  *(CGFloat *)(a2 + 56) = v89;
  *(double *)(a2 + 64) = v85;
  *(CGFloat *)(a2 + 72) = y;
  *(double *)(a2 + 80) = v48;
  *(double *)(a2 + 88) = v48;
  *(double *)(a2 + 96) = v86;
  *(CGFloat *)(a2 + 104) = v93;
  *(CGFloat *)(a2 + 112) = v92;
  *(CGFloat *)(a2 + 120) = v91;
  *(void *)(a2 + 128) = v87;
  *(CGFloat *)(a2 + 136) = v107;
  *(CGFloat *)(a2 + 144) = v105;
  *(CGFloat *)(a2 + 152) = recta;
  double result = v95;
  *(double *)(a2 + 160) = v95;
  return result;
}