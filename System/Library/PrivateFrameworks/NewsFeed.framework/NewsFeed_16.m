uint64_t sub_1C0632878(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unint64_t v18;
  char v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char v29;
  unint64_t v30;
  uint64_t result;
  char *v32;
  void (*v33)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v34;
  unsigned char v35[152];
  uint64_t v36;
  unsigned char v37[152];
  char *v38;
  char *v39;
  char *v40;

  v12 = swift_allocObject();
  v33 = a5;
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 160;
  v15 = a3 - (void)a2;
  v16 = (uint64_t)(a3 - (void)a2) / 160;
  v40 = a1;
  v39 = a4;
  if (v14 >= v16)
  {
    if (v15 < -159) {
      goto LABEL_42;
    }
    v23 = 160 * v16;
    if (a4 != a2 || &a2[v23] <= a4) {
      memmove(a4, a2, 160 * v16);
    }
    swift_retain();
    v24 = &a4[v23];
    v38 = &a4[v23];
    v40 = a2;
    if (v15 < 160 || a1 >= a2) {
      goto LABEL_41;
    }
    v25 = (char *)(a3 - 160);
    v32 = a1;
    while (1)
    {
      v28 = v25 + 160;
      sub_1BFEA5300((uint64_t)(v24 - 160), (uint64_t)&v36, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      v26 = a2 - 160;
      sub_1BFEA5300((uint64_t)(a2 - 160), (uint64_t)&v34, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      v29 = sub_1C062711C(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
      sub_1BFEA5370((uint64_t)&v34, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C064267C);
      sub_1BFEA5370((uint64_t)&v36, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C064267C);
      if (v29) {
        break;
      }
      v30 = (unint64_t)v38;
      v24 = v38 - 160;
      v38 -= 160;
      if ((unint64_t)v28 < v30 || (unint64_t)v25 >= v30)
      {
        memmove(v25, (const void *)(v30 - 160), 0xA0uLL);
        v26 = a2;
        goto LABEL_29;
      }
      v27 = v32;
      if (v28 != (char *)v30) {
        memmove(v25, (const void *)(v30 - 160), 0xA0uLL);
      }
      v26 = a2;
      if (v24 <= a4) {
        goto LABEL_41;
      }
LABEL_30:
      v25 -= 160;
      a2 = v26;
      if (v26 <= v27) {
        goto LABEL_41;
      }
    }
    if (v28 != a2 || v25 >= a2) {
      memmove(v25, a2 - 160, 0xA0uLL);
    }
    v40 -= 160;
    v24 = v38;
LABEL_29:
    v27 = v32;
    if (v24 <= a4) {
      goto LABEL_41;
    }
    goto LABEL_30;
  }
  if (v13 >= -159)
  {
    v17 = 160 * v14;
    if (a4 != a1 || &a1[v17] <= a4) {
      memmove(a4, a1, v17);
    }
    swift_retain();
    v18 = (unint64_t)&a4[v17];
    v38 = &a4[v17];
    if (v13 >= 160 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_1BFEA5300((uint64_t)a2, (uint64_t)&v36, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300((uint64_t)a4, (uint64_t)&v34, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        v19 = sub_1C062711C(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
        sub_1BFEA5370((uint64_t)&v34, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)&v36, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C064267C);
        v20 = v40;
        if (v19)
        {
          v21 = (unint64_t)(a2 + 160);
          if (v40 >= a2 && (unint64_t)v40 < v21 && v40 == a2) {
            v20 = a2;
          }
          else {
            memmove(v40, a2, 0xA0uLL);
          }
        }
        else
        {
          v22 = v39 + 160;
          if (v40 != v39 || v40 >= v22) {
            memmove(v40, v39, 0xA0uLL);
          }
          v39 = v22;
          v21 = (unint64_t)a2;
        }
        v40 = v20 + 160;
        a4 = v39;
        if ((unint64_t)v39 >= v18) {
          break;
        }
        a2 = (char *)v21;
      }
      while (v21 < a3);
    }
LABEL_41:
    sub_1C06358BC((void **)&v40, (const void **)&v39, &v38);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_42:
  swift_release();
  result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0632D28(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v54)(uint64_t *__return_ptr, char *, void *);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  sub_1BFEA5440(0, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  v56 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v53 = (void *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  v17 = (void *)((char *)v47 - v16);
  uint64_t v18 = swift_allocObject();
  v54 = a5;
  v55 = a6;
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(v13 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  int64_t v20 = a2 - a1;
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_63;
  }
  uint64_t v23 = v20 / v19;
  v59 = a1;
  v58 = a4;
  uint64_t v24 = v22 / v19;
  v47[1] = v18;
  if (v20 / v19 >= v22 / v19)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v19;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_retain();
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        swift_retain();
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v50 = a4;
      unint64_t v34 = a4 + v26;
      v57 = a4 + v26;
      v59 = a2;
      if (v26 >= 1 && v21 < a2)
      {
        uint64_t v36 = -v19;
        uint64_t v51 = v36;
        unint64_t v48 = v21;
        do
        {
          unint64_t v52 = a3 + v36;
          sub_1BFEA5300(v34 + v36, (uint64_t)v17, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          unint64_t v37 = a2 + v36;
          uint64_t v38 = a2 + v36;
          unint64_t v39 = a3;
          v40 = v17;
          v41 = v53;
          sub_1BFEA5300(v38, (uint64_t)v53, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          char v42 = sub_1C002EE00(*v40, (uint64_t)v40 + *(int *)(v56 + 48), *v41, (uint64_t)v41 + *(int *)(v56 + 48), v54, v55, &qword_1EA19CBB0, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
          uint64_t v43 = (uint64_t)v41;
          v17 = v40;
          sub_1BFEA5370(v43, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))sub_1BFEA5440);
          sub_1BFEA5370((uint64_t)v40, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))sub_1BFEA5440);
          if (v42)
          {
            a3 = v52;
            if (v39 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v48;
            }
            else
            {
              unint64_t v44 = v48;
              if (v39 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v36 = v51;
            v59 += v51;
          }
          else
          {
            unint64_t v45 = v57;
            a3 = v52;
            v57 += v51;
            if (v39 < v45 || v52 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v39 != v45)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
            unint64_t v44 = v48;
            uint64_t v36 = v51;
          }
          unint64_t v34 = v57;
          if (v57 <= v50) {
            break;
          }
          a2 = v37;
        }
        while (v37 > v44);
      }
      goto LABEL_60;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v19;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_retain();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      swift_retain();
      if (a4 != v21) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v52 = a4 + v25;
    v57 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v28 = a4;
      unint64_t v49 = a3;
      do
      {
        sub_1BFEA5300(a2, (uint64_t)v17, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        v29 = v53;
        sub_1BFEA5300(v28, (uint64_t)v53, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v30 = sub_1C002EE00(*v17, (uint64_t)v17 + *(int *)(v56 + 48), *v29, (uint64_t)v29 + *(int *)(v56 + 48), v54, v55, &qword_1EA19CBB0, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
        sub_1BFEA5370((uint64_t)v29, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)v17, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))sub_1BFEA5440);
        unint64_t v31 = v59;
        if (v30)
        {
          unint64_t v32 = a2 + v19;
          if (v59 < a2 || v59 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v33 = v58 + v19;
          if (v59 < v58 || v59 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v58 = v33;
          unint64_t v32 = a2;
        }
        v59 = v31 + v19;
        if (v58 >= v52) {
          break;
        }
        uint64_t v28 = v58;
        a2 = v32;
      }
      while (v32 < v49);
    }
LABEL_60:
    sub_1C06354B4(&v59, &v58, (uint64_t *)&v57, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_64:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C063340C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t, char *, void, char *))
{
  v5 = __dst;
  v6 = (long long *)a2;
  v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 96;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 96;
  v112 = __src;
  v111[0] = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -95)
    {
      if (__dst != a2 || &a2[96 * v11] <= __dst)
      {
        memmove(__dst, a2, 96 * v11);
        v6 = (long long *)a2;
      }
      v40 = &v5[96 * v11];
      v110 = v40;
      v112 = (char *)v6;
      if (v7 < (char *)v6 && v10 >= 96)
      {
        v41 = (char *)(a3 - 96);
        char v42 = v6;
        __dstb = v7;
        v86 = v5;
        while (1)
        {
          v82 = v41;
          v88 = (char *)v6;
          unint64_t v74 = (unint64_t)v40;
          long long v44 = *((_OWORD *)v40 - 6);
          v40 -= 96;
          long long v45 = v44;
          uint64_t v46 = *((void *)v40 + 2);
          char v47 = v40[40];
          uint64_t v48 = *((void *)v40 + 6);
          uint64_t v49 = *((void *)v40 + 7);
          uint64_t v50 = *((void *)v40 + 8);
          uint64_t v51 = *((void *)v40 + 9);
          uint64_t v53 = *((void *)v40 + 10);
          unint64_t v52 = *((void *)v40 + 11);
          long long v54 = *(v42 - 6);
          v42 -= 6;
          uint64_t v79 = v45;
          uint64_t v55 = *((void *)v42 + 2);
          char v56 = *((unsigned char *)v42 + 40);
          uint64_t v57 = *((void *)v42 + 6);
          uint64_t v58 = *((void *)v42 + 7);
          uint64_t v59 = *((void *)v42 + 8);
          uint64_t v60 = *((void *)v42 + 9);
          uint64_t v61 = *((void *)v42 + 10);
          unint64_t v62 = *((void *)v42 + 11);
          long long v63 = *(_OWORD *)(v40 + 24);
          long long v64 = *(_OWORD *)((char *)v42 + 24);
          long long v100 = v45;
          uint64_t v101 = v46;
          long long v102 = v63;
          char v103 = v47;
          uint64_t v104 = v48;
          uint64_t v105 = v49;
          uint64_t v106 = v50;
          uint64_t v107 = v51;
          uint64_t v108 = v53;
          unint64_t v109 = v52;
          *((void *)&v90 + 1) = *((void *)&v54 + 1);
          uint64_t v91 = v55;
          long long v92 = v64;
          char v93 = v56;
          uint64_t v94 = v57;
          uint64_t v95 = v58;
          uint64_t v96 = v59;
          uint64_t v97 = v60;
          uint64_t v98 = v61;
          unint64_t v99 = v62;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v76 = v52;
          sub_1BFF7FF04(v53, v52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v61, v62);
          char v65 = a5(v79, (char *)&v100 + 8, v54, (char *)&v90 + 8);
          if (v89) {
            break;
          }
          char v66 = v65;
          uint64_t v89 = 0;
          v67 = v82 + 96;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v61, v62);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v53, v76);
          if (v66)
          {
            v68 = v82;
            if (v67 != v88 || v82 >= v88) {
              memmove(v82, v42, 0x60uLL);
            }
            v112 = (char *)v42;
            uint64_t v43 = v86;
            v40 = (char *)v74;
            if (v42 <= (_OWORD *)__dstb) {
              goto LABEL_42;
            }
          }
          else
          {
            v110 = v40;
            v68 = v82;
            if ((unint64_t)v67 < v74 || (unint64_t)v82 >= v74 || v67 != (char *)v74) {
              memmove(v82, v40, 0x60uLL);
            }
            uint64_t v43 = v86;
            char v42 = v88;
            if (v88 <= __dstb) {
              goto LABEL_42;
            }
          }
          v41 = v68 - 96;
          v6 = v42;
          if (v40 <= v43) {
            goto LABEL_42;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v61, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v70 = v52;
        uint64_t v69 = v53;
LABEL_45:
        sub_1BFEEFC20(v69, v70);
        sub_1C0635A80((void **)&v112, v111, &v110);
        return 1;
      }
LABEL_42:
      sub_1C0635A80((void **)&v112, v111, &v110);
      return 1;
    }
  }
  else if (v8 >= -95)
  {
    if (__dst != __src || &__src[96 * v9] <= __dst)
    {
      memmove(__dst, __src, 96 * v9);
      v6 = (long long *)a2;
    }
    v75 = &v5[96 * v9];
    v110 = v75;
    if ((unint64_t)v6 < a3 && v8 >= 96)
    {
      v72 = v111[0];
      uint64_t v13 = v112;
      while (1)
      {
        v73 = v13;
        __dsta = v7;
        uint64_t v14 = *((void *)v6 + 2);
        char v15 = *((unsigned char *)v6 + 40);
        uint64_t v16 = *((void *)v6 + 6);
        uint64_t v17 = *((void *)v6 + 7);
        uint64_t v18 = *((void *)v6 + 8);
        uint64_t v19 = *((void *)v6 + 9);
        uint64_t v21 = *((void *)v6 + 10);
        unint64_t v20 = *((void *)v6 + 11);
        uint64_t v22 = *((void *)v5 + 2);
        char v23 = v5[40];
        uint64_t v24 = *((void *)v5 + 6);
        uint64_t v25 = *((void *)v5 + 7);
        uint64_t v26 = v5;
        uint64_t v27 = *((void *)v5 + 8);
        uint64_t v28 = *((void *)v5 + 9);
        uint64_t v29 = *((void *)v5 + 10);
        unint64_t v30 = *((void *)v26 + 11);
        v85 = v26;
        v87 = (char *)v6;
        long long v31 = *(long long *)((char *)v6 + 24);
        long long v78 = *(_OWORD *)v26;
        long long v32 = *(_OWORD *)v26;
        long long v33 = *(_OWORD *)(v26 + 24);
        long long v100 = *v6;
        uint64_t v81 = v100;
        uint64_t v101 = v14;
        long long v102 = v31;
        char v103 = v15;
        uint64_t v104 = v16;
        uint64_t v105 = v17;
        uint64_t v106 = v18;
        uint64_t v107 = v19;
        uint64_t v108 = v21;
        unint64_t v109 = v20;
        *((void *)&v90 + 1) = *((void *)&v32 + 1);
        uint64_t v91 = v22;
        long long v92 = v33;
        char v93 = v23;
        uint64_t v94 = v24;
        uint64_t v95 = v25;
        uint64_t v96 = v27;
        uint64_t v97 = v28;
        uint64_t v98 = v29;
        unint64_t v99 = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v21, v20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v29, v30);
        char v34 = a5(v81, (char *)&v100 + 8, v78, (char *)&v90 + 8);
        if (v89)
        {
          v111[0] = v72;
          v112 = v73;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v29, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v70 = v20;
          uint64_t v69 = v21;
          goto LABEL_45;
        }
        char v35 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v29, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v21, v20);
        if (v35) {
          break;
        }
        uint64_t v36 = v87;
        v5 = v85 + 96;
        uint64_t v38 = v85;
        unint64_t v37 = __dsta;
        v72 = v85 + 96;
        if (__dsta != v85) {
          goto LABEL_18;
        }
LABEL_19:
        uint64_t v89 = 0;
        uint64_t v13 = v37 + 96;
        if (v5 < v75)
        {
          v6 = (long long *)v36;
          v7 = v37 + 96;
          if ((unint64_t)v36 < a3) {
            continue;
          }
        }
        v111[0] = v72;
        v112 = v37 + 96;
        goto LABEL_42;
      }
      v5 = v85;
      uint64_t v36 = v87 + 96;
      unint64_t v37 = __dsta;
      if (__dsta < v87 || __dsta >= v36)
      {
        uint64_t v38 = v87;
      }
      else
      {
        uint64_t v38 = v87;
        if (__dsta == v87) {
          goto LABEL_19;
        }
      }
LABEL_18:
      memmove(v37, v38, 0x60uLL);
      goto LABEL_19;
    }
    goto LABEL_42;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0633A90(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t, char *, void, char *))
{
  v5 = __src;
  uint64_t v6 = a2 - __src;
  uint64_t v7 = a2 - __src + 63;
  if (a2 - __src >= 0) {
    uint64_t v7 = a2 - __src;
  }
  uint64_t v8 = v7 >> 6;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 63;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 6;
  uint64_t v94 = __src;
  v93[0] = __dst;
  char v66 = __dst;
  if (v8 >= v10 >> 6)
  {
    if (v9 >= -63)
    {
      if (__dst != a2 || &a2[64 * v11] <= __dst)
      {
        char v34 = a2;
        memmove(__dst, a2, v11 << 6);
        a2 = v34;
        __dst = v66;
      }
      char v35 = &__dst[64 * v11];
      long long v92 = v35;
      uint64_t v94 = a2;
      if (v5 < a2 && v9 >= 64)
      {
        uint64_t v36 = (char *)(a3 - 64);
        unint64_t v37 = a2;
        unint64_t v76 = v5;
        while (1)
        {
          unint64_t v74 = v36;
          long long v78 = a2;
          v67 = v35;
          v41 = v35 - 64;
          uint64_t v42 = *((void *)v35 - 6);
          char v43 = *(v35 - 24);
          uint64_t v44 = *((void *)v35 - 2);
          unint64_t v45 = *((void *)v35 - 1);
          long long v46 = *((_OWORD *)v37 - 4);
          v37 -= 64;
          long long v71 = *((_OWORD *)v35 - 4);
          uint64_t v47 = *((void *)v37 + 2);
          char v48 = v37[40];
          uint64_t v49 = *((void *)v37 + 6);
          unint64_t v50 = *((void *)v37 + 7);
          long long v51 = *(_OWORD *)(v41 + 24);
          long long v52 = *(_OWORD *)(v37 + 24);
          long long v86 = v71;
          uint64_t v87 = v42;
          long long v88 = v51;
          char v89 = v43;
          uint64_t v90 = v44;
          unint64_t v91 = v45;
          *((void *)&v80 + 1) = *((void *)&v46 + 1);
          uint64_t v81 = v47;
          long long v82 = v52;
          char v83 = v48;
          uint64_t v84 = v49;
          unint64_t v85 = v50;
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v44, v45);
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v49, v50);
          char v53 = a5(v71, (char *)&v86 + 8, v46, (char *)&v80 + 8);
          if (v79) {
            break;
          }
          char v54 = v53;
          uint64_t v79 = 0;
          uint64_t v55 = v74 + 64;
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v49, v50);
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v44, v45);
          if (v54)
          {
            char v56 = v66;
            uint64_t v57 = v74;
            if (v55 != v78 || v74 >= v78)
            {
              long long v38 = *(_OWORD *)v37;
              long long v39 = *((_OWORD *)v37 + 1);
              long long v40 = *((_OWORD *)v37 + 3);
              *((_OWORD *)v74 + 2) = *((_OWORD *)v37 + 2);
              *((_OWORD *)v74 + 3) = v40;
              *(_OWORD *)unint64_t v74 = v38;
              *((_OWORD *)v74 + 1) = v39;
            }
            uint64_t v94 = v37;
            char v35 = v67;
            if (v37 <= v76) {
              goto LABEL_46;
            }
          }
          else
          {
            long long v92 = v41;
            char v56 = v66;
            unint64_t v37 = v78;
            uint64_t v57 = v74;
            if (v55 < v67 || v74 >= v67 || v55 != v67)
            {
              long long v58 = *(_OWORD *)v41;
              long long v59 = *((_OWORD *)v41 + 1);
              long long v60 = *((_OWORD *)v41 + 3);
              *((_OWORD *)v74 + 2) = *((_OWORD *)v41 + 2);
              *((_OWORD *)v74 + 3) = v60;
              *(_OWORD *)unint64_t v74 = v58;
              *((_OWORD *)v74 + 1) = v59;
            }
            char v35 = v41;
            if (v78 <= v76) {
              goto LABEL_46;
            }
          }
          uint64_t v36 = v57 - 64;
          a2 = v37;
          if (v35 <= v56) {
            goto LABEL_46;
          }
        }
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v49, v50);
        swift_bridgeObjectRelease();
        uint64_t v61 = v44;
        unint64_t v62 = v45;
LABEL_49:
        sub_1BFEEFC20(v61, v62);
        sub_1C0635B50((void **)&v94, v93, &v92);
        return 1;
      }
LABEL_46:
      sub_1C0635B50((void **)&v94, v93, &v92);
      return 1;
    }
  }
  else if (v6 >= -63)
  {
    if (__dst != __src || &__src[64 * v8] <= __dst)
    {
      uint64_t v12 = a2;
      memmove(__dst, __src, v8 << 6);
      a2 = v12;
      __dst = v66;
    }
    v68 = &__dst[64 * v8];
    long long v92 = v68;
    if ((unint64_t)a2 < a3 && v6 >= 64)
    {
      long long v64 = v93[0];
      uint64_t v13 = v94;
      while (1)
      {
        char v65 = v13;
        v75 = v5;
        v77 = a2;
        uint64_t v14 = *((void *)a2 + 2);
        char v15 = a2[40];
        uint64_t v16 = *((void *)a2 + 6);
        unint64_t v17 = *((void *)a2 + 7);
        uint64_t v18 = *((void *)__dst + 2);
        char v19 = __dst[40];
        uint64_t v21 = *((void *)__dst + 6);
        unint64_t v20 = *((void *)__dst + 7);
        long long v22 = *(_OWORD *)(a2 + 24);
        long long v70 = *(_OWORD *)__dst;
        long long v23 = *(_OWORD *)__dst;
        uint64_t v24 = __dst;
        long long v25 = *(_OWORD *)(__dst + 24);
        long long v86 = *(_OWORD *)a2;
        uint64_t v73 = v86;
        uint64_t v87 = v14;
        long long v88 = v22;
        char v89 = v15;
        uint64_t v90 = v16;
        unint64_t v91 = v17;
        *((void *)&v80 + 1) = *((void *)&v23 + 1);
        uint64_t v81 = v18;
        long long v82 = v25;
        char v83 = v19;
        uint64_t v84 = v21;
        unint64_t v85 = v20;
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v16, v17);
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v21, v20);
        char v26 = a5(v73, (char *)&v86 + 8, v70, (char *)&v80 + 8);
        if (v79)
        {
          v93[0] = v64;
          uint64_t v94 = v65;
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v21, v20);
          swift_bridgeObjectRelease();
          uint64_t v61 = v16;
          unint64_t v62 = v17;
          goto LABEL_49;
        }
        char v27 = v26;
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v21, v20);
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v16, v17);
        if (v27) {
          break;
        }
        __dst = v24 + 64;
        unint64_t v30 = v24;
        uint64_t v28 = v75;
        uint64_t v29 = v77;
        long long v64 = v24 + 64;
        if (v75 != v24) {
          goto LABEL_22;
        }
LABEL_23:
        uint64_t v79 = 0;
        uint64_t v13 = v28 + 64;
        if (__dst < v68)
        {
          a2 = v29;
          v5 = v28 + 64;
          if ((unint64_t)v29 < a3) {
            continue;
          }
        }
        v93[0] = v64;
        uint64_t v94 = v28 + 64;
        goto LABEL_46;
      }
      uint64_t v28 = v75;
      uint64_t v29 = v77 + 64;
      __dst = v24;
      if (v75 < v77 || v75 >= v29)
      {
        unint64_t v30 = v77;
      }
      else
      {
        unint64_t v30 = v77;
        if (v75 == v77) {
          goto LABEL_23;
        }
      }
LABEL_22:
      long long v31 = *(_OWORD *)v30;
      long long v32 = *((_OWORD *)v30 + 1);
      long long v33 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v28 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v28 + 3) = v33;
      *(_OWORD *)uint64_t v28 = v31;
      *((_OWORD *)v28 + 1) = v32;
      goto LABEL_23;
    }
    goto LABEL_46;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0633FF0(char *a1, char *__src, unint64_t a3, char *a4, uint64_t (*a5)(uint64_t, uint64_t *, uint64_t, uint64_t *))
{
  v5 = __src;
  uint64_t v6 = __src - a1;
  uint64_t v7 = __src - a1 + 15;
  if (__src - a1 >= 0) {
    uint64_t v7 = __src - a1;
  }
  uint64_t v8 = v7 >> 4;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v11 = a3 - (void)__src;
  }
  uint64_t v12 = v11 >> 4;
  unint64_t v45 = a1;
  uint64_t v44 = a4;
  if (v8 >= v11 >> 4)
  {
    if (v10 >= -15)
    {
      if (a4 != __src || &__src[16 * v12] <= a4) {
        memmove(a4, __src, 16 * v12);
      }
      long long v23 = &a4[16 * v12];
      char v43 = v23;
      unint64_t v45 = v5;
      if (a1 >= v5 || v10 < 16) {
        goto LABEL_47;
      }
      uint64_t v24 = (char *)(a3 - 16);
      long long v25 = v5;
      while (1)
      {
        long long v38 = v5;
        unint64_t v26 = (unint64_t)v23;
        uint64_t v27 = *((void *)v23 - 2);
        uint64_t v29 = *((void *)v23 - 1);
        uint64_t v28 = v23 - 16;
        uint64_t v30 = *((void *)v25 - 2);
        uint64_t v31 = *((void *)v25 - 1);
        v25 -= 16;
        uint64_t v41 = v31;
        uint64_t v42 = v29;
        swift_retain();
        swift_retain();
        char v32 = a5(v27, &v42, v30, &v41);
        if (v40) {
          goto LABEL_46;
        }
        char v33 = v32;
        uint64_t v40 = 0;
        char v34 = v24 + 16;
        swift_release();
        swift_release();
        if (v33)
        {
          long long v23 = (char *)v26;
          if (v34 != v38 || v24 >= v38) {
            *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
          }
          unint64_t v45 = v25;
        }
        else
        {
          char v43 = v28;
          if ((unint64_t)v34 < v26 || (unint64_t)v24 >= v26 || v34 != (char *)v26) {
            *(_OWORD *)uint64_t v24 = *(_OWORD *)v28;
          }
          long long v25 = v38;
          long long v23 = v28;
        }
        if (v25 > a1)
        {
          v24 -= 16;
          v5 = v25;
          if (v23 > a4) {
            continue;
          }
        }
        goto LABEL_47;
      }
    }
  }
  else if (v6 >= -15)
  {
    uint64_t v13 = a4;
    if (a4 != a1 || &a1[16 * v8] <= a4) {
      memmove(a4, a1, 16 * v8);
    }
    char v15 = &a4[16 * v8];
    char v43 = v15;
    if ((unint64_t)v5 >= a3 || v6 < 16) {
      goto LABEL_47;
    }
    uint64_t v16 = a1;
    while (1)
    {
      uint64_t v17 = *(void *)v5;
      uint64_t v18 = *((void *)v5 + 1);
      uint64_t v19 = *(void *)v13;
      uint64_t v41 = *((void *)v13 + 1);
      uint64_t v42 = v18;
      swift_retain();
      swift_retain();
      char v20 = a5(v17, &v42, v19, &v41);
      if (v40) {
        break;
      }
      char v21 = v20;
      swift_release();
      swift_release();
      if (v21)
      {
        long long v22 = v5 + 16;
        if (v16 < v5 || v16 >= v22 || v16 != v5) {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v5;
        }
      }
      else
      {
        if (v16 != v13) {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v13;
        }
        v13 += 16;
        uint64_t v44 = v13;
        long long v22 = v5;
      }
      v16 += 16;
      unint64_t v45 = v16;
      if (v13 < v15)
      {
        v5 = v22;
        if ((unint64_t)v22 < a3) {
          continue;
        }
      }
      goto LABEL_47;
    }
LABEL_46:
    swift_release();
    swift_release();
LABEL_47:
    sub_1C0634DF8((void **)&v45, (const void **)&v44, &v43);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0634358(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v33)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v34;
  unsigned char v35[288];
  uint64_t v36;
  unsigned char v37[288];
  char *v38;
  char *v39;
  char *v40;

  uint64_t v12 = swift_allocObject();
  char v33 = a5;
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  uint64_t v13 = a2 - a1;
  uint64_t v14 = (a2 - a1) / 296;
  uint64_t v15 = a3 - (void)a2;
  uint64_t v16 = (uint64_t)(a3 - (void)a2) / 296;
  uint64_t v40 = a1;
  long long v39 = a4;
  if (v14 >= v16)
  {
    if (v15 < -295) {
      goto LABEL_42;
    }
    uint64_t v23 = 296 * v16;
    if (a4 != a2 || &a2[v23] <= a4) {
      memmove(a4, a2, 296 * v16);
    }
    swift_retain();
    uint64_t v24 = &a4[v23];
    long long v38 = &a4[v23];
    uint64_t v40 = a2;
    if (v15 < 296 || a1 >= a2) {
      goto LABEL_41;
    }
    long long v25 = (char *)(a3 - 296);
    char v32 = a1;
    while (1)
    {
      uint64_t v28 = v25 + 296;
      sub_1BFEA5300((uint64_t)(v24 - 296), (uint64_t)&v36, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      unint64_t v26 = a2 - 296;
      sub_1BFEA5300((uint64_t)(a2 - 296), (uint64_t)&v34, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      char v29 = sub_1C06271F0(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
      sub_1BFEA5370((uint64_t)&v34, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C064267C);
      sub_1BFEA5370((uint64_t)&v36, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C064267C);
      if (v29) {
        break;
      }
      unint64_t v30 = (unint64_t)v38;
      uint64_t v24 = v38 - 296;
      v38 -= 296;
      if ((unint64_t)v28 < v30 || (unint64_t)v25 >= v30)
      {
        memmove(v25, (const void *)(v30 - 296), 0x128uLL);
        unint64_t v26 = a2;
        goto LABEL_29;
      }
      uint64_t v27 = v32;
      if (v28 != (char *)v30) {
        memmove(v25, (const void *)(v30 - 296), 0x128uLL);
      }
      unint64_t v26 = a2;
      if (v24 <= a4) {
        goto LABEL_41;
      }
LABEL_30:
      v25 -= 296;
      a2 = v26;
      if (v26 <= v27) {
        goto LABEL_41;
      }
    }
    if (v28 != a2 || v25 >= a2) {
      memmove(v25, a2 - 296, 0x128uLL);
    }
    v40 -= 296;
    uint64_t v24 = v38;
LABEL_29:
    uint64_t v27 = v32;
    if (v24 <= a4) {
      goto LABEL_41;
    }
    goto LABEL_30;
  }
  if (v13 >= -295)
  {
    size_t v17 = 296 * v14;
    if (a4 != a1 || &a1[v17] <= a4) {
      memmove(a4, a1, v17);
    }
    swift_retain();
    unint64_t v18 = (unint64_t)&a4[v17];
    long long v38 = &a4[v17];
    if (v13 >= 296 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_1BFEA5300((uint64_t)a2, (uint64_t)&v36, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300((uint64_t)a4, (uint64_t)&v34, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        char v19 = sub_1C06271F0(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
        sub_1BFEA5370((uint64_t)&v34, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)&v36, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C064267C);
        char v20 = v40;
        if (v19)
        {
          unint64_t v21 = (unint64_t)(a2 + 296);
          if (v40 >= a2 && (unint64_t)v40 < v21 && v40 == a2) {
            char v20 = a2;
          }
          else {
            memmove(v40, a2, 0x128uLL);
          }
        }
        else
        {
          long long v22 = v39 + 296;
          if (v40 != v39 || v40 >= v22) {
            memmove(v40, v39, 0x128uLL);
          }
          long long v39 = v22;
          unint64_t v21 = (unint64_t)a2;
        }
        uint64_t v40 = v20 + 296;
        a4 = v39;
        if ((unint64_t)v39 >= v18) {
          break;
        }
        a2 = (char *)v21;
      }
      while (v21 < a3);
    }
LABEL_41:
    sub_1C0635C0C((void **)&v40, (const void **)&v39, &v38);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_42:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0634810(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v32)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v33;
  unsigned char v34[152];
  uint64_t v35;
  unsigned char v36[152];
  unint64_t v37;
  char *v38;
  char *v39;

  uint64_t v12 = swift_allocObject();
  char v32 = a5;
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  uint64_t v13 = a2 - a1;
  uint64_t v14 = (a2 - a1) / 160;
  unint64_t v31 = a3;
  uint64_t v15 = a3 - (void)a2;
  uint64_t v16 = v15 / 160;
  long long v39 = a1;
  long long v38 = a4;
  if (v14 >= v15 / 160)
  {
    if (v15 < -159) {
      goto LABEL_42;
    }
    if (a4 != a2 || &a2[160 * v16] <= a4) {
      memmove(a4, a2, 160 * v16);
    }
    swift_retain();
    long long v22 = &a4[160 * v16];
    unint64_t v37 = (unint64_t)v22;
    long long v39 = a2;
    if (v15 < 160 || a1 >= a2) {
      goto LABEL_41;
    }
    uint64_t v23 = (char *)(v31 - 160);
    unint64_t v30 = a1;
    while (1)
    {
      unint64_t v26 = v23 + 160;
      sub_1BFEA5300((uint64_t)(v22 - 160), (uint64_t)&v35, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      uint64_t v24 = a2 - 160;
      sub_1BFEA5300((uint64_t)(a2 - 160), (uint64_t)&v33, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      char v27 = sub_1C06272C4(v35, (uint64_t)v36, v33, (uint64_t)v34, v32);
      sub_1BFEA5370((uint64_t)&v33, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C064267C);
      sub_1BFEA5370((uint64_t)&v35, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C064267C);
      if (v27) {
        break;
      }
      unint64_t v28 = v37;
      long long v22 = (char *)(v37 - 160);
      v37 -= 160;
      if ((unint64_t)v26 < v28 || (unint64_t)v23 >= v28)
      {
        memmove(v23, (const void *)(v28 - 160), 0xA0uLL);
        uint64_t v24 = a2;
        goto LABEL_29;
      }
      long long v25 = v30;
      if (v26 != (char *)v28) {
        memmove(v23, (const void *)(v28 - 160), 0xA0uLL);
      }
      uint64_t v24 = a2;
      if (v22 <= a4) {
        goto LABEL_41;
      }
LABEL_30:
      v23 -= 160;
      a2 = v24;
      if (v24 <= v25) {
        goto LABEL_41;
      }
    }
    if (v26 != a2 || v23 >= a2) {
      memmove(v23, a2 - 160, 0xA0uLL);
    }
    v39 -= 160;
    long long v22 = (char *)v37;
LABEL_29:
    long long v25 = v30;
    if (v22 <= a4) {
      goto LABEL_41;
    }
    goto LABEL_30;
  }
  if (v13 >= -159)
  {
    if (a4 != a1 || &a1[160 * v14] <= a4) {
      memmove(a4, a1, 160 * v14);
    }
    swift_retain();
    unint64_t v17 = (unint64_t)&a4[160 * v14];
    unint64_t v37 = v17;
    if (v13 >= 160 && (unint64_t)a2 < v31)
    {
      do
      {
        sub_1BFEA5300((uint64_t)a2, (uint64_t)&v35, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300((uint64_t)a4, (uint64_t)&v33, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        char v18 = sub_1C06272C4(v35, (uint64_t)v36, v33, (uint64_t)v34, v32);
        sub_1BFEA5370((uint64_t)&v33, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)&v35, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C064267C);
        char v19 = v39;
        if (v18)
        {
          unint64_t v20 = (unint64_t)(a2 + 160);
          if (v39 >= a2 && (unint64_t)v39 < v20 && v39 == a2) {
            char v19 = a2;
          }
          else {
            memmove(v39, a2, 0xA0uLL);
          }
        }
        else
        {
          unint64_t v21 = v38 + 160;
          if (v39 != v38 || v39 >= v21) {
            memmove(v39, v38, 0xA0uLL);
          }
          long long v38 = v21;
          unint64_t v20 = (unint64_t)a2;
        }
        long long v39 = v19 + 160;
        a4 = v38;
        if ((unint64_t)v38 >= v17) {
          break;
        }
        a2 = (char *)v20;
      }
      while (v20 < v31);
    }
LABEL_41:
    sub_1C0635CDC((void **)&v39, (const void **)&v38, &v37);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_42:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

char *sub_1C0634CC8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFEA578C(0, &qword_1EB86BC28, (uint64_t)&unk_1EB86B418, MEMORY[0x1E4FBB6A0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C06426D4);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C0634DF8(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1C0634EB4(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

char *sub_1C0634F70(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1C0635030(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

uint64_t sub_1C06350D4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FormatRegex);
}

uint64_t sub_1C06350EC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, type metadata accessor for FormatService.ThemePackage);
}

uint64_t sub_1C0635104(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_1C152052C();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1C0635248(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

uint64_t sub_1C0635314(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
}

char *sub_1C063532C(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_1C06353FC(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -64)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0x3FuLL : 0)) & 0xFFFFFFFFFFFFFFC0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

void sub_1C06354B4(unint64_t *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5 = *a1;
  unint64_t v6 = *a2;
  uint64_t v7 = *a3;
  sub_1BFEA5440(0, a4, a5);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  if (!v9)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v10 = v7 - v6;
  if (v7 - v6 == 0x8000000000000000 && v9 == -1) {
    goto LABEL_18;
  }
  if (v10 / v9 < 0)
  {
LABEL_19:
    sub_1C152052C();
    __break(1u);
    return;
  }
  if (v5 < v6 || v5 >= v6 + v10 / v9 * v9)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v5 != v6)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_1C06355FC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
}

uint64_t sub_1C0635614(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
}

uint64_t sub_1C063562C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, MEMORY[0x1E4FAB0A8]);
}

char *sub_1C0635644(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -152)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 152 * (v4 / 152);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1C0635714(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -72)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
    {
      return (char *)memmove(result, v3, 72 * v6);
    }
  }
  return result;
}

char *sub_1C06357E8(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -216)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 216;
    if (result != v3 || result >= &v3[216 * v6])
    {
      return (char *)memmove(result, v3, 216 * v6);
    }
  }
  return result;
}

char *sub_1C06358BC(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -160)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 160 * (v4 / 160);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

uint64_t sub_1C0635984(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
}

uint64_t sub_1C063599C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, MEMORY[0x1E4F27928]);
}

char *sub_1C06359B4(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1C0635A80(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -96)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 96;
    if (result != v3 || result >= &v3[96 * v6])
    {
      return (char *)memmove(result, v3, 96 * v6);
    }
  }
  return result;
}

char *sub_1C0635B50(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 63;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -64)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
    {
      return (char *)memmove(result, v3, v7 << 6);
    }
  }
  return result;
}

char *sub_1C0635C0C(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -296)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 296 * (v4 / 296);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1C0635CDC(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -160)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 160;
    if (result != v3 || result >= &v3[160 * v6])
    {
      return (char *)memmove(result, v3, 160 * v6);
    }
  }
  return result;
}

char *sub_1C0635DAC(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

uint64_t sub_1C0635E68(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, type metadata accessor for DebugFormatTestCaseResult);
}

uint64_t sub_1C0635E80(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for ZIndexable);
}

char *sub_1C0635E98(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_1C0635F68(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -80)
  {
    uint64_t result = (char *)sub_1C152052C();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
    {
      return (char *)memmove(result, v3, 80 * v6);
    }
  }
  return result;
}

uint64_t sub_1C0636034(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C0635104(a1, a2, a3, MEMORY[0x1E4FB7550]);
}

char *sub_1C063604C(uint64_t a1)
{
  return sub_1C0634CC8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C0636060(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1C06361B8((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1C06361B8((uint64_t)v7, v4, v2);
    MEMORY[0x1C18C9B00](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_1C06361B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (unint64_t *)result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v13 = v12 | (v6 << 6);
LABEL_20:
    unint64_t v17 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v13);
    uint64_t result = *v17;
    if (*v17 != 42 || v17[1] != 0xE100000000000000)
    {
      uint64_t result = sub_1C1520A9C();
      if ((result & 1) == 0)
      {
        *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        if (__OFADD__(v5++, 1))
        {
          __break(1u);
          return sub_1BFEA7EB8(v4, a2, v5, a3);
        }
      }
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v14 >= v11) {
    return sub_1BFEA7EB8(v4, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v6 = v14 + 1;
  if (v14 + 1 >= v11) {
    return sub_1BFEA7EB8(v4, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v6);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v6 = v14 + 2;
  if (v14 + 2 >= v11) {
    return sub_1BFEA7EB8(v4, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_19:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_20;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    return sub_1BFEA7EB8(v4, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      return sub_1BFEA7EB8(v4, a2, v5, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C0636360(uint64_t a1)
{
  return sub_1BFEDE8B4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C0636374(uint64_t a1)
{
  return sub_1C05F8D10(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C0636388(uint64_t a1)
{
  return sub_1C05F8D24(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C063639C(uint64_t a1)
{
  return sub_1C05F8D38(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C06363B0(void *a1)
{
  return sub_1C05F8D4C(0, a1[2], 0, a1);
}

uint64_t sub_1C06363C4(uint64_t a1)
{
  return sub_1C05F8D78(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C06363D8(void *a1)
{
  return sub_1C05F9950(0, a1[2], 0, a1);
}

uint64_t sub_1C06363EC(void *a1)
{
  return sub_1C05F997C(0, a1[2], 0, a1);
}

uint64_t sub_1C0636400(void *a1)
{
  return sub_1C05F9B58(0, a1[2], 0, a1);
}

uint64_t sub_1C0636414(void *a1)
{
  return sub_1C05FA570(0, a1[2], 0, a1);
}

uint64_t sub_1C0636428(uint64_t a1)
{
  return sub_1C05FA5C8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C063643C(void *a1)
{
  return sub_1C05FAC30(0, a1[2], 0, a1);
}

uint64_t sub_1C0636450(void *a1)
{
  return sub_1C05FA59C(0, a1[2], 0, a1);
}

uint64_t sub_1C0636464(void *a1)
{
  return sub_1C05FAF8C(0, a1[2], 0, a1);
}

uint64_t sub_1C0636478(void *a1)
{
  return sub_1C05FB158(0, a1[2], 0, a1);
}

uint64_t sub_1C063648C(void *a1)
{
  return sub_1C05FBAF8(0, a1[2], 0, a1);
}

uint64_t sub_1C06364A0(void *a1)
{
  return sub_1C05FBCC4(0, a1[2], 0, a1);
}

uint64_t sub_1C06364B4(void *a1)
{
  return sub_1C05FBCF0(0, a1[2], 0, a1);
}

uint64_t sub_1C06364C8(void *a1)
{
  return sub_1C05FBEA8(0, a1[2], 0, a1);
}

uint64_t sub_1C06364DC(void *a1)
{
  return sub_1C05FC214(0, a1[2], 0, a1);
}

uint64_t sub_1C06364F0(void *a1)
{
  return sub_1C05FC3D4(0, a1[2], 0, a1);
}

uint64_t sub_1C0636504(void *a1)
{
  return sub_1C05FC5A0(0, a1[2], 0, a1);
}

uint64_t sub_1C0636518(uint64_t a1)
{
  return sub_1C05FC8F0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C063652C(void *a1)
{
  return sub_1C05FEDD8(0, a1[2], 0, a1);
}

uint64_t sub_1C0636540(void *a1)
{
  return sub_1C05FEFAC(0, a1[2], 0, a1);
}

uint64_t sub_1C0636554(void *a1)
{
  return sub_1C05FF16C(0, a1[2], 0, a1);
}

uint64_t sub_1C0636568(void *a1)
{
  return sub_1C05FF310(0, a1[2], 0, a1);
}

uint64_t sub_1C063657C(void *a1)
{
  return sub_1C05FF664(0, a1[2], 0, a1);
}

uint64_t sub_1C0636590(void *a1)
{
  return sub_1C05FF9C4(0, a1[2], 0, a1);
}

uint64_t sub_1C06365A4(uint64_t a1)
{
  return sub_1C05FFED4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C06365B8(uint64_t a1)
{
  return sub_1C06003D4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C06365CC(void *a1)
{
  return sub_1C0600560(0, a1[2], 0, a1);
}

uint64_t sub_1C06365E0(void *a1)
{
  return sub_1C060058C(0, a1[2], 0, a1);
}

uint64_t sub_1C06365F4(void *a1)
{
  return sub_1C0600910(0, a1[2], 0, a1);
}

uint64_t sub_1C0636608(void *a1)
{
  return sub_1C0600AE0(0, a1[2], 0, a1);
}

uint64_t sub_1C063661C(uint64_t a1)
{
  return sub_1C0600C84(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C0636630(void *a1)
{
  return sub_1C0600E28(0, a1[2], 0, a1);
}

uint64_t sub_1C0636644(void *a1)
{
  return sub_1C0605038(0, a1[2], 0, a1);
}

size_t sub_1C0636658(uint64_t a1)
{
  sub_1BFEA5440(0, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v49 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v48 = (void *)((char *)v42 - v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v42 - v7;
  uint64_t v50 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v47 = v11;
  v42[0] = a1;
  if (v11)
  {
    uint64_t v43 = (v10 + 32) & ~v10;
    uint64_t v13 = MEMORY[0x1E4FBC860] + v43;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for FeedBannerAd() - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    unint64_t v45 = v8;
    uint64_t v46 = v18;
    v42[1] = v10 | 7;
    char v19 = v12;
    uint64_t v20 = v44;
    while (1)
    {
      uint64_t v22 = (uint64_t)&v49[*(int *)(v20 + 48)];
      sub_1C063FDFC(v17, v22, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v23 = (uint64_t)v48;
      uint64_t v24 = (uint64_t)v48 + *(int *)(v20 + 48);
      *char v48 = v14;
      sub_1BFEA4850(v22, v24, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      size_t result = sub_1C002DA70(v23, (uint64_t)v8, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
      if (v15)
      {
        unint64_t v12 = v19;
        BOOL v21 = __OFSUB__(v15--, 1);
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v26 = v19[3];
        if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v27;
        }
        sub_1BFEA578C(0, &qword_1EA19C520, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v29 = *(void *)(v50 + 72);
        uint64_t v30 = v43;
        unint64_t v12 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v12);
        if (!v29) {
          goto LABEL_34;
        }
        int64_t v31 = result - v30;
        if (result - v30 == 0x8000000000000000 && v29 == -1) {
          goto LABEL_35;
        }
        uint64_t v33 = v31 / v29;
        v12[2] = v28;
        v12[3] = 2 * (v31 / v29);
        char v34 = (char *)v12 + v30;
        uint64_t v35 = v19[3] >> 1;
        uint64_t v36 = v35 * v29;
        if (v19[2])
        {
          if (v12 < v19 || v34 >= (char *)v19 + v43 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        uint64_t v13 = (uint64_t)&v34[v36];
        uint64_t v38 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        uint64_t v20 = v44;
        BOOL v21 = __OFSUB__(v38, 1);
        uint64_t v15 = v38 - 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v14;
      uint64_t v8 = v45;
      sub_1C002DA70((uint64_t)v45, v13, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
      v13 += *(void *)(v50 + 72);
      v17 += v46;
      char v19 = v12;
      if (v47 == v14) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v39 = v12[3];
  if (v39 >= 2)
  {
    unint64_t v40 = v39 >> 1;
    BOOL v21 = __OFSUB__(v40, v15);
    uint64_t v41 = v40 - v15;
    if (v21) {
      goto LABEL_36;
    }
    v12[2] = v41;
  }
  return (size_t)v12;
}

uint64_t sub_1C0636A6C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = result;
    size_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = (uint64_t)(v2 + 4);
    uint64_t v7 = v1 - 1;
    uint64_t v8 = 32;
    uint64_t v25 = result;
    for (i = v2; ; i = v2)
    {
      long long v10 = *(_OWORD *)(v3 + v8 + 112);
      long long v40 = *(_OWORD *)(v3 + v8 + 96);
      v41[0] = v10;
      *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)(v3 + v8 + 121);
      long long v11 = *(_OWORD *)(v3 + v8 + 48);
      long long v36 = *(_OWORD *)(v3 + v8 + 32);
      long long v37 = v11;
      long long v12 = *(_OWORD *)(v3 + v8 + 80);
      long long v38 = *(_OWORD *)(v3 + v8 + 64);
      long long v39 = v12;
      long long v13 = *(_OWORD *)(v3 + v8 + 16);
      long long v34 = *(_OWORD *)(v3 + v8);
      long long v35 = v13;
      if (v4)
      {
        size_t result = sub_1C0187FB0((uint64_t)&v34);
        uint64_t v2 = i;
        goto LABEL_21;
      }
      unint64_t v14 = i[3];
      if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_31;
      }
      int64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v16 = v15 <= 1 ? 1 : v15;
      sub_1BFEA578C(0, (unint64_t *)&qword_1EA19C4F0, (uint64_t)&qword_1EA19C4F8, (uint64_t)&type metadata for FeedIssue, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
      uint64_t v2 = (void *)swift_allocObject();
      uint64_t v17 = (uint64_t)(_swift_stdlib_malloc_size(v2) - 32) / 152;
      v2[2] = v16;
      v2[3] = 2 * v17;
      uint64_t v18 = i[3] >> 1;
      size_t v19 = 19 * v18;
      uint64_t v4 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v18;
      uint64_t v6 = (uint64_t)&v2[19 * v18 + 4];
      if (i[2]) {
        break;
      }
      sub_1C0187FB0((uint64_t)&v34);
      size_t result = swift_release();
LABEL_20:
      uint64_t v3 = v25;
LABEL_21:
      long long v32 = v40;
      *(_OWORD *)uint64_t v33 = v41[0];
      *(_OWORD *)&v33[9] = *(_OWORD *)((char *)v41 + 9);
      long long v28 = v36;
      long long v29 = v37;
      long long v30 = v38;
      long long v31 = v39;
      long long v26 = v34;
      long long v27 = v35;
      BOOL v21 = __OFSUB__(v4--, 1);
      if (v21)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
      *(void *)uint64_t v6 = v5;
      *(_OWORD *)(v6 + 8) = v26;
      *(_OWORD *)(v6 + 72) = v30;
      *(_OWORD *)(v6 + 56) = v29;
      *(_OWORD *)(v6 + 40) = v28;
      *(_OWORD *)(v6 + 24) = v27;
      *(_OWORD *)(v6 + 129) = *(_OWORD *)&v33[9];
      *(_OWORD *)(v6 + 120) = *(_OWORD *)v33;
      *(_OWORD *)(v6 + 104) = v32;
      *(_OWORD *)(v6 + 88) = v31;
      if (v7 == v5)
      {
        size_t result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      v6 += 152;
      v8 += 144;
      ++v5;
    }
    if (v2 < i || v2 + 4 >= &i[v19 + 4])
    {
      sub_1C0187FB0((uint64_t)&v34);
    }
    else
    {
      sub_1C0187FB0((uint64_t)&v34);
      if (v2 == i) {
        goto LABEL_19;
      }
    }
    memmove(v2 + 4, i + 4, v19 * 8);
LABEL_19:
    i[2] = 0;
    size_t result = swift_release();
    goto LABEL_20;
  }
  uint64_t v4 = 0;
LABEL_26:
  unint64_t v22 = v2[3];
  if (v22 >= 2)
  {
    unint64_t v23 = v22 >> 1;
    BOOL v21 = __OFSUB__(v23, v4);
    uint64_t v24 = v23 - v4;
    if (v21) {
      goto LABEL_32;
    }
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

size_t sub_1C0636D10(uint64_t a1)
{
  sub_1BFEA5440(0, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v49 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v48 = (void *)((char *)v42 - v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v42 - v7;
  uint64_t v50 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  long long v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v47 = v11;
  v42[0] = a1;
  if (v11)
  {
    uint64_t v43 = (v10 + 32) & ~v10;
    uint64_t v13 = MEMORY[0x1E4FBC860] + v43;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for FeedCustomItem() - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    unint64_t v45 = v8;
    uint64_t v46 = v18;
    v42[1] = v10 | 7;
    size_t v19 = v12;
    uint64_t v20 = v44;
    while (1)
    {
      uint64_t v22 = (uint64_t)&v49[*(int *)(v20 + 48)];
      sub_1C063FDFC(v17, v22, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v23 = (uint64_t)v48;
      uint64_t v24 = (uint64_t)v48 + *(int *)(v20 + 48);
      *char v48 = v14;
      sub_1BFEA4850(v22, v24, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      size_t result = sub_1C002DA70(v23, (uint64_t)v8, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
      if (v15)
      {
        long long v12 = v19;
        BOOL v21 = __OFSUB__(v15--, 1);
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v26 = v19[3];
        if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v27;
        }
        sub_1BFEA578C(0, (unint64_t *)&unk_1EA19CA80, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v29 = *(void *)(v50 + 72);
        uint64_t v30 = v43;
        long long v12 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v12);
        if (!v29) {
          goto LABEL_34;
        }
        int64_t v31 = result - v30;
        if (result - v30 == 0x8000000000000000 && v29 == -1) {
          goto LABEL_35;
        }
        uint64_t v33 = v31 / v29;
        v12[2] = v28;
        v12[3] = 2 * (v31 / v29);
        long long v34 = (char *)v12 + v30;
        uint64_t v35 = v19[3] >> 1;
        uint64_t v36 = v35 * v29;
        if (v19[2])
        {
          if (v12 < v19 || v34 >= (char *)v19 + v43 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        uint64_t v13 = (uint64_t)&v34[v36];
        uint64_t v38 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        uint64_t v20 = v44;
        BOOL v21 = __OFSUB__(v38, 1);
        uint64_t v15 = v38 - 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v14;
      uint64_t v8 = v45;
      sub_1C002DA70((uint64_t)v45, v13, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
      v13 += *(void *)(v50 + 72);
      v17 += v46;
      size_t v19 = v12;
      if (v47 == v14) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v39 = v12[3];
  if (v39 >= 2)
  {
    unint64_t v40 = v39 >> 1;
    BOOL v21 = __OFSUB__(v40, v15);
    uint64_t v41 = v40 - v15;
    if (v21) {
      goto LABEL_36;
    }
    v12[2] = v41;
  }
  return (size_t)v12;
}

size_t sub_1C0637124(uint64_t a1)
{
  sub_1BFEA5440(0, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v49 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v48 = (void *)((char *)v42 - v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v42 - v7;
  uint64_t v50 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  long long v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v47 = v11;
  v42[0] = a1;
  if (v11)
  {
    uint64_t v43 = (v10 + 32) & ~v10;
    uint64_t v13 = MEMORY[0x1E4FBC860] + v43;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for FeedPuzzleStatistic() - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    unint64_t v45 = v8;
    uint64_t v46 = v18;
    v42[1] = v10 | 7;
    size_t v19 = v12;
    uint64_t v20 = v44;
    while (1)
    {
      uint64_t v22 = (uint64_t)&v49[*(int *)(v20 + 48)];
      sub_1C063FDFC(v17, v22, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v23 = (uint64_t)v48;
      uint64_t v24 = (uint64_t)v48 + *(int *)(v20 + 48);
      *char v48 = v14;
      sub_1BFEA4850(v22, v24, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      size_t result = sub_1C002DA70(v23, (uint64_t)v8, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
      if (v15)
      {
        long long v12 = v19;
        BOOL v21 = __OFSUB__(v15--, 1);
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v26 = v19[3];
        if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v27;
        }
        sub_1BFEA578C(0, &qword_1EA19CA68, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v29 = *(void *)(v50 + 72);
        uint64_t v30 = v43;
        long long v12 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v12);
        if (!v29) {
          goto LABEL_34;
        }
        int64_t v31 = result - v30;
        if (result - v30 == 0x8000000000000000 && v29 == -1) {
          goto LABEL_35;
        }
        uint64_t v33 = v31 / v29;
        v12[2] = v28;
        v12[3] = 2 * (v31 / v29);
        long long v34 = (char *)v12 + v30;
        uint64_t v35 = v19[3] >> 1;
        uint64_t v36 = v35 * v29;
        if (v19[2])
        {
          if (v12 < v19 || v34 >= (char *)v19 + v43 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        uint64_t v13 = (uint64_t)&v34[v36];
        uint64_t v38 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        uint64_t v20 = v44;
        BOOL v21 = __OFSUB__(v38, 1);
        uint64_t v15 = v38 - 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v14;
      uint64_t v8 = v45;
      sub_1C002DA70((uint64_t)v45, v13, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
      v13 += *(void *)(v50 + 72);
      v17 += v46;
      size_t v19 = v12;
      if (v47 == v14) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v39 = v12[3];
  if (v39 >= 2)
  {
    unint64_t v40 = v39 >> 1;
    BOOL v21 = __OFSUB__(v40, v15);
    uint64_t v41 = v40 - v15;
    if (v21) {
      goto LABEL_36;
    }
    v12[2] = v41;
  }
  return (size_t)v12;
}

uint64_t sub_1C0637538(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    size_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t)(v2 + 4);
    uint64_t v25 = v1;
    uint64_t v6 = (void *)(result + 88);
    while (1)
    {
      char v7 = *((unsigned char *)v6 - 40);
      uint64_t v8 = *(v6 - 4);
      long long v9 = *(_OWORD *)(v6 - 3);
      uint64_t v10 = *(v6 - 1);
      uint64_t v11 = *v6;
      long long v27 = *(_OWORD *)(v6 - 7);
      long long v28 = v9;
      if (v3)
      {
        sub_1BFF7FF04(v8, v9);
        swift_bridgeObjectRetain();
        size_t result = swift_unknownObjectRetain();
        goto LABEL_20;
      }
      unint64_t v12 = v2[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_29;
      }
      char v26 = *((unsigned char *)v6 - 40);
      int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1) {
        uint64_t v14 = 1;
      }
      else {
        uint64_t v14 = v13;
      }
      sub_1BFEA578C(0, (unint64_t *)&qword_1EA19CA50, (uint64_t)&unk_1EA19CA58, (uint64_t)&type metadata for FeedPuzzleType, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
      uint64_t v15 = (void *)swift_allocObject();
      uint64_t v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 72;
      v15[2] = v14;
      v15[3] = 2 * v16;
      uint64_t v17 = v2[2];
      uint64_t v18 = v2;
      uint64_t v19 = v2[3] >> 1;
      uint64_t v5 = (uint64_t)&v15[9 * v19 + 4];
      uint64_t v3 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v19;
      if (!v17)
      {
        sub_1BFF7FF04(v8, v28);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        size_t result = swift_release();
        uint64_t v2 = v15;
        uint64_t v1 = v25;
        char v7 = v26;
        goto LABEL_20;
      }
      if (v15 < v18 || v15 + 4 >= &v18[9 * v19 + 4])
      {
        sub_1BFF7FF04(v8, v28);
      }
      else
      {
        sub_1BFF7FF04(v8, v28);
        if (v15 == v18) {
          goto LABEL_19;
        }
      }
      memmove(v15 + 4, v18 + 4, 72 * v19);
LABEL_19:
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v18[2] = 0;
      size_t result = swift_release();
      uint64_t v2 = v15;
      uint64_t v1 = v25;
      char v7 = v26;
LABEL_20:
      BOOL v21 = __OFSUB__(v3--, 1);
      if (v21)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        return result;
      }
      *(void *)uint64_t v5 = v4;
      *(_OWORD *)(v5 + 8) = v27;
      *(unsigned char *)(v5 + 24) = v7;
      *(void *)(v5 + 32) = v8;
      *(_OWORD *)(v5 + 40) = v28;
      *(void *)(v5 + 56) = v10;
      *(void *)(v5 + 64) = v11;
      v5 += 72;
      v6 += 8;
      if (v1 == ++v4)
      {
        size_t result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  uint64_t v3 = 0;
LABEL_24:
  unint64_t v22 = v2[3];
  if (v22 >= 2)
  {
    unint64_t v23 = v22 >> 1;
    BOOL v21 = __OFSUB__(v23, v3);
    uint64_t v24 = v23 - v3;
    if (v21) {
      goto LABEL_30;
    }
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

uint64_t sub_1C06377DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 32;
    uint64_t v7 = MEMORY[0x1E4FBC860] + 32;
    uint64_t v28 = v1;
    while (1)
    {
      uint64_t result = sub_1C01F09C0(v6, (uint64_t)v29);
      long long v40 = v29[10];
      long long v41 = v29[11];
      long long v42 = v29[12];
      long long v36 = v29[6];
      long long v37 = v29[7];
      long long v38 = v29[8];
      long long v39 = v29[9];
      long long v32 = v29[2];
      long long v33 = v29[3];
      long long v34 = v29[4];
      long long v35 = v29[5];
      long long v30 = v29[0];
      long long v31 = v29[1];
      if (!v5)
      {
        unint64_t v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_23;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_1BFEA578C(0, (unint64_t *)&qword_1EA19CA48, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
        unint64_t v12 = (void *)swift_allocObject();
        uint64_t v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 216;
        v12[2] = v11;
        v12[3] = 2 * v13;
        unint64_t v14 = (unint64_t)(v12 + 4);
        uint64_t v15 = v3[3] >> 1;
        if (v3[2])
        {
          uint64_t v16 = v3 + 4;
          if (v12 != v3 || v14 >= (unint64_t)v16 + 216 * v15) {
            memmove(v12 + 4, v16, 216 * v15);
          }
          v3[2] = 0;
        }
        uint64_t v7 = v14 + 216 * v15;
        uint64_t v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        uint64_t result = swift_release();
        uint64_t v3 = v12;
        uint64_t v1 = v28;
      }
      BOOL v17 = __OFSUB__(v5--, 1);
      if (v17) {
        break;
      }
      *(void *)uint64_t v7 = v4;
      long long v18 = v31;
      *(_OWORD *)(v7 + 8) = v30;
      long long v19 = v35;
      *(_OWORD *)(v7 + 72) = v34;
      long long v20 = v32;
      *(_OWORD *)(v7 + 56) = v33;
      *(_OWORD *)(v7 + 40) = v20;
      *(_OWORD *)(v7 + 24) = v18;
      long long v21 = v39;
      *(_OWORD *)(v7 + 136) = v38;
      long long v22 = v36;
      *(_OWORD *)(v7 + 120) = v37;
      *(_OWORD *)(v7 + 104) = v22;
      *(_OWORD *)(v7 + 88) = v19;
      long long v23 = v40;
      long long v24 = v41;
      *(_OWORD *)(v7 + 200) = v42;
      *(_OWORD *)(v7 + 184) = v24;
      *(_OWORD *)(v7 + 168) = v23;
      *(_OWORD *)(v7 + 152) = v21;
      v7 += 216;
      v6 += 208;
      if (v1 == ++v4) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v5 = 0;
LABEL_18:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v25 = v3[3];
  if (v25 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v26 = v25 >> 1;
  BOOL v17 = __OFSUB__(v26, v5);
  uint64_t v27 = v26 - v5;
  if (!v17)
  {
    v3[2] = v27;
    return (uint64_t)v3;
  }
LABEL_24:
  __break(1u);
  return result;
}

size_t sub_1C0637A48(uint64_t a1)
{
  sub_1BFEA5440(0, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v49 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v48 = (void *)((char *)v42 - v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v42 - v7;
  uint64_t v50 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v47 = v11;
  v42[0] = a1;
  if (v11)
  {
    uint64_t v43 = (v10 + 32) & ~v10;
    uint64_t v13 = MEMORY[0x1E4FBC860] + v43;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for FeedWebEmbed() - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    unint64_t v45 = v8;
    uint64_t v46 = v18;
    v42[1] = v10 | 7;
    long long v19 = v12;
    uint64_t v20 = v44;
    while (1)
    {
      uint64_t v22 = (uint64_t)&v49[*(int *)(v20 + 48)];
      sub_1C063FDFC(v17, v22, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v23 = (uint64_t)v48;
      uint64_t v24 = (uint64_t)v48 + *(int *)(v20 + 48);
      *char v48 = v14;
      sub_1BFEA4850(v22, v24, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      size_t result = sub_1C002DA70(v23, (uint64_t)v8, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
      if (v15)
      {
        unint64_t v12 = v19;
        BOOL v21 = __OFSUB__(v15--, 1);
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v26 = v19[3];
        if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v27;
        }
        sub_1BFEA578C(0, &qword_1EB86BC20, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v29 = *(void *)(v50 + 72);
        uint64_t v30 = v43;
        unint64_t v12 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v12);
        if (!v29) {
          goto LABEL_34;
        }
        int64_t v31 = result - v30;
        if (result - v30 == 0x8000000000000000 && v29 == -1) {
          goto LABEL_35;
        }
        uint64_t v33 = v31 / v29;
        v12[2] = v28;
        v12[3] = 2 * (v31 / v29);
        long long v34 = (char *)v12 + v30;
        uint64_t v35 = v19[3] >> 1;
        uint64_t v36 = v35 * v29;
        if (v19[2])
        {
          if (v12 < v19 || v34 >= (char *)v19 + v43 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        uint64_t v13 = (uint64_t)&v34[v36];
        uint64_t v38 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        uint64_t v20 = v44;
        BOOL v21 = __OFSUB__(v38, 1);
        uint64_t v15 = v38 - 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v14;
      uint64_t v8 = v45;
      sub_1C002DA70((uint64_t)v45, v13, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
      v13 += *(void *)(v50 + 72);
      v17 += v46;
      long long v19 = v12;
      if (v47 == v14) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v39 = v12[3];
  if (v39 >= 2)
  {
    unint64_t v40 = v39 >> 1;
    BOOL v21 = __OFSUB__(v40, v15);
    uint64_t v41 = v40 - v15;
    if (v21) {
      goto LABEL_36;
    }
    v12[2] = v41;
  }
  return (size_t)v12;
}

uint64_t sub_1C0637E5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 32;
    uint64_t v7 = MEMORY[0x1E4FBC860] + 32;
    while (1)
    {
      uint64_t result = sub_1BFEA435C(v6, (uint64_t)v29);
      long long v37 = v29[6];
      long long v38 = v29[7];
      long long v39 = v29[8];
      char v40 = v30;
      long long v33 = v29[2];
      long long v34 = v29[3];
      long long v35 = v29[4];
      long long v36 = v29[5];
      long long v31 = v29[0];
      long long v32 = v29[1];
      if (!v5)
      {
        unint64_t v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_1BFEA578C(0, (unint64_t *)&qword_1EB86BC18, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
        unint64_t v12 = (void *)swift_allocObject();
        uint64_t v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 160;
        v12[2] = v11;
        v12[3] = 2 * v13;
        unint64_t v14 = (unint64_t)(v12 + 4);
        uint64_t v15 = v3[3] >> 1;
        uint64_t v16 = 20 * v15;
        if (v3[2])
        {
          if (v12 != v3 || v14 >= (unint64_t)&v3[v16 + 4]) {
            memmove(v12 + 4, v3 + 4, 160 * v15);
          }
          v3[2] = 0;
        }
        uint64_t v7 = v14 + v16 * 8;
        uint64_t v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        uint64_t result = swift_release();
        uint64_t v3 = v12;
      }
      BOOL v18 = __OFSUB__(v5--, 1);
      if (v18) {
        break;
      }
      *(void *)uint64_t v7 = v4;
      long long v19 = v37;
      long long v20 = v38;
      long long v21 = v39;
      *(unsigned char *)(v7 + 152) = v40;
      long long v22 = v31;
      *(_OWORD *)(v7 + 24) = v32;
      *(_OWORD *)(v7 + 8) = v22;
      long long v23 = v33;
      long long v24 = v34;
      long long v25 = v35;
      *(_OWORD *)(v7 + 88) = v36;
      *(_OWORD *)(v7 + 72) = v25;
      *(_OWORD *)(v7 + 56) = v24;
      *(_OWORD *)(v7 + 40) = v23;
      *(_OWORD *)(v7 + 136) = v21;
      *(_OWORD *)(v7 + 120) = v20;
      *(_OWORD *)(v7 + 104) = v19;
      v7 += 160;
      v6 += 152;
      if (v1 == ++v4) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v5 = 0;
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v26 = v3[3];
  if (v26 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v27 = v26 >> 1;
  BOOL v18 = __OFSUB__(v27, v5);
  uint64_t v28 = v27 - v5;
  if (!v18)
  {
    v3[2] = v28;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0638098(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v7 = (void *)(MEMORY[0x1E4FBC860] + 32);
LABEL_3:
  unint64_t v9 = *(void *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_35:
      __break(1u);
    }
    else
    {
      while (1)
      {
        uint64_t v10 = *(void *)(v2 + 8 * v5);
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        if (v10)
        {
          unint64_t v8 = *(void *)(v10 + 16);
          if (v8) {
            break;
          }
        }
        ++v5;
        unint64_t v11 = *(void *)(a1 + 16);
        if (v5 == v11) {
          goto LABEL_31;
        }
        if (v5 >= v11) {
          goto LABEL_35;
        }
      }
      unint64_t v12 = 0;
      ++v5;
      while (v12 < v8)
      {
        uint64_t v13 = (void *)(v10 + 24 * v12);
        uint64_t v14 = v13[5];
        uint64_t v28 = v13[4];
        uint64_t v29 = v13[6];
        if (v4)
        {
          swift_bridgeObjectRetain();
          uint64_t result = swift_bridgeObjectRetain();
          uint64_t v15 = v6;
          BOOL v16 = __OFSUB__(v4--, 1);
          if (v16) {
            goto LABEL_37;
          }
        }
        else
        {
          unint64_t v17 = v6[3];
          if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_38;
          }
          int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
          if (v18 <= 1) {
            uint64_t v19 = 1;
          }
          else {
            uint64_t v19 = v18;
          }
          sub_1BFEA0118(0, (unint64_t *)&unk_1EA1B09A0, (uint64_t)&type metadata for DebugJournalGroupSection, MEMORY[0x1E4FBBE00]);
          uint64_t v15 = (void *)swift_allocObject();
          uint64_t v20 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 24;
          v15[2] = v19;
          v15[3] = 2 * v20;
          long long v21 = v15 + 4;
          uint64_t v22 = v6[3] >> 1;
          uint64_t v7 = &v15[3 * v22 + 4];
          uint64_t v23 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
          if (v6[2])
          {
            if (v15 != v6 || v21 >= &v6[3 * v22 + 4]) {
              memmove(v21, v6 + 4, 24 * v22);
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v6[2] = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t result = swift_release();
          BOOL v16 = __OFSUB__(v23, 1);
          uint64_t v4 = v23 - 1;
          if (v16) {
            goto LABEL_37;
          }
        }
        ++v12;
        void *v7 = v28;
        v7[1] = v14;
        v7[2] = v29;
        v7 += 3;
        uint64_t v6 = v15;
        unint64_t v8 = *(void *)(v10 + 16);
        if (v12 == v8) {
          goto LABEL_3;
        }
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v25 = v6[3];
  if (v25 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v26 = v25 >> 1;
  BOOL v16 = __OFSUB__(v26, v4);
  uint64_t v27 = v26 - v4;
  if (!v16)
  {
    v6[2] = v27;
    return (uint64_t)v6;
  }
LABEL_39:
  __break(1u);
  return result;
}

size_t sub_1C0638314(uint64_t a1)
{
  sub_1BFEA5440(0, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v49 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v48 = (void *)((char *)v42 - v5);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)v42 - v7;
  uint64_t v50 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v47 = v11;
  v42[0] = a1;
  if (v11)
  {
    uint64_t v43 = (v10 + 32) & ~v10;
    uint64_t v13 = MEMORY[0x1E4FBC860] + v43;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for FeedEngagementBanner() - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    unint64_t v45 = v8;
    uint64_t v46 = v18;
    v42[1] = v10 | 7;
    uint64_t v19 = v12;
    uint64_t v20 = v44;
    while (1)
    {
      uint64_t v22 = (uint64_t)&v49[*(int *)(v20 + 48)];
      sub_1C063FDFC(v17, v22, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      uint64_t v23 = (uint64_t)v48;
      uint64_t v24 = (uint64_t)v48 + *(int *)(v20 + 48);
      *char v48 = v14;
      sub_1BFEA4850(v22, v24, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      size_t result = sub_1C002DA70(v23, (uint64_t)v8, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
      if (v15)
      {
        unint64_t v12 = v19;
        BOOL v21 = __OFSUB__(v15--, 1);
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v26 = v19[3];
        if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v27;
        }
        sub_1BFEA578C(0, (unint64_t *)&unk_1EA19C4B0, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v29 = *(void *)(v50 + 72);
        uint64_t v30 = v43;
        unint64_t v12 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v12);
        if (!v29) {
          goto LABEL_34;
        }
        int64_t v31 = result - v30;
        if (result - v30 == 0x8000000000000000 && v29 == -1) {
          goto LABEL_35;
        }
        uint64_t v33 = v31 / v29;
        v12[2] = v28;
        v12[3] = 2 * (v31 / v29);
        long long v34 = (char *)v12 + v30;
        uint64_t v35 = v19[3] >> 1;
        uint64_t v36 = v35 * v29;
        if (v19[2])
        {
          if (v12 < v19 || v34 >= (char *)v19 + v43 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        uint64_t v13 = (uint64_t)&v34[v36];
        uint64_t v38 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        uint64_t v20 = v44;
        BOOL v21 = __OFSUB__(v38, 1);
        uint64_t v15 = v38 - 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v14;
      unint64_t v8 = v45;
      sub_1C002DA70((uint64_t)v45, v13, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
      v13 += *(void *)(v50 + 72);
      v17 += v46;
      uint64_t v19 = v12;
      if (v47 == v14) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v39 = v12[3];
  if (v39 >= 2)
  {
    unint64_t v40 = v39 >> 1;
    BOOL v21 = __OFSUB__(v40, v15);
    uint64_t v41 = v40 - v15;
    if (v21) {
      goto LABEL_36;
    }
    v12[2] = v41;
  }
  return (size_t)v12;
}

uint64_t sub_1C0638728(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = result;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v25 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v7 = MEMORY[0x1E4FBC860] + 32;
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v23 = v1;
    while (1)
    {
      size_t result = *(void *)(v3 + v4 + 40);
      uint64_t v29 = *(void *)(v3 + v4 + 32);
      long long v30 = *(_OWORD *)(v3 + v4 + 48);
      char v28 = *(unsigned char *)(v3 + v4 + 64);
      uint64_t v8 = *(void *)(v3 + v4 + 96);
      uint64_t v26 = *(void *)(v3 + v4 + 88);
      uint64_t v27 = *(void *)(v3 + v4 + 72);
      uint64_t v9 = *(void *)(v3 + v4 + 104);
      unint64_t v10 = *(void *)(v3 + v4 + 112);
      uint64_t v31 = result;
      uint64_t v32 = *(void *)(v3 + v4 + 80);
      if (v5)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        size_t result = sub_1BFF7FF04(v9, v10);
        BOOL v11 = __OFSUB__(v5--, 1);
        if (v11) {
          goto LABEL_30;
        }
        goto LABEL_23;
      }
      unint64_t v12 = v25[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_31;
      }
      int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1) {
        uint64_t v14 = 1;
      }
      else {
        uint64_t v14 = v13;
      }
      sub_1BFEA578C(0, (unint64_t *)&qword_1EA19C540, (uint64_t)&qword_1EA19C548, (uint64_t)&type metadata for FeedGapOffline, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
      uint64_t v15 = (void *)swift_allocObject();
      uint64_t v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 96;
      v15[2] = v14;
      v15[3] = 2 * v16;
      uint64_t v17 = v25[3] >> 1;
      uint64_t v7 = (uint64_t)&v15[12 * v17 + 4];
      uint64_t v18 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v17;
      if (!v25[2])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v9, v10);
        goto LABEL_22;
      }
      if (v15 < v25 || v15 + 4 >= &v25[12 * v17 + 4])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v9, v10);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v9, v10);
        if (v15 == v25) {
          goto LABEL_21;
        }
      }
      memmove(v15 + 4, v25 + 4, 96 * v17);
LABEL_21:
      v25[2] = 0;
LABEL_22:
      size_t result = swift_release();
      unint64_t v25 = v15;
      uint64_t v1 = v23;
      uint64_t v3 = v24;
      BOOL v11 = __OFSUB__(v18, 1);
      uint64_t v5 = v18 - 1;
      if (v11)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
LABEL_23:
      *(void *)uint64_t v7 = v6;
      *(void *)(v7 + 8) = v29;
      *(void *)(v7 + 16) = v31;
      *(_OWORD *)(v7 + 24) = v30;
      *(unsigned char *)(v7 + 40) = v28;
      *(void *)(v7 + 48) = v27;
      *(void *)(v7 + 56) = v32;
      *(void *)(v7 + 64) = v26;
      *(void *)(v7 + 72) = v8;
      *(void *)(v7 + 80) = v9;
      *(void *)(v7 + 88) = v10;
      v7 += 96;
      v4 += 88;
      if (v1 == ++v6)
      {
        size_t result = swift_bridgeObjectRelease();
        uint64_t v2 = v25;
        goto LABEL_26;
      }
    }
  }
  uint64_t v5 = 0;
LABEL_26:
  unint64_t v20 = v2[3];
  if (v20 >= 2)
  {
    unint64_t v21 = v20 >> 1;
    BOOL v11 = __OFSUB__(v21, v5);
    uint64_t v22 = v21 - v5;
    if (v11) {
      goto LABEL_32;
    }
    v2[2] = v22;
  }
  return (uint64_t)v2;
}

uint64_t sub_1C0638A10(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    size_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t)(v2 + 4);
    uint64_t v25 = v1;
    uint64_t v6 = (unint64_t *)(result + 80);
    while (1)
    {
      uint64_t v8 = *(v6 - 6);
      uint64_t v7 = *(v6 - 5);
      long long v30 = *((_OWORD *)v6 - 2);
      char v29 = *((unsigned char *)v6 - 16);
      uint64_t v9 = *(v6 - 1);
      unint64_t v10 = *v6;
      if (v3)
      {
        swift_bridgeObjectRetain();
        size_t result = sub_1BFF7FF04(v9, v10);
        BOOL v11 = __OFSUB__(v3--, 1);
        if (v11) {
          goto LABEL_30;
        }
        goto LABEL_23;
      }
      unint64_t v12 = v2[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_31;
      }
      uint64_t v28 = *(v6 - 6);
      int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1) {
        uint64_t v14 = 1;
      }
      else {
        uint64_t v14 = v13;
      }
      sub_1BFEA578C(0, (unint64_t *)&qword_1EA19C528, (uint64_t)&unk_1EA19C530, (uint64_t)&type metadata for FeedGap, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
      uint64_t v15 = (void *)swift_allocObject();
      int64_t v16 = _swift_stdlib_malloc_size(v15);
      uint64_t v17 = v16 - 32;
      if (v16 < 32) {
        uint64_t v17 = v16 + 31;
      }
      uint64_t v18 = v17 >> 6;
      v15[2] = v14;
      v15[3] = 2 * v18;
      uint64_t v19 = v2[3] >> 1;
      uint64_t v5 = (uint64_t)&v15[8 * v19 + 4];
      uint64_t v20 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v19;
      if (!v2[2])
      {
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v9, v10);
        goto LABEL_22;
      }
      __src = v2 + 4;
      uint64_t v27 = v2;
      if (v15 < v2 || v15 + 4 >= &v2[8 * v19 + 4])
      {
        unint64_t v21 = v15 + 4;
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v9, v10);
      }
      else
      {
        unint64_t v21 = v15 + 4;
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v9, v10);
        if (v15 == v27) {
          goto LABEL_21;
        }
      }
      memmove(v21, __src, v19 << 6);
LABEL_21:
      v27[2] = 0;
LABEL_22:
      size_t result = swift_release();
      uint64_t v2 = v15;
      uint64_t v1 = v25;
      uint64_t v8 = v28;
      BOOL v11 = __OFSUB__(v20, 1);
      uint64_t v3 = v20 - 1;
      if (v11)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
LABEL_23:
      v6 += 7;
      *(void *)uint64_t v5 = v4;
      *(void *)(v5 + 8) = v8;
      *(void *)(v5 + 16) = v7;
      *(_OWORD *)(v5 + 24) = v30;
      *(unsigned char *)(v5 + 40) = v29;
      *(void *)(v5 + 48) = v9;
      *(void *)(v5 + 56) = v10;
      v5 += 64;
      if (v1 == ++v4)
      {
        size_t result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  uint64_t v3 = 0;
LABEL_26:
  unint64_t v22 = v2[3];
  if (v22 >= 2)
  {
    unint64_t v23 = v22 >> 1;
    BOOL v11 = __OFSUB__(v23, v3);
    uint64_t v24 = v23 - v3;
    if (v11) {
      goto LABEL_32;
    }
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

uint64_t sub_1C0638C70(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_46;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_53;
      }
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v7 = (void *)(MEMORY[0x1E4FBC860] + 32);
      while (1)
      {
        uint64_t v8 = MEMORY[0x1C18C7CB0](v5, a1);
        if (!v4)
        {
          unint64_t v9 = *((void *)v6 + 3);
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_44;
          }
          int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1) {
            uint64_t v11 = 1;
          }
          else {
            uint64_t v11 = v10;
          }
          sub_1BFEA578C(0, &qword_1EA19C4D8, (uint64_t)&unk_1EA19C4E0, MEMORY[0x1E4FABC38], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
          unint64_t v12 = (char *)swift_allocObject();
          int64_t v13 = _swift_stdlib_malloc_size(v12);
          uint64_t v14 = v13 - 32;
          if (v13 < 32) {
            uint64_t v14 = v13 - 17;
          }
          uint64_t v15 = v14 >> 4;
          *((void *)v12 + 2) = v11;
          *((void *)v12 + 3) = 2 * (v14 >> 4);
          unint64_t v16 = (unint64_t)(v12 + 32);
          uint64_t v17 = *((void *)v6 + 3) >> 1;
          if (*((void *)v6 + 2))
          {
            uint64_t v18 = v6 + 32;
            if (v12 != v6 || v16 >= (unint64_t)v18 + 16 * v17) {
              memmove(v12 + 32, v18, 16 * v17);
            }
            *((void *)v6 + 2) = 0;
          }
          uint64_t v7 = (void *)(v16 + 16 * v17);
          uint64_t v4 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release();
          uint64_t v6 = v12;
        }
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          break;
        }
        void *v7 = v5;
        v7[1] = v8;
        v7 += 2;
        if (v2 == ++v5) {
          goto LABEL_41;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C15204BC();
      uint64_t v2 = result;
      if (!result) {
        goto LABEL_47;
      }
    }
    uint64_t v4 = 0;
    uint64_t v20 = 0;
    uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v21 = (char *)(MEMORY[0x1E4FBC860] + 32);
    do
    {
      uint64_t v22 = *(void *)(a1 + 8 * v20 + 32);
      if (v4)
      {
        swift_retain();
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          goto LABEL_43;
        }
      }
      else
      {
        unint64_t v23 = *((void *)v6 + 3);
        if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_45;
        }
        int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1) {
          uint64_t v25 = 1;
        }
        else {
          uint64_t v25 = v24;
        }
        sub_1BFEA578C(0, &qword_1EA19C4D8, (uint64_t)&unk_1EA19C4E0, MEMORY[0x1E4FABC38], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v26 = (char *)swift_allocObject();
        int64_t v27 = _swift_stdlib_malloc_size(v26);
        uint64_t v28 = v27 - 32;
        if (v27 < 32) {
          uint64_t v28 = v27 - 17;
        }
        uint64_t v29 = v28 >> 4;
        *((void *)v26 + 2) = v25;
        *((void *)v26 + 3) = 2 * (v28 >> 4);
        long long v30 = v26 + 32;
        uint64_t v31 = *((void *)v6 + 3) >> 1;
        unint64_t v21 = &v26[16 * v31 + 32];
        uint64_t v32 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
        if (*((void *)v6 + 2))
        {
          uint64_t v33 = v6 + 32;
          if (v26 != v6 || v30 >= &v33[16 * v31]) {
            memmove(v30, v33, 16 * v31);
          }
          swift_retain();
          *((void *)v6 + 2) = 0;
        }
        else
        {
          swift_retain();
        }
        swift_release();
        uint64_t v6 = v26;
        BOOL v19 = __OFSUB__(v32, 1);
        uint64_t v4 = v32 - 1;
        if (v19) {
          goto LABEL_43;
        }
      }
      *(void *)unint64_t v21 = v20;
      *((void *)v21 + 1) = v22;
      v21 += 16;
      ++v20;
    }
    while (v2 != v20);
LABEL_41:
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v34 = *((void *)v6 + 3);
  if (v34 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v35 = v34 >> 1;
  BOOL v19 = __OFSUB__(v35, v4);
  uint64_t v36 = v35 - v4;
  if (!v19)
  {
    *((void *)v6 + 2) = v36;
    return (uint64_t)v6;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1C0638FC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 32;
    uint64_t v7 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v22 = v1;
    while (1)
    {
      sub_1C024A070(v6, (uint64_t)v23);
      __src[0] = v4;
      sub_1C063FFF4((uint64_t)v23, (uint64_t)&__src[1]);
      uint64_t result = (uint64_t)memcpy(__dst, __src, sizeof(__dst));
      if (!v5)
      {
        unint64_t v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_1BFEA578C(0, (unint64_t *)&qword_1EA19C500, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
        unint64_t v12 = (void *)swift_allocObject();
        uint64_t v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 296;
        v12[2] = v11;
        v12[3] = 2 * v13;
        unint64_t v14 = (unint64_t)(v12 + 4);
        uint64_t v15 = v3[3] >> 1;
        size_t v16 = 296 * v15;
        if (v3[2])
        {
          if (v12 != v3 || v14 >= (unint64_t)&v3[v16 / 8 + 4]) {
            memmove(v12 + 4, v3 + 4, v16);
          }
          v3[2] = 0;
        }
        uint64_t v7 = (char *)(v14 + v16);
        uint64_t v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        uint64_t result = swift_release();
        uint64_t v3 = v12;
        uint64_t v1 = v22;
      }
      BOOL v18 = __OFSUB__(v5--, 1);
      if (v18) {
        break;
      }
      ++v4;
      memcpy(v7, __dst, 0x122uLL);
      v7 += 296;
      v6 += 288;
      if (v1 == v4) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v5 = 0;
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v19 = v3[3];
  if (v19 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v20 = v19 >> 1;
  BOOL v18 = __OFSUB__(v20, v5);
  uint64_t v21 = v20 - v5;
  if (!v18)
  {
    v3[2] = v21;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C06391C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 32;
    uint64_t v7 = MEMORY[0x1E4FBC860] + 32;
    while (1)
    {
      uint64_t result = sub_1C0249E84(v6, (uint64_t)v28);
      long long v36 = v28[6];
      long long v37 = v28[7];
      long long v38 = v28[8];
      uint64_t v39 = v29;
      long long v32 = v28[2];
      long long v33 = v28[3];
      long long v34 = v28[4];
      long long v35 = v28[5];
      long long v30 = v28[0];
      long long v31 = v28[1];
      if (!v5)
      {
        unint64_t v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_1BFEA578C(0, (unint64_t *)&qword_1EA19C4C0, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C064267C);
        unint64_t v12 = (void *)swift_allocObject();
        uint64_t v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 160;
        v12[2] = v11;
        v12[3] = 2 * v13;
        unint64_t v14 = (unint64_t)(v12 + 4);
        uint64_t v15 = v3[3] >> 1;
        if (v3[2])
        {
          if (v12 != v3 || v14 >= (unint64_t)&v3[20 * v15 + 4]) {
            memmove(v12 + 4, v3 + 4, 160 * v15);
          }
          v3[2] = 0;
        }
        uint64_t v7 = v14 + 160 * v15;
        uint64_t v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        uint64_t result = swift_release();
        uint64_t v3 = v12;
      }
      BOOL v17 = __OFSUB__(v5--, 1);
      if (v17) {
        break;
      }
      *(void *)uint64_t v7 = v4;
      long long v18 = v36;
      long long v19 = v37;
      long long v20 = v38;
      *(void *)(v7 + 152) = v39;
      long long v21 = v30;
      *(_OWORD *)(v7 + 24) = v31;
      *(_OWORD *)(v7 + 8) = v21;
      long long v22 = v32;
      long long v23 = v33;
      long long v24 = v34;
      *(_OWORD *)(v7 + 88) = v35;
      *(_OWORD *)(v7 + 72) = v24;
      *(_OWORD *)(v7 + 56) = v23;
      *(_OWORD *)(v7 + 40) = v22;
      *(_OWORD *)(v7 + 136) = v20;
      *(_OWORD *)(v7 + 120) = v19;
      *(_OWORD *)(v7 + 104) = v18;
      v7 += 160;
      v6 += 152;
      if (v1 == ++v4) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v5 = 0;
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v25 = v3[3];
  if (v25 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v26 = v25 >> 1;
  BOOL v17 = __OFSUB__(v26, v5);
  uint64_t v27 = v26 - v5;
  if (!v17)
  {
    v3[2] = v27;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupLayoutBindingContext(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    long long v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    uint64_t v8 = a2[7];
    *(void *)(v4 + 48) = a2[6];
    *(void *)(v4 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(v4 + 64) = a2[8];
    *(void *)(v4 + 72) = v9;
    *(void *)(v4 + 80) = a2[10];
    *(unsigned char *)(v4 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v10 = a3[13];
    uint64_t v18 = (uint64_t)a2 + v10;
    uint64_t v19 = v4 + v10;
    *(void *)(v4 + 96) = a2[12];
    uint64_t v11 = sub_1C151787C();
    BOOL v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v19, v18, v11);
    uint64_t v12 = a3[15];
    *(void *)(v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(void *)(v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[17];
    *(unsigned char *)(v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *(void *)(v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[19];
    *(void *)(v4 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    *(void *)(v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t assignWithCopy for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[13];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  return a1;
}

uint64_t initializeWithTake for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v11 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[13];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_1C06399C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151787C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0639A74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151787C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void *assignWithCopy for GroupLayoutBindingContext.OrderedItemBinding(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  return a1;
}

uint64_t assignWithTake for GroupLayoutBindingContext.OrderedItemBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for GroupLayoutBindingContext.OrderedItemBinding()
{
  return &type metadata for GroupLayoutBindingContext.OrderedItemBinding;
}

uint64_t sub_1C0639C08(uint64_t a1, _OWORD *a2, uint64_t a3, _OWORD *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  long long v6 = a2[4];
  long long v44 = a2[5];
  long long v7 = a2[5];
  long long v45 = a2[6];
  long long v8 = a2[6];
  v46[0] = a2[7];
  *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)((char *)a2 + 121);
  long long v9 = a2[1];
  long long v10 = a2[3];
  long long v41 = a2[2];
  long long v42 = v10;
  long long v11 = a2[3];
  long long v43 = a2[4];
  long long v12 = a2[1];
  v40[0] = *a2;
  v40[1] = v12;
  long long v13 = a4[6];
  long long v14 = a4[4];
  long long v51 = a4[5];
  long long v52 = v13;
  long long v15 = a4[6];
  v53[0] = a4[7];
  *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)((char *)a4 + 121);
  long long v16 = a4[1];
  long long v17 = a4[3];
  long long v48 = a4[2];
  long long v49 = v17;
  long long v18 = a4[3];
  long long v50 = a4[4];
  long long v19 = a4[1];
  v47[0] = *a4;
  v47[1] = v19;
  long long v37 = v7;
  long long v38 = v8;
  v39[0] = a2[7];
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)a2 + 121);
  long long v33 = v9;
  long long v34 = v41;
  long long v35 = v11;
  long long v36 = v6;
  long long v32 = v40[0];
  long long v28 = v51;
  long long v29 = v15;
  v30[0] = a4[7];
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)a4 + 121);
  long long v24 = v16;
  long long v25 = v48;
  long long v26 = v18;
  long long v27 = v14;
  uint64_t v31 = a1;
  uint64_t v22 = a3;
  long long v23 = v47[0];
  sub_1C0187FB0((uint64_t)v40);
  sub_1C0187FB0((uint64_t)v47);
  a5(&v21, &v31, &v22);
  sub_1C01880A4((uint64_t)v47);
  sub_1C01880A4((uint64_t)v40);
  return v21;
}

uint64_t sub_1C0639D60(uint64_t a1, long long *a2, uint64_t a3, long long *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  char v6 = *((unsigned char *)a2 + 16);
  uint64_t v7 = *((void *)a2 + 3);
  uint64_t v8 = *((void *)a2 + 6);
  uint64_t v9 = *((void *)a2 + 7);
  char v10 = *((unsigned char *)a4 + 16);
  uint64_t v11 = *((void *)a4 + 3);
  uint64_t v12 = *((void *)a4 + 6);
  uint64_t v23 = *((void *)a4 + 7);
  uint64_t v24 = a1;
  long long v25 = *a2;
  char v26 = v6;
  uint64_t v27 = v7;
  long long v28 = a2[2];
  uint64_t v29 = v8;
  uint64_t v30 = v9;
  uint64_t v17 = a3;
  long long v18 = *a4;
  char v19 = v10;
  uint64_t v20 = v11;
  long long v21 = a4[2];
  unint64_t v15 = v21;
  unint64_t v13 = v28;
  uint64_t v22 = v12;
  sub_1BFF7FF04(v7, v28);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BFF7FF04(v11, v21);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  a5(&v16, &v24, &v17);
  sub_1BFEEFC20(v11, v15);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v7, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C0639EA0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(unsigned __int8 *__return_ptr, void *, void *))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  char v7 = *((unsigned char *)a2 + 32);
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v12 = a2[9];
  unint64_t v13 = a2[10];
  uint64_t v14 = *a4;
  uint64_t v15 = a4[1];
  char v16 = *((unsigned char *)a4 + 32);
  uint64_t v17 = a4[5];
  uint64_t v18 = a4[6];
  uint64_t v19 = a4[7];
  uint64_t v20 = a4[8];
  uint64_t v21 = a4[9];
  unint64_t v22 = a4[10];
  v35[0] = a1;
  v35[1] = v5;
  v35[2] = v6;
  long long v36 = *((_OWORD *)a2 + 1);
  char v37 = v7;
  uint64_t v38 = v8;
  uint64_t v39 = v9;
  uint64_t v40 = v10;
  uint64_t v41 = v11;
  uint64_t v42 = v12;
  unint64_t v43 = v13;
  v26[0] = a3;
  v26[1] = v14;
  v26[2] = v15;
  long long v27 = *((_OWORD *)a4 + 1);
  char v28 = v16;
  uint64_t v29 = v17;
  uint64_t v30 = v18;
  uint64_t v31 = v19;
  uint64_t v32 = v20;
  uint64_t v33 = v21;
  unint64_t v34 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v12, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v21, v22);
  a5(&v25, v35, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v12, v13);
  return v25;
}

uint64_t sub_1C063A008(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(unsigned __int8 *__return_ptr, void *, void *))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 32);
  uint64_t v9 = a2[5];
  unint64_t v10 = a2[6];
  uint64_t v11 = *a4;
  uint64_t v12 = a4[1];
  char v13 = *((unsigned char *)a4 + 32);
  uint64_t v14 = a4[5];
  unint64_t v15 = a4[6];
  v23[0] = a1;
  v23[1] = v6;
  v23[2] = v7;
  long long v24 = *((_OWORD *)a2 + 1);
  char v25 = v8;
  uint64_t v26 = v9;
  unint64_t v27 = v10;
  v18[0] = a3;
  v18[1] = v11;
  v18[2] = v12;
  long long v19 = *((_OWORD *)a4 + 1);
  char v20 = v13;
  uint64_t v21 = v14;
  unint64_t v22 = v15;
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v9, v10);
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v14, v15);
  a5(&v17, v23, v18);
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v14, v15);
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v9, v10);
  return v17;
}

uint64_t sub_1C063A0FC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(unsigned __int8 *__return_ptr, void *, void *))
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a4;
  v11[0] = a1;
  v11[1] = v6;
  v10[0] = a3;
  v10[1] = v7;
  swift_retain();
  swift_retain();
  a5(&v9, v11, v10);
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_1C063A178(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t *, uint64_t, uint64_t *))
{
  if (a3 != a2)
  {
    uint64_t v5 = result;
    uint64_t v6 = *a4;
    uint64_t v7 = (void *)(*a4 + 16 * a3);
    uint64_t v15 = result;
LABEL_4:
    char v8 = (uint64_t *)(v6 + 16 * a3);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    unsigned __int8 v17 = v7;
    uint64_t v18 = a3;
    while (1)
    {
      uint64_t v11 = *(v7 - 2);
      uint64_t v12 = *(v7 - 1);
      uint64_t v22 = v10;
      uint64_t v21 = v12;
      swift_retain();
      swift_retain();
      char v13 = a5(v9, &v22, v11, &v21);
      swift_release();
      uint64_t result = swift_release();
      if (v20) {
        break;
      }
      if ((v13 & 1) == 0)
      {
        uint64_t v14 = v18;
LABEL_11:
        a3 = v14 + 1;
        uint64_t v7 = v17 + 2;
        uint64_t v5 = v15;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      if (!v6)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *v7;
      uint64_t v10 = v7[1];
      *(_OWORD *)uint64_t v7 = *((_OWORD *)v7 - 1);
      *(v7 - 1) = v10;
      *(v7 - 2) = v9;
      v7 -= 2;
      ++v5;
      uint64_t v14 = v18;
      if (v18 == v5) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C063A2A0(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t *, uint64_t, uint64_t *))
{
  uint64_t v3 = v2;
  uint64_t v5 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_139;
    }
    if (v5) {
      return sub_1C063A178(0, v5, 1, a1, a2);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_148;
  }
  uint64_t v109 = result;
  uint64_t v105 = a1;
  if (v5 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    v114 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v110 = MEMORY[0x1E4FBC860];
    if (v5 != 1)
    {
      unint64_t v37 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_102:
      if (v37 >= 2)
      {
        uint64_t v95 = *v105;
        do
        {
          unint64_t v96 = v37 - 2;
          if (v37 < 2) {
            goto LABEL_134;
          }
          if (!v95) {
            goto LABEL_147;
          }
          uint64_t v97 = v10;
          uint64_t v98 = v10 + 32;
          uint64_t v99 = *(void *)&v10[16 * v96 + 32];
          uint64_t v100 = *(void *)&v10[16 * v37 + 24];
          sub_1C0633FF0((char *)(v95 + 16 * v99), (char *)(v95 + 16 * *(void *)&v98[16 * v37 - 16]), v95 + 16 * v100, v114, a2);
          if (v3) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1C063604C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_136;
          }
          uint64_t v101 = &v97[16 * v96 + 32];
          *(void *)uint64_t v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v97 + 2);
          if (v37 > v102) {
            goto LABEL_137;
          }
          uint64_t v10 = v97;
          memmove(&v97[16 * v37 + 16], &v97[16 * v37 + 32], 16 * (v102 - v37));
          *((void *)v97 + 2) = v102 - 1;
          unint64_t v37 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
LABEL_116:
      *(void *)(v110 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    sub_1BFEA5440(0, (unint64_t *)&unk_1EA19C4E0, MEMORY[0x1E4FABC38]);
    uint64_t v9 = sub_1C151ECCC();
    *(void *)(v9 + 16) = v8;
    uint64_t v110 = v9;
    v114 = (char *)(v9 + 32);
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v106 = *a1 + 24;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v111 = v5;
  uint64_t v115 = *a1;
  while (1)
  {
    uint64_t v13 = v11 + 1;
    if (v11 + 1 < v5)
    {
      uint64_t v14 = (uint64_t *)(v12 + 16 * v13);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      unsigned __int8 v17 = (uint64_t *)(v12 + 16 * v11);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      uint64_t v118 = v16;
      uint64_t v117 = v19;
      swift_retain();
      swift_retain();
      int v112 = a2(v15, &v118, v18, &v117);
      if (v3)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_116;
      }
      swift_release();
      swift_release();
      uint64_t v13 = v11 + 2;
      uint64_t v5 = v111;
      if (v11 + 2 < v111)
      {
        uint64_t v107 = v11;
        uint64_t v20 = (void *)(v106 + 16 * v11);
        uint64_t v21 = v20;
        while (1)
        {
          uint64_t v22 = v13;
          uint64_t v23 = v21[2];
          v21 += 2;
          uint64_t v24 = *(v20 - 1);
          uint64_t v25 = *v20;
          uint64_t v26 = v20[1];
          uint64_t v118 = v23;
          uint64_t v117 = v25;
          swift_retain();
          swift_retain();
          LODWORD(v26) = a2(v26, &v118, v24, &v117);
          swift_release();
          swift_release();
          if ((v112 ^ v26)) {
            break;
          }
          ++v13;
          uint64_t v20 = v21;
          uint64_t v5 = v111;
          if (v111 == v22 + 1)
          {
            uint64_t v13 = v111;
            goto LABEL_21;
          }
        }
        uint64_t v5 = v111;
LABEL_21:
        uint64_t v3 = 0;
        uint64_t v11 = v107;
      }
      uint64_t v12 = v115;
      if (v112)
      {
        if (v13 < v11) {
          goto LABEL_143;
        }
        if (v11 < v13)
        {
          uint64_t v27 = 16 * v13;
          uint64_t v28 = 16 * v11;
          uint64_t v29 = v13;
          uint64_t v30 = v11;
          do
          {
            if (v30 != --v29)
            {
              if (!v115) {
                goto LABEL_146;
              }
              uint64_t v31 = v115 + v27;
              uint64_t v32 = *(void *)(v115 + v28);
              uint64_t v33 = *(void *)(v115 + v28 + 8);
              *(_OWORD *)(v115 + v28) = *(_OWORD *)(v115 + v27 - 16);
              *(void *)(v31 - 16) = v32;
              *(void *)(v31 - 8) = v33;
            }
            ++v30;
            v27 -= 16;
            v28 += 16;
          }
          while (v30 < v29);
        }
      }
    }
    if (v13 >= v5) {
      goto LABEL_39;
    }
    if (__OFSUB__(v13, v11)) {
      goto LABEL_140;
    }
    if (v13 - v11 >= v109) {
      goto LABEL_39;
    }
    uint64_t v34 = v11 + v109;
    if (__OFADD__(v11, v109)) {
      goto LABEL_141;
    }
    if (v34 >= v5) {
      uint64_t v34 = v5;
    }
    if (v34 < v11) {
      break;
    }
    if (v13 != v34)
    {
      uint64_t v103 = v34;
      long long v86 = (void *)(v12 + 16 * v13);
      uint64_t v108 = v11;
      do
      {
        uint64_t v87 = (uint64_t *)(v12 + 16 * v13);
        uint64_t v88 = *v87;
        uint64_t v89 = v87[1];
        uint64_t v104 = v86;
        while (1)
        {
          uint64_t v90 = *(v86 - 2);
          uint64_t v91 = *(v86 - 1);
          uint64_t v118 = v89;
          uint64_t v117 = v91;
          swift_retain();
          swift_retain();
          char v92 = a2(v88, &v118, v90, &v117);
          if (v3) {
            goto LABEL_114;
          }
          char v93 = v92;
          swift_release();
          swift_release();
          if ((v93 & 1) == 0) {
            break;
          }
          uint64_t v12 = v115;
          if (!v115) {
            goto LABEL_145;
          }
          uint64_t v88 = *v86;
          uint64_t v89 = v86[1];
          *(_OWORD *)long long v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v89;
          *(v86 - 2) = v88;
          v86 -= 2;
          if (v13 == ++v11) {
            goto LABEL_97;
          }
        }
        uint64_t v12 = v115;
LABEL_97:
        ++v13;
        long long v86 = v104 + 2;
        uint64_t v11 = v108;
      }
      while (v13 != v103);
      uint64_t v13 = v103;
      uint64_t v3 = 0;
      if (v103 < v108) {
        goto LABEL_138;
      }
      goto LABEL_40;
    }
LABEL_39:
    if (v13 < v11) {
      goto LABEL_138;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1C0634CC8(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v36 = *((void *)v10 + 2);
    unint64_t v35 = *((void *)v10 + 3);
    unint64_t v37 = v36 + 1;
    uint64_t v12 = v115;
    if (v36 >= v35 >> 1)
    {
      uint64_t v94 = sub_1C0634CC8((char *)(v35 > 1), v36 + 1, 1, v10);
      uint64_t v12 = v115;
      uint64_t v10 = v94;
    }
    *((void *)v10 + 2) = v37;
    uint64_t v38 = v10 + 32;
    uint64_t v39 = &v10[16 * v36 + 32];
    *(void *)uint64_t v39 = v11;
    *((void *)v39 + 1) = v13;
    uint64_t v113 = v13;
    if (v36)
    {
      while (1)
      {
        unint64_t v40 = v37 - 1;
        if (v37 >= 4)
        {
          long long v45 = &v38[16 * v37];
          uint64_t v46 = *((void *)v45 - 8);
          uint64_t v47 = *((void *)v45 - 7);
          BOOL v51 = __OFSUB__(v47, v46);
          uint64_t v48 = v47 - v46;
          if (v51) {
            goto LABEL_123;
          }
          uint64_t v50 = *((void *)v45 - 6);
          uint64_t v49 = *((void *)v45 - 5);
          BOOL v51 = __OFSUB__(v49, v50);
          uint64_t v43 = v49 - v50;
          char v44 = v51;
          if (v51) {
            goto LABEL_124;
          }
          unint64_t v52 = v37 - 2;
          char v53 = &v38[16 * v37 - 32];
          uint64_t v55 = *(void *)v53;
          uint64_t v54 = *((void *)v53 + 1);
          BOOL v51 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          if (v51) {
            goto LABEL_126;
          }
          BOOL v51 = __OFADD__(v43, v56);
          uint64_t v57 = v43 + v56;
          if (v51) {
            goto LABEL_129;
          }
          if (v57 >= v48)
          {
            v75 = &v38[16 * v40];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v51 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v51) {
              goto LABEL_133;
            }
            BOOL v68 = v43 < v78;
            goto LABEL_76;
          }
        }
        else
        {
          if (v37 != 3)
          {
            uint64_t v69 = *((void *)v10 + 4);
            uint64_t v70 = *((void *)v10 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
            goto LABEL_70;
          }
          uint64_t v42 = *((void *)v10 + 4);
          uint64_t v41 = *((void *)v10 + 5);
          BOOL v51 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          char v44 = v51;
        }
        if (v44) {
          goto LABEL_125;
        }
        unint64_t v52 = v37 - 2;
        long long v58 = &v38[16 * v37 - 32];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v61 = __OFSUB__(v59, v60);
        uint64_t v62 = v59 - v60;
        char v63 = v61;
        if (v61) {
          goto LABEL_128;
        }
        long long v64 = &v38[16 * v40];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v51 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v51) {
          goto LABEL_131;
        }
        if (__OFADD__(v62, v67)) {
          goto LABEL_132;
        }
        if (v62 + v67 >= v43)
        {
          BOOL v68 = v43 < v67;
LABEL_76:
          if (v68) {
            unint64_t v40 = v52;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v63) {
          goto LABEL_127;
        }
        long long v71 = &v38[16 * v40];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v51 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v51) {
          goto LABEL_130;
        }
        if (v74 < v62) {
          goto LABEL_87;
        }
LABEL_78:
        unint64_t v79 = v40 - 1;
        if (v40 - 1 >= v37)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v12) {
          goto LABEL_144;
        }
        long long v80 = v10;
        uint64_t v81 = &v38[16 * v79];
        uint64_t v82 = *(void *)v81;
        char v83 = &v38[16 * v40];
        uint64_t v84 = *((void *)v83 + 1);
        sub_1C0633FF0((char *)(v12 + 16 * *(void *)v81), (char *)(v12 + 16 * *(void *)v83), v12 + 16 * v84, v114, a2);
        if (v3) {
          goto LABEL_115;
        }
        if (v84 < v82) {
          goto LABEL_120;
        }
        if (v40 > *((void *)v80 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v81 = v82;
        *(void *)&v38[16 * v79 + 8] = v84;
        unint64_t v85 = *((void *)v80 + 2);
        if (v40 >= v85) {
          goto LABEL_122;
        }
        uint64_t v10 = v80;
        unint64_t v37 = v85 - 1;
        memmove(&v38[16 * v40], v83 + 16, 16 * (v85 - 1 - v40));
        *((void *)v80 + 2) = v85 - 1;
        uint64_t v12 = v115;
        if (v85 <= 2) {
          goto LABEL_87;
        }
      }
    }
    unint64_t v37 = 1;
LABEL_87:
    uint64_t v5 = v111;
    uint64_t v11 = v113;
    if (v113 >= v111) {
      goto LABEL_102;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C063AAE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, char *, uint64_t, char *))
{
  long long v71 = a5;
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v46 = *a4;
    uint64_t v7 = *a4 + 152 * a3 - 152;
    uint64_t v8 = result + 1;
    uint64_t v43 = result + 1;
LABEL_5:
    uint64_t v45 = v7;
    while (1)
    {
      uint64_t v9 = (long long *)(v7 + 152);
      long long v10 = *(_OWORD *)(v7 + 168);
      long long v59 = *(_OWORD *)(v7 + 152);
      long long v60 = v10;
      long long v11 = *(_OWORD *)(v7 + 184);
      long long v12 = *(_OWORD *)(v7 + 200);
      long long v13 = *(_OWORD *)(v7 + 232);
      long long v63 = *(_OWORD *)(v7 + 216);
      long long v64 = v13;
      long long v61 = v11;
      long long v62 = v12;
      long long v14 = *(_OWORD *)(v7 + 248);
      long long v15 = *(_OWORD *)(v7 + 264);
      long long v16 = *(_OWORD *)(v7 + 280);
      char v68 = *(unsigned char *)(v7 + 296);
      long long v66 = v15;
      long long v67 = v16;
      long long v65 = v14;
      long long v17 = *(_OWORD *)(v7 + 16);
      v69[0] = *(_OWORD *)v7;
      v69[1] = v17;
      long long v18 = *(_OWORD *)(v7 + 32);
      long long v19 = *(_OWORD *)(v7 + 48);
      long long v20 = *(_OWORD *)(v7 + 80);
      v69[4] = *(_OWORD *)(v7 + 64);
      v69[5] = v20;
      v69[2] = v18;
      v69[3] = v19;
      long long v21 = *(_OWORD *)(v7 + 96);
      long long v22 = *(_OWORD *)(v7 + 112);
      long long v23 = *(_OWORD *)(v7 + 128);
      char v70 = *(unsigned char *)(v7 + 144);
      v69[7] = v22;
      v69[8] = v23;
      v69[6] = v21;
      uint64_t v24 = v59;
      long long v55 = v65;
      long long v56 = v66;
      long long v57 = v67;
      char v58 = v68;
      long long v51 = v61;
      long long v52 = v62;
      long long v53 = v63;
      long long v54 = v64;
      long long v49 = v59;
      long long v50 = v60;
      uint64_t v25 = *(void *)&v69[0];
      long long v26 = *(_OWORD *)(v7 + 112);
      v47[6] = *(_OWORD *)(v7 + 96);
      v47[7] = v26;
      v47[8] = *(_OWORD *)(v7 + 128);
      char v48 = *(unsigned char *)(v7 + 144);
      long long v27 = *(_OWORD *)(v7 + 48);
      _OWORD v47[2] = *(_OWORD *)(v7 + 32);
      v47[3] = v27;
      long long v28 = *(_OWORD *)(v7 + 80);
      v47[4] = *(_OWORD *)(v7 + 64);
      v47[5] = v28;
      long long v29 = *(_OWORD *)(v7 + 16);
      v47[0] = *(_OWORD *)v7;
      v47[1] = v29;
      sub_1C063FEAC((uint64_t)&v59);
      sub_1C063FEAC((uint64_t)v69);
      char v30 = v71(v24, (char *)&v49 + 8, v25, (char *)v47 + 8);
      sub_1C063FF50((uint64_t)v69);
      uint64_t result = sub_1C063FF50((uint64_t)&v59);
      if (v5) {
        break;
      }
      if ((v30 & 1) == 0) {
        goto LABEL_4;
      }
      if (!v46)
      {
        __break(1u);
        return result;
      }
      long long v31 = *(_OWORD *)(v7 + 264);
      long long v55 = *(_OWORD *)(v7 + 248);
      long long v56 = v31;
      long long v57 = *(_OWORD *)(v7 + 280);
      char v58 = *(unsigned char *)(v7 + 296);
      long long v32 = *(_OWORD *)(v7 + 200);
      long long v51 = *(_OWORD *)(v7 + 184);
      long long v52 = v32;
      long long v33 = *(_OWORD *)(v7 + 232);
      long long v53 = *(_OWORD *)(v7 + 216);
      long long v54 = v33;
      long long v34 = *(_OWORD *)(v7 + 168);
      long long v49 = *v9;
      long long v50 = v34;
      long long v35 = *(_OWORD *)(v7 + 112);
      *(_OWORD *)(v7 + 248) = *(_OWORD *)(v7 + 96);
      *(_OWORD *)(v7 + 264) = v35;
      *(_OWORD *)(v7 + 280) = *(_OWORD *)(v7 + 128);
      *(void *)(v7 + 296) = *(void *)(v7 + 144);
      long long v36 = *(_OWORD *)(v7 + 48);
      *(_OWORD *)(v7 + 184) = *(_OWORD *)(v7 + 32);
      *(_OWORD *)(v7 + 200) = v36;
      long long v37 = *(_OWORD *)(v7 + 80);
      *(_OWORD *)(v7 + 216) = *(_OWORD *)(v7 + 64);
      *(_OWORD *)(v7 + 232) = v37;
      long long v38 = *(_OWORD *)(v7 + 16);
      *uint64_t v9 = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 168) = v38;
      long long v39 = v56;
      *(_OWORD *)(v7 + 96) = v55;
      *(_OWORD *)(v7 + 112) = v39;
      *(_OWORD *)(v7 + 128) = v57;
      *(unsigned char *)(v7 + 144) = v58;
      long long v40 = v52;
      *(_OWORD *)(v7 + 32) = v51;
      *(_OWORD *)(v7 + 48) = v40;
      long long v41 = v54;
      *(_OWORD *)(v7 + 64) = v53;
      *(_OWORD *)(v7 + 80) = v41;
      long long v42 = v50;
      *(_OWORD *)uint64_t v7 = v49;
      *(_OWORD *)(v7 + 16) = v42;
      if (v6 == v8)
      {
LABEL_4:
        ++v6;
        uint64_t v7 = v45 + 152;
        uint64_t v8 = v43;
        if (v6 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      v7 -= 152;
      ++v8;
    }
  }
  return result;
}

uint64_t sub_1C063AD70(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, uint64_t, char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v210 = a3;
  uint64_t v6 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_141;
    }
    if (v6) {
      return sub_1C063AAE8(0, v6, 1, a1, a2);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_150;
  }
  uint64_t v157 = result;
  v155 = a1;
  if (v6 < 2)
  {
    long long v11 = (char *)MEMORY[0x1E4FBC860];
    v164 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v158 = MEMORY[0x1E4FBC860];
    if (v6 != 1)
    {
      unint64_t v89 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_105:
      if (v89 >= 2)
      {
        uint64_t v142 = *v155;
        do
        {
          unint64_t v143 = v89 - 2;
          if (v89 < 2) {
            goto LABEL_136;
          }
          if (!v142) {
            goto LABEL_149;
          }
          v144 = v11;
          v145 = v11 + 32;
          uint64_t v146 = *(void *)&v11[16 * v143 + 32];
          uint64_t v147 = *(void *)&v11[16 * v89 + 24];
          sub_1C06303CC((char *)(v142 + 152 * v146), (char *)(v142 + 152 * *(void *)&v145[16 * v89 - 16]), (char *)(v142 + 152 * v147), v164, a2);
          if (v4) {
            break;
          }
          if (v147 < v146) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v144 = sub_1C063604C((uint64_t)v144);
          }
          if (v143 >= *((void *)v144 + 2)) {
            goto LABEL_138;
          }
          v148 = &v144[16 * v143 + 32];
          *(void *)v148 = v146;
          *((void *)v148 + 1) = v147;
          unint64_t v149 = *((void *)v144 + 2);
          if (v89 > v149) {
            goto LABEL_139;
          }
          long long v11 = v144;
          memmove(&v144[16 * v89 + 16], &v144[16 * v89 + 32], 16 * (v149 - v89));
          *((void *)v144 + 2) = v149 - 1;
          unint64_t v89 = v149 - 1;
        }
        while (v149 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      *(void *)(v158 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C064267C(0, &qword_1EA19C4F8);
    uint64_t v10 = sub_1C151ECCC();
    *(void *)(v10 + 16) = v9;
    uint64_t v158 = v10;
    v164 = (char *)(v10 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v156 = *a1 + 152;
  uint64_t v154 = *a1 - 152;
  long long v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v162 = v6;
  uint64_t v163 = *a1;
  while (1)
  {
    v161 = v11;
    if (v12 + 1 >= v6)
    {
      uint64_t v56 = v12 + 1;
      goto LABEL_51;
    }
    uint64_t v159 = v12 + 1;
    uint64_t v14 = v13 + 152 * (v12 + 1);
    long long v15 = *(_OWORD *)(v14 + 16);
    long long v190 = *(_OWORD *)v14;
    long long v191 = v15;
    long long v16 = *(_OWORD *)(v14 + 32);
    long long v17 = *(_OWORD *)(v14 + 48);
    long long v18 = *(_OWORD *)(v14 + 80);
    long long v194 = *(_OWORD *)(v14 + 64);
    long long v195 = v18;
    long long v192 = v16;
    long long v193 = v17;
    long long v19 = *(_OWORD *)(v14 + 96);
    long long v20 = *(_OWORD *)(v14 + 112);
    long long v21 = *(_OWORD *)(v14 + 128);
    char v199 = *(unsigned char *)(v14 + 144);
    long long v197 = v20;
    long long v198 = v21;
    long long v196 = v19;
    uint64_t v22 = v13 + 152 * v12;
    long long v23 = *(_OWORD *)(v22 + 16);
    long long v200 = *(_OWORD *)v22;
    long long v201 = v23;
    long long v24 = *(_OWORD *)(v22 + 32);
    long long v25 = *(_OWORD *)(v22 + 48);
    long long v26 = *(_OWORD *)(v22 + 80);
    long long v204 = *(_OWORD *)(v22 + 64);
    long long v205 = v26;
    long long v202 = v24;
    long long v203 = v25;
    long long v27 = *(_OWORD *)(v22 + 96);
    long long v28 = *(_OWORD *)(v22 + 112);
    long long v29 = *(_OWORD *)(v22 + 128);
    char v209 = *(unsigned char *)(v22 + 144);
    long long v207 = v28;
    long long v208 = v29;
    long long v206 = v27;
    uint64_t v30 = v190;
    long long v186 = v196;
    long long v187 = v197;
    long long v188 = v198;
    char v189 = v199;
    long long v182 = v192;
    long long v183 = v193;
    long long v184 = v194;
    long long v185 = v195;
    long long v180 = v190;
    long long v181 = v191;
    uint64_t v31 = v200;
    long long v176 = *(_OWORD *)(v22 + 96);
    long long v177 = *(_OWORD *)(v22 + 112);
    long long v178 = *(_OWORD *)(v22 + 128);
    char v179 = *(unsigned char *)(v22 + 144);
    long long v172 = *(_OWORD *)(v22 + 32);
    long long v173 = *(_OWORD *)(v22 + 48);
    long long v174 = *(_OWORD *)(v22 + 64);
    long long v175 = *(_OWORD *)(v22 + 80);
    long long v170 = *(_OWORD *)v22;
    long long v171 = *(_OWORD *)(v22 + 16);
    sub_1C063FEAC((uint64_t)&v190);
    sub_1C063FEAC((uint64_t)&v200);
    int v32 = a2(v30, (char *)&v180 + 8, v31, (char *)&v170 + 8);
    if (v4)
    {
      sub_1C063FF50((uint64_t)&v200);
      sub_1C063FF50((uint64_t)&v190);
      goto LABEL_119;
    }
    int v33 = v32;
    sub_1C063FF50((uint64_t)&v200);
    sub_1C063FF50((uint64_t)&v190);
    if (v12 + 2 >= v6)
    {
      uint64_t v57 = v12 + 2;
      uint64_t v58 = v12 + 1;
      if (v33) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v34 = v12 + 3;
      uint64_t v152 = v12;
      for (uint64_t i = v156 + 152 * v12; ; i += 152)
      {
        long long v36 = *(_OWORD *)(i + 168);
        long long v170 = *(_OWORD *)(i + 152);
        long long v171 = v36;
        long long v37 = *(_OWORD *)(i + 184);
        long long v38 = *(_OWORD *)(i + 200);
        long long v39 = *(_OWORD *)(i + 232);
        long long v174 = *(_OWORD *)(i + 216);
        long long v175 = v39;
        long long v172 = v37;
        long long v173 = v38;
        long long v40 = *(_OWORD *)(i + 248);
        long long v41 = *(_OWORD *)(i + 264);
        long long v42 = *(_OWORD *)(i + 280);
        char v179 = *(unsigned char *)(i + 296);
        long long v177 = v41;
        long long v178 = v42;
        long long v176 = v40;
        long long v43 = *(_OWORD *)(i + 16);
        long long v180 = *(_OWORD *)i;
        long long v181 = v43;
        long long v44 = *(_OWORD *)(i + 32);
        long long v45 = *(_OWORD *)(i + 48);
        long long v46 = *(_OWORD *)(i + 80);
        long long v184 = *(_OWORD *)(i + 64);
        long long v185 = v46;
        long long v182 = v44;
        long long v183 = v45;
        long long v47 = *(_OWORD *)(i + 96);
        long long v48 = *(_OWORD *)(i + 112);
        long long v49 = *(_OWORD *)(i + 128);
        char v189 = *(unsigned char *)(i + 144);
        long long v187 = v48;
        long long v188 = v49;
        long long v186 = v47;
        uint64_t v50 = v170;
        v168[6] = v176;
        v168[7] = v177;
        v168[8] = v178;
        char v169 = v179;
        v168[2] = v172;
        v168[3] = v173;
        v168[4] = v174;
        v168[5] = v175;
        v168[0] = v170;
        v168[1] = v171;
        uint64_t v51 = v180;
        long long v52 = *(_OWORD *)(i + 112);
        v166[6] = *(_OWORD *)(i + 96);
        v166[7] = v52;
        v166[8] = *(_OWORD *)(i + 128);
        char v167 = *(unsigned char *)(i + 144);
        long long v53 = *(_OWORD *)(i + 48);
        v166[2] = *(_OWORD *)(i + 32);
        v166[3] = v53;
        long long v54 = *(_OWORD *)(i + 80);
        v166[4] = *(_OWORD *)(i + 64);
        v166[5] = v54;
        long long v55 = *(_OWORD *)(i + 16);
        v166[0] = *(_OWORD *)i;
        v166[1] = v55;
        sub_1C063FEAC((uint64_t)&v170);
        sub_1C063FEAC((uint64_t)&v180);
        LODWORD(v50) = a2(v50, (char *)v168 + 8, v51, (char *)v166 + 8);
        sub_1C063FF50((uint64_t)&v180);
        sub_1C063FF50((uint64_t)&v170);
        long long v11 = v161;
        if ((v33 ^ v50))
        {
          uint64_t v57 = v34 - 1;
          uint64_t v6 = v162;
          goto LABEL_49;
        }
        if (v162 == v34) {
          break;
        }
        ++v34;
      }
      uint64_t v6 = v162;
      uint64_t v57 = v162;
LABEL_49:
      uint64_t v12 = v152;
      uint64_t v58 = v159;
      if (v33)
      {
LABEL_22:
        if (v57 < v12) {
          goto LABEL_145;
        }
        uint64_t v56 = v57;
        if (v12 < v57)
        {
          long long v59 = (_OWORD *)(v154 + 152 * v57);
          uint64_t v60 = v12;
          long long v61 = (_OWORD *)(v13 + 152 * v12);
          do
          {
            if (v60 != --v56)
            {
              if (!v13) {
                goto LABEL_148;
              }
              long long v186 = v61[6];
              long long v187 = v61[7];
              long long v188 = v61[8];
              char v189 = *((unsigned char *)v61 + 144);
              long long v182 = v61[2];
              long long v183 = v61[3];
              long long v184 = v61[4];
              long long v185 = v61[5];
              long long v180 = *v61;
              long long v181 = v61[1];
              memmove(v61, v59, 0x98uLL);
              v59[6] = v186;
              v59[7] = v187;
              v59[8] = v188;
              *((unsigned char *)v59 + 144) = v189;
              v59[2] = v182;
              v59[3] = v183;
              v59[4] = v184;
              v59[5] = v185;
              *long long v59 = v180;
              v59[1] = v181;
            }
            ++v60;
            long long v59 = (_OWORD *)((char *)v59 - 152);
            long long v61 = (_OWORD *)((char *)v61 + 152);
          }
          while (v60 < v56);
          uint64_t v6 = v162;
          uint64_t v56 = v57;
          uint64_t v58 = v159;
        }
        if (v56 >= v6) {
          goto LABEL_51;
        }
        goto LABEL_32;
      }
    }
    uint64_t v56 = v57;
    if (v57 >= v6) {
      goto LABEL_51;
    }
LABEL_32:
    if (__OFSUB__(v56, v12)) {
      goto LABEL_142;
    }
    if (v56 - v12 >= v157) {
      goto LABEL_51;
    }
    if (__OFADD__(v12, v157)) {
      goto LABEL_143;
    }
    uint64_t v62 = v12 + v157 >= v6 ? v6 : v12 + v157;
    if (v62 < v12) {
      break;
    }
    if (v56 != v62)
    {
      uint64_t v153 = v12;
      uint64_t v63 = v154 + 152 * v56;
      uint64_t v160 = v58;
      uint64_t v150 = v62;
      do
      {
        uint64_t v64 = v56;
        uint64_t v65 = v58;
        uint64_t v151 = v63;
        while (1)
        {
          long long v66 = (long long *)(v63 + 152);
          long long v67 = *(_OWORD *)(v63 + 168);
          long long v190 = *(_OWORD *)(v63 + 152);
          long long v191 = v67;
          long long v68 = *(_OWORD *)(v63 + 184);
          long long v69 = *(_OWORD *)(v63 + 200);
          long long v70 = *(_OWORD *)(v63 + 232);
          long long v194 = *(_OWORD *)(v63 + 216);
          long long v195 = v70;
          long long v192 = v68;
          long long v193 = v69;
          long long v71 = *(_OWORD *)(v63 + 248);
          long long v72 = *(_OWORD *)(v63 + 264);
          long long v73 = *(_OWORD *)(v63 + 280);
          char v199 = *(unsigned char *)(v63 + 296);
          long long v197 = v72;
          long long v198 = v73;
          long long v196 = v71;
          long long v74 = *(_OWORD *)(v63 + 16);
          long long v200 = *(_OWORD *)v63;
          long long v201 = v74;
          long long v75 = *(_OWORD *)(v63 + 32);
          long long v76 = *(_OWORD *)(v63 + 48);
          long long v77 = *(_OWORD *)(v63 + 80);
          long long v204 = *(_OWORD *)(v63 + 64);
          long long v205 = v77;
          long long v202 = v75;
          long long v203 = v76;
          long long v78 = *(_OWORD *)(v63 + 96);
          long long v79 = *(_OWORD *)(v63 + 112);
          long long v80 = *(_OWORD *)(v63 + 128);
          char v209 = *(unsigned char *)(v63 + 144);
          long long v207 = v79;
          long long v208 = v80;
          long long v206 = v78;
          uint64_t v81 = v190;
          long long v186 = v196;
          long long v187 = v197;
          long long v188 = v198;
          char v189 = v199;
          long long v182 = v192;
          long long v183 = v193;
          long long v184 = v194;
          long long v185 = v195;
          long long v180 = v190;
          long long v181 = v191;
          uint64_t v82 = v200;
          long long v176 = *(_OWORD *)(v63 + 96);
          long long v177 = *(_OWORD *)(v63 + 112);
          long long v178 = *(_OWORD *)(v63 + 128);
          char v179 = *(unsigned char *)(v63 + 144);
          long long v172 = *(_OWORD *)(v63 + 32);
          long long v173 = *(_OWORD *)(v63 + 48);
          long long v174 = *(_OWORD *)(v63 + 64);
          long long v175 = *(_OWORD *)(v63 + 80);
          long long v170 = *(_OWORD *)v63;
          long long v171 = *(_OWORD *)(v63 + 16);
          sub_1C063FEAC((uint64_t)&v190);
          sub_1C063FEAC((uint64_t)&v200);
          LOBYTE(v81) = a2(v81, (char *)&v180 + 8, v82, (char *)&v170 + 8);
          sub_1C063FF50((uint64_t)&v200);
          sub_1C063FF50((uint64_t)&v190);
          if ((v81 & 1) == 0) {
            break;
          }
          if (!v13) {
            goto LABEL_147;
          }
          long long v186 = *(_OWORD *)(v63 + 248);
          long long v187 = *(_OWORD *)(v63 + 264);
          long long v188 = *(_OWORD *)(v63 + 280);
          char v189 = *(unsigned char *)(v63 + 296);
          long long v182 = *(_OWORD *)(v63 + 184);
          long long v183 = *(_OWORD *)(v63 + 200);
          long long v184 = *(_OWORD *)(v63 + 216);
          long long v185 = *(_OWORD *)(v63 + 232);
          long long v180 = *v66;
          long long v181 = *(_OWORD *)(v63 + 168);
          long long v83 = *(_OWORD *)(v63 + 112);
          *(_OWORD *)(v63 + 248) = *(_OWORD *)(v63 + 96);
          *(_OWORD *)(v63 + 264) = v83;
          *(_OWORD *)(v63 + 280) = *(_OWORD *)(v63 + 128);
          *(void *)(v63 + 296) = *(void *)(v63 + 144);
          long long v84 = *(_OWORD *)(v63 + 48);
          *(_OWORD *)(v63 + 184) = *(_OWORD *)(v63 + 32);
          *(_OWORD *)(v63 + 200) = v84;
          long long v85 = *(_OWORD *)(v63 + 80);
          *(_OWORD *)(v63 + 216) = *(_OWORD *)(v63 + 64);
          *(_OWORD *)(v63 + 232) = v85;
          long long v86 = *(_OWORD *)(v63 + 16);
          *long long v66 = *(_OWORD *)v63;
          *(_OWORD *)(v63 + 168) = v86;
          *(_OWORD *)(v63 + 96) = v186;
          *(_OWORD *)(v63 + 112) = v187;
          *(_OWORD *)(v63 + 128) = v188;
          *(unsigned char *)(v63 + 144) = v189;
          *(_OWORD *)(v63 + 32) = v182;
          *(_OWORD *)(v63 + 48) = v183;
          *(_OWORD *)(v63 + 64) = v184;
          *(_OWORD *)(v63 + 80) = v185;
          *(_OWORD *)uint64_t v63 = v180;
          *(_OWORD *)(v63 + 16) = v181;
          if (v56 == v65) {
            break;
          }
          v63 -= 152;
          ++v65;
        }
        ++v56;
        uint64_t v63 = v151 + 152;
        uint64_t v58 = v160;
      }
      while (v64 + 1 != v150);
      uint64_t v56 = v150;
      long long v11 = v161;
      uint64_t v12 = v153;
      if (v150 < v153) {
        goto LABEL_140;
      }
      goto LABEL_52;
    }
LABEL_51:
    if (v56 < v12) {
      goto LABEL_140;
    }
LABEL_52:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v88 = *((void *)v11 + 2);
    unint64_t v87 = *((void *)v11 + 3);
    unint64_t v89 = v88 + 1;
    if (v88 >= v87 >> 1) {
      long long v11 = sub_1C0634CC8((char *)(v87 > 1), v88 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v89;
    uint64_t v90 = v11 + 32;
    uint64_t v91 = &v11[16 * v88 + 32];
    *(void *)uint64_t v91 = v12;
    *((void *)v91 + 1) = v56;
    if (v88)
    {
      while (1)
      {
        unint64_t v92 = v89 - 1;
        if (v89 >= 4)
        {
          uint64_t v97 = &v90[16 * v89];
          uint64_t v98 = *((void *)v97 - 8);
          uint64_t v99 = *((void *)v97 - 7);
          BOOL v103 = __OFSUB__(v99, v98);
          uint64_t v100 = v99 - v98;
          if (v103) {
            goto LABEL_125;
          }
          uint64_t v102 = *((void *)v97 - 6);
          uint64_t v101 = *((void *)v97 - 5);
          BOOL v103 = __OFSUB__(v101, v102);
          uint64_t v95 = v101 - v102;
          char v96 = v103;
          if (v103) {
            goto LABEL_126;
          }
          unint64_t v104 = v89 - 2;
          uint64_t v105 = &v90[16 * v89 - 32];
          uint64_t v107 = *(void *)v105;
          uint64_t v106 = *((void *)v105 + 1);
          BOOL v103 = __OFSUB__(v106, v107);
          uint64_t v108 = v106 - v107;
          if (v103) {
            goto LABEL_128;
          }
          BOOL v103 = __OFADD__(v95, v108);
          uint64_t v109 = v95 + v108;
          if (v103) {
            goto LABEL_131;
          }
          if (v109 >= v100)
          {
            v127 = &v90[16 * v92];
            uint64_t v129 = *(void *)v127;
            uint64_t v128 = *((void *)v127 + 1);
            BOOL v103 = __OFSUB__(v128, v129);
            uint64_t v130 = v128 - v129;
            if (v103) {
              goto LABEL_135;
            }
            BOOL v120 = v95 < v130;
            goto LABEL_88;
          }
        }
        else
        {
          if (v89 != 3)
          {
            uint64_t v121 = *((void *)v11 + 4);
            uint64_t v122 = *((void *)v11 + 5);
            BOOL v103 = __OFSUB__(v122, v121);
            uint64_t v114 = v122 - v121;
            char v115 = v103;
            goto LABEL_82;
          }
          uint64_t v94 = *((void *)v11 + 4);
          uint64_t v93 = *((void *)v11 + 5);
          BOOL v103 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          char v96 = v103;
        }
        if (v96) {
          goto LABEL_127;
        }
        unint64_t v104 = v89 - 2;
        uint64_t v110 = &v90[16 * v89 - 32];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v113 = __OFSUB__(v111, v112);
        uint64_t v114 = v111 - v112;
        char v115 = v113;
        if (v113) {
          goto LABEL_130;
        }
        v116 = &v90[16 * v92];
        uint64_t v118 = *(void *)v116;
        uint64_t v117 = *((void *)v116 + 1);
        BOOL v103 = __OFSUB__(v117, v118);
        uint64_t v119 = v117 - v118;
        if (v103) {
          goto LABEL_133;
        }
        if (__OFADD__(v114, v119)) {
          goto LABEL_134;
        }
        if (v114 + v119 >= v95)
        {
          BOOL v120 = v95 < v119;
LABEL_88:
          if (v120) {
            unint64_t v92 = v104;
          }
          goto LABEL_90;
        }
LABEL_82:
        if (v115) {
          goto LABEL_129;
        }
        v123 = &v90[16 * v92];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        BOOL v103 = __OFSUB__(v124, v125);
        uint64_t v126 = v124 - v125;
        if (v103) {
          goto LABEL_132;
        }
        if (v126 < v114) {
          goto LABEL_99;
        }
LABEL_90:
        unint64_t v131 = v92 - 1;
        if (v92 - 1 >= v89)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v13) {
          goto LABEL_146;
        }
        uint64_t v132 = v4;
        v133 = v11;
        uint64_t v134 = v13;
        v135 = &v90[16 * v131];
        uint64_t v136 = *(void *)v135;
        v137 = v90;
        unint64_t v138 = v92;
        v139 = &v90[16 * v92];
        uint64_t v140 = *((void *)v139 + 1);
        sub_1C06303CC((char *)(v134 + 152 * *(void *)v135), (char *)(v134 + 152 * *(void *)v139), (char *)(v134 + 152 * v140), v164, a2);
        if (v132) {
          goto LABEL_119;
        }
        if (v140 < v136) {
          goto LABEL_122;
        }
        if (v138 > *((void *)v133 + 2)) {
          goto LABEL_123;
        }
        *(void *)v135 = v136;
        *(void *)&v137[16 * v131 + 8] = v140;
        unint64_t v141 = *((void *)v133 + 2);
        if (v138 >= v141) {
          goto LABEL_124;
        }
        long long v11 = v133;
        unint64_t v89 = v141 - 1;
        memmove(v139, v139 + 16, 16 * (v141 - 1 - v138));
        uint64_t v90 = v137;
        *((void *)v133 + 2) = v141 - 1;
        BOOL v120 = v141 > 2;
        uint64_t v13 = v163;
        uint64_t v4 = 0;
        if (!v120) {
          goto LABEL_99;
        }
      }
    }
    unint64_t v89 = 1;
LABEL_99:
    uint64_t v12 = v56;
    uint64_t v6 = v162;
    if (v56 >= v162) {
      goto LABEL_105;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C063B9F8(uint64_t *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  void (*v127)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  uint64_t v7 = swift_allocObject();
  v127 = a2;
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = a1[1];
  swift_retain_n();
  uint64_t v9 = sub_1C152086C();
  if (v9 >= v8)
  {
    if (v8 < 0) {
      goto LABEL_141;
    }
    if (v8)
    {
      swift_retain();
      sub_1C062EC6C(0, v8, 1, a1, v127, a3);
    }
    swift_release();
    swift_release();
    return swift_release_n();
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_149;
  }
  uint64_t v120 = a3;
  uint64_t v121 = v3;
  uint64_t v109 = v9;
  if (v8 < 2)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    BOOL v113 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v8 == 1)
    {
      uint64_t v108 = MEMORY[0x1E4FBC860];
      goto LABEL_14;
    }
    unint64_t v16 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    long long v15 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
    uint64_t v108 = v13;
    if (v16 >= 2)
    {
      uint64_t v97 = *a1;
      uint64_t v122 = *a1;
      do
      {
        unint64_t v98 = v16 - 2;
        if (v16 < 2) {
          goto LABEL_136;
        }
        if (!v97) {
          goto LABEL_148;
        }
        uint64_t v99 = (uint64_t)v15;
        uint64_t v100 = *(void *)&v15[16 * v98 + 32];
        uint64_t v101 = *(void *)&v15[16 * v16 + 24];
        uint64_t v102 = (char *)(v97 + 296 * v100);
        BOOL v103 = (char *)(v97 + 296 * *(void *)&v15[16 * v16 + 16]);
        unint64_t v104 = v97 + 296 * v101;
        swift_retain();
        sub_1C0634358(v102, v103, v104, v113, v127, v120);
        if (v121) {
          break;
        }
        if (v101 < v100) {
          goto LABEL_137;
        }
        long long v15 = (char *)v99;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v15 = sub_1C063604C(v99);
        }
        if (v98 >= *((void *)v15 + 2)) {
          goto LABEL_138;
        }
        uint64_t v105 = &v15[16 * v98 + 32];
        *(void *)uint64_t v105 = v100;
        *((void *)v105 + 1) = v101;
        unint64_t v106 = *((void *)v15 + 2);
        if (v16 > v106) {
          goto LABEL_139;
        }
        memmove(&v15[16 * v16 + 16], &v15[16 * v16 + 32], 16 * (v106 - v16));
        *((void *)v15 + 2) = v106 - 1;
        unint64_t v16 = v106 - 1;
        uint64_t v97 = v122;
      }
      while (v106 > 2);
    }
LABEL_116:
    swift_bridgeObjectRelease();
    *(void *)(v108 + 16) = 0;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  uint64_t v11 = v10 >> 1;
  sub_1C064267C(0, &qword_1EA19C508);
  uint64_t v12 = sub_1C151ECCC();
  *(void *)(v12 + 16) = v11;
  uint64_t v108 = v12;
  BOOL v113 = (char *)(v12 + 32);
LABEL_14:
  uint64_t v14 = 0;
  long long v15 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v119 = a1;
  while (1)
  {
    uint64_t v17 = v14;
    uint64_t v18 = v14 + 1;
    uint64_t v117 = v14;
    if (v14 + 1 < v8)
    {
      long long v19 = (uint64_t *)(*a1 + 296 * v18);
      long long v20 = (uint64_t *)(*a1 + 296 * v14);
      uint64_t v21 = *a1;
      uint64_t v22 = *v20;
      __dst[0] = *v19;
      sub_1C024A070((uint64_t)(v19 + 1), (uint64_t)&__dst[1]);
      uint64_t v124 = v22;
      sub_1C024A070((uint64_t)(v20 + 1), (uint64_t)v125);
      v127(&v123, __dst, &v124);
      uint64_t v114 = v8;
      sub_1BFEA5370((uint64_t)&v124, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
      sub_1BFEA5370((uint64_t)__dst, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
      int v23 = v123;
      uint64_t v18 = v17 + 2;
      if (v17 + 2 < v8)
      {
        uint64_t v110 = v21;
        uint64_t v24 = v21 + 296 * v17;
        while (1)
        {
          uint64_t v25 = v18;
          uint64_t v26 = *(void *)(v24 + 296);
          __dst[0] = *(void *)(v24 + 592);
          sub_1C024A070(v24 + 600, (uint64_t)&__dst[1]);
          uint64_t v124 = v26;
          sub_1C024A070(v24 + 304, (uint64_t)v125);
          v127(&v123, __dst, &v124);
          sub_1BFEA5370((uint64_t)&v124, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)__dst, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
          if (v23 != v123) {
            break;
          }
          v24 += 296;
          ++v18;
          uint64_t v8 = v114;
          if (v114 == v25 + 1)
          {
            uint64_t v18 = v114;
            uint64_t v17 = v117;
            a1 = v119;
            goto LABEL_24;
          }
        }
        uint64_t v17 = v117;
        a1 = v119;
        uint64_t v8 = v114;
LABEL_24:
        uint64_t v21 = v110;
      }
      if (!v23)
      {
        if (v18 < v8) {
          goto LABEL_37;
        }
        goto LABEL_56;
      }
      if (v18 < v17) {
        goto LABEL_142;
      }
      if (v17 < v18) {
        break;
      }
    }
    if (v18 < v8) {
      goto LABEL_37;
    }
LABEL_56:
    if (v18 < v17) {
      goto LABEL_135;
    }
    uint64_t v112 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v15 = sub_1C0634CC8(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v44 = *((void *)v15 + 2);
    unint64_t v43 = *((void *)v15 + 3);
    unint64_t v16 = v44 + 1;
    if (v44 >= v43 >> 1) {
      long long v15 = sub_1C0634CC8((char *)(v43 > 1), v44 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v16;
    long long v45 = v15 + 32;
    long long v46 = &v15[16 * v44 + 32];
    *(void *)long long v46 = v17;
    *((void *)v46 + 1) = v112;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v16 - 1;
        if (v16 >= 4)
        {
          long long v52 = &v45[16 * v16];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_124;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_125;
          }
          unint64_t v59 = v16 - 2;
          uint64_t v60 = &v45[16 * v16 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_127;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_130;
          }
          if (v64 >= v55)
          {
            uint64_t v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_134;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_93;
          }
        }
        else
        {
          if (v16 != 3)
          {
            uint64_t v76 = *((void *)v15 + 4);
            uint64_t v77 = *((void *)v15 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_87;
          }
          uint64_t v49 = *((void *)v15 + 4);
          uint64_t v48 = *((void *)v15 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_126;
        }
        unint64_t v59 = v16 - 2;
        uint64_t v65 = &v45[16 * v16 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_129;
        }
        long long v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_132;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_133;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_93:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v70) {
          goto LABEL_128;
        }
        long long v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_131;
        }
        if (v81 < v69) {
          goto LABEL_16;
        }
LABEL_95:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v16)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v87 = *v119;
        if (!*v119) {
          goto LABEL_146;
        }
        unint64_t v88 = &v45[16 * v86];
        unint64_t v89 = v45;
        uint64_t v90 = *(void *)v88;
        uint64_t v91 = v89;
        unint64_t v92 = v47;
        uint64_t v93 = &v89[16 * v47];
        uint64_t v94 = *((void *)v93 + 1);
        uint64_t v95 = (char *)(v87 + 296 * *(void *)v88);
        unint64_t v116 = v87 + 296 * v94;
        uint64_t v118 = (char *)(v87 + 296 * *(void *)v93);
        swift_retain();
        sub_1C0634358(v95, v118, v116, v113, v127, v120);
        if (v121) {
          goto LABEL_116;
        }
        if (v94 < v90) {
          goto LABEL_121;
        }
        if (v92 > *((void *)v15 + 2)) {
          goto LABEL_122;
        }
        *(void *)unint64_t v88 = v90;
        *(void *)&v91[16 * v86 + 8] = v94;
        unint64_t v96 = *((void *)v15 + 2);
        if (v92 >= v96) {
          goto LABEL_123;
        }
        long long v45 = v91;
        uint64_t v121 = 0;
        unint64_t v16 = v96 - 1;
        memmove(v93, v93 + 16, 16 * (v96 - 1 - v92));
        *((void *)v15 + 2) = v96 - 1;
        a1 = v119;
        if (v96 <= 2) {
          goto LABEL_16;
        }
      }
    }
    unint64_t v16 = 1;
LABEL_16:
    uint64_t v8 = a1[1];
    uint64_t v14 = v112;
    if (v112 >= v8)
    {
      uint64_t v13 = v108;
      goto LABEL_105;
    }
  }
  uint64_t v27 = v18;
  long long v28 = (char *)(v21 + 296 * v18 - 296);
  long long v29 = (char *)(v21 + 296 * v17);
  uint64_t v30 = v17;
  uint64_t v31 = v27;
  do
  {
    if (v30 != --v27)
    {
      if (!v21) {
        goto LABEL_147;
      }
      memcpy(__dst, v29, 0x122uLL);
      memmove(v29, v28, 0x128uLL);
      memcpy(v28, __dst, 0x122uLL);
    }
    ++v30;
    v28 -= 296;
    v29 += 296;
  }
  while (v30 < v27);
  uint64_t v18 = v31;
  uint64_t v17 = v117;
  a1 = v119;
  if (v18 >= v8) {
    goto LABEL_56;
  }
LABEL_37:
  if (__OFSUB__(v18, v17)) {
    goto LABEL_140;
  }
  if (v18 - v17 >= v109) {
    goto LABEL_56;
  }
  if (__OFADD__(v17, v109)) {
    goto LABEL_143;
  }
  if (v17 + v109 >= v8) {
    uint64_t v32 = v8;
  }
  else {
    uint64_t v32 = v17 + v109;
  }
  if (v32 >= v17)
  {
    if (v18 != v32)
    {
      uint64_t v111 = v15;
      uint64_t v33 = 296 * v18 - 296;
      uint64_t v115 = v32;
      do
      {
        uint64_t v34 = v17;
        uint64_t v35 = v33;
        while (1)
        {
          uint64_t v36 = v18;
          long long v37 = (uint64_t *)(*a1 + v35);
          uint64_t v38 = *v37;
          uint64_t v39 = (uint64_t)(v37 + 1);
          __dst[0] = v37[37];
          sub_1C024A070((uint64_t)(v37 + 38), (uint64_t)&__dst[1]);
          uint64_t v124 = v38;
          sub_1C024A070(v39, (uint64_t)v125);
          v127(&v123, __dst, &v124);
          sub_1BFEA5370((uint64_t)&v124, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)__dst, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
          if (v123 != 1) {
            break;
          }
          uint64_t v40 = *a1;
          if (!*a1) {
            goto LABEL_145;
          }
          long long v41 = (void *)(v40 + v35);
          long long v42 = (void *)(v40 + v35 + 296);
          memcpy(__dst, v42, 0x122uLL);
          memcpy(v42, v41, 0x128uLL);
          memcpy(v41, __dst, 0x122uLL);
          v35 -= 296;
          ++v34;
          uint64_t v18 = v36;
          if (v36 == v34) {
            goto LABEL_47;
          }
        }
        uint64_t v18 = v36;
LABEL_47:
        ++v18;
        v33 += 296;
        uint64_t v17 = v117;
      }
      while (v18 != v115);
      uint64_t v18 = v115;
      long long v15 = v111;
    }
    goto LABEL_56;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  swift_release_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  __break(1u);
LABEL_147:
  swift_release_n();
  __break(1u);
LABEL_148:
  swift_release_n();
  __break(1u);
LABEL_149:
  swift_release_n();
  swift_release();
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C063C450(void *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  void (*v143)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  uint64_t v7 = swift_allocObject();
  unint64_t v143 = a2;
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = a1[1];
  swift_retain_n();
  uint64_t v9 = sub_1C152086C();
  if (v9 >= v8)
  {
    if (v8 < 0) {
      goto LABEL_138;
    }
    if (v8)
    {
      swift_retain();
      sub_1C062EE90(0, v8, 1, a1, v143, a3);
    }
    swift_release();
    swift_release();
    return swift_release_n();
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_146;
  }
  uint64_t v127 = a3;
  uint64_t v128 = v3;
  uint64_t v121 = a1;
  uint64_t v113 = v9;
  if (v8 < 2)
  {
    uint64_t v117 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v112 = MEMORY[0x1E4FBC860];
    if (v8 == 1) {
      goto LABEL_13;
    }
    unint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
    if (v15 >= 2)
    {
      uint64_t v101 = *v121;
      uint64_t v129 = *v121;
      do
      {
        unint64_t v102 = v15 - 2;
        if (v15 < 2) {
          goto LABEL_133;
        }
        if (!v101) {
          goto LABEL_145;
        }
        BOOL v103 = v14;
        uint64_t v104 = *(void *)&v14[16 * v102 + 32];
        uint64_t v105 = *(void *)&v14[16 * v15 + 24];
        unint64_t v106 = (char *)(v101 + 160 * v104);
        uint64_t v107 = (char *)(v101 + 160 * *(void *)&v14[16 * v15 + 16]);
        unint64_t v108 = v101 + 160 * v105;
        swift_retain();
        sub_1C0634810(v106, v107, v108, v117, v143, v127);
        if (v128) {
          break;
        }
        if (v105 < v104) {
          goto LABEL_134;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v103 = sub_1C063604C((uint64_t)v103);
        }
        if (v102 >= *((void *)v103 + 2)) {
          goto LABEL_135;
        }
        uint64_t v109 = &v103[16 * v102 + 32];
        *(void *)uint64_t v109 = v104;
        *((void *)v109 + 1) = v105;
        unint64_t v110 = *((void *)v103 + 2);
        if (v15 > v110) {
          goto LABEL_136;
        }
        memmove(&v103[16 * v15 + 16], &v103[16 * v15 + 32], 16 * (v110 - v15));
        uint64_t v14 = v103;
        *((void *)v103 + 2) = v110 - 1;
        unint64_t v15 = v110 - 1;
        uint64_t v101 = v129;
      }
      while (v110 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v112 + 16) = 0;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  uint64_t v11 = v10 >> 1;
  sub_1C064267C(0, (unint64_t *)&unk_1EA19C4C8);
  uint64_t v12 = sub_1C151ECCC();
  *(void *)(v12 + 16) = v11;
  uint64_t v112 = v12;
  uint64_t v117 = (char *)(v12 + 32);
LABEL_13:
  uint64_t v13 = 0;
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v16 = v13++;
    uint64_t v122 = v16;
    if (v13 >= v8)
    {
      uint64_t v24 = v121;
    }
    else
    {
      uint64_t v114 = v14;
      uint64_t v17 = *v121;
      uint64_t v18 = (void *)(*v121 + 160 * v13);
      long long v19 = (uint64_t *)(*v121 + 160 * v16);
      uint64_t v20 = *v19;
      *(void *)&long long v133 = *v18;
      sub_1C0249E84((uint64_t)(v18 + 1), (uint64_t)&v133 + 8);
      uint64_t v131 = v20;
      sub_1C0249E84((uint64_t)(v19 + 1), (uint64_t)v132);
      v143(&v130, (uint64_t *)&v133, &v131);
      uint64_t v124 = v8;
      sub_1BFEA5370((uint64_t)&v131, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
      sub_1BFEA5370((uint64_t)&v133, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
      int v21 = v130;
      uint64_t v13 = v16 + 2;
      uint64_t v118 = v17;
      if (v16 + 2 < v8)
      {
        uint64_t v22 = v17 + 160 * v16 + 168;
        while (1)
        {
          uint64_t v23 = *(void *)(v22 - 8);
          *(void *)&long long v133 = *(void *)(v22 + 152);
          sub_1C0249E84(v22 + 160, (uint64_t)&v133 + 8);
          uint64_t v131 = v23;
          sub_1C0249E84(v22, (uint64_t)v132);
          v143(&v130, (uint64_t *)&v133, &v131);
          sub_1BFEA5370((uint64_t)&v131, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)&v133, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
          if (v21 != v130) {
            break;
          }
          ++v13;
          v22 += 160;
          if (v124 == v13)
          {
            uint64_t v8 = v124;
            uint64_t v13 = v124;
            goto LABEL_24;
          }
        }
        uint64_t v8 = v124;
      }
LABEL_24:
      uint64_t v24 = v121;
      uint64_t v14 = v114;
      if (v21)
      {
        if (v13 < v16) {
          goto LABEL_139;
        }
        if (v16 < v13)
        {
          uint64_t v25 = v118;
          uint64_t v26 = (_OWORD *)(v118 + 160 * v13 - 160);
          uint64_t v27 = (long long *)(v118 + 160 * v16);
          uint64_t v28 = v13;
          uint64_t v29 = v16;
          do
          {
            if (v29 != --v28)
            {
              if (!v25) {
                goto LABEL_144;
              }
              long long v139 = v27[6];
              long long v140 = v27[7];
              long long v141 = v27[8];
              long long v142 = v27[9];
              long long v135 = v27[2];
              long long v136 = v27[3];
              long long v137 = v27[4];
              long long v138 = v27[5];
              long long v133 = *v27;
              long long v134 = v27[1];
              memmove(v27, v26, 0xA0uLL);
              v26[6] = v139;
              v26[7] = v140;
              v26[8] = v141;
              v26[9] = v142;
              v26[2] = v135;
              void v26[3] = v136;
              v26[4] = v137;
              v26[5] = v138;
              *uint64_t v26 = v133;
              v26[1] = v134;
              uint64_t v25 = v118;
              uint64_t v14 = v114;
            }
            ++v29;
            v26 -= 10;
            v27 += 10;
          }
          while (v29 < v28);
          uint64_t v24 = v121;
          uint64_t v8 = v124;
        }
      }
    }
    if (v13 < v8)
    {
      if (__OFSUB__(v13, v16)) {
        goto LABEL_137;
      }
      if (v13 - v16 < v113) {
        break;
      }
    }
LABEL_52:
    if (v13 < v16) {
      goto LABEL_132;
    }
    unint64_t v43 = v14;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v14 = v43;
    }
    else {
      uint64_t v14 = sub_1C0634CC8(0, *((void *)v43 + 2) + 1, 1, v43);
    }
    unint64_t v45 = *((void *)v14 + 2);
    unint64_t v44 = *((void *)v14 + 3);
    unint64_t v15 = v45 + 1;
    if (v45 >= v44 >> 1) {
      uint64_t v14 = sub_1C0634CC8((char *)(v44 > 1), v45 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v15;
    uint64_t v120 = v14 + 32;
    long long v46 = &v14[16 * v45 + 32];
    *(void *)long long v46 = v16;
    *((void *)v46 + 1) = v13;
    if (v45)
    {
      unint64_t v47 = v14 + 32;
      uint64_t v116 = v13;
      while (1)
      {
        unint64_t v48 = v15 - 1;
        if (v15 >= 4)
        {
          uint64_t v53 = &v47[16 * v15];
          uint64_t v54 = *((void *)v53 - 8);
          uint64_t v55 = *((void *)v53 - 7);
          BOOL v59 = __OFSUB__(v55, v54);
          uint64_t v56 = v55 - v54;
          if (v59) {
            goto LABEL_121;
          }
          uint64_t v58 = *((void *)v53 - 6);
          uint64_t v57 = *((void *)v53 - 5);
          BOOL v59 = __OFSUB__(v57, v58);
          uint64_t v51 = v57 - v58;
          char v52 = v59;
          if (v59) {
            goto LABEL_122;
          }
          unint64_t v60 = v15 - 2;
          uint64_t v61 = &v47[16 * v15 - 32];
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *((void *)v61 + 1);
          BOOL v59 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v59) {
            goto LABEL_124;
          }
          BOOL v59 = __OFADD__(v51, v64);
          uint64_t v65 = v51 + v64;
          if (v59) {
            goto LABEL_127;
          }
          if (v65 >= v56)
          {
            uint64_t v83 = &v47[16 * v48];
            uint64_t v85 = *(void *)v83;
            uint64_t v84 = *((void *)v83 + 1);
            BOOL v59 = __OFSUB__(v84, v85);
            uint64_t v86 = v84 - v85;
            if (v59) {
              goto LABEL_131;
            }
            BOOL v76 = v51 < v86;
            goto LABEL_90;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v77 = *((void *)v14 + 4);
            uint64_t v78 = *((void *)v14 + 5);
            BOOL v59 = __OFSUB__(v78, v77);
            uint64_t v70 = v78 - v77;
            char v71 = v59;
            goto LABEL_84;
          }
          uint64_t v50 = *((void *)v14 + 4);
          uint64_t v49 = *((void *)v14 + 5);
          BOOL v59 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          char v52 = v59;
        }
        if (v52) {
          goto LABEL_123;
        }
        unint64_t v60 = v15 - 2;
        uint64_t v66 = &v47[16 * v15 - 32];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v69 = __OFSUB__(v67, v68);
        uint64_t v70 = v67 - v68;
        char v71 = v69;
        if (v69) {
          goto LABEL_126;
        }
        uint64_t v72 = &v47[16 * v48];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v59 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v59) {
          goto LABEL_129;
        }
        if (__OFADD__(v70, v75)) {
          goto LABEL_130;
        }
        if (v70 + v75 >= v51)
        {
          BOOL v76 = v51 < v75;
LABEL_90:
          if (v76) {
            unint64_t v48 = v60;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v71) {
          goto LABEL_125;
        }
        uint64_t v79 = &v47[16 * v48];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v59 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v59) {
          goto LABEL_128;
        }
        if (v82 < v70) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v87 = v48 - 1;
        if (v48 - 1 >= v15)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v88 = *v121;
        if (!*v121) {
          goto LABEL_143;
        }
        unint64_t v89 = v14;
        uint64_t v90 = &v47[16 * v87];
        uint64_t v91 = v47;
        uint64_t v92 = *(void *)v90;
        unint64_t v93 = v48;
        uint64_t v94 = &v91[16 * v48];
        uint64_t v95 = *((void *)v94 + 1);
        unint64_t v96 = (char *)(v88 + 160 * *(void *)v90);
        unint64_t v123 = v88 + 160 * v95;
        uint64_t v126 = (char *)(v88 + 160 * *(void *)v94);
        swift_retain();
        sub_1C0634810(v96, v126, v123, v117, v143, v127);
        if (v128) {
          goto LABEL_114;
        }
        if (v95 < v92) {
          goto LABEL_118;
        }
        uint64_t v97 = v89;
        if (v93 > *((void *)v89 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v90 = v92;
        unint64_t v47 = v120;
        *(void *)&v120[16 * v87 + 8] = v95;
        unint64_t v98 = *((void *)v89 + 2);
        if (v93 >= v98) {
          goto LABEL_120;
        }
        uint64_t v128 = 0;
        unint64_t v15 = v98 - 1;
        size_t v99 = 16 * (v98 - 1 - v93);
        uint64_t v100 = v97;
        memmove(v94, v94 + 16, v99);
        uint64_t v14 = v100;
        *((void *)v100 + 2) = v98 - 1;
        uint64_t v13 = v116;
        if (v98 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v15 = 1;
LABEL_15:
    uint64_t v8 = v121[1];
    if (v13 >= v8) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v16, v113)) {
    goto LABEL_140;
  }
  if (v16 + v113 >= v8) {
    uint64_t v30 = v8;
  }
  else {
    uint64_t v30 = v16 + v113;
  }
  if (v30 >= v16)
  {
    if (v13 != v30)
    {
      uint64_t v115 = v14;
      uint64_t v31 = 160 * v13 - 160;
      uint64_t v119 = v30;
      do
      {
        uint64_t v32 = v16;
        uint64_t v125 = v31;
        while (1)
        {
          uint64_t v33 = (uint64_t *)(*v24 + v31);
          uint64_t v34 = *v33;
          uint64_t v35 = v24;
          uint64_t v36 = (uint64_t)(v33 + 1);
          *(void *)&long long v133 = v33[20];
          sub_1C0249E84((uint64_t)(v33 + 21), (uint64_t)&v133 + 8);
          uint64_t v131 = v34;
          sub_1C0249E84(v36, (uint64_t)v132);
          v143(&v130, (uint64_t *)&v133, &v131);
          sub_1BFEA5370((uint64_t)&v131, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)&v133, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
          if (v130 != 1) {
            break;
          }
          if (!*v35) {
            goto LABEL_142;
          }
          uint64_t v24 = v35;
          long long v37 = (_OWORD *)(*v35 + v31);
          long long v139 = v37[16];
          long long v140 = v37[17];
          long long v141 = v37[18];
          long long v142 = v37[19];
          long long v135 = v37[12];
          long long v136 = v37[13];
          long long v137 = v37[14];
          long long v138 = v37[15];
          long long v133 = v37[10];
          long long v134 = v37[11];
          long long v38 = v37[7];
          v37[16] = v37[6];
          v37[17] = v38;
          long long v39 = v37[9];
          v37[18] = v37[8];
          v37[19] = v39;
          long long v40 = v37[3];
          v37[12] = v37[2];
          v37[13] = v40;
          long long v41 = v37[5];
          v37[14] = v37[4];
          v37[15] = v41;
          long long v42 = v37[1];
          v37[10] = *v37;
          v37[11] = v42;
          v37[6] = v139;
          v37[7] = v140;
          v37[8] = v141;
          v37[9] = v142;
          v37[2] = v135;
          v37[3] = v136;
          v37[4] = v137;
          v37[5] = v138;
          *long long v37 = v133;
          v37[1] = v134;
          v31 -= 160;
          if (v13 == ++v32) {
            goto LABEL_45;
          }
        }
        uint64_t v24 = v35;
LABEL_45:
        ++v13;
        uint64_t v16 = v122;
        uint64_t v31 = v125 + 160;
      }
      while (v13 != v119);
      uint64_t v13 = v119;
      uint64_t v14 = v115;
    }
    goto LABEL_52;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  swift_release_n();
  __break(1u);
LABEL_143:
  swift_release_n();
  __break(1u);
LABEL_144:
  swift_release_n();
  __break(1u);
LABEL_145:
  swift_release_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  swift_release();
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C063CFCC(void **a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3)
{
  sub_1BFEA5440(0, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_1C0636464(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (char *)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1C002DC8C(v12, a2, a3, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, &qword_1EB87A098, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&unk_1F1BADCB0, (uint64_t (*)(void))type metadata accessor for FeedBannerAd, (void (*)(char *, char *, char *, unint64_t, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C062FCE8, (void (*)(void, uint64_t, uint64_t, void *, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C062D32C);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1C063D17C(void **a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3)
{
  sub_1BFEA5440(0, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_1C06364A0(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (char *)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1C002DC8C(v12, a2, a3, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, (unint64_t *)&unk_1EB85EF60, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t)&unk_1F1BAE1D8, (uint64_t (*)(void))type metadata accessor for FeedCustomItem, (void (*)(char *, char *, char *, unint64_t, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C06308F4, (void (*)(void, uint64_t, uint64_t, void *, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C062D70C);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1C063D32C(void **a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3)
{
  sub_1BFEA5440(0, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_1C06364B4(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (char *)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1C002DC8C(v12, a2, a3, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (unint64_t *)&unk_1EA1A8B30, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&unk_1F1BAE138, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic, (void (*)(char *, char *, char *, unint64_t, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C0630FD8, (void (*)(void, uint64_t, uint64_t, void *, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C062DAEC);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1C063D4DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, char *, void, char *))
{
  uint64_t v6 = v5;
  if (a3 != a2)
  {
    uint64_t v7 = *a4;
    uint64_t v8 = (void *)(*a4 + 72 * a3 + 64);
    uint64_t v28 = result;
    uint64_t v31 = *a4;
LABEL_3:
    uint64_t v9 = (long long *)(v7 + 72 * a3);
    long long v10 = *v9;
    uint64_t v11 = *((void *)v9 + 2);
    char v12 = *((unsigned char *)v9 + 24);
    uint64_t v13 = *((void *)v9 + 4);
    unint64_t v14 = *((void *)v9 + 5);
    uint64_t v15 = *((void *)v9 + 6);
    uint64_t v16 = *((void *)v9 + 7);
    uint64_t v17 = *((void *)v9 + 8);
    uint64_t v30 = v8;
    uint64_t v32 = a3;
    while (1)
    {
      uint64_t v37 = v13;
      uint64_t v34 = result;
      uint64_t v18 = *(v8 - 15);
      char v19 = *((unsigned char *)v8 - 112);
      uint64_t v20 = *(v8 - 13);
      uint64_t v21 = *(v8 - 10);
      uint64_t v22 = *(v8 - 9);
      long long v46 = v10;
      uint64_t v47 = v11;
      char v48 = v12 & 1;
      uint64_t v49 = v13;
      unint64_t v50 = v14;
      uint64_t v51 = v15;
      uint64_t v52 = v16;
      uint64_t v53 = v17;
      uint64_t v36 = v10;
      long long v39 = *(_OWORD *)(v8 - 17);
      uint64_t v40 = v18;
      char v41 = v19;
      uint64_t v42 = v20;
      long long v43 = *((_OWORD *)v8 - 6);
      unint64_t v35 = v43;
      uint64_t v44 = v21;
      uint64_t v45 = v22;
      unint64_t v38 = v14;
      uint64_t v54 = v16;
      sub_1BFF7FF04(v13, v14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BFF7FF04(v20, v35);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v23 = v6;
      char v24 = a5(v36, (char *)&v46 + 8, v39, (char *)&v39 + 8);
      sub_1BFEEFC20(v20, v35);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v37, v38);
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v23) {
        break;
      }
      if ((v24 & 1) == 0)
      {
        uint64_t v6 = 0;
        uint64_t v27 = v32;
        uint64_t v7 = v31;
LABEL_10:
        a3 = v27 + 1;
        uint64_t v8 = v30 + 9;
        uint64_t result = v28;
        if (a3 != a2) {
          goto LABEL_3;
        }
        return result;
      }
      uint64_t v7 = v31;
      if (!v31)
      {
        __break(1u);
        return result;
      }
      long long v10 = *((_OWORD *)v8 - 4);
      uint64_t v11 = *(v8 - 6);
      char v12 = *((unsigned char *)v8 - 40);
      uint64_t v13 = *(v8 - 4);
      unint64_t v14 = *(v8 - 3);
      uint64_t v15 = *(v8 - 2);
      uint64_t v16 = *(v8 - 1);
      uint64_t v17 = *v8;
      long long v25 = *(_OWORD *)(v8 - 11);
      *((_OWORD *)v8 - 2) = *(_OWORD *)(v8 - 13);
      *((_OWORD *)v8 - 1) = v25;
      *uint64_t v8 = *(v8 - 9);
      long long v26 = *(_OWORD *)(v8 - 15);
      *((_OWORD *)v8 - 4) = *(_OWORD *)(v8 - 17);
      *((_OWORD *)v8 - 3) = v26;
      *(v8 - 9) = v17;
      v8 -= 9;
      *((_OWORD *)v8 - 4) = v10;
      *(v8 - 6) = v11;
      *((unsigned char *)v8 - 40) = v12;
      *(v8 - 4) = v13;
      *(v8 - 3) = v14;
      uint64_t result = v34 + 1;
      *(v8 - 2) = v15;
      *(v8 - 1) = v16;
      uint64_t v27 = v32;
      uint64_t v6 = 0;
      if (v32 == v34 + 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t sub_1C063D748(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, void, char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v177 = a3;
  uint64_t v6 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_139;
    }
    if (v6) {
      return sub_1C063D4DC(0, v6, 1, a1, a2);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_148;
  }
  uint64_t v142 = v6;
  uint64_t v139 = result;
  long long v134 = a1;
  if (v6 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v140 = MEMORY[0x1E4FBC860];
    if (v6 != 1)
    {
      unint64_t v53 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C064267C(0, (unint64_t *)&unk_1EA19CA58);
    uint64_t v10 = sub_1C151ECCC();
    *(void *)(v10 + 16) = v9;
    uint64_t v140 = v10;
    __dst = (char *)(v10 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v135 = *a1 + 104;
  uint64_t v133 = *a1 + 64;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = v142;
  uint64_t v158 = *a1;
  while (1)
  {
    uint64_t v15 = v12 + 1;
    long long v141 = v11;
    if (v12 + 1 < v14)
    {
      uint64_t v16 = v13 + 72 * v15;
      uint64_t v17 = *(void *)(v16 + 16);
      char v18 = *(unsigned char *)(v16 + 24);
      uint64_t v159 = v4;
      uint64_t v19 = *(void *)(v16 + 32);
      uint64_t v20 = *(void *)(v16 + 56);
      uint64_t v21 = *(void *)(v16 + 64);
      uint64_t v22 = v13 + 72 * v12;
      uint64_t v23 = *(void *)(v22 + 16);
      char v24 = *(unsigned char *)(v22 + 24);
      uint64_t v25 = *(void *)(v22 + 32);
      uint64_t v26 = *(void *)(v22 + 56);
      uint64_t v27 = *(void *)(v22 + 64);
      long long v170 = *(_OWORD *)v16;
      uint64_t v151 = v170;
      uint64_t v171 = v17;
      char v172 = v18;
      uint64_t v173 = v19;
      long long v174 = *(_OWORD *)(v16 + 40);
      uint64_t v175 = v20;
      uint64_t v176 = v21;
      long long v163 = *(_OWORD *)v22;
      uint64_t v164 = v23;
      char v165 = v24;
      uint64_t v166 = v25;
      long long v167 = *(_OWORD *)(v22 + 40);
      unint64_t v148 = v167;
      unint64_t v28 = v174;
      uint64_t v168 = v26;
      uint64_t v169 = v27;
      sub_1BFF7FF04(v19, v174);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BFF7FF04(v25, v148);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      int v144 = a2(v151, (char *)&v170 + 8, v163, (char *)&v163 + 8);
      if (v159)
      {
        sub_1BFEEFC20(v25, v148);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v19, v28);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
LABEL_116:
        swift_bridgeObjectRelease();
        *(void *)(v140 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      sub_1BFEEFC20(v25, v148);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v19, v28);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v12 + 2;
      if (v12 + 2 < v142)
      {
        uint64_t v136 = v12;
        uint64_t v29 = v135 + 72 * v12;
        while (1)
        {
          uint64_t v154 = v15;
          uint64_t v30 = *(void *)(v29 + 56);
          char v31 = *(unsigned char *)(v29 + 64);
          uint64_t v32 = *(void *)(v29 + 72);
          uint64_t v33 = *(void *)(v29 + 96);
          uint64_t v34 = *(void *)(v29 + 104);
          uint64_t v35 = *(void *)(v29 - 16);
          char v36 = *(unsigned char *)(v29 - 8);
          uint64_t v37 = *(void *)v29;
          uint64_t v38 = *(void *)(v29 + 24);
          uint64_t v39 = *(void *)(v29 + 32);
          long long v170 = *(_OWORD *)(v29 + 40);
          uint64_t v149 = v170;
          uint64_t v171 = v30;
          char v172 = v31;
          uint64_t v173 = v32;
          long long v174 = *(_OWORD *)(v29 + 80);
          uint64_t v175 = v33;
          uint64_t v176 = v34;
          long long v163 = *(_OWORD *)(v29 - 32);
          uint64_t v164 = v35;
          char v165 = v36;
          uint64_t v166 = v37;
          long long v167 = *(_OWORD *)(v29 + 8);
          unint64_t v146 = v167;
          unint64_t v40 = v174;
          uint64_t v168 = v38;
          uint64_t v169 = v39;
          sub_1BFF7FF04(v32, v174);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          sub_1BFF7FF04(v37, v146);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          int v41 = a2(v149, (char *)&v170 + 8, v163, (char *)&v163 + 8);
          sub_1BFEEFC20(v37, v146);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v32, v40);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if ((v144 ^ v41)) {
            break;
          }
          uint64_t v15 = v154 + 1;
          v29 += 72;
          if (v142 == v154 + 1)
          {
            uint64_t v15 = v142;
            goto LABEL_21;
          }
        }
        uint64_t v15 = v154;
LABEL_21:
        uint64_t v12 = v136;
      }
      uint64_t v13 = v158;
      uint64_t v4 = 0;
      uint64_t v11 = v141;
      if (v144)
      {
        if (v15 < v12) {
          goto LABEL_143;
        }
        if (v12 < v15)
        {
          uint64_t v42 = v12;
          uint64_t v43 = v15;
          uint64_t v44 = 72 * v15;
          uint64_t v45 = 72 * v42;
          uint64_t v155 = v43;
          uint64_t v137 = v42;
          do
          {
            if (v42 != --v43)
            {
              if (!v13) {
                goto LABEL_146;
              }
              uint64_t v46 = v13 + v44;
              uint64_t v47 = *(void *)(v13 + v45 + 16);
              char v48 = *(unsigned char *)(v13 + v45 + 24);
              uint64_t v49 = *(void *)(v13 + v45 + 48);
              long long v160 = *(_OWORD *)(v13 + v45 + 56);
              long long v150 = *(_OWORD *)(v13 + v45);
              long long v152 = *(_OWORD *)(v13 + v45 + 32);
              memmove((void *)(v13 + v45), (const void *)(v13 + v44 - 72), 0x48uLL);
              uint64_t v13 = v158;
              *(_OWORD *)(v46 - 72) = v150;
              *(void *)(v46 - 56) = v47;
              *(unsigned char *)(v46 - 48) = v48;
              *(_OWORD *)(v46 - 40) = v152;
              *(void *)(v46 - 24) = v49;
              *(_OWORD *)(v46 - 16) = v160;
              uint64_t v11 = v141;
            }
            ++v42;
            v44 -= 72;
            v45 += 72;
          }
          while (v42 < v43);
          uint64_t v15 = v155;
          uint64_t v12 = v137;
        }
      }
    }
    if (v15 >= v142) {
      goto LABEL_41;
    }
    if (__OFSUB__(v15, v12)) {
      goto LABEL_140;
    }
    if (v15 - v12 >= v139)
    {
LABEL_41:
      if (v15 < v12) {
        goto LABEL_138;
      }
      goto LABEL_42;
    }
    if (__OFADD__(v12, v139)) {
      goto LABEL_141;
    }
    uint64_t v50 = v12 + v139 >= v142 ? v142 : v12 + v139;
    if (v50 < v12) {
      break;
    }
    if (v15 == v50) {
      goto LABEL_41;
    }
    uint64_t v138 = v12;
    uint64_t v161 = v4;
    uint64_t v101 = (void *)(v133 + 72 * v15);
    uint64_t v131 = v50;
    do
    {
      uint64_t v102 = v13 + 72 * v15;
      long long v103 = *(_OWORD *)v102;
      uint64_t v104 = *(void *)(v102 + 16);
      char v105 = *(unsigned char *)(v102 + 24);
      uint64_t v106 = *(void *)(v102 + 32);
      unint64_t v107 = *(void *)(v102 + 40);
      uint64_t v108 = *(void *)(v102 + 48);
      uint64_t v109 = *(void *)(v102 + 56);
      uint64_t v110 = *(void *)(v102 + 64);
      uint64_t v111 = v138;
      uint64_t v132 = v101;
      uint64_t v157 = v15;
      while (1)
      {
        uint64_t v143 = v111;
        uint64_t v112 = *(v101 - 15);
        char v113 = *((unsigned char *)v101 - 112);
        uint64_t v114 = *(v101 - 13);
        uint64_t v115 = *(v101 - 10);
        uint64_t v116 = *(v101 - 9);
        long long v170 = v103;
        uint64_t v171 = v104;
        char v172 = v105 & 1;
        uint64_t v173 = v106;
        *(void *)&long long v174 = v107;
        *((void *)&v174 + 1) = v108;
        uint64_t v175 = v109;
        uint64_t v176 = v110;
        uint64_t v147 = v103;
        long long v163 = *(_OWORD *)(v101 - 17);
        uint64_t v164 = v112;
        char v165 = v113;
        uint64_t v166 = v114;
        long long v167 = *((_OWORD *)v101 - 6);
        unint64_t v145 = v167;
        uint64_t v168 = v115;
        uint64_t v169 = v116;
        uint64_t v117 = v106;
        unint64_t v118 = v107;
        sub_1BFF7FF04(v106, v107);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_1BFF7FF04(v114, v145);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        char v119 = a2(v147, (char *)&v170 + 8, v163, (char *)&v163 + 8);
        if (v161)
        {
          sub_1BFEEFC20(v114, v145);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v117, v118);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_116;
        }
        char v120 = v119;
        sub_1BFEEFC20(v114, v145);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v117, v118);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        if ((v120 & 1) == 0) {
          break;
        }
        uint64_t v121 = v157;
        uint64_t v13 = v158;
        if (!v158) {
          goto LABEL_145;
        }
        long long v103 = *((_OWORD *)v101 - 4);
        uint64_t v104 = *(v101 - 6);
        char v105 = *((unsigned char *)v101 - 40);
        uint64_t v106 = *(v101 - 4);
        unint64_t v107 = *(v101 - 3);
        uint64_t v108 = *(v101 - 2);
        uint64_t v109 = *(v101 - 1);
        uint64_t v110 = *v101;
        long long v122 = *(_OWORD *)(v101 - 11);
        *((_OWORD *)v101 - 2) = *(_OWORD *)(v101 - 13);
        *((_OWORD *)v101 - 1) = v122;
        *uint64_t v101 = *(v101 - 9);
        long long v123 = *(_OWORD *)(v101 - 15);
        *((_OWORD *)v101 - 4) = *(_OWORD *)(v101 - 17);
        *((_OWORD *)v101 - 3) = v123;
        *(v101 - 9) = v110;
        v101 -= 9;
        *((_OWORD *)v101 - 4) = v103;
        *(v101 - 6) = v104;
        *((unsigned char *)v101 - 40) = v105;
        *(v101 - 4) = v106;
        *(v101 - 3) = v107;
        uint64_t v111 = v143 + 1;
        *(v101 - 2) = v108;
        *(v101 - 1) = v109;
        if (v157 == v143 + 1) {
          goto LABEL_99;
        }
      }
      uint64_t v121 = v157;
      uint64_t v13 = v158;
LABEL_99:
      uint64_t v15 = v121 + 1;
      uint64_t v101 = v132 + 9;
    }
    while (v15 != v131);
    uint64_t v15 = v131;
    uint64_t v4 = 0;
    uint64_t v11 = v141;
    uint64_t v12 = v138;
    if (v131 < v138) {
      goto LABEL_138;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v52 = *((void *)v11 + 2);
    unint64_t v51 = *((void *)v11 + 3);
    unint64_t v53 = v52 + 1;
    uint64_t v13 = v158;
    uint64_t v156 = v15;
    if (v52 >= v51 >> 1)
    {
      uint64_t v124 = sub_1C0634CC8((char *)(v51 > 1), v52 + 1, 1, v11);
      uint64_t v13 = v158;
      uint64_t v11 = v124;
    }
    *((void *)v11 + 2) = v53;
    uint64_t v54 = v11 + 32;
    uint64_t v55 = &v11[16 * v52 + 32];
    *(void *)uint64_t v55 = v12;
    *((void *)v55 + 1) = v156;
    if (v52)
    {
LABEL_47:
      unint64_t v56 = v53 - 1;
      if (v53 >= 4)
      {
        uint64_t v61 = &v54[16 * v53];
        uint64_t v62 = *((void *)v61 - 8);
        uint64_t v63 = *((void *)v61 - 7);
        BOOL v67 = __OFSUB__(v63, v62);
        uint64_t v64 = v63 - v62;
        if (v67) {
          goto LABEL_123;
        }
        uint64_t v66 = *((void *)v61 - 6);
        uint64_t v65 = *((void *)v61 - 5);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v59 = v65 - v66;
        char v60 = v67;
        if (v67) {
          goto LABEL_124;
        }
        unint64_t v68 = v53 - 2;
        BOOL v69 = &v54[16 * v53 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v67 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v67) {
          goto LABEL_126;
        }
        BOOL v67 = __OFADD__(v59, v72);
        uint64_t v73 = v59 + v72;
        if (v67) {
          goto LABEL_129;
        }
        if (v73 >= v64)
        {
          uint64_t v91 = &v54[16 * v56];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v67 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v67) {
            goto LABEL_133;
          }
          BOOL v84 = v59 < v94;
        }
        else
        {
LABEL_60:
          if (v60) {
            goto LABEL_125;
          }
          unint64_t v68 = v53 - 2;
          uint64_t v74 = &v54[16 * v53 - 32];
          uint64_t v76 = *(void *)v74;
          uint64_t v75 = *((void *)v74 + 1);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v78 = v75 - v76;
          char v79 = v77;
          if (v77) {
            goto LABEL_128;
          }
          uint64_t v80 = &v54[16 * v56];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v67 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v67) {
            goto LABEL_131;
          }
          if (__OFADD__(v78, v83)) {
            goto LABEL_132;
          }
          if (v78 + v83 < v59) {
            goto LABEL_72;
          }
          BOOL v84 = v59 < v83;
        }
        if (v84) {
          unint64_t v56 = v68;
        }
      }
      else
      {
        if (v53 == 3)
        {
          uint64_t v58 = *((void *)v11 + 4);
          uint64_t v57 = *((void *)v11 + 5);
          BOOL v67 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          char v60 = v67;
          goto LABEL_60;
        }
        uint64_t v85 = *((void *)v11 + 4);
        uint64_t v86 = *((void *)v11 + 5);
        BOOL v67 = __OFSUB__(v86, v85);
        uint64_t v78 = v86 - v85;
        char v79 = v67;
LABEL_72:
        if (v79) {
          goto LABEL_127;
        }
        unint64_t v87 = &v54[16 * v56];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v67 = __OFSUB__(v88, v89);
        uint64_t v90 = v88 - v89;
        if (v67) {
          goto LABEL_130;
        }
        if (v90 < v78) {
          goto LABEL_89;
        }
      }
      unint64_t v95 = v56 - 1;
      if (v56 - 1 >= v53)
      {
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
        break;
      }
      if (!v13) {
        goto LABEL_144;
      }
      unint64_t v96 = &v54[16 * v95];
      uint64_t v97 = *(void *)v96;
      unint64_t v98 = &v54[16 * v56];
      uint64_t v99 = *((void *)v98 + 1);
      sub_1C06316BC((char *)(v13 + 72 * *(void *)v96), (char *)(v13 + 72 * *(void *)v98), v13 + 72 * v99, __dst, a2);
      if (v4) {
        goto LABEL_116;
      }
      if (v99 < v97) {
        goto LABEL_120;
      }
      if (v56 > *((void *)v11 + 2)) {
        goto LABEL_121;
      }
      *(void *)unint64_t v96 = v97;
      *(void *)&v54[16 * v95 + 8] = v99;
      unint64_t v100 = *((void *)v11 + 2);
      if (v56 >= v100) {
        goto LABEL_122;
      }
      unint64_t v53 = v100 - 1;
      memmove(&v54[16 * v56], v98 + 16, 16 * (v100 - 1 - v56));
      *((void *)v11 + 2) = v100 - 1;
      uint64_t v13 = v158;
      if (v100 <= 2) {
        goto LABEL_89;
      }
      goto LABEL_47;
    }
    unint64_t v53 = 1;
LABEL_89:
    uint64_t v14 = v142;
    uint64_t v12 = v156;
    if (v156 >= v142)
    {
LABEL_103:
      if (v53 >= 2)
      {
        uint64_t v125 = *v134;
        while (1)
        {
          unint64_t v126 = v53 - 2;
          if (v53 < 2) {
            goto LABEL_134;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v11[16 * v126 + 32];
          uint64_t v128 = *(void *)&v11[16 * v53 + 24];
          sub_1C06316BC((char *)(v125 + 72 * v127), (char *)(v125 + 72 * *(void *)&v11[16 * v53 + 16]), v125 + 72 * v128, __dst, a2);
          if (v4) {
            goto LABEL_116;
          }
          if (v128 < v127) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_1C063604C((uint64_t)v11);
          }
          if (v126 >= *((void *)v11 + 2)) {
            goto LABEL_136;
          }
          uint64_t v129 = &v11[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v11 + 2);
          if (v53 > v130) {
            goto LABEL_137;
          }
          memmove(&v11[16 * v53 + 16], &v11[16 * v53 + 32], 16 * (v130 - v53));
          *((void *)v11 + 2) = v130 - 1;
          unint64_t v53 = v130 - 1;
          if (v130 <= 2) {
            goto LABEL_116;
          }
        }
      }
      goto LABEL_116;
    }
  }
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C063E300(void *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  void (*v151)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  uint64_t v7 = swift_allocObject();
  uint64_t v151 = a2;
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = a1[1];
  swift_retain_n();
  uint64_t v9 = sub_1C152086C();
  if (v9 >= v8)
  {
    if (v8 < 0) {
      goto LABEL_138;
    }
    if (v8)
    {
      swift_retain();
      sub_1C062DECC(0, v8, 1, a1, v151, a3);
    }
    swift_release();
    swift_release();
    return swift_release_n();
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_146;
  }
  uint64_t v131 = a3;
  uint64_t v132 = v3;
  uint64_t v125 = a1;
  uint64_t v117 = v9;
  if (v8 < 2)
  {
    uint64_t v121 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v116 = MEMORY[0x1E4FBC860];
    if (v8 == 1) {
      goto LABEL_13;
    }
    unint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
    if (v15 >= 2)
    {
      uint64_t v105 = *v125;
      uint64_t v133 = *v125;
      do
      {
        unint64_t v106 = v15 - 2;
        if (v15 < 2) {
          goto LABEL_133;
        }
        if (!v105) {
          goto LABEL_145;
        }
        unint64_t v107 = v14;
        uint64_t v108 = *(void *)&v14[16 * v106 + 32];
        uint64_t v109 = *(void *)&v14[16 * v15 + 24];
        uint64_t v110 = (char *)(v105 + 216 * v108);
        uint64_t v111 = (char *)(v105 + 216 * *(void *)&v14[16 * v15 + 16]);
        unint64_t v112 = v105 + 216 * v109;
        swift_retain();
        sub_1C0631CD4(v110, v111, v112, v121, v151, v131);
        if (v132) {
          break;
        }
        if (v109 < v108) {
          goto LABEL_134;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v107 = sub_1C063604C((uint64_t)v107);
        }
        if (v106 >= *((void *)v107 + 2)) {
          goto LABEL_135;
        }
        char v113 = &v107[16 * v106 + 32];
        *(void *)char v113 = v108;
        *((void *)v113 + 1) = v109;
        unint64_t v114 = *((void *)v107 + 2);
        if (v15 > v114) {
          goto LABEL_136;
        }
        memmove(&v107[16 * v15 + 16], &v107[16 * v15 + 32], 16 * (v114 - v15));
        uint64_t v14 = v107;
        *((void *)v107 + 2) = v114 - 1;
        unint64_t v15 = v114 - 1;
        uint64_t v105 = v133;
      }
      while (v114 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v116 + 16) = 0;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  uint64_t v11 = v10 >> 1;
  sub_1C064267C(0, &qword_1EB861440);
  uint64_t v12 = sub_1C151ECCC();
  *(void *)(v12 + 16) = v11;
  uint64_t v116 = v12;
  uint64_t v121 = (char *)(v12 + 32);
LABEL_13:
  uint64_t v13 = 0;
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v16 = v13++;
    uint64_t v126 = v16;
    if (v13 >= v8)
    {
      char v24 = v125;
    }
    else
    {
      unint64_t v118 = v14;
      uint64_t v17 = *v125;
      char v18 = (void *)(*v125 + 216 * v13);
      uint64_t v19 = (uint64_t *)(*v125 + 216 * v16);
      uint64_t v20 = *v19;
      *(void *)&long long v137 = *v18;
      sub_1C01F09C0((uint64_t)(v18 + 1), (uint64_t)&v137 + 8);
      uint64_t v135 = v20;
      sub_1C01F09C0((uint64_t)(v19 + 1), (uint64_t)v136);
      v151(&v134, (uint64_t *)&v137, &v135);
      uint64_t v128 = v8;
      sub_1BFEA5370((uint64_t)&v135, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
      sub_1BFEA5370((uint64_t)&v137, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
      int v21 = v134;
      uint64_t v13 = v16 + 2;
      uint64_t v122 = v17;
      if (v16 + 2 < v8)
      {
        uint64_t v22 = v17 + 216 * v16 + 224;
        while (1)
        {
          uint64_t v23 = *(void *)(v22 - 8);
          *(void *)&long long v137 = *(void *)(v22 + 208);
          sub_1C01F09C0(v22 + 216, (uint64_t)&v137 + 8);
          uint64_t v135 = v23;
          sub_1C01F09C0(v22, (uint64_t)v136);
          v151(&v134, (uint64_t *)&v137, &v135);
          sub_1BFEA5370((uint64_t)&v135, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)&v137, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
          if (v21 != v134) {
            break;
          }
          ++v13;
          v22 += 216;
          if (v128 == v13)
          {
            uint64_t v8 = v128;
            uint64_t v13 = v128;
            goto LABEL_24;
          }
        }
        uint64_t v8 = v128;
      }
LABEL_24:
      char v24 = v125;
      uint64_t v14 = v118;
      if (v21)
      {
        if (v13 < v16) {
          goto LABEL_139;
        }
        if (v16 < v13)
        {
          uint64_t v25 = v122;
          uint64_t v26 = (_OWORD *)(v122 + 216 * v13 - 216);
          uint64_t v27 = (_OWORD *)(v122 + 216 * v16);
          uint64_t v28 = v13;
          uint64_t v29 = v16;
          do
          {
            if (v29 != --v28)
            {
              if (!v25) {
                goto LABEL_144;
              }
              long long v147 = v27[10];
              long long v148 = v27[11];
              long long v149 = v27[12];
              uint64_t v150 = *((void *)v27 + 26);
              long long v143 = v27[6];
              long long v144 = v27[7];
              long long v145 = v27[8];
              long long v146 = v27[9];
              long long v139 = v27[2];
              long long v140 = v27[3];
              long long v141 = v27[4];
              long long v142 = v27[5];
              long long v137 = *v27;
              long long v138 = v27[1];
              memmove(v27, v26, 0xD8uLL);
              v26[10] = v147;
              v26[11] = v148;
              v26[12] = v149;
              *((void *)v26 + 26) = v150;
              v26[6] = v143;
              v26[7] = v144;
              v26[8] = v145;
              v26[9] = v146;
              v26[2] = v139;
              void v26[3] = v140;
              v26[4] = v141;
              v26[5] = v142;
              *uint64_t v26 = v137;
              v26[1] = v138;
              uint64_t v25 = v122;
              uint64_t v14 = v118;
            }
            ++v29;
            uint64_t v26 = (_OWORD *)((char *)v26 - 216);
            uint64_t v27 = (_OWORD *)((char *)v27 + 216);
          }
          while (v29 < v28);
          char v24 = v125;
          uint64_t v8 = v128;
        }
      }
    }
    if (v13 < v8)
    {
      if (__OFSUB__(v13, v16)) {
        goto LABEL_137;
      }
      if (v13 - v16 < v117) {
        break;
      }
    }
LABEL_52:
    if (v13 < v16) {
      goto LABEL_132;
    }
    uint64_t v47 = v14;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v14 = v47;
    }
    else {
      uint64_t v14 = sub_1C0634CC8(0, *((void *)v47 + 2) + 1, 1, v47);
    }
    unint64_t v49 = *((void *)v14 + 2);
    unint64_t v48 = *((void *)v14 + 3);
    unint64_t v15 = v49 + 1;
    if (v49 >= v48 >> 1) {
      uint64_t v14 = sub_1C0634CC8((char *)(v48 > 1), v49 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v15;
    uint64_t v124 = v14 + 32;
    uint64_t v50 = &v14[16 * v49 + 32];
    *(void *)uint64_t v50 = v16;
    *((void *)v50 + 1) = v13;
    if (v49)
    {
      unint64_t v51 = v14 + 32;
      uint64_t v120 = v13;
      while (1)
      {
        unint64_t v52 = v15 - 1;
        if (v15 >= 4)
        {
          uint64_t v57 = &v51[16 * v15];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_121;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_122;
          }
          unint64_t v64 = v15 - 2;
          uint64_t v65 = &v51[16 * v15 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_124;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_127;
          }
          if (v69 >= v60)
          {
            unint64_t v87 = &v51[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_131;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_90;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v81 = *((void *)v14 + 4);
            uint64_t v82 = *((void *)v14 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_84;
          }
          uint64_t v54 = *((void *)v14 + 4);
          uint64_t v53 = *((void *)v14 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_123;
        }
        unint64_t v64 = v15 - 2;
        uint64_t v70 = &v51[16 * v15 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_126;
        }
        uint64_t v76 = &v51[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_129;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_130;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_90:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v75) {
          goto LABEL_125;
        }
        uint64_t v83 = &v51[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_128;
        }
        if (v86 < v74) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v15)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v92 = *v125;
        if (!*v125) {
          goto LABEL_143;
        }
        uint64_t v93 = v14;
        uint64_t v94 = &v51[16 * v91];
        unint64_t v95 = v51;
        uint64_t v96 = *(void *)v94;
        unint64_t v97 = v52;
        unint64_t v98 = &v95[16 * v52];
        uint64_t v99 = *((void *)v98 + 1);
        unint64_t v100 = (char *)(v92 + 216 * *(void *)v94);
        unint64_t v127 = v92 + 216 * v99;
        unint64_t v130 = (char *)(v92 + 216 * *(void *)v98);
        swift_retain();
        sub_1C0631CD4(v100, v130, v127, v121, v151, v131);
        if (v132) {
          goto LABEL_114;
        }
        if (v99 < v96) {
          goto LABEL_118;
        }
        uint64_t v101 = v93;
        if (v97 > *((void *)v93 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v94 = v96;
        unint64_t v51 = v124;
        *(void *)&v124[16 * v91 + 8] = v99;
        unint64_t v102 = *((void *)v93 + 2);
        if (v97 >= v102) {
          goto LABEL_120;
        }
        uint64_t v132 = 0;
        unint64_t v15 = v102 - 1;
        size_t v103 = 16 * (v102 - 1 - v97);
        uint64_t v104 = v101;
        memmove(v98, v98 + 16, v103);
        uint64_t v14 = v104;
        *((void *)v104 + 2) = v102 - 1;
        uint64_t v13 = v120;
        if (v102 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v15 = 1;
LABEL_15:
    uint64_t v8 = v125[1];
    if (v13 >= v8) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v16, v117)) {
    goto LABEL_140;
  }
  if (v16 + v117 >= v8) {
    uint64_t v30 = v8;
  }
  else {
    uint64_t v30 = v16 + v117;
  }
  if (v30 >= v16)
  {
    if (v13 != v30)
    {
      char v119 = v14;
      uint64_t v31 = 216 * v13 - 216;
      uint64_t v123 = v30;
      do
      {
        uint64_t v32 = v16;
        uint64_t v129 = v31;
        while (1)
        {
          uint64_t v33 = (uint64_t *)(*v24 + v31);
          uint64_t v34 = *v33;
          uint64_t v35 = v24;
          uint64_t v36 = (uint64_t)(v33 + 1);
          *(void *)&long long v137 = v33[27];
          sub_1C01F09C0((uint64_t)(v33 + 28), (uint64_t)&v137 + 8);
          uint64_t v135 = v34;
          sub_1C01F09C0(v36, (uint64_t)v136);
          v151(&v134, (uint64_t *)&v137, &v135);
          sub_1BFEA5370((uint64_t)&v135, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)&v137, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
          if (v134 != 1) {
            break;
          }
          if (!*v35) {
            goto LABEL_142;
          }
          char v24 = v35;
          uint64_t v37 = *v35 + v31;
          uint64_t v150 = *(void *)(v37 + 424);
          long long v139 = *(_OWORD *)(v37 + 248);
          long long v137 = *(_OWORD *)(v37 + 216);
          long long v138 = *(_OWORD *)(v37 + 232);
          long long v147 = *(_OWORD *)(v37 + 376);
          long long v148 = *(_OWORD *)(v37 + 392);
          long long v149 = *(_OWORD *)(v37 + 408);
          long long v143 = *(_OWORD *)(v37 + 312);
          long long v144 = *(_OWORD *)(v37 + 328);
          long long v145 = *(_OWORD *)(v37 + 344);
          long long v146 = *(_OWORD *)(v37 + 360);
          long long v140 = *(_OWORD *)(v37 + 264);
          long long v141 = *(_OWORD *)(v37 + 280);
          long long v142 = *(_OWORD *)(v37 + 296);
          long long v38 = *(_OWORD *)(v37 + 160);
          long long v39 = *(_OWORD *)(v37 + 192);
          *(_OWORD *)(v37 + 392) = *(_OWORD *)(v37 + 176);
          *(_OWORD *)(v37 + 408) = v39;
          long long v40 = *(_OWORD *)(v37 + 96);
          long long v41 = *(_OWORD *)(v37 + 128);
          long long v42 = *(_OWORD *)(v37 + 144);
          *(_OWORD *)(v37 + 328) = *(_OWORD *)(v37 + 112);
          *(_OWORD *)(v37 + 344) = v41;
          *(_OWORD *)(v37 + 360) = v42;
          *(_OWORD *)(v37 + 376) = v38;
          long long v43 = *(_OWORD *)(v37 + 48);
          *(_OWORD *)(v37 + 248) = *(_OWORD *)(v37 + 32);
          long long v44 = *(_OWORD *)(v37 + 64);
          long long v45 = *(_OWORD *)(v37 + 80);
          *(_OWORD *)(v37 + 264) = v43;
          *(_OWORD *)(v37 + 280) = v44;
          *(_OWORD *)(v37 + 296) = v45;
          *(_OWORD *)(v37 + 312) = v40;
          long long v46 = *(_OWORD *)(v37 + 16);
          *(_OWORD *)(v37 + 216) = *(_OWORD *)v37;
          *(void *)(v37 + 424) = *(void *)(v37 + 208);
          *(_OWORD *)(v37 + 232) = v46;
          *(_OWORD *)(v37 + 160) = v147;
          *(_OWORD *)(v37 + 176) = v148;
          *(_OWORD *)(v37 + 192) = v149;
          *(void *)(v37 + 208) = v150;
          *(_OWORD *)(v37 + 96) = v143;
          *(_OWORD *)(v37 + 112) = v144;
          *(_OWORD *)(v37 + 128) = v145;
          *(_OWORD *)(v37 + 144) = v146;
          *(_OWORD *)(v37 + 32) = v139;
          *(_OWORD *)(v37 + 48) = v140;
          *(_OWORD *)(v37 + 64) = v141;
          *(_OWORD *)(v37 + 80) = v142;
          *(_OWORD *)uint64_t v37 = v137;
          *(_OWORD *)(v37 + 16) = v138;
          v31 -= 216;
          if (v13 == ++v32) {
            goto LABEL_45;
          }
        }
        char v24 = v35;
LABEL_45:
        ++v13;
        uint64_t v16 = v126;
        uint64_t v31 = v129 + 216;
      }
      while (v13 != v123);
      uint64_t v13 = v123;
      uint64_t v14 = v119;
    }
    goto LABEL_52;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  swift_release_n();
  __break(1u);
LABEL_143:
  swift_release_n();
  __break(1u);
LABEL_144:
  swift_release_n();
  __break(1u);
LABEL_145:
  swift_release_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  swift_release();
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C063EF1C(void **a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3)
{
  sub_1BFEA5440(0, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_1C06364F0(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (char *)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1C002DC8C(v12, a2, a3, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, &qword_1EB85C520, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&unk_1F1BADFD0, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed, (void (*)(char *, char *, char *, unint64_t, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C0632194, (void (*)(void, uint64_t, uint64_t, void *, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C062E1F0);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1C063F0CC(void *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  void (*v142)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  uint64_t v7 = swift_allocObject();
  long long v142 = a2;
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = a1[1];
  swift_retain_n();
  uint64_t v9 = sub_1C152086C();
  if (v9 >= v8)
  {
    if (v8 < 0) {
      goto LABEL_138;
    }
    if (v8)
    {
      swift_retain();
      sub_1C062E5D0(0, v8, 1, a1, v142, a3);
    }
    swift_release();
    swift_release();
    return swift_release_n();
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_146;
  }
  uint64_t v127 = a3;
  uint64_t v128 = v3;
  uint64_t v121 = a1;
  uint64_t v113 = v9;
  if (v8 < 2)
  {
    uint64_t v117 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v112 = MEMORY[0x1E4FBC860];
    if (v8 == 1) {
      goto LABEL_13;
    }
    unint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
    if (v15 >= 2)
    {
      uint64_t v101 = *v121;
      uint64_t v129 = *v121;
      do
      {
        unint64_t v102 = v15 - 2;
        if (v15 < 2) {
          goto LABEL_133;
        }
        if (!v101) {
          goto LABEL_145;
        }
        size_t v103 = v14;
        uint64_t v104 = *(void *)&v14[16 * v102 + 32];
        uint64_t v105 = *(void *)&v14[16 * v15 + 24];
        unint64_t v106 = (char *)(v101 + 160 * v104);
        unint64_t v107 = (char *)(v101 + 160 * *(void *)&v14[16 * v15 + 16]);
        unint64_t v108 = v101 + 160 * v105;
        swift_retain();
        sub_1C0632878(v106, v107, v108, v117, v142, v127);
        if (v128) {
          break;
        }
        if (v105 < v104) {
          goto LABEL_134;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          size_t v103 = sub_1C063604C((uint64_t)v103);
        }
        if (v102 >= *((void *)v103 + 2)) {
          goto LABEL_135;
        }
        uint64_t v109 = &v103[16 * v102 + 32];
        *(void *)uint64_t v109 = v104;
        *((void *)v109 + 1) = v105;
        unint64_t v110 = *((void *)v103 + 2);
        if (v15 > v110) {
          goto LABEL_136;
        }
        memmove(&v103[16 * v15 + 16], &v103[16 * v15 + 32], 16 * (v110 - v15));
        uint64_t v14 = v103;
        *((void *)v103 + 2) = v110 - 1;
        unint64_t v15 = v110 - 1;
        uint64_t v101 = v129;
      }
      while (v110 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v112 + 16) = 0;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  uint64_t v11 = v10 >> 1;
  sub_1C064267C(0, &qword_1EB86B3F0);
  uint64_t v12 = sub_1C151ECCC();
  *(void *)(v12 + 16) = v11;
  uint64_t v112 = v12;
  uint64_t v117 = (char *)(v12 + 32);
LABEL_13:
  uint64_t v13 = 0;
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v16 = v13++;
    uint64_t v122 = v16;
    if (v13 >= v8)
    {
      char v24 = v121;
    }
    else
    {
      unint64_t v114 = v14;
      uint64_t v17 = *v121;
      char v18 = (void *)(*v121 + 160 * v13);
      uint64_t v19 = (uint64_t *)(*v121 + 160 * v16);
      uint64_t v20 = *v19;
      *(void *)&long long v133 = *v18;
      sub_1BFEA435C((uint64_t)(v18 + 1), (uint64_t)&v133 + 8);
      uint64_t v131 = v20;
      sub_1BFEA435C((uint64_t)(v19 + 1), (uint64_t)v132);
      v142(&v130, (uint64_t *)&v133, &v131);
      uint64_t v124 = v8;
      sub_1BFEA5370((uint64_t)&v131, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
      sub_1BFEA5370((uint64_t)&v133, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
      int v21 = v130;
      uint64_t v13 = v16 + 2;
      uint64_t v118 = v17;
      if (v16 + 2 < v8)
      {
        uint64_t v22 = v17 + 160 * v16 + 168;
        while (1)
        {
          uint64_t v23 = *(void *)(v22 - 8);
          *(void *)&long long v133 = *(void *)(v22 + 152);
          sub_1BFEA435C(v22 + 160, (uint64_t)&v133 + 8);
          uint64_t v131 = v23;
          sub_1BFEA435C(v22, (uint64_t)v132);
          v142(&v130, (uint64_t *)&v133, &v131);
          sub_1BFEA5370((uint64_t)&v131, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)&v133, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
          if (v21 != v130) {
            break;
          }
          ++v13;
          v22 += 160;
          if (v124 == v13)
          {
            uint64_t v8 = v124;
            uint64_t v13 = v124;
            goto LABEL_24;
          }
        }
        uint64_t v8 = v124;
      }
LABEL_24:
      char v24 = v121;
      uint64_t v14 = v114;
      if (v21)
      {
        if (v13 < v16) {
          goto LABEL_139;
        }
        if (v16 < v13)
        {
          uint64_t v25 = v118;
          uint64_t v26 = (_OWORD *)(v118 + 160 * v13 - 160);
          uint64_t v27 = (long long *)(v118 + 160 * v16);
          uint64_t v28 = v13;
          uint64_t v29 = v16;
          do
          {
            if (v29 != --v28)
            {
              if (!v25) {
                goto LABEL_144;
              }
              long long v139 = v27[6];
              long long v140 = v27[7];
              v141[0] = v27[8];
              *(_OWORD *)((char *)v141 + 9) = *(long long *)((char *)v27 + 137);
              long long v135 = v27[2];
              long long v136 = v27[3];
              long long v137 = v27[4];
              long long v138 = v27[5];
              long long v133 = *v27;
              long long v134 = v27[1];
              memmove(v27, v26, 0xA0uLL);
              v26[6] = v139;
              v26[7] = v140;
              v26[8] = v141[0];
              *(_OWORD *)((char *)v26 + 137) = *(_OWORD *)((char *)v141 + 9);
              v26[2] = v135;
              void v26[3] = v136;
              v26[4] = v137;
              v26[5] = v138;
              *uint64_t v26 = v133;
              v26[1] = v134;
              uint64_t v25 = v118;
              uint64_t v14 = v114;
            }
            ++v29;
            v26 -= 10;
            v27 += 10;
          }
          while (v29 < v28);
          char v24 = v121;
          uint64_t v8 = v124;
        }
      }
    }
    if (v13 < v8)
    {
      if (__OFSUB__(v13, v16)) {
        goto LABEL_137;
      }
      if (v13 - v16 < v113) {
        break;
      }
    }
LABEL_52:
    if (v13 < v16) {
      goto LABEL_132;
    }
    long long v43 = v14;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v14 = v43;
    }
    else {
      uint64_t v14 = sub_1C0634CC8(0, *((void *)v43 + 2) + 1, 1, v43);
    }
    unint64_t v45 = *((void *)v14 + 2);
    unint64_t v44 = *((void *)v14 + 3);
    unint64_t v15 = v45 + 1;
    if (v45 >= v44 >> 1) {
      uint64_t v14 = sub_1C0634CC8((char *)(v44 > 1), v45 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v15;
    uint64_t v120 = v14 + 32;
    long long v46 = &v14[16 * v45 + 32];
    *(void *)long long v46 = v16;
    *((void *)v46 + 1) = v13;
    if (v45)
    {
      uint64_t v47 = v14 + 32;
      uint64_t v116 = v13;
      while (1)
      {
        unint64_t v48 = v15 - 1;
        if (v15 >= 4)
        {
          uint64_t v53 = &v47[16 * v15];
          uint64_t v54 = *((void *)v53 - 8);
          uint64_t v55 = *((void *)v53 - 7);
          BOOL v59 = __OFSUB__(v55, v54);
          uint64_t v56 = v55 - v54;
          if (v59) {
            goto LABEL_121;
          }
          uint64_t v58 = *((void *)v53 - 6);
          uint64_t v57 = *((void *)v53 - 5);
          BOOL v59 = __OFSUB__(v57, v58);
          uint64_t v51 = v57 - v58;
          char v52 = v59;
          if (v59) {
            goto LABEL_122;
          }
          unint64_t v60 = v15 - 2;
          uint64_t v61 = &v47[16 * v15 - 32];
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *((void *)v61 + 1);
          BOOL v59 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v59) {
            goto LABEL_124;
          }
          BOOL v59 = __OFADD__(v51, v64);
          uint64_t v65 = v51 + v64;
          if (v59) {
            goto LABEL_127;
          }
          if (v65 >= v56)
          {
            uint64_t v83 = &v47[16 * v48];
            uint64_t v85 = *(void *)v83;
            uint64_t v84 = *((void *)v83 + 1);
            BOOL v59 = __OFSUB__(v84, v85);
            uint64_t v86 = v84 - v85;
            if (v59) {
              goto LABEL_131;
            }
            BOOL v76 = v51 < v86;
            goto LABEL_90;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v77 = *((void *)v14 + 4);
            uint64_t v78 = *((void *)v14 + 5);
            BOOL v59 = __OFSUB__(v78, v77);
            uint64_t v70 = v78 - v77;
            char v71 = v59;
            goto LABEL_84;
          }
          uint64_t v50 = *((void *)v14 + 4);
          uint64_t v49 = *((void *)v14 + 5);
          BOOL v59 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          char v52 = v59;
        }
        if (v52) {
          goto LABEL_123;
        }
        unint64_t v60 = v15 - 2;
        uint64_t v66 = &v47[16 * v15 - 32];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v69 = __OFSUB__(v67, v68);
        uint64_t v70 = v67 - v68;
        char v71 = v69;
        if (v69) {
          goto LABEL_126;
        }
        uint64_t v72 = &v47[16 * v48];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v59 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v59) {
          goto LABEL_129;
        }
        if (__OFADD__(v70, v75)) {
          goto LABEL_130;
        }
        if (v70 + v75 >= v51)
        {
          BOOL v76 = v51 < v75;
LABEL_90:
          if (v76) {
            unint64_t v48 = v60;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v71) {
          goto LABEL_125;
        }
        uint64_t v79 = &v47[16 * v48];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v59 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v59) {
          goto LABEL_128;
        }
        if (v82 < v70) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v87 = v48 - 1;
        if (v48 - 1 >= v15)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v88 = *v121;
        if (!*v121) {
          goto LABEL_143;
        }
        uint64_t v89 = v14;
        uint64_t v90 = &v47[16 * v87];
        unint64_t v91 = v47;
        uint64_t v92 = *(void *)v90;
        unint64_t v93 = v48;
        uint64_t v94 = &v91[16 * v48];
        uint64_t v95 = *((void *)v94 + 1);
        uint64_t v96 = (char *)(v88 + 160 * *(void *)v90);
        unint64_t v123 = v88 + 160 * v95;
        uint64_t v126 = (char *)(v88 + 160 * *(void *)v94);
        swift_retain();
        sub_1C0632878(v96, v126, v123, v117, v142, v127);
        if (v128) {
          goto LABEL_114;
        }
        if (v95 < v92) {
          goto LABEL_118;
        }
        unint64_t v97 = v89;
        if (v93 > *((void *)v89 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v90 = v92;
        uint64_t v47 = v120;
        *(void *)&v120[16 * v87 + 8] = v95;
        unint64_t v98 = *((void *)v89 + 2);
        if (v93 >= v98) {
          goto LABEL_120;
        }
        uint64_t v128 = 0;
        unint64_t v15 = v98 - 1;
        size_t v99 = 16 * (v98 - 1 - v93);
        unint64_t v100 = v97;
        memmove(v94, v94 + 16, v99);
        uint64_t v14 = v100;
        *((void *)v100 + 2) = v98 - 1;
        uint64_t v13 = v116;
        if (v98 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v15 = 1;
LABEL_15:
    uint64_t v8 = v121[1];
    if (v13 >= v8) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v16, v113)) {
    goto LABEL_140;
  }
  if (v16 + v113 >= v8) {
    uint64_t v30 = v8;
  }
  else {
    uint64_t v30 = v16 + v113;
  }
  if (v30 >= v16)
  {
    if (v13 != v30)
    {
      uint64_t v115 = v14;
      uint64_t v31 = 160 * v13 - 160;
      uint64_t v119 = v30;
      do
      {
        uint64_t v32 = v16;
        uint64_t v125 = v31;
        while (1)
        {
          uint64_t v33 = (uint64_t *)(*v24 + v31);
          uint64_t v34 = *v33;
          uint64_t v35 = v24;
          uint64_t v36 = (uint64_t)(v33 + 1);
          *(void *)&long long v133 = v33[20];
          sub_1BFEA435C((uint64_t)(v33 + 21), (uint64_t)&v133 + 8);
          uint64_t v131 = v34;
          sub_1BFEA435C(v36, (uint64_t)v132);
          v142(&v130, (uint64_t *)&v133, &v131);
          sub_1BFEA5370((uint64_t)&v131, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
          sub_1BFEA5370((uint64_t)&v133, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
          if (v130 != 1) {
            break;
          }
          if (!*v35) {
            goto LABEL_142;
          }
          char v24 = v35;
          uint64_t v37 = (_OWORD *)(*v35 + v31);
          long long v139 = v37[16];
          long long v140 = v37[17];
          v141[0] = v37[18];
          long long v135 = v37[12];
          long long v136 = v37[13];
          long long v137 = v37[14];
          long long v138 = v37[15];
          long long v133 = v37[10];
          long long v134 = v37[11];
          *(_OWORD *)((char *)v141 + 9) = *(_OWORD *)((char *)v37 + 297);
          long long v38 = v37[7];
          v37[16] = v37[6];
          v37[17] = v38;
          long long v39 = v37[9];
          v37[18] = v37[8];
          v37[19] = v39;
          long long v40 = v37[3];
          v37[12] = v37[2];
          v37[13] = v40;
          long long v41 = v37[5];
          v37[14] = v37[4];
          v37[15] = v41;
          long long v42 = v37[1];
          v37[10] = *v37;
          v37[11] = v42;
          v37[6] = v139;
          v37[7] = v140;
          v37[8] = v141[0];
          *(_OWORD *)((char *)v37 + 137) = *(_OWORD *)((char *)v141 + 9);
          v37[2] = v135;
          v37[3] = v136;
          v37[4] = v137;
          v37[5] = v138;
          *uint64_t v37 = v133;
          v37[1] = v134;
          v31 -= 160;
          if (v13 == ++v32) {
            goto LABEL_45;
          }
        }
        char v24 = v35;
LABEL_45:
        ++v13;
        uint64_t v16 = v122;
        uint64_t v31 = v125 + 160;
      }
      while (v13 != v119);
      uint64_t v13 = v119;
      uint64_t v14 = v115;
    }
    goto LABEL_52;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  swift_release_n();
  __break(1u);
LABEL_143:
  swift_release_n();
  __break(1u);
LABEL_144:
  swift_release_n();
  __break(1u);
LABEL_145:
  swift_release_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  swift_release();
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C063FC4C(void **a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3)
{
  sub_1BFEA5440(0, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_1C063652C(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (char *)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1C002DC8C(v12, a2, a3, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner, &qword_1EA19CBB0, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&unk_1F1BAD9E0, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner, (void (*)(char *, char *, char *, unint64_t, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C0632D28, (void (*)(void, uint64_t, uint64_t, void *, void (*)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t))sub_1C062E88C);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1C063FDFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C063FE64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C063FE9C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  return sub_1C063A0FC(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, void *, void *))(v4 + 16));
}

uint64_t sub_1C063FEA4(uint64_t a1, _OWORD *a2, uint64_t a3, _OWORD *a4)
{
  return sub_1C0639C08(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))(v4 + 16));
}

uint64_t sub_1C063FEAC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void **)(a1 + 112);
  unint64_t v8 = *(void *)(a1 + 136);
  uint64_t v12 = *(void *)(a1 + 128);
  id v9 = *(id *)(a1 + 8);
  swift_bridgeObjectRetain();
  id v10 = v2;
  sub_1C0188054(v3, v4, v5, v6, v7);
  sub_1BFF7FF04(v12, v8);
  return a1;
}

uint64_t sub_1C063FF50(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void **)(a1 + 112);
  unint64_t v8 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 128);

  swift_bridgeObjectRelease();
  sub_1BFFF2340(v3, v4, v5, v6, v7);
  sub_1BFEEFC20(v10, v8);
  return a1;
}

uint64_t sub_1C063FFF4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0640050(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(unint64_t, void *, void, char *))
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    uint64_t v6 = (unint64_t *)(*a4 + 96 * a3 + 88);
    uint64_t v32 = result;
    uint64_t v35 = *a4;
LABEL_4:
    uint64_t v7 = v5 + 96 * a3;
    unint64_t v8 = *(void *)v7;
    unint64_t v9 = *(void *)(v7 + 8);
    unint64_t v10 = *(void *)(v7 + 16);
    long long v11 = *(_OWORD *)(v7 + 24);
    char v12 = *(unsigned char *)(v7 + 40);
    unint64_t v13 = *(void *)(v7 + 48);
    unint64_t v14 = *(void *)(v7 + 56);
    unint64_t v15 = *(void *)(v7 + 64);
    unint64_t v16 = *(void *)(v7 + 72);
    uint64_t v18 = *(void *)(v7 + 80);
    unint64_t v17 = *(void *)(v7 + 88);
    uint64_t v34 = v6;
    uint64_t v36 = a3;
    while (1)
    {
      uint64_t v38 = result;
      uint64_t v19 = *(v6 - 21);
      char v20 = *((unsigned char *)v6 - 144);
      uint64_t v21 = *(v6 - 17);
      uint64_t v22 = *(v6 - 16);
      uint64_t v23 = *(v6 - 15);
      uint64_t v24 = *(v6 - 14);
      uint64_t v25 = *(v6 - 13);
      unint64_t v39 = *(v6 - 12);
      unint64_t v40 = v8;
      unint64_t v53 = v8;
      v54[0] = v9;
      v54[1] = v10;
      long long v55 = v11;
      char v56 = v12 & 1;
      unint64_t v57 = v13;
      unint64_t v58 = v14;
      unint64_t v59 = v15;
      unint64_t v60 = v16;
      long long v41 = *(_OWORD *)(v6 - 23);
      uint64_t v61 = v18;
      unint64_t v62 = v17;
      *((void *)&v43 + 1) = *((void *)&v41 + 1);
      uint64_t v44 = v19;
      long long v45 = *((_OWORD *)v6 - 10);
      char v46 = v20;
      uint64_t v47 = v21;
      uint64_t v48 = v22;
      uint64_t v49 = v23;
      uint64_t v50 = v24;
      uint64_t v51 = v25;
      unint64_t v52 = v39;
      unint64_t v42 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF7FF04(v18, v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF7FF04(v25, v39);
      uint64_t v26 = v63;
      char v27 = a5(v40, v54, v41, (char *)&v43 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v25, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v18, v42);
      uint64_t v63 = v26;
      if (v26) {
        break;
      }
      if ((v27 & 1) == 0)
      {
        uint64_t v31 = v36;
        uint64_t v5 = v35;
LABEL_11:
        a3 = v31 + 1;
        uint64_t v6 = v34 + 12;
        uint64_t result = v32;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v5 = v35;
      if (!v35)
      {
        __break(1u);
        return result;
      }
      unint64_t v8 = *(v6 - 11);
      unint64_t v9 = *(v6 - 10);
      unint64_t v10 = *(v6 - 9);
      long long v11 = *((_OWORD *)v6 - 4);
      char v12 = *((unsigned char *)v6 - 48);
      unint64_t v13 = *(v6 - 5);
      unint64_t v14 = *(v6 - 4);
      unint64_t v15 = *(v6 - 3);
      unint64_t v16 = *(v6 - 2);
      uint64_t v18 = *(v6 - 1);
      unint64_t v17 = *v6;
      long long v28 = *(_OWORD *)(v6 - 17);
      *(_OWORD *)(v6 - 7) = *(_OWORD *)(v6 - 19);
      *(_OWORD *)(v6 - 5) = v28;
      long long v29 = *(_OWORD *)(v6 - 13);
      *(_OWORD *)(v6 - 3) = *(_OWORD *)(v6 - 15);
      *(_OWORD *)(v6 - 1) = v29;
      long long v30 = *(_OWORD *)(v6 - 21);
      *(_OWORD *)(v6 - 11) = *(_OWORD *)(v6 - 23);
      *(_OWORD *)(v6 - 9) = v30;
      *(v6 - 12) = v17;
      v6 -= 12;
      *(v6 - 11) = v8;
      *(v6 - 10) = v9;
      *(v6 - 9) = v10;
      *((_OWORD *)v6 - 4) = v11;
      *((unsigned char *)v6 - 48) = v12;
      *(v6 - 5) = v13;
      *(v6 - 4) = v14;
      *(v6 - 3) = v15;
      *(v6 - 2) = v16;
      uint64_t result = v38 + 1;
      *(v6 - 1) = v18;
      uint64_t v31 = v36;
      if (v36 == v38 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C06402E4(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, void, char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v200 = a3;
  uint64_t v6 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_140;
    }
    if (v6) {
      return sub_1C0640050(0, v6, 1, a1, (uint64_t (*)(unint64_t, void *, void, char *))a2);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_149;
  }
  uint64_t v156 = v6;
  uint64_t v152 = result;
  uint64_t v150 = a1;
  if (v6 < 2)
  {
    long long v11 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v153 = MEMORY[0x1E4FBC860];
    if (v6 != 1)
    {
      unint64_t v64 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C064267C(0, &qword_1EA19C548);
    uint64_t v10 = sub_1C151ECCC();
    *(void *)(v10 + 16) = v9;
    uint64_t v153 = v10;
    __dst = (char *)(v10 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v151 = *a1 + 144;
  uint64_t v149 = *a1 + 88;
  long long v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = v156;
  uint64_t v175 = *a1;
  do
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v154 = v12;
    uint64_t v155 = v11;
    if (v12 + 1 < v14)
    {
      uint64_t v17 = v13 + 96 * v16;
      unint64_t v18 = *(void *)(v17 + 16);
      char v19 = *(unsigned char *)(v17 + 40);
      unint64_t v20 = *(void *)(v17 + 48);
      unint64_t v21 = *(void *)(v17 + 56);
      unint64_t v22 = *(void *)(v17 + 64);
      unint64_t v23 = *(void *)(v17 + 72);
      uint64_t v176 = v4;
      uint64_t v24 = *(void *)(v17 + 80);
      unint64_t v25 = *(void *)(v17 + 88);
      uint64_t v26 = v13 + 96 * v15;
      uint64_t v27 = *(void *)(v26 + 16);
      char v28 = *(unsigned char *)(v26 + 40);
      uint64_t v29 = *(void *)(v26 + 48);
      uint64_t v30 = *(void *)(v26 + 56);
      uint64_t v31 = *(void *)(v26 + 64);
      uint64_t v32 = *(void *)(v26 + 72);
      uint64_t v33 = *(void *)(v26 + 80);
      unint64_t v34 = *(void *)(v26 + 88);
      long long v190 = *(_OWORD *)v17;
      unint64_t v164 = v190;
      unint64_t v191 = v18;
      long long v192 = *(_OWORD *)(v17 + 24);
      char v193 = v19;
      unint64_t v194 = v20;
      unint64_t v195 = v21;
      unint64_t v196 = v22;
      unint64_t v197 = v23;
      uint64_t v198 = v24;
      unint64_t v199 = v25;
      long long v180 = *(_OWORD *)v26;
      uint64_t v181 = v27;
      long long v182 = *(_OWORD *)(v26 + 24);
      char v183 = v28;
      uint64_t v184 = v29;
      uint64_t v185 = v30;
      uint64_t v186 = v31;
      uint64_t v187 = v32;
      uint64_t v188 = v33;
      unint64_t v189 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v167 = v25;
      sub_1BFF7FF04(v24, v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF7FF04(v33, v34);
      int v160 = a2(v164, (char *)&v190 + 8, v180, (char *)&v180 + 8);
      if (v176)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v146 = v24;
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v33, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v24, v25);
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v156)
      {
        uint64_t v35 = v151 + 96 * v15;
        while (1)
        {
          uint64_t v171 = v16;
          unint64_t v36 = *(void *)(v35 + 64);
          char v37 = *(unsigned char *)(v35 + 88);
          unint64_t v38 = *(void *)(v35 + 96);
          unint64_t v39 = *(void *)(v35 + 104);
          unint64_t v40 = *(void *)(v35 + 112);
          unint64_t v41 = *(void *)(v35 + 120);
          uint64_t v43 = *(void *)(v35 + 128);
          unint64_t v42 = *(void *)(v35 + 136);
          uint64_t v44 = *(void *)(v35 - 32);
          char v45 = *(unsigned char *)(v35 - 8);
          uint64_t v46 = *(void *)v35;
          uint64_t v47 = *(void *)(v35 + 8);
          uint64_t v48 = *(void *)(v35 + 16);
          uint64_t v49 = *(void *)(v35 + 24);
          uint64_t v51 = *(void *)(v35 + 32);
          unint64_t v50 = *(void *)(v35 + 40);
          long long v190 = *(_OWORD *)(v35 + 48);
          unint64_t v162 = v190;
          unint64_t v191 = v36;
          long long v192 = *(_OWORD *)(v35 + 72);
          char v193 = v37;
          unint64_t v194 = v38;
          unint64_t v195 = v39;
          unint64_t v196 = v40;
          unint64_t v197 = v41;
          uint64_t v198 = v43;
          unint64_t v199 = v42;
          long long v180 = *(_OWORD *)(v35 - 48);
          uint64_t v181 = v44;
          long long v182 = *(_OWORD *)(v35 - 24);
          char v183 = v45;
          uint64_t v184 = v46;
          uint64_t v185 = v47;
          uint64_t v186 = v48;
          uint64_t v187 = v49;
          uint64_t v188 = v51;
          unint64_t v189 = v50;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v165 = v42;
          sub_1BFF7FF04(v43, v42);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v51, v50);
          LODWORD(v42) = a2(v162, (char *)&v190 + 8, v180, (char *)&v180 + 8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v51, v50);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v43, v165);
          if ((v160 ^ v42)) {
            break;
          }
          uint64_t v16 = v171 + 1;
          v35 += 96;
          if (v156 == v171 + 1)
          {
            uint64_t v16 = v156;
            goto LABEL_21;
          }
        }
        uint64_t v16 = v171;
LABEL_21:
        uint64_t v15 = v154;
      }
      uint64_t v13 = v175;
      uint64_t v4 = 0;
      long long v11 = v155;
      if (v160)
      {
        if (v16 < v15) {
          goto LABEL_144;
        }
        if (v15 < v16)
        {
          uint64_t v52 = 96 * v16;
          uint64_t v53 = v15;
          uint64_t v54 = 96 * v15;
          uint64_t v172 = v16;
          uint64_t v55 = v16;
          uint64_t v56 = v53;
          do
          {
            if (v56 != --v55)
            {
              if (!v13) {
                goto LABEL_147;
              }
              uint64_t v57 = v13 + v52;
              uint64_t v58 = *(void *)(v13 + v54 + 16);
              char v59 = *(unsigned char *)(v13 + v54 + 40);
              long long v177 = *(_OWORD *)(v13 + v54 + 48);
              uint64_t v60 = *(void *)(v13 + v54 + 72);
              uint64_t v169 = *(void *)(v13 + v54 + 64);
              long long v163 = *(_OWORD *)(v13 + v54);
              long long v166 = *(_OWORD *)(v13 + v54 + 24);
              long long v168 = *(_OWORD *)(v13 + v54 + 80);
              memmove((void *)(v13 + v54), (const void *)(v13 + v52 - 96), 0x60uLL);
              uint64_t v13 = v175;
              *(_OWORD *)(v57 - 96) = v163;
              *(void *)(v57 - 80) = v58;
              *(_OWORD *)(v57 - 72) = v166;
              *(unsigned char *)(v57 - 56) = v59;
              *(_OWORD *)(v57 - 48) = v177;
              *(void *)(v57 - 32) = v169;
              *(void *)(v57 - 24) = v60;
              *(_OWORD *)(v57 - 16) = v168;
              long long v11 = v155;
            }
            ++v56;
            v52 -= 96;
            v54 += 96;
          }
          while (v56 < v55);
          uint64_t v16 = v172;
          uint64_t v15 = v154;
        }
      }
    }
    if (v16 >= v156) {
      goto LABEL_41;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_141;
    }
    if (v16 - v15 >= v152)
    {
LABEL_41:
      if (v16 < v15) {
        goto LABEL_139;
      }
      goto LABEL_42;
    }
    if (__OFADD__(v15, v152)) {
      goto LABEL_142;
    }
    if (v15 + v152 >= v156) {
      uint64_t v61 = v156;
    }
    else {
      uint64_t v61 = v15 + v152;
    }
    if (v61 < v15)
    {
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      uint64_t result = sub_1C15203FC();
      __break(1u);
      return result;
    }
    if (v16 == v61) {
      goto LABEL_41;
    }
    uint64_t v178 = v4;
    uint64_t v112 = (unint64_t *)(v149 + 96 * v16);
    uint64_t v147 = v61;
    do
    {
      uint64_t v113 = v13 + 96 * v16;
      unint64_t v115 = *(void *)v113;
      unint64_t v114 = *(void *)(v113 + 8);
      unint64_t v116 = *(void *)(v113 + 16);
      long long v117 = *(_OWORD *)(v113 + 24);
      char v118 = *(unsigned char *)(v113 + 40);
      unint64_t v119 = *(void *)(v113 + 48);
      unint64_t v120 = *(void *)(v113 + 56);
      unint64_t v121 = *(void *)(v113 + 64);
      unint64_t v122 = *(void *)(v113 + 72);
      uint64_t v124 = *(void *)(v113 + 80);
      unint64_t v123 = *(void *)(v113 + 88);
      uint64_t v125 = v154;
      long long v148 = v112;
      uint64_t v174 = v16;
      while (1)
      {
        uint64_t v157 = v125;
        uint64_t v158 = *(v112 - 21);
        unint64_t v159 = v115;
        char v126 = *((unsigned char *)v112 - 144);
        uint64_t v127 = *(v112 - 17);
        uint64_t v128 = *(v112 - 16);
        uint64_t v129 = *(v112 - 15);
        uint64_t v130 = *(v112 - 14);
        uint64_t v131 = *(v112 - 13);
        unint64_t v132 = *(v112 - 12);
        *(void *)&long long v190 = v115;
        *((void *)&v190 + 1) = v114;
        unint64_t v191 = v116;
        long long v192 = v117;
        char v193 = v118 & 1;
        unint64_t v194 = v119;
        unint64_t v195 = v120;
        unint64_t v196 = v121;
        unint64_t v197 = v122;
        long long v161 = *(_OWORD *)(v112 - 23);
        uint64_t v198 = v124;
        unint64_t v199 = v123;
        *((void *)&v180 + 1) = *((void *)&v161 + 1);
        uint64_t v181 = v158;
        long long v182 = *((_OWORD *)v112 - 10);
        char v183 = v126;
        uint64_t v184 = v127;
        uint64_t v185 = v128;
        uint64_t v186 = v129;
        uint64_t v187 = v130;
        uint64_t v188 = v131;
        unint64_t v189 = v132;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v167 = v123;
        sub_1BFF7FF04(v124, v123);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v131, v132);
        char v133 = a2(v159, (char *)&v190 + 8, v161, (char *)&v180 + 8);
        if (v178)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v131, v132);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v146 = v124;
LABEL_116:
          sub_1BFEEFC20(v146, v167);
          swift_bridgeObjectRelease();
          goto LABEL_117;
        }
        char v134 = v133;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v131, v132);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v124, v167);
        if ((v134 & 1) == 0) {
          break;
        }
        uint64_t v135 = v174;
        uint64_t v13 = v175;
        if (!v175) {
          goto LABEL_146;
        }
        unint64_t v115 = *(v112 - 11);
        unint64_t v114 = *(v112 - 10);
        unint64_t v116 = *(v112 - 9);
        long long v117 = *((_OWORD *)v112 - 4);
        char v118 = *((unsigned char *)v112 - 48);
        unint64_t v119 = *(v112 - 5);
        unint64_t v120 = *(v112 - 4);
        unint64_t v121 = *(v112 - 3);
        unint64_t v122 = *(v112 - 2);
        uint64_t v124 = *(v112 - 1);
        unint64_t v123 = *v112;
        long long v136 = *(_OWORD *)(v112 - 17);
        *(_OWORD *)(v112 - 7) = *(_OWORD *)(v112 - 19);
        *(_OWORD *)(v112 - 5) = v136;
        long long v137 = *(_OWORD *)(v112 - 13);
        *(_OWORD *)(v112 - 3) = *(_OWORD *)(v112 - 15);
        *(_OWORD *)(v112 - 1) = v137;
        long long v138 = *(_OWORD *)(v112 - 21);
        *(_OWORD *)(v112 - 11) = *(_OWORD *)(v112 - 23);
        *(_OWORD *)(v112 - 9) = v138;
        *(v112 - 12) = v123;
        v112 -= 12;
        *(v112 - 11) = v115;
        *(v112 - 10) = v114;
        *(v112 - 9) = v116;
        *((_OWORD *)v112 - 4) = v117;
        *((unsigned char *)v112 - 48) = v118;
        *(v112 - 5) = v119;
        *(v112 - 4) = v120;
        *(v112 - 3) = v121;
        *(v112 - 2) = v122;
        uint64_t v125 = v157 + 1;
        *(v112 - 1) = v124;
        if (v174 == v157 + 1) {
          goto LABEL_99;
        }
      }
      uint64_t v135 = v174;
      uint64_t v13 = v175;
LABEL_99:
      uint64_t v16 = v135 + 1;
      uint64_t v112 = v148 + 12;
    }
    while (v16 != v147);
    uint64_t v16 = v147;
    uint64_t v4 = 0;
    long long v11 = v155;
    if (v147 < v154) {
      goto LABEL_139;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v63 = *((void *)v11 + 2);
    unint64_t v62 = *((void *)v11 + 3);
    unint64_t v64 = v63 + 1;
    uint64_t v13 = v175;
    if (v63 >= v62 >> 1)
    {
      long long v139 = sub_1C0634CC8((char *)(v62 > 1), v63 + 1, 1, v11);
      uint64_t v13 = v175;
      long long v11 = v139;
    }
    *((void *)v11 + 2) = v64;
    uint64_t v65 = v11 + 32;
    uint64_t v66 = &v11[16 * v63 + 32];
    *(void *)uint64_t v66 = v154;
    *((void *)v66 + 1) = v16;
    uint64_t v173 = v16;
    if (v63)
    {
      while (2)
      {
        unint64_t v67 = v64 - 1;
        if (v64 >= 4)
        {
          uint64_t v72 = &v65[16 * v64];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_124;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_125;
          }
          unint64_t v79 = v64 - 2;
          uint64_t v80 = &v65[16 * v64 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_127;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_130;
          }
          if (v84 >= v75)
          {
            unint64_t v102 = &v65[16 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_134;
            }
            BOOL v95 = v70 < v105;
          }
          else
          {
LABEL_60:
            if (v71) {
              goto LABEL_126;
            }
            unint64_t v79 = v64 - 2;
            uint64_t v85 = &v65[16 * v64 - 32];
            uint64_t v87 = *(void *)v85;
            uint64_t v86 = *((void *)v85 + 1);
            BOOL v88 = __OFSUB__(v86, v87);
            uint64_t v89 = v86 - v87;
            char v90 = v88;
            if (v88) {
              goto LABEL_129;
            }
            unint64_t v91 = &v65[16 * v67];
            uint64_t v93 = *(void *)v91;
            uint64_t v92 = *((void *)v91 + 1);
            BOOL v78 = __OFSUB__(v92, v93);
            uint64_t v94 = v92 - v93;
            if (v78) {
              goto LABEL_132;
            }
            if (__OFADD__(v89, v94)) {
              goto LABEL_133;
            }
            if (v89 + v94 < v70) {
              goto LABEL_72;
            }
            BOOL v95 = v70 < v94;
          }
          if (v95) {
            unint64_t v67 = v79;
          }
        }
        else
        {
          if (v64 == 3)
          {
            uint64_t v69 = *((void *)v11 + 4);
            uint64_t v68 = *((void *)v11 + 5);
            BOOL v78 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            char v71 = v78;
            goto LABEL_60;
          }
          uint64_t v96 = *((void *)v11 + 4);
          uint64_t v97 = *((void *)v11 + 5);
          BOOL v78 = __OFSUB__(v97, v96);
          uint64_t v89 = v97 - v96;
          char v90 = v78;
LABEL_72:
          if (v90) {
            goto LABEL_128;
          }
          unint64_t v98 = &v65[16 * v67];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v78 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          if (v78) {
            goto LABEL_131;
          }
          if (v101 < v89) {
            goto LABEL_89;
          }
        }
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v64)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v13) {
          goto LABEL_145;
        }
        unint64_t v107 = &v65[16 * v106];
        uint64_t v108 = *(void *)v107;
        uint64_t v109 = &v65[16 * v67];
        uint64_t v110 = *((void *)v109 + 1);
        sub_1C063340C((char *)(v13 + 96 * *(void *)v107), (char *)(v13 + 96 * *(void *)v109), v13 + 96 * v110, __dst, a2);
        if (v4) {
          goto LABEL_114;
        }
        if (v110 < v108) {
          goto LABEL_121;
        }
        if (v67 > *((void *)v11 + 2)) {
          goto LABEL_122;
        }
        *(void *)unint64_t v107 = v108;
        *(void *)&v65[16 * v106 + 8] = v110;
        unint64_t v111 = *((void *)v11 + 2);
        if (v67 >= v111) {
          goto LABEL_123;
        }
        unint64_t v64 = v111 - 1;
        memmove(&v65[16 * v67], v109 + 16, 16 * (v111 - 1 - v67));
        *((void *)v11 + 2) = v111 - 1;
        uint64_t v13 = v175;
        if (v111 <= 2) {
          goto LABEL_89;
        }
        continue;
      }
    }
    unint64_t v64 = 1;
LABEL_89:
    uint64_t v14 = v156;
    uint64_t v12 = v173;
  }
  while (v173 < v156);
LABEL_103:
  if (v64 >= 2)
  {
    uint64_t v140 = *v150;
    do
    {
      unint64_t v141 = v64 - 2;
      if (v64 < 2) {
        goto LABEL_135;
      }
      if (!v140) {
        goto LABEL_148;
      }
      uint64_t v142 = *(void *)&v11[16 * v141 + 32];
      uint64_t v143 = *(void *)&v11[16 * v64 + 24];
      sub_1C063340C((char *)(v140 + 96 * v142), (char *)(v140 + 96 * *(void *)&v11[16 * v64 + 16]), v140 + 96 * v143, __dst, a2);
      if (v4) {
        break;
      }
      if (v143 < v142) {
        goto LABEL_136;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v11 = sub_1C063604C((uint64_t)v11);
      }
      if (v141 >= *((void *)v11 + 2)) {
        goto LABEL_137;
      }
      long long v144 = &v11[16 * v141 + 32];
      *(void *)long long v144 = v142;
      *((void *)v144 + 1) = v143;
      unint64_t v145 = *((void *)v11 + 2);
      if (v64 > v145) {
        goto LABEL_138;
      }
      memmove(&v11[16 * v64 + 16], &v11[16 * v64 + 32], 16 * (v145 - v64));
      *((void *)v11 + 2) = v145 - 1;
      unint64_t v64 = v145 - 1;
    }
    while (v145 > 2);
  }
LABEL_114:
  swift_bridgeObjectRelease();
LABEL_117:
  *(void *)(v153 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0640F84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, void *, void, char *))
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + (a3 << 6) + 56;
    uint64_t v26 = result;
    uint64_t v29 = *a4;
LABEL_4:
    uint64_t v7 = (uint64_t *)(v5 + (a3 << 6));
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    uint64_t v10 = v7[2];
    long long v11 = *(_OWORD *)(v7 + 3);
    char v12 = *((unsigned char *)v7 + 40);
    uint64_t v28 = v6;
    uint64_t v14 = v7[6];
    unint64_t v13 = v7[7];
    uint64_t v30 = a3;
    while (1)
    {
      uint64_t v32 = result;
      uint64_t v15 = *(void *)(v6 - 104);
      char v16 = *(unsigned char *)(v6 - 80);
      uint64_t v18 = *(void *)(v6 - 72);
      unint64_t v17 = *(void *)(v6 - 64);
      uint64_t v40 = v9;
      v41[0] = v8;
      v41[1] = v10;
      long long v42 = v11;
      char v43 = v12 & 1;
      uint64_t v44 = v14;
      unint64_t v45 = v13;
      char v19 = (_OWORD *)(v6 - 120);
      long long v34 = *(_OWORD *)(v6 - 120);
      uint64_t v35 = v15;
      long long v36 = *(_OWORD *)(v6 - 96);
      char v37 = v16;
      uint64_t v38 = v18;
      unint64_t v39 = v17;
      unint64_t v33 = v13;
      swift_bridgeObjectRetain();
      sub_1BFF7FF04(v14, v13);
      swift_bridgeObjectRetain();
      sub_1BFF7FF04(v18, v17);
      uint64_t v20 = v46;
      char v21 = a5(v9, v41, v34, (char *)&v34 + 8);
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v18, v17);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v14, v33);
      uint64_t v46 = v20;
      if (v20) {
        break;
      }
      if ((v21 & 1) == 0)
      {
        uint64_t v25 = v30;
        uint64_t v5 = v29;
LABEL_11:
        a3 = v25 + 1;
        uint64_t v6 = v28 + 64;
        uint64_t result = v26;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v5 = v29;
      if (!v29)
      {
        __break(1u);
        return result;
      }
      unint64_t v13 = *(void *)v6;
      long long v23 = *(_OWORD *)(v6 - 88);
      long long v22 = *(_OWORD *)(v6 - 72);
      *(void *)(v6 - 64) = *(void *)v6;
      v6 -= 64;
      uint64_t v9 = *(void *)(v6 + 8);
      uint64_t v8 = *(void *)(v6 + 16);
      uint64_t v10 = *(void *)(v6 + 24);
      long long v11 = *(_OWORD *)(v6 + 32);
      long long v24 = v19[1];
      v19[4] = *v19;
      v19[5] = v24;
      char v12 = *(unsigned char *)(v6 + 48);
      uint64_t v14 = *(void *)(v6 + 56);
      v19[6] = v23;
      v19[7] = v22;
      *(void *)(v6 - 56) = v9;
      *(void *)(v6 - 48) = v8;
      *(void *)(v6 - 40) = v10;
      *(_OWORD *)(v6 - 32) = v11;
      *(unsigned char *)(v6 - 16) = v12;
      uint64_t result = v32 + 1;
      *(void *)(v6 - 8) = v14;
      uint64_t v25 = v30;
      if (v30 == v32 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C0641198(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, void, char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v166 = a3;
  uint64_t v6 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_140;
    }
    if (v6) {
      return sub_1C0640F84(0, v6, 1, a1, (uint64_t (*)(uint64_t, void *, void, char *))a2);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_149;
  }
  uint64_t v145 = v6;
  uint64_t v138 = result;
  long long v136 = a1;
  if (v6 < 2)
  {
    long long v11 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v139 = MEMORY[0x1E4FBC860];
    if (v6 != 1)
    {
      unint64_t v56 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C064267C(0, (unint64_t *)&unk_1EA19C530);
    uint64_t v10 = sub_1C151ECCC();
    *(void *)(v10 + 16) = v9;
    uint64_t v139 = v10;
    __dst = (char *)(v10 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v137 = *a1 + 104;
  uint64_t v135 = *a1 + 56;
  long long v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = v145;
  uint64_t v150 = *a1;
  do
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v142 = v12;
    if (v12 + 1 < v14)
    {
      uint64_t v140 = v11;
      uint64_t v17 = v13 + (v16 << 6);
      uint64_t v18 = *(void *)(v17 + 16);
      char v19 = *(unsigned char *)(v17 + 40);
      uint64_t v20 = *(void *)(v17 + 48);
      unint64_t v21 = *(void *)(v17 + 56);
      uint64_t v22 = v13 + (v12 << 6);
      uint64_t v23 = *(void *)(v22 + 16);
      char v24 = *(unsigned char *)(v22 + 40);
      uint64_t v25 = v4;
      uint64_t v26 = *(void *)(v22 + 48);
      unint64_t v27 = *(void *)(v22 + 56);
      long long v160 = *(_OWORD *)v17;
      uint64_t v151 = v160;
      uint64_t v161 = v18;
      long long v162 = *(_OWORD *)(v17 + 24);
      char v163 = v19;
      uint64_t v164 = v20;
      unint64_t v165 = v21;
      long long v154 = *(_OWORD *)v22;
      uint64_t v155 = v23;
      long long v156 = *(_OWORD *)(v22 + 24);
      char v157 = v24;
      uint64_t v158 = v26;
      unint64_t v159 = v27;
      swift_bridgeObjectRetain();
      sub_1BFF7FF04(v20, v21);
      swift_bridgeObjectRetain();
      sub_1BFF7FF04(v26, v27);
      int v146 = a2(v151, (char *)&v160 + 8, v154, (char *)&v154 + 8);
      if (v25)
      {
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v26, v27);
        swift_bridgeObjectRelease();
        uint64_t v131 = v20;
        unint64_t v132 = v21;
        goto LABEL_117;
      }
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v26, v27);
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v20, v21);
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v145)
      {
        uint64_t v28 = v137 + (v15 << 6);
        while (1)
        {
          uint64_t v29 = v16;
          uint64_t v30 = *(void *)(v28 + 40);
          char v31 = *(unsigned char *)(v28 + 64);
          uint64_t v32 = *(void *)(v28 + 72);
          unint64_t v33 = *(void *)(v28 + 80);
          uint64_t v34 = *(void *)(v28 - 24);
          char v35 = *(unsigned char *)v28;
          uint64_t v36 = *(void *)(v28 + 8);
          unint64_t v37 = *(void *)(v28 + 16);
          long long v160 = *(_OWORD *)(v28 + 24);
          uint64_t v148 = v160;
          uint64_t v161 = v30;
          long long v162 = *(_OWORD *)(v28 + 48);
          char v163 = v31;
          uint64_t v164 = v32;
          unint64_t v165 = v33;
          long long v154 = *(_OWORD *)(v28 - 40);
          uint64_t v155 = v34;
          long long v156 = *(_OWORD *)(v28 - 16);
          char v157 = v35;
          uint64_t v158 = v36;
          unint64_t v159 = v37;
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v32, v33);
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v36, v37);
          int v38 = a2(v148, (char *)&v160 + 8, v154, (char *)&v154 + 8);
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v36, v37);
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v32, v33);
          if ((v146 ^ v38)) {
            break;
          }
          uint64_t v16 = v29 + 1;
          v28 += 64;
          if (v145 == v29 + 1)
          {
            uint64_t v16 = v145;
            goto LABEL_21;
          }
        }
        uint64_t v16 = v29;
LABEL_21:
        uint64_t v15 = v142;
      }
      uint64_t v13 = v150;
      uint64_t v4 = 0;
      long long v11 = v140;
      if (v146)
      {
        uint64_t v14 = v145;
        if (v16 < v15) {
          goto LABEL_144;
        }
        if (v15 < v16)
        {
          uint64_t v39 = v16 << 6;
          uint64_t v40 = v15 << 6;
          uint64_t v41 = v16;
          uint64_t v42 = v15;
          do
          {
            if (v42 != --v41)
            {
              if (!v150) {
                goto LABEL_147;
              }
              char v43 = (_OWORD *)(v150 + v40);
              uint64_t v44 = *(void *)(v150 + v40 + 16);
              uint64_t v45 = v150 + v39;
              char v46 = *(unsigned char *)(v150 + v40 + 40);
              long long v47 = *(_OWORD *)(v150 + v40);
              long long v48 = *(_OWORD *)(v150 + v40 + 24);
              long long v49 = *(_OWORD *)(v150 + v40 + 48);
              long long v50 = *(_OWORD *)(v150 + v39 - 16);
              long long v52 = *(_OWORD *)(v150 + v39 - 64);
              long long v51 = *(_OWORD *)(v150 + v39 - 48);
              v43[2] = *(_OWORD *)(v150 + v39 - 32);
              v43[3] = v50;
              *char v43 = v52;
              v43[1] = v51;
              *(_OWORD *)(v45 - 64) = v47;
              *(void *)(v45 - 48) = v44;
              *(_OWORD *)(v45 - 40) = v48;
              *(unsigned char *)(v45 - 24) = v46;
              *(_OWORD *)(v45 - 16) = v49;
            }
            ++v42;
            v39 -= 64;
            v40 += 64;
          }
          while (v42 < v41);
        }
      }
      else
      {
        uint64_t v14 = v145;
      }
    }
    if (v16 >= v14) {
      goto LABEL_41;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_141;
    }
    if (v16 - v15 >= v138)
    {
LABEL_41:
      if (v16 < v15) {
        goto LABEL_139;
      }
      goto LABEL_42;
    }
    if (__OFADD__(v15, v138)) {
      goto LABEL_142;
    }
    if (v15 + v138 >= v14) {
      uint64_t v53 = v14;
    }
    else {
      uint64_t v53 = v15 + v138;
    }
    if (v53 < v15)
    {
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      uint64_t result = sub_1C15203FC();
      __break(1u);
      return result;
    }
    if (v16 == v53) {
      goto LABEL_41;
    }
    unint64_t v141 = v11;
    uint64_t v152 = v4;
    uint64_t v104 = v135 + (v16 << 6);
    uint64_t v133 = v53;
    do
    {
      uint64_t v105 = v13 + (v16 << 6);
      uint64_t v107 = *(void *)v105;
      uint64_t v106 = *(void *)(v105 + 8);
      uint64_t v108 = *(void *)(v105 + 16);
      long long v109 = *(_OWORD *)(v105 + 24);
      char v110 = *(unsigned char *)(v105 + 40);
      uint64_t v134 = v104;
      uint64_t v111 = *(void *)(v105 + 48);
      unint64_t v112 = *(void *)(v105 + 56);
      uint64_t v144 = v16;
      while (1)
      {
        uint64_t v147 = v15;
        uint64_t v113 = *(void *)(v104 - 104);
        char v114 = *(unsigned char *)(v104 - 80);
        uint64_t v116 = *(void *)(v104 - 72);
        unint64_t v115 = *(void *)(v104 - 64);
        *(void *)&long long v160 = v107;
        *((void *)&v160 + 1) = v106;
        uint64_t v161 = v108;
        long long v162 = v109;
        char v163 = v110 & 1;
        uint64_t v164 = v111;
        unint64_t v165 = v112;
        long long v117 = (_OWORD *)(v104 - 120);
        long long v154 = *(_OWORD *)(v104 - 120);
        uint64_t v155 = v113;
        long long v156 = *(_OWORD *)(v104 - 96);
        char v157 = v114;
        uint64_t v158 = v116;
        unint64_t v159 = v115;
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v111, v112);
        swift_bridgeObjectRetain();
        sub_1BFF7FF04(v116, v115);
        char v118 = a2(v107, (char *)&v160 + 8, v154, (char *)&v154 + 8);
        if (v152)
        {
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v116, v115);
          swift_bridgeObjectRelease();
          uint64_t v131 = v111;
          unint64_t v132 = v112;
LABEL_117:
          sub_1BFEEFC20(v131, v132);
          swift_bridgeObjectRelease();
          goto LABEL_118;
        }
        char v119 = v118;
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v116, v115);
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v111, v112);
        if ((v119 & 1) == 0) {
          break;
        }
        uint64_t v13 = v150;
        uint64_t v120 = v144;
        if (!v150) {
          goto LABEL_146;
        }
        unint64_t v112 = *(void *)v104;
        long long v122 = *(_OWORD *)(v104 - 88);
        long long v121 = *(_OWORD *)(v104 - 72);
        *(void *)(v104 - 64) = *(void *)v104;
        v104 -= 64;
        uint64_t v107 = *(void *)(v104 + 8);
        uint64_t v106 = *(void *)(v104 + 16);
        uint64_t v108 = *(void *)(v104 + 24);
        long long v109 = *(_OWORD *)(v104 + 32);
        long long v123 = v117[1];
        v117[4] = *v117;
        v117[5] = v123;
        char v110 = *(unsigned char *)(v104 + 48);
        uint64_t v111 = *(void *)(v104 + 56);
        v117[6] = v122;
        v117[7] = v121;
        *(void *)(v104 - 56) = v107;
        *(void *)(v104 - 48) = v106;
        *(void *)(v104 - 40) = v108;
        *(_OWORD *)(v104 - 32) = v109;
        *(unsigned char *)(v104 - 16) = v110;
        uint64_t v15 = v147 + 1;
        *(void *)(v104 - 8) = v111;
        if (v144 == v147 + 1) {
          goto LABEL_99;
        }
      }
      uint64_t v13 = v150;
      uint64_t v120 = v144;
LABEL_99:
      uint64_t v16 = v120 + 1;
      uint64_t v104 = v134 + 64;
      uint64_t v15 = v142;
    }
    while (v16 != v133);
    uint64_t v16 = v133;
    uint64_t v4 = 0;
    long long v11 = v141;
    if (v133 < v142) {
      goto LABEL_139;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v55 = *((void *)v11 + 2);
    unint64_t v54 = *((void *)v11 + 3);
    unint64_t v56 = v55 + 1;
    uint64_t v13 = v150;
    if (v55 >= v54 >> 1)
    {
      uint64_t v124 = sub_1C0634CC8((char *)(v54 > 1), v55 + 1, 1, v11);
      uint64_t v13 = v150;
      long long v11 = v124;
    }
    *((void *)v11 + 2) = v56;
    uint64_t v57 = v11 + 32;
    uint64_t v58 = &v11[16 * v55 + 32];
    *(void *)uint64_t v58 = v142;
    *((void *)v58 + 1) = v16;
    uint64_t v143 = v16;
    if (v55)
    {
      while (2)
      {
        unint64_t v59 = v56 - 1;
        if (v56 >= 4)
        {
          unint64_t v64 = &v57[16 * v56];
          uint64_t v65 = *((void *)v64 - 8);
          uint64_t v66 = *((void *)v64 - 7);
          BOOL v70 = __OFSUB__(v66, v65);
          uint64_t v67 = v66 - v65;
          if (v70) {
            goto LABEL_124;
          }
          uint64_t v69 = *((void *)v64 - 6);
          uint64_t v68 = *((void *)v64 - 5);
          BOOL v70 = __OFSUB__(v68, v69);
          uint64_t v62 = v68 - v69;
          char v63 = v70;
          if (v70) {
            goto LABEL_125;
          }
          unint64_t v71 = v56 - 2;
          uint64_t v72 = &v57[16 * v56 - 32];
          uint64_t v74 = *(void *)v72;
          uint64_t v73 = *((void *)v72 + 1);
          BOOL v70 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          if (v70) {
            goto LABEL_127;
          }
          BOOL v70 = __OFADD__(v62, v75);
          uint64_t v76 = v62 + v75;
          if (v70) {
            goto LABEL_130;
          }
          if (v76 >= v67)
          {
            uint64_t v94 = &v57[16 * v59];
            uint64_t v96 = *(void *)v94;
            uint64_t v95 = *((void *)v94 + 1);
            BOOL v70 = __OFSUB__(v95, v96);
            uint64_t v97 = v95 - v96;
            if (v70) {
              goto LABEL_134;
            }
            BOOL v87 = v62 < v97;
          }
          else
          {
LABEL_60:
            if (v63) {
              goto LABEL_126;
            }
            unint64_t v71 = v56 - 2;
            uint64_t v77 = &v57[16 * v56 - 32];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v80 = __OFSUB__(v78, v79);
            uint64_t v81 = v78 - v79;
            char v82 = v80;
            if (v80) {
              goto LABEL_129;
            }
            uint64_t v83 = &v57[16 * v59];
            uint64_t v85 = *(void *)v83;
            uint64_t v84 = *((void *)v83 + 1);
            BOOL v70 = __OFSUB__(v84, v85);
            uint64_t v86 = v84 - v85;
            if (v70) {
              goto LABEL_132;
            }
            if (__OFADD__(v81, v86)) {
              goto LABEL_133;
            }
            if (v81 + v86 < v62) {
              goto LABEL_72;
            }
            BOOL v87 = v62 < v86;
          }
          if (v87) {
            unint64_t v59 = v71;
          }
        }
        else
        {
          if (v56 == 3)
          {
            uint64_t v61 = *((void *)v11 + 4);
            uint64_t v60 = *((void *)v11 + 5);
            BOOL v70 = __OFSUB__(v60, v61);
            uint64_t v62 = v60 - v61;
            char v63 = v70;
            goto LABEL_60;
          }
          uint64_t v88 = *((void *)v11 + 4);
          uint64_t v89 = *((void *)v11 + 5);
          BOOL v70 = __OFSUB__(v89, v88);
          uint64_t v81 = v89 - v88;
          char v82 = v70;
LABEL_72:
          if (v82) {
            goto LABEL_128;
          }
          char v90 = &v57[16 * v59];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v70 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v70) {
            goto LABEL_131;
          }
          if (v93 < v81) {
            goto LABEL_89;
          }
        }
        unint64_t v98 = v59 - 1;
        if (v59 - 1 >= v56)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v13) {
          goto LABEL_145;
        }
        uint64_t v99 = &v57[16 * v98];
        uint64_t v100 = *(void *)v99;
        uint64_t v101 = &v57[16 * v59];
        uint64_t v102 = *((void *)v101 + 1);
        sub_1C0633A90((char *)(v13 + (*(void *)v99 << 6)), (char *)(v13 + (*(void *)v101 << 6)), v13 + (v102 << 6), __dst, a2);
        if (v4) {
          goto LABEL_114;
        }
        if (v102 < v100) {
          goto LABEL_121;
        }
        if (v59 > *((void *)v11 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v99 = v100;
        *(void *)&v57[16 * v98 + 8] = v102;
        unint64_t v103 = *((void *)v11 + 2);
        if (v59 >= v103) {
          goto LABEL_123;
        }
        unint64_t v56 = v103 - 1;
        memmove(&v57[16 * v59], v101 + 16, 16 * (v103 - 1 - v59));
        *((void *)v11 + 2) = v103 - 1;
        uint64_t v13 = v150;
        if (v103 <= 2) {
          goto LABEL_89;
        }
        continue;
      }
    }
    unint64_t v56 = 1;
LABEL_89:
    uint64_t v12 = v143;
    uint64_t v14 = v145;
  }
  while (v143 < v145);
LABEL_103:
  if (v56 >= 2)
  {
    uint64_t v125 = *v136;
    do
    {
      unint64_t v126 = v56 - 2;
      if (v56 < 2) {
        goto LABEL_135;
      }
      if (!v125) {
        goto LABEL_148;
      }
      uint64_t v127 = *(void *)&v11[16 * v126 + 32];
      uint64_t v128 = *(void *)&v11[16 * v56 + 24];
      sub_1C0633A90((char *)(v125 + (v127 << 6)), (char *)(v125 + (*(void *)&v11[16 * v56 + 16] << 6)), v125 + (v128 << 6), __dst, a2);
      if (v4) {
        break;
      }
      if (v128 < v127) {
        goto LABEL_136;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v11 = sub_1C063604C((uint64_t)v11);
      }
      if (v126 >= *((void *)v11 + 2)) {
        goto LABEL_137;
      }
      uint64_t v129 = &v11[16 * v126 + 32];
      *(void *)uint64_t v129 = v127;
      *((void *)v129 + 1) = v128;
      unint64_t v130 = *((void *)v11 + 2);
      if (v56 > v130) {
        goto LABEL_138;
      }
      memmove(&v11[16 * v56 + 16], &v11[16 * v56 + 32], 16 * (v130 - v56));
      *((void *)v11 + 2) = v130 - 1;
      unint64_t v56 = v130 - 1;
    }
    while (v130 > 2);
  }
LABEL_114:
  swift_bridgeObjectRelease();
LABEL_118:
  *(void *)(v139 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0641BF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void *, uint64_t, uint64_t))
{
  uint64_t v10 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = a4(v10);
  }
  uint64_t v11 = *(void *)(v10 + 16);
  v13[0] = v10 + 32;
  v13[1] = v11;
  uint64_t result = a5(v13, a2, a3);
  *a1 = v10;
  return result;
}

uint64_t sub_1C0641C90(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  return sub_1C063A008(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, void *, void *))(v4 + 16));
}

uint64_t sub_1C0641C98(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  return sub_1C0639EA0(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, void *, void *))(v4 + 16));
}

uint64_t sub_1C0641CA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0641D00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0641D4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  unint64_t v3 = *(void *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v2, v3);
  return a1;
}

uint64_t sub_1C0641DB0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0641DF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  unint64_t v3 = *(void *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v2, v3);
  return a1;
}

unint64_t sub_1C0641E5C()
{
  unint64_t result = qword_1EB86EFC8;
  if (!qword_1EB86EFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86EFC8);
  }
  return result;
}

uint64_t sub_1C0641EB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0641F08()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0641F80()
{
  int v1 = *(unsigned __int8 *)(v0 + 297);
  if (v1 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 136)) {
        __swift_destroy_boxed_opaque_existential_1(v0 + 112);
      }
    }
  }
  else
  {
    if (v1 != 1)
    {
      if (*(unsigned char *)(v0 + 297)) {
        goto LABEL_20;
      }

      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 96) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v0 + 144) < 0x11uLL) {
        goto LABEL_20;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 96) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 144) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v2 = *(void **)(v0 + 160);
    if (v2)
    {

      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 240) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v0 + 288) >= 0x11uLL) {
        goto LABEL_19;
      }
    }
  }
LABEL_20:
  return swift_deallocObject();
}

uint64_t sub_1C06420E8()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0642158()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 6));
  }
  if (v0[14]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 11));
  }
  if (v0[19]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  }
  return swift_deallocObject();
}

uint64_t sub_1C06421C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C0642200()
{
  unint64_t result = qword_1EB864E38;
  if (!qword_1EB864E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864E38);
  }
  return result;
}

uint64_t sub_1C0642254()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0642294()
{
  unint64_t result = qword_1EB865570;
  if (!qword_1EB865570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865570);
  }
  return result;
}

uint64_t sub_1C06422E8()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  }
  if (*(void *)(v0 + 168)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  }
  if (*(void *)(v0 + 208)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0642378(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C06423C4()
{
  unint64_t result = qword_1EB864D70;
  if (!qword_1EB864D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864D70);
  }
  return result;
}

uint64_t sub_1C0642418()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0642468(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 240);
  uint64_t v4 = *(void *)(a1 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v4, v3);
  return a1;
}

unint64_t sub_1C064253C()
{
  unint64_t result = qword_1EA19CBD0;
  if (!qword_1EA19CBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CBD0);
  }
  return result;
}

uint64_t sub_1C0642590()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_1C0642620(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0642674(uint64_t a1, long long *a2, uint64_t a3, long long *a4)
{
  return sub_1C0639D60(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))(v4 + 16));
}

void sub_1C064267C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C06426D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_1C0642730()
{
  return sub_1C062C85C();
}

uint64_t sub_1C0642758()
{
  return sub_1C062C8FC() & 1;
}

uint64_t sub_1C0642780()
{
  return sub_1C062B9B8() & 1;
}

uint64_t sub_1C06427A4()
{
  (*(void (**)(unint64_t *__return_ptr, void))(*(void *)(v0 + 24) + 24))(&v2, *(void *)(v0 + 16));
  return (v2 >> 12) & 1;
}

uint64_t sub_1C06427FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C151811C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_1C0642844(uint64_t a1)
{
  return sub_1C062C344(a1, *(void *)(v1 + 32));
}

uint64_t FormatItemNodeSwipeActionStyleDimension.buttonSize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeSwipeActionStyleDimension.minAreaWidth.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0642944@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatItemNodeSwipeActionStyleDimension.init(from:)(a1, a2);
}

uint64_t sub_1C064295C(void *a1)
{
  return FormatItemNodeSwipeActionStyleDimension.encode(to:)(a1);
}

unint64_t sub_1C0642974(uint64_t a1)
{
  unint64_t result = sub_1C064299C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C064299C()
{
  unint64_t result = qword_1EA19CBE0;
  if (!qword_1EA19CBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CBE0);
  }
  return result;
}

unint64_t sub_1C06429F0(void *a1)
{
  a1[1] = sub_1C0642A28();
  a1[2] = sub_1C0642A7C();
  unint64_t result = sub_1C0642AD0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0642A28()
{
  unint64_t result = qword_1EA19CBE8;
  if (!qword_1EA19CBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CBE8);
  }
  return result;
}

unint64_t sub_1C0642A7C()
{
  unint64_t result = qword_1EA19CBF0;
  if (!qword_1EA19CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CBF0);
  }
  return result;
}

unint64_t sub_1C0642AD0()
{
  unint64_t result = qword_1EA19CBF8;
  if (!qword_1EA19CBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CBF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatItemNodeSwipeActionStyleDimension()
{
  return &type metadata for FormatItemNodeSwipeActionStyleDimension;
}

ValueMetadata *type metadata accessor for A18_V17()
{
  return &type metadata for A18_V17;
}

uint64_t sub_1C0642B44(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0647FD0(0, &qword_1EA19CCB0, (uint64_t (*)(void))sub_1C0647F7C, (uint64_t)&type metadata for A18_V17.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0647F7C();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0648038(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0642D8C(uint64_t a1)
{
  unint64_t v2 = sub_1C0647F7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0642DC8(uint64_t a1)
{
  unint64_t v2 = sub_1C0647F7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0642E04@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0647CCC(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0642E4C(void *a1)
{
  return sub_1C0642B44(a1);
}

uint64_t sub_1C0642E64()
{
  sub_1C064791C();
  return sub_1C151798C();
}

uint64_t sub_1C0642EE0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0647FD0(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0642F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v64 = a2;
  unint64_t v56 = a3;
  uint64_t v59 = sub_1C151635C();
  uint64_t v6 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v79 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v56 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v61 = *(void *)(v14 - 8);
  uint64_t v62 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v60 = (uint64_t)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v68 = a1;
  sub_1BFF1AFA4(a1, v60, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  char v63 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v58 = sub_1C151633C();
  uint64_t v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v59);
  uint64_t v77 = &type metadata for A18_V17;
  unint64_t v20 = sub_1C0185F9C();
  unint64_t v78 = v20;
  LOBYTE(v75) = v16;
  *((void *)&v75 + 1) = v17;
  unsigned __int8 v76 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v69 = sub_1C1520FAC();
  uint64_t v70 = v22;
  uint64_t v73 = 95;
  unint64_t v74 = 0xE100000000000000;
  uint64_t v71 = 45;
  unint64_t v72 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v57;
  *uint64_t v26 = v58;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v75, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF239D4(v60, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v28, 0, 1, v62);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF239D4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v29, 0, 1, v66);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
  sub_1BFFFC630(v17, v18);
  uint64_t v77 = &type metadata for A18_V17;
  unint64_t v78 = v20;
  LOBYTE(v75) = v16;
  *((void *)&v75 + 1) = v17;
  unsigned __int8 v76 = v18;
  sub_1BFF1AFA4(v64, v79, (uint64_t (*)(void))v63);
  sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v32 = (void *)(v30 + 16);
  swift_beginAccess();
  unint64_t v33 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v33 = sub_1BFFB83AC(0, v33[2] + 1, 1, v33);
    *uint64_t v32 = v33;
  }
  unint64_t v36 = v33[2];
  unint64_t v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    unint64_t v33 = sub_1BFFB83AC((void *)(v35 > 1), v36 + 1, 1, v33);
    *uint64_t v32 = v33;
  }
  v33[2] = v36 + 1;
  unint64_t v37 = &v33[2 * v36];
  v37[4] = sub_1C064667C;
  v37[5] = 0;
  swift_endAccess();
  uint64_t v38 = v67;
  uint64_t v39 = sub_1C001E608((uint64_t)&unk_1F1B82EF0, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BFF1F2E4(v79, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
  }
  else
  {
    uint64_t v40 = v39;
    swift_release();
    uint64_t v41 = sub_1C001E608((uint64_t)&unk_1F1B82F18, 0, 0, 0, 4, 0, 0, 0);
    uint64_t v69 = v40;
    sub_1C0018900(v41);
    uint64_t v43 = v69;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v31;
    uint64_t v45 = (void *)(v44 + 16);
    swift_beginAccess();
    char v46 = *(void **)(v44 + 16);
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v44 + 16) = v46;
    if ((v47 & 1) == 0)
    {
      char v46 = sub_1BFFB83AC(0, v46[2] + 1, 1, v46);
      *uint64_t v45 = v46;
    }
    unint64_t v49 = v46[2];
    unint64_t v48 = v46[3];
    if (v49 >= v48 >> 1)
    {
      char v46 = sub_1BFFB83AC((void *)(v48 > 1), v49 + 1, 1, v46);
      *uint64_t v45 = v46;
    }
    _OWORD v46[2] = v49 + 1;
    long long v50 = &v46[2 * v49];
    v50[4] = sub_1C064667C;
    v50[5] = 0;
    swift_endAccess();
    uint64_t v51 = sub_1C001E608((uint64_t)&unk_1F1B82F40, 0, 0, v44, 0, 0, 0, 0);
    swift_release();
    uint64_t v69 = v43;
    sub_1C0018900(v51);
    uint64_t v52 = v69;
    uint64_t v53 = type metadata accessor for A18_V17.Bound();
    unint64_t v54 = v56;
    v56[3] = v53;
    v54[4] = sub_1C0648038(&qword_1EA19CC10, (void (*)(uint64_t))type metadata accessor for A18_V17.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v54);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v75, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF239D4(v79, (uint64_t)boxed_opaque_existential_0 + *(int *)(v53 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v53 + 28)) = v52;
  }
  return result;
}

double sub_1C06437A0@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  *(void *)&long long v39 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  long long v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A18_V17.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(int *)(v8 + 40);
  uint64_t v10 = v7;
  uint64_t v40 = v7;
  uint64_t v11 = *(void *)(v7 + v9);
  uint64_t v12 = *(void *)(v11 + 16);
  double v13 = *(double *)(v10 + *(int *)(v8 + 32));
  sub_1BFC66384(v12 + 16, (uint64_t)v50);
  sub_1BFC66384(v12 + 56, (uint64_t)v49);
  double v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v50, inited + 16);
  sub_1BFC773DC(v49, inited + 56);
  *(double *)(inited + 96) = v14;
  v48[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1C00737F8();
  uint64_t v16 = sub_1C151ECCC();
  *(void *)(v16 + 16) = 3;
  sub_1BFC66384((uint64_t)&v51, v16 + 32);
  sub_1BFC66384((uint64_t)&v51, v16 + 72);
  sub_1BFC773DC(&v51, v16 + 112);
  uint64_t v17 = *(void *)(v11 + 16);
  sub_1BFC66384(v17 + 16, (uint64_t)v50);
  sub_1BFC66384(v17 + 56, (uint64_t)v49);
  double v18 = v13 * *(double *)(v17 + 96);
  uint64_t v19 = swift_initStackObject();
  sub_1BFC773DC(v50, v19 + 16);
  sub_1BFC773DC(v49, v19 + 56);
  *(double *)(v19 + 96) = v18;
  v48[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v19 + 16);
  __swift_destroy_boxed_opaque_existential_1(v19 + 56);
  uint64_t v20 = sub_1BFEB3714((uint64_t)&v51, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 2);
  *(void *)&long long v51 = v16;
  sub_1BFEB37F8(v20);
  uint64_t v21 = v51;
  _OWORD v47[2] = v2;
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C06472C0(v22, v21, (void (*)(char *, uint64_t))sub_1C06472B8, (uint64_t)v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v24 = *(void *)(v23 + 16);
  if (v24 >= 3) {
    uint64_t v25 = 3;
  }
  else {
    uint64_t v25 = *(void *)(v23 + 16);
  }
  uint64_t v26 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  unint64_t v27 = v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  uint64_t v28 = (2 * v24) | 1;
  uint64_t v29 = *MEMORY[0x1E4FAB6D8];
  uint64_t v30 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v5, v29, v30);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v39);
  uint64_t v42 = v23;
  uint64_t v43 = v23;
  unint64_t v44 = v27;
  uint64_t v45 = v25;
  uint64_t v46 = v28;
  sub_1C06479FC(0, &qword_1EA19CC30, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1C1517BEC();
  uint64_t v31 = sub_1C1517BFC();
  long long v39 = v51;
  uint64_t v32 = v52;
  uint64_t v33 = v53;
  *(void *)&long long v51 = v23;
  *(void *)&v50[0] = v54;
  MEMORY[0x1F4188790](v31);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v51 = v34;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v35 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v36 = v41;
  unsigned char *v41 = 0;
  double result = *(double *)&v39;
  *(_OWORD *)(v36 + 8) = v39;
  *((void *)v36 + 3) = v32;
  *((void *)v36 + 4) = v33;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  *((void *)v36 + 5) = v35;
  *((void *)v36 + 6) = v38;
  return result;
}

uint64_t sub_1C0643D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0643E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)&v20[-v15];
  uint64_t v26 = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 18;
  *uint64_t v16 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FABA10], v13);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  double v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C06479FC(0, &qword_1EA19CC50, MEMORY[0x1E4FAB6F0]);
  sub_1C06479B8(&qword_1EA19CC58, &qword_1EA19CC50, v18);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1C0644080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v70 = a6;
  uint64_t v69 = a5;
  uint64_t v68 = a4;
  uint64_t v67 = a3;
  uint64_t v79 = a2;
  uint64_t v66 = sub_1C06478C8;
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v53 - v10);
  uint64_t v86 = a1;
  uint64_t v12 = sub_1C151729C();
  uint64_t v13 = swift_allocBox();
  unsigned int v77 = *MEMORY[0x1E4FAB4E8];
  uint64_t v74 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  unsigned __int8 v76 = *(void (**)(uint64_t))(v14 + 104);
  uint64_t v78 = v14 + 104;
  v76(v15);
  *uint64_t v11 = v13;
  unsigned int v75 = *MEMORY[0x1E4FAB940];
  unint64_t v72 = *(void (**)(uint64_t *))(v9 + 104);
  v72(v11);
  uint64_t v71 = v9 + 104;
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C06479FC(0, &qword_1EA19CC60, MEMORY[0x1E4FAB4D0]);
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C06479B8(&qword_1EA19CC68, &qword_1EA19CC60, v16);
  sub_1C151738C();
  uint64_t v54 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v54(v11, v8);
  uint64_t v20 = v9 + 8;
  uint64_t v86 = a1;
  sub_1BFF925B0(0, (unint64_t *)&qword_1EB8907F8, MEMORY[0x1E4FAB8D8]);
  uint64_t v22 = v21;
  uint64_t v23 = swift_allocBox();
  uint64_t v25 = (char *)v24 + *(int *)(v22 + 48);
  *uint64_t v24 = 11;
  uint64_t v26 = *MEMORY[0x1E4FAB8C8];
  uint64_t v27 = sub_1C1517A7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  *uint64_t v11 = v23;
  uint64_t v28 = v72;
  ((void (*)(uint64_t *, void, uint64_t))v72)(v11, *MEMORY[0x1E4FAB960], v8);
  uint64_t v85 = v79;
  uint64_t v73 = v19;
  uint64_t v59 = v18;
  sub_1C151731C();
  uint64_t v60 = v20;
  uint64_t v29 = v54;
  v54(v11, v8);
  uint64_t v30 = a1;
  uint64_t v86 = a1;
  uint64_t v31 = v74;
  uint64_t v32 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v76)(v33, v77, v31);
  *uint64_t v11 = v32;
  ((void (*)(uint64_t *, void, uint64_t))v28)(v11, v75, v8);
  sub_1C151738C();
  v29(v11, v8);
  uint64_t v34 = v29;
  uint64_t v86 = v30;
  uint64_t v35 = v30;
  unsigned int v65 = *MEMORY[0x1E4FABA28];
  v28(v11);
  sub_1C0647A88();
  uint64_t v64 = v36;
  sub_1C0647FD0(0, &qword_1EA19CC78, (uint64_t (*)(void))v66, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v57 = v37;
  uint64_t v38 = *(unsigned __int8 *)(*(void *)(v37 - 8) + 80);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v66 = (unint64_t (*)())(((v38 + 32) & ~v38) + *(void *)(v39 + 72));
  uint64_t v40 = (v38 + 32) & ~v38;
  uint64_t v62 = v40;
  uint64_t v63 = v38 | 7;
  uint64_t v41 = swift_allocObject();
  long long v61 = xmmword_1C1529AE0;
  *(_OWORD *)(v41 + 16) = xmmword_1C1529AE0;
  unsigned int v55 = *MEMORY[0x1E4FAB638];
  uint64_t v42 = *(void (**)(void))(v39 + 104);
  uint64_t v56 = v39 + 104;
  uint64_t v58 = (void (*)(uint64_t, void, uint64_t))v42;
  v42(v41 + v40);
  uint64_t v84 = v79;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v43 = v34;
  v34(v11, v8);
  uint64_t v44 = v35;
  uint64_t v86 = v35;
  uint64_t v45 = v74;
  uint64_t v46 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v76)(v47, v77, v45);
  *uint64_t v11 = v46;
  uint64_t v48 = v8;
  uint64_t v49 = v8;
  long long v50 = v72;
  ((void (*)(uint64_t *, void, uint64_t))v72)(v11, v75, v48);
  sub_1C151738C();
  v43(v11, v49);
  uint64_t v86 = v44;
  ((void (*)(uint64_t *, void, uint64_t))v50)(v11, v65, v49);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = v61;
  v58(v51 + v62, v55, v57);
  uint64_t v80 = v67;
  uint64_t v81 = v68;
  uint64_t v82 = v69;
  uint64_t v83 = v70;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v43)(v11, v49);
}

uint64_t sub_1C0644844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v30 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FABA28], v12);
  if (*(void *)(a2 + 16))
  {
    sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v29 = KeyPath;
    uint64_t v18 = qword_1F1B82F88;
    uint64_t v19 = (char *)v6 + v4[5];
    uint64_t v20 = *MEMORY[0x1E4FAB8C8];
    uint64_t v21 = sub_1C1517A7C();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v28 = v12;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v21);
    uint64_t v24 = (void *)*MEMORY[0x1E4FB27D0];
    uint64_t *v6 = v18;
    *(uint64_t *)((char *)v6 + v4[6]) = 0;
    *(uint64_t *)((char *)v6 + v4[7]) = (uint64_t)v24;
    id v25 = v24;
    sub_1C04B9C70((uint64_t)v10, (uint64_t)v6);
    sub_1BFF1F2E4((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFF1F2E4((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C06479FC(0, &qword_1EA19CC60, MEMORY[0x1E4FAB4D0]);
    sub_1C06479B8(&qword_1EA19CC68, &qword_1EA19CC60, v26);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0644C34(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 9;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C06479FC(0, &qword_1EA19CC60, MEMORY[0x1E4FAB4D0]);
  sub_1C06479B8(&qword_1EA19CC68, &qword_1EA19CC60, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 9;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C0644ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F2E4((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F2E4((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C06479FC(0, &qword_1EA19CC60, MEMORY[0x1E4FAB4D0]);
  sub_1C06479B8(&qword_1EA19CC68, &qword_1EA19CC60, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C06454B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F2E4((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F2E4((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C06479FC(0, &qword_1EA19CC60, MEMORY[0x1E4FAB4D0]);
  sub_1C06479B8(&qword_1EA19CC68, &qword_1EA19CC60, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

void sub_1C0645A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v35 = a2;
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v26 - v12);
  uint64_t v14 = type metadata accessor for HeadlineViewLayout.Context(0) - 8;
  MEMORY[0x1F4188790](v14);
  int64_t v17 = a5 >> 1;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v17 != a4 && (a5 >> 1) - a4 == 3)
  {
    if (v17 > a4)
    {
      uint64_t v18 = *(void *)(v15 + 72);
      unsigned int v31 = *MEMORY[0x1E4FABA10];
      id v29 = (void (**)(uint64_t *, uint64_t))(v11 + 8);
      uint64_t v30 = (uint64_t (**)(uint64_t *, void, uint64_t))(v11 + 104);
      uint64_t v28 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_unknownObjectRetain();
      uint64_t v32 = v18;
      uint64_t v33 = a3;
      uint64_t v19 = a3 + v18 * a4;
      uint64_t v34 = v10;
      uint64_t v27 = a1;
      uint64_t v20 = (uint64_t)v28;
      do
      {
        sub_1BFF1AFA4(v19, v20, type metadata accessor for HeadlineViewLayout.Context);
        uint64_t v37 = a1;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = 6;
        *uint64_t v13 = v21;
        uint64_t v22 = (*v30)(v13, v31, v10);
        uint64_t v36 = &v26;
        MEMORY[0x1F4188790](v22);
        uint64_t v23 = v35;
        *(&v26 - 6) = v20;
        *(&v26 - 5) = v23;
        *(&v26 - 4) = a3;
        *(&v26 - 3) = a4;
        uint64_t v24 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C06479FC(0, &qword_1EA19CC60, MEMORY[0x1E4FAB4D0]);
        uint64_t v25 = sub_1C06479B8(&qword_1EA19CC68, &qword_1EA19CC60, v24);
        a1 = v27;
        a3 = v33;
        uint64_t v10 = v34;
        sub_1C151734C();
        (*v29)(v13, v10);
        sub_1BFF1F2E4(v20, type metadata accessor for HeadlineViewLayout.Context);
        --v17;
        v19 += v32;
      }
      while (a4 != v17);
      swift_unknownObjectRelease();
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1C0645E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v49 = a1;
  long long v50 = a6;
  v41[1] = a3;
  uint64_t v43 = a2;
  uint64_t v45 = sub_1C1517A9C();
  uint64_t v42 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1C151794C();
  uint64_t v48 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v44 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (void *)((char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0647FD0(0, &qword_1EA19CC48, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v41 - v20;
  uint64_t v52 = v49;
  void v41[2] = swift_getKeyPath();
  uint64_t v22 = *MEMORY[0x1E4FAB9E0];
  uint64_t v46 = v19;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  uint64_t v49 = v18;
  v23(v21, v22, v18);
  uint64_t v24 = v51;
  uint64_t v25 = 0;
  int64_t v26 = (unint64_t)v50 >> 1;
  if ((unint64_t)v50 >> 1 != a5)
  {
    v41[0] = v16;
    uint64_t v16 = v14;
    long long v50 = v21;
    swift_unknownObjectRetain();
    while (a5 < v26)
    {
      sub_1BFF1AFA4(a4 + *(void *)(v11 + 72) * a5, (uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v21 = *(char **)&v13[*(int *)(v10 + 20) + 32];
      sub_1BFF1F2E4((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      if ((v21 & 4) == 0)
      {
        swift_unknownObjectRelease();
        uint64_t v25 = qword_1F1B82FB0;
        goto LABEL_8;
      }
      if (v26 == ++a5)
      {
        swift_unknownObjectRelease();
        uint64_t v25 = 0;
LABEL_8:
        uint64_t v21 = v50;
        uint64_t v24 = v51;
        uint64_t v16 = (void *)v41[0];
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_9:
  a5 = v24;
  uint64_t v27 = (char *)v16 + v14[5];
  uint64_t v28 = *MEMORY[0x1E4FAB8C8];
  uint64_t v29 = sub_1C1517A7C();
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v27, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  unsigned int v31 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v16 = v25;
  *(void *)((char *)v16 + v14[6]) = 0;
  uint64_t v32 = *v31;
  *(void *)((char *)v16 + v14[7]) = v32;
  uint64_t v33 = qword_1EB87CC48;
  id v34 = v32;
  if (v33 != -1) {
LABEL_12:
  }
    swift_once();
  swift_retain();
  uint64_t v35 = v44;
  sub_1C151709C();
  uint64_t v36 = swift_release();
  __n128 v37 = MEMORY[0x1F4188790](v36);
  v41[-4] = v43;
  v41[-3] = v16;
  unint64_t v40 = (unint64_t)v35;
  (*(void (**)(char *, void, uint64_t, __n128))(v42 + 104))(v47, *MEMORY[0x1E4FAB8F8], v45, v37);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v35, a5);
  sub_1BFF1F2E4((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v38 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C06479FC(0, &qword_1EA19CC60, MEMORY[0x1E4FAB4D0]);
  sub_1C06479B8(&qword_1EA19CC68, &qword_1EA19CC60, v38);
  unint64_t v40 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, v49);
}

uint64_t sub_1C064648C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V17.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C064657C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0642F9C(a1, a2, a3);
}

uint64_t sub_1C0646594()
{
  return sub_1C12BC2A4();
}

unint64_t sub_1C06465A4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C06465D4();
  unint64_t result = sub_1C0646628();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C06465D4()
{
  unint64_t result = qword_1EA19CC00;
  if (!qword_1EA19CC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC00);
  }
  return result;
}

unint64_t sub_1C0646628()
{
  unint64_t result = qword_1EA19CC08;
  if (!qword_1EA19CC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC08);
  }
  return result;
}

uint64_t sub_1C064667C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = *a1;
  sub_1BFF925B0(0, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t result = sub_1C03FA104(v6, (uint64_t)a1 + *(int *)(v7 + 48), *a2, (uint64_t)a2 + *(int *)(v7 + 48));
  *a3 = result & 1;
  return result;
}

uint64_t type metadata accessor for A18_V17.Bound()
{
  uint64_t result = qword_1EA19CC18;
  if (!qword_1EA19CC18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C0646740(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  unint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F2E4((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    unsigned int v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F2E4(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    unsigned int v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0646BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F2E4((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F2E4(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0647030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0647044);
}

uint64_t sub_1C0647044(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C06470F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0647108);
}

void *sub_1C0647108(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C06471B0()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0647260(uint64_t a1)
{
  uint64_t result = sub_1C0648038(&qword_1EA19CC28, (void (*)(uint64_t))type metadata accessor for A18_V17.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C06472B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0643D9C(a1, a2, a3);
}

uint64_t sub_1C06472C0(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v51 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v48 = (uint64_t)&v43 - v10;
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  uint64_t v54 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v47 = (uint64_t)&v43 - v15;
  sub_1BFFC0B88();
  uint64_t v50 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v46 = (uint64_t)&v43 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v45 = (uint64_t)&v43 - v22;
  unint64_t v23 = *(void *)(a2 + 16);
  unint64_t v55 = *(void *)(a1 + 16);
  int64_t v56 = v23;
  if (v23 >= v55) {
    int64_t v24 = v55;
  }
  else {
    int64_t v24 = v23;
  }
  uint64_t v57 = MEMORY[0x1E4FBC860];
  sub_1C0032944(0, v24, 0);
  uint64_t v44 = a2;
  if (v24)
  {
    uint64_t v25 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    uint64_t v49 = a1;
    while (v55 != v27)
    {
      uint64_t result = sub_1BFF1AFA4(a1+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v27, (uint64_t)v13, type metadata accessor for FeedHeadline);
      if (v56 == v27) {
        goto LABEL_32;
      }
      uint64_t v28 = (uint64_t)&v18[*(int *)(v50 + 48)];
      sub_1BFF239D4((uint64_t)v13, (uint64_t)v18, type metadata accessor for FeedHeadline);
      sub_1BFC66384(v25, v28);
      v52(v18, v28);
      sub_1BFF1F2E4((uint64_t)v18, (uint64_t (*)(void))sub_1BFFC0B88);
      uint64_t v29 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0032944(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v57;
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1C0032944(v30 > 1, v31 + 1, 1);
        uint64_t v29 = v57;
      }
      ++v27;
      *(void *)(v29 + 16) = v31 + 1;
      uint64_t result = sub_1BFF239D4((uint64_t)v8, v29+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v31, type metadata accessor for HeadlineViewLayout.Context);
      v25 += 40;
      a1 = v49;
      if (v24 == v27) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_15:
    unint64_t v32 = v55;
    if (v55 <= v56)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v57;
    }
    if (v24 <= v56) {
      int64_t v33 = v56;
    }
    else {
      int64_t v33 = v24;
    }
    uint64_t v34 = v44 + 40 * v24 + 32;
    while (v32 != v24)
    {
      uint64_t v35 = v47;
      uint64_t result = sub_1BFF1AFA4(a1+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v24, v47, type metadata accessor for FeedHeadline);
      if (v56 == v24)
      {
        sub_1BFF1F2E4(v35, type metadata accessor for FeedHeadline);
        goto LABEL_30;
      }
      if (v33 == v24) {
        goto LABEL_34;
      }
      uint64_t v36 = v50;
      uint64_t v37 = v46;
      uint64_t v38 = v46 + *(int *)(v50 + 48);
      sub_1BFF239D4(v35, v46, type metadata accessor for FeedHeadline);
      sub_1BFC66384(v34, v38);
      uint64_t v39 = v45;
      sub_1BFF239D4(v37, v45, (uint64_t (*)(void))sub_1BFFC0B88);
      v52((char *)v39, v39 + *(int *)(v36 + 48));
      sub_1BFF1F2E4(v39, (uint64_t (*)(void))sub_1BFFC0B88);
      uint64_t v40 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0032944(0, *(void *)(v40 + 16) + 1, 1);
        uint64_t v40 = v57;
      }
      unint64_t v42 = *(void *)(v40 + 16);
      unint64_t v41 = *(void *)(v40 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1C0032944(v41 > 1, v42 + 1, 1);
        uint64_t v40 = v57;
      }
      ++v24;
      *(void *)(v40 + 16) = v42 + 1;
      uint64_t result = sub_1BFF239D4(v48, v40+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v42, type metadata accessor for HeadlineViewLayout.Context);
      v34 += 40;
      unint64_t v32 = v55;
      if (v55 == v24) {
        goto LABEL_30;
      }
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C06478B0(uint64_t a1)
{
  return sub_1C06479A0(a1, sub_1C0643E6C);
}

unint64_t sub_1C06478C8()
{
  unint64_t result = qword_1EA19CC38;
  if (!qword_1EA19CC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC38);
  }
  return result;
}

unint64_t sub_1C064791C()
{
  unint64_t result = qword_1EA19CC40;
  if (!qword_1EA19CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC40);
  }
  return result;
}

uint64_t sub_1C0647970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C064648C(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0647978()
{
  return swift_deallocObject();
}

uint64_t sub_1C0647988(uint64_t a1)
{
  return sub_1C06479A0(a1, sub_1C0644080);
}

uint64_t sub_1C06479A0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1C06479B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C06479FC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C06479FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V17.Layout;
    v8[1] = &type metadata for A18_V17.Layout.Attributes;
    v8[2] = sub_1C06478C8();
    v8[3] = sub_1C064791C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0647A80(uint64_t a1)
{
  return sub_1C0644844(a1, *(void *)(v1 + 16));
}

void sub_1C0647A88()
{
  if (!qword_1EA19CC70)
  {
    sub_1C0647FD0(255, &qword_1EA19CC78, (uint64_t (*)(void))sub_1C06478C8, (uint64_t)&type metadata for A18_V17.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CC70);
    }
  }
}

uint64_t sub_1C0647B18(uint64_t a1)
{
  return sub_1C0644C34(a1, *(void *)(v1 + 16));
}

void sub_1C0647B20(uint64_t a1)
{
  sub_1C0645A88(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C0647B2C(uint64_t a1)
{
  return sub_1C0645E08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(char **)(v1 + 48));
}

uint64_t sub_1C0647B3C(uint64_t a1)
{
  return sub_1C0644ED8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0647B44(uint64_t a1)
{
  return sub_1C06454B0(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V17.Layout.Attributes()
{
  return &type metadata for A18_V17.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V17.Layout()
{
  return &type metadata for A18_V17.Layout;
}

unint64_t sub_1C0647B70()
{
  unint64_t result = qword_1EA19CC80;
  if (!qword_1EA19CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC80);
  }
  return result;
}

unint64_t sub_1C0647BC8()
{
  unint64_t result = qword_1EA19CC88;
  if (!qword_1EA19CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC88);
  }
  return result;
}

unint64_t sub_1C0647C20()
{
  unint64_t result = qword_1EA19CC90;
  if (!qword_1EA19CC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC90);
  }
  return result;
}

unint64_t sub_1C0647C78()
{
  unint64_t result = qword_1EA19CC98;
  if (!qword_1EA19CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CC98);
  }
  return result;
}

uint64_t sub_1C0647CCC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0647FD0(0, &qword_1EA19CCA0, (uint64_t (*)(void))sub_1C0647F7C, (uint64_t)&type metadata for A18_V17.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0647F7C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0648038(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0647F7C()
{
  unint64_t result = qword_1EA19CCA8;
  if (!qword_1EA19CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCA8);
  }
  return result;
}

void sub_1C0647FD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0648038(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V17.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C064814CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V17.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V17.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0648188()
{
  unint64_t result = qword_1EA19CCB8;
  if (!qword_1EA19CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCB8);
  }
  return result;
}

unint64_t sub_1C06481E0()
{
  unint64_t result = qword_1EA19CCC0;
  if (!qword_1EA19CCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCC0);
  }
  return result;
}

unint64_t sub_1C0648238()
{
  unint64_t result = qword_1EA19CCC8;
  if (!qword_1EA19CCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCC8);
  }
  return result;
}

uint64_t sub_1C064828C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 <= 2u)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for DebugFormatTemplateFile(uint64_t a1)
{
  return sub_1C0648314(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t sub_1C0648314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 <= 2u)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DebugFormatTemplateFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 56);
  sub_1C064828C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for DebugFormatTemplateFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 56);
  sub_1C064828C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  unsigned __int8 v18 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v10;
  sub_1C0648314(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for DebugFormatTemplateFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  sub_1C0648314(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t sub_1C0648518(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56);
}

uint64_t sub_1C0648520(uint64_t result, char a2)
{
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateFile()
{
  return &type metadata for DebugFormatTemplateFile;
}

uint64_t sub_1C0648538(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  sub_1C06492B0(v3, &v17);
  if (v21)
  {
    if (v21 == 1)
    {
      long long v26 = v17;
      long long v27 = v18;
      long long v28 = v19;
      uint64_t v29 = v20;
      LOBYTE(v12) = 1;
      sub_1C0649378();
      long long v13 = 0uLL;
      sub_1C152080C();
      if (!v2)
      {
        long long v13 = v26;
        long long v14 = v27;
        long long v15 = v28;
        uint64_t v10 = v29;
LABEL_9:
        uint64_t v16 = v10;
        long long v12 = xmmword_1C152C800;
        sub_1C06493CC();
        sub_1C152080C();
      }
    }
    else
    {
      long long v30 = v17;
      long long v31 = v18;
      long long v32 = v19;
      uint64_t v33 = v20;
      LOBYTE(v12) = 2;
      sub_1C0649378();
      long long v13 = 0uLL;
      sub_1C152080C();
      if (!v2)
      {
        long long v13 = v30;
        long long v14 = v31;
        long long v15 = v32;
        uint64_t v10 = v33;
        goto LABEL_9;
      }
    }
  }
  else
  {
    long long v22 = v17;
    long long v23 = v18;
    long long v24 = v19;
    uint64_t v25 = v20;
    LOBYTE(v12) = 0;
    sub_1C0649378();
    long long v13 = 0uLL;
    sub_1C152080C();
    if (!v2)
    {
      long long v13 = v22;
      long long v14 = v23;
      long long v15 = v24;
      uint64_t v10 = v25;
      goto LABEL_9;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0648804()
{
  sub_1C1520DBC();
  sub_1C06492B0(v0, &v4);
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  sub_1C06492B0(v0, &v3);
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  sub_1C06492B0(v0, &v2);
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C06488D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14836F8(*a1, *a2);
}

uint64_t sub_1C06488E0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0648980()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0648A0C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0648AA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C064903C();
  *a1 = result;
  return result;
}

void sub_1C0648AD8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x74657070696E73;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656C797473;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6567616B636170;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0648B34()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0648B94()
{
  return sub_1C151EAEC();
}

_OWORD *sub_1C0648BE4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = (_OWORD *)sub_1C0649088(a1, (uint64_t)v5);
  if (!v2) {
    return sub_1C06492B0(v5, a2);
  }
  return result;
}

uint64_t sub_1C0648C2C(void *a1)
{
  sub_1C06492B0(v1, v4);
  return sub_1C0648538(a1);
}

uint64_t sub_1C0648C7C()
{
  sub_1C06492B0(v0, v2);
  return sub_1C0648804();
}

uint64_t sub_1C0648CB4()
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0648D64()
{
  return sub_1C1520E0C();
}

BOOL sub_1C0648E14(long long *a1, long long *a2)
{
  sub_1C06492B0(a1, v4);
  sub_1C06492B0(a2, v5);
  return sub_1C0648EB8(v4, v5);
}

unint64_t sub_1C0648E64()
{
  unint64_t result = qword_1EA19CCD0;
  if (!qword_1EA19CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCD0);
  }
  return result;
}

BOOL sub_1C0648EB8(long long *a1, long long *a2)
{
  sub_1C06492B0(a1, &v23);
  if (v29)
  {
    if (v29 == 1)
    {
      unint64_t v4 = *((void *)&v23 + 1);
      unint64_t v3 = v23;
      uint64_t v5 = v24;
      uint64_t v6 = v25;
      uint64_t v7 = v26;
      uint64_t v8 = v27;
      uint64_t v9 = v28;
      sub_1C06492B0(a2, &v16);
      if (v22 != 1) {
        return 0;
      }
    }
    else
    {
      unint64_t v4 = *((void *)&v23 + 1);
      unint64_t v3 = v23;
      uint64_t v5 = v24;
      uint64_t v6 = v25;
      uint64_t v7 = v26;
      uint64_t v8 = v27;
      uint64_t v9 = v28;
      sub_1C06492B0(a2, &v16);
      if (v22 != 2) {
        return 0;
      }
    }
  }
  else
  {
    unint64_t v4 = *((void *)&v23 + 1);
    unint64_t v3 = v23;
    uint64_t v5 = v24;
    uint64_t v6 = v25;
    uint64_t v7 = v26;
    uint64_t v8 = v27;
    uint64_t v9 = v28;
    sub_1C06492B0(a2, &v16);
    if (v22) {
      return 0;
    }
  }
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = v21;
  uint64_t v14 = v20;
  uint64_t v15 = v19;
  return (__PAIR128__(v4, v3) == v16 || (sub_1C1520A9C() & 1) != 0)
      && (v5 == v10 && v6 == v11 || (sub_1C1520A9C() & 1) != 0)
      && (sub_1C00E2D3C(v9, v12) & 1) != 0
      && (v7 == v15 && v8 == v14 || (sub_1C1520A9C() & 1) != 0);
}

uint64_t sub_1C064903C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0649088@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1C06492D0();
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  sub_1C15206EC();
  char v10 = v18;
  long long v18 = xmmword_1C152C800;
  sub_1C0649324();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  long long v17 = v24;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(_OWORD *)(a2 + 40) = v17;
  *(unsigned char *)(a2 + 56) = v10;
  return result;
}

_OWORD *sub_1C06492B0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(long long *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

unint64_t sub_1C06492D0()
{
  unint64_t result = qword_1EA19CCD8;
  if (!qword_1EA19CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCD8);
  }
  return result;
}

unint64_t sub_1C0649324()
{
  unint64_t result = qword_1EA19CCE0;
  if (!qword_1EA19CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCE0);
  }
  return result;
}

unint64_t sub_1C0649378()
{
  unint64_t result = qword_1EA19CCE8;
  if (!qword_1EA19CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCE8);
  }
  return result;
}

unint64_t sub_1C06493CC()
{
  unint64_t result = qword_1EA19CCF0;
  if (!qword_1EA19CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTemplateFile.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C06494ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateFile.CodingType()
{
  return &type metadata for DebugFormatTemplateFile.CodingType;
}

unint64_t sub_1C0649528()
{
  unint64_t result = qword_1EA19CCF8;
  if (!qword_1EA19CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CCF8);
  }
  return result;
}

unint64_t sub_1C064957C()
{
  unint64_t result = qword_1EA19CD00;
  if (!qword_1EA19CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CD00);
  }
  return result;
}

uint64_t sub_1C0649618(uint64_t *a1, void *a2, uint64_t *a3)
{
  v879 = a2;
  v899 = a1;
  sub_1C06554B8();
  uint64_t v853 = v4;
  uint64_t v852 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v851 = (char *)&v843 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00FD9D4();
  uint64_t v850 = v6;
  uint64_t v847 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  v845 = (char *)&v843 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v844 = (char *)&v843 - v9;
  uint64_t v849 = sub_1C151635C();
  uint64_t v848 = *(void *)(v849 - 8);
  MEMORY[0x1F4188790](v849);
  v846 = (char *)&v843 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v883 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v883);
  v878 = (char *)&v843 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v875 = (void *)type metadata accessor for FormatCustomItem.Action();
  uint64_t v874 = *(v875 - 1);
  MEMORY[0x1F4188790](v875);
  uint64_t v856 = (uint64_t)&v843 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v13 - 8);
  v873 = (uint64_t *)((char *)&v843 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  v887 = (int *)((char *)&v843 - v16);
  uint64_t v870 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v870);
  v877 = (uint64_t *)((char *)&v843 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v888 = (int *)type metadata accessor for FormatCustomItem();
  MEMORY[0x1F4188790](v888);
  uint64_t v885 = (uint64_t)&v843 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0153798(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v843 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for PuzzleStatistic();
  uint64_t v871 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v867 = (uint64_t)&v843 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v24 - 8);
  v882 = (char *)&v843 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v857 = (uint64_t)&v843 - v27;
  MEMORY[0x1F4188790](v28);
  v872 = (uint64_t *)((char *)&v843 - v29);
  uint64_t v890 = sub_1C1515FDC();
  uint64_t v891 = *(void *)(v890 - 8);
  MEMORY[0x1F4188790](v890);
  uint64_t v884 = (uint64_t)&v843 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v843 - v32;
  MEMORY[0x1F4188790](v34);
  v855 = (char *)&v843 - v35;
  MEMORY[0x1F4188790](v36);
  v886 = (uint64_t *)((char *)&v843 - v37);
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v843 - v39;
  sub_1C06555A8(0);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v869 = (uint64_t)&v843 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v843 - v44;
  MEMORY[0x1F4188790](v46);
  v889 = (uint64_t *)((char *)&v843 - v47);
  v892 = (int *)type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v892);
  v880 = (char *)&v843 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v49);
  v881 = (uint64_t *)((char *)&v843 - v50);
  MEMORY[0x1F4188790](v51);
  v876 = (uint64_t *)((char *)&v843 - v52);
  MEMORY[0x1F4188790](v53);
  *(void *)&long long v893 = (char *)&v843 - v54;
  uint64_t v895 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v895);
  uint64_t v862 = (uint64_t)&v843 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v56);
  uint64_t v863 = (uint64_t)&v843 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v861 = (uint64_t)&v843 - v59;
  MEMORY[0x1F4188790](v60);
  uint64_t v860 = (uint64_t)&v843 - v61;
  MEMORY[0x1F4188790](v62);
  v854 = (uint64_t *)((char *)&v843 - v63);
  MEMORY[0x1F4188790](v64);
  uint64_t v864 = (uint64_t)&v843 - v65;
  MEMORY[0x1F4188790](v66);
  uint64_t v866 = (uint64_t)&v843 - v67;
  MEMORY[0x1F4188790](v68);
  v859 = (int **)((char *)&v843 - v69);
  MEMORY[0x1F4188790](v70);
  v858 = (int **)((char *)&v843 - v71);
  MEMORY[0x1F4188790](v72);
  v868 = (uint64_t *)((char *)&v843 - v73);
  MEMORY[0x1F4188790](v74);
  unsigned __int8 v76 = (uint64_t *)((char *)&v843 - v75);
  MEMORY[0x1F4188790](v77);
  uint64_t v79 = (uint64_t *)((char *)&v843 - v78);
  MEMORY[0x1F4188790](v80);
  v865 = (uint64_t *)((char *)&v843 - v81);
  uint64_t v82 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v82);
  uint64_t v84 = (uint64_t *)((char *)&v843 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v897 = *a3;
  uint64_t v896 = a3[1];
  sub_1BFE33F20(v898, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v93 = *v84;
      uint64_t v94 = v899[1];
      if (!*(void *)(v94 + 16)) {
        goto LABEL_278;
      }
      uint64_t v96 = *(void *)(v93 + 16);
      uint64_t v95 = *(void *)(v93 + 24);
      swift_bridgeObjectRetain();
      unint64_t v97 = sub_1BFEF2D8C(v96, v95);
      if ((v98 & 1) == 0) {
        goto LABEL_277;
      }
      goto LABEL_38;
    case 2u:
      uint64_t v99 = (int *)*v84;
      uint64_t v100 = v899[2];
      if (!*(void *)(v100 + 16)) {
        goto LABEL_278;
      }
      uint64_t v102 = *((void *)v99 + 2);
      uint64_t v101 = *((void *)v99 + 3);
      swift_bridgeObjectRetain();
      unint64_t v103 = sub_1BFEF2D8C(v102, v101);
      if ((v104 & 1) == 0) {
        goto LABEL_181;
      }
      id v105 = *(id *)(*(void *)(v100 + 56) + 8 * v103);
      swift_bridgeObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v106 = (int *)type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v107 = (*(unsigned __int8 *)(*((void *)v106 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v106 - 1) + 80);
      uint64_t v108 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v108 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v108;
      uint64_t v109 = v108 + v107;
      *uint64_t v79 = v105;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      char v110 = (int *)*((void *)v99 + 8);
      swift_beginAccess();
      uint64_t v111 = *((void *)v99 + 9);
      uint64_t v901 = MEMORY[0x1E4FBC860];
      uint64_t v112 = *(void *)(v111 + 16);
      if (v112)
      {
        v889 = (void *)v109;
        uint64_t v890 = (uint64_t)v106;
        v892 = v99;
        sub_1BFDB3920(v897);
        uint64_t v891 = (uint64_t)v105;
        id v113 = v105;
        v888 = v110;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v887 = (int *)v111;
        char v114 = (uint64_t *)(v111 + 48);
        while (1)
        {
          uint64_t v121 = *(v114 - 2);
          uint64_t v122 = *(v114 - 1);
          uint64_t v123 = *v114;
          if ((~*v114 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            unint64_t v115 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v116 = (*(unsigned __int8 *)(*(void *)v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v115 + 80);
            uint64_t v117 = swift_allocObject();
            *(_OWORD *)(v117 + 16) = v893;
            char v118 = (uint64_t *)(v117 + v116);
            *char v118 = v121;
            v118[1] = v122;
            v118[2] = v123;
            v118[3] = 1;
            unint64_t v119 = v117 + v116 + v115[9];
            uint64_t v120 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v119, 1, 1, v120);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v124 = v899[9];
            if (!*(void *)(v124 + 16)) {
              goto LABEL_23;
            }
            swift_bridgeObjectRetain();
            unint64_t v125 = sub_1BFEF2D8C(v121, v122);
            if ((v126 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_23:
              uint64_t v117 = MEMORY[0x1E4FBC860];
              goto LABEL_17;
            }
            unint64_t v127 = *(void *)(v124 + 56) + (v125 << 6);
            uint64_t v895 = *(void *)(v127 + 8);
            uint64_t v117 = *(void *)(v127 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_17:
          v114 += 3;
          sub_1BFDC11A4(v123);
          sub_1BFEDB748(v117);
          if (!--v112)
          {
            swift_bridgeObjectRelease();
            uint64_t v707 = v901;
            uint64_t v708 = v896;
            uint64_t v709 = v897;
            id v105 = (id)v891;
            uint64_t v106 = (int *)v890;
            uint64_t v109 = (uint64_t)v889;
            char v110 = v888;
            goto LABEL_227;
          }
        }
      }
      uint64_t v709 = v897;
      uint64_t v708 = v896;
      sub_1BFDB3920(v897);
      id v758 = v105;
      swift_bridgeObjectRetain();
      uint64_t v707 = MEMORY[0x1E4FBC860];
LABEL_227:
      sub_1BFE35B2C((uint64_t)v79, v109, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      v759 = (uint64_t *)(v109 + v106[5]);
      uint64_t *v759 = v709;
      v759[1] = v708;
      *(void *)(v109 + v106[6]) = v110;
      *(void *)(v109 + v106[7]) = v707;
      swift_release();

      return v898;
    case 3u:
      uint64_t v128 = (int *)*v84;
      uint64_t v129 = v899[3];
      if (!*(void *)(v129 + 16)) {
        goto LABEL_278;
      }
      uint64_t v131 = *((void *)v128 + 2);
      uint64_t v130 = *((void *)v128 + 3);
      swift_bridgeObjectRetain();
      unint64_t v132 = sub_1BFEF2D8C(v131, v130);
      if ((v133 & 1) == 0) {
        goto LABEL_181;
      }
      uint64_t v134 = *(void *)(*(void *)(v129 + 56) + 8 * v132);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v135 = (int *)type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v136 = (*(unsigned __int8 *)(*((void *)v135 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v135 - 1) + 80);
      uint64_t v137 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v137 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v137;
      uint64_t v138 = v137 + v136;
      *unsigned __int8 v76 = v134;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      uint64_t v139 = *((void *)v128 + 4);
      swift_beginAccess();
      uint64_t v140 = *((void *)v128 + 5);
      uint64_t v901 = MEMORY[0x1E4FBC860];
      uint64_t v141 = *(void *)(v140 + 16);
      if (v141)
      {
        v889 = (void *)v138;
        uint64_t v890 = (uint64_t)v135;
        v892 = v128;
        sub_1BFDB3920(v897);
        uint64_t v891 = v134;
        swift_unknownObjectRetain();
        v888 = (int *)v139;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v887 = (int *)v140;
        uint64_t v142 = (uint64_t *)(v140 + 48);
        while (1)
        {
          uint64_t v149 = *(v142 - 2);
          uint64_t v150 = *(v142 - 1);
          uint64_t v151 = *v142;
          if ((~*v142 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            uint64_t v143 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v144 = (*(unsigned __int8 *)(*(void *)v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v143 + 80);
            uint64_t v145 = swift_allocObject();
            *(_OWORD *)(v145 + 16) = v893;
            int v146 = (uint64_t *)(v145 + v144);
            *int v146 = v149;
            v146[1] = v150;
            v146[2] = v151;
            v146[3] = 1;
            unint64_t v147 = v145 + v144 + v143[9];
            uint64_t v148 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v147, 1, 1, v148);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v152 = v899[9];
            if (!*(void *)(v152 + 16)) {
              goto LABEL_35;
            }
            swift_bridgeObjectRetain();
            unint64_t v153 = sub_1BFEF2D8C(v149, v150);
            if ((v154 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_35:
              uint64_t v145 = MEMORY[0x1E4FBC860];
              goto LABEL_29;
            }
            unint64_t v155 = *(void *)(v152 + 56) + (v153 << 6);
            uint64_t v895 = *(void *)(v155 + 8);
            uint64_t v145 = *(void *)(v155 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_29:
          v142 += 3;
          sub_1BFDC11A4(v151);
          sub_1BFEDB748(v145);
          if (!--v141)
          {
            swift_bridgeObjectRelease();
            uint64_t v710 = v901;
            uint64_t v711 = v896;
            uint64_t v712 = v897;
            uint64_t v135 = (int *)v890;
            uint64_t v138 = (uint64_t)v889;
            uint64_t v139 = (uint64_t)v888;
            goto LABEL_229;
          }
        }
      }
      uint64_t v712 = v897;
      uint64_t v711 = v896;
      sub_1BFDB3920(v897);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v710 = MEMORY[0x1E4FBC860];
LABEL_229:
      uint64_t v760 = (uint64_t)v76;
      goto LABEL_234;
    case 4u:
      uint64_t v156 = *v84;
      uint64_t v94 = v899[4];
      if (!*(void *)(v94 + 16)) {
        goto LABEL_278;
      }
      uint64_t v158 = *(void *)(v156 + 16);
      uint64_t v157 = *(void *)(v156 + 24);
      swift_bridgeObjectRetain();
      unint64_t v97 = sub_1BFEF2D8C(v158, v157);
      if ((v159 & 1) == 0) {
        goto LABEL_277;
      }
LABEL_38:
      unint64_t v160 = *(void *)(*(void *)(v94 + 56) + 8 * v97);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v161 = v897;
      uint64_t v162 = v896;
      sub_1BFDB3920(v897);
      uint64_t v163 = sub_1C065500C(v160, v161, v162);
      sub_1BFDB3960(v161);
      swift_bridgeObjectRelease();
      swift_release();
      return v163;
    case 5u:
      uint64_t v165 = (uint64_t)v84;
      uint64_t v166 = v893;
      sub_1BFE35B2C(v165, v893, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v167 = sub_1C06514E4(v166, v899);
      uint64_t v883 = v168;
      long long v170 = v169;
      uint64_t v171 = v166 + v892[5];
      uint64_t v172 = sub_1C1515DDC();
      uint64_t v174 = v890;
      uint64_t v175 = (uint64_t)v889;
      v888 = (int *)v167;
      v882 = v170;
      if (!v173) {
        goto LABEL_160;
      }
      uint64_t v176 = v899[20];
      if (*(void *)(v176 + 16) && (unint64_t v177 = sub_1BFEF2D8C(v172, v173), (v178 & 1) != 0))
      {
        char v179 = (uint64_t *)(*(void *)(v176 + 56) + 24 * v177);
        uint64_t v181 = *v179;
        uint64_t v180 = v179[1];
        uint64_t v182 = v179[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v183 = v879[9];
        if (v183)
        {
          uint64_t v185 = v879[10];
          uint64_t v184 = v879[11];
          uint64_t v186 = v879[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v187 = v186;
          uint64_t v175 = (uint64_t)v889;
          sub_1C0C5D594(v171, v187, v183, v185, v184, (uint64_t)v40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v188 = v890;
          uint64_t v189 = v891;
        }
        else
        {
          uint64_t v189 = v891;
          uint64_t v188 = v890;
          (*(void (**)(char *, uint64_t, uint64_t))(v891 + 16))(v40, v171, v890);
        }
        *(void *)uint64_t v45 = v181;
        *((void *)v45 + 1) = v180;
        uint64_t v840 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v189 + 32))(&v45[*(int *)(v840 + 20)], v40, v188);
        *(void *)&v45[*(int *)(v840 + 24)] = v182;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v840 - 8) + 56))(v45, 0, 1, v840);
        sub_1BFE35B2C((uint64_t)v45, v175, (uint64_t (*)(void))sub_1C06555A8);
        uint64_t v174 = v188;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_160:
        uint64_t v624 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v624 - 8) + 56))(v175, 1, 1, v624);
      }
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v625 = type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v626 = (*(unsigned __int8 *)(*(void *)(v625 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v625 - 8) + 80);
      *(void *)&long long v898 = swift_allocObject();
      *(_OWORD *)(v898 + 16) = xmmword_1C1529AE0;
      uint64_t v627 = v879[8];
      uint64_t v628 = v879[9];
      uint64_t v629 = v879[10];
      uint64_t v630 = v879[11];
      v887 = (int *)v625;
      if (v628)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C0C5D594(v171, v627, v628, v629, v630, (uint64_t)v886);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(void *, uint64_t, uint64_t))(v891 + 16))(v886, v171, v174);
      }
      uint64_t v659 = *(void *)v893;
      uint64_t v658 = *(void *)(v893 + 8);
      if (v659 == sub_1C1515E2C() && v658 == v660)
      {
        swift_bridgeObjectRelease();
LABEL_179:
        uint64_t v659 = 0;
        uint64_t v658 = 0;
        goto LABEL_187;
      }
      char v661 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v661) {
        goto LABEL_179;
      }
      swift_bridgeObjectRetain();
LABEL_187:
      uint64_t v885 = v898 + v626;
      uint64_t v884 = v659;
      if (!v628)
      {
        swift_bridgeObjectRetain();
        goto LABEL_191;
      }
      uint64_t v666 = v857;
      sub_1BFE33F20(v893 + v892[6], v857, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v667 = v891;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v891 + 48))(v666, 1, v174) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFE38E08(v666, (uint64_t (*)(void))sub_1BFF00BEC);
LABEL_191:
        v668 = (void (*)(void, void, void))v872;
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v891 + 56))(v872, 1, 1, v174);
        goto LABEL_193;
      }
      uint64_t v669 = (uint64_t)v855;
      (*(void (**)(char *, uint64_t, uint64_t))(v667 + 32))(v855, v666, v174);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v668 = (void (*)(void, void, void))v872;
      sub_1C0C5D594(v669, v627, v628, v629, v630, (uint64_t)v872);
      (*(void (**)(uint64_t, uint64_t))(v667 + 8))(v669, v174);
      (*(void (**)(void (*)(void, void, void), void, uint64_t, uint64_t))(v667 + 56))(v668, 0, 1, v174);
LABEL_193:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v670 = v893;
      uint64_t v671 = *(void *)(v893 + v892[7]);
      v672 = (uint64_t *)(v893 + v892[8]);
      uint64_t v673 = *v672;
      uint64_t v674 = v672[1];
      v675 = (uint64_t *)(v893 + v892[9]);
      uint64_t v677 = *v675;
      uint64_t v676 = v675[1];
      *(void *)&long long v902 = *(void *)(v893 + v892[10]);
      BYTE8(v902) = 0;
      uint64_t v678 = *(void *)(v893 + v892[11]);
      uint64_t v679 = *(void *)(v893 + v892[12]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v841[0] = v676;
      v680 = v876;
      FormatWebEmbed.init(url:identifier:actionUrl:article:webArchiveResourceID:dataResourceID:traits:selectors:properties:)((uint64_t)v886, v884, v658, (uint64_t)v668, v671, v673, v674, v677, v876, v841[0], (uint64_t *)&v902, v678, v679);
      uint64_t v681 = sub_1C1051714(v670);
      uint64_t v682 = sub_1C10518C4(v670);
      uint64_t v683 = (uint64_t)v888;
      if (v888)
      {
        swift_unknownObjectRetain();
        uint64_t v684 = v869;
        sub_1BFE33F20((uint64_t)v889, v869, (uint64_t (*)(void))sub_1C06555A8);
        uint64_t v685 = v684;
        v686 = v868;
        FormatWebEmbed.Resolved.init(webEmbed:indexFileURLPromise:dataURLPromise:headline:genericDataVisualization:)(v680, v681, v682, v683, v685, v868);
        swift_storeEnumTagMultiPayload();
        uint64_t v687 = v897;
        uint64_t v688 = v896;
        sub_1BFDB3920(v897);
        swift_bridgeObjectRetain();
        uint64_t v689 = v883;
        v690 = v882;
        sub_1C0655728(v683);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v895 = sub_1BFEF3988(v689, v678);
        swift_bridgeObjectRetain();
        sub_1C0655728(v683);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v691 = (uint64_t)v690;
      }
      else
      {
        uint64_t v692 = v869;
        sub_1BFE33F20((uint64_t)v889, v869, (uint64_t (*)(void))sub_1C06555A8);
        uint64_t v693 = v692;
        v686 = v868;
        FormatWebEmbed.Resolved.init(webEmbed:indexFileURLPromise:dataURLPromise:headline:genericDataVisualization:)(v680, v681, v682, 0, v693, v868);
        swift_storeEnumTagMultiPayload();
        uint64_t v687 = v897;
        uint64_t v688 = v896;
        sub_1BFDB3920(v897);
        swift_bridgeObjectRetain();
        uint64_t v895 = sub_1BFEF3988(MEMORY[0x1E4FBC870], v678);
        swift_bridgeObjectRetain();
        uint64_t v691 = MEMORY[0x1E4FBC860];
      }
      *(void *)&long long v902 = v679;
      uint64_t v694 = sub_1C1047944(v691);
      uint64_t v695 = v902;
      MEMORY[0x1F4188790](v694);
      v842 = v899;
      uint64_t v696 = sub_1C144A384((void (*)(uint64_t *__return_ptr, void *))sub_1C0655774, (uint64_t)v841, v695);
      swift_bridgeObjectRelease();
      uint64_t v697 = (uint64_t)v686;
      uint64_t v698 = v885;
      sub_1BFE35B2C(v697, v885, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      uint64_t v699 = (uint64_t)v887;
      v700 = (uint64_t *)(v698 + v887[5]);
      uint64_t *v700 = v687;
      v700[1] = v688;
      *(void *)(v698 + *(int *)(v699 + 24)) = v895;
      *(void *)(v698 + *(int *)(v699 + 28)) = v696;
      sub_1C06556DC(v683);
      sub_1BFE38E08((uint64_t)v889, (uint64_t (*)(void))sub_1C06555A8);
      v701 = type metadata accessor for FormatWebEmbed;
      v702 = v904;
      goto LABEL_223;
    case 6u:
      long long v190 = (void *)*v84;
      uint64_t v191 = v899[6];
      if (!*(void *)(v191 + 16)) {
        goto LABEL_278;
      }
      uint64_t v193 = v190[2];
      uint64_t v192 = v190[3];
      swift_bridgeObjectRetain();
      unint64_t v194 = sub_1BFEF2D8C(v193, v192);
      if ((v195 & 1) == 0) {
        goto LABEL_181;
      }
      unint64_t v196 = *(int **)(*(void *)(v191 + 56) + 8 * v194);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v135 = (int *)type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v197 = (*(unsigned __int8 *)(*((void *)v135 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v135 - 1) + 80);
      uint64_t v198 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v198 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v198;
      uint64_t v138 = v198 + v197;
      *v858 = v196;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      uint64_t v199 = v190[22];
      swift_beginAccess();
      uint64_t v200 = v190[23];
      uint64_t v901 = MEMORY[0x1E4FBC860];
      uint64_t v201 = *(void *)(v200 + 16);
      if (v201)
      {
        uint64_t v890 = v138;
        uint64_t v891 = (uint64_t)v135;
        uint64_t v895 = (uint64_t)v190;
        sub_1BFDB3920(v897);
        v892 = v196;
        swift_unknownObjectRetain();
        v889 = (void *)v199;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v888 = (int *)v200;
        long long v202 = (uint64_t *)(v200 + 48);
        while (1)
        {
          uint64_t v209 = *(v202 - 2);
          uint64_t v210 = *(v202 - 1);
          uint64_t v211 = *v202;
          if ((~*v202 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            long long v203 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v204 = (*(unsigned __int8 *)(*(void *)v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v203 + 80);
            uint64_t v205 = swift_allocObject();
            *(_OWORD *)(v205 + 16) = v893;
            long long v206 = (uint64_t *)(v205 + v204);
            *long long v206 = v209;
            v206[1] = v210;
            v206[2] = v211;
            v206[3] = 1;
            unint64_t v207 = v205 + v204 + v203[9];
            uint64_t v208 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 56))(v207, 1, 1, v208);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v212 = v899[9];
            if (!*(void *)(v212 + 16)) {
              goto LABEL_55;
            }
            swift_bridgeObjectRetain();
            unint64_t v213 = sub_1BFEF2D8C(v209, v210);
            if ((v214 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_55:
              uint64_t v205 = MEMORY[0x1E4FBC860];
              goto LABEL_49;
            }
            uint64_t v205 = *(void *)(*(void *)(v212 + 56) + (v213 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_49:
          v202 += 3;
          sub_1BFDC11A4(v211);
          sub_1BFEDB748(v205);
          if (!--v201)
          {
            swift_bridgeObjectRelease();
            uint64_t v710 = v901;
            uint64_t v713 = v896;
            uint64_t v714 = v897;
            uint64_t v135 = (int *)v891;
            uint64_t v138 = v890;
            uint64_t v199 = (uint64_t)v889;
            goto LABEL_231;
          }
        }
      }
      uint64_t v714 = v897;
      uint64_t v713 = v896;
      sub_1BFDB3920(v897);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v710 = MEMORY[0x1E4FBC860];
LABEL_231:
      sub_1BFE35B2C((uint64_t)v858, v138, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      v761 = (uint64_t *)(v138 + v135[5]);
      uint64_t *v761 = v714;
      v761[1] = v713;
      *(void *)(v138 + v135[6]) = v199;
      goto LABEL_235;
    case 7u:
      uint64_t v215 = *v84;
      uint64_t v216 = v899[7];
      if (!*(void *)(v216 + 16)) {
        goto LABEL_278;
      }
      uint64_t v218 = *(void *)(v215 + 16);
      uint64_t v217 = *(void *)(v215 + 24);
      swift_bridgeObjectRetain();
      unint64_t v219 = sub_1BFEF2D8C(v218, v217);
      if ((v220 & 1) == 0) {
        goto LABEL_181;
      }
      v221 = *(int **)(*(void *)(v216 + 56) + 8 * v219);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v135 = (int *)type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v222 = (*(unsigned __int8 *)(*((void *)v135 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v135 - 1) + 80);
      uint64_t v223 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v223 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v223;
      uint64_t v138 = v223 + v222;
      *v859 = v221;
      swift_storeEnumTagMultiPayload();
      v224 = (uint64_t *)(v215 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
      swift_beginAccess();
      uint64_t v139 = *v224;
      v225 = (uint64_t *)(v215 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
      swift_beginAccess();
      uint64_t v226 = *v225;
      uint64_t v901 = MEMORY[0x1E4FBC860];
      uint64_t v227 = *(void *)(v226 + 16);
      if (v227)
      {
        uint64_t v890 = v138;
        uint64_t v891 = (uint64_t)v135;
        uint64_t v895 = v215;
        sub_1BFDB3920(v897);
        v892 = v221;
        swift_unknownObjectRetain();
        v889 = (void *)v139;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v888 = (int *)v226;
        v228 = (uint64_t *)(v226 + 48);
        while (1)
        {
          uint64_t v235 = *(v228 - 2);
          uint64_t v236 = *(v228 - 1);
          uint64_t v237 = *v228;
          if ((~*v228 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v229 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v230 = (*(unsigned __int8 *)(*(void *)v229 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v229 + 80);
            uint64_t v231 = swift_allocObject();
            *(_OWORD *)(v231 + 16) = v893;
            v232 = (uint64_t *)(v231 + v230);
            uint64_t *v232 = v235;
            v232[1] = v236;
            v232[2] = v237;
            v232[3] = 1;
            unint64_t v233 = v231 + v230 + v229[9];
            uint64_t v234 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v234 - 8) + 56))(v233, 1, 1, v234);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v238 = v899[9];
            if (!*(void *)(v238 + 16)) {
              goto LABEL_67;
            }
            swift_bridgeObjectRetain();
            unint64_t v239 = sub_1BFEF2D8C(v235, v236);
            if ((v240 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_67:
              uint64_t v231 = MEMORY[0x1E4FBC860];
              goto LABEL_61;
            }
            uint64_t v231 = *(void *)(*(void *)(v238 + 56) + (v239 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_61:
          v228 += 3;
          sub_1BFDC11A4(v237);
          sub_1BFEDB748(v231);
          if (!--v227)
          {
            swift_bridgeObjectRelease();
            uint64_t v710 = v901;
            uint64_t v711 = v896;
            uint64_t v712 = v897;
            uint64_t v135 = (int *)v891;
            uint64_t v138 = v890;
            uint64_t v139 = (uint64_t)v889;
            goto LABEL_233;
          }
        }
      }
      uint64_t v712 = v897;
      uint64_t v711 = v896;
      sub_1BFDB3920(v897);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v710 = MEMORY[0x1E4FBC860];
LABEL_233:
      uint64_t v760 = (uint64_t)v859;
LABEL_234:
      sub_1BFE35B2C(v760, v138, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      v762 = (uint64_t *)(v138 + v135[5]);
      uint64_t *v762 = v712;
      v762[1] = v711;
      *(void *)(v138 + v135[6]) = v139;
LABEL_235:
      *(void *)(v138 + v135[7]) = v710;
      swift_release();
      swift_unknownObjectRelease();
      return v898;
    case 8u:
      uint64_t v241 = *v84;
      v243 = (int *)v84[2];
      uint64_t v242 = v84[3];
      v892 = (int *)v84[4];
      uint64_t v244 = v899[8];
      uint64_t v245 = *(void *)(v241 + 24);
      *(void *)&long long v902 = *(void *)(v241 + 16);
      *((void *)&v902 + 1) = v245;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      if (*(void *)(v244 + 16) && (unint64_t v246 = sub_1BFEF2D8C(v902, *((uint64_t *)&v902 + 1)), (v247 & 1) != 0))
      {
        uint64_t v248 = v871;
        sub_1BFE33F20(*(void *)(v244 + 56) + *(void *)(v871 + 72) * v246, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v249 = 0;
        v250 = v892;
      }
      else
      {
        uint64_t v249 = 1;
        v250 = v892;
        uint64_t v248 = v871;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v248 + 56))(v21, v249, 1, v22);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v21, 1, v22) == 1)
      {
        sub_1BFE38E08((uint64_t)v21, (uint64_t (*)(void))sub_1C0153798);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_278;
      }
      uint64_t v891 = v242;
      uint64_t v606 = (uint64_t)v21;
      uint64_t v607 = v867;
      sub_1BFE35B2C(v606, v867, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v890 = type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v608 = (*(unsigned __int8 *)(*(void *)(v890 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v890 - 8) + 80);
      uint64_t v609 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v609 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v609;
      v889 = (void *)(v609 + v608);
      sub_1BFE33F20(v607, v866, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v902 = MEMORY[0x1E4FBC860];
      uint64_t v610 = *((void *)v250 + 2);
      if (v610)
      {
        v888 = v243;
        uint64_t v895 = v241;
        sub_1BFDB3920(v897);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v611 = (uint64_t *)(v250 + 12);
        while (1)
        {
          uint64_t v618 = *(v611 - 2);
          uint64_t v619 = *(v611 - 1);
          uint64_t v620 = *v611;
          if ((~*v611 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v612 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v613 = (*(unsigned __int8 *)(*(void *)v612 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v612 + 80);
            uint64_t v614 = swift_allocObject();
            *(_OWORD *)(v614 + 16) = v893;
            v615 = (uint64_t *)(v614 + v613);
            uint64_t *v615 = v618;
            v615[1] = v619;
            v615[2] = v620;
            v615[3] = 1;
            unint64_t v616 = v614 + v613 + v612[9];
            uint64_t v617 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v617 - 8) + 56))(v616, 1, 1, v617);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v621 = v899[9];
            if (!*(void *)(v621 + 16)) {
              goto LABEL_158;
            }
            swift_bridgeObjectRetain();
            unint64_t v622 = sub_1BFEF2D8C(v618, v619);
            if ((v623 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_158:
              uint64_t v614 = MEMORY[0x1E4FBC860];
              goto LABEL_152;
            }
            uint64_t v614 = *(void *)(*(void *)(v621 + 56) + (v622 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_152:
          v611 += 3;
          sub_1BFDC11A4(v620);
          sub_1BFEDB748(v614);
          if (!--v610)
          {
            swift_bridgeObjectRelease();
            uint64_t v662 = v902;
            uint64_t v663 = v896;
            uint64_t v664 = v897;
            uint64_t v665 = v891;
            goto LABEL_222;
          }
        }
      }
      uint64_t v664 = v897;
      uint64_t v663 = v896;
      sub_1BFDB3920(v897);
      uint64_t v665 = v891;
      swift_bridgeObjectRetain();
      uint64_t v662 = MEMORY[0x1E4FBC860];
LABEL_222:
      uint64_t v752 = (uint64_t)v889;
      sub_1BFE35B2C(v866, (uint64_t)v889, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      uint64_t v753 = v890;
      v754 = (uint64_t *)(v752 + *(int *)(v890 + 20));
      uint64_t *v754 = v664;
      v754[1] = v663;
      *(void *)(v752 + *(int *)(v753 + 24)) = v665;
      *(void *)(v752 + *(int *)(v753 + 28)) = v662;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v701 = type metadata accessor for PuzzleStatistic;
      v702 = &v898;
LABEL_223:
      sub_1BFE38E08(*((void *)v702 - 32), (uint64_t (*)(void))v701);
      return v898;
    case 9u:
      uint64_t v252 = *v84;
      uint64_t v251 = v84[1];
      if (v84[2])
      {
        sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
        v253 = (int *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
        unint64_t v254 = (*(unsigned __int8 *)(*(void *)v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v253 + 80);
        uint64_t v255 = swift_allocObject();
        *(_OWORD *)(v255 + 16) = xmmword_1C1529AE0;
        unint64_t v256 = v255 + v254;
        *(void *)unint64_t v256 = v252;
        *(void *)(v256 + 8) = v251;
        *(unsigned char *)(v256 + 16) = 0;
        swift_storeEnumTagMultiPayload();
        v257 = (void *)(v255 + v254 + v253[7]);
        uint64_t v258 = v897;
        uint64_t v259 = v896;
        void *v257 = v897;
        v257[1] = v259;
        *(void *)(v256 + v253[8]) = MEMORY[0x1E4FBC870];
        *(void *)(v256 + v253[9]) = MEMORY[0x1E4FBC860];
        sub_1BFDB3920(v258);
        return v255;
      }
      uint64_t v588 = v899[9];
      if (*(void *)(v588 + 16))
      {
        unint64_t v589 = sub_1BFEF2D8C(*v84, v84[1]);
        if (v590)
        {
          v591 = (long long *)(*(void *)(v588 + 56) + (v589 << 6));
          long long v593 = v591[2];
          long long v592 = v591[3];
          long long v594 = v591[1];
          long long v902 = *v591;
          long long v903 = v594;
          v904[0] = v593;
          v904[1] = v592;
          sub_1BFFD14FC((uint64_t)&v902);
          swift_bridgeObjectRelease();
          sub_1BFFD14FC((uint64_t)&v902);
          uint64_t v595 = swift_bridgeObjectRetain();
          uint64_t v596 = sub_1C0655264(v595, &v902);
          sub_1BFFD147C((uint64_t)&v902);
          swift_bridgeObjectRelease();
          sub_1BFFD147C((uint64_t)&v902);
          return v596;
        }
      }
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    case 0xAu:
      v260 = (uint64_t *)v885;
      sub_1BFE35B2C((uint64_t)v84, v885, (uint64_t (*)(void))type metadata accessor for FormatCustomItem);
      uint64_t v261 = *v260;
      uint64_t v262 = v260[1];
      v263 = (void *)v260[2];
      v264 = (int *)v260[3];
      v265 = (void (*)(void, void, void, void))v873;
      sub_1BFE33F20((uint64_t)v260 + v888[6], (uint64_t)v873, (uint64_t (*)(void))sub_1BFE323F8);
      uint64_t v266 = v874;
      v267 = v875;
      int v268 = (*(uint64_t (**)(void (*)(void, void, void, void), uint64_t, void *))(v874 + 48))(v265, 1, v875);
      v889 = (void *)v261;
      *(void *)&long long v893 = v262;
      v886 = v263;
      if (v268 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v269 = 1;
        v270 = (uint64_t (*)(void))sub_1BFE323F8;
      }
      else
      {
        uint64_t v597 = v856;
        sub_1BFE33F20((uint64_t)v265, v856, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
        uint64_t v598 = v891;
        uint64_t v599 = v597;
        uint64_t v600 = v890;
        (*(void (**)(char *, uint64_t, uint64_t))(v891 + 32))(v33, v599, v890);
        uint64_t v601 = v879[9];
        if (v601)
        {
          v602 = v264;
          uint64_t v603 = v879[11];
          *(void *)&long long v898 = v879[10];
          uint64_t v604 = v879[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v605 = v604;
          v260 = (uint64_t *)v885;
          sub_1C0C5D594((uint64_t)v33, v605, v601, v898, v603, (uint64_t)v887);
          v264 = v602;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(int *, char *, uint64_t))(v598 + 16))(v887, v33, v600);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        (*(void (**)(char *, uint64_t))(v598 + 8))(v33, v600);
        uint64_t v269 = 0;
        v270 = (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action;
      }
      sub_1BFE38E08((uint64_t)v265, v270);
      (*(void (**)(int *, uint64_t, uint64_t, void *))(v266 + 56))(v887, v269, 1, v267);
      uint64_t v720 = *(uint64_t *)((char *)v260 + v888[7]);
      uint64_t v721 = MEMORY[0x1E4FBC860];
      *(void *)&long long v902 = MEMORY[0x1E4FBC860];
      uint64_t v722 = *(void *)(v720 + 16);
      v892 = v264;
      if (v722)
      {
        uint64_t v891 = swift_bridgeObjectRetain();
        v723 = (uint64_t *)(v891 + 48);
        uint64_t v724 = MEMORY[0x1E4FBC860];
        long long v898 = xmmword_1C1529AE0;
        while (1)
        {
          uint64_t v732 = *(v723 - 2);
          uint64_t v731 = *(v723 - 1);
          uint64_t v733 = *v723;
          if ((~*v723 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v725 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v726 = (*(unsigned __int8 *)(*(void *)v725 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v725 + 80);
            uint64_t v727 = swift_allocObject();
            *(_OWORD *)(v727 + 16) = v898;
            v728 = (uint64_t *)(v727 + v726);
            uint64_t *v728 = v732;
            v728[1] = v731;
            v728[2] = v733;
            v728[3] = 1;
            unint64_t v729 = v727 + v726 + v725[9];
            uint64_t v730 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v730 - 8) + 56))(v729, 1, 1, v730);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v734 = v899[9];
            if (!*(void *)(v734 + 16)) {
              goto LABEL_217;
            }
            swift_bridgeObjectRetain();
            unint64_t v735 = sub_1BFEF2D8C(v732, v731);
            if ((v736 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_217:
              uint64_t v727 = v724;
              goto LABEL_211;
            }
            uint64_t v727 = *(void *)(*(void *)(v734 + 56) + (v735 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v724 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_211:
          v723 += 3;
          sub_1BFDC11A4(v733);
          sub_1BFEDB748(v727);
          if (!--v722)
          {
            swift_bridgeObjectRelease();
            uint64_t v737 = v902;
            v260 = (uint64_t *)v885;
            uint64_t v738 = v870;
            uint64_t v739 = (uint64_t)v889;
            uint64_t v740 = v893;
            v741 = (void (*)(void, void, void, void))v886;
            uint64_t v721 = MEMORY[0x1E4FBC860];
            goto LABEL_220;
          }
        }
      }
      uint64_t v737 = MEMORY[0x1E4FBC860];
      uint64_t v738 = v870;
      uint64_t v739 = (uint64_t)v889;
      uint64_t v740 = v893;
      v741 = (void (*)(void, void, void, void))v886;
LABEL_220:
      v742 = v877;
      uint64_t *v877 = v739;
      v742[1] = v740;
      v743 = v892;
      v742[2] = (uint64_t)v741;
      v742[3] = (uint64_t)v743;
      sub_1BFE35B2C((uint64_t)v887, (uint64_t)v742 + *(int *)(v738 + 24), (uint64_t (*)(void))sub_1BFE323F8);
      *(uint64_t *)((char *)v742 + *(int *)(v738 + 28)) = v737;
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      v744 = (int *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
      unint64_t v745 = (*(unsigned __int8 *)(*(void *)v744 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v744 + 80);
      uint64_t v746 = swift_allocObject();
      *(_OWORD *)(v746 + 16) = xmmword_1C1529AE0;
      unint64_t v747 = v746 + v745;
      sub_1BFE33F20((uint64_t)v742, v746 + v745, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      swift_storeEnumTagMultiPayload();
      uint64_t v748 = *(uint64_t *)((char *)v260 + v888[8]);
      v749 = (void *)(v747 + v744[7]);
      uint64_t v750 = v897;
      uint64_t v751 = v896;
      void *v749 = v897;
      v749[1] = v751;
      *(void *)(v747 + v744[8]) = v748;
      *(void *)(v747 + v744[9]) = v721;
      sub_1BFDB3920(v750);
      swift_bridgeObjectRetain();
      sub_1BFE38E08((uint64_t)v742, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      sub_1BFE38E08((uint64_t)v260, (uint64_t (*)(void))type metadata accessor for FormatCustomItem);
      return v746;
    case 0xBu:
      v271 = (void *)*v84;
      uint64_t v272 = v899[13];
      if (!*(void *)(v272 + 16)) {
        goto LABEL_278;
      }
      uint64_t v274 = v271[4];
      uint64_t v273 = v271[5];
      swift_bridgeObjectRetain();
      unint64_t v275 = sub_1BFEF2D8C(v274, v273);
      if ((v276 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_278;
      }
      uint64_t v277 = *(void *)(*(void *)(v272 + 56) + 8 * v275);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v278 = v899[3];
      if (*(void *)(v278 + 16))
      {
        uint64_t v279 = v271[2];
        uint64_t v280 = v271[3];
        swift_bridgeObjectRetain();
        unint64_t v281 = sub_1BFEF2D8C(v279, v280);
        if (v282)
        {
          v283 = *(void **)(*(void *)(v278 + 56) + 8 * v281);
          swift_unknownObjectRetain();
        }
        else
        {
          v283 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v283 = 0;
      }
      uint64_t v765 = *(void *)(v277 + 64);
      swift_beginAccess();
      v766 = (void *)v271[6];
      swift_beginAccess();
      v889 = v271;
      uint64_t v767 = v271[7];
      *(void *)&long long v902 = MEMORY[0x1E4FBC860];
      uint64_t v768 = *(void *)(v767 + 16);
      v888 = (int *)v277;
      if (v768)
      {
        *(void *)&long long v893 = v283;
        v887 = (int *)v765;
        uint64_t v769 = v767;
        swift_unknownObjectRetain();
        v886 = v766;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v885 = v769;
        v770 = (uint64_t *)(v769 + 48);
        uint64_t v771 = MEMORY[0x1E4FBC860];
        long long v898 = xmmword_1C1529AE0;
        while (1)
        {
          uint64_t v778 = *(v770 - 2);
          uint64_t v779 = *(v770 - 1);
          uint64_t v780 = *v770;
          if ((~*v770 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v772 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v773 = (*(unsigned __int8 *)(*(void *)v772 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v772 + 80);
            uint64_t v774 = swift_allocObject();
            *(_OWORD *)(v774 + 16) = v898;
            v775 = (uint64_t *)(v774 + v773);
            uint64_t *v775 = v778;
            v775[1] = v779;
            v775[2] = v780;
            v775[3] = 1;
            unint64_t v776 = v774 + v773 + v772[9];
            uint64_t v777 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v777 - 8) + 56))(v776, 1, 1, v777);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v781 = v899[9];
            if (!*(void *)(v781 + 16)) {
              goto LABEL_260;
            }
            swift_bridgeObjectRetain();
            unint64_t v782 = sub_1BFEF2D8C(v778, v779);
            if ((v783 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_260:
              uint64_t v774 = v771;
              goto LABEL_254;
            }
            uint64_t v774 = *(void *)(*(void *)(v781 + 56) + (v782 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v771 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_254:
          v770 += 3;
          sub_1BFDC11A4(v780);
          sub_1BFEDB748(v774);
          if (!--v768)
          {
            swift_bridgeObjectRelease();
            uint64_t v784 = v902;
            uint64_t v785 = (uint64_t)v889;
            v283 = (void *)v893;
            uint64_t v765 = (uint64_t)v887;
            v786 = (void (*)(void, void, void, void))v886;
            goto LABEL_263;
          }
        }
      }
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      v786 = (void (*)(void, void, void, void))v766;
      uint64_t v784 = MEMORY[0x1E4FBC860];
      uint64_t v785 = (uint64_t)v889;
LABEL_263:
      swift_beginAccess();
      unint64_t v787 = *(void *)(v785 + 64);
      unint64_t v788 = *(void *)(v785 + 72);
      swift_bridgeObjectRetain();
      v789 = sub_1C0F1B7D8(v787, v788);
      swift_bridgeObjectRelease();
      LOBYTE(v900[0]) = 0;
      sub_1C0B98FFC(v283, v765, 0, (uint64_t)v786, v784, (uint64_t)v789, (unsigned __int8 *)v900, (uint64_t *)&v902);
      long long v790 = v902;
      long long v791 = v903;
      long long v792 = v904[0];
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v885 = type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v793 = (*(unsigned __int8 *)(*(void *)(v885 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v885 - 8) + 80);
      uint64_t v794 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v794 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v794;
      v879 = (void *)(v794 + v793);
      v795 = (uint64_t *)swift_allocObject();
      v877 = v795;
      v900[0] = v790;
      v873 = (void *)*((void *)&v790 + 1);
      uint64_t v874 = v791;
      v900[1] = v791;
      v872 = (void *)*((void *)&v791 + 1);
      v887 = (int *)v792;
      v900[2] = v792;
      v886 = (void *)*((void *)&v792 + 1);
      uint64_t v796 = SportsScoreDataVisualization.with(config:)((uint64_t *)v900);
      v795[2] = v796;
      uint64_t v797 = v891;
      v875 = *(void **)(v891 + 16);
      uint64_t v798 = v884;
      uint64_t v799 = v890;
      ((void (*)(uint64_t, uint64_t, uint64_t))v875)(v884, v796 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_embedUrl, v890);
      *(void *)&v900[0] = 0x3A3A65726F6373;
      *((void *)&v900[0] + 1) = 0xE700000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_release();
      swift_bridgeObjectRelease();
      long long v800 = v900[0];
      v876 = *(uint64_t **)(v797 + 56);
      uint64_t v801 = (uint64_t)v882;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v876)(v882, 1, 1, v799);
      v802 = v892;
      v803 = v880;
      ((void (*)(char *, uint64_t, uint64_t))v875)(&v880[v892[5]], v798, v799);
      _OWORD *v803 = v800;
      sub_1BFE33F20(v801, (uint64_t)v803 + v802[6], (uint64_t (*)(void))sub_1BFF00BEC);
      *(void *)((char *)v803 + v802[7]) = 0;
      v804 = (void *)((char *)v803 + v802[8]);
      void *v804 = 0;
      v804[1] = 0;
      v805 = (void *)((char *)v803 + v802[9]);
      void *v805 = 0;
      v805[1] = 0;
      *(void *)((char *)v803 + v802[10]) = 0;
      *(void *)((char *)v803 + v802[11]) = MEMORY[0x1E4FBC870];
      sub_1BFE38E08(v801, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v797 + 8))(v798, v799);
      *(void *)((char *)v803 + v802[12]) = MEMORY[0x1E4FBC860];
      v806 = v881;
      sub_1BFE35B2C((uint64_t)v803, (uint64_t)v881, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v807 = v806[1];
      uint64_t v808 = (uint64_t)v878;
      *(void *)v878 = *v806;
      *(void *)(v808 + 8) = v807;
      v809 = (int *)v883;
      sub_1BFE33F20((uint64_t)v806, v808 + *(int *)(v883 + 20), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      v810 = v876;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v876)(v801, 1, 1, v799);
      sub_1BFF2E634(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain();
      *(void *)(v808 + v809[6]) = sub_1C151908C();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v810)(v801, 1, 1, v799);
      swift_allocObject();
      uint64_t v811 = sub_1C151908C();
      sub_1BFE38E08((uint64_t)v806, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      *(void *)(v808 + v809[7]) = v811;
      uint64_t v812 = v808 + v809[9];
      sub_1BFF2E634(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v813 - 8) + 56))(v812, 1, 1, v813);
      v814 = (uint64_t **)(v808 + v809[8]);
      *v814 = v877;
      uint64_t v815 = type metadata accessor for WebEmbedDataVisualization();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t **, void, uint64_t, uint64_t))(*(void *)(v815 - 8) + 56))(v814, 0, 1, v815);
      sub_1BFE35B2C(v808, v864, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      swift_storeEnumTagMultiPayload();
      uint64_t v817 = v889[6];
      uint64_t v816 = v889[7];
      *(void *)&v900[0] = MEMORY[0x1E4FBC860];
      uint64_t v818 = *(void *)(v816 + 16);
      if (v818)
      {
        uint64_t v819 = v897;
        sub_1BFDB3920(v897);
        uint64_t v895 = v817;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v892 = (int *)v816;
        v820 = (uint64_t *)(v816 + 48);
        while (1)
        {
          uint64_t v828 = *(v820 - 2);
          uint64_t v827 = *(v820 - 1);
          uint64_t v829 = *v820;
          if ((~*v820 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v821 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v822 = (*(unsigned __int8 *)(*(void *)v821 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v821 + 80);
            uint64_t v823 = swift_allocObject();
            *(_OWORD *)(v823 + 16) = v893;
            v824 = (uint64_t *)(v823 + v822);
            uint64_t v819 = v897;
            uint64_t *v824 = v828;
            v824[1] = v827;
            v824[2] = v829;
            v824[3] = 1;
            v825 = (char *)v824 + v821[9];
            uint64_t v826 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v826 - 8) + 56))(v825, 1, 1, v826);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v830 = v899[9];
            if (!*(void *)(v830 + 16)) {
              goto LABEL_272;
            }
            swift_bridgeObjectRetain();
            unint64_t v831 = sub_1BFEF2D8C(v828, v827);
            if ((v832 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_272:
              uint64_t v823 = MEMORY[0x1E4FBC860];
              goto LABEL_266;
            }
            uint64_t v823 = *(void *)(*(void *)(v830 + 56) + (v831 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v819 = v897;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_266:
          v820 += 3;
          sub_1BFDC11A4(v829);
          sub_1BFEDB748(v823);
          if (!--v818)
          {
            swift_bridgeObjectRelease();
            uint64_t v833 = v819;
            uint64_t v834 = *(void *)&v900[0];
            uint64_t v835 = v896;
            uint64_t v836 = v895;
            goto LABEL_275;
          }
        }
      }
      uint64_t v833 = v897;
      uint64_t v835 = v896;
      sub_1BFDB3920(v897);
      swift_bridgeObjectRetain();
      uint64_t v834 = MEMORY[0x1E4FBC860];
      uint64_t v836 = v817;
LABEL_275:
      v837 = v879;
      sub_1BFE35B2C(v864, (uint64_t)v879, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      uint64_t v838 = v885;
      v839 = (void *)((char *)v837 + *(int *)(v885 + 20));
      uint64_t *v839 = v833;
      v839[1] = v835;
      *(void *)((char *)v837 + *(int *)(v838 + 24)) = v836;
      *(void *)((char *)v837 + *(int *)(v838 + 28)) = v834;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return v898;
    case 0xCu:
      v284 = (void *)*v84;
      uint64_t v285 = v899[14];
      if (!*(void *)(v285 + 16)) {
        goto LABEL_278;
      }
      uint64_t v287 = v284[2];
      uint64_t v286 = v284[3];
      swift_bridgeObjectRetain();
      unint64_t v288 = sub_1BFEF2D8C(v287, v286);
      if ((v289 & 1) == 0) {
        goto LABEL_277;
      }
      v290 = *(uint64_t **)(*(void *)(v285 + 56) + 8 * v288);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v291 = v899[3];
      if (!*(void *)(v291 + 16)) {
        goto LABEL_237;
      }
      uint64_t v293 = v284[2];
      uint64_t v292 = v284[3];
      swift_bridgeObjectRetain();
      unint64_t v294 = sub_1BFEF2D8C(v293, v292);
      if ((v295 & 1) == 0) {
        goto LABEL_276;
      }
      v296 = *(int **)(*(void *)(v291 + 56) + 8 * v294);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v297 = v290[7];
      swift_beginAccess();
      *(void *)&long long v893 = v284[6];
      uint64_t v298 = swift_beginAccess();
      uint64_t v299 = v284[7];
      MEMORY[0x1F4188790](v298);
      v842 = v899;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v300 = sub_1C144A384((void (*)(uint64_t *__return_ptr, void *))sub_1C06556C0, (uint64_t)v841, v299);
      v888 = 0;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      unint64_t v301 = v284[4];
      unint64_t v302 = v284[5];
      swift_bridgeObjectRetain();
      v303 = sub_1C0F1B7D8(v301, v302);
      swift_bridgeObjectRelease();
      v304 = v846;
      sub_1C151634C();
      v876 = (uint64_t *)sub_1C151633C();
      v889 = (void *)v305;
      (*(void (**)(char *, uint64_t))(v848 + 8))(v304, v849);
      v306 = objc_msgSend(v296, sel_asSports);
      v886 = v306;
      LOBYTE(v902) = 2;
      v887 = v296;
      v307 = (void *)sub_1C0B993A8((uint64_t)v296, v300, (unsigned __int8 *)&v902);
      v879 = v307;
      swift_bridgeObjectRelease();
      LOBYTE(v902) = 2;
      v308 = (char *)sub_1C0B99D94(v296, v297, 0, (uint64_t)v303, 0x64657461727563, 0xE700000000000000, 0, (unsigned __int8 *)&v902);
      v878 = v308;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      uint64_t v309 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v310 = *(void *)(v309 - 8);
      uint64_t v885 = v309 - 8;
      unint64_t v311 = (*(unsigned __int8 *)(v310 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v310 + 80);
      uint64_t v312 = swift_allocObject();
      *(void *)&long long v898 = v312;
      *(_OWORD *)(v312 + 16) = xmmword_1C1529AE0;
      v877 = (uint64_t *)(v312 + v311);
      uint64_t v313 = swift_allocObject();
      *(void *)&long long v902 = v876;
      *((void *)&v902 + 1) = v889;
      *(void *)&long long v903 = v306;
      *((void *)&v903 + 1) = v893;
      *(void *)&v904[0] = v307;
      *((void *)&v904[0] + 1) = v308;
      uint64_t v314 = SportsStandingDataVisualization.with(config:)((uint64_t *)&v902);
      *(void *)(v313 + 16) = v314;
      v875 = (void *)(v313 | 0x2000000000000000);
      uint64_t v315 = v891;
      v872 = *(void **)(v891 + 16);
      uint64_t v316 = v890;
      ((void (*)(uint64_t, uint64_t, uint64_t))v872)(v884, v314 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl, v890);
      strcpy((char *)&v902, "standing::");
      BYTE11(v902) = 0;
      HIDWORD(v902) = -369098752;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_release();
      swift_bridgeObjectRelease();
      long long v317 = v902;
      v873 = *(void **)(v315 + 56);
      uint64_t v874 = v315 + 56;
      uint64_t v318 = (uint64_t)v882;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v873)(v882, 1, 1, v316);
      v319 = v892;
      uint64_t v320 = v892[5];
      v876 = v290;
      v321 = v880;
      uint64_t v322 = v884;
      ((void (*)(char *, uint64_t, uint64_t))v872)(&v880[v320], v884, v316);
      _OWORD *v321 = v317;
      sub_1BFE33F20(v318, (uint64_t)v321 + v319[6], (uint64_t (*)(void))sub_1BFF00BEC);
      *(void *)((char *)v321 + v319[7]) = 0;
      v323 = (void *)((char *)v321 + v319[8]);
      void *v323 = 0;
      v323[1] = 0;
      v324 = (void *)((char *)v321 + v319[9]);
      void *v324 = 0;
      v324[1] = 0;
      *(void *)((char *)v321 + v319[10]) = 0;
      *(void *)((char *)v321 + v319[11]) = MEMORY[0x1E4FBC870];
      sub_1BFE38E08(v318, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v325 = v316;
      (*(void (**)(uint64_t, uint64_t))(v315 + 8))(v322, v316);
      *(void *)((char *)v321 + v319[12]) = MEMORY[0x1E4FBC860];
      v326 = v881;
      sub_1BFE35B2C((uint64_t)v321, (uint64_t)v881, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v327 = v326[1];
      v328 = v854;
      void *v854 = *v326;
      v328[1] = v327;
      v329 = (int *)v883;
      sub_1BFE33F20((uint64_t)v326, (uint64_t)v328 + *(int *)(v883 + 20), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      v330 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v873;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v873)(v318, 1, 1, v325);
      sub_1BFF2E634(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain();
      *(void *)((char *)v328 + v329[6]) = sub_1C151908C();
      v330(v318, 1, 1, v890);
      swift_allocObject();
      uint64_t v331 = sub_1C151908C();
      sub_1BFE38E08((uint64_t)v326, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      *(void *)((char *)v328 + v329[7]) = v331;
      v332 = (char *)v328 + v329[9];
      sub_1BFF2E634(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v333 - 8) + 56))(v332, 1, 1, v333);
      v334 = (void *)((char *)v328 + v329[8]);
      void *v334 = v875;
      uint64_t v335 = type metadata accessor for WebEmbedDataVisualization();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v335 - 8) + 56))(v334, 0, 1, v335);
      uint64_t v336 = swift_storeEnumTagMultiPayload();
      uint64_t v337 = v284[6];
      uint64_t v338 = v284[7];
      MEMORY[0x1F4188790](v336);
      v842 = v899;
      uint64_t v339 = v897;
      uint64_t v340 = v896;
      sub_1BFDB3920(v897);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v341 = sub_1C144A384((void (*)(uint64_t *__return_ptr, void *))sub_1C0655774, (uint64_t)v841, v338);
      swift_bridgeObjectRelease();
      uint64_t v342 = (uint64_t)v328;
      v343 = (char *)v877;
      sub_1BFE35B2C(v342, (uint64_t)v877, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      uint64_t v344 = v885;
      v345 = (uint64_t *)&v343[*(int *)(v885 + 28)];
      uint64_t *v345 = v339;
      v345[1] = v340;
      *(void *)&v343[*(int *)(v344 + 32)] = v337;
      *(void *)&v343[*(int *)(v344 + 36)] = v341;
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v898;
    case 0xDu:
      v346 = (void *)*v84;
      uint64_t v347 = v899[15];
      if (!*(void *)(v347 + 16)) {
        goto LABEL_278;
      }
      uint64_t v349 = v346[2];
      uint64_t v348 = v346[3];
      swift_bridgeObjectRetain();
      unint64_t v350 = sub_1BFEF2D8C(v349, v348);
      if ((v351 & 1) == 0) {
        goto LABEL_277;
      }
      uint64_t v352 = *(void *)(*(void *)(v347 + 56) + 8 * v350);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v353 = v899[3];
      if (*(void *)(v353 + 16))
      {
        uint64_t v355 = v346[2];
        uint64_t v354 = v346[3];
        swift_bridgeObjectRetain();
        unint64_t v356 = sub_1BFEF2D8C(v355, v354);
        if (v357)
        {
          *(void *)&long long v893 = *(void *)(*(void *)(v353 + 56) + 8 * v356);
          uint64_t v358 = v893;
          swift_unknownObjectRetain();
          uint64_t v359 = swift_bridgeObjectRelease();
          MEMORY[0x1F4188790](v359);
          v841[0] = v358;
          v841[1] = (uint64_t)v346;
          v842 = v899;
          type metadata accessor for SportsBracketDataVisualization();
          v360 = v844;
          uint64_t v361 = v850;
          sub_1C151938C();
          v362 = *(void (**)(char *, char *, uint64_t))(v847 + 32);
          v889 = (void *)v352;
          v363 = v845;
          v362(v845, v360, v361);
          type metadata accessor for SportsBracketGroupDataVisualization();
          v364 = (char *)swift_allocObject();
          v362(&v364[OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations], v363, v361);
          sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
          uint64_t v365 = type metadata accessor for FormatContentSlotItemResolution();
          uint64_t v366 = *(void *)(v365 - 8);
          v888 = (int *)(v365 - 8);
          unint64_t v367 = (*(unsigned __int8 *)(v366 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v366 + 80);
          uint64_t v368 = swift_allocObject();
          *(void *)&long long v898 = v368;
          *(_OWORD *)(v368 + 16) = xmmword_1C1529AE0;
          v887 = (int *)(v368 + v367);
          uint64_t v369 = swift_allocObject();
          *(void *)(v369 + 16) = v364;
          v879 = (void *)(v369 | 0x4000000000000000);
          v886 = v364;
          swift_retain_n();
          sub_1C151939C();
          uint64_t v370 = v891;
          v878 = *(char **)(v891 + 16);
          ((void (*)(uint64_t, void, uint64_t))v878)(v884, v902 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, v890);
          swift_release();
          swift_release();
          strcpy((char *)&v902, "bracket::");
          WORD5(v902) = 0;
          HIDWORD(v902) = -385875968;
          swift_retain();
          v371 = v851;
          sub_1C151938C();
          uint64_t v885 = 0;
          sub_1C0655634();
          uint64_t v372 = v853;
          sub_1C151E55C();
          (*(void (**)(char *, uint64_t))(v852 + 8))(v371, v372);
          sub_1C151E80C();
          swift_release();
          swift_bridgeObjectRelease();
          long long v373 = v902;
          v877 = *(uint64_t **)(v370 + 56);
          uint64_t v374 = (uint64_t)v882;
          uint64_t v375 = v890;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v877)(v882, 1, 1, v890);
          v376 = v892;
          v377 = v880;
          uint64_t v378 = v884;
          ((void (*)(char *, uint64_t, uint64_t))v878)(&v880[v892[5]], v884, v375);
          _OWORD *v377 = v373;
          sub_1BFE33F20(v374, (uint64_t)v377 + v376[6], (uint64_t (*)(void))sub_1BFF00BEC);
          *(void *)((char *)v377 + v376[7]) = 0;
          v379 = (void *)((char *)v377 + v376[8]);
          void *v379 = 0;
          v379[1] = 0;
          v380 = (void *)((char *)v377 + v376[9]);
          void *v380 = 0;
          v380[1] = 0;
          *(void *)((char *)v377 + v376[10]) = 0;
          *(void *)((char *)v377 + v376[11]) = MEMORY[0x1E4FBC870];
          sub_1BFE38E08(v374, (uint64_t (*)(void))sub_1BFF00BEC);
          uint64_t v381 = v375;
          (*(void (**)(uint64_t, uint64_t))(v891 + 8))(v378, v375);
          *(void *)((char *)v377 + v376[12]) = MEMORY[0x1E4FBC860];
          v382 = v881;
          sub_1BFE35B2C((uint64_t)v377, (uint64_t)v881, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
          uint64_t v383 = v382[1];
          uint64_t v384 = (uint64_t)v854;
          void *v854 = *v382;
          *(void *)(v384 + 8) = v383;
          v385 = (int *)v883;
          sub_1BFE33F20((uint64_t)v382, v384 + *(int *)(v883 + 20), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
          v386 = v877;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v877)(v374, 1, 1, v381);
          sub_1BFF2E634(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
          swift_allocObject();
          swift_bridgeObjectRetain();
          *(void *)(v384 + v385[6]) = sub_1C151908C();
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v386)(v374, 1, 1, v890);
          swift_allocObject();
          uint64_t v387 = sub_1C151908C();
          sub_1BFE38E08((uint64_t)v382, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
          *(void *)(v384 + v385[7]) = v387;
          uint64_t v388 = v384 + v385[9];
          sub_1BFF2E634(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v389 - 8) + 56))(v388, 1, 1, v389);
          v390 = (void *)(v384 + v385[8]);
          void *v390 = v879;
          uint64_t v391 = type metadata accessor for WebEmbedDataVisualization();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v391 - 8) + 56))(v390, 0, 1, v391);
          swift_storeEnumTagMultiPayload();
          swift_beginAccess();
          uint64_t v392 = v346[6];
          uint64_t v393 = swift_beginAccess();
          uint64_t v394 = v346[7];
          MEMORY[0x1F4188790](v393);
          v842 = v899;
          uint64_t v395 = v897;
          uint64_t v396 = v896;
          sub_1BFDB3920(v897);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v397 = sub_1C144A384((void (*)(uint64_t *__return_ptr, void *))sub_1C0655774, (uint64_t)v841, v394);
          swift_bridgeObjectRelease();
          uint64_t v398 = (uint64_t)v887;
          sub_1BFE35B2C(v384, (uint64_t)v887, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          v399 = v888;
          v400 = (uint64_t *)(v398 + v888[7]);
          uint64_t *v400 = v395;
          v400[1] = v396;
          *(void *)(v398 + v399[8]) = v392;
          *(void *)(v398 + v399[9]) = v397;
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_247;
        }
LABEL_276:
        swift_release();
LABEL_277:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_237:
        swift_release();
      }
      goto LABEL_278;
    case 0xEu:
      uint64_t v401 = *v84;
      uint64_t v402 = v899[16];
      if (!*(void *)(v402 + 16)) {
        goto LABEL_278;
      }
      uint64_t v403 = *(void *)(v401 + 16);
      uint64_t v404 = *(void *)(v401 + 24);
      swift_bridgeObjectRetain();
      unint64_t v405 = sub_1BFEF2D8C(v403, v404);
      if ((v406 & 1) == 0) {
        goto LABEL_181;
      }
      uint64_t v407 = *(void *)(*(void *)(v402 + 56) + 8 * v405);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      v879 = (void *)type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v408 = (*(unsigned __int8 *)(*(v879 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(v879 - 1) + 80);
      uint64_t v409 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v409 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v409;
      v877 = (uint64_t *)(v409 + v408);
      uint64_t v410 = swift_allocObject();
      *(void *)(v410 + 16) = v407;
      v888 = (int *)(v410 | 0x6000000000000000);
      uint64_t v411 = v891;
      v889 = (void *)v401;
      v412 = *(void (**)(uint64_t, uint64_t))(v891 + 16);
      uint64_t v413 = v884;
      uint64_t v414 = v890;
      v412(v884, v407 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl);
      strcpy((char *)&v902, "boxScore::");
      BYTE11(v902) = 0;
      HIDWORD(v902) = -369098752;
      uint64_t v885 = v407;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      long long v415 = v902;
      v886 = *(void **)(v411 + 56);
      v887 = (int *)(v411 + 56);
      uint64_t v416 = (uint64_t)v882;
      uint64_t v417 = v414;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v886)(v882, 1, 1, v414);
      v418 = v892;
      v419 = v880;
      ((void (*)(char *, uint64_t, uint64_t))v412)(&v880[v892[5]], v413, v417);
      _OWORD *v419 = v415;
      sub_1BFE33F20(v416, (uint64_t)v419 + v418[6], (uint64_t (*)(void))sub_1BFF00BEC);
      *(void *)((char *)v419 + v418[7]) = 0;
      v420 = (void *)((char *)v419 + v418[8]);
      void *v420 = 0;
      v420[1] = 0;
      v421 = (void *)((char *)v419 + v418[9]);
      void *v421 = 0;
      v421[1] = 0;
      *(void *)((char *)v419 + v418[10]) = 0;
      *(void *)((char *)v419 + v418[11]) = MEMORY[0x1E4FBC870];
      sub_1BFE38E08(v416, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v411 + 8))(v413, v417);
      *(void *)((char *)v419 + v418[12]) = MEMORY[0x1E4FBC860];
      v422 = v881;
      sub_1BFE35B2C((uint64_t)v419, (uint64_t)v881, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v423 = v422[1];
      uint64_t v424 = (uint64_t)v878;
      *(void *)v878 = *v422;
      *(void *)(v424 + 8) = v423;
      v425 = (int *)v883;
      sub_1BFE33F20((uint64_t)v422, v424 + *(int *)(v883 + 20), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      v426 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v886;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v886)(v416, 1, 1, v417);
      sub_1BFF2E634(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain();
      *(void *)(v424 + v425[6]) = sub_1C151908C();
      v426(v416, 1, 1, v417);
      swift_allocObject();
      uint64_t v427 = sub_1C151908C();
      sub_1BFE38E08((uint64_t)v422, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      *(void *)(v424 + v425[7]) = v427;
      uint64_t v428 = v424 + v425[9];
      sub_1BFF2E634(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v429 - 8) + 56))(v428, 1, 1, v429);
      uint64_t v430 = (uint64_t)v889;
      v431 = (int **)(v424 + v425[8]);
      *v431 = v888;
      uint64_t v432 = type metadata accessor for WebEmbedDataVisualization();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v432 - 8) + 56))(v431, 0, 1, v432);
      sub_1BFE35B2C(v424, v860, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      uint64_t v433 = *(void *)(v430 + 48);
      swift_beginAccess();
      uint64_t v434 = *(void *)(v430 + 56);
      uint64_t v901 = MEMORY[0x1E4FBC860];
      uint64_t v435 = *(void *)(v434 + 16);
      if (v435)
      {
        sub_1BFDB3920(v897);
        uint64_t v895 = v433;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v892 = (int *)v434;
        v436 = (uint64_t *)(v434 + 48);
        while (1)
        {
          uint64_t v443 = *(v436 - 2);
          uint64_t v444 = *(v436 - 1);
          uint64_t v445 = *v436;
          if ((~*v436 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v437 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v438 = (*(unsigned __int8 *)(*(void *)v437 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v437 + 80);
            uint64_t v439 = swift_allocObject();
            *(_OWORD *)(v439 + 16) = v893;
            v440 = (uint64_t *)(v439 + v438);
            uint64_t *v440 = v443;
            v440[1] = v444;
            v440[2] = v445;
            v440[3] = 1;
            unint64_t v441 = v439 + v438 + v437[9];
            uint64_t v442 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v442 - 8) + 56))(v441, 1, 1, v442);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v446 = v899[9];
            if (!*(void *)(v446 + 16)) {
              goto LABEL_101;
            }
            swift_bridgeObjectRetain();
            unint64_t v447 = sub_1BFEF2D8C(v443, v444);
            if ((v448 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_101:
              uint64_t v439 = MEMORY[0x1E4FBC860];
              goto LABEL_95;
            }
            uint64_t v439 = *(void *)(*(void *)(v446 + 56) + (v447 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_95:
          v436 += 3;
          sub_1BFDC11A4(v445);
          sub_1BFEDB748(v439);
          if (!--v435)
          {
            swift_bridgeObjectRelease();
            uint64_t v715 = v901;
            uint64_t v716 = v896;
            uint64_t v717 = v897;
            v718 = (int *)v879;
            v719 = (char *)v877;
            uint64_t v433 = v895;
            goto LABEL_239;
          }
        }
      }
      uint64_t v717 = v897;
      uint64_t v716 = v896;
      sub_1BFDB3920(v897);
      swift_bridgeObjectRetain();
      uint64_t v715 = MEMORY[0x1E4FBC860];
      v718 = (int *)v879;
      v719 = (char *)v877;
LABEL_239:
      v763 = &v892;
      goto LABEL_246;
    case 0xFu:
      uint64_t v449 = *v84;
      uint64_t v450 = v899[17];
      if (!*(void *)(v450 + 16)) {
        goto LABEL_278;
      }
      uint64_t v451 = *(void *)(v449 + 16);
      uint64_t v452 = *(void *)(v449 + 24);
      swift_bridgeObjectRetain();
      unint64_t v453 = sub_1BFEF2D8C(v451, v452);
      if ((v454 & 1) == 0) {
        goto LABEL_181;
      }
      uint64_t v455 = *(void *)(*(void *)(v450 + 56) + 8 * v453);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      v879 = (void *)type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v456 = (*(unsigned __int8 *)(*(v879 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(v879 - 1) + 80);
      uint64_t v457 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v457 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v457;
      v877 = (uint64_t *)(v457 + v456);
      uint64_t v458 = swift_allocObject();
      *(void *)(v458 + 16) = v455;
      v888 = (int *)(v458 | 0x8000000000000000);
      uint64_t v459 = v891;
      v889 = (void *)v449;
      v460 = *(void (**)(uint64_t, uint64_t))(v891 + 16);
      uint64_t v461 = v884;
      uint64_t v462 = v890;
      v460(v884, v455 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl);
      strcpy((char *)&v902, "lineScore::");
      HIDWORD(v902) = -352321536;
      uint64_t v885 = v455;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      long long v463 = v902;
      v886 = *(void **)(v459 + 56);
      v887 = (int *)(v459 + 56);
      uint64_t v464 = (uint64_t)v882;
      uint64_t v465 = v462;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v886)(v882, 1, 1, v462);
      v466 = v892;
      v467 = v880;
      ((void (*)(char *, uint64_t, uint64_t))v460)(&v880[v892[5]], v461, v465);
      _OWORD *v467 = v463;
      sub_1BFE33F20(v464, (uint64_t)v467 + v466[6], (uint64_t (*)(void))sub_1BFF00BEC);
      *(void *)((char *)v467 + v466[7]) = 0;
      v468 = (void *)((char *)v467 + v466[8]);
      void *v468 = 0;
      v468[1] = 0;
      v469 = (void *)((char *)v467 + v466[9]);
      void *v469 = 0;
      v469[1] = 0;
      *(void *)((char *)v467 + v466[10]) = 0;
      *(void *)((char *)v467 + v466[11]) = MEMORY[0x1E4FBC870];
      sub_1BFE38E08(v464, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v459 + 8))(v461, v465);
      *(void *)((char *)v467 + v466[12]) = MEMORY[0x1E4FBC860];
      v470 = v881;
      sub_1BFE35B2C((uint64_t)v467, (uint64_t)v881, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v471 = v470[1];
      uint64_t v472 = (uint64_t)v878;
      *(void *)v878 = *v470;
      *(void *)(v472 + 8) = v471;
      v473 = (int *)v883;
      sub_1BFE33F20((uint64_t)v470, v472 + *(int *)(v883 + 20), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      v474 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v886;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v886)(v464, 1, 1, v465);
      sub_1BFF2E634(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain();
      *(void *)(v472 + v473[6]) = sub_1C151908C();
      v474(v464, 1, 1, v465);
      swift_allocObject();
      uint64_t v475 = sub_1C151908C();
      sub_1BFE38E08((uint64_t)v470, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      *(void *)(v472 + v473[7]) = v475;
      uint64_t v476 = v472 + v473[9];
      sub_1BFF2E634(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v477 - 8) + 56))(v476, 1, 1, v477);
      uint64_t v478 = (uint64_t)v889;
      v479 = (int **)(v472 + v473[8]);
      *v479 = v888;
      uint64_t v480 = type metadata accessor for WebEmbedDataVisualization();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v480 - 8) + 56))(v479, 0, 1, v480);
      sub_1BFE35B2C(v472, v861, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      uint64_t v433 = *(void *)(v478 + 48);
      swift_beginAccess();
      uint64_t v481 = *(void *)(v478 + 56);
      uint64_t v901 = MEMORY[0x1E4FBC860];
      uint64_t v482 = *(void *)(v481 + 16);
      if (v482)
      {
        sub_1BFDB3920(v897);
        uint64_t v895 = v433;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v892 = (int *)v481;
        v483 = (uint64_t *)(v481 + 48);
        while (1)
        {
          uint64_t v490 = *(v483 - 2);
          uint64_t v491 = *(v483 - 1);
          uint64_t v492 = *v483;
          if ((~*v483 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v484 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v485 = (*(unsigned __int8 *)(*(void *)v484 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v484 + 80);
            uint64_t v486 = swift_allocObject();
            *(_OWORD *)(v486 + 16) = v893;
            v487 = (uint64_t *)(v486 + v485);
            uint64_t *v487 = v490;
            v487[1] = v491;
            v487[2] = v492;
            v487[3] = 1;
            unint64_t v488 = v486 + v485 + v484[9];
            uint64_t v489 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v489 - 8) + 56))(v488, 1, 1, v489);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v493 = v899[9];
            if (!*(void *)(v493 + 16)) {
              goto LABEL_113;
            }
            swift_bridgeObjectRetain();
            unint64_t v494 = sub_1BFEF2D8C(v490, v491);
            if ((v495 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_113:
              uint64_t v486 = MEMORY[0x1E4FBC860];
              goto LABEL_107;
            }
            uint64_t v486 = *(void *)(*(void *)(v493 + 56) + (v494 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_107:
          v483 += 3;
          sub_1BFDC11A4(v492);
          sub_1BFEDB748(v486);
          if (!--v482)
          {
            swift_bridgeObjectRelease();
            uint64_t v715 = v901;
            uint64_t v716 = v896;
            uint64_t v717 = v897;
            v718 = (int *)v879;
            v719 = (char *)v877;
            uint64_t v433 = v895;
            goto LABEL_241;
          }
        }
      }
      uint64_t v717 = v897;
      uint64_t v716 = v896;
      sub_1BFDB3920(v897);
      swift_bridgeObjectRetain();
      uint64_t v715 = MEMORY[0x1E4FBC860];
      v718 = (int *)v879;
      v719 = (char *)v877;
LABEL_241:
      v763 = (int **)&v893;
      goto LABEL_246;
    case 0x10u:
      uint64_t v496 = *v84;
      uint64_t v497 = v899[18];
      if (!*(void *)(v497 + 16)) {
        goto LABEL_278;
      }
      uint64_t v498 = *(void *)(v496 + 16);
      uint64_t v499 = *(void *)(v496 + 24);
      swift_bridgeObjectRetain();
      unint64_t v500 = sub_1BFEF2D8C(v498, v499);
      if ((v501 & 1) == 0) {
        goto LABEL_181;
      }
      uint64_t v502 = *(void *)(*(void *)(v497 + 56) + 8 * v500);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
      v879 = (void *)type metadata accessor for FormatContentSlotItemResolution();
      unint64_t v503 = (*(unsigned __int8 *)(*(v879 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(v879 - 1) + 80);
      uint64_t v504 = swift_allocObject();
      long long v893 = xmmword_1C1529AE0;
      *(_OWORD *)(v504 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v898 = v504;
      v877 = (uint64_t *)(v504 + v503);
      uint64_t v505 = swift_allocObject();
      *(void *)(v505 + 16) = v502;
      v888 = (int *)(v505 | 0xA000000000000000);
      uint64_t v506 = v891;
      v889 = (void *)v496;
      v886 = *(void **)(v891 + 16);
      uint64_t v507 = v884;
      uint64_t v508 = v890;
      ((void (*)(uint64_t, uint64_t, uint64_t))v886)(v884, v502 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl, v890);
      *(void *)&long long v902 = 0;
      *((void *)&v902 + 1) = 0xE000000000000000;
      swift_retain_n();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)&v902, "injuryReport::");
      HIBYTE(v902) = -18;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      uint64_t v885 = v502;
      swift_release();
      swift_bridgeObjectRelease();
      long long v509 = v902;
      v887 = *(int **)(v506 + 56);
      uint64_t v510 = (uint64_t)v882;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v887)(v882, 1, 1, v508);
      v511 = v892;
      v512 = v880;
      ((void (*)(char *, uint64_t, uint64_t))v886)(&v880[v892[5]], v507, v508);
      _OWORD *v512 = v509;
      sub_1BFE33F20(v510, (uint64_t)v512 + v511[6], (uint64_t (*)(void))sub_1BFF00BEC);
      *(void *)((char *)v512 + v511[7]) = 0;
      v513 = (void *)((char *)v512 + v511[8]);
      void *v513 = 0;
      v513[1] = 0;
      v514 = (void *)((char *)v512 + v511[9]);
      void *v514 = 0;
      v514[1] = 0;
      *(void *)((char *)v512 + v511[10]) = 0;
      *(void *)((char *)v512 + v511[11]) = MEMORY[0x1E4FBC870];
      sub_1BFE38E08(v510, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v506 + 8))(v507, v508);
      *(void *)((char *)v512 + v511[12]) = MEMORY[0x1E4FBC860];
      v515 = v881;
      sub_1BFE35B2C((uint64_t)v512, (uint64_t)v881, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v516 = v515[1];
      uint64_t v517 = (uint64_t)v878;
      *(void *)v878 = *v515;
      *(void *)(v517 + 8) = v516;
      v518 = (int *)v883;
      sub_1BFE33F20((uint64_t)v515, v517 + *(int *)(v883 + 20), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      v519 = v887;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v887)(v510, 1, 1, v508);
      sub_1BFF2E634(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_bridgeObjectRetain();
      *(void *)(v517 + v518[6]) = sub_1C151908C();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v519)(v510, 1, 1, v508);
      swift_allocObject();
      uint64_t v520 = sub_1C151908C();
      sub_1BFE38E08((uint64_t)v515, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      *(void *)(v517 + v518[7]) = v520;
      uint64_t v521 = v517 + v518[9];
      sub_1BFF2E634(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v522 - 8) + 56))(v521, 1, 1, v522);
      uint64_t v523 = (uint64_t)v889;
      v524 = (int **)(v517 + v518[8]);
      *v524 = v888;
      uint64_t v525 = type metadata accessor for WebEmbedDataVisualization();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v525 - 8) + 56))(v524, 0, 1, v525);
      sub_1BFE35B2C(v517, v863, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      uint64_t v433 = *(void *)(v523 + 48);
      swift_beginAccess();
      uint64_t v526 = *(void *)(v523 + 56);
      uint64_t v901 = MEMORY[0x1E4FBC860];
      uint64_t v527 = *(void *)(v526 + 16);
      if (v527)
      {
        sub_1BFDB3920(v897);
        uint64_t v895 = v433;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v892 = (int *)v526;
        v528 = (uint64_t *)(v526 + 48);
        while (1)
        {
          uint64_t v535 = *(v528 - 2);
          uint64_t v536 = *(v528 - 1);
          uint64_t v537 = *v528;
          if ((~*v528 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v529 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v530 = (*(unsigned __int8 *)(*(void *)v529 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v529 + 80);
            uint64_t v531 = swift_allocObject();
            *(_OWORD *)(v531 + 16) = v893;
            v532 = (uint64_t *)(v531 + v530);
            uint64_t *v532 = v535;
            v532[1] = v536;
            v532[2] = v537;
            v532[3] = 1;
            unint64_t v533 = v531 + v530 + v529[9];
            uint64_t v534 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v534 - 8) + 56))(v533, 1, 1, v534);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v538 = v899[9];
            if (!*(void *)(v538 + 16)) {
              goto LABEL_125;
            }
            swift_bridgeObjectRetain();
            unint64_t v539 = sub_1BFEF2D8C(v535, v536);
            if ((v540 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_125:
              uint64_t v531 = MEMORY[0x1E4FBC860];
              goto LABEL_119;
            }
            uint64_t v531 = *(void *)(*(void *)(v538 + 56) + (v539 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_119:
          v528 += 3;
          sub_1BFDC11A4(v537);
          sub_1BFEDB748(v531);
          if (!--v527)
          {
            swift_bridgeObjectRelease();
            uint64_t v715 = v901;
            uint64_t v716 = v896;
            uint64_t v717 = v897;
            v718 = (int *)v879;
            v719 = (char *)v877;
            uint64_t v433 = v895;
            goto LABEL_243;
          }
        }
      }
      uint64_t v717 = v897;
      uint64_t v716 = v896;
      sub_1BFDB3920(v897);
      swift_bridgeObjectRetain();
      uint64_t v715 = MEMORY[0x1E4FBC860];
      v718 = (int *)v879;
      v719 = (char *)v877;
LABEL_243:
      v763 = (int **)&v894;
LABEL_246:
      sub_1BFE35B2C((uint64_t)*(v763 - 32), (uint64_t)v719, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      v764 = (uint64_t *)&v719[v718[5]];
      uint64_t *v764 = v717;
      v764[1] = v716;
      *(void *)&v719[v718[6]] = v433;
      *(void *)&v719[v718[7]] = v715;
      swift_release();
      goto LABEL_247;
    case 0x11u:
      uint64_t v541 = *v84;
      uint64_t v542 = v899[19];
      if (!*(void *)(v542 + 16)) {
        goto LABEL_278;
      }
      uint64_t v543 = *(void *)(v541 + 16);
      uint64_t v544 = *(void *)(v541 + 24);
      swift_bridgeObjectRetain();
      unint64_t v545 = sub_1BFEF2D8C(v543, v544);
      if (v546)
      {
        uint64_t v547 = *(void *)(*(void *)(v542 + 56) + 8 * v545);
        swift_retain();
        swift_bridgeObjectRelease();
        sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
        v879 = (void *)type metadata accessor for FormatContentSlotItemResolution();
        unint64_t v548 = (*(unsigned __int8 *)(*(v879 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(v879 - 1) + 80);
        uint64_t v549 = swift_allocObject();
        long long v893 = xmmword_1C1529AE0;
        *(_OWORD *)(v549 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v898 = v549;
        v877 = (uint64_t *)(v549 + v548);
        uint64_t v550 = swift_allocObject();
        *(void *)(v550 + 16) = v547;
        v888 = (int *)(v550 | 0xC000000000000000);
        uint64_t v551 = v891;
        v889 = (void *)v541;
        v552 = *(void (**)(uint64_t, uint64_t))(v891 + 16);
        uint64_t v553 = v884;
        uint64_t v554 = v890;
        v552(v884, v547 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl);
        strcpy((char *)&v902, "keyPlayer::");
        HIDWORD(v902) = -352321536;
        uint64_t v885 = v547;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        long long v555 = v902;
        v886 = *(void **)(v551 + 56);
        v887 = (int *)(v551 + 56);
        uint64_t v556 = (uint64_t)v882;
        uint64_t v557 = v554;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v886)(v882, 1, 1, v554);
        v558 = v892;
        v559 = v880;
        ((void (*)(char *, uint64_t, uint64_t))v552)(&v880[v892[5]], v553, v557);
        _OWORD *v559 = v555;
        sub_1BFE33F20(v556, (uint64_t)v559 + v558[6], (uint64_t (*)(void))sub_1BFF00BEC);
        *(void *)((char *)v559 + v558[7]) = 0;
        v560 = (void *)((char *)v559 + v558[8]);
        void *v560 = 0;
        v560[1] = 0;
        v561 = (void *)((char *)v559 + v558[9]);
        void *v561 = 0;
        v561[1] = 0;
        *(void *)((char *)v559 + v558[10]) = 0;
        *(void *)((char *)v559 + v558[11]) = MEMORY[0x1E4FBC870];
        sub_1BFE38E08(v556, (uint64_t (*)(void))sub_1BFF00BEC);
        (*(void (**)(uint64_t, uint64_t))(v551 + 8))(v553, v557);
        *(void *)((char *)v559 + v558[12]) = MEMORY[0x1E4FBC860];
        v562 = v881;
        sub_1BFE35B2C((uint64_t)v559, (uint64_t)v881, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
        uint64_t v563 = v562[1];
        uint64_t v564 = (uint64_t)v878;
        *(void *)v878 = *v562;
        *(void *)(v564 + 8) = v563;
        v565 = (int *)v883;
        sub_1BFE33F20((uint64_t)v562, v564 + *(int *)(v883 + 20), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
        v566 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v886;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v886)(v556, 1, 1, v557);
        sub_1BFF2E634(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        swift_bridgeObjectRetain();
        *(void *)(v564 + v565[6]) = sub_1C151908C();
        v566(v556, 1, 1, v557);
        swift_allocObject();
        uint64_t v567 = sub_1C151908C();
        sub_1BFE38E08((uint64_t)v562, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
        *(void *)(v564 + v565[7]) = v567;
        uint64_t v568 = v564 + v565[9];
        sub_1BFF2E634(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v569 - 8) + 56))(v568, 1, 1, v569);
        uint64_t v570 = (uint64_t)v889;
        v571 = (int **)(v564 + v565[8]);
        *v571 = v888;
        uint64_t v572 = type metadata accessor for WebEmbedDataVisualization();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v572 - 8) + 56))(v571, 0, 1, v572);
        sub_1BFE35B2C(v564, v862, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        uint64_t v433 = *(void *)(v570 + 48);
        swift_beginAccess();
        uint64_t v573 = *(void *)(v570 + 56);
        uint64_t v901 = MEMORY[0x1E4FBC860];
        uint64_t v574 = *(void *)(v573 + 16);
        if (!v574)
        {
          uint64_t v717 = v897;
          uint64_t v716 = v896;
          sub_1BFDB3920(v897);
          swift_bridgeObjectRetain();
          uint64_t v715 = MEMORY[0x1E4FBC860];
          v718 = (int *)v879;
          v719 = (char *)v877;
          goto LABEL_245;
        }
        sub_1BFDB3920(v897);
        uint64_t v895 = v433;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v892 = (int *)v573;
        v575 = (uint64_t *)(v573 + 48);
        while (1)
        {
          uint64_t v582 = *(v575 - 2);
          uint64_t v583 = *(v575 - 1);
          uint64_t v584 = *v575;
          if ((~*v575 & 0xF000000000000007) != 0)
          {
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v576 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v577 = (*(unsigned __int8 *)(*(void *)v576 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v576 + 80);
            uint64_t v578 = swift_allocObject();
            *(_OWORD *)(v578 + 16) = v893;
            v579 = (uint64_t *)(v578 + v577);
            uint64_t *v579 = v582;
            v579[1] = v583;
            v579[2] = v584;
            v579[3] = 1;
            unint64_t v580 = v578 + v577 + v576[9];
            uint64_t v581 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v581 - 8) + 56))(v580, 1, 1, v581);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v585 = v899[9];
            if (!*(void *)(v585 + 16)) {
              goto LABEL_137;
            }
            swift_bridgeObjectRetain();
            unint64_t v586 = sub_1BFEF2D8C(v582, v583);
            if ((v587 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_137:
              uint64_t v578 = MEMORY[0x1E4FBC860];
              goto LABEL_131;
            }
            uint64_t v578 = *(void *)(*(void *)(v585 + 56) + (v586 << 6) + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_131:
          v575 += 3;
          sub_1BFDC11A4(v584);
          sub_1BFEDB748(v578);
          if (!--v574)
          {
            swift_bridgeObjectRelease();
            uint64_t v715 = v901;
            uint64_t v716 = v896;
            uint64_t v717 = v897;
            v718 = (int *)v879;
            v719 = (char *)v877;
            uint64_t v433 = v895;
LABEL_245:
            v763 = (int **)&v893 + 1;
            goto LABEL_246;
          }
        }
      }
LABEL_181:
      swift_bridgeObjectRelease();
LABEL_278:
      swift_release();
      return MEMORY[0x1E4FBC860];
    default:
      uint64_t v85 = *v84;
      uint64_t v86 = *(void *)(*v84 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      uint64_t v87 = *v899;
      swift_retain_n();
      uint64_t v88 = v85;
      if (*(void *)(v87 + 16)) {
        goto LABEL_3;
      }
LABEL_6:
      swift_retain();
      swift_release();
      if (v86)
      {
        while (1)
        {
          uint64_t v88 = v86;
          uint64_t v86 = *(void *)(v86 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
          if (!*(void *)(v87 + 16)) {
            goto LABEL_6;
          }
LABEL_3:
          uint64_t v90 = *(void *)(v88 + 16);
          uint64_t v89 = *(void *)(v88 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v91 = sub_1BFEF2D8C(v90, v89);
          if (v92) {
            break;
          }
          swift_release();
          swift_bridgeObjectRelease();
          if (!v86) {
            goto LABEL_143;
          }
        }
        v887 = (int *)v85;
        v631 = *(void **)(*(void *)(v87 + 56) + 8 * v91);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BFF2E634(0, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBBE00]);
        uint64_t v632 = type metadata accessor for FormatContentSlotItemResolution();
        unint64_t v633 = (*(unsigned __int8 *)(*(void *)(v632 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v632 - 8) + 80);
        uint64_t v634 = swift_allocObject();
        long long v893 = xmmword_1C1529AE0;
        *(_OWORD *)(v634 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v898 = v634;
        uint64_t v635 = v634 + v633;
        void *v865 = v631;
        swift_storeEnumTagMultiPayload();
        v636 = (uint64_t *)(v88 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
        swift_beginAccess();
        uint64_t v637 = *v636;
        v638 = (uint64_t *)(v88 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
        swift_beginAccess();
        uint64_t v639 = *v638;
        uint64_t v901 = MEMORY[0x1E4FBC860];
        uint64_t v640 = *(void *)(v639 + 16);
        uint64_t v890 = v632;
        v889 = (void *)v635;
        v888 = (int *)v88;
        if (v640)
        {
          v886 = v631;
          swift_unknownObjectRetain();
          sub_1BFDB3920(v897);
          uint64_t v885 = v637;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v884 = v639;
          v641 = (uint64_t *)(v639 + 48);
          while (1)
          {
            uint64_t v650 = *(v641 - 2);
            uint64_t v649 = *(v641 - 1);
            uint64_t v651 = *v641;
            if ((~*v641 & 0xF000000000000007) == 0) {
              break;
            }
            sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
            v642 = (int *)(type metadata accessor for FormatOption() - 8);
            unint64_t v643 = (*(unsigned __int8 *)(*(void *)v642 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v642 + 80);
            uint64_t v644 = swift_allocObject();
            *(_OWORD *)(v644 + 16) = v893;
            v645 = (uint64_t *)(v644 + v643);
            uint64_t *v645 = v650;
            v645[1] = v649;
            v645[2] = v651;
            v645[3] = 1;
            unint64_t v646 = v644 + v643 + v642[9];
            uint64_t v647 = type metadata accessor for FormatVersionRequirement(0);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v647 - 8) + 56))(v646, 1, 1, v647);
            swift_bridgeObjectRetain();
            uint64_t v648 = v651;
LABEL_166:
            v641 += 3;
            sub_1BFDC11A4(v648);
            sub_1BFEDB748(v644);
            if (!--v640)
            {
              swift_bridgeObjectRelease();
              uint64_t v703 = v901;
              uint64_t v704 = v896;
              uint64_t v705 = v897;
              uint64_t v706 = v885;
              goto LABEL_225;
            }
          }
          uint64_t v652 = *v641;
          uint64_t v653 = v899[9];
          if (*(void *)(v653 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v654 = sub_1BFEF2D8C(v650, v649);
            if (v655)
            {
              v656 = (void *)(*(void *)(v653 + 56) + (v654 << 6));
              v657 = (int *)v656[2];
              uint64_t v895 = v656[1];
              v892 = v657;
              uint64_t v891 = v656[4];
              uint64_t v644 = v656[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_173:
              uint64_t v648 = v652;
              goto LABEL_166;
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v644 = MEMORY[0x1E4FBC860];
          goto LABEL_173;
        }
        swift_unknownObjectRetain();
        uint64_t v705 = v897;
        uint64_t v704 = v896;
        sub_1BFDB3920(v897);
        swift_bridgeObjectRetain();
        uint64_t v703 = MEMORY[0x1E4FBC860];
        uint64_t v706 = v637;
LABEL_225:
        uint64_t v755 = (uint64_t)v889;
        sub_1BFE35B2C((uint64_t)v865, (uint64_t)v889, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        uint64_t v756 = v890;
        v757 = (uint64_t *)(v755 + *(int *)(v890 + 20));
        uint64_t *v757 = v705;
        v757[1] = v704;
        *(void *)(v755 + *(int *)(v756 + 24)) = v706;
        *(void *)(v755 + *(int *)(v756 + 28)) = v703;
        swift_release();
        swift_release_n();
        swift_unknownObjectRelease();
LABEL_247:
        swift_release();
        return v898;
      }
      else
      {
LABEL_143:
        swift_release_n();
        return MEMORY[0x1E4FBC860];
      }
  }
}

uint64_t sub_1C06514E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 28));
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  uint64_t v5 = *a2;
  swift_retain_n();
  uint64_t v6 = v3;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v8 = *(void *)(v6 + 16);
    uint64_t v7 = *(void *)(v6 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1BFEF2D8C(v8, v7);
    if (v10) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (!v4)
    {
LABEL_10:
      swift_release_n();
      return 0;
    }
    while (1)
    {
      uint64_t v6 = v4;
      uint64_t v4 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      if (*(void *)(v5 + 16)) {
        break;
      }
LABEL_6:
      swift_retain();
      swift_release();
      if (!v4) {
        goto LABEL_10;
      }
    }
  }
  uint64_t v11 = *(void *)(*(void *)(v5 + 56) + 8 * v9);
  swift_unknownObjectRetain();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  return v11;
}

int *sub_1C065168C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE33F20(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  uint64_t v9 = a2[5];
  uint64_t v10 = FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(void *)(v9 + 16) && (unint64_t v12 = sub_1BFEF2D8C(v10, v11), (v13 & 1) != 0))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v12);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = a2[4];
  uint64_t v18 = FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(void *)(v17 + 16) && (unint64_t v20 = sub_1BFEF2D8C(v18, v19), (v21 & 1) != 0))
  {
    uint64_t v22 = *(void *)(*(void *)(v17 + 56) + 8 * v20);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = a2[3];
  uint64_t v24 = FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(void *)(v23 + 16) && (unint64_t v26 = sub_1BFEF2D8C(v24, v25), (v27 & 1) != 0))
  {
    uint64_t v28 = *(void *)(*(void *)(v23 + 56) + 8 * v26);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  sub_1BFE35B2C((uint64_t)v8, a3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  unint64_t result = (int *)type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v30 = (void *)(a3 + result[5]);
  *uint64_t v30 = v15;
  v30[1] = v16;
  *(void *)(a3 + result[6]) = v22;
  *(void *)(a3 + result[7]) = v28;
  return result;
}

uint64_t sub_1C0651878@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  if ((~v6 & 0xF000000000000007) != 0)
  {
    sub_1BFF2E634(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (int *)(type metadata accessor for FormatOption() - 8);
    unint64_t v12 = (*(unsigned __int8 *)(*(void *)v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v11 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    char v13 = (uint64_t *)(v10 + v12);
    *char v13 = v5;
    v13[1] = v4;
    void v13[2] = v6;
    v13[3] = 1;
    unint64_t v14 = v10 + v12 + v11[9];
    uint64_t v15 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 72);
  if (!*(void *)(v7 + 16))
  {
LABEL_7:
    uint64_t v10 = MEMORY[0x1E4FBC860];
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(v5, v4);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + (v8 << 6) + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  *a3 = v10;
  return sub_1BFDC11A4(v6);
}

uint64_t FormatContentSlotItemObject.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v69 = type metadata accessor for FormatCustomItem();
  MEMORY[0x1F4188790](v69);
  uint64_t v70 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v73 = v11;
  uint64_t v79 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v68 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v72 = v13;
  sub_1C1520F0C();
  sub_1BFE33F20(v2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v20 = *v10;
      LOBYTE(v78) = 1;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v21 = v71;
      sub_1C152080C();
      if (v21) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v20;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatArticleList();
      uint64_t v18 = (unint64_t *)&unk_1EB86FB88;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatArticleList;
      break;
    case 2u:
      uint64_t v22 = *v10;
      LOBYTE(v78) = 2;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v23 = v71;
      sub_1C152080C();
      if (v23) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v22;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatIssue();
      uint64_t v18 = (unint64_t *)&unk_1EB85FC00;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatIssue;
      break;
    case 3u:
      uint64_t v24 = *v10;
      LOBYTE(v78) = 3;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v25 = v71;
      sub_1C152080C();
      if (v25) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v24;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatTag();
      uint64_t v18 = (unint64_t *)&unk_1EB86AD98;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatTag;
      break;
    case 4u:
      uint64_t v26 = *v10;
      LOBYTE(v78) = 4;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v27 = v71;
      sub_1C152080C();
      if (v27) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v26;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatTagFeed();
      uint64_t v18 = (unint64_t *)&unk_1EA19CD70;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatTagFeed;
      break;
    case 5u:
      sub_1BFE35B2C((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      LOBYTE(v78) = 5;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v29 = v72;
      uint64_t v28 = v73;
      uint64_t v30 = v71;
      sub_1C152080C();
      if (!v30)
      {
        long long v74 = xmmword_1C152C800;
        sub_1BFE35C3C((unint64_t *)&unk_1EB85B7C8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed);
        sub_1C152080C();
      }
      uint64_t v31 = type metadata accessor for FormatWebEmbed;
      uint64_t v32 = (uint64_t)v7;
      goto LABEL_28;
    case 6u:
      uint64_t v33 = *v10;
      LOBYTE(v78) = 6;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v34 = v71;
      sub_1C152080C();
      if (v34) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v33;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatPuzzle();
      uint64_t v18 = (unint64_t *)&unk_1EB865810;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatPuzzle;
      break;
    case 7u:
      uint64_t v35 = *v10;
      LOBYTE(v78) = 7;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v36 = v71;
      sub_1C152080C();
      if (v36) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v35;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatPuzzleType(0);
      uint64_t v18 = &qword_1EB86C5B8;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatPuzzleType;
      break;
    case 8u:
      uint64_t v38 = *v10;
      uint64_t v37 = v10[1];
      uint64_t v39 = v10[2];
      uint64_t v40 = v10[3];
      uint64_t v41 = v10[4];
      LOBYTE(v78) = 8;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v42 = v72;
      uint64_t v43 = v73;
      uint64_t v44 = v71;
      sub_1C152080C();
      if (!v44)
      {
        *(void *)&long long v74 = v38;
        *((void *)&v74 + 1) = v37;
        uint64_t v75 = v39;
        uint64_t v76 = v40;
        uint64_t v77 = v41;
        long long v78 = xmmword_1C152C800;
        sub_1C025BE1C();
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v79 + 8))(v42, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    case 9u:
      uint64_t v46 = *v10;
      uint64_t v45 = v10[1];
      char v47 = *((unsigned char *)v10 + 16);
      LOBYTE(v78) = 9;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v48 = v72;
      uint64_t v49 = v73;
      uint64_t v50 = v71;
      sub_1C152080C();
      if (!v50)
      {
        *(void *)&long long v74 = v46;
        *((void *)&v74 + 1) = v45;
        LOBYTE(v75) = v47;
        long long v78 = xmmword_1C152C800;
        sub_1C065290C();
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v79 + 8))(v48, v49);
      return swift_bridgeObjectRelease();
    case 0xAu:
      uint64_t v52 = v70;
      sub_1BFE35B2C((uint64_t)v10, v70, (uint64_t (*)(void))type metadata accessor for FormatCustomItem);
      LOBYTE(v78) = 10;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v29 = v72;
      uint64_t v28 = v73;
      uint64_t v53 = v71;
      sub_1C152080C();
      if (!v53)
      {
        long long v74 = xmmword_1C152C800;
        sub_1BFE35C3C(&qword_1EB85B870, (void (*)(uint64_t))type metadata accessor for FormatCustomItem);
        sub_1C152080C();
      }
      uint64_t v31 = type metadata accessor for FormatCustomItem;
      uint64_t v32 = v52;
LABEL_28:
      sub_1BFE38E08(v32, (uint64_t (*)(void))v31);
      return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v29, v28);
    case 0xBu:
      uint64_t v54 = *v10;
      LOBYTE(v78) = 11;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v55 = v71;
      sub_1C152080C();
      if (v55) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v54;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatScoreDataVisualization();
      uint64_t v18 = &qword_1EB86BD90;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization;
      break;
    case 0xCu:
      uint64_t v56 = *v10;
      LOBYTE(v78) = 12;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v57 = v71;
      sub_1C152080C();
      if (v57) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v56;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatStandingDataVisualization();
      uint64_t v18 = (unint64_t *)&unk_1EA19CD60;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization;
      break;
    case 0xDu:
      uint64_t v58 = *v10;
      LOBYTE(v78) = 13;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v59 = v71;
      sub_1C152080C();
      if (v59) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v58;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatBracketDataVisualization();
      uint64_t v18 = &qword_1EA19BA30;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatBracketDataVisualization;
      break;
    case 0xEu:
      uint64_t v60 = *v10;
      LOBYTE(v78) = 14;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v61 = v71;
      sub_1C152080C();
      if (v61) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v60;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatBoxScoreDataVisualization();
      uint64_t v18 = (unint64_t *)&unk_1EA19CD50;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization;
      break;
    case 0xFu:
      uint64_t v62 = *v10;
      LOBYTE(v78) = 15;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v63 = v71;
      sub_1C152080C();
      if (v63) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v62;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatLineScoreDataVisualization();
      uint64_t v18 = (unint64_t *)&unk_1EA19CD48;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization;
      break;
    case 0x10u:
      uint64_t v64 = *v10;
      LOBYTE(v78) = 16;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v65 = v71;
      sub_1C152080C();
      if (v65) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v64;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatInjuryReportDataVisualization();
      uint64_t v18 = (unint64_t *)&unk_1EA19CD40;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization;
      break;
    case 0x11u:
      uint64_t v66 = *v10;
      LOBYTE(v78) = 17;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v67 = v71;
      sub_1C152080C();
      if (v67) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v66;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatKeyPlayerDataVisualization();
      uint64_t v18 = (unint64_t *)&unk_1EA19CD38;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization;
      break;
    default:
      uint64_t v14 = *v10;
      LOBYTE(v78) = 0;
      sub_1C06528B8();
      long long v74 = 0uLL;
      uint64_t v15 = v72;
      uint64_t v16 = v73;
      uint64_t v17 = v71;
      sub_1C152080C();
      if (v17) {
        goto LABEL_44;
      }
      *(void *)&long long v78 = v14;
      long long v74 = xmmword_1C152C800;
      type metadata accessor for FormatArticle();
      uint64_t v18 = &qword_1EB85D0F0;
      uint64_t v19 = (void (*)(uint64_t))type metadata accessor for FormatArticle;
      break;
  }
  sub_1BFE35C3C(v18, v19);
  sub_1C152080C();
LABEL_44:
  (*(void (**)(char *, uint64_t))(v79 + 8))(v15, v16);
  return swift_release();
}

unint64_t sub_1C06528B8()
{
  unint64_t result = qword_1EB868120;
  if (!qword_1EB868120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868120);
  }
  return result;
}

unint64_t sub_1C065290C()
{
  unint64_t result = qword_1EB8758C8;
  if (!qword_1EB8758C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8758C8);
  }
  return result;
}

uint64_t sub_1C0652960(char a1)
{
  uint64_t result = 0x656C6369747261;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4C656C6369747261;
      break;
    case 2:
      uint64_t result = 0x6575737369;
      break;
    case 3:
      uint64_t result = 6775156;
      break;
    case 4:
      uint64_t result = 0x64656546676174;
      break;
    case 5:
      uint64_t result = 0x6465626D45626577;
      break;
    case 6:
      uint64_t result = 0x656C7A7A7570;
      break;
    case 7:
      uint64_t result = 0x7954656C7A7A7570;
      break;
    case 8:
      uint64_t result = 0x7453656C7A7A7570;
      break;
    case 9:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 10:
      uint64_t result = 0x6D6F74737563;
      break;
    case 11:
      uint64_t result = 0x65726F6373;
      break;
    case 12:
      uint64_t result = 0x676E69646E617473;
      break;
    case 13:
      uint64_t result = 0x74656B63617262;
      break;
    case 14:
      uint64_t result = 0x65726F6353786F62;
      break;
    case 15:
      uint64_t result = 0x726F6353656E696CLL;
      break;
    case 16:
      uint64_t result = 0x65527972756A6E69;
      break;
    case 17:
      uint64_t result = 0x6579616C5079656BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0652B90(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C0652960(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0652960(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0652C1C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0652960(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0652C80()
{
  sub_1C0652960(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0652CD4()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0652960(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0652D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0652960(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0652D60()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0652DB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSlotItemObject.init(from:)(a1, a2);
}

uint64_t sub_1C0652DCC(void *a1)
{
  return FormatContentSlotItemObject.encode(to:)(a1);
}

uint64_t _s8NewsFeed27FormatContentSlotItemObjectO2eeoiySbAC_ACtFZ_0(uint64_t a1, void **a2)
{
  uint64_t v139 = a1;
  uint64_t v140 = a2;
  uint64_t v2 = type metadata accessor for FormatCustomItem();
  MEMORY[0x1F4188790](v2 - 8);
  char v126 = (uint64_t *)((char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v125 = (uint64_t *)((char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v138);
  unint64_t v132 = (uint64_t *)((char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v137 = (uint64_t *)((char *)&v124 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v131 = (uint64_t *)((char *)&v124 - v10);
  MEMORY[0x1F4188790](v11);
  unint64_t v136 = (uint64_t *)((char *)&v124 - v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v129 = (uint64_t *)((char *)&v124 - v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v135 = (uint64_t *)((char *)&v124 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v134 = (void **)((char *)&v124 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v130 = (uint64_t *)((char *)&v124 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v133 = (uint64_t)&v124 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v128 = (uint64_t *)((char *)&v124 - v24);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (uint64_t *)((char *)&v124 - v26);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (uint64_t *)((char *)&v124 - v29);
  MEMORY[0x1F4188790](v31);
  unint64_t v127 = (uint64_t *)((char *)&v124 - v32);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (uint64_t *)((char *)&v124 - v34);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (uint64_t *)((char *)&v124 - v37);
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (uint64_t *)((char *)&v124 - v40);
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (uint64_t *)((char *)&v124 - v43);
  MEMORY[0x1F4188790](v45);
  char v47 = (uint64_t *)((char *)&v124 - v46);
  sub_1C0655454();
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v50 = (uint64_t *)((char *)&v124 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = (uint64_t)v50 + *(int *)(v51 + 56);
  sub_1BFE33F20(v139, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  uint64_t v53 = (uint64_t)v140;
  uint64_t v140 = (void **)v52;
  sub_1BFE33F20(v53, v52, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v59 = *v44;
      uint64_t v60 = v140;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_47;
      }
      if (*(void *)(v59 + 16) == (*v60)[2] && *(void *)(v59 + 24) == (*v60)[3])
      {
        swift_release();
        swift_release();
        LOBYTE(v57) = 1;
      }
      else
      {
        int v122 = sub_1C1520A9C();
        swift_release();
        swift_release();
        LODWORD(v57) = v122 << 31 >> 31;
      }
      char v118 = type metadata accessor for FormatContentSlotItemObject;
      goto LABEL_50;
    case 2u:
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v61 = (void *)*v41;
      uint64_t v62 = v140;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_47;
      }
      uint64_t v63 = *v62;
      type metadata accessor for FormatIssue();
      uint64_t v57 = v50;
      char v58 = static FormatIssue.== infix(_:_:)(v61, v63);
      goto LABEL_20;
    case 3u:
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v64 = (void *)*v38;
      uint64_t v65 = v140;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_47;
      }
      uint64_t v66 = (char *)v50;
      char v67 = _s8NewsFeed9FormatTagC2eeoiySbAC_ACtFZ_0(v64, *v65);
      goto LABEL_45;
    case 4u:
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v68 = *v35;
      uint64_t v69 = (uint64_t *)v140;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_47;
      }
      uint64_t v66 = (char *)v50;
      char v67 = _s8NewsFeed09FormatTagB0C2eeoiySbAC_ACtFZ_0(v68, *v69);
      goto LABEL_45;
    case 5u:
      uint64_t v70 = v127;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v71 = (uint64_t)v140;
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v72 = v125;
        sub_1BFE35B2C(v71, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
        LOBYTE(v57) = static FormatWebEmbed.== infix(_:_:)(v70, v72);
        uint64_t v73 = type metadata accessor for FormatWebEmbed;
        goto LABEL_30;
      }
      uint64_t v120 = type metadata accessor for FormatWebEmbed;
      goto LABEL_56;
    case 6u:
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v74 = *v30;
      uint64_t v75 = (uint64_t *)v140;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_47;
      }
      uint64_t v76 = *v75;
      type metadata accessor for FormatPuzzle();
      uint64_t v57 = v50;
      char v58 = static FormatPuzzle.== infix(_:_:)(v74, v76);
      goto LABEL_20;
    case 7u:
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v77 = *v27;
      long long v78 = (uint64_t *)v140;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_47;
      }
      uint64_t v79 = *v78;
      type metadata accessor for FormatPuzzleType(0);
      uint64_t v57 = v50;
      char v58 = static FormatPuzzleType.== infix(_:_:)(v77, v79);
      goto LABEL_20;
    case 8u:
      uint64_t v80 = (char *)v50;
      uint64_t v81 = v128;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v128, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v82 = *v81;
      uint64_t v83 = v81[2];
      uint64_t v84 = v81[3];
      uint64_t v85 = v81[4];
      uint64_t v57 = (uint64_t *)v140;
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v86 = v81[1];
        uint64_t v88 = *v57;
        uint64_t v87 = v57[1];
        uint64_t v89 = v57[2];
        uint64_t v90 = v57[3];
        uint64_t v91 = v57[4];
        v142[0] = v82;
        v142[1] = v86;
        v142[2] = v83;
        v142[3] = v84;
        v142[4] = v85;
        v141[0] = v88;
        v141[1] = v87;
        v141[2] = v89;
        _OWORD v141[3] = v90;
        v141[4] = v91;
        LOBYTE(v57) = _s8NewsFeed21FormatPuzzleStatisticV2eeoiySbAC_ACtFZ_0(v142, v141);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        char v92 = type metadata accessor for FormatContentSlotItemObject;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        LOBYTE(v57) = 0;
        char v92 = (uint64_t (*)())sub_1C0655454;
      }
      char v118 = v92;
      uint64_t v50 = (uint64_t *)v80;
      goto LABEL_50;
    case 9u:
      uint64_t v93 = (char *)v50;
      uint64_t v94 = v133;
      sub_1BFE33F20((uint64_t)v50, v133, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v96 = *(void *)v94;
      uint64_t v95 = *(void **)(v94 + 8);
      int v97 = *(unsigned __int8 *)(v94 + 16);
      char v98 = (uint64_t *)v140;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v99 = *v98;
        uint64_t v100 = (void *)v98[1];
        int v101 = *((unsigned __int8 *)v98 + 16);
        if (v96 == v99 && v95 == v100)
        {
          swift_bridgeObjectRelease_n();
          if (v97 != v101)
          {
LABEL_62:
            LOBYTE(v57) = 0;
            uint64_t v121 = type metadata accessor for FormatContentSlotItemObject;
            goto LABEL_63;
          }
        }
        else
        {
          char v123 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v123 & 1) == 0 || v97 != v101) {
            goto LABEL_62;
          }
        }
        char v118 = type metadata accessor for FormatContentSlotItemObject;
        LOBYTE(v57) = 1;
        uint64_t v50 = (uint64_t *)v93;
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
      LOBYTE(v57) = 0;
      uint64_t v121 = (uint64_t (*)())sub_1C0655454;
LABEL_63:
      char v118 = v121;
      uint64_t v50 = (uint64_t *)v93;
LABEL_50:
      sub_1BFE38E08((uint64_t)v50, (uint64_t (*)(void))v118);
      return v57 & 1;
    case 0xAu:
      uint64_t v70 = v130;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v102 = (uint64_t)v140;
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        uint64_t v72 = v126;
        sub_1BFE35B2C(v102, (uint64_t)v126, (uint64_t (*)(void))type metadata accessor for FormatCustomItem);
        LOBYTE(v57) = static FormatCustomItem.== infix(_:_:)(v70, v72);
        uint64_t v73 = type metadata accessor for FormatCustomItem;
LABEL_30:
        unint64_t v103 = v73;
        sub_1BFE38E08((uint64_t)v72, (uint64_t (*)(void))v73);
        sub_1BFE38E08((uint64_t)v70, (uint64_t (*)(void))v103);
        char v104 = type metadata accessor for FormatContentSlotItemObject;
        goto LABEL_49;
      }
      uint64_t v120 = type metadata accessor for FormatCustomItem;
LABEL_56:
      sub_1BFE38E08((uint64_t)v70, (uint64_t (*)(void))v120);
      goto LABEL_48;
    case 0xBu:
      id v105 = v134;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v106 = *v105;
      unint64_t v107 = v140;
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_47;
      }
      uint64_t v66 = (char *)v50;
      char v67 = _s8NewsFeed28FormatScoreDataVisualizationC2eeoiySbAC_ACtFZ_0(v106, *v107);
      goto LABEL_45;
    case 0xCu:
      uint64_t v108 = v135;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v135, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v109 = *v108;
      char v110 = v140;
      if (swift_getEnumCaseMultiPayload() == 12) {
        goto LABEL_34;
      }
      goto LABEL_47;
    case 0xDu:
      uint64_t v111 = v129;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v129, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v109 = *v111;
      char v110 = v140;
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_47;
      }
LABEL_34:
      uint64_t v66 = (char *)v50;
      char v67 = sub_1C0854454(v109, *v110);
      goto LABEL_45;
    case 0xEu:
      uint64_t v112 = v136;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v113 = *v112;
      char v114 = v140;
      if (swift_getEnumCaseMultiPayload() == 14) {
        goto LABEL_44;
      }
      goto LABEL_47;
    case 0xFu:
      unint64_t v115 = v131;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v131, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v113 = *v115;
      char v114 = v140;
      if (swift_getEnumCaseMultiPayload() == 15) {
        goto LABEL_44;
      }
      goto LABEL_47;
    case 0x10u:
      unint64_t v116 = v137;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v137, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v113 = *v116;
      char v114 = v140;
      if (swift_getEnumCaseMultiPayload() == 16) {
        goto LABEL_44;
      }
      goto LABEL_47;
    case 0x11u:
      uint64_t v117 = v132;
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v132, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v113 = *v117;
      char v114 = v140;
      if (swift_getEnumCaseMultiPayload() != 17) {
        goto LABEL_47;
      }
LABEL_44:
      uint64_t v66 = (char *)v50;
      char v67 = sub_1C08542F8(v113, *v114);
LABEL_45:
      LOBYTE(v57) = v67;
      swift_release();
      uint64_t v50 = (uint64_t *)v66;
      goto LABEL_46;
    default:
      sub_1BFE33F20((uint64_t)v50, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v54 = *v47;
      uint64_t v55 = (uint64_t *)v140;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_47:
        swift_release();
LABEL_48:
        LOBYTE(v57) = 0;
        char v104 = (uint64_t (*)())sub_1C0655454;
      }
      else
      {
        uint64_t v56 = *v55;
        type metadata accessor for FormatArticle();
        uint64_t v57 = v50;
        char v58 = static FormatArticle.== infix(_:_:)(v54, v56);
LABEL_20:
        uint64_t v50 = v57;
        LOBYTE(v57) = v58;
        swift_release();
LABEL_46:
        swift_release();
        char v104 = type metadata accessor for FormatContentSlotItemObject;
      }
LABEL_49:
      char v118 = v104;
      goto LABEL_50;
  }
}

uint64_t sub_1C0653BC0(void *a1)
{
  a1[1] = sub_1BFE35C3C(&qword_1EB868198, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject);
  a1[2] = sub_1BFE35C3C(&qword_1EB868190, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject);
  uint64_t result = sub_1BFE35C3C((unint64_t *)&unk_1EA19CD78, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject);
  a1[3] = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatContentSlotItemObject(void *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 5u:
        uint64_t v7 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v7;
        uint64_t v8 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v9 = v8[5];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v41 = &a2[v9];
        uint64_t v11 = sub_1C1515FDC();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        swift_bridgeObjectRetain();
        v13(v10, v41, v11);
        uint64_t v14 = v8[6];
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = &a2[v14];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
        {
          sub_1BFF00BEC();
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          v13(v15, v16, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
        }
        *(void *)((char *)a1 + v8[7]) = *(void *)&a2[v8[7]];
        uint64_t v30 = v8[8];
        uint64_t v31 = (void *)((char *)a1 + v30);
        uint64_t v32 = &a2[v30];
        uint64_t v33 = *((void *)v32 + 1);
        *uint64_t v31 = *(void *)v32;
        v31[1] = v33;
        uint64_t v34 = v8[9];
        uint64_t v35 = (void *)((char *)a1 + v34);
        uint64_t v36 = &a2[v34];
        uint64_t v37 = *((void *)v36 + 1);
        *uint64_t v35 = *(void *)v36;
        v35[1] = v37;
        *(void *)((char *)a1 + v8[10]) = *(void *)&a2[v8[10]];
        *(void *)((char *)a1 + v8[11]) = *(void *)&a2[v8[11]];
        *(void *)((char *)a1 + v8[12]) = *(void *)&a2[v8[12]];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v18 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v18;
        uint64_t v19 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v19;
        a1[4] = *((void *)a2 + 4);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        uint64_t v20 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v20;
        *((unsigned char *)a1 + 16) = a2[16];
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        uint64_t v21 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v21;
        uint64_t v22 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v22;
        uint64_t v23 = type metadata accessor for FormatCustomItem();
        uint64_t v24 = *(int *)(v23 + 24);
        __dst = (char *)a1 + v24;
        uint64_t v42 = v23;
        uint64_t v25 = &a2[v24];
        uint64_t v26 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28(v25, 1, v26))
        {
          sub_1BFE323F8(0);
          memcpy(__dst, v25, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          uint64_t v38 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(__dst, v25, v38);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
        }
        *(void *)((char *)a1 + *(int *)(v42 + 28)) = *(void *)&a2[*(int *)(v42 + 28)];
        *(void *)((char *)a1 + *(int *)(v42 + 32)) = *(void *)&a2[*(int *)(v42 + 32)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *a1 = *(void *)a2;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for FormatContentSlotItemObject(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1BFE38E08((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v4 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v5 = v4[5];
        uint64_t v6 = &a1[v5];
        uint64_t v30 = &a2[v5];
        uint64_t v7 = sub_1C1515FDC();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        swift_bridgeObjectRetain();
        v9(v6, v30, v7);
        uint64_t v10 = v4[6];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
        {
          sub_1BFF00BEC();
          memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          v9(v11, v12, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
        }
        *(void *)&a1[v4[7]] = *(void *)&a2[v4[7]];
        uint64_t v21 = v4[8];
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = *((void *)v23 + 1);
        uint64_t v24 = v4[9];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = *((void *)v26 + 1);
        *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
        *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
        *(void *)&a1[v4[12]] = *(void *)&a2[v4[12]];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        uint64_t v14 = type metadata accessor for FormatCustomItem();
        uint64_t v15 = *(int *)(v14 + 24);
        __dst = &a1[v15];
        uint64_t v31 = v14;
        uint64_t v16 = &a2[v15];
        uint64_t v17 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19(v16, 1, v17))
        {
          sub_1BFE323F8(0);
          memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v27 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(__dst, v16, v27);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
        }
        *(void *)&a1[*(int *)(v31 + 28)] = *(void *)&a2[*(int *)(v31 + 28)];
        *(void *)&a1[*(int *)(v31 + 32)] = *(void *)&a2[*(int *)(v31 + 32)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for FormatContentSlotItemObject(_OWORD *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 10)
  {
    long long v18 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v18;
    uint64_t v19 = (int *)type metadata accessor for FormatCustomItem();
    uint64_t v20 = v19[6];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = &a2[v20];
    uint64_t v23 = type metadata accessor for FormatCustomItem.Action();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1BFE323F8(0);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v21, v22, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    *(void *)((char *)a1 + v19[7]) = *(void *)&a2[v19[7]];
    *(void *)((char *)a1 + v19[8]) = *(void *)&a2[v19[8]];
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v13(v9, v10, v11);
    uint64_t v14 = v7[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1BFF00BEC();
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    *(void *)((char *)a1 + v7[7]) = *(void *)&a2[v7[7]];
    *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)&a2[v7[8]];
    *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)&a2[v7[9]];
    *(void *)((char *)a1 + v7[10]) = *(void *)&a2[v7[10]];
    *(void *)((char *)a1 + v7[11]) = *(void *)&a2[v7[11]];
    *(void *)((char *)a1 + v7[12]) = *(void *)&a2[v7[12]];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatContentSlotItemObject(_OWORD *a1, char *a2, uint64_t a3)
{
  if (a1 != (_OWORD *)a2)
  {
    sub_1BFE38E08((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 10)
    {
      long long v18 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v18;
      uint64_t v19 = (int *)type metadata accessor for FormatCustomItem();
      uint64_t v20 = v19[6];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = &a2[v20];
      uint64_t v23 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        sub_1BFE323F8(0);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v26 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v21, v22, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      *(void *)((char *)a1 + v19[7]) = *(void *)&a2[v19[7]];
      *(void *)((char *)a1 + v19[8]) = *(void *)&a2[v19[8]];
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *(_OWORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1C1515FDC();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      uint64_t v14 = v7[6];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = &a2[v14];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
      {
        sub_1BFF00BEC();
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      *(void *)((char *)a1 + v7[7]) = *(void *)&a2[v7[7]];
      *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)&a2[v7[8]];
      *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)&a2[v7[9]];
      *(void *)((char *)a1 + v7[10]) = *(void *)&a2[v7[10]];
      *(void *)((char *)a1 + v7[11]) = *(void *)&a2[v7[11]];
      *(void *)((char *)a1 + v7[12]) = *(void *)&a2[v7[12]];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

ValueMetadata *type metadata accessor for FormatContentSlotItemObject.CodingType()
{
  return &type metadata for FormatContentSlotItemObject.CodingType;
}

unint64_t sub_1C0654FB8()
{
  unint64_t result = qword_1EA19CD88;
  if (!qword_1EA19CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CD88);
  }
  return result;
}

uint64_t sub_1C065500C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v6 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (void *)((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    if (!v10) {
      break;
    }
    uint64_t v25 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F694C(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
      __break(1u);
      return result;
    }
    v20[1] = v4;
    uint64_t v4 = 0;
    uint64_t v13 = v25;
    unint64_t v21 = a1 & 0xC000000000000001;
    unint64_t v22 = a1;
    while (v10 != v4)
    {
      if (v21) {
        uint64_t v14 = MEMORY[0x1C18C7CB0](v4, a1);
      }
      else {
        uint64_t v14 = swift_unknownObjectRetain();
      }
      *uint64_t v9 = v14;
      type metadata accessor for FormatContentSlotItemObject.Resolved();
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = (uint64_t *)((char *)v9 + v6[5]);
      uint64_t v16 = v23;
      uint64_t v17 = v24;
      *uint64_t v15 = v23;
      v15[1] = v17;
      *(uint64_t *)((char *)v9 + v6[6]) = MEMORY[0x1E4FBC870];
      *(uint64_t *)((char *)v9 + v6[7]) = v11;
      sub_1BFDB3920(v16);
      uint64_t v25 = v13;
      unint64_t v19 = *(void *)(v13 + 16);
      unint64_t v18 = *(void *)(v13 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C05F694C(v18 > 1, v19 + 1, 1);
        uint64_t v13 = v25;
      }
      ++v4;
      *(void *)(v13 + 16) = v19 + 1;
      sub_1BFE35B2C((uint64_t)v9, v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      a1 = v22;
      if (v10 == v4) {
        return v13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0655264(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v18 = a2;
  uint64_t v5 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1C05F694C(0, v9, 0);
    uint64_t v10 = v19;
    uint64_t v11 = *(void *)(type metadata accessor for FormatContentSlotItemObject.Resolved() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    while (1)
    {
      sub_1C065168C(v12, v18, (uint64_t)v8);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v19 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F694C(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v19;
      }
      *(void *)(v10 + 16) = v15 + 1;
      sub_1BFE35B2C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      v12 += v13;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

void sub_1C0655454()
{
  if (!qword_1EA19CD98)
  {
    type metadata accessor for FormatContentSlotItemObject();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19CD98);
    }
  }
}

void sub_1C06554B8()
{
  if (!qword_1EB885098)
  {
    sub_1C065555C(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFD98960(&qword_1EB8900F0);
    unint64_t v0 = sub_1C15193BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB885098);
    }
  }
}

void sub_1C065555C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C06555A8(uint64_t a1)
{
}

uint64_t sub_1C06555DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0655614@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1375C1C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

unint64_t sub_1C0655634()
{
  unint64_t result = qword_1EA19CDA0;
  if (!qword_1EA19CDA0)
  {
    sub_1C06554B8();
    sub_1BFD98960((unint64_t *)&qword_1EB879F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CDA0);
  }
  return result;
}

uint64_t sub_1C06556C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0651878(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C06556DC(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0655728(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0655774@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C06556C0(a1, a2);
}

uint64_t sub_1C065578C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *(void *)a1 = *a2;
    uint64_t v29 = v28 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v51 = a3;
    uint64_t v52 = a2;
    uint64_t v8 = a3[5];
    uint64_t v53 = a1;
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v13 = v12[5];
    uint64_t v14 = v9 + v13;
    uint64_t v15 = v10 + v13;
    uint64_t v16 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v12[6];
    uint64_t v18 = v9 + v17;
    uint64_t v19 = v10 + v17;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)(v10 + v17);
    *(unsigned char *)(v18 + 16) = *(unsigned char *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    *(unsigned char *)(v18 + 19) = *(unsigned char *)(v10 + v17 + 19);
    *(_DWORD *)(v18 + 20) = *(_DWORD *)(v10 + v17 + 20);
    unint64_t v20 = *(void *)(v10 + v17 + 24);
    if (v20 >= 2) {
      unint64_t v20 = swift_bridgeObjectRetain();
    }
    *(void *)(v18 + 24) = v20;
    uint64_t v21 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v22 = *(int *)(v21 + 36);
    uint64_t v23 = (void *)(v18 + v22);
    uint64_t v24 = (const void *)(v19 + v22);
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1C01BB2C0();
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v30 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v23, v24, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    *(void *)(v18 + *(int *)(v21 + 40)) = *(void *)(v19 + *(int *)(v21 + 40));
    *(void *)(v9 + v12[7]) = *(void *)(v10 + v12[7]);
    *(void *)(v9 + v12[8]) = *(void *)(v10 + v12[8]);
    *(unsigned char *)(v9 + v12[9]) = *(unsigned char *)(v10 + v12[9]);
    *(void *)(v9 + v12[10]) = *(void *)(v10 + v12[10]);
    *(unsigned char *)(v9 + v12[11]) = *(unsigned char *)(v10 + v12[11]);
    *(void *)(v9 + v12[12]) = *(void *)(v10 + v12[12]);
    uint64_t v31 = v51[6];
    uint64_t v32 = v53 + v31;
    uint64_t v33 = (uint64_t)v52 + v31;
    *(unsigned char *)uint64_t v32 = *((unsigned char *)v52 + v31);
    long long v34 = *(_OWORD *)((char *)v52 + v31 + 32);
    *(_OWORD *)(v32 + 32) = v34;
    uint64_t v35 = v34;
    uint64_t v36 = **(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8);
    swift_retain();
    swift_retain();
    v36(v32 + 8, v33 + 8, v35);
    uint64_t v37 = *(void *)(v33 + 56);
    *(void *)(v32 + 48) = *(void *)(v33 + 48);
    *(void *)(v32 + 56) = v37;
    uint64_t v38 = *(void *)(v33 + 72);
    *(void *)(v32 + 64) = *(void *)(v33 + 64);
    *(void *)(v32 + 72) = v38;
    *(void *)(v32 + 80) = *(void *)(v33 + 80);
    *(unsigned char *)(v32 + 88) = *(unsigned char *)(v33 + 88);
    *(void *)(v32 + 96) = *(void *)(v33 + 96);
    uint64_t v39 = (int *)type metadata accessor for GroupLayoutBindingContext();
    uint64_t v40 = v39[13];
    uint64_t v49 = v33 + v40;
    uint64_t v50 = v32 + v40;
    uint64_t v41 = sub_1C151787C();
    uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
    uint64_t v29 = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v50, v49, v41);
    *(void *)(v32 + v39[14]) = *(void *)(v33 + v39[14]);
    *(void *)(v32 + v39[15]) = *(void *)(v33 + v39[15]);
    *(unsigned char *)(v32 + v39[16]) = *(unsigned char *)(v33 + v39[16]);
    *(void *)(v32 + v39[17]) = *(void *)(v33 + v39[17]);
    *(void *)(v32 + v39[18]) = *(void *)(v33 + v39[18]);
    *(void *)(v32 + v39[19]) = *(void *)(v33 + v39[19]);
    uint64_t v42 = v51[7];
    uint64_t v43 = v51[8];
    uint64_t v44 = v53 + v42;
    uint64_t v45 = (uint64_t)v52 + v42;
    *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
    *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    uint64_t v46 = *(void *)(v45 + 48);
    *(void *)(v44 + 40) = *(void *)(v45 + 40);
    *(void *)(v44 + 48) = v46;
    *(void *)(v53 + v43) = *(uint64_t *)((char *)v52 + v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v29;
}

uint64_t sub_1C0655C8C(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v4 + *(int *)(v6 + 24);
  if (*(void *)(v9 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  uint64_t v13 = a1 + *(int *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(v13 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v15 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0655EDC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v7 = a3[5];
  uint64_t v50 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  unint64_t v19 = *(void *)(v9 + v16 + 24);
  if (v19 >= 2) {
    unint64_t v19 = swift_bridgeObjectRetain();
  }
  *(void *)(v17 + 24) = v19;
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v20 + 36);
  uint64_t v22 = (void *)(v17 + v21);
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1C01BB2C0();
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(void *)(v17 + *(int *)(v20 + 40)) = *(void *)(v18 + *(int *)(v20 + 40));
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  uint64_t v28 = v48[6];
  uint64_t v29 = v50 + v28;
  uint64_t v30 = v49 + v28;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)(v49 + v28);
  long long v31 = *(_OWORD *)(v49 + v28 + 32);
  *(_OWORD *)(v29 + 32) = v31;
  uint64_t v32 = v31;
  uint64_t v33 = **(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8);
  swift_retain();
  swift_retain();
  v33(v29 + 8, v30 + 8, v32);
  uint64_t v34 = *(void *)(v30 + 56);
  *(void *)(v29 + 48) = *(void *)(v30 + 48);
  *(void *)(v29 + 56) = v34;
  uint64_t v35 = *(void *)(v30 + 72);
  *(void *)(v29 + 64) = *(void *)(v30 + 64);
  *(void *)(v29 + 72) = v35;
  *(void *)(v29 + 80) = *(void *)(v30 + 80);
  *(unsigned char *)(v29 + 88) = *(unsigned char *)(v30 + 88);
  *(void *)(v29 + 96) = *(void *)(v30 + 96);
  uint64_t v36 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v37 = v36[13];
  uint64_t v46 = v30 + v37;
  uint64_t v47 = v29 + v37;
  uint64_t v38 = sub_1C151787C();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45(v47, v46, v38);
  *(void *)(v29 + v36[14]) = *(void *)(v30 + v36[14]);
  *(void *)(v29 + v36[15]) = *(void *)(v30 + v36[15]);
  *(unsigned char *)(v29 + v36[16]) = *(unsigned char *)(v30 + v36[16]);
  *(void *)(v29 + v36[17]) = *(void *)(v30 + v36[17]);
  *(void *)(v29 + v36[18]) = *(void *)(v30 + v36[18]);
  *(void *)(v29 + v36[19]) = *(void *)(v30 + v36[19]);
  uint64_t v39 = v48[7];
  uint64_t v40 = v48[8];
  uint64_t v41 = v50 + v39;
  uint64_t v42 = v49 + v39;
  *(unsigned char *)uint64_t v41 = *(unsigned char *)v42;
  *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
  *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
  uint64_t v43 = *(void *)(v42 + 48);
  *(void *)(v41 + 40) = *(void *)(v42 + 40);
  *(void *)(v41 + 48) = v43;
  *(void *)(v50 + v40) = *(void *)(v49 + v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v50;
}

uint64_t *sub_1C0656384(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v49 = a3;
  uint64_t v50 = a2;
  uint64_t v6 = a3[5];
  uint64_t v51 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v46 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  long long v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)uint64_t v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  unint64_t v19 = (unint64_t *)&v7[v15 + 24];
  unint64_t v20 = *(void *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *unint64_t v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0656968((uint64_t)(v16 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v19 = *((void *)v17 + 3);
    }
  }
  else
  {
    *unint64_t v19 = v20;
    if (v20 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v48 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v48 + 36);
  uint64_t v22 = (uint64_t)&v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v47 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v47, v23, v32);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v47, 0, 1, v24);
      goto LABEL_16;
    }
    sub_1C01BB2C0();
    size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
    uint64_t v30 = (void *)v47;
  }
  else
  {
    if (!v27)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v47, v23, v33);
      goto LABEL_16;
    }
    sub_1C0656968(v47, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
    uint64_t v30 = (void *)v47;
  }
  memcpy(v30, v23, v29);
LABEL_16:
  *(void *)&v16[*(int *)(v48 + 40)] = *(void *)&v17[*(int *)(v48 + 40)];
  *(void *)&v7[v46[7]] = *(void *)&v8[v46[7]];
  *(void *)&v7[v46[8]] = *(void *)&v8[v46[8]];
  v7[v46[9]] = v8[v46[9]];
  *(void *)&v7[v46[10]] = *(void *)&v8[v46[10]];
  swift_retain();
  swift_release();
  v7[v46[11]] = v8[v46[11]];
  *(void *)&v7[v46[12]] = *(void *)&v8[v46[12]];
  swift_retain();
  swift_release();
  uint64_t v34 = v49[6];
  uint64_t v35 = (char *)v51 + v34;
  uint64_t v36 = (char *)v50 + v34;
  *((unsigned char *)v51 + v34) = *((unsigned char *)v50 + v34);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)v51 + v34 + 8), (uint64_t *)((char *)v50 + v34 + 8));
  *((void *)v35 + 6) = *((void *)v36 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v35 + 7) = *((void *)v36 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v35 + 8) = *((void *)v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v35 + 9) = *((void *)v36 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v35 + 10) = *((void *)v36 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[88] = v36[88];
  *((void *)v35 + 12) = *((void *)v36 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v38 = v37[13];
  uint64_t v39 = &v35[v38];
  uint64_t v40 = &v36[v38];
  uint64_t v41 = sub_1C151787C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  *(void *)&v35[v37[14]] = *(void *)&v36[v37[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v35[v37[15]] = *(void *)&v36[v37[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[v37[16]] = v36[v37[16]];
  *(void *)&v35[v37[17]] = *(void *)&v36[v37[17]];
  *(void *)&v35[v37[18]] = *(void *)&v36[v37[18]];
  *(void *)&v35[v37[19]] = *(void *)&v36[v37[19]];
  uint64_t v42 = v49[7];
  uint64_t v43 = (char *)v51 + v42;
  uint64_t v44 = (char *)v50 + v42;
  *uint64_t v43 = *((unsigned char *)v50 + v42);
  *((void *)v43 + 1) = *(uint64_t *)((char *)v50 + v42 + 8);
  *((void *)v43 + 2) = *(uint64_t *)((char *)v50 + v42 + 16);
  *((void *)v43 + 3) = *(uint64_t *)((char *)v50 + v42 + 24);
  *((void *)v43 + 4) = *(uint64_t *)((char *)v50 + v42 + 32);
  *((void *)v43 + 5) = *(uint64_t *)((char *)v50 + v42 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v43 + 6) = *((void *)v44 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v51 + v49[8]) = *(uint64_t *)((char *)v50 + v49[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_1C0656968(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C06569C8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = a3[5];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v17 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v18 = *(int *)(v17 + 36);
  __dst = (void *)(v15 + v18);
  unint64_t v19 = (const void *)(v16 + v18);
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1C01BB2C0();
    memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(__dst, v19, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(void *)(v15 + *(int *)(v17 + 40)) = *(void *)(v16 + *(int *)(v17 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  uint64_t v24 = a3[6];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)(a2 + v24);
  *(_OWORD *)(v25 + 8) = *(_OWORD *)(a2 + v24 + 8);
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(a2 + v24 + 24);
  *(void *)(v25 + 40) = *(void *)(a2 + v24 + 40);
  long long v27 = *(_OWORD *)(a2 + v24 + 64);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a2 + v24 + 48);
  *(_OWORD *)(v25 + 64) = v27;
  *(void *)(v25 + 80) = *(void *)(a2 + v24 + 80);
  *(unsigned char *)(v25 + 88) = *(unsigned char *)(a2 + v24 + 88);
  *(void *)(v25 + 96) = *(void *)(a2 + v24 + 96);
  uint64_t v28 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v29 = v28[13];
  uint64_t v30 = v25 + v29;
  uint64_t v31 = v26 + v29;
  uint64_t v32 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  *(void *)(v25 + v28[14]) = *(void *)(v26 + v28[14]);
  *(void *)(v25 + v28[15]) = *(void *)(v26 + v28[15]);
  *(unsigned char *)(v25 + v28[16]) = *(unsigned char *)(v26 + v28[16]);
  *(void *)(v25 + v28[17]) = *(void *)(v26 + v28[17]);
  *(void *)(v25 + v28[18]) = *(void *)(v26 + v28[18]);
  *(void *)(v25 + v28[19]) = *(void *)(v26 + v28[19]);
  uint64_t v33 = a3[7];
  uint64_t v34 = a3[8];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  long long v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(void *)(v35 + 48) = *(void *)(v36 + 48);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  return a1;
}

uint64_t sub_1C0656D78(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v7 = a3[5];
  uint64_t v52 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v47 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 18) = *(unsigned char *)(v9 + v16 + 18);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(unsigned char *)(v17 + 20) = *(unsigned char *)(v9 + v16 + 20);
  *(unsigned char *)(v17 + 21) = *(unsigned char *)(v9 + v16 + 21);
  *(unsigned char *)(v17 + 22) = *(unsigned char *)(v9 + v16 + 22);
  *(unsigned char *)(v17 + 23) = *(unsigned char *)(v9 + v16 + 23);
  unint64_t v19 = (unint64_t *)(v8 + v16 + 24);
  unint64_t v20 = *(void *)(v9 + v16 + 24);
  if (*v19 < 2) {
    goto LABEL_4;
  }
  if (v20 < 2)
  {
    sub_1C0656968((uint64_t)v19, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v20 = *(void *)(v18 + 24);
LABEL_4:
    *unint64_t v19 = v20;
    goto LABEL_6;
  }
  *unint64_t v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v49 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v49 + 36);
  uint64_t v22 = v17 + v21;
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v48 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v48, v23, v32);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      goto LABEL_14;
    }
    sub_1C01BB2C0();
    size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
    uint64_t v30 = (void *)v48;
  }
  else
  {
    if (!v27)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v33 - 8) + 40))(v48, v23, v33);
      goto LABEL_14;
    }
    sub_1C0656968(v48, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
    uint64_t v30 = (void *)v48;
  }
  memcpy(v30, v23, v29);
LABEL_14:
  *(void *)(v17 + *(int *)(v49 + 40)) = *(void *)(v18 + *(int *)(v49 + 40));
  *(void *)(v8 + v47[7]) = *(void *)(v9 + v47[7]);
  *(void *)(v8 + v47[8]) = *(void *)(v9 + v47[8]);
  *(unsigned char *)(v8 + v47[9]) = *(unsigned char *)(v9 + v47[9]);
  *(void *)(v8 + v47[10]) = *(void *)(v9 + v47[10]);
  swift_release();
  *(unsigned char *)(v8 + v47[11]) = *(unsigned char *)(v9 + v47[11]);
  *(void *)(v8 + v47[12]) = *(void *)(v9 + v47[12]);
  swift_release();
  uint64_t v34 = v50[6];
  uint64_t v35 = v52 + v34;
  uint64_t v36 = v51 + v34;
  *(unsigned char *)(v52 + v34) = *(unsigned char *)(v51 + v34);
  __swift_destroy_boxed_opaque_existential_1(v52 + v34 + 8);
  *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
  *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
  uint64_t v37 = *(void *)(v36 + 48);
  *(void *)(v35 + 40) = *(void *)(v36 + 40);
  *(void *)(v35 + 48) = v37;
  swift_bridgeObjectRelease();
  *(void *)(v35 + 56) = *(void *)(v36 + 56);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 64) = *(void *)(v36 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 72) = *(void *)(v36 + 72);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 80) = *(void *)(v36 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 88) = *(unsigned char *)(v36 + 88);
  *(void *)(v35 + 96) = *(void *)(v36 + 96);
  swift_bridgeObjectRelease();
  uint64_t v38 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v39 = v38[13];
  uint64_t v40 = v35 + v39;
  uint64_t v41 = v36 + v39;
  uint64_t v42 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  *(void *)(v35 + v38[14]) = *(void *)(v36 + v38[14]);
  swift_bridgeObjectRelease();
  *(void *)(v35 + v38[15]) = *(void *)(v36 + v38[15]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + v38[16]) = *(unsigned char *)(v36 + v38[16]);
  *(void *)(v35 + v38[17]) = *(void *)(v36 + v38[17]);
  *(void *)(v35 + v38[18]) = *(void *)(v36 + v38[18]);
  *(void *)(v35 + v38[19]) = *(void *)(v36 + v38[19]);
  uint64_t v43 = v50[7];
  uint64_t v44 = v52 + v43;
  uint64_t v45 = v51 + v43;
  *(unsigned char *)uint64_t v44 = *(unsigned char *)(v51 + v43);
  *(_OWORD *)(v44 + 8) = *(_OWORD *)(v51 + v43 + 8);
  *(_OWORD *)(v44 + 24) = *(_OWORD *)(v51 + v43 + 24);
  *(void *)(v44 + 40) = *(void *)(v51 + v43 + 40);
  swift_bridgeObjectRelease();
  *(void *)(v44 + 48) = *(void *)(v45 + 48);
  swift_bridgeObjectRelease();
  *(void *)(v52 + v50[8]) = *(void *)(v51 + v50[8]);
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_1C06572DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C06572F0);
}

uint64_t sub_1C06572F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for GroupLayoutBindingContext();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C065741C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0657430);
}

uint64_t sub_1C0657430(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for GroupLayoutBindingContext();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatTestCaseLayout()
{
  uint64_t result = qword_1EA19CDA8;
  if (!qword_1EA19CDA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C06575A8()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GroupLayoutBindingContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of PuzzleNavigationBarThemeProviderType.navigationBarTheme(puzzle:rankID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1C06576A8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C065789C(a2, a3, (uint64_t)v3, a1);
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = v5;
    uint64_t v9 = v3[6];
    uint64_t v10 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v9);
    id v11 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v12 = sub_1C151E62C();
    uint64_t v14 = v13;

    uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v8, v7, v12, v14, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      id v16 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_navigationBarThemeByRankID);
      swift_unknownObjectRelease();
      if (v16)
      {
        sub_1C02B0F70();
        uint64_t v17 = sub_1C151E33C();

        id v18 = objc_msgSend(v15, sel_identifier);
        uint64_t v19 = sub_1C151E62C();
        uint64_t v21 = v20;

        if (*(void *)(v17 + 16) && (unint64_t v22 = sub_1BFEF2D8C(v19, v21), (v23 & 1) != 0))
        {
          uint64_t v7 = *(void *)(*(void *)(v17 + 56) + 8 * v22);
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v7 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v7 = 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_1C065789C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v7 = *(void *)(a3 + 88);
  uint64_t v8 = *(void *)(a3 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 64), v7);
  id v9 = objc_msgSend(a4, sel_identifier);
  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + 48))(v10, v12, v7);
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v14 = objc_msgSend(v13, sel_rankID);
    if (v14)
    {
      uint64_t v15 = v14;
      a1 = sub_1C151E62C();

      return a1;
    }
  }
  id v16 = objc_msgSend(objc_msgSend(*(id *)(a3 + 16), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v17 = objc_msgSend(v16, sel_puzzleRanksByPuzzleTypeID);

  if (!v17) {
    return 0;
  }
  sub_1BFEE02A4();
  uint64_t v18 = sub_1C151E33C();

  id v19 = objc_msgSend(objc_msgSend(a4, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  if (!*(void *)(v18 + 16) || (unint64_t v23 = sub_1BFEF2D8C(v20, v22), (v24 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v25 = *(void *)(*(void *)(v18 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25 >> 62) {
    goto LABEL_26;
  }
  a1 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (a1)
  {
    uint64_t v26 = 4;
    while (1)
    {
      id v27 = (v25 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C18C7CB0](v26 - 4, v25)
          : *(id *)(v25 + 8 * v26);
      uint64_t v28 = v27;
      uint64_t v29 = v26 - 3;
      if (__OFADD__(v26 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v27, sel_defaultRank))
      {
        swift_bridgeObjectRelease();
        id v31 = objc_msgSend(v28, sel_identifier);
        a1 = sub_1C151E62C();

        return a1;
      }

      ++v26;
      if (v29 == a1) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    a1 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0657BC0()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0657C08(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C06576A8(a1, a2, a3);
}

uint64_t GapViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t GapViewLayout.activityIndicatorViewFrame.getter()
{
  return swift_retain();
}

uint64_t GapViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t GapViewLayout.fastDecode(decoder:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C15178AC();
  if (!v1)
  {
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    uint64_t v11 = v7;
    sub_1C15178DC();
    a1[3] = (uint64_t)&type metadata for GapViewLayout.Attributes;
    uint64_t result = swift_allocObject();
    *a1 = result;
    *(void *)(result + 16) = v8;
    *(void *)(result + 24) = v9;
    *(void *)(result + 32) = v10;
    *(void *)(result + 40) = v11;
    *(_OWORD *)(result + 48) = v12;
    *(void *)(result + 64) = v13;
    *(void *)(result + 72) = v14;
  }
  return result;
}

uint64_t sub_1C0657DA8()
{
  return swift_deallocObject();
}

double GapViewLayout.Attributes.frame.getter()
{
  return *(double *)v0;
}

double GapViewLayout.Attributes.activityIndicatorViewFrame.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1C0657DD0()
{
  if (*v0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_1C0657E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0658998(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0657E34(uint64_t a1)
{
  unint64_t v2 = sub_1C06580D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0657E70(uint64_t a1)
{
  unint64_t v2 = sub_1C06580D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GapViewLayout.Attributes.encode(to:)(void *a1)
{
  sub_1BFCB55CC(0, &qword_1EA19CDB8, (uint64_t (*)(void))sub_1C06580D4, (uint64_t)&type metadata for GapViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  long long v16 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v11 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v13 = *((void *)v1 + 6);
  uint64_t v14 = *((void *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06580D4();
  sub_1C1520F0C();
  long long v17 = v16;
  uint64_t v18 = v9;
  uint64_t v19 = v10;
  char v20 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE131FC(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&long long v17 = v11;
    *((void *)&v17 + 1) = v12;
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    char v20 = 1;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C06580D4()
{
  unint64_t result = qword_1EB8747A0;
  if (!qword_1EB8747A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8747A0);
  }
  return result;
}

uint64_t GapViewLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v17 = a2;
  sub_1BFCB55CC(0, &qword_1EB87A508, (uint64_t (*)(void))sub_1C06580D4, (uint64_t)&type metadata for GapViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06580D4();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v17;
    type metadata accessor for CGRect(0);
    char v20 = 0;
    sub_1BFE131FC(&qword_1EB87A290, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v11 = v18;
    long long v12 = v19;
    char v20 = 1;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    long long v14 = v18;
    long long v15 = v19;
    *uint64_t v10 = v11;
    v10[1] = v12;
    void v10[2] = v14;
    v10[3] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0658384(uint64_t a1)
{
  unint64_t v2 = sub_1C0658A80();
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C06583C0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return GapViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1C06583D8(void *a1)
{
  return GapViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1C06583F0()
{
  sub_1BFCB5750();
  return sub_1C151798C();
}

uint64_t GapViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  unint64_t v5 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(unsigned char *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return sub_1BFF7FF04(v4, v5);
}

uint64_t GapViewLayout.Context.styler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFC66384(v1 + 56, a1);
}

unint64_t sub_1C06584DC()
{
  unint64_t result = qword_1EA19CDC0;
  if (!qword_1EA19CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CDC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for GapViewLayout.Attributes()
{
  return &type metadata for GapViewLayout.Attributes;
}

uint64_t assignWithCopy for GapViewLayout.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  unint64_t v5 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) >= 0x11uLL)
  {
    if (v5 >= 0x11)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C01A7564(a1 + 40);
    goto LABEL_6;
  }
  if (v5 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t assignWithTake for GapViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = (void *)(a2 + 40);
  if (*(void *)(a1 + 48) >= 0x11uLL)
  {
    unint64_t v7 = *(void *)(a2 + 48);
    if (v7 >= 0x11)
    {
      *(void *)(a1 + 40) = *v6;
      *(void *)(a1 + 48) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C01A7564(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatTemplateKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatTemplateKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GapViewLayout.Context()
{
  return &type metadata for GapViewLayout.Context;
}

unsigned char *storeEnumTagSinglePayload for GapViewLayout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0658858);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GapViewLayout.Attributes.CodingKeys()
{
  return &type metadata for GapViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1C0658894()
{
  unint64_t result = qword_1EA19CDC8;
  if (!qword_1EA19CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CDC8);
  }
  return result;
}

unint64_t sub_1C06588EC()
{
  unint64_t result = qword_1EB8747B0;
  if (!qword_1EB8747B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8747B0);
  }
  return result;
}

unint64_t sub_1C0658944()
{
  unint64_t result = qword_1EB8747A8;
  if (!qword_1EB8747A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8747A8);
  }
  return result;
}

uint64_t sub_1C0658998(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C1614B50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C0658A80()
{
  unint64_t result = qword_1EA19CDD0;
  if (!qword_1EA19CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CDD0);
  }
  return result;
}

uint64_t sub_1C0658AD4()
{
  return swift_deallocObject();
}

id sub_1C0658AE4()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale] = *(void *)(v0
                                                                                   + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale);
  objc_msgSend(v1, sel_setNeedsLayout);
  int v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView);
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale] = *(void *)(v0 + v2);
  objc_msgSend(v3, sel_setNeedsLayout);
  unsigned int v4 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView);
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale] = *(void *)(v0 + v2);
  return objc_msgSend(v4, sel_setNeedsLayout);
}

id sub_1C0658B90()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView);
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize);
  *(_OWORD *)&v1[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentSize] = *(_OWORD *)(v0
                                                                                         + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize);
  objc_msgSend(v1, sel_setNeedsLayout);
  int v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView);
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_edge] = *v2;
  objc_msgSend(v3, sel_setNeedsLayout);
  unsigned int v4 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView);
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_edge] = v2[1];
  return objc_msgSend(v4, sel_setNeedsLayout);
}

id sub_1C0658C40()
{
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView];
  objc_msgSend(v0, sel_frame);
  sub_1C151F73C();
  uint64_t v2 = &v1[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentBounds];
  *(void *)uint64_t v2 = v3;
  *((void *)v2 + 1) = v4;
  *((void *)v2 + 2) = v5;
  *((void *)v2 + 3) = v6;
  objc_msgSend(v1, sel_setNeedsLayout);
  unint64_t v7 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
  objc_msgSend(v0, sel_frame);
  sub_1C151F73C();
  uint64_t v8 = &v7[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
  *(void *)uint64_t v8 = v9;
  *((void *)v8 + 1) = v10;
  *((void *)v8 + 2) = v11;
  *((void *)v8 + 3) = v12;
  objc_msgSend(v7, sel_setNeedsLayout);
  uint64_t v13 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
  objc_msgSend(v0, sel_frame);
  sub_1C151F73C();
  long long v14 = &v13[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
  *(void *)long long v14 = v15;
  *((void *)v14 + 1) = v16;
  *((void *)v14 + 2) = v17;
  *((void *)v14 + 3) = v18;
  return objc_msgSend(v13, sel_setNeedsLayout);
}

id sub_1C0658DB8()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView], sel_setHidden_, v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView], sel_setHidden_, v0[v1]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView], sel_setHidden_, v0[v1]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer], sel_setHidden_, v0[v1]);
  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1C0658EB0()
{
  uint64_t v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_layoutSubviews);
  double v2 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize];
  double v3 = 0.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView], sel_setFrame_, 0.0, 0.0, v2, v2);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
  uint64_t v12 = 0x3FF0000000000000;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0x3FF0000000000000;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  *(_OWORD *)&v10.a = 0x3FF0000000000000uLL;
  v10.c = 0.0;
  v10.d = 1.0;
  *(_OWORD *)&v10.tx = 0uLL;
  objc_msgSend(v4, sel_setTransform_, &v10);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_, v2, v2, CGRectGetHeight(v18) - v2, v2);
  id v5 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v5, sel_setAnchorPoint_, 0.0, 0.0);

  CGAffineTransformMakeRotation(&v10, 1.57079633);
  objc_msgSend(v4, sel_setTransform_, &v10);
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v6, sel_setFrame_, v2, 0.0, CGRectGetWidth(v19) - v2, v2);
  if (!objc_msgSend(v4, sel_isHidden)) {
    double v3 = v2;
  }
  unint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView];
  objc_msgSend(v1, sel_bounds);
  CGFloat v8 = CGRectGetWidth(v20) - v3;
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v7, sel_setFrame_, v3, v3, v8, CGRectGetHeight(v21) - v3);
  CGMutablePathRef Mutable = CGPathCreateMutable();
  sub_1C151F3DC();
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v22);
  sub_1C151F3FC();
  sub_1C151F3DC();
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v23);
  sub_1C151F3FC();
  sub_1C151F3DC();
  if ((objc_msgSend(v4, sel_isHidden) & 1) == 0)
  {
    objc_msgSend(v1, sel_bounds);
    CGRectGetHeight(v24);
  }
  sub_1C151F3FC();
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer], sel_setPath_, Mutable);
}

uint64_t type metadata accessor for DebugFormatRulerView()
{
  return self;
}

char *sub_1C0659424()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale] = 0x3FF0000000000000;
  double v2 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize];
  *double v2 = 0;
  v2[1] = 0;
  double v3 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentBounds];
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_canvasOffset];
  *uint64_t v4 = 0;
  v4[1] = 0;
  id v5 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame];
  _OWORD *v5 = 0u;
  v5[1] = 0u;
  uint64_t v6 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame];
  _OWORD *v6 = 0u;
  v6[1] = 0u;
  v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize] = 0x4040000000000000;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView;
  CGFloat v8 = (objc_class *)type metadata accessor for DebugFormatRulerEdgeView();
  id v9 = objc_allocWithZone(v8);
  CGAffineTransform v10 = v0;
  *(void *)&v0[v7] = sub_1C04C6B2C(0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView;
  id v12 = objc_allocWithZone(v8);
  *(void *)&v10[v11] = sub_1C04C6B2C(1);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView;
  *(void *)&v10[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatGridView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView;
  *(void *)&v10[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer;
  *(void *)&v10[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);

  v37.receiver = v10;
  v37.super_class = ObjectType;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v37, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView];
  CGRect v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView]);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView]);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView;
  CGRect v20 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView];
  CGRect v21 = self;
  id v22 = v20;
  id v23 = objc_msgSend(v21, sel_secondarySystemBackgroundColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v23);

  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[v19]);
  uint64_t v24 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer;
  unint64_t v25 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer];
  uint64_t v26 = self;
  id v27 = v25;
  id v28 = objc_msgSend(v26, sel_mainScreen);
  objc_msgSend(v28, sel_scale);
  double v30 = v29;

  objc_msgSend(v27, sel_setLineWidth_, 1.0 / v30);
  id v31 = *(id *)&v18[v24];
  id v32 = objc_msgSend(v21, sel_systemGrayColor);
  id v33 = objc_msgSend(v32, sel_CGColor);

  objc_msgSend(v31, sel_setStrokeColor_, v33);
  id v34 = objc_msgSend(v18, sel_layer);
  id v35 = *(id *)&v18[v24];
  objc_msgSend(v34, sel_addSublayer_, v35);

  return v18;
}

void sub_1C06597C4()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale] = 0x3FF0000000000000;
  double v2 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize];
  *(void *)double v2 = 0;
  *((void *)v2 + 1) = 0;
  double v3 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentBounds];
  *(_OWORD *)double v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_canvasOffset];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  id v5 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame];
  *(_OWORD *)id v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  uint64_t v6 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize] = 0x4040000000000000;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView;
  CGFloat v8 = (objc_class *)type metadata accessor for DebugFormatRulerEdgeView();
  id v9 = objc_allocWithZone(v8);
  *(void *)&v0[v7] = sub_1C04C6B2C(0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView;
  id v11 = objc_allocWithZone(v8);
  *(void *)&v0[v10] = sub_1C04C6B2C(1);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView;
  *(void *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatGridView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView;
  *(void *)&v1[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer;
  *(void *)&v1[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0659980()
{
  return UIContentSizeCategory.description.getter();
}

uint64_t FormatJSONDecoder.__allocating_init()()
{
  return sub_1C06599C4(MEMORY[0x1E4FBC860]);
}

uint64_t sub_1C06599C4(uint64_t a1)
{
  uint64_t v83 = a1;
  sub_1BFEFD2CC(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v79 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v82 = (char *)&v77 - v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v81 = (char *)&v77 - v6;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v77 - v8;
  uint64_t v10 = sub_1C152039C();
  uint64_t v86 = *(void **)(v10 - 8);
  uint64_t v87 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v77 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v78 = (char *)&v77 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v77 - v15;
  MEMORY[0x1F4188790](v16);
  CGRect v18 = (char *)&v77 - v17;
  uint64_t v19 = sub_1C1517D7C();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v22 = (char **)((char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1C1517D5C();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_1C1517DBC();
  *uint64_t v26 = sub_1C065A5E0;
  v26[1] = 0;
  (*(void (**)(uint64_t (**)(uint64_t, uint64_t), void, uint64_t))(v24 + 104))(v26, *MEMORY[0x1E4FAA7F0], v23);
  uint64_t v28 = v83;
  swift_retain();
  sub_1C1517D6C();
  *id v22 = sub_1C065A19C;
  v22[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E4FAA7F8], v19);
  sub_1C1517D8C();
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    double v30 = (unsigned __int8 *)(v28 + 32);
    uint64_t v31 = v29 - 1;
    do
    {
      int v32 = *v30++;
      BOOL v33 = v32 == 0;
      if (v32) {
        BOOL v34 = v31 == 0;
      }
      else {
        BOOL v34 = 1;
      }
      --v31;
    }
    while (!v34);
  }
  else
  {
    BOOL v33 = 0;
  }
  id v35 = v86;
  uint64_t v36 = (void (*)(unsigned char *, void))sub_1C1517DAC();
  sub_1C152038C();
  objc_super v37 = (void *)v35[6];
  uint64_t v38 = v87;
  uint64_t v85 = (char *)(v35 + 6);
  uint64_t v86 = v37;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v37)(v9, 1, v87);
  if (result == 1)
  {
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v84 = (void (*)(char *, char *, uint64_t))v35[4];
  v84(v18, v9, v38);
  uint64_t v89 = MEMORY[0x1E4FBB390];
  v88[0] = v33;
  sub_1C02E79E0((uint64_t)v88, (uint64_t)v18);
  v36(v90, 0);
  uint64_t v40 = *(void *)(v28 + 16);
  if (v40)
  {
    uint64_t v41 = (unsigned __int8 *)(v28 + 32);
    uint64_t v42 = v40 - 1;
    uint64_t v43 = v82;
    do
    {
      if (*v41++) {
        BOOL v45 = v42 == 0;
      }
      else {
        BOOL v45 = 1;
      }
      --v42;
    }
    while (!v45);
    uint64_t v46 = v87;
  }
  else
  {
    uint64_t v46 = v87;
    uint64_t v43 = v82;
  }
  uint64_t v47 = (void (*)(unsigned char *, void))sub_1C1517DAC();
  sub_1C151E38C();
  v47(v90, 0);
  uint64_t v48 = *(void *)(v28 + 16);
  if (v48)
  {
    uint64_t v49 = (unsigned __int8 *)(v28 + 32);
    uint64_t v50 = v48 - 1;
    do
    {
      int v51 = *v49++;
      BOOL v52 = v51 == 0;
      if (v51) {
        BOOL v53 = v50 == 0;
      }
      else {
        BOOL v53 = 1;
      }
      --v50;
    }
    while (!v53);
  }
  else
  {
    BOOL v52 = 0;
  }
  uint64_t v54 = (void (*)(unsigned char *, void))sub_1C1517DAC();
  uint64_t v55 = v81;
  sub_1C152038C();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v86)(v55, 1, v46);
  if (result == 1) {
    goto LABEL_52;
  }
  uint64_t v56 = (uint64_t)v80;
  v84(v80, v55, v46);
  uint64_t v89 = MEMORY[0x1E4FBB390];
  v88[0] = v52;
  sub_1C02E79E0((uint64_t)v88, v56);
  v54(v90, 0);
  uint64_t v57 = *(void *)(v28 + 16);
  if (v57)
  {
    char v58 = (unsigned __int8 *)(v28 + 32);
    uint64_t v59 = v57 - 1;
    uint64_t v60 = v43;
    do
    {
      int v61 = *v58++;
      BOOL v62 = v61 == 1;
    }
    while (v61 != 1 && v59-- != 0);
  }
  else
  {
    BOOL v62 = 0;
    uint64_t v60 = v43;
  }
  uint64_t v64 = (void (*)(unsigned char *, void))sub_1C1517DAC();
  sub_1C152038C();
  uint64_t v65 = v87;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v86)(v60, 1, v87);
  if (result == 1) {
    goto LABEL_53;
  }
  uint64_t v66 = (uint64_t)v78;
  v84(v78, v60, v65);
  uint64_t v89 = MEMORY[0x1E4FBB390];
  v88[0] = v62;
  sub_1C02E79E0((uint64_t)v88, v66);
  v64(v90, 0);
  uint64_t v67 = *(void *)(v28 + 16);
  if (v67)
  {
    uint64_t v68 = (unsigned __int8 *)(v28 + 32);
    uint64_t v69 = v67 - 1;
    do
    {
      int v70 = *v68++;
      BOOL v71 = v70 == 2;
    }
    while (v70 != 2 && v69-- != 0);
  }
  else
  {
    BOOL v71 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v73 = (void (*)(unsigned char *, void))sub_1C1517DAC();
  uint64_t v74 = v79;
  sub_1C152038C();
  uint64_t v75 = v87;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v86)(v74, 1, v87);
  if (result != 1)
  {
    uint64_t v76 = (uint64_t)v77;
    v84(v77, v74, v75);
    uint64_t v89 = MEMORY[0x1E4FBB390];
    v88[0] = v71;
    sub_1C02E79E0((uint64_t)v88, v76);
    v73(v90, 0);
    swift_release();
    return v27;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1C065A19C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFD2CC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C1520E9C();
  if (!v2)
  {
    uint64_t v26 = v7;
    uint64_t v27 = v10;
    uint64_t v28 = v5;
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    uint64_t v12 = sub_1C1520ABC();
    uint64_t v14 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    if (qword_1EB882038 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_1EB93C7C8;
    uint64_t v16 = (void *)sub_1C151E5EC();
    id v17 = objc_msgSend(v15, sel_dateFromString_, v16);

    uint64_t v18 = v28;
    uint64_t v19 = v4;
    if (v17)
    {
      uint64_t v20 = v26;
      sub_1C15162BC();

      uint64_t v21 = (uint64_t)v27;
      id v22 = v20;
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v23(v27, v22, v19);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v19);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v21, 1, v19) != 1)
      {
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v30, v21, v19);
      }
    }
    else
    {
      uint64_t v21 = (uint64_t)v27;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v27, 1, 1, v19);
    }
    sub_1BFF97BE4(v21);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v24 = sub_1C1520E7C();
    sub_1C065A6A0();
    swift_allocError();
    *uint64_t v25 = v12;
    v25[1] = v14;
    v25[2] = v24;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1C065A4D8()
{
  unint64_t result = sub_1C018D9F4((uint64_t)&unk_1F1B67540);
  qword_1EB93C788 = result;
  return result;
}

uint64_t FormatJSONDecoder.__deallocating_deinit()
{
  _s8NewsFeed17FormatJSONDecoderCfd_0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatJSONDecoder()
{
  uint64_t result = qword_1EB875650;
  if (!qword_1EB875650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C065A580()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FormatJSONDecoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatJSONDecoder);
}

uint64_t sub_1C065A5D8()
{
  return type metadata accessor for FormatJSONDecoder();
}

uint64_t sub_1C065A5E0(uint64_t a1, uint64_t a2)
{
  if (qword_1EB882A70 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EB93C788;
  if (!*(void *)(qword_1EB93C788 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1BFEF2D8C(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    return a1;
  }
  a1 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1C065A6A0()
{
  unint64_t result = qword_1EA19CE40;
  if (!qword_1EA19CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CE40);
  }
  return result;
}

uint64_t ThumbnailProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ThumbnailProcessor.init()()
{
  return v0;
}

uint64_t ThumbnailProcessor.deinit()
{
  return v0;
}

uint64_t ThumbnailProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id _s8NewsFeed18ThumbnailProcessorC7processySo7UIImageCSg5TeaUI25ProcessedImageRequestType_pF_0(uint64_t a1)
{
  sub_1BFC66384(a1, (uint64_t)v8);
  sub_1BFD05974();
  type metadata accessor for ThumbnailProcessorRequest();
  if (!swift_dynamicCast()) {
    return 0;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v7 + 24), *(void *)(v7 + 48));
  sub_1C151A71C();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1((void *)(v7 + 24), *(void *)(v7 + 48));
    id v4 = (id)sub_1C151A6EC();
    if (v4) {
      goto LABEL_4;
    }
LABEL_7:
    swift_release();
    return v4;
  }
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  uint64_t v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithContentsOfFile_, v3);

  if (!v4) {
    goto LABEL_7;
  }
LABEL_4:
  id v5 = v4;
  id v4 = (id)sub_1C151FAAC();
  swift_release();

  return v4;
}

uint64_t type metadata accessor for ThumbnailProcessor()
{
  return self;
}

uint64_t method lookup function for ThumbnailProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThumbnailProcessor);
}

uint64_t dispatch thunk of ThumbnailProcessor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t FormatCustomNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatCustomNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 104);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatCustomNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatCustomNode.name.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)(v1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

unint64_t FormatCustomNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 56);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatCustomNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
  return swift_retain();
}

uint64_t FormatCustomNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatCustomNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatCustomNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 96);
}

uint64_t FormatCustomNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatCustomNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C065AC58(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 104);
  *(void *)(v3 + 104) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatCustomNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 104);
  *(void *)(v1 + 104) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatCustomNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t FormatCustomNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatCustomNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNode.__allocating_init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11)
{
  uint64_t v17 = swift_allocObject();
  FormatCustomNode.init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v17;
}

uint64_t FormatCustomNode.init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11)
{
  uint64_t v18 = *a3;
  uint64_t v19 = *a4;
  uint64_t v20 = *a5;
  uint64_t v22 = *a10;
  swift_beginAccess();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = v18;
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(a3 + 1);
  *(void *)(v11 + 56) = v19;
  *(void *)(v11 + 64) = v20;
  swift_beginAccess();
  *(void *)(v11 + 72) = a6;
  *(void *)(v11 + 80) = a7;
  *(void *)(v11 + 88) = a8;
  swift_beginAccess();
  *(void *)(v11 + 96) = a9;
  swift_beginAccess();
  *(void *)(v11 + 104) = v22;
  swift_beginAccess();
  *(unsigned char *)(v11 + 112) = a11;
  return v11;
}

uint64_t FormatCustomNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 104));
  return v0;
}

uint64_t FormatCustomNode.__deallocating_deinit()
{
  FormatCustomNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C065B070(uint64_t a1)
{
  uint64_t result = sub_1C065B1B4(&qword_1EA19CE48);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C065B0B4(void *a1)
{
  a1[1] = sub_1C065B1B4(&qword_1EB87E400);
  a1[2] = sub_1C065B1B4(&qword_1EB85FFE8);
  uint64_t result = sub_1C065B1B4(&qword_1EA19CE50);
  a1[3] = result;
  return result;
}

uint64_t sub_1C065B140(void *a1)
{
  return FormatCustomNode.encode(to:)(a1);
}

uint64_t sub_1C065B164(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed16FormatCustomNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C065B170(uint64_t a1)
{
  uint64_t result = sub_1C065B1B4(&qword_1EA19CE58);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C065B1B4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatCustomNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C065B1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>)
{
  uint64_t v17 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v19 = *(void *)(a4 + 16);
  uint64_t v18 = *(void *)(a4 + 24);
  uint64_t v20 = *(void *)(v17 + 40);
  if (!v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = v18;
    uint64_t v29 = v19;
    uint64_t v21 = *(void *)(a4 + 64);
    if (v21) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v22 = 0;
    goto LABEL_6;
  }
  uint64_t v35 = *(void *)(v17 + 32);
  uint64_t v36 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v28 = v20;
  uint64_t v29 = v35;
  uint64_t v19 = *(void *)(a4 + 16);
  uint64_t v18 = *(void *)(a4 + 24);
  uint64_t v21 = *(void *)(a4 + 64);
  if (!v21) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v22 = *(void *)(v21 + 16);
  swift_retain();
LABEL_6:
  uint64_t v23 = swift_allocObject();
  uint64_t v37 = v22;
  swift_beginAccess();
  uint64_t v24 = *(void *)(a4 + 96);
  swift_beginAccess();
  unint64_t v25 = *(void *)(a4 + 104);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v25);
  sub_1BFE6EF70(a3, &v34);
  sub_1BFF0056C(v25);
  swift_beginAccess();
  char v26 = *(unsigned char *)(a4 + 112);
  swift_retain();
  sub_1C1517EFC();
  type metadata accessor for FormatCustomNodeLayoutAttributes();
  swift_allocObject();
  *(void *)(v23 + 16) = FormatCustomNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:style:contextLayoutOptions:)(a1, a2, v29, v28, v19, v18, &v37, v24, a7, a8, a9, a10, &v34, v26, a5, v33);
  *a6 = v23 | 0x5000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C065B448@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C065B498@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C065B4E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return result;
}

uint64_t sub_1C065B530(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 96) = v2;
  return result;
}

unint64_t sub_1C065B574@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 104);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C065B5C4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 112);
  return result;
}

uint64_t sub_1C065B60C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 112) = v2;
  return result;
}

uint64_t method lookup function for FormatCustomNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatCustomNode);
}

uint64_t dispatch thunk of FormatCustomNode.__allocating_init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1C065B68C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C065B6C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v8 = (void *)a2[4];
    swift_bridgeObjectRetain();
    if ((unint64_t)v8 >= 4) {
      id v9 = v8;
    }
    uint64_t v10 = a2[5];
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_1C065B7DC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 32);
  if ((unint64_t)v4 >= 4) {

  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_1C065B880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain();
  if ((unint64_t)v7 >= 4) {
    id v8 = v7;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

void *sub_1C065B948(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = (void *)a1[4];
  uint64_t v7 = (void *)a2[4];
  if ((unint64_t)v6 >= 4)
  {
    if ((unint64_t)v7 >= 4)
    {
      id v9 = v7;
      uint64_t v10 = (void *)a1[4];
      a1[4] = v7;
    }
    else
    {

      a1[4] = a2[4];
    }
  }
  else
  {
    if ((unint64_t)v7 >= 4) {
      id v8 = v7;
    }
    a1[4] = v7;
  }
  a1[5] = a2[5];
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1C065BA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C065BB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void **)(a1 + 32);
  unint64_t v8 = *(void *)(a2 + 32);
  if ((unint64_t)v7 >= 4)
  {
    if (v8 >= 4)
    {
      *(void *)(a1 + 32) = v8;

      goto LABEL_6;
    }
  }
  *(void *)(a1 + 32) = v8;
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1C065BBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C065BC0C);
}

uint64_t sub_1C065BC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C065BCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C065BCEC);
}

uint64_t sub_1C065BCEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FormatDebuggerContext()
{
  uint64_t result = qword_1EA19CE68;
  if (!qword_1EA19CE68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C065BDFC()
{
  sub_1C065C2D0(319, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C065BEBC()
{
  uint64_t v0 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1F4188790](v0);
  char v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C065C2D0(0, &qword_1EB881428, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t v6 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatDebuggerContext();
  sub_1C065C2D0(0, &qword_1EA19CE60, MEMORY[0x1E4FAB048]);
  sub_1C1518E0C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C065C330((uint64_t)v5);
    return 0;
  }
  else
  {
    sub_1C065C3A8((uint64_t)v5, (uint64_t)v9);
    sub_1C065C40C((uint64_t)&v9[*(int *)(v6 + 24)], (uint64_t)v2);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_release();
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C065C470();
      uint64_t v13 = &v2[*(int *)(v12 + 48)];
      uint64_t v16 = 0x203A74756F79614CLL;
      unint64_t v17 = 0xE800000000000000;
      sub_1C065C1A4();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v10 = v16;
      sub_1C065C4E4((uint64_t)v9);
      sub_1BFF81FF0();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    else
    {
      uint64_t v16 = 0x3A676E69646E6942;
      unint64_t v17 = 0xE900000000000020;
      sub_1C065C1A4();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v10 = v16;
      sub_1C065C4E4((uint64_t)v9);
    }
  }
  return v10;
}

uint64_t sub_1C065C1A4()
{
  switch(*(void *)(v0 + 32))
  {
    case 0:
      strcpy((char *)v2, "breakpoint (");
      BYTE5(v2[1]) = 0;
      HIWORD(v2[1]) = -5120;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t result = v2[0];
      break;
    case 1:
      uint64_t result = 0x65766F2070657473;
      break;
    case 2:
      uint64_t result = 0x6E692070657473;
      break;
    case 3:
      uint64_t result = 0x74756F2070657473;
      break;
    default:
      uint64_t result = 0x726F727265;
      break;
  }
  return result;
}

void sub_1C065C2D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatDebuggerCallStackFrame(255);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C065C330(uint64_t a1)
{
  sub_1C065C2D0(0, &qword_1EB881428, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C065C3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C065C40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C065C470()
{
  if (!qword_1EB8882D0)
  {
    type metadata accessor for FormatNodeContext();
    sub_1BFF81FF0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8882D0);
    }
  }
}

uint64_t sub_1C065C4E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Localized()
{
  return self;
}

uint64_t PuzzleAccessoryButtonsConfig.buttons.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::PuzzleAccessoryButtonsConfig_optional __swiftcall PuzzleAccessoryButtonsConfig.init(with:)(Swift::OpaquePointer with)
{
  uint64_t v2 = v1;
  uint64_t v3 = *((void *)with._rawValue + 2);
  if (v3)
  {
    uint64_t v15 = v1;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v7 = swift_bridgeObjectRetain();
      PuzzleAccessoryButtonConfig.init(with:)(v7, &v18);
      uint64_t v8 = v19;
      if (v19)
      {
        uint64_t v9 = v18;
        long long v16 = v21;
        long long v17 = v20;
        uint64_t v10 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1C0EE297C(0, v5[2] + 1, 1, v5);
        }
        unint64_t v12 = v5[2];
        unint64_t v11 = v5[3];
        if (v12 >= v11 >> 1) {
          uint64_t v5 = sub_1C0EE297C((void *)(v11 > 1), v12 + 1, 1, v5);
        }
        v5[2] = v12 + 1;
        uint64_t v6 = &v5[7 * v12];
        v6[4] = v9;
        v6[5] = v8;
        *((_OWORD *)v6 + 3) = v17;
        *((_OWORD *)v6 + 4) = v16;
        v6[10] = v10;
      }
      ++v4;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
    uint64_t v2 = v15;
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = (void *)swift_bridgeObjectRelease();
  *uint64_t v2 = v5;
  result.value.buttons._rawValue = v13;
  result.is_nil = v14;
  return result;
}

void PuzzleAccessoryButtonConfig.init(with:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1BFEF2D8C(25705, 0xE200000000000000);
    if (v5)
    {
      sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v52);
      if (swift_dynamicCast())
      {
        uint64_t v7 = v50;
        uint64_t v6 = v51;
        if (*(void *)(a1 + 16))
        {
          unint64_t v8 = sub_1BFEF2D8C(1954047348, 0xE400000000000000);
          if (v9)
          {
            sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v52);
            int v10 = swift_dynamicCast();
            if (v10) {
              uint64_t v11 = v50;
            }
            else {
              uint64_t v11 = 0;
            }
            if (v10) {
              uint64_t v12 = v51;
            }
            else {
              uint64_t v12 = 0;
            }
            uint64_t v47 = v12;
            if (!*(void *)(a1 + 16)) {
              goto LABEL_31;
            }
LABEL_22:
            unint64_t v23 = sub_1BFEF2D8C(1852793705, 0xE400000000000000);
            if (v24)
            {
              sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v52);
              int v25 = swift_dynamicCast();
              if (v25) {
                uint64_t v26 = v50;
              }
              else {
                uint64_t v26 = 0;
              }
              if (v25) {
                uint64_t v27 = v51;
              }
              else {
                uint64_t v27 = 0;
              }
              if (!*(void *)(a1 + 16)) {
                goto LABEL_32;
              }
            }
            else
            {
              uint64_t v26 = 0;
              uint64_t v27 = 0;
              if (!*(void *)(a1 + 16)) {
                goto LABEL_32;
              }
            }
            unint64_t v43 = sub_1BFEF2D8C(1970169197, 0xE400000000000000);
            if (v44)
            {
              sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v43, (uint64_t)&v52);
LABEL_33:
              swift_bridgeObjectRelease();
              if (*((void *)&v53 + 1))
              {
                sub_1C065D978();
                if (swift_dynamicCast())
                {
                  uint64_t v46 = v51;
                  uint64_t v28 = *(void *)(v50 + 16);
                  if (v28)
                  {
                    BOOL v45 = a2;
                    swift_bridgeObjectRetain();
                    uint64_t v29 = 0;
                    uint64_t v30 = v28 - 1;
                    uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
                    while (1)
                    {
                      uint64_t v32 = swift_bridgeObjectRetain();
                      PuzzleMenuConfig.init(with:)(v32, (uint64_t)v48);
                      sub_1C065D9D0((uint64_t)v48, (uint64_t)&v50);
                      sub_1C065D9D0((uint64_t)&v50, (uint64_t)&v52);
                      if (sub_1C065DA58((uint64_t)&v52) != 1)
                      {
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                          uint64_t v31 = sub_1C0EE5E8C(0, v31[2] + 1, 1, v31);
                        }
                        unint64_t v34 = v31[2];
                        unint64_t v33 = v31[3];
                        if (v34 >= v33 >> 1) {
                          uint64_t v31 = sub_1C0EE5E8C((void *)(v33 > 1), v34 + 1, 1, v31);
                        }
                        sub_1C065D9D0((uint64_t)&v50, (uint64_t)v48);
                        v31[2] = v34 + 1;
                        uint64_t v35 = &v31[18 * v34];
                        v35[2] = v48[0];
                        long long v36 = v48[4];
                        long long v38 = v48[1];
                        long long v37 = v48[2];
                        v35[5] = v48[3];
                        v35[6] = v36;
                        void v35[3] = v38;
                        v35[4] = v37;
                        long long v40 = v48[6];
                        long long v39 = v49[0];
                        long long v41 = v48[5];
                        *(_OWORD *)((char *)v35 + 153) = *(_OWORD *)((char *)v49 + 9);
                        v35[8] = v40;
                        v35[9] = v39;
                        v35[7] = v41;
                      }
                      if (v30 == v29) {
                        break;
                      }
                      ++v29;
                    }
                    swift_bridgeObjectRelease_n();
                    a2 = v45;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
                  }
                  uint64_t v6 = v46;
                  uint64_t v42 = v47;
                  goto LABEL_53;
                }
              }
              else
              {
                sub_1BFEFE4A0((uint64_t)&v52);
              }
              uint64_t v42 = v47;
              uint64_t v31 = 0;
LABEL_53:
              *a2 = v7;
              a2[1] = v6;
              a2[2] = v11;
              a2[3] = v42;
              a2[4] = v26;
              a2[5] = v27;
              a2[6] = (uint64_t)v31;
              return;
            }
LABEL_32:
            long long v52 = 0u;
            long long v53 = 0u;
            goto LABEL_33;
          }
          uint64_t v11 = 0;
          uint64_t v47 = 0;
          if (*(void *)(a1 + 16)) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v47 = 0;
          uint64_t v11 = 0;
        }
LABEL_31:
        uint64_t v27 = 0;
        uint64_t v26 = 0;
        goto LABEL_32;
      }
    }
  }
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1C15198DC();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain();
  Swift::Bool v14 = sub_1C15198AC();
  os_log_type_t v15 = sub_1C151F36C();
  if (os_log_type_enabled(v14, v15))
  {
    long long v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(void *)&long long v52 = v17;
    *(_DWORD *)long long v16 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v18 = a2;
    uint64_t v19 = sub_1C151E34C();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v22 = v19;
    a2 = v18;
    uint64_t v50 = sub_1BFDA76EC(v22, v21, (uint64_t *)&v52);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v14, v15, "Failed parsing PuzzleAccessoryButtonConfig. Invalid id entry: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v17, -1, -1);
    MEMORY[0x1C18C9B00](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a2[6] = 0;
  *((_OWORD *)a2 + 1) = 0u;
  *((_OWORD *)a2 + 2) = 0u;
  *(_OWORD *)a2 = 0u;
}

uint64_t sub_1C065CBE0()
{
  return 0x736E6F74747562;
}

uint64_t sub_1C065CBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E6F74747562 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C065CC90(uint64_t a1)
{
  unint64_t v2 = sub_1C065DA7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C065CCCC(uint64_t a1)
{
  unint64_t v2 = sub_1C065DA7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleAccessoryButtonsConfig.encode(to:)(void *a1)
{
  sub_1C065DCB0(0, &qword_1EA19CE80, (uint64_t (*)(void))sub_1C065DA7C, (uint64_t)&type metadata for PuzzleAccessoryButtonsConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C065DA7C();
  sub_1C1520F0C();
  v10[3] = v8;
  sub_1BFEFDED8(0, &qword_1EA19CE90, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, MEMORY[0x1E4FBB320]);
  sub_1C065DB24(&qword_1EA19CE98, (void (*)(void))sub_1C065DAD0);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryButtonsConfig.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_1C065DCB0(0, &qword_1EA19CEA8, (uint64_t (*)(void))sub_1C065DA7C, (uint64_t)&type metadata for PuzzleAccessoryButtonsConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C065DA7C();
  sub_1C1520EBC();
  if (!v2)
  {
    char v9 = v12;
    sub_1BFEFDED8(0, &qword_1EA19CE90, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, MEMORY[0x1E4FBB320]);
    sub_1C065DB24(&qword_1EA19CEB0, (void (*)(void))sub_1C065DBB4);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *char v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C065D0FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PuzzleAccessoryButtonsConfig.init(from:)(a1, a2);
}

uint64_t sub_1C065D114(void *a1)
{
  return PuzzleAccessoryButtonsConfig.encode(to:)(a1);
}

uint64_t PuzzleAccessoryButtonConfig.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryButtonConfig.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryButtonConfig.icon.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryButtonConfig.menuItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C065D1C4()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1954047348;
      break;
    case 2:
      uint64_t result = 1852793705;
      break;
    case 3:
      uint64_t result = 0x6D657449756E656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C065D24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C065E2AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C065D274(uint64_t a1)
{
  unint64_t v2 = sub_1C065DC08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C065D2B0(uint64_t a1)
{
  unint64_t v2 = sub_1C065DC08();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleAccessoryButtonConfig.encode(to:)(void *a1)
{
  sub_1C065DCB0(0, &qword_1EA19CEC0, (uint64_t (*)(void))sub_1C065DC08, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v8;
  uint64_t v9 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v9;
  uint64_t v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C065DC08();
  sub_1C1520F0C();
  char v24 = 0;
  uint64_t v10 = v19;
  sub_1C15207CC();
  if (!v10)
  {
    uint64_t v11 = v14;
    char v23 = 1;
    sub_1C152074C();
    char v22 = 2;
    sub_1C152074C();
    uint64_t v20 = v11;
    char v21 = 3;
    sub_1BFEFDED8(0, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
    sub_1C065DD18(&qword_1EA19CED0, (void (*)(void))sub_1C065DC5C);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryButtonConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v30 = a2;
  sub_1C065DCB0(0, &qword_1EA19CEE0, (uint64_t (*)(void))sub_1C065DC08, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v24 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C065DC08();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = a1;
  uint64_t v9 = v6;
  char v35 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  char v34 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C152060C();
  uint64_t v28 = v15;
  uint64_t v26 = v14;
  uint64_t v27 = v11;
  char v33 = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C152060C();
  uint64_t v18 = v17;
  uint64_t v25 = v16;
  sub_1BFEFDED8(0, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
  char v32 = 3;
  sub_1C065DD18(&qword_1EA19CEE8, (void (*)(void))sub_1C065DDA8);
  swift_bridgeObjectRetain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v20 = v31;
  swift_bridgeObjectRetain();
  uint64_t v21 = (uint64_t)v29;
  char v22 = v30;
  uint64_t v23 = v28;
  *uint64_t v30 = v27;
  v22[1] = v13;
  v22[2] = v26;
  v22[3] = v23;
  v22[4] = v25;
  v22[5] = v18;
  v22[6] = v20;
  __swift_destroy_boxed_opaque_existential_1(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C065D948@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PuzzleAccessoryButtonConfig.init(from:)(a1, a2);
}

uint64_t sub_1C065D960(void *a1)
{
  return PuzzleAccessoryButtonConfig.encode(to:)(a1);
}

void sub_1C065D978()
{
  if (!qword_1EA19BBA8)
  {
    sub_1BFFB4FA4();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19BBA8);
    }
  }
}

uint64_t sub_1C065D9D0(uint64_t a1, uint64_t a2)
{
  sub_1BFEFDED8(0, &qword_1EA19CE78, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C065DA58(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

unint64_t sub_1C065DA7C()
{
  unint64_t result = qword_1EA19CE88;
  if (!qword_1EA19CE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CE88);
  }
  return result;
}

unint64_t sub_1C065DAD0()
{
  unint64_t result = qword_1EA19CEA0;
  if (!qword_1EA19CEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CEA0);
  }
  return result;
}

uint64_t sub_1C065DB24(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEFDED8(255, &qword_1EA19CE90, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C065DBB4()
{
  unint64_t result = qword_1EA19CEB8;
  if (!qword_1EA19CEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CEB8);
  }
  return result;
}

unint64_t sub_1C065DC08()
{
  unint64_t result = qword_1EA19CEC8;
  if (!qword_1EA19CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CEC8);
  }
  return result;
}

unint64_t sub_1C065DC5C()
{
  unint64_t result = qword_1EA19CED8;
  if (!qword_1EA19CED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CED8);
  }
  return result;
}

void sub_1C065DCB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C065DD18(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEFDED8(255, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C065DDA8()
{
  unint64_t result = qword_1EA19CEF0;
  if (!qword_1EA19CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CEF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonsConfig()
{
  return &type metadata for PuzzleAccessoryButtonsConfig;
}

void *assignWithCopy for PuzzleAccessoryButtonConfig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonConfig()
{
  return &type metadata for PuzzleAccessoryButtonConfig;
}

unsigned char *storeEnumTagSinglePayload for PuzzleAccessoryButtonConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C065DF90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonConfig.CodingKeys()
{
  return &type metadata for PuzzleAccessoryButtonConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PuzzleAccessoryButtonsConfig.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C065E064);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonsConfig.CodingKeys()
{
  return &type metadata for PuzzleAccessoryButtonsConfig.CodingKeys;
}

unint64_t sub_1C065E0A0()
{
  unint64_t result = qword_1EA19CEF8;
  if (!qword_1EA19CEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CEF8);
  }
  return result;
}

unint64_t sub_1C065E0F8()
{
  unint64_t result = qword_1EA19CF00;
  if (!qword_1EA19CF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF00);
  }
  return result;
}

unint64_t sub_1C065E150()
{
  unint64_t result = qword_1EA19CF08;
  if (!qword_1EA19CF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF08);
  }
  return result;
}

unint64_t sub_1C065E1A8()
{
  unint64_t result = qword_1EA19CF10;
  if (!qword_1EA19CF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF10);
  }
  return result;
}

unint64_t sub_1C065E200()
{
  unint64_t result = qword_1EA19CF18;
  if (!qword_1EA19CF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF18);
  }
  return result;
}

unint64_t sub_1C065E258()
{
  unint64_t result = qword_1EA19CF20;
  if (!qword_1EA19CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF20);
  }
  return result;
}

uint64_t sub_1C065E2AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D657449756E656DLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C065E460@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v9 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v11 = v3[2];
  uint64_t v10 = v3[3];
  if ((v10 & 4) != 0)
  {
    v31[0] = *v3;
    swift_retain();
    uint64_t v19 = (void *)sub_1BFF4DC90(a1, a2, 0, 0);
    if (v4)
    {
      return sub_1C0007E38(v9, v8, v11, v10);
    }
    else
    {
      uint64_t v20 = v19;
      uint64_t v21 = a3;
      id v22 = objc_msgSend(v19, sel_string);

      uint64_t v23 = v11;
      uint64_t v24 = sub_1C151E62C();
      uint64_t v26 = v25;

      uint64_t result = sub_1C0007E38(v9, v8, v23, v10);
      *uint64_t v21 = v24;
      v21[1] = v26;
      *((unsigned char *)v21 + 16) = 0;
    }
  }
  else
  {
    uint64_t v29 = a3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C125B438(a2, (uint64_t)a1, v9, v8, v11, v10, v31);
    v31[4] = &v28;
    uint64_t v13 = v31[0];
    uint64_t v14 = v31[1];
    uint64_t v30 = v11;
    uint64_t v15 = v31[2];
    MEMORY[0x1F4188790](v12);
    v27[2] = a1;
    v27[3] = a2;
    uint64_t v16 = sub_1C125C4A0((uint64_t)a1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C065EBF8, (uint64_t)v27, v13, v14, v15);
    sub_1C0007E38(v9, v8, v30, v10);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
    if (!v4)
    {
      uint64_t v18 = v29;
      uint64_t *v29 = (uint64_t)v16;
      v18[1] = 0;
      *((unsigned char *)v18 + 16) = 1;
    }
  }
  return result;
}

void sub_1C065E65C(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = (void *)sub_1BFF4DC90(a1, a2, 0, 0);
  if (!v3)
  {
    char v6 = v5;
    id v7 = objc_msgSend(v5, sel_string);

    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;

    *a3 = v8;
    a3[1] = v10;
  }
}

uint64_t _s8NewsFeed15FormatMenuTitleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  if ((v4 & 4) != 0)
  {
    if ((v8 & 4) != 0)
    {
      uint64_t v17 = *a2;
      uint64_t v18 = v3;
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007DB4(v3, v2, v5, v4);
      sub_1C0007DB4(v3, v2, v5, v4);
      sub_1C0007DB4(v7, v6, v9, v8);
      char v11 = static FormatTextContent.== infix(_:_:)(&v18, (unint64_t *)&v17);
      sub_1C0007E38(v3, v2, v5, v4);
      sub_1C0007E38(v7, v6, v9, v8);
      sub_1C0007E38(v7, v6, v9, v8);
      sub_1C0007E38(v3, v2, v5, v4);
      return v11 & 1;
    }
    goto LABEL_7;
  }
  if ((v8 & 4) != 0)
  {
LABEL_7:
    sub_1C0007DB4(*a1, v2, v5, v4);
    sub_1C0007DB4(v7, v6, v9, v8);
    sub_1C0007E38(v3, v2, v5, v4);
    uint64_t v12 = v7;
    uint64_t v13 = v6;
    uint64_t v14 = v9;
    char v15 = v8;
LABEL_8:
    sub_1C0007E38(v12, v13, v14, v15);
    goto LABEL_9;
  }
  sub_1C0007DB4(*a2, a2[1], v9, v8);
  sub_1C0007DB4(v3, v2, v5, v4);
  sub_1C0007DB4(v3, v2, v5, v4);
  sub_1C0007DB4(v7, v6, v9, v8);
  if ((sub_1C00EF598(v3, v7) & 1) == 0)
  {
    sub_1C0007E38(v3, v2, v5, v4);
    sub_1C0007E38(v7, v6, v9, v8);
    sub_1C0007E38(v7, v6, v9, v8);
    uint64_t v12 = v3;
    uint64_t v13 = v2;
    uint64_t v14 = v5;
    char v15 = v4;
    goto LABEL_8;
  }
  char v10 = sub_1C00F58D4(v2, v5, v4, v6, v9, v8);
  sub_1C0007E38(v3, v2, v5, v4);
  sub_1C0007E38(v7, v6, v9, v8);
  sub_1C0007E38(v7, v6, v9, v8);
  sub_1C0007E38(v3, v2, v5, v4);
  if ((v10 & 1) == 0)
  {
LABEL_9:
    char v11 = 0;
    return v11 & 1;
  }
  char v11 = 1;
  return v11 & 1;
}

unint64_t sub_1C065E994(uint64_t a1)
{
  unint64_t result = sub_1C065E9BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C065E9BC()
{
  unint64_t result = qword_1EA19CF28;
  if (!qword_1EA19CF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF28);
  }
  return result;
}

unint64_t sub_1C065EA10(void *a1)
{
  a1[1] = sub_1BFC9B168();
  a1[2] = sub_1BFFEF56C();
  unint64_t result = sub_1C065EA48();
  a1[3] = result;
  return result;
}

unint64_t sub_1C065EA48()
{
  unint64_t result = qword_1EA19CF30;
  if (!qword_1EA19CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF30);
  }
  return result;
}

uint64_t destroy for FormatMenuTitle(uint64_t *a1)
{
  return sub_1C0007E38(*a1, a1[1], a1[2], a1[3]);
}

uint64_t *initializeWithCopy for FormatMenuTitle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1C0007DB4(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for FormatMenuTitle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1C0007DB4(*a2, v4, v5, v6);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1C0007E38(v7, v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for FormatMenuTitle(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  long long v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_1C0007E38(v3, v5, v4, v6);
  return a1;
}

uint64_t sub_1C065EBA8(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 24) >> 2) & 1;
}

uint64_t sub_1C065EBB4(uint64_t result)
{
  *(void *)(result + 24) &= ~4uLL;
  return result;
}

uint64_t sub_1C065EBC4(uint64_t result, char a2)
{
  unint64_t v2 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFF8 | (4 * (a2 & 1u));
  *(void *)(result + 8) &= 0xFFFFFFFFFFFFFF8uLL;
  *(void *)(result + 24) = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuTitle()
{
  return &type metadata for FormatMenuTitle;
}

void sub_1C065EBF8(uint64_t *a1@<X8>)
{
  sub_1C065E65C(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C065EC24(unsigned __int8 *a1, char *a2)
{
  return sub_1C1483280(*a1, *a2);
}

uint64_t sub_1C065EC30()
{
  return sub_1C015CEE4();
}

uint64_t sub_1C065EC38()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C065ED10()
{
  return sub_1C044E114();
}

uint64_t FormatNodeAccessibilityRole.Position.position.getter()
{
  return *(void *)v0;
}

BOOL static FormatNodeAccessibilityRole.Position.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C065ED50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNodeAccessibilityRole.Position.init(from:)(a1, a2);
}

uint64_t sub_1C065ED68(void *a1)
{
  return FormatNodeAccessibilityRole.Position.encode(to:)(a1);
}

uint64_t _s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((unsigned __int8 *)a1 + 8);
  uint64_t v4 = *a2;
  unsigned int v5 = *((unsigned __int8 *)a2 + 8);
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      if ((v5 & 0xC0) != 0x40) {
        return 0;
      }
      goto LABEL_6;
    }
    uint64_t v10 = v3 ^ 0x80;
    int v11 = v5 & 0xC0;
    if (!(v2 | v10))
    {
      BOOL v12 = v11 == 128 && v4 == 0;
      return v12 && v5 == 128;
    }
    BOOL v13 = v11 == 128 && v4 == 1;
    return v13 && v5 == 128;
  }
  if (v5 >= 0x40) {
    return 0;
  }
LABEL_6:
  unsigned int v6 = v5 & 1;
  BOOL v8 = (v5 & 1) == 0 && v2 == v4;
  if (v3) {
    return v6;
  }
  else {
    return v8;
  }
}

BOOL _s8NewsFeed23FormatAccessibilityRoleO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 5) {
    return v3 == 5;
  }
  if (v2 == 6) {
    return v3 == 6;
  }
  if ((v3 - 5) < 2) {
    return 0;
  }
  BOOL v5 = v3 == 4;
  BOOL v7 = v3 == v2 && v3 != 4;
  if (v2 == 4) {
    return v5;
  }
  else {
    return v7;
  }
}

uint64_t sub_1C065EE94(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C065F0F4(a1, a2, a3, (uint64_t (*)(void))sub_1BFD86F6C, (uint64_t (*)(void))sub_1BFFB3984, (uint64_t (*)(void))sub_1C065EED4);
}

unint64_t sub_1C065EED4()
{
  unint64_t result = qword_1EA19CF38;
  if (!qword_1EA19CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF38);
  }
  return result;
}

unint64_t sub_1C065EF28(uint64_t a1)
{
  unint64_t result = sub_1C065EF50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C065EF50()
{
  unint64_t result = qword_1EA19CF40;
  if (!qword_1EA19CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF40);
  }
  return result;
}

uint64_t sub_1C065EFA4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C065F0F4(a1, a2, a3, (uint64_t (*)(void))sub_1BFD0A510, (uint64_t (*)(void))sub_1BFD3A9B0, (uint64_t (*)(void))sub_1C065EFE4);
}

unint64_t sub_1C065EFE4()
{
  unint64_t result = qword_1EA19CF48;
  if (!qword_1EA19CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF48);
  }
  return result;
}

unint64_t sub_1C065F038(uint64_t a1)
{
  unint64_t result = sub_1C065F060();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C065F060()
{
  unint64_t result = qword_1EA19CF50;
  if (!qword_1EA19CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF50);
  }
  return result;
}

uint64_t sub_1C065F0B4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C065F0F4(a1, a2, a3, (uint64_t (*)(void))sub_1BFE3CF9C, (uint64_t (*)(void))sub_1BFDD5084, (uint64_t (*)(void))sub_1C065F148);
}

uint64_t sub_1C065F0F4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C065F148()
{
  unint64_t result = qword_1EA19CF58;
  if (!qword_1EA19CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF58);
  }
  return result;
}

uint64_t sub_1C065F1D8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 4;
  unsigned int v3 = v1 - 4;
  if (!v2) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1C065F1F4(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 4;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNodeAccessibilityRole(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1C065F258(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C065F278(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(unsigned char *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeAccessibilityRole()
{
  return &type metadata for FormatNodeAccessibilityRole;
}

ValueMetadata *type metadata accessor for FormatNodeAccessibilityRole.Position()
{
  return &type metadata for FormatNodeAccessibilityRole.Position;
}

ValueMetadata *type metadata accessor for FormatAccessibilityRole.CodingType()
{
  return &type metadata for FormatAccessibilityRole.CodingType;
}

unint64_t sub_1C065F300()
{
  unint64_t result = qword_1EA19CF60;
  if (!qword_1EA19CF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF60);
  }
  return result;
}

void sub_1C065F354(void **a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v3 = *a1;
  switch(*v2)
  {
    case 1:
      id v6 = FCIssue.coverImagePrimaryLimitedColor.getter();
      if (v6) {
        goto LABEL_7;
      }
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = v7;
      char v9 = 30;
      goto LABEL_17;
    case 2:
      id v6 = FCIssue.coverImagePrimaryExtraLimitedColor.getter();
      if (v6)
      {
LABEL_7:
        uint64_t v10 = v6;
        sub_1C151F9DC();
        double v12 = v11;
        double v14 = v13;
        double v16 = v15;
        uint64_t v18 = v17;
        uint64_t v8 = swift_allocObject();
        *(double *)(v8 + 16) = v12 * 255.0;
        *(double *)(v8 + 24) = v14 * 255.0;
        *(double *)(v8 + 32) = v16 * 255.0;
        *(void *)(v8 + 40) = v18;
        *(unsigned char *)(v8 + 48) = 0;
        goto LABEL_14;
      }
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = v7;
      char v9 = 31;
      goto LABEL_17;
    case 3:
      id v5 = objc_msgSend(v3, sel_coverImageBackgroundColor);
      if (!v5) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 4:
      id v5 = objc_msgSend(v3, sel_coverImageTextColor);
      if (v5) {
        goto LABEL_13;
      }
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = v7;
      char v9 = 21;
      goto LABEL_17;
    case 5:
      id v5 = objc_msgSend(v3, sel_coverImageAccentColor);
      if (v5) {
        goto LABEL_13;
      }
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = v7;
      char v9 = 8;
      goto LABEL_17;
    default:
      id v5 = objc_msgSend(v3, sel_coverImagePrimaryColor);
      if (v5)
      {
LABEL_13:
        uint64_t v10 = v5;
        uint64_t v8 = swift_allocObject();
        objc_msgSend(v10, sel_red);
        double v20 = v19 * 255.0;
        objc_msgSend(v10, sel_green);
        double v22 = v21 * 255.0;
        objc_msgSend(v10, sel_blue);
        double v24 = v23 * 255.0;
        objc_msgSend(v10, sel_alpha);
        *(double *)(v8 + 16) = v20;
        *(double *)(v8 + 24) = v22;
        *(double *)(v8 + 32) = v24;
        *(void *)(v8 + 40) = v25;
        *(unsigned char *)(v8 + 48) = 0;
LABEL_14:

        uint64_t v26 = 0x6000000000000000;
      }
      else
      {
LABEL_9:
        uint64_t v7 = swift_allocObject();
        uint64_t v8 = v7;
        char v9 = 29;
LABEL_17:
        *(unsigned char *)(v7 + 16) = v9;
        *(void *)(v7 + 24) = 0x3FF0000000000000;
        *(unsigned char *)(v7 + 32) = 0;
        uint64_t v26 = 0x1000000000000000;
      }
      *a2 = v26 | v8;
      return;
  }
}

unint64_t sub_1C065F5E8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x7865547265766F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C065F6BC(char *a1, char *a2)
{
  return sub_1C148AB48(*a1, *a2);
}

uint64_t sub_1C065F6C8()
{
  return sub_1C015CFD4();
}

uint64_t sub_1C065F6D0()
{
  return sub_1C044A888();
}

uint64_t sub_1C065F6D8()
{
  return sub_1C044F848();
}

uint64_t sub_1C065F6E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0660124();
  *a1 = result;
  return result;
}

unint64_t sub_1C065F710@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C065F5E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C065F73C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C065F79C()
{
  return sub_1C151EAEC();
}

void sub_1C065F7EC(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A1D0;
}

uint64_t FormatIssueBinding.Color.hash(into:)()
{
  return sub_1C1520DCC();
}

BOOL static FormatIssueBinding.Color.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static FormatIssueBinding.Color.allCases.getter()
{
  return &unk_1F1B6A1F8;
}

uint64_t FormatIssueBinding.Color.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C065F894()
{
  unint64_t result = qword_1EA19CF68;
  if (!qword_1EA19CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF68);
  }
  return result;
}

unint64_t sub_1C065F8E8(uint64_t a1)
{
  unint64_t result = sub_1C065F910();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C065F910()
{
  unint64_t result = qword_1EA19CF70;
  if (!qword_1EA19CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF70);
  }
  return result;
}

uint64_t sub_1C065F964()
{
  return sub_1C0293CE4(&qword_1EA19CF78, &qword_1EA19CF80);
}

void sub_1C065F994(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A1F8;
}

unint64_t sub_1C065F9A4(void *a1)
{
  a1[1] = sub_1C065F9DC();
  a1[2] = sub_1C065FA30();
  unint64_t result = sub_1C065F894();
  a1[3] = result;
  return result;
}

unint64_t sub_1C065F9DC()
{
  unint64_t result = qword_1EB8601A0;
  if (!qword_1EB8601A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8601A0);
  }
  return result;
}

unint64_t sub_1C065FA30()
{
  unint64_t result = qword_1EA19CF88;
  if (!qword_1EA19CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CF88);
  }
  return result;
}

uint64_t sub_1C065FA84@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatIssueBinding.Color.init(from:)(a1, a2);
}

uint64_t sub_1C065FA9C(void *a1)
{
  return FormatIssueBinding.Color.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Color()
{
  return &type metadata for FormatIssueBinding.Color;
}

unsigned char *_s5ColorOwst_1_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C065FB94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5ColorO10CodingTypeOMa_1()
{
  return &_s5ColorO10CodingTypeON_1;
}

uint64_t sub_1C065FBCC()
{
  return sub_1C0293CE4(&qword_1EA19CF90, &qword_1EA19CF98);
}

unint64_t sub_1C065FC00()
{
  unint64_t result = qword_1EA19CFA0;
  if (!qword_1EA19CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFA0);
  }
  return result;
}

unint64_t sub_1C065FC54()
{
  unint64_t result = qword_1EA19CFA8;
  if (!qword_1EA19CFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFA8);
  }
  return result;
}

uint64_t sub_1C065FCA8@<X0>(unsigned char *a1@<X0>, void **a2@<X1>, unint64_t *a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      sub_1C065F354(a2, &v28);
      uint64_t v9 = v28;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v10 = (uint64_t *)((char *)a3 + *(int *)(v5 + 24));
      *uint64_t v10 = v9;
      uint64_t v11 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
      unint64_t v12 = 0xD000000000000015;
      double v13 = "Cover Primary Limited";
      goto LABEL_6;
    case 2:
      sub_1C065F354(a2, &v28);
      uint64_t v14 = v28;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v15 = (uint64_t *)((char *)a3 + *(int *)(v5 + 24));
      *double v15 = v14;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      unint64_t v12 = 0xD00000000000001BLL;
      double v13 = "Cover Primary Extra Limited";
      goto LABEL_6;
    case 3:
      sub_1C065F354(a2, &v28);
      uint64_t v17 = v28;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v18 = (uint64_t *)((char *)a3 + *(int *)(v5 + 24));
      *uint64_t v18 = v17;
      uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
      unint64_t v12 = 0xD000000000000010;
      double v13 = "Cover Background";
LABEL_6:
      *a3 = v12;
      a3[1] = (unint64_t)(v13 - 32) | 0x8000000000000000;
      goto LABEL_10;
    case 4:
      sub_1C065F354(a2, &v28);
      uint64_t v20 = v28;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v21 = (uint64_t *)((char *)a3 + *(int *)(v5 + 24));
      *double v21 = v20;
      uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
      long long v8 = xmmword_1C1557330;
      goto LABEL_9;
    case 5:
      sub_1C065F354(a2, &v28);
      uint64_t v23 = v28;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v24 = (uint64_t *)((char *)a3 + *(int *)(v5 + 24));
      *double v24 = v23;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      long long v8 = xmmword_1C1557320;
      goto LABEL_9;
    default:
      sub_1C065F354(a2, &v28);
      uint64_t v4 = v28;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unsigned int v6 = (uint64_t *)((char *)a3 + *(int *)(v5 + 24));
      uint64_t *v6 = v4;
      uint64_t v7 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
      long long v8 = xmmword_1C1557340;
LABEL_9:
      *(_OWORD *)a3 = v8;
LABEL_10:
      a3[2] = 0;
      a3[3] = 0;
      uint64_t v26 = (char *)a3 + *(int *)(v5 + 28);
      *(void *)uint64_t v26 = 0;
      *((void *)v26 + 1) = 0;
      v26[16] = -1;
      type metadata accessor for FormatInspectionItem(0);
      return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a3, 0, 1, v5);
  }
}

uint64_t sub_1C0660124()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0660170()
{
  return swift_deallocObject();
}

uint64_t sub_1C0660180()
{
  return swift_deallocObject();
}

uint64_t static FormatOptionsNodeStatementModifier.Integer.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatOptionsNodeStatementModifier.Integer.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatOptionsNodeStatementModifier.Integer.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0660208()
{
  unint64_t result = qword_1EA19CFB0;
  if (!qword_1EA19CFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFB0);
  }
  return result;
}

unint64_t sub_1C066025C(uint64_t a1)
{
  unint64_t result = sub_1C0660284();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0660284()
{
  unint64_t result = qword_1EA19CFB8;
  if (!qword_1EA19CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFB8);
  }
  return result;
}

unint64_t sub_1C06602D8(void *a1)
{
  a1[1] = sub_1C0660310();
  a1[2] = sub_1C0660364();
  unint64_t result = sub_1C0660208();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0660310()
{
  unint64_t result = qword_1EA19CFC0;
  if (!qword_1EA19CFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFC0);
  }
  return result;
}

unint64_t sub_1C0660364()
{
  unint64_t result = qword_1EA19CFC8;
  if (!qword_1EA19CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFC8);
  }
  return result;
}

uint64_t sub_1C06603B8(void *a1)
{
  return FormatOptionsNodeStatementModifier.Integer.init(from:)(a1);
}

uint64_t sub_1C06603D0(void *a1)
{
  return FormatOptionsNodeStatementModifier.Integer.encode(to:)(a1);
}

unsigned char *_s7IntegerOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0660484);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementModifier.Integer()
{
  return &type metadata for FormatOptionsNodeStatementModifier.Integer;
}

uint64_t dispatch thunk of FormatBlueprintAnimatorFactoryType.registerAnimators(with:resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1C06604D0(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = MEMORY[0x1E4FBC870];
  uint64_t v3 = type metadata accessor for FormatTransformData();
  if (*(void *)(*(void *)(a2 + *(int *)(v3 + 24)) + 16))
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_1BFEF3808(v4);
  }
  if (*(void *)(*(void *)(a2 + *(int *)(v3 + 28)) + 16))
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1BFEF3808(v5);
  }
  sub_1C0660618();
  sub_1C0660670();
  uint64_t v6 = sub_1C151E92C();
  uint64_t v7 = sub_1C06606C8(v6, &v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C06605DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatContentSlotItemObject.Resolved.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C0660618()
{
  if (!qword_1EB87C330)
  {
    type metadata accessor for FormatContentSlotItemResolution();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C330);
    }
  }
}

unint64_t sub_1C0660670()
{
  unint64_t result = qword_1EB880D18;
  if (!qword_1EB880D18)
  {
    sub_1C0660618();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB880D18);
  }
  return result;
}

uint64_t sub_1C06606C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v64 = a2;
  uint64_t v3 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v3 - 8);
  char v58 = (uint64_t *)((char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v57);
  uint64_t v59 = (void **)((char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v56 = (uint64_t *)((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v63);
  uint64_t v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatContentSlotItemResolution() - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v65 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  double v15 = (char *)&v52 - v14;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v71 = MEMORY[0x1E4FBC860];
  uint64_t v62 = *(void *)(a1 + 16);
  if (v62)
  {
    uint64_t v17 = 0;
    uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v66 = *(void *)(v13 + 72);
    uint64_t v60 = (v18 + 32) & ~v18;
    uint64_t v61 = a1 + v60;
    uint64_t v55 = "uzzlesSolved";
    uint64_t v54 = "fastestTimeByDifficultyLevel";
    long long v53 = "averageTimeByDifficultyLevel";
    long long v52 = "fficultyLevel";
    do
    {
      sub_1C0660F48(v61 + v66 * v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v19 = *v64;
      sub_1C0660F48((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v67 = v17 + 1;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          double v21 = (void *)*v9;
          swift_bridgeObjectRetain();
          id v22 = objc_msgSend(v21, sel_identifier);
          uint64_t v23 = sub_1C151E62C();
          uint64_t v25 = v24;

          goto LABEL_9;
        case 3:
          uint64_t v26 = type metadata accessor for FormatWebEmbed.Resolved;
          uint64_t v27 = type metadata accessor for FormatWebEmbed.Resolved;
          uint64_t v28 = (uint64_t)v9;
          uint64_t v29 = v56;
          goto LABEL_13;
        case 6:
          char v32 = v59;
          sub_1C0660FB0((uint64_t)v9, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          char v33 = *v32;
          swift_bridgeObjectRetain();
          id v34 = objc_msgSend(v33, sel_identifier, v52, v53, v54, v55);
          uint64_t v35 = sub_1C151E62C();
          uint64_t v37 = v36;

          PuzzleStatisticCategory.statisticType.getter(&v68);
          uint64_t v69 = v35;
          uint64_t v70 = v37;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v23 = v69;
          uint64_t v25 = v70;
          long long v38 = type metadata accessor for PuzzleStatistic;
          uint64_t v39 = (uint64_t)v59;
          goto LABEL_16;
        case 7:
          uint64_t v26 = type metadata accessor for FormatCustomItem.Resolved;
          uint64_t v27 = type metadata accessor for FormatCustomItem.Resolved;
          uint64_t v28 = (uint64_t)v9;
          uint64_t v29 = v58;
LABEL_13:
          sub_1C0660FB0(v28, (uint64_t)v29, (uint64_t (*)(void))v26);
          uint64_t v23 = *v29;
          uint64_t v25 = v29[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v39 = (uint64_t)v29;
          long long v38 = v27;
LABEL_16:
          sub_1C0661018(v39, (uint64_t (*)(void))v38);
          if (*(void *)(v19 + 16)) {
            goto LABEL_17;
          }
          goto LABEL_31;
        case 8:
          uint64_t v23 = *v9;
          uint64_t v25 = v9[1];
          swift_bridgeObjectRetain();
          if (!*(void *)(v19 + 16)) {
            goto LABEL_31;
          }
          goto LABEL_17;
        default:
          uint64_t v30 = (void *)*v9;
          swift_bridgeObjectRetain();
          id v22 = objc_msgSend(v30, sel_identifier);
          uint64_t v23 = sub_1C151E62C();
          uint64_t v25 = v31;
          swift_unknownObjectRelease();
LABEL_9:

          if (!*(void *)(v19 + 16)) {
            goto LABEL_31;
          }
LABEL_17:
          sub_1C1520DBC();
          sub_1C151E77C();
          uint64_t v40 = sub_1C1520E0C();
          uint64_t v41 = -1 << *(unsigned char *)(v19 + 32);
          unint64_t v42 = v40 & ~v41;
          if (((*(void *)(v19 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
            goto LABEL_31;
          }
          uint64_t v43 = *(void *)(v19 + 48);
          char v44 = (void *)(v43 + 16 * v42);
          BOOL v45 = *v44 == v23 && v44[1] == v25;
          if (v45 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_3;
          }
          uint64_t v46 = ~v41;
          break;
      }
      while (1)
      {
        unint64_t v42 = (v42 + 1) & v46;
        if (((*(void *)(v19 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
          break;
        }
        uint64_t v47 = (void *)(v43 + 16 * v42);
        BOOL v48 = *v47 == v23 && v47[1] == v25;
        if (v48 || (sub_1C1520A9C() & 1) != 0)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v17 = v67;
          sub_1C0661018((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          goto LABEL_4;
        }
      }
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0660FB0((uint64_t)v15, v65, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v49 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F694C(0, *(void *)(v49 + 16) + 1, 1);
        uint64_t v49 = v71;
      }
      unint64_t v51 = *(void *)(v49 + 16);
      unint64_t v50 = *(void *)(v49 + 24);
      if (v51 >= v50 >> 1)
      {
        sub_1C05F694C(v50 > 1, v51 + 1, 1);
        uint64_t v49 = v71;
      }
      *(void *)(v49 + 16) = v51 + 1;
      sub_1C0660FB0(v65, v49 + v60 + v51 * v66, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v17 = v67;
LABEL_4:
      ;
    }
    while (v17 != v62);
    return v71;
  }
  return result;
}

uint64_t sub_1C0660F48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0660FB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0661018(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 FeedLayoutSolverOptions.cursorTracking.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[1].n128_u8[0];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

void FeedLayoutSolverOptions.headlineOptions.getter(unsigned char *a1@<X8>)
{
  char v2 = v1[18];
  char v3 = v1[19];
  *a1 = v1[17];
  a1[1] = v2;
  a1[2] = v3;
}

void FeedLayoutSolverOptions.categoryOptions.getter(unsigned char *a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 21);
  *a1 = *(unsigned char *)(v1 + 20);
  a1[1] = v2;
}

void FeedLayoutSolverOptions.coverOptions.getter(unsigned char *a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 23);
  *a1 = *(unsigned char *)(v1 + 22);
  a1[1] = v2;
}

unint64_t FeedLayoutSolverOptions.issueStripOptions.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 24);
  *a1 = v2;
  return sub_1BFE60260(v2);
}

uint64_t FeedLayoutSolverOptions.pluginOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedLayoutSolverOptions(0);
  return sub_1C06618C0(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))sub_1C01BB2C0);
}

uint64_t type metadata accessor for FeedLayoutSolverOptions.PluginOptions(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB890DA0);
}

uint64_t FeedLayoutSolverOptions.traits.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedLayoutSolverOptions(0);
  *a1 = *(void *)(v1 + *(int *)(result + 40));
  return result;
}

NewsFeed::FeedLayoutSolverOptions::Traits __swiftcall FeedLayoutSolverOptions.Traits.init(rawValue:)(NewsFeed::FeedLayoutSolverOptions::Traits rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FeedLayoutSolverOptions.Traits.allowVideoLayouts.getter(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FeedLayoutSolverOptions.Traits.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t FeedLayoutSolverOptions.init(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  char v10 = *(unsigned char *)(a1 + 16);
  char v11 = *a2;
  char v12 = a2[1];
  char v13 = a2[2];
  char v14 = *a3;
  char v15 = a3[1];
  char v16 = *a4;
  char v17 = a4[1];
  uint64_t v18 = *a5;
  uint64_t v19 = *a7;
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(unsigned char *)(a8 + 16) = v10;
  *(unsigned char *)(a8 + 17) = v11;
  *(unsigned char *)(a8 + 18) = v12;
  *(unsigned char *)(a8 + 19) = v13;
  *(unsigned char *)(a8 + 20) = v14;
  *(unsigned char *)(a8 + 21) = v15;
  *(unsigned char *)(a8 + 22) = v16;
  *(unsigned char *)(a8 + 23) = v17;
  *(void *)(a8 + 24) = v18;
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t result = sub_1C0661998(a6, a8 + *(int *)(v20 + 36), (uint64_t (*)(void))sub_1C01BB2C0);
  *(void *)(a8 + *(int *)(v20 + 40)) = v19;
  return result;
}

uint64_t FeedLayoutSolverOptions.with(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)@<X0>(uint64_t *a1@<X0>, unsigned __int16 *a2@<X1>, unsigned __int16 *a3@<X2>, unsigned __int16 *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v72 = a4;
  uint64_t v73 = a6;
  uint64_t v75 = a5;
  sub_1C01BB2C0();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v76 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v79 = (char *)&v62 - v16;
  uint64_t v78 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (uint64_t)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v74 = (char *)&v62 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v67 = (char *)&v62 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v65 = (char *)&v62 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v62 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (unsigned __int8 *)&v62 - v28;
  MEMORY[0x1F4188790](v30);
  char v32 = (char *)&v62 - v31;
  uint64_t v33 = *a1;
  uint64_t v80 = a1[1];
  uint64_t v81 = v33;
  char v34 = *((unsigned char *)a1 + 16);
  char v35 = *((unsigned char *)a1 + 17);
  unsigned int v36 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
  unsigned int v37 = *a3;
  unsigned int v64 = *v72;
  unint64_t v38 = *v75;
  uint64_t v75 = *(unint64_t **)a7;
  LODWORD(v72) = *(unsigned __int8 *)(a7 + 8);
  uint64_t v39 = v63;
  sub_1C06618C0(v63, (uint64_t)&v62 - v31, type metadata accessor for FeedLayoutSolverOptions);
  if (v35)
  {
    uint64_t v40 = *(void *)v32;
    uint64_t v80 = *((void *)v32 + 1);
    uint64_t v81 = v40;
    int v41 = v32[16];
  }
  else
  {
    int v41 = v34 & 1;
  }
  int v71 = v41;
  sub_1C0661938((uint64_t)v32, type metadata accessor for FeedLayoutSolverOptions);
  sub_1C06618C0(v39, (uint64_t)v29, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v42 = (uint64_t)v79;
  uint64_t v43 = (uint64_t)v65;
  if (v36 == 2)
  {
    int v44 = v29[17];
    int v69 = v29[18];
    int v70 = v44;
    int v45 = v29[19];
  }
  else
  {
    int v69 = (v36 >> 8) & 1;
    int v70 = v36 & 1;
    int v45 = HIWORD(v36) & 1;
  }
  int v68 = v45;
  uint64_t v46 = (uint64_t)v67;
  sub_1C0661938((uint64_t)v29, type metadata accessor for FeedLayoutSolverOptions);
  sub_1C06618C0(v39, (uint64_t)v26, type metadata accessor for FeedLayoutSolverOptions);
  if (v37 == 2)
  {
    LODWORD(v67) = v26[20];
    int v47 = v26[21];
  }
  else
  {
    LODWORD(v67) = v37 & 1;
    int v47 = (v37 >> 8) & 1;
  }
  int v66 = v47;
  uint64_t v48 = (uint64_t)v74;
  sub_1C0661938((uint64_t)v26, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v49 = v39;
  sub_1C06618C0(v39, v43, type metadata accessor for FeedLayoutSolverOptions);
  if (v64 == 2)
  {
    char v50 = *(unsigned char *)(v43 + 22);
    LOBYTE(v51) = *(unsigned char *)(v43 + 23);
  }
  else
  {
    char v50 = v64 & 1;
    int v51 = (v64 >> 8) & 1;
  }
  uint64_t v52 = (uint64_t)v76;
  sub_1C0661938(v43, type metadata accessor for FeedLayoutSolverOptions);
  sub_1C06618C0(v49, v46, type metadata accessor for FeedLayoutSolverOptions);
  unint64_t v53 = v38;
  if (v38 == 2)
  {
    unint64_t v53 = *(void *)(v46 + 24);
    sub_1BFE60260(v53);
  }
  sub_1C0661928(v38);
  sub_1C0661938(v46, type metadata accessor for FeedLayoutSolverOptions);
  sub_1C06618C0(v73, v52, (uint64_t (*)(void))sub_1C01BB2C0);
  sub_1C06618C0(v49, v48, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v54 = v52;
  uint64_t v55 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
  {
    uint64_t v57 = v78;
    sub_1C06618C0(v48 + *(int *)(v78 + 36), v42, (uint64_t (*)(void))sub_1C01BB2C0);
    sub_1C0661938(v48, type metadata accessor for FeedLayoutSolverOptions);
    sub_1C0661938(v54, (uint64_t (*)(void))sub_1C01BB2C0);
  }
  else
  {
    sub_1C0661938(v48, type metadata accessor for FeedLayoutSolverOptions);
    sub_1C0661998(v54, v42, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v42, 0, 1, v55);
    uint64_t v57 = v78;
  }
  uint64_t v58 = v77;
  sub_1C06618C0(v49, v77, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v59 = v75;
  if (v72) {
    uint64_t v59 = *(unint64_t **)(v58 + *(int *)(v57 + 40));
  }
  sub_1C0661938(v58, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v60 = v80;
  *(void *)a8 = v81;
  *(void *)(a8 + 8) = v60;
  *(unsigned char *)(a8 + 16) = v71;
  *(unsigned char *)(a8 + 17) = v70;
  *(unsigned char *)(a8 + 18) = v69;
  *(unsigned char *)(a8 + 19) = v68;
  *(unsigned char *)(a8 + 20) = (_BYTE)v67;
  *(unsigned char *)(a8 + 21) = v66;
  *(unsigned char *)(a8 + 22) = v50;
  *(unsigned char *)(a8 + 23) = v51;
  *(void *)(a8 + 24) = v53;
  uint64_t result = sub_1C0661998(v42, a8 + *(int *)(v57 + 36), (uint64_t (*)(void))sub_1C01BB2C0);
  *(void *)(a8 + *(int *)(v57 + 40)) = v59;
  return result;
}

uint64_t sub_1C06618C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C0661928(unint64_t result)
{
  if (result != 2) {
    return sub_1BFE60260(result);
  }
  return result;
}

uint64_t sub_1C0661938(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0661998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FeedLayoutSolverOptions.HeadlineOptions.alwaysFillWithExcerpt.getter()
{
  return *v0;
}

uint64_t FeedLayoutSolverOptions.HeadlineOptions.alwaysShowAuthor.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FeedLayoutSolverOptions.HeadlineOptions.alwaysHidePublisherLogo.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t FeedLayoutSolverOptions.CategoryOptions.alwaysInsetIcon.getter()
{
  return *v0;
}

uint64_t FeedLayoutSolverOptions.CoverOptions.alwaysShowTitle.getter()
{
  return *v0;
}

uint64_t FeedLayoutSolverOptions.CoverOptions.alwaysIncludeBottomInset.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

unint64_t FeedLayoutSolverOptions.IssueStripOptions.separators.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFE60260(v2);
}

uint64_t FeedLayoutSolverOptions.PluginOptions.layoutOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151B62C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FeedLayoutSolverOptions.PluginOptions.init(layoutOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151B62C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

unint64_t sub_1C0661B14()
{
  unint64_t result = qword_1EA19CFD0;
  if (!qword_1EA19CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFD0);
  }
  return result;
}

unint64_t sub_1C0661B6C()
{
  unint64_t result = qword_1EA19CFD8;
  if (!qword_1EA19CFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFD8);
  }
  return result;
}

unint64_t sub_1C0661BC4()
{
  unint64_t result = qword_1EA19CFE0;
  if (!qword_1EA19CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFE0);
  }
  return result;
}

unint64_t sub_1C0661C1C()
{
  unint64_t result = qword_1EA19CFE8;
  if (!qword_1EA19CFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CFE8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FeedLayoutSolverOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    *(unsigned char *)(a1 + 19) = *((unsigned char *)a2 + 19);
    *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
    unint64_t v7 = a2[3];
    if (v7 >= 2) {
      unint64_t v7 = swift_bridgeObjectRetain();
    }
    v4[3] = v7;
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (char *)v4 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1C01BB2C0();
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = sub_1C151B62C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t initializeWithCopy for FeedLayoutSolverOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  unint64_t v6 = *(void *)(a2 + 24);
  if (v6 >= 2) {
    unint64_t v6 = swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C01BB2C0();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t assignWithCopy for FeedLayoutSolverOptions(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v6 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v6;
  *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
  *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
  *(unsigned char *)(a1 + 19) = *((unsigned char *)a2 + 19);
  *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
  *(unsigned char *)(a1 + 21) = *((unsigned char *)a2 + 21);
  *(unsigned char *)(a1 + 22) = *((unsigned char *)a2 + 22);
  *(unsigned char *)(a1 + 23) = *((unsigned char *)a2 + 23);
  uint64_t v7 = (unint64_t *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *((void *)a2 + 3);
  if (v8 >= 2)
  {
    if (v9 >= 2)
    {
      unint64_t *v7 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0661938((uint64_t)v7, (uint64_t (*)(void))sub_1C018B80C);
      unint64_t *v7 = *((void *)a2 + 3);
    }
  }
  else
  {
    unint64_t *v7 = v9;
    if (v9 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v21 = sub_1C151B62C();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v11, v12, v21);
      goto LABEL_14;
    }
    sub_1C0661938((uint64_t)v11, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_13:
    sub_1C01BB2C0();
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v18 = sub_1C151B62C();
  (*(void (**)(void *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t initializeWithTake for FeedLayoutSolverOptions(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v6 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
  *(unsigned char *)(a1 + 19) = *((unsigned char *)a2 + 19);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  uint64_t v7 = *(int *)(a3 + 36);
  unint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (char *)a2 + v7;
  *(_OWORD *)a1 = v6;
  uint64_t v10 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C01BB2C0();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1C151B62C();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t assignWithTake for FeedLayoutSolverOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  uint64_t v7 = (unint64_t *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 24);
  *((unsigned char *)v7 - 1) = *(unsigned char *)(a2 + 23);
  unint64_t v8 = *(void *)(a2 + 24);
  if (v6 < 2) {
    goto LABEL_4;
  }
  if (v8 < 2)
  {
    sub_1C0661938((uint64_t)v7, (uint64_t (*)(void))sub_1C018B80C);
LABEL_4:
    unint64_t *v7 = v8;
    goto LABEL_6;
  }
  unint64_t *v7 = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v20 = sub_1C151B62C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 40))(v10, v11, v20);
      goto LABEL_12;
    }
    sub_1C0661938((uint64_t)v10, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    goto LABEL_11;
  }
  if (v16)
  {
LABEL_11:
    sub_1C01BB2C0();
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  uint64_t v17 = sub_1C151B62C();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_12:
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C066263C);
}

uint64_t sub_1C066263C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 2;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1C01BB2C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0662710);
}

uint64_t sub_1C0662710(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 24) = (a2 + 1);
  }
  else
  {
    sub_1C01BB2C0();
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C06627BC()
{
  sub_1C01BB2C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for FormatGrayscaleColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.CursorTracking(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_1C06628D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions.HeadlineOptions(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.HeadlineOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)unint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LayeredMediaViewDisplayState(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s8NewsFeed23FeedLayoutSolverOptionsV15CategoryOptionsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0662B84);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLayoutSolverOptions.IssueStripOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 2) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for FeedLayoutSolverOptions.IssueStripOptions(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for FeedLayoutSolverOptions.IssueStripOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 >= 2)
  {
    if (v4 >= 2)
    {
      *a1 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0661938((uint64_t)a1, (uint64_t (*)(void))sub_1C018B80C);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v4;
    if (v4 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

unint64_t *assignWithTake for FeedLayoutSolverOptions.IssueStripOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 >= 2)
  {
    if (v3 >= 2)
    {
      *a1 = v3;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0661938((uint64_t)a1, (uint64_t (*)(void))sub_1C018B80C);
  }
  *a1 = v3;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions.IssueStripOptions(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.IssueStripOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B62C();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for FeedLayoutSolverOptions.PluginOptions(uint64_t a1)
{
  uint64_t v2 = sub_1C151B62C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B62C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B62C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B62C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B62C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0663018);
}

uint64_t sub_1C0663018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B62C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0663098);
}

uint64_t sub_1C0663098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B62C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C0663108()
{
  uint64_t result = sub_1C151B62C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C066319C(unint64_t a1)
{
  uint64_t v16 = type metadata accessor for DebugInspectViewItem();
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1C05F7788(0, 0, 0);
  uint64_t v5 = v17;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v15 = a1 & 0xC000000000000001;
      while (v15)
      {
        uint64_t v8 = MEMORY[0x1C18C7CB0](v7, a1);
        unint64_t v9 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        *uint64_t v4 = 0x656D656854;
        v4[1] = 0xE500000000000000;
        v4[2] = v8;
        swift_storeEnumTagMultiPayload();
        uint64_t v17 = v5;
        unint64_t v11 = *(void *)(v5 + 16);
        unint64_t v10 = *(void *)(v5 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1C05F7788(v10 > 1, v11 + 1, 1);
          uint64_t v5 = v17;
        }
        *(void *)(v5 + 16) = v11 + 1;
        sub_1BFEE32E8((uint64_t)v4, v5+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v11, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        ++v7;
        if (v9 == v6) {
          goto LABEL_17;
        }
      }
      if (v7 < *(void *)(v14 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C15204BC();
      if (!v6) {
        goto LABEL_17;
      }
    }
    uint64_t v8 = swift_retain();
    unint64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_1C06633D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v159 = a3;
  uint64_t v158 = a4;
  uint64_t v161 = (void *)a1;
  uint64_t v162 = a2;
  uint64_t v4 = type metadata accessor for FeedItem(0);
  uint64_t v152 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v163 = &v149[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v157 = &v149[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v155 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v155);
  uint64_t v156 = &v149[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  char v154 = (uint64_t *)&v149[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_systemGrayColor);
  id v14 = objc_msgSend(v12, sel_lightGrayColor);
  unint64_t v15 = self;
  double v16 = *MEMORY[0x1E4FB09B8];
  id v17 = objc_msgSend(v15, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09B8]);
  uint64_t v18 = sub_1C06680BC(v13, 0, 0, v14, v17, 44.0, 44.0);

  uint64_t v19 = v160;
  v160[4] = v18;
  id v20 = objc_msgSend(v12, sel_lightGrayColor);
  id v21 = objc_msgSend(v15, sel_systemFontOfSize_weight_, 12.0, v16);
  uint64_t v22 = sub_1C06680BC(0, 0, 0, v20, v21, 44.0, 44.0);

  v19[5] = v22;
  id v23 = objc_msgSend(v12, sel_lightGrayColor);
  uint64_t v24 = (uint64_t)v161;
  id v25 = objc_msgSend(v15, sel_systemFontOfSize_weight_, 12.0, v16);
  uint64_t v26 = sub_1C06680BC(0, 4271950, 0xE300000000000000, v23, v25, 44.0, 44.0);

  uint64_t v27 = MEMORY[0x1E4FBC870];
  uint64_t v28 = MEMORY[0x1E4FBC868];
  v19[6] = v26;
  v19[7] = v27;
  v19[8] = v27;
  v19[9] = v28;
  v19[10] = v27;
  unint64_t v153 = v19 + 10;
  *(void *)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections) = MEMORY[0x1E4FBC860];
  *(void *)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_feedItemImages) = v28;
  *(void *)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_layoutImages) = v28;
  uint64_t v29 = (_OWORD *)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection);
  _OWORD *v29 = 0u;
  v29[1] = 0u;
  *(_OWORD *)((char *)v29 + 25) = 0u;
  sub_1C066A084(v24, (uint64_t)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  uint64_t v30 = (void *)(v24 + *(int *)(v10 + 32));
  uint64_t v31 = v30[4];
  uint64_t v32 = v30[5];
  uint64_t v33 = v30 + 1;
  __swift_project_boxed_opaque_existential_1(v30 + 1, v31);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 64))(&v181, v31, v32);
  uint64_t v34 = *(void *)&v182[8];
  if (*(void *)&v182[8])
  {
    uint64_t v35 = *(void *)&v182[16];
    __swift_project_boxed_opaque_existential_1(&v181, *(uint64_t *)&v182[8]);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    uint64_t v38 = v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v181);
    uint64_t v39 = v154;
    sub_1C066A084(v24, (uint64_t)v154, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    if (v38) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BFD10564((uint64_t)&v181);
    uint64_t v39 = v154;
    sub_1C066A084(v24, (uint64_t)v154, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  }
  uint64_t v36 = *v39;
  uint64_t v38 = v39[1];
  swift_bridgeObjectRetain();
LABEL_6:
  sub_1C066A3EC((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  v19[2] = v36;
  v19[3] = v38;
  sub_1C0668294(v159, (uint64_t)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_inventory);
  sub_1BFC66384(v158, (uint64_t)&v181);
  type metadata accessor for DebugInspectHeadlineService();
  uint64_t v40 = swift_allocObject();
  sub_1BFC773DC(&v181, v40 + 16);
  *(void *)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_headlineService) = v40;
  sub_1C06682F0(v162, (uint64_t)v166);
  sub_1C066A260((uint64_t)v166, (uint64_t)&v179, &qword_1EA19D030, (uint64_t)&type metadata for DebugInspectViewSection);
  if (*(void *)&v180[16])
  {
    long long v181 = v179;
    *(_OWORD *)uint64_t v182 = *(_OWORD *)v180;
    *(_OWORD *)&v182[9] = *(_OWORD *)&v180[9];
    int v41 = (void **)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
    swift_beginAccess();
    uint64_t v42 = *v41;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int8 *v41 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v42 = sub_1C0EE6090(0, v42[2] + 1, 1, v42);
      unsigned __int8 *v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1C0EE6090((void *)(v44 > 1), v45 + 1, 1, v42);
      unsigned __int8 *v41 = v42;
    }
    void v42[2] = v45 + 1;
    uint64_t v46 = &v42[6 * v45];
    long long v47 = v181;
    long long v48 = *(_OWORD *)v182;
    *(_OWORD *)((char *)v46 + 57) = *(_OWORD *)&v182[9];
    _OWORD v46[2] = v47;
    v46[3] = v48;
    swift_endAccess();
    uint64_t v19 = v160;
  }
  sub_1C06685AC(v24, v162, &v167);
  uint64_t v49 = (void **)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  char v50 = *v49;
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v49 = v50;
  if ((v51 & 1) == 0)
  {
    char v50 = sub_1C0EE6090(0, v50[2] + 1, 1, v50);
    *uint64_t v49 = v50;
  }
  unint64_t v53 = v50[2];
  unint64_t v52 = v50[3];
  if (v53 >= v52 >> 1)
  {
    char v50 = sub_1C0EE6090((void *)(v52 > 1), v53 + 1, 1, v50);
    *uint64_t v49 = v50;
  }
  long long v50[2] = v53 + 1;
  uint64_t v54 = &v50[6 * v53];
  long long v55 = v167;
  long long v56 = v168[0];
  *(_OWORD *)((char *)v54 + 57) = *(_OWORD *)((char *)v168 + 9);
  void v54[2] = v55;
  v54[3] = v56;
  swift_endAccess();
  uint64_t v57 = v30[4];
  uint64_t v58 = v30[5];
  __swift_project_boxed_opaque_existential_1(v33, v57);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v58 + 64))(&v175, v57, v58);
  if (*((void *)&v176[0] + 1))
  {
    sub_1BFC773DC(&v175, (uint64_t)&v177);
    sub_1C0668BC8(&v177, (uint64_t)&v169);
    swift_beginAccess();
    uint64_t v59 = *v49;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v49 = v59;
    if ((v60 & 1) == 0)
    {
      uint64_t v59 = sub_1C0EE6090(0, v59[2] + 1, 1, v59);
      *uint64_t v49 = v59;
    }
    unint64_t v62 = v59[2];
    unint64_t v61 = v59[3];
    if (v62 >= v61 >> 1)
    {
      uint64_t v59 = sub_1C0EE6090((void *)(v61 > 1), v62 + 1, 1, v59);
      *uint64_t v49 = v59;
    }
    v59[2] = v62 + 1;
    uint64_t v63 = &v59[6 * v62];
    long long v64 = v169;
    long long v65 = v170[0];
    *(_OWORD *)((char *)v63 + 57) = *(_OWORD *)((char *)v170 + 9);
    v63[2] = v64;
    v63[3] = v65;
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
  }
  else
  {
    sub_1BFD10564((uint64_t)&v175);
  }
  uint64_t v66 = v30[4];
  uint64_t v67 = v30[5];
  __swift_project_boxed_opaque_existential_1(v33, v66);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v67 + 64))(&v177, v66, v67);
  uint64_t v68 = *((void *)&v178[0] + 1);
  if (*((void *)&v178[0] + 1))
  {
    uint64_t v69 = *(void *)&v178[1];
    __swift_project_boxed_opaque_existential_1(&v177, *((uint64_t *)&v178[0] + 1));
    uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 40))(v68, v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
    if (v70)
    {
      sub_1C0668DD8(v70, (uint64_t)&v171);
      swift_beginAccess();
      int v71 = *v49;
      char v72 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v49 = v71;
      if ((v72 & 1) == 0)
      {
        int v71 = sub_1C0EE6090(0, v71[2] + 1, 1, v71);
        *uint64_t v49 = v71;
      }
      unint64_t v74 = v71[2];
      unint64_t v73 = v71[3];
      if (v74 >= v73 >> 1)
      {
        int v71 = sub_1C0EE6090((void *)(v73 > 1), v74 + 1, 1, v71);
        *uint64_t v49 = v71;
      }
      v71[2] = v74 + 1;
      uint64_t v75 = &v71[6 * v74];
      long long v76 = v171;
      long long v77 = v172[0];
      *(_OWORD *)((char *)v75 + 57) = *(_OWORD *)((char *)v172 + 9);
      v75[2] = v76;
      v75[3] = v77;
      swift_endAccess();
      swift_release();
      uint64_t v19 = v160;
    }
  }
  else
  {
    sub_1BFD10564((uint64_t)&v177);
  }
  sub_1C0668FD0((uint64_t)v161, v162, (uint64_t *)&v173);
  swift_beginAccess();
  uint64_t v78 = *v49;
  char v79 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v49 = v78;
  if ((v79 & 1) == 0)
  {
    uint64_t v78 = sub_1C0EE6090(0, v78[2] + 1, 1, v78);
    *uint64_t v49 = v78;
  }
  unint64_t v81 = v78[2];
  unint64_t v80 = v78[3];
  if (v81 >= v80 >> 1)
  {
    uint64_t v78 = sub_1C0EE6090((void *)(v80 > 1), v81 + 1, 1, v78);
    *uint64_t v49 = v78;
  }
  v78[2] = v81 + 1;
  uint64_t v82 = &v78[6 * v81];
  long long v83 = v173;
  long long v84 = v174[0];
  *(_OWORD *)((char *)v82 + 57) = *(_OWORD *)((char *)v174 + 9);
  v82[2] = v83;
  v82[3] = v84;
  swift_endAccess();
  uint64_t v85 = v30[4];
  uint64_t v86 = v30[5];
  __swift_project_boxed_opaque_existential_1(v33, v85);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v86 + 64))(&v177, v85, v86);
  uint64_t v87 = *((void *)&v178[0] + 1);
  if (*((void *)&v178[0] + 1))
  {
    uint64_t v88 = *(void *)&v178[1];
    __swift_project_boxed_opaque_existential_1(&v177, *((uint64_t *)&v178[0] + 1));
    uint64_t v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 32))(v87, v88);
    uint64_t v90 = v162;
    if (v89)
    {
      unint64_t v91 = *(void *)(v89 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
      if (v91 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1C15204BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v92 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v92)
      {
        sub_1C066988C((uint64_t)v161, (uint64_t)&v175);
        char v154 = (uint64_t *)v175;
        uint64_t v93 = *(void *)&v176[0];
        uint64_t v151 = *((void *)&v175 + 1);
        uint64_t v94 = *((void *)&v176[0] + 1);
        uint64_t v95 = *(void *)&v176[1];
        int v150 = BYTE8(v176[1]);
        uint64_t v96 = MEMORY[0x1E4FBB1A0];
        sub_1C066A260((uint64_t)&v175, (uint64_t)v185, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0]);
        sub_1C066A260((uint64_t)v176, (uint64_t)v184, (unint64_t *)&qword_1EB879C00, v96);
        uint64_t v183 = *(void *)&v176[1];
        int v97 = (char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection;
        uint64_t v98 = *(void *)((char *)v19 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection);
        uint64_t v99 = *(void *)((char *)v19
                        + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection
                        + 8);
        uint64_t v100 = *(void *)((char *)v19
                         + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection
                         + 16);
        uint64_t v101 = *(void *)((char *)v19
                         + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection
                         + 24);
        uint64_t v102 = *(void *)((char *)v19
                         + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection
                         + 32);
        uint64_t v103 = v151;
        *(void *)int v97 = v154;
        *((void *)v97 + 1) = v103;
        *((void *)v97 + 2) = v93;
        *((void *)v97 + 3) = v94;
        *((void *)v97 + 4) = v95;
        v97[40] = v150;
        sub_1BFF59A8C((uint64_t)v185);
        sub_1BFF59A8C((uint64_t)v184);
        sub_1BFFAF7A4((uint64_t)&v183);
        sub_1C066A2E0(v98, v99, v100, v101, v102);
        swift_beginAccess();
        char v104 = *v49;
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v49 = v104;
        if ((v105 & 1) == 0)
        {
          char v104 = sub_1C0EE6090(0, v104[2] + 1, 1, v104);
          *uint64_t v49 = v104;
        }
        unint64_t v107 = v104[2];
        unint64_t v106 = v104[3];
        uint64_t v19 = v160;
        uint64_t v90 = v162;
        if (v107 >= v106 >> 1)
        {
          char v104 = sub_1C0EE6090((void *)(v106 > 1), v107 + 1, 1, v104);
          *uint64_t v49 = v104;
        }
        v104[2] = v107 + 1;
        uint64_t v108 = &v104[6 * v107];
        long long v109 = v175;
        long long v110 = v176[0];
        *(_OWORD *)((char *)v108 + 57) = *(_OWORD *)((char *)v176 + 9);
        v108[2] = v109;
        v108[3] = v110;
        swift_endAccess();
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
    }
  }
  else
  {
    sub_1BFD10564((uint64_t)&v177);
    uint64_t v90 = v162;
  }
  uint64_t v111 = v161;
  uint64_t v112 = sub_1C06644A0((uint64_t)v161);
  swift_beginAccess();
  sub_1C104A11C(v112);
  swift_endAccess();
  sub_1C0669A3C(v111, &v177);
  swift_beginAccess();
  uint64_t v113 = *v49;
  char v114 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v49 = v113;
  if ((v114 & 1) == 0)
  {
    uint64_t v113 = sub_1C0EE6090(0, v113[2] + 1, 1, v113);
    *uint64_t v49 = v113;
  }
  unint64_t v116 = v113[2];
  unint64_t v115 = v113[3];
  if (v116 >= v115 >> 1)
  {
    uint64_t v113 = sub_1C0EE6090((void *)(v115 > 1), v116 + 1, 1, v113);
    *uint64_t v49 = v113;
  }
  uint64_t v117 = (uint64_t)v161;
  v113[2] = v116 + 1;
  char v118 = &v113[6 * v116];
  long long v119 = v177;
  long long v120 = v178[0];
  *(_OWORD *)((char *)v118 + 57) = *(_OWORD *)((char *)v178 + 9);
  v118[2] = v119;
  v118[3] = v120;
  swift_endAccess();
  uint64_t v121 = v156;
  sub_1C066A084(v90, (uint64_t)v156, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(v158);
    sub_1C066A0EC(v159);
    sub_1C066A3EC(v90, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
    sub_1C066A3EC(v117, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    sub_1C066A140();

    char v123 = v121;
  }
  else
  {
    sub_1C066A1C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v124 = v157;
    sub_1BFEE32E8((uint64_t)v121, (uint64_t)v157, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    uint64_t v125 = v124[4];
    uint64_t v126 = v124[5];
    __swift_project_boxed_opaque_existential_1(v124 + 1, v125);
    uint64_t v127 = (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 16))(v125, v126);
    MEMORY[0x1F4188790](v127);
    *(void *)&v149[-16] = v90;
    sub_1C06227B8((uint64_t (*)(char *))sub_1C066A230, (uint64_t)&v149[-32], v128);
    uint64_t v130 = (unsigned char *)v129;
    int64_t v131 = *(void *)(v129 + 16);
    if (v131)
    {
      uint64_t v165 = (void *)MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v131, 0);
      uint64_t v132 = *(unsigned __int8 *)(v152 + 80);
      uint64_t v156 = v130;
      uint64_t v133 = (uint64_t)&v130[(v132 + 32) & ~v132];
      uint64_t v134 = *(void *)(v152 + 72);
      uint64_t v135 = v165;
      do
      {
        unint64_t v136 = v163;
        sub_1C066A084(v133, (uint64_t)v163, type metadata accessor for FeedItem);
        uint64_t v137 = FeedItem.debugIdentifier.getter();
        uint64_t v139 = v138;
        sub_1C066A3EC((uint64_t)v136, type metadata accessor for FeedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFF661B8(0, v135[2] + 1, 1);
          uint64_t v135 = v165;
        }
        unint64_t v141 = v135[2];
        unint64_t v140 = v135[3];
        if (v141 >= v140 >> 1)
        {
          sub_1BFF661B8(v140 > 1, v141 + 1, 1);
          uint64_t v135 = v165;
        }
        v135[2] = v141 + 1;
        uint64_t v142 = &v135[2 * v141];
        v142[4] = v137;
        v142[5] = v139;
        v133 += v134;
        --v131;
      }
      while (v131);
      swift_bridgeObjectRelease();
      uint64_t v117 = (uint64_t)v161;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v135 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_beginAccess();
    uint64_t v143 = v135[2];
    uint64_t v144 = v162;
    if (v143)
    {
      uint64_t v145 = v135 + 5;
      do
      {
        uint64_t v147 = *(v145 - 1);
        uint64_t v146 = *v145;
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(v164, v147, v146);
        swift_bridgeObjectRelease();
        v145 += 2;
        --v143;
      }
      while (v143);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1(v158);
    sub_1C066A0EC(v159);
    sub_1C066A3EC(v144, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
    sub_1C066A3EC(v117, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    uint64_t v19 = v160;
    char v123 = v157;
  }
  sub_1C066A3EC((uint64_t)v123, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  return v19;
}

uint64_t sub_1C06644A0(uint64_t a1)
{
  uint64_t v84 = type metadata accessor for DebugInspectViewItem();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v3 = (char *)v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v69 - v5;
  uint64_t v7 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1C1517ADC();
  uint64_t v76 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v77 = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151759C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1C151757C();
  uint64_t v71 = *(void *)(v72 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v72);
  id v17 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v12 + 104))(v14, *MEMORY[0x1E4FAB6D8], v11, v15);
  uint64_t v18 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v82 = a1 + *(int *)(v18 + 28);
  sub_1C151758C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v81 += OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_inventory;
  unint64_t v74 = v17;
  sub_1C151752C();
  uint64_t v19 = *(int *)(v18 + 24);
  uint64_t v79 = a1;
  id v20 = (void *)(a1 + v19);
  uint64_t v21 = v20[4];
  uint64_t v22 = v20[5];
  uint64_t v78 = v20;
  __swift_project_boxed_opaque_existential_1(v20 + 1, v21);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v22 + 32))(v89, v21, v22);
  unint64_t v80 = *(void **)&v89[0];
  v85[0] = v89[0];
  v85[1] = v89[1];
  uint64_t v86 = v90;
  uint64_t v23 = v77;
  uint64_t v24 = GroupLayoutInventory.layouts(column:kind:)(v77, (uint64_t *)v85);
  sub_1BFE9CBF4((unint64_t)v80);
  id v25 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  uint64_t v26 = v75;
  v76 += 8;
  uint64_t v70 = v25;
  v25(v23, v75);
  uint64_t v27 = *(void *)(v24 + 16);
  uint64_t v73 = v24;
  if (v27)
  {
    uint64_t v28 = (void *)(v24 + 32);
    swift_bridgeObjectRetain();
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v81 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v30 = v28[3];
      uint64_t v31 = v28[4];
      __swift_project_boxed_opaque_existential_1(v28, v30);
      sub_1BFFFB724(v82, v30, v31);
      sub_1BFC66384((uint64_t)v28, (uint64_t)v89);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v32 = v29;
      }
      else {
        uint64_t v32 = sub_1C0EE635C(0, v29[2] + 1, 1, v29);
      }
      unint64_t v34 = v32[2];
      unint64_t v33 = v32[3];
      if (v34 >= v33 >> 1) {
        uint64_t v32 = sub_1C0EE635C((void *)(v33 > 1), v34 + 1, 1, v32);
      }
      v32[2] = v34 + 1;
      uint64_t v29 = v32;
      sub_1BFC773DC(v89, (uint64_t)&v32[5 * v34 + 4]);
      v28 += 5;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    uint64_t v26 = v75;
    uint64_t v35 = v77;
    uint64_t v36 = v29;
  }
  else
  {
    uint64_t v35 = v23;
    uint64_t v81 = MEMORY[0x1E4FBC860];
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v37 = v36[2];
  uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v39 = v79;
  if (v37)
  {
    uint64_t v40 = v36 + 4;
    v69[1] = v36;
    swift_bridgeObjectRetain();
    unint64_t v80 = v38;
    do
    {
      sub_1C066A084((uint64_t)v78, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t v41 = v40[3];
      uint64_t v42 = v40[4];
      __swift_project_boxed_opaque_existential_1(v40, v41);
      (*(void (**)(long long *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v42 + 48))(v89, v9, v82, v41, v42);
      sub_1BFC66384((uint64_t)v89, (uint64_t)v85);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = sub_1BFFFCC38(0, v38[2] + 1, 1, v38);
      }
      uint64_t v39 = v79;
      unint64_t v44 = v38[2];
      unint64_t v43 = v38[3];
      if (v44 >= v43 >> 1) {
        uint64_t v38 = sub_1BFFFCC38((void *)(v43 > 1), v44 + 1, 1, v38);
      }
      v38[2] = v44 + 1;
      sub_1BFC773DC(v85, (uint64_t)&v38[5 * v44 + 4]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
      sub_1C066A3EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      v40 += 5;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    uint64_t v26 = v75;
    uint64_t v35 = v77;
  }
  else
  {
    unint64_t v80 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EB878A10);
  uint64_t v45 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  sub_1C066A5C8(0, (unint64_t *)&unk_1EA1A86C0, (uint64_t)&type metadata for DebugInspectViewSection, MEMORY[0x1E4FBBE00]);
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_1C1529AE0;
  sub_1C151752C();
  sub_1C066A51C(&qword_1EA19D040, MEMORY[0x1E4FAB918]);
  *(void *)&v89[0] = sub_1C152088C();
  *((void *)&v89[0] + 1) = v46;
  v70(v35, v26);
  sub_1C151E80C();
  uint64_t v47 = *(void *)(v73 + 16);
  swift_bridgeObjectRelease();
  *(void *)&v85[0] = v47;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_1C151E80C();
  uint64_t v78 = (void *)*((void *)&v89[0] + 1);
  uint64_t v79 = *(void *)&v89[0];
  MEMORY[0x1F4188790](v48);
  v69[-2] = v39;
  uint64_t v49 = sub_1C01846E8((uint64_t)sub_1C066A350, (uint64_t)&v69[-4], v45);
  swift_bridgeObjectRelease();
  int64_t v50 = *(void *)(v81 + 16);
  if (v50)
  {
    uint64_t v77 = v49;
    uint64_t v88 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v81;
    sub_1C05F7788(0, v50, 0);
    uint64_t v52 = v51 + 32;
    do
    {
      sub_1C066A084(v52, (uint64_t)v89, (uint64_t (*)(void))sub_1C066A370);
      sub_1BFC66384((uint64_t)v89, (uint64_t)v85);
      sub_1BFC773DC(v85, (uint64_t)v87);
      sub_1BFC66384((uint64_t)v87, (uint64_t)v6);
      *(void *)&v85[0] = 0;
      *((void *)&v85[0] + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      *(void *)&v85[0] = 0xD000000000000026;
      *((void *)&v85[0] + 1) = 0x80000001C1615070;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      long long v53 = v85[0];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      *(_OWORD *)(v6 + 40) = v53;
      v6[56] = 2;
      swift_storeEnumTagMultiPayload();
      sub_1C066A3EC((uint64_t)v89, (uint64_t (*)(void))sub_1C066A370);
      uint64_t v54 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7788(0, *(void *)(v54 + 16) + 1, 1);
        uint64_t v54 = v88;
      }
      unint64_t v56 = *(void *)(v54 + 16);
      unint64_t v55 = *(void *)(v54 + 24);
      if (v56 >= v55 >> 1)
      {
        sub_1C05F7788(v55 > 1, v56 + 1, 1);
        uint64_t v54 = v88;
      }
      *(void *)(v54 + 16) = v56 + 1;
      sub_1BFEE32E8((uint64_t)v6, v54+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v56, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      v52 += 56;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
    uint64_t v49 = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v89[0] = v49;
  sub_1C104A0F0(v54);
  uint64_t v57 = *(void *)&v89[0];
  int64_t v58 = v80[2];
  if (v58)
  {
    uint64_t v81 = *(void *)&v89[0];
    uint64_t v88 = MEMORY[0x1E4FBC860];
    unint64_t v59 = (unint64_t)v80;
    sub_1C05F7788(0, v58, 0);
    uint64_t v60 = v59 + 32;
    do
    {
      sub_1C066A084(v60, (uint64_t)v89, (uint64_t (*)(void))sub_1C066A370);
      sub_1BFC66384((uint64_t)v89, (uint64_t)v85);
      sub_1BFC773DC(v85, (uint64_t)v87);
      sub_1BFC66384((uint64_t)v87, (uint64_t)v3);
      *(void *)&v85[0] = 0;
      *((void *)&v85[0] + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      *(void *)&v85[0] = 0xD000000000000020;
      *((void *)&v85[0] + 1) = 0x80000001C16150A0;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      long long v61 = v85[0];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      *(_OWORD *)(v3 + 40) = v61;
      v3[56] = 2;
      swift_storeEnumTagMultiPayload();
      sub_1C066A3EC((uint64_t)v89, (uint64_t (*)(void))sub_1C066A370);
      uint64_t v62 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7788(0, *(void *)(v62 + 16) + 1, 1);
        uint64_t v62 = v88;
      }
      unint64_t v64 = *(void *)(v62 + 16);
      unint64_t v63 = *(void *)(v62 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_1C05F7788(v63 > 1, v64 + 1, 1);
        uint64_t v62 = v88;
      }
      *(void *)(v62 + 16) = v64 + 1;
      sub_1BFEE32E8((uint64_t)v3, v62+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v64, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      v60 += 56;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    uint64_t v57 = v81;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v89[0] = v57;
  sub_1C104A0F0(v62);
  uint64_t v65 = *(void *)&v89[0];
  uint64_t v66 = v82;
  uint64_t v67 = (uint64_t)v78;
  *(void *)(v82 + 32) = v79;
  *(void *)(v66 + 40) = v67;
  *(void *)(v66 + 48) = 0xD000000000000075;
  *(void *)(v66 + 56) = 0x80000001C16150D0;
  *(void *)(v66 + 64) = v65;
  *(unsigned char *)(v66 + 72) = 6;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v74, v72);
  return v66;
}

id *sub_1C06654BC()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C066A3EC((uint64_t)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C066A2E0(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 8), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 16), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 24), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 32));
  sub_1C066A0EC((uint64_t)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_inventory);
  swift_release();
  return v0;
}

uint64_t sub_1C06655A8()
{
  sub_1C06654BC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0665600()
{
  return type metadata accessor for DebugInspectViewDataSource();
}

uint64_t type metadata accessor for DebugInspectViewDataSource()
{
  uint64_t result = qword_1EA19D020;
  if (!qword_1EA19D020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0665654()
{
  uint64_t result = type metadata accessor for DebugGroupLayoutKey();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1C0665738(void *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    uint64_t v9 = sub_1C151811C();
    uint64_t v11 = v10;
    if (a1) {
      id v12 = a1;
    }
    else {
      id v12 = *(id *)(v8 + 48);
    }
    uint64_t v13 = (uint64_t *)(v8 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_feedItemImages);
    swift_beginAccess();
    id v14 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v13;
    *uint64_t v13 = 0x8000000000000000;
    sub_1C1067E28((uint64_t)v12, v9, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v13 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v16 = v14;
    if (!a1) {
      id v16 = *(id *)(v8 + 48);
    }
    id v17 = v14;
    a4(v16);

    return swift_release();
  }
  return result;
}

uint64_t sub_1C06658A4(uint64_t a1, uint64_t a2)
{
  sub_1C066A5C8(0, &qword_1EA19D050, (uint64_t)&type metadata for GroupLayoutAttributes, MEMORY[0x1E4FAB088]);
  sub_1BFC66384(a2, (uint64_t)v6);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  sub_1BFC773DC(v6, v4 + 24);
  swift_retain();
  return sub_1C151902C();
}

uint64_t sub_1C066596C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v23 = a3;
  uint64_t v4 = sub_1C151787C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key;
  uint64_t v13 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v14 = v12 + *(int *)(v13 + 24);
  sub_1BFC66384(v14 + 8, (uint64_t)v26);
  uint64_t v15 = *(void *)(v14 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14 + *(int *)(v9 + 60), v4);
  unsigned __int8 v29 = *(unsigned char *)v14;
  uint64_t v16 = *(void *)(v14 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFE9F050(v26, v15, 0, (uint64_t)v7, &v29, v16, (uint64_t)v11);
  uint64_t v17 = v24[3];
  uint64_t v18 = v24[4];
  __swift_project_boxed_opaque_existential_1(v24, v17);
  uint64_t v19 = v25;
  (*(void (**)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v18 + 48))(v26, v11, v12 + *(int *)(v13 + 28), v17, v18);
  if (v19) {
    return sub_1C066A3EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  }
  uint64_t v21 = v27;
  uint64_t v22 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
  sub_1C066A3EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t sub_1C0665BD0@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1C151FB0C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a1[2];
  long long v10 = *a1;
  long long v25 = a1[1];
  long long v26 = v9;
  long long v24 = v10;
  uint64_t v27 = *((void *)a1 + 6);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, *((double *)&v25 + 1), *(double *)&v9);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  long long v13 = a1[1];
  *(_OWORD *)(v12 + 24) = *a1;
  *(_OWORD *)(v12 + 40) = v13;
  *(_OWORD *)(v12 + 56) = a1[2];
  *(void *)(v12 + 72) = *((void *)a1 + 6);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C066A5AC;
  *(void *)(v14 + 24) = v12;
  aBlock[4] = sub_1C066AC30;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFD2E6D0;
  aBlock[3] = &block_descriptor_15;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a2;
  sub_1BFEA0164((uint64_t)&v24);
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v11, sel_imageWithActions_, v15);
  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAD948], v5);
    uint64_t v20 = sub_1C151FA7C();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t result = swift_release();
    *uint64_t v22 = v20;
  }
  return result;
}

uint64_t sub_1C0665EA0(void *a1, id a2, uint64_t a3)
{
  objc_msgSend(a2, sel_setFill);
  uint64_t v5 = *(void *)(a3 + 40);
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v7 = v5 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(*(void *)(a3 + 40) + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  uint64_t v11 = v10 & v6;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      v11 &= v11 - 1;
      goto LABEL_5;
    }
    int64_t v15 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    if (v15 >= v12) {
      goto LABEL_21;
    }
    uint64_t v16 = *(void *)(v7 + 8 * v15);
    ++v14;
    if (!v16)
    {
      int64_t v14 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_21;
      }
      uint64_t v16 = *(void *)(v7 + 8 * v14);
      if (!v16)
      {
        int64_t v14 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_21;
        }
        uint64_t v16 = *(void *)(v7 + 8 * v14);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v11 = (v16 - 1) & v16;
LABEL_5:
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(a1, sel_fillRect_, FeedItemLayoutAttributes.frame.getter().n128_f64[0]);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 3;
  if (v17 < v12)
  {
    uint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v14 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_25;
        }
        if (v14 >= v12) {
          goto LABEL_21;
        }
        uint64_t v16 = *(void *)(v7 + 8 * v14);
        ++v17;
        if (v16) {
          goto LABEL_20;
        }
      }
    }
    int64_t v14 = v17;
    goto LABEL_20;
  }
LABEL_21:
  return swift_release();
}

uint64_t sub_1C066605C(void **a1, uint64_t a2, void *a3, uint64_t (*a4)(id))
{
  uint64_t v6 = *a1;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v7 = sub_1C151811C();
  uint64_t v9 = v8;
  uint64_t v10 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_layoutImages);
  swift_beginAccess();
  id v11 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v10;
  *uint64_t v10 = 0x8000000000000000;
  sub_1C1067E28((uint64_t)v11, v7, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return a4(v11);
}

uint64_t sub_1C0666164()
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2B5358;
  sub_1C151F36C();
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06662C8(uint64_t a1)
{
  return sub_1C0B4601C(a1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key);
}

uint64_t sub_1C0666308(void *a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v87 = type metadata accessor for FeedItem(0);
  uint64_t v11 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  long long v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DebugInspectViewItem();
  uint64_t v88 = *(void *)(v14 - 8);
  uint64_t v89 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v76 = (uint64_t *)((char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v75 - v17);
  if (!*(void *)(*a1 + 16))
  {
    swift_beginAccess();
    sub_1C03789D4(a3, (uint64_t)&v92);
    swift_endAccess();
    uint64_t v29 = MEMORY[0x1E4FBB1A0];
    sub_1C066A260((uint64_t)&v92, (uint64_t)v90, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0]);
    sub_1BFF5E6C8((uint64_t)v90);
    sub_1C066A260((uint64_t)&v93, (uint64_t)v91, (unint64_t *)&qword_1EB879C00, v29);
    sub_1BFF5E6C8((uint64_t)v91);
    uint64_t v97 = v95;
    sub_1BFCA59C8((uint64_t)&v97);
    return a4(MEMORY[0x1E4FBC860]);
  }
  uint64_t v86 = *a1;
  unint64_t v83 = a3;
  uint64_t v77 = v5;
  uint64_t v80 = a1[1];
  uint64_t v85 = a1[2];
  uint64_t v79 = a2;
  uint64_t v19 = a2 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key;
  uint64_t v20 = (void *)(v19 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  uint64_t v21 = v20[4];
  uint64_t v22 = v20[5];
  __swift_project_boxed_opaque_existential_1(v20 + 1, v21);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v22 + 64))(&v92, v21, v22);
  uint64_t v23 = v94;
  uint64_t v81 = a4;
  uint64_t v82 = a5;
  uint64_t v75 = v11;
  if (v94)
  {
    uint64_t v24 = v95;
    __swift_project_boxed_opaque_existential_1(&v92, v94);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24);
    if (v25)
    {
      uint64_t v26 = *(void *)(v25 + 32);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
      uint64_t v28 = v86;
      goto LABEL_9;
    }
    uint64_t v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
  }
  else
  {
    uint64_t v27 = sub_1BFD10564((uint64_t)&v92);
  }
  uint64_t v28 = v86;
  uint64_t v26 = MEMORY[0x1E4FBC870];
LABEL_9:
  MEMORY[0x1F4188790](v27);
  *(&v75 - 2) = v26;
  *((void *)&v84 + 1) = sub_1C151EBFC();
  *(void *)&long long v92 = 0;
  *((void *)&v92 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&long long v92 = 0xD000000000000011;
  *((void *)&v92 + 1) = 0x80000001C1615250;
  v90[0] = *(void *)(v28 + 16);
  int64_t v31 = v90[0];
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  v90[0] = v85;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v78 = *((void *)&v92 + 1);
  uint64_t v85 = v92;
  *(void *)&long long v92 = 0;
  *((void *)&v92 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151E80C();
  v90[0] = *((void *)&v84 + 1);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v32 = *(void *)(v26 + 16);
  swift_bridgeObjectRelease();
  v90[0] = v32;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  long long v84 = v92;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if (v31)
  {
    *(void *)&long long v92 = MEMORY[0x1E4FBC860];
    uint64_t v34 = v86;
    swift_bridgeObjectRetain();
    sub_1C05F7788(0, v31, 0);
    uint64_t v35 = v34 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
    uint64_t v36 = *(void *)(v75 + 72);
    do
    {
      sub_1C066A084(v35, (uint64_t)v13, type metadata accessor for FeedItem);
      void v18[3] = v87;
      v18[4] = sub_1C066A51C((unint64_t *)&qword_1EB87AF60, (void (*)(uint64_t))type metadata accessor for FeedItem);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v18);
      sub_1C066A084((uint64_t)v13, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      sub_1C066A3EC((uint64_t)v13, type metadata accessor for FeedItem);
      uint64_t v33 = v92;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7788(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v92;
      }
      unint64_t v39 = *(void *)(v33 + 16);
      unint64_t v38 = *(void *)(v33 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_1C05F7788(v38 > 1, v39 + 1, 1);
        uint64_t v33 = v92;
      }
      *(void *)(v33 + 16) = v39 + 1;
      sub_1BFEE32E8((uint64_t)v18, v33+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v39, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      v35 += v36;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = v79;
  uint64_t v41 = v79 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection;
  uint64_t v43 = *(void *)(v79 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection);
  uint64_t v42 = *(void *)(v79 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 8);
  uint64_t v44 = *(void *)(v79 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 16);
  uint64_t v45 = *(void *)(v79 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 24);
  uint64_t v46 = *(void *)(v79 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 32);
  uint64_t v47 = *((void *)&v84 + 1);
  uint64_t v48 = v78;
  *(void *)uint64_t v41 = v85;
  *(void *)(v41 + 8) = v48;
  *(void *)(v41 + 16) = v84;
  *(void *)(v41 + 24) = v47;
  *(void *)(v41 + 32) = v33;
  *(unsigned char *)(v41 + 40) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C066A2E0(v43, v42, v44, v45, v46);
  uint64_t v49 = v40 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections;
  swift_beginAccess();
  int64_t v50 = *(void **)v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v49 = v50;
  unint64_t v51 = v83;
  if (result)
  {
    uint64_t v52 = v81;
    if ((v83 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t result = (uint64_t)sub_1C0378F0C(v50);
  int64_t v50 = (void *)result;
  *(void *)uint64_t v49 = result;
  uint64_t v52 = v81;
  if ((v51 & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
LABEL_19:
  if (v50[2] <= v51)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  long long v53 = &v50[6 * v51];
  uint64_t v54 = *((void *)&v84 + 1);
  v53[4] = v85;
  v53[5] = v48;
  v53[6] = v84;
  v53[7] = v54;
  v53[8] = v33;
  *((unsigned char *)v53 + 72) = 0;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v80;
  if (!*(void *)(v80 + 16)) {
    return v52(v86);
  }
  *(void *)&long long v92 = 0;
  *((void *)&v92 + 1) = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  *(void *)&long long v92 = 0xD000000000000018;
  *((void *)&v92 + 1) = 0x80000001C16152E0;
  v90[0] = *(void *)(v55 + 16);
  int64_t v56 = v90[0];
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C151E80C();
  uint64_t v85 = *((void *)&v92 + 1);
  uint64_t v57 = v92;
  uint64_t v58 = MEMORY[0x1E4FBC860];
  if (v56)
  {
    *(void *)&long long v84 = v92;
    *((void *)&v84 + 1) = v49;
    *(void *)&long long v92 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    uint64_t v87 = v56;
    sub_1C05F7788(0, v56, 0);
    uint64_t v58 = v92;
    unint64_t v59 = (id *)(v55 + 48);
    uint64_t v60 = v76;
    do
    {
      uint64_t v62 = *(v59 - 2);
      long long v61 = *(v59 - 1);
      id v63 = *v59;
      swift_unknownObjectRetain();
      id v64 = v61;
      id v65 = v63;
      swift_unknownObjectRetain();
      id v66 = v64;
      id v67 = objc_msgSend(v62, sel_itemID);
      uint64_t v68 = sub_1C151E62C();
      uint64_t v70 = v69;

      swift_unknownObjectRelease();
      *uint64_t v60 = v68;
      v60[1] = v70;
      objc_msgSend(v66, sel_sortingScore);
      v60[5] = MEMORY[0x1E4FBB3D0];
      v60[6] = MEMORY[0x1E4FBB440];
      v60[2] = v71;
      swift_storeEnumTagMultiPayload();

      swift_unknownObjectRelease();
      *(void *)&long long v92 = v58;
      unint64_t v73 = *(void *)(v58 + 16);
      unint64_t v72 = *(void *)(v58 + 24);
      if (v73 >= v72 >> 1)
      {
        sub_1C05F7788(v72 > 1, v73 + 1, 1);
        uint64_t v58 = v92;
      }
      v59 += 3;
      *(void *)(v58 + 16) = v73 + 1;
      sub_1BFEE32E8((uint64_t)v60, v58+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v73, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      --v87;
    }
    while (v87);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v52 = v81;
    uint64_t v49 = *((void *)&v84 + 1);
    uint64_t v57 = v84;
  }
  uint64_t v74 = v83 + 1;
  if (__OFADD__(v83, 1)) {
    goto LABEL_35;
  }
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v49 + 16) < v74)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if ((v74 & 0x8000000000000000) == 0)
  {
    *(void *)&long long v92 = v57;
    *((void *)&v92 + 1) = v85;
    unint64_t v93 = 0xD000000000000047;
    uint64_t v94 = 0x80000001C1615300;
    uint64_t v95 = v58;
    char v96 = 1;
    sub_1C024702C(v74, v74, &v92);
    swift_endAccess();
    return v52(v86);
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0666E10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = FeedItem.debugIdentifier.getter();
  LOBYTE(a2) = sub_1BFF896B4(v3, v4, a2);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1C0666E54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EA2B5358;
  sub_1C151F36C();
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  v11[0] = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1BFE9C558();
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1C03789D4(a3, (uint64_t)v12);
  swift_endAccess();
  sub_1C066A260((uint64_t)v12, (uint64_t)v11, (unint64_t *)&qword_1EB879C00, v9);
  sub_1BFF5E6C8((uint64_t)v11);
  sub_1C066A260((uint64_t)v13, (uint64_t)v15, (unint64_t *)&qword_1EB879C00, v9);
  sub_1BFF5E6C8((uint64_t)v15);
  uint64_t v14 = v13[2];
  sub_1BFCA59C8((uint64_t)&v14);
  return a4(MEMORY[0x1E4FBC860]);
}

uint64_t sub_1C0667078@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v8);
  uint64_t v17 = v6;
  LOBYTE(v18) = v7;
  uint64_t v10 = type metadata accessor for DebugGroupLayoutKey();
  sub_1C022575C(&v17, (uint64_t)a2 + *(int *)(v10 + 28), v8, v9);
  uint64_t v17 = v6;
  LOBYTE(v18) = v7;
  unint64_t v11 = sub_1C10A75F8();
  uint64_t v13 = v12;
  if (v3)
  {
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();

    uint64_t v15 = v17;
    unint64_t v14 = v18;
  }
  else
  {
    unint64_t v14 = 0xE500000000000000;
    uint64_t v15 = 0x64696C6156;
  }
  *(void *)a3 = v11;
  *(void *)(a3 + 8) = v13;
  *(void *)(a3 + 16) = v15;
  *(void *)(a3 + 24) = v14;
  *(unsigned char *)(a3 + 32) = v3 != 0;
  type metadata accessor for DebugInspectViewItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C06671E0(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 64))(v11, v2, v3);
  uint64_t v4 = v12;
  if (!v12)
  {
    sub_1BFD10564((uint64_t)v11);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1BFEE1664(0, (unint64_t *)&unk_1EA19C5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, MEMORY[0x1E4FBBE00]);
  type metadata accessor for DebugInspectViewItem();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  swift_storeEnumTagMultiPayload();
  return v9;
}

uint64_t sub_1C06673E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24) + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_1C151811C();
  if (*(void *)(v5 + 16)) {
    sub_1BFEF2D8C(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BFFFABA8(v10, v11);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0xE000000000000000;
  *(unsigned char *)(a3 + 56) = 0;
  type metadata accessor for DebugInspectViewItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C06675FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEE1664(0, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v40 - v6;
  sub_1BFEE1664(0, &qword_1EB873480, type metadata accessor for FeedItem, v4);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = type metadata accessor for FeedItem(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = type metadata accessor for DebugInspectViewItem();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (long long *)((char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C066A084(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C066A3EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
    return 0;
  }
  uint64_t v41 = v14;
  uint64_t v22 = v42;
  uint64_t v21 = v43;
  sub_1BFC773DC(v20, (uint64_t)v48);
  sub_1BFC66384((uint64_t)v48, (uint64_t)&v46);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  char v23 = swift_dynamicCast();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v23 & 1) == 0)
  {
    v24(v10, 1, 1, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    sub_1BFEE49BC((uint64_t)v10, &qword_1EB873480, type metadata accessor for FeedItem);
    return 0;
  }
  v24(v10, 0, 1, v11);
  sub_1BFEE32E8((uint64_t)v10, (uint64_t)v17, type metadata accessor for FeedItem);
  uint64_t v25 = (void *)FeedItem.headline.getter();
  if (!v25
    || (id v26 = objc_msgSend(v25, sel_title), swift_unknownObjectRelease(), !v26))
  {
    uint64_t v35 = (uint64_t)v41;
    sub_1C066A084((uint64_t)v17, (uint64_t)v41, type metadata accessor for FeedItem);
    uint64_t v31 = (uint64_t)v7;
    uint64_t v33 = v35;
    goto LABEL_11;
  }
  uint64_t v27 = sub_1C151E62C();
  uint64_t v29 = v28;

  uint64_t v46 = v27;
  uint64_t v47 = v29;
  uint64_t v44 = v22;
  uint64_t v45 = v21;
  uint64_t v30 = sub_1C15164AC();
  uint64_t v31 = (uint64_t)v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 1, 1, v30);
  sub_1BFF27ECC();
  sub_1C151FEEC();
  LOBYTE(v27) = v32;
  sub_1BFEE49BC((uint64_t)v7, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78]);
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t)v41;
  sub_1C066A084((uint64_t)v17, (uint64_t)v41, type metadata accessor for FeedItem);
  if (v27)
  {
LABEL_11:
    uint64_t v46 = FeedItem.identifier.getter();
    uint64_t v47 = v36;
    uint64_t v44 = v22;
    uint64_t v45 = v21;
    uint64_t v37 = sub_1C15164AC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v31, 1, 1, v37);
    sub_1BFF27ECC();
    sub_1C151FEEC();
    BOOL v34 = (v38 & 1) == 0;
    sub_1BFEE49BC(v31, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78]);
    swift_bridgeObjectRelease();
    sub_1C066A3EC(v33, type metadata accessor for FeedItem);
    sub_1C066A3EC((uint64_t)v17, type metadata accessor for FeedItem);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    return v34;
  }
  sub_1C066A3EC(v33, type metadata accessor for FeedItem);
  sub_1C066A3EC((uint64_t)v17, type metadata accessor for FeedItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return 1;
}

void sub_1C0667BDC(void *a1, void *a2, double a3, double a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  if (a2)
  {
    id v14 = a2;
    objc_msgSend(v14, sel_setFill);
    objc_msgSend(a1, sel_fillRect_, 0.0, 0.0, a3, a4);
  }
  if (a6)
  {
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
    objc_msgSend(v15, sel_setAlignment_, 1);
    objc_msgSend(a7, sel_pointSize);
    double v17 = (a4 - v16) * 0.5;
    objc_msgSend(a7, sel_pointSize);
    double v19 = v18;
    uint64_t v20 = (void *)sub_1C151E5EC();
    sub_1BFEE1664(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
    uint64_t v22 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
    uint64_t v23 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    *(void *)(inited + 40) = a8;
    uint64_t v24 = (void *)*MEMORY[0x1E4FB0738];
    *(void *)(inited + 64) = v23;
    *(void *)(inited + 72) = v24;
    uint64_t v25 = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
    *(void *)(inited + 80) = v15;
    id v26 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 104) = v25;
    *(void *)(inited + 112) = v26;
    *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    *(void *)(inited + 120) = a7;
    id v27 = v22;
    id v28 = a8;
    id v29 = v24;
    id v30 = v15;
    id v31 = v26;
    id v32 = a7;
    sub_1BFF991DC(inited);
    type metadata accessor for Key(0);
    sub_1C066A51C((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
    uint64_t v33 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_drawInRect_withAttributes_, v33, 0.0, v17, a3, v19);
  }
}

uint64_t sub_1C0667E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C066A084(a1, (uint64_t)v9, type metadata accessor for FeedItem);
  sub_1C066A084(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C066A140();

LABEL_7:
    uint64_t v18 = 0;
    goto LABEL_8;
  }
  sub_1C066A1C4();
  uint64_t v12 = *(void *)&v6[*(int *)(v11 + 48) + 40];
  uint64_t v13 = FeedItem.identifier.getter();
  if (!*(void *)(v12 + 16) || (unint64_t v15 = sub_1BFEF2D8C(v13, v14), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v17 = *(void *)(*(void *)(v12 + 56) + 8 * v15);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20[1] = v17;
  *(void *)&v21.origin.x = FeedItemLayoutAttributes.frame.getter().n128_u64[0];
  v22.origin.x = 0.0;
  v22.origin.y = 0.0;
  v22.size.width = 0.0;
  v22.size.height = 0.0;
  LODWORD(v17) = CGRectEqualToRect(v21, v22);
  swift_release();
  uint64_t v18 = v17 ^ 1;
LABEL_8:
  sub_1C066A3EC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1C066A3EC((uint64_t)v9, type metadata accessor for FeedItem);
  return v18;
}

uint64_t sub_1C06680BC(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, double a6, double a7)
{
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, a6, a7);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(double *)(v15 + 24) = a6;
  *(double *)(v15 + 32) = a7;
  *(void *)(v15 + 40) = a2;
  *(void *)(v15 + 48) = a3;
  *(void *)(v15 + 56) = a5;
  *(void *)(v15 + 64) = a4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C066A4F8;
  *(void *)(v16 + 24) = v15;
  v23[4] = sub_1BFD2E744;
  v23[5] = v16;
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 1107296256;
  v23[2] = sub_1BFD2E6D0;
  void v23[3] = &block_descriptor_31;
  uint64_t v17 = _Block_copy(v23);
  swift_bridgeObjectRetain();
  id v18 = a5;
  id v19 = a4;
  swift_retain();
  id v20 = a1;
  swift_release();
  id v21 = objc_msgSend(v14, sel_imageWithActions_, v17);

  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return (uint64_t)v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0668294(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C06682F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C066A084(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C066A1C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v21 = 0;
    unint64_t v20 = 0;
    unint64_t v19 = 0;
    unint64_t v17 = 0;
    uint64_t v10 = 0;
    char v18 = 0;
    goto LABEL_7;
  }
  sub_1C066A140();
  id v26 = *(id *)&v6[*(int *)(v7 + 48)];
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (!swift_dynamicCast())
  {

    goto LABEL_6;
  }
  sub_1C066A44C((uint64_t)v25, (uint64_t)v24);
  sub_1BFEE1664(0, (unint64_t *)&unk_1EA19C5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = *(void *)(type metadata accessor for DebugInspectViewItem() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
  unint64_t v11 = v10 + v9;
  unint64_t v12 = sub_1C00FEC9C();
  uint64_t v14 = v13;
  unint64_t v15 = sub_1BFCAD980();
  *(void *)unint64_t v11 = v12;
  *(void *)(v11 + 8) = v14;
  *(void *)(v11 + 16) = v15;
  *(void *)(v11 + 24) = v16;
  *(unsigned char *)(v11 + 32) = 1;
  swift_storeEnumTagMultiPayload();
  sub_1C00FEFD8((uint64_t)v24);

  unint64_t v17 = 0x80000001C16151B0;
  char v18 = 7;
  unint64_t v19 = 0xD000000000000024;
  unint64_t v20 = 0xE500000000000000;
  uint64_t v21 = 0x726F727245;
LABEL_7:
  uint64_t result = sub_1C066A3EC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v10;
  *(unsigned char *)(a2 + 40) = v18;
  return result;
}

double sub_1C06685AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  int64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v4 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v4);
  uint64_t v50 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v49 - v7;
  uint64_t v9 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v52 = (unsigned __int8 *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v49 - v12;
  sub_1BFEE1664(0, (unint64_t *)&unk_1EA19C5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = type metadata accessor for DebugInspectViewItem();
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C152A660;
  uint64_t v53 = v17;
  char v18 = (void *)(v17 + v16);
  *char v18 = 1701667150;
  v18[1] = 0xE400000000000000;
  uint64_t v19 = *(void *)(a1 + 40);
  uint64_t v55 = a1;
  uint64_t v49 = (void *)(a1 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), v19);
  uint64_t v20 = sub_1C0225534();
  uint64_t v21 = MEMORY[0x1E4FBB208];
  v18[5] = MEMORY[0x1E4FBB1A0];
  v18[6] = v21;
  v18[2] = v20;
  void v18[3] = v22;
  uint64_t v54 = v14;
  swift_storeEnumTagMultiPayload();
  uint64_t v58 = v15;
  uint64_t v23 = (void *)((char *)v18 + v15);
  *uint64_t v23 = 1701869908;
  v23[1] = 0xE400000000000000;
  sub_1C066A084(v57, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  uint64_t v51 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C066A140();
  }
  else
  {
    sub_1C066A1C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1BFEE32E8((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1BFC66384((uint64_t)(v13 + 8), (uint64_t)v61);
  sub_1C066A3EC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v25 = v62;
  uint64_t v26 = v63;
  __swift_project_boxed_opaque_existential_1(v61, v62);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 32))(v60, v25, v26);
  unint64_t v27 = v60[0];
  v59[0] = v60[0];
  v59[1] = v60[1];
  v59[2] = v60[2];
  v59[3] = v60[3];
  v59[4] = v60[4];
  unint64_t v28 = FeedGroupKind.description.getter();
  uint64_t v30 = v29;
  sub_1BFE9CBF4(v27);
  uint64_t v31 = MEMORY[0x1E4FBB1A0];
  v23[5] = MEMORY[0x1E4FBB1A0];
  uint64_t v32 = MEMORY[0x1E4FBB208];
  void v23[6] = MEMORY[0x1E4FBB208];
  v23[2] = v28;
  void v23[3] = v30;
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = v57;
  BOOL v34 = (char *)v18 + 2 * v58;
  strcpy(v34, "Layout order");
  v34[13] = 0;
  *((_WORD *)v34 + 7) = -5120;
  uint64_t v35 = v50;
  sub_1C066A084(v33, v50, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C066A140();
  }
  else
  {
    sub_1C066A1C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = v35;
  char v38 = v52;
  sub_1BFEE32E8(v37, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  int v39 = *v38;
  sub_1C066A3EC((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  unint64_t v40 = 0x614C206C61656449;
  if (v39) {
    unint64_t v40 = 0xD000000000000010;
  }
  unint64_t v41 = 0x80000001C1615190;
  *((void *)v34 + 5) = v31;
  *((void *)v34 + 6) = v32;
  if (!v39) {
    unint64_t v41 = 0xEC00000074756F79;
  }
  *((void *)v34 + 2) = v40;
  *((void *)v34 + 3) = v41;
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = (void *)((char *)v18 + 3 * v58);
  *uint64_t v42 = 0x797469726F697250;
  v42[1] = 0xE800000000000000;
  uint64_t v43 = *(void *)(v55 + 40);
  uint64_t v44 = *(void *)(v55 + 48);
  __swift_project_boxed_opaque_existential_1(v49, v43);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v44 + 32))(v59, v43, v44);
  unint64_t v45 = 0xE400000000000000;
  uint64_t v46 = 1701736270;
  switch(LOBYTE(v59[0]))
  {
    case 1:
      unint64_t v45 = 0xE300000000000000;
      uint64_t v46 = 7827276;
      break;
    case 2:
      uint64_t v46 = 1751607624;
      break;
    case 3:
      unint64_t v45 = 0xE900000000000073;
      uint64_t v46 = 0x756F72636964754CLL;
      break;
    default:
      break;
  }
  v42[5] = v31;
  v42[6] = v32;
  void v42[2] = v46;
  v42[3] = v45;
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  *(void *)&double result = 0x74756F79614CLL;
  uint64_t v48 = v56;
  *int64_t v56 = xmmword_1C1557A00;
  *((void *)v48 + 2) = 0;
  *((void *)v48 + 3) = 0;
  *((void *)v48 + 4) = v53;
  *((unsigned char *)v48 + 40) = 5;
  return result;
}

double sub_1C0668BC8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEE1664(0, (unint64_t *)&unk_1EA19C5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = *(void *)(type metadata accessor for DebugInspectViewItem() - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
  uint64_t v8 = (void *)(v7 + v6);
  *uint64_t v8 = 1701667150;
  v8[1] = 0xE400000000000000;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  uint64_t v12 = MEMORY[0x1E4FBB208];
  v8[5] = MEMORY[0x1E4FBB1A0];
  v8[6] = v12;
  v8[2] = v11;
  v8[3] = v13;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (void *)((char *)v8 + v5);
  *uint64_t v14 = 0x656C746954;
  v14[1] = 0xE500000000000000;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  if (v18)
  {
    v14[2] = v17;
    v14[3] = v18;
    uint64_t v19 = MEMORY[0x1E4FBB208];
    uint64_t v20 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v19 = 0;
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = 0;
  }
  v14[5] = v20;
  v14[6] = v19;
  swift_storeEnumTagMultiPayload();
  *(void *)&double result = 0x70756F7247;
  *(_OWORD *)a2 = xmmword_1C1557A10;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 40) = 2;
  return result;
}

double sub_1C0668DD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DebugInspectViewItem();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C066319C(v8);
  swift_bridgeObjectRelease();
  sub_1C104A0F0(v9);
  uint64_t v10 = *(void *)(a1 + 48);
  void *v7 = 0x74756F79614CLL;
  v7[1] = 0xE600000000000000;
  v7[2] = v10;
  swift_storeEnumTagMultiPayload();
  unint64_t v11 = v16;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v11 = sub_1C0EE5EB4(0, *(void *)(v11 + 16) + 1, 1, v11);
  }
  unint64_t v13 = *(void *)(v11 + 16);
  unint64_t v12 = *(void *)(v11 + 24);
  if (v13 >= v12 >> 1) {
    unint64_t v11 = sub_1C0EE5EB4(v12 > 1, v13 + 1, 1, v11);
  }
  *(void *)(v11 + 16) = v13 + 1;
  sub_1BFEE32E8((uint64_t)v7, v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  *(void *)&double result = 0x74616D726F46;
  *(_OWORD *)a2 = xmmword_1C1557A20;
  *(void *)(a2 + 16) = 0xD000000000000071;
  *(void *)(a2 + 24) = 0x80000001C1614F20;
  *(void *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 40) = 9;
  return result;
}

uint64_t sub_1C0668FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v66 = a3;
  uint64_t v5 = type metadata accessor for DebugInspectViewItem();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = type metadata accessor for FeedItem(0);
  uint64_t v67 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v74 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v72 = (char *)&v63 - v10;
  uint64_t v11 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  uint64_t v21 = v20 + 1;
  uint64_t v22 = v20[4];
  uint64_t v23 = v20[5];
  uint64_t v68 = v20;
  __swift_project_boxed_opaque_existential_1(v20 + 1, v22);
  uint64_t v69 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23) + 16);
  swift_bridgeObjectRelease();
  uint64_t v73 = a2;
  sub_1C066A084(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C066A140();
  }
  else
  {
    sub_1C066A1C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1BFEE32E8((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v25 = GroupLayoutBindingContext.count.getter();
  uint64_t result = sub_1C066A3EC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  if (__OFSUB__(v69, v25))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  uint64_t v64 = v69 - v25;
  id v65 = v21;
  uint64_t v27 = v68[4];
  uint64_t v28 = v68[5];
  __swift_project_boxed_opaque_existential_1(v21, v27);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    uint64_t v31 = 0;
    uint64_t v32 = *(unsigned __int8 *)(v67 + 80);
    uint64_t v63 = v29;
    uint64_t v33 = v29 + ((v32 + 32) & ~v32);
    unint64_t v34 = *(void *)(v67 + 72);
    uint64_t v35 = (uint64_t)v72;
    unint64_t v71 = v34;
    while (1)
    {
      sub_1C066A084(v33, v35, type metadata accessor for FeedItem);
      sub_1C066A084(v73, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C066A140();

        unsigned int v37 = 0;
      }
      else
      {
        sub_1C066A1C4();
        uint64_t v39 = *(void *)&v13[*(int *)(v38 + 48) + 40];
        uint64_t v40 = FeedItem.identifier.getter();
        if (*(void *)(v39 + 16) && (unint64_t v42 = sub_1BFEF2D8C(v40, v41), (v43 & 1) != 0))
        {
          uint64_t v44 = *(void *)(*(void *)(v39 + 56) + 8 * v42);
          uint64_t v70 = v44 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v79 = v44;
          *(void *)&v81.origin.x = FeedItemLayoutAttributes.frame.getter().n128_u64[0];
          v82.origin.x = 0.0;
          v82.origin.y = 0.0;
          v82.size.width = 0.0;
          v82.size.height = 0.0;
          LODWORD(v44) = CGRectEqualToRect(v81, v82);
          swift_release();
          unsigned int v37 = v44 ^ 1;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unsigned int v37 = 0;
        }
        unint64_t v34 = v71;
        uint64_t v35 = (uint64_t)v72;
      }
      sub_1C066A3EC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t result = sub_1C066A3EC(v35, type metadata accessor for FeedItem);
      BOOL v45 = __OFADD__(v31, v37);
      v31 += v37;
      if (v45) {
        break;
      }
      v33 += v34;
      if (!--v30)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = 0;
LABEL_18:
  uint64_t v79 = 0x2820736D657449;
  unint64_t v80 = 0xE700000000000000;
  uint64_t v46 = v69;
  uint64_t v78 = v69;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v47 = v79;
  uint64_t v48 = (char *)v80;
  uint64_t v79 = 0;
  unint64_t v80 = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151E80C();
  uint64_t v78 = v64;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v78 = v46;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v78 = v31;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v50 = v79;
  unint64_t v49 = v80;
  uint64_t v51 = v68[4];
  uint64_t v52 = v68[5];
  __swift_project_boxed_opaque_existential_1(v65, v51);
  uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(v51, v52);
  int64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    unint64_t v71 = v49;
    unint64_t v72 = v48;
    uint64_t v73 = v47;
    uint64_t v79 = MEMORY[0x1E4FBC860];
    sub_1C05F7788(0, v54, 0);
    uint64_t v55 = v53 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    uint64_t v56 = *(void *)(v67 + 72);
    do
    {
      uint64_t v57 = v74;
      sub_1C066A084(v55, v74, type metadata accessor for FeedItem);
      v7[3] = v75;
      v7[4] = sub_1C066A51C((unint64_t *)&qword_1EB87AF60, (void (*)(uint64_t))type metadata accessor for FeedItem);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
      sub_1C066A084(v57, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      sub_1C066A3EC(v57, type metadata accessor for FeedItem);
      uint64_t v59 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7788(0, *(void *)(v59 + 16) + 1, 1);
        uint64_t v59 = v79;
      }
      unint64_t v61 = *(void *)(v59 + 16);
      unint64_t v60 = *(void *)(v59 + 24);
      if (v61 >= v60 >> 1)
      {
        sub_1C05F7788(v60 > 1, v61 + 1, 1);
        uint64_t v59 = v79;
      }
      *(void *)(v59 + 16) = v61 + 1;
      sub_1BFEE32E8((uint64_t)v7, v59+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v61, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      v55 += v56;
      --v54;
    }
    while (v54);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v48 = v72;
    uint64_t v47 = v73;
    unint64_t v49 = v71;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v59 = MEMORY[0x1E4FBC860];
  }
  uint64_t v62 = v66;
  *id v66 = v47;
  v62[1] = (uint64_t)v48;
  v62[2] = v50;
  v62[3] = v49;
  v62[4] = v59;
  *((unsigned char *)v62 + 40) = 4;
  return result;
}

double sub_1C066988C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C06671E0(a1);
  uint64_t v5 = (void *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  uint64_t v6 = v5[4];
  uint64_t v7 = v5[5];
  __swift_project_boxed_opaque_existential_1(v5 + 1, v6);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 64))(&v13, v6, v7);
  uint64_t v8 = v15;
  if (v15)
  {
    uint64_t v9 = v16;
    __swift_project_boxed_opaque_existential_1(&v13, v15);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9))
    {
      swift_bridgeObjectRetain();
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  }
  else
  {
    sub_1BFD10564((uint64_t)&v13);
  }
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v10 = v13;
  unint64_t v11 = v14;
  double result = 3.98475595e252;
  *(_OWORD *)a2 = xmmword_1C1557A30;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v4;
  *(unsigned char *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1C0669A3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  BOOL v45 = a2;
  uint64_t v3 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DebugInspectViewItem();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v9 = (uint64_t)a1 + *(int *)(v39 + 28);
  uint64_t v10 = (void *)sub_1C15176CC();
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  v46[0] = 0xD000000000000017;
  v46[1] = 0x80000001C16039A0;
  id v44 = v10;
  UIContentSizeCategory.description.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v37 = v46[1];
  uint64_t v38 = v46[0];
  uint64_t v11 = a1[5];
  uint64_t v12 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v11);
  uint64_t v40 = v9;
  sub_1C0225674(v9, v11, v12);
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C15200FC();
  uint64_t v14 = a1[5];
  uint64_t v13 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v14);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v13 + 40))(&v48, v14, v13);
  uint64_t v15 = v48;
  LOBYTE(v14) = v49;
  v46[6] = v48;
  char v47 = v49;
  uint64_t v16 = GroupLayoutContentSizeCategory.description.getter();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  sub_1BFFFC630(v15, v14);
  v46[0] = v16;
  v46[1] = v18;
  sub_1C151E80C();
  uint64_t v19 = v46[1];
  *(void *)uint64_t v8 = v46[0];
  *((void *)v8 + 1) = v19;
  uint64_t v20 = v37;
  *((void *)v8 + 2) = v38;
  *((void *)v8 + 3) = v20;
  v8[32] = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a1[5];
  uint64_t v22 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v21);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
  MEMORY[0x1F4188790](v23);
  *(&v36 - 2) = (uint64_t)a1;
  uint64_t v38 = sub_1C0184888((uint64_t)sub_1C066A330, (uint64_t)(&v36 - 4), v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = v41;
  sub_1C066A084((uint64_t)a1 + *(int *)(v39 + 24), v41, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v25 = a1[5];
  uint64_t v26 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 48))(v46, v24, v40, v25, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  sub_1C066A3EC(v24, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v28 = v43;
  sub_1BFEE1664(0, (unint64_t *)&unk_1EA19C5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, MEMORY[0x1E4FBBE00]);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C1529AE0;
  sub_1C066A084((uint64_t)v8, v30 + v29, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  v46[0] = v30;
  sub_1C104A0F0(v38);
  sub_1C104A0F0(v27);
  uint64_t v31 = v46[0];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  strcpy((char *)v46, "Requirements (");
  HIBYTE(v46[1]) = -18;
  uint64_t v48 = *(void **)(v31 + 16);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();

  uint64_t v32 = v46[0];
  uint64_t v33 = v46[1];
  uint64_t result = sub_1C066A3EC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  uint64_t v35 = v45;
  *BOOL v45 = v32;
  v35[1] = v33;
  v35[2] = 0;
  void v35[3] = 0;
  v35[4] = v31;
  *((unsigned char *)v35 + 40) = 8;
  return result;
}

uint64_t sub_1C066A084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C066A0EC(uint64_t a1)
{
  return a1;
}

void sub_1C066A140()
{
  if (!qword_1EA19D038)
  {
    type metadata accessor for GroupLayoutBindingContext();
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19D038);
    }
  }
}

void sub_1C066A1C4()
{
  if (!qword_1EA1A3B00)
  {
    type metadata accessor for GroupLayoutBindingContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A3B00);
    }
  }
}

uint64_t sub_1C066A230(uint64_t a1)
{
  return sub_1C0667E8C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1C066A260(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C066A5C8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C066A2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C066A330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0667078(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C066A350@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C06673E4(a1, *(void *)(v2 + 16), a2);
}

void sub_1C066A370()
{
  if (!qword_1EA19D048)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB8779F0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19D048);
    }
  }
}

uint64_t sub_1C066A3EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C066A44C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C066A4A8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C066A4F8(void *a1)
{
  sub_1C0667BDC(a1, *(void **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1C066A50C()
{
  return swift_deallocObject();
}

uint64_t sub_1C066A51C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C066A564()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C066A5AC(void *a1)
{
  return sub_1C0665EA0(a1, *(id *)(v1 + 16), v1 + 24);
}

uint64_t sub_1C066A5B8()
{
  return swift_deallocObject();
}

void sub_1C066A5C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C066A614()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1C066A654@<X0>(uint64_t a1@<X8>)
{
  return sub_1C066596C(*(void *)(v1 + 16), (void *)(v1 + 24), a1);
}

void sub_1C066A674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151E17C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v29 = v5;
    uint64_t v30 = v4;
    uint64_t v31 = a1;
    uint64_t v32 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = 72;
    v28[1] = "or";
    while (2)
    {
      switch(*(unsigned char *)(v9 + v12))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          char v13 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_11;
          }
          ++v11;
          v12 += 48;
          if (v10 != v11) {
            continue;
          }
          swift_bridgeObjectRelease();
          a2 = v32;
          break;
        default:
          swift_bridgeObjectRelease();
LABEL_11:
          swift_bridgeObjectRelease();
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
          uint64_t v21 = v29;
          uint64_t v20 = v30;
          (*(void (**)(char *, void, uint64_t))(v29 + 104))(v7, *MEMORY[0x1E4FBCB28], v30);
          uint64_t v22 = (void *)sub_1C151F5BC();
          (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
          uint64_t v30 = type metadata accessor for DebugInspectViewDataSource();
          sub_1C151931C();

          uint64_t v23 = (void *)sub_1C151F56C();
          uint64_t v24 = (void *)swift_allocObject();
          v24[2] = v11;
          v24[3] = sub_1C066ABB0;
          uint64_t v25 = v32;
          v24[4] = v32;
          swift_retain();
          sub_1C151901C();
          swift_release();

          swift_release();
          uint64_t v26 = (void *)sub_1C151F56C();
          uint64_t v27 = (void *)swift_allocObject();
          v27[2] = v11;
          v27[3] = sub_1C066ABB0;
          void v27[4] = v25;
          swift_retain();
          sub_1C151904C();
          swift_release();
          swift_release();
          swift_release();

          goto LABEL_12;
      }
      break;
    }
  }
  else
  {
    swift_retain();
  }
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C18C9C60](a2 + 16);
  if (v14)
  {
    uint64_t v15 = (char *)v14;
    uint64_t v16 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector;
    uint64_t v17 = swift_retain();
    uint64_t v18 = sub_1C0F771D4(v17, MEMORY[0x1E4FBC860]);
    swift_release();
    *(void *)&v15[v16] = v18;
    swift_release();
    id v19 = objc_msgSend(v15, sel_navigationItem);
    objc_msgSend(v19, sel_setSearchController_, *(void *)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController]);

    objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView], sel_reloadData);
    swift_release();
  }
  else
  {
LABEL_12:
    swift_release();
  }
}

void sub_1C066ABB0(uint64_t a1)
{
  sub_1C0DCDBE8(a1, v1);
}

uint64_t sub_1C066ABB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C066ABF0(void *a1, uint64_t a2)
{
  return sub_1C0666308(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C066AC10(uint64_t a1, uint64_t a2)
{
  return sub_1C0666E54(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
}

uint64_t sub_1C066AC1C(uint64_t a1)
{
  return sub_1C0666E10(a1, *(void *)(v1 + 16));
}

uint64_t FormatButtonNodeLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = swift_allocObject();
  uint64_t v18 = *a3;
  uint64_t v19 = *a5;
  uint64_t v20 = *a8;
  char v21 = *((unsigned char *)a8 + 8);
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = v18;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = v19;
  *(unsigned char *)(result + 56) = a6;
  *(void *)(result + 64) = a7;
  *(void *)(result + 72) = v20;
  *(unsigned char *)(result + 80) = v21;
  *(void *)(result + 88) = a9;
  *(void *)(result + 96) = a10;
  return result;
}

uint64_t FormatButtonNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatButtonNodeLayoutAttributes.stateMaskLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatButtonNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 40);
}

unint64_t FormatButtonNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 48);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatButtonNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatButtonNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatButtonNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatButtonNodeLayoutAttributes.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeLayoutAttributes.init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *a3;
  uint64_t v12 = *a5;
  uint64_t v13 = *a8;
  char v14 = *((unsigned char *)a8 + 8);
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = v12;
  *(unsigned char *)(v10 + 56) = a6;
  *(void *)(v10 + 64) = a7;
  *(void *)(v10 + 72) = v13;
  *(unsigned char *)(v10 + 80) = v14;
  *(void *)(v10 + 88) = a9;
  *(void *)(v10 + 96) = a10;
  return v10;
}

double FormatButtonNodeLayoutAttributes.frame.getter()
{
  return *(double *)(*(void *)(v0 + 16) + 16);
}

uint64_t FormatButtonNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C066ADDC(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0x676E697A69736572;
      break;
    case 3:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 4:
      unint64_t result = 0x696C696269736976;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C066AEE0()
{
  return sub_1C066ADDC(*v0);
}

uint64_t sub_1C066AEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C066C1B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C066AF10(uint64_t a1)
{
  unint64_t v2 = sub_1C066B3B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C066AF4C(uint64_t a1)
{
  unint64_t v2 = sub_1C066B3B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatButtonNodeLayoutAttributes.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatButtonNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C066BAA8(0, &qword_1EA19D058, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C066B3B8();
  sub_1C1520F0C();
  uint64_t v12 = *(void *)(v3 + 16);
  char v14 = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFFD3E20(&qword_1EB88A8A8, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 24);
    char v14 = 1;
    sub_1C066B40C();
    sub_1C066BB0C(&qword_1EA19D070, (void (*)(void))sub_1C006F590, (void (*)(void))sub_1C066B470);
    sub_1C152080C();
    uint64_t v12 = *(void *)(v3 + 32);
    char v14 = 2;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v12) = 3;
    sub_1C15207FC();
    uint64_t v12 = *(void *)(v3 + 48);
    char v14 = 4;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v12) = 5;
    sub_1C15207DC();
    uint64_t v12 = *(void *)(v3 + 64);
    char v14 = 6;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFFD3E20(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    char v10 = *(unsigned char *)(v3 + 80);
    uint64_t v12 = *(void *)(v3 + 72);
    char v13 = v10;
    char v14 = 7;
    sub_1BFDD5084();
    sub_1C152078C();
    LOBYTE(v12) = 8;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C066B3B8()
{
  unint64_t result = qword_1EA19D060;
  if (!qword_1EA19D060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D060);
  }
  return result;
}

void sub_1C066B40C()
{
  if (!qword_1EA19D068)
  {
    sub_1C006F53C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19D068);
    }
  }
}

unint64_t sub_1C066B470()
{
  unint64_t result = qword_1EA19D078;
  if (!qword_1EA19D078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D078);
  }
  return result;
}

uint64_t FormatButtonNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatButtonNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatButtonNodeLayoutAttributes.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C066BAA8(0, &qword_1EA19D080, MEMORY[0x1E4FBBDC0]);
  uint64_t v21 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C066B3B8();
  uint64_t v20 = v8;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    uint64_t v17 = (uint64_t)a1;
  }
  else
  {
    uint64_t v19 = a1;
    uint64_t v9 = v6;
    type metadata accessor for FormatLayoutAttributes();
    char v24 = 0;
    sub_1BFFD3E20(&qword_1EB88A8B0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    uint64_t v10 = v21;
    uint64_t v11 = v20;
    sub_1C15206EC();
    *(void *)(v3 + 16) = v22;
    sub_1C066B40C();
    char v24 = 1;
    sub_1C066BB0C(&qword_1EA19D088, (void (*)(void))sub_1C006F494, (void (*)(void))sub_1C066BB90);
    sub_1C15206EC();
    *(void *)(v3 + 24) = v22;
    char v24 = 2;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v3 + 32) = v22;
    LOBYTE(v22) = 3;
    *(void *)(v3 + 40) = sub_1C15206DC();
    char v24 = 4;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v3 + 48) = v22;
    LOBYTE(v22) = 5;
    *(unsigned char *)(v3 + 56) = sub_1C15206AC() & 1;
    type metadata accessor for FormatContextLayoutOptions();
    char v24 = 6;
    sub_1BFFD3E20(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v3 + 64) = v22;
    char v24 = 7;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v13 = v23;
    *(void *)(v3 + 72) = v22;
    *(unsigned char *)(v3 + 80) = v13;
    LOBYTE(v22) = 8;
    uint64_t v14 = sub_1C152060C();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v10);
    *(void *)(v3 + 88) = v14;
    *(void *)(v3 + 96) = v16;
    uint64_t v17 = (uint64_t)v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v3;
}

void sub_1C066BAA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C066B3B8();
    unint64_t v7 = a3(a1, &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C066BB0C(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C066B40C();
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C066BB90()
{
  unint64_t result = qword_1EA19D090;
  if (!qword_1EA19D090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D090);
  }
  return result;
}

double sub_1C066BBE4()
{
  return *(double *)(*(void *)(*(void *)v0 + 16) + 16);
}

uint64_t sub_1C066BBF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatButtonNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C066BC50(void *a1)
{
  return FormatButtonNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C066BC74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatButtonNodeLayoutAttributes.flipRightToLeft(bounds:)();
  *a1 = result;
  return result;
}

uint64_t FormatButtonNodeLayoutAttributes.flipRightToLeft(bounds:)()
{
  uint64_t v1 = v0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFFD3E20(&qword_1EB88A8A0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C151798C();
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  unint64_t v4 = *(void *)(v1 + 48);
  char v6 = *(unsigned char *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  char v14 = *(unsigned char *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 88);
  uint64_t v10 = *(void *)(v1 + 96);
  uint64_t v13 = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v15;
  *(void *)(v11 + 24) = v2;
  *(void *)(v11 + 32) = v3;
  *(void *)(v11 + 40) = v5;
  *(void *)(v11 + 48) = v4;
  *(unsigned char *)(v11 + 56) = v6;
  *(void *)(v11 + 64) = v7;
  *(void *)(v11 + 72) = v8;
  *(unsigned char *)(v11 + 80) = v14;
  *(void *)(v11 + 88) = v13;
  *(void *)(v11 + 96) = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return v11;
}

uint64_t sub_1C066BE28(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E20(&qword_1EA19D098, a2, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes);
}

uint64_t sub_1C066BE70(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E20(&qword_1EA19D0A0, a2, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes);
}

uint64_t sub_1C066BEB8(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E20(&qword_1EA19D0A8, a2, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes);
}

uint64_t sub_1C066BF00(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD3E20(&qword_1EA19D0B0, a2, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes);
}

uint64_t method lookup function for FormatButtonNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatButtonNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatButtonNodeLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of FormatButtonNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

unsigned char *storeEnumTagSinglePayload for FormatButtonNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C066C070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatButtonNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C066C0AC()
{
  unint64_t result = qword_1EA19D0B8;
  if (!qword_1EA19D0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D0B8);
  }
  return result;
}

unint64_t sub_1C066C104()
{
  unint64_t result = qword_1EA19D0C0;
  if (!qword_1EA19D0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D0C0);
  }
  return result;
}

unint64_t sub_1C066C15C()
{
  unint64_t result = qword_1EA19D0C8;
  if (!qword_1EA19D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D0C8);
  }
  return result;
}

uint64_t sub_1C066C1B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C1608CE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001C1615380 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t SportsRecordRank.rank.getter()
{
  return *(void *)v0;
}

uint64_t SportsRecordRank.rankContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecordRank.rankDescription.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  if (qword_1EA194808 != -1) {
    swift_once();
  }
  unsigned int v4 = (void *)qword_1EA19D0D0;
  id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v1);
  id v6 = objc_msgSend(v4, sel_stringFromNumber_, v5);

  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1BFFDEB20();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1527210;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1BFE9C558();
  *(void *)(v12 + 32) = v7;
  *(void *)(v12 + 40) = v9;
  *(void *)(v12 + 96) = v13;
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 72) = v2;
  *(void *)(v12 + 80) = v3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t static SportsRecordRank.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C066C788()
{
  if (*v0) {
    return 0x746E6F436B6E6172;
  }
  else {
    return 1802396018;
  }
}

uint64_t sub_1C066C7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C066D0F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C066C7EC(uint64_t a1)
{
  unint64_t v2 = sub_1C066CD38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C066C828(uint64_t a1)
{
  unint64_t v2 = sub_1C066CD38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsRecordRank.encode(to:)(void *a1)
{
  sub_1C066CD8C(0, &qword_1EA19D0D8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = *(void *)(v1 + 8);
  v11[0] = *(void *)(v1 + 16);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C066CD38();
  sub_1C1520F0C();
  char v13 = 0;
  sub_1C15207FC();
  if (!v2)
  {
    char v12 = 1;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SportsRecordRank.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C066CD8C(0, &qword_1EA19D0E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C066CD38();
  sub_1C1520EBC();
  if (!v2)
  {
    char v17 = 0;
    uint64_t v10 = sub_1C15206DC();
    char v16 = 1;
    uint64_t v12 = sub_1C152069C();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C066CBA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsRecordRank.init(from:)(a1, a2);
}

uint64_t sub_1C066CBB8(void *a1)
{
  return SportsRecordRank.encode(to:)(a1);
}

uint64_t sub_1C066CBD0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

id sub_1C066CC18()
{
  uint64_t v0 = sub_1C15164AC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
  sub_1C151644C();
  uint64_t v5 = (void *)sub_1C15163DC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  id result = objc_msgSend(v4, sel_setNumberStyle_, 6);
  qword_1EA19D0D0 = (uint64_t)v4;
  return result;
}

unint64_t sub_1C066CD38()
{
  unint64_t result = qword_1EA19D0E0;
  if (!qword_1EA19D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D0E0);
  }
  return result;
}

void sub_1C066CD8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C066CD38();
    unint64_t v7 = a3(a1, &type metadata for SportsRecordRank.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SportsRecordRank(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsRecordRank(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsRecordRank(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsRecordRank()
{
  return &type metadata for SportsRecordRank;
}

uint64_t type metadata accessor for SportsRecordRankFormatter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SportsRecordRank.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C066CFB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsRecordRank.CodingKeys()
{
  return &type metadata for SportsRecordRank.CodingKeys;
}

unint64_t sub_1C066CFEC()
{
  unint64_t result = qword_1EA19D0F0;
  if (!qword_1EA19D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D0F0);
  }
  return result;
}

unint64_t sub_1C066D044()
{
  unint64_t result = qword_1EA19D0F8;
  if (!qword_1EA19D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D0F8);
  }
  return result;
}

unint64_t sub_1C066D09C()
{
  unint64_t result = qword_1EA19D100;
  if (!qword_1EA19D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19D100);
  }
  return result;
}

uint64_t sub_1C066D0F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1802396018 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6F436B6E6172 && a2 == 0xEB00000000747865)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t FormatHeadlineBinding.DateTime.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v39 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v39 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - v12;
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v39 - v15;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v1;
  uint64_t v22 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  unint64_t v23 = sub_1BFEB6A24();
  uint64_t v40 = v19;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatHeadlineBinding.DateTime, v24, v22, (uint64_t)&type metadata for FormatHeadlineBinding.DateTime, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v21, (uint64_t)v19, v23, (uint64_t)&off_1F1C39BC8);
  switch(v20)
  {
    case 1:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C151928C();
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v13, v30, v29);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1C073649C(1, (uint64_t)v13);
      uint64_t v28 = (uint64_t)v13;
      break;
    case 2:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C151928C();
      uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v10, v32, v31);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1C073649C(2, (uint64_t)v10);
      uint64_t v28 = (uint64_t)v10;
      break;
    case 3:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v7, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1C073649C(3, (uint64_t)v7);
      uint64_t v28 = (uint64_t)v7;
      break;
    case 4:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1C151928C();
      uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1EB93CB10);
      uint64_t v37 = (uint64_t)v39;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v39, v36, v35);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1C073649C(4, v37);
      uint64_t v28 = v37;
      break;
    default:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C151928C();
      uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v16, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = (uint64_t)v40;
      sub_1C073649C(0, (uint64_t)v16);
      uint64_t v28 = (uint64_t)v16;
      break;
  }
  sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v27, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatPercentFillSizing.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - v8;
  sub_1C085F0EC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  unint64_t v29 = v1[1];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C085EF24();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB892060, (void (*)(uint64_t))sub_1C085EF24);
  uint64_t v31 = v12;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatPercentFillSizing, v19, v14, (uint64_t)&type metadata for FormatPercentFillSizing, v17, (uint64_t)&type metadata for FormatVersions.StarSky, v15, (uint64_t)v12, v18, (uint64_t)&off_1F1C39BA8);
  uint64_t v20 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CA98);
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06B56F4(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v24 = (uint64_t)v31;
  }
  else
  {
    uint64_t v25 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    unint64_t v26 = v29;
    sub_1BFE60260(v29);
    uint64_t v27 = (uint64_t)v31;
    sub_1C06B58CC(v26, 1, 0, 0, v25, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v25, type metadata accessor for FormatVersionRequirement);
    sub_1BFD7F858(v26);
    uint64_t v24 = v27;
  }
  return sub_1BFEFEB68(v24, (uint64_t (*)(void))sub_1C085F0EC);
}

uint64_t FormatPercentFillSpacing.encode(to:)(void *a1)
{
  return sub_1C07D3784(a1, (uint64_t)&type metadata for FormatPercentFillSpacing, (void (*)(uint64_t, char *))sub_1C0730C70, (void (*)(uint64_t, uint64_t, char *))sub_1C067F830, (void (*)(uint64_t))sub_1BFD7F858);
}

uint64_t FormatProgressPieOptions.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  sub_1C085F214();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C085F2A8();
  sub_1C085F050(&qword_1EB86CDF8, (void (*)(uint64_t))sub_1C085F2A8);
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *((void *)v16 - 2);
      uint64_t v19 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_1C07F77E4();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v18;
      *(void *)(v21 + 8) = v19;
      *(void *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C07F13A4((void (*)(void))sub_1C085F214, (uint64_t *)&v37);
  uint64_t v17 = v37;
  long long v31 = xmmword_1C153AB20;
  long long v37 = xmmword_1C153AB20;
  char v38 = 0;
  if (sub_1C152071C())
  {
    long long v35 = v31;
    char v36 = 0;
    sub_1BFFC82FC();
    sub_1C15206EC();
    uint64_t v29 = v32;
    uint64_t v30 = v33;
    LODWORD(v31) = v34;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    LODWORD(v31) = 0;
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v37 = xmmword_1C1557FA0;
  char v38 = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v23 = v35;
  sub_1C07F13A4((void (*)(void))sub_1C085F214, (uint64_t *)&v37);
  uint64_t v28 = v37;
  sub_1C07F1254((void (*)(void))sub_1C085F214, (uint64_t *)&v37);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  uint64_t v24 = v37;
  uint64_t v25 = v29;
  *(void *)uint64_t v11 = v17;
  *(void *)(v11 + 8) = v25;
  *(void *)(v11 + 16) = v30;
  *(unsigned char *)(v11 + 24) = v31;
  uint64_t v26 = v28;
  *(void *)(v11 + 32) = v23;
  *(void *)(v11 + 40) = v26;
  *(void *)(v11 + 48) = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatProgressPieOptions.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v48 = (char *)&v41 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v41 - v10;
  MEMORY[0x1F4188790](v11);
  int64_t v54 = (char *)&v41 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  sub_1C085F428();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)v1;
  uint64_t v19 = *(void *)(v1 + 8);
  uint64_t v52 = *(void *)(v1 + 16);
  uint64_t v53 = v19;
  int v51 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v49 = *(void *)(v1 + 32);
  uint64_t v47 = *(void *)(v1 + 40);
  uint64_t v45 = *(void *)(v1 + 48);
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1C085F2A8();
  uint64_t v24 = v23;
  uint64_t v25 = sub_1C085F050(&qword_1EB86CDF8, (void (*)(uint64_t))sub_1C085F2A8);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatProgressPieOptions, v26, v21, (uint64_t)&type metadata for FormatProgressPieOptions, v24, (uint64_t)&type metadata for FormatVersions.Dawnburst, v22, (uint64_t)v18, v25, (uint64_t)&off_1F1C39BC8);
  uint64_t v27 = qword_1EB887668;
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1C151928C();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CB10);
  uint64_t v30 = *(void (**)(char *))(*(void *)(v28 - 8) + 16);
  v30(v15);
  uint64_t v55 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06CC9E4(v20, 0, 0, 0, (uint64_t)v15, (uint64_t)sub_1C01B158C, 0);
  if (!v3)
  {
    id v44 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t)v54;
    uint64_t v42 = (void (*)(char *, uint64_t, uint64_t))v30;
    uint64_t v43 = v29;
    ((void (*)(char *, uint64_t, uint64_t))v30)(v54, v29, v28);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = v52;
    uint64_t v33 = v53;
    int v34 = v51;
    sub_1BFE94AB4(v53, v52, v51);
    sub_1C06CCC28(v33, v32, v34, 1, 0, 0, v31, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v31, v44);
    sub_1BFE94AD4(v33, v32, v34);
    uint64_t v35 = (uint64_t)v50;
    v42(v50, v43, v28);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_1C06F9B30(v36, 2, 0, 0, v35, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v48;
    v42(v48, v43, v28);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = swift_bridgeObjectRetain();
    sub_1C06CC9E4(v38, 3, 0, 0, v37, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v15 = v46;
    v42(v46, v43, v28);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = swift_bridgeObjectRetain();
    sub_1C06CCDF0(v40, 4, 0, 0, (uint64_t)v15, (uint64_t)sub_1C01B158C, 0);
  }
  sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68((uint64_t)v18, (uint64_t (*)(void))sub_1C085F428);
}

uint64_t FormatProgressViewNodeProgress.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFD20050(a1, (void (*)(uint64_t))sub_1C085F550, (uint64_t)&_s10CodingTypeON_197, (uint64_t)&unk_1F1B64618, a2);
}

uint64_t FormatProgressViewNodeProgress.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - v6;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)v1;
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v13 = *(void *)(v1 + 16);
  unsigned int v14 = *(__int16 *)(v1 + 24);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  unint64_t v17 = sub_1BFEB6A24();
  uint64_t v33 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatProgressViewNodeProgress, v18, v15, (uint64_t)&type metadata for FormatProgressViewNodeProgress, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyE, v16, (uint64_t)v10, v17, (uint64_t)&off_1F1C39B88);
  if ((v14 & 0x80000000) != 0)
  {
    uint64_t v24 = v32;
    sub_1C085F5A4(v12, v11, v13, v14, BYTE1(v14) & 0x7F, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
    uint64_t v25 = v13;
    __int16 v26 = v14;
    if (qword_1EB887658 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1C151928C();
    uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CAF8);
    uint64_t v29 = (uint64_t)v24;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v28, v27);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t)v24;
    uint64_t v31 = (uint64_t)v33;
    sub_1C06A033C(1, v12, v11, v25, v26 & 0x7FFF, v30);
    sub_1BFEFEB68(v29, type metadata accessor for FormatVersionRequirement);
    sub_1BFEFEB68(v31, (uint64_t (*)(void))sub_1BFEFF7D8);
    return sub_1BFD075C0(v12, v11, v25, v26);
  }
  else
  {
    uint64_t v19 = qword_1EB887658;
    swift_bridgeObjectRetain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAF8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v7, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = (uint64_t)v33;
    sub_1C06A0170(0, v12, (uint64_t)v7);
    sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
    sub_1BFD075C0(v12, v11, v13, v14);
    return sub_1BFEFEB68(v22, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t FormatOptionsNodeStatementModifier.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = &unk_1F1B64C10;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C085F65C();
  long long v24 = 0uLL;
  sub_1C15206EC();
  if (v25)
  {
    long long v24 = xmmword_1C152C800;
    if (v25 == 1)
    {
      sub_1C085F6B0();
      sub_1C15206EC();
      unint64_t v17 = v23;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      char v18 = v25 | 0x40;
    }
    else
    {
      sub_1C0660310();
      sub_1C15206EC();
      unint64_t v17 = v23;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      char v18 = 0x80;
    }
  }
  else
  {
    long long v24 = xmmword_1C152C800;
    sub_1C085F704();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v18 = v25;
    unint64_t v17 = v23;
  }
  char *v17 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatOptionsNodeStatementModifier.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v28 - v7;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v28 - v10;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v15 = *v1;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  unint64_t v18 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionsNodeStatementModifier, v19, v16, (uint64_t)&type metadata for FormatOptionsNodeStatementModifier, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v17, (uint64_t)v14, v18, (uint64_t)&off_1F1C39BC8);
  if (v15 >> 6)
  {
    if (v15 >> 6 == 1)
    {
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1C151928C();
      uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C06757DC(1, v15 & 1, (uint64_t)v8);
      uint64_t v22 = (uint64_t)v8;
    }
    else
    {
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C151928C();
      uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v5, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C0675974(2, (uint64_t)v5);
      uint64_t v22 = (uint64_t)v5;
    }
  }
  else
  {
    if (qword_1EB887668 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1C151928C();
    uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CB10);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v11, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0675648(0, v15, (uint64_t)v11);
    uint64_t v22 = (uint64_t)v11;
  }
  sub_1BFEFEB68(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatSnippet.__allocating_init(from:)(void *a1)
{
  return sub_1BFE20278(a1);
}

uint64_t FormatGroupBinding.Float.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      unsigned int v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = &unk_1F1B65AE0;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0860140();
  long long v24 = 0uLL;
  sub_1C15206EC();
  long long v24 = xmmword_1C152C800;
  if (v25)
  {
    sub_1C0860194();
    sub_1C15206EC();
    uint64_t v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v18 = v25 | 0x80;
  }
  else
  {
    sub_1C08601E8();
    sub_1C15206EC();
    uint64_t v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v18 = v25;
  }
  unsigned char *v17 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatGroupBinding.Float.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatGroupBinding.Float, v16, v13, (uint64_t)&type metadata for FormatGroupBinding.Float, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyE, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39B88);
  if (v12 < 0)
  {
    if (qword_1EB8849C8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C790);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C068EF98(1, v12 & 0x7F, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB887658 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CAF8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C068EE00(0, v12 & 1, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatTagBinding.Font.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0778344(a1, (void (*)(uint64_t))sub_1C086023C, (uint64_t)&_s4FontO10CodingTypeON, (uint64_t)&unk_1F1B65BC0, a2);
}

uint64_t FormatTagBinding.Font.encode(to:)(void *a1)
{
  return sub_1C07786B4(a1, (uint64_t)&type metadata for FormatTagBinding.Font, (void (*)(uint64_t, uint64_t, void, char *, double))sub_1C0696144);
}

uint64_t static FormatBoxScoreDataVisualization.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1C08542FC(a1, a2) & 1;
}

uint64_t FormatButtonNode.__allocating_init(from:)(void *a1)
{
  return sub_1BFD92C34(a1);
}

void *FormatVariableNode.__allocating_init(from:)(void *a1)
{
  return sub_1C0860538(a1);
}

uint64_t FormatVariableNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v31 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - v8;
  sub_1C0860A44();
  MEMORY[0x1F4188790](v10 - 8);
  int v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C0860B6C();
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C085F050(&qword_1EB86CCE8, (void (*)(uint64_t))sub_1C0860B6C);
  sub_1BFEFBD78(v4, v18, v13, v4, v16, (uint64_t)&type metadata for FormatVersions.SydroF, v14, (uint64_t)v12, v17, (uint64_t)&off_1F1C39B48);
  swift_beginAccess();
  uint64_t v19 = v2[2];
  uint64_t v20 = v2[3];
  uint64_t v21 = qword_1EB887630;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CA80);
  long long v24 = *(void (**)(char *))(*(void *)(v22 - 8) + 16);
  uint64_t v30 = v23;
  v24(v9);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v32;
  sub_1C06D4140(v19, v20, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    swift_beginAccess();
    uint64_t v26 = v2[4];
    uint64_t v27 = (uint64_t)v31;
    ((void (*)(char *, uint64_t, uint64_t))v24)(v31, v30, v22);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if (sub_1C083C1B8(v27, 1, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v33 = xmmword_1C153AB20;
      char v34 = 0;
      uint64_t v35 = v26;
      sub_1C0860AD8();
      sub_1C085F050(&qword_1EB86E280, (void (*)(uint64_t))sub_1C0860AD8);
      sub_1BFE309D0(0, &qword_1EB85DF40, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, MEMORY[0x1E4FBB320]);
      sub_1BFFE7CE4();
      sub_1C1520BAC();
    }
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68((uint64_t)v12, (uint64_t (*)(void))sub_1C0860A44);
}

uint64_t FormatWeatherBinding.Image.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v25;
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v17;
      *(void *)(v19 + 16) = &unk_1F1B66708;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0860CEC();
  long long v23 = 0uLL;
  sub_1C15206EC();
  long long v22 = xmmword_1C152C800;
  sub_1BFD67C50();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
  __int16 v21 = v24;
  *(_OWORD *)uint64_t v13 = v23;
  *(_WORD *)(v13 + 16) = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatWeatherBinding.Image.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)v1;
  uint64_t v10 = *(void *)(v1 + 8);
  uint64_t v11 = *(unsigned __int8 *)(v1 + 16);
  __int16 v12 = *(unsigned __int8 *)(v1 + 17);
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatWeatherBinding.Image, v16, v14, (uint64_t)&type metadata for FormatWeatherBinding.Image, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Sydro, v13, (uint64_t)v8, v15, (uint64_t)&off_1F1C39B28);
  sub_1BFF61744(v9, v10, v11, v12);
  if (qword_1EB887600 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C151928C();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CA08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C0689A1C(v9, v10, v11 | (v12 << 8), (uint64_t)v5);
  sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BFEFEB68((uint64_t)v8, (uint64_t (*)(void))sub_1BFEFF7D8);
  return sub_1BFF61770(v9, v10, v11, v12);
}

uint64_t FormatSportsEventBinding.Bool.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  uint64_t v11 = v28;
  uint64_t v12 = a1[3];
  __int16 v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t v13 = sub_1C1520EAC();
  LOBYTE(v12) = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = &unk_1F1B66838;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      a1 = v24;
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0861310();
  long long v27 = 0uLL;
  sub_1C15206EC();
  if ((_BYTE)v25)
  {
    if (v25 == 1)
    {
      long long v27 = xmmword_1C152C800;
      sub_1BFCBCC3C();
      sub_1C15206EC();
      a1 = v24;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      uint64_t v18 = v25;
      char v19 = 64;
    }
    else
    {
      sub_1BFEFF3E8(0, &qword_1EA19D128, (uint64_t (*)(void))sub_1C0861364, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
      long long v27 = xmmword_1C152C800;
      sub_1C08613B8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      a1 = v24;
      uint64_t v18 = v25;
      char v19 = v26 | 0x80;
    }
  }
  else
  {
    long long v27 = xmmword_1C152C800;
    sub_1BFCBCC3C();
    sub_1C15206EC();
    a1 = v24;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
    char v19 = 0;
    uint64_t v18 = v25;
  }
  *(void *)uint64_t v11 = v18;
  *(unsigned char *)(v11 + 8) = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSportsEventBinding.Bool.encode(to:)(void *a1)
{
  return sub_1C07CF644(a1, (uint64_t)&type metadata for FormatSportsEventBinding.Bool, (void (*)(uint64_t, uint64_t, char *))sub_1C067F2F0, (void (*)(uint64_t, uint64_t, void, char *))sub_1C067F484);
}

void *FormatSpaceNode.__allocating_init(from:)(void *a1)
{
  return sub_1BFE1CA40(a1);
}

uint64_t FormatVideoNodeContent.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v39 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v10 = (void *)v40;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_15:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  *(void *)&long long v40 = v5;
  uint64_t v12 = v43;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v14)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v11 = (void *)swift_allocError();
      *(void *)uint64_t v25 = v24;
      *(void *)(v25 + 8) = v19;
      *(void *)(v25 + 16) = &unk_1F1B67AC0;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v24, v19);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v7);
      goto LABEL_15;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C086169C();
  v41[0] = 0uLL;
  sub_1C15206EC();
  uint64_t v20 = v39;
  switch((char)v42)
  {
    case 1:
      sub_1BFEFF3E8(0, &qword_1EA19D158, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
      long long v42 = xmmword_1C152C800;
      sub_1C0861884();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      uint64_t v27 = *((void *)&v41[0] + 1);
      uint64_t v26 = *(void *)&v41[0];
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v26;
      *(void *)(v28 + 24) = v27;
      unint64_t v22 = v28 | 0x2000000000000000;
      break;
    case 2:
      sub_1BFEFF3E8(0, qword_1EB8606E8, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
      long long v42 = xmmword_1C152C800;
      sub_1C08617F0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      uint64_t v30 = *((void *)&v41[0] + 1);
      uint64_t v29 = *(void *)&v41[0];
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v29;
      *(void *)(v31 + 24) = v30;
      unint64_t v22 = v31 | 0x4000000000000000;
      break;
    case 3:
      long long v42 = xmmword_1C152C800;
      sub_1C0861784();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      uint64_t v32 = *(void *)&v41[0];
      long long v40 = *(_OWORD *)((char *)v41 + 8);
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = v40;
      unint64_t v22 = v33 | 0x6000000000000000;
      break;
    case 4:
      sub_1BFEFF3E8(0, &qword_1EA19D140, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v42 = xmmword_1C152C800;
      sub_1C08616F0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      uint64_t v36 = *((void *)&v41[0] + 1);
      uint64_t v35 = *(void *)&v41[0];
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v35;
      *(void *)(v37 + 24) = v36;
      unint64_t v22 = v37 | 0x8000000000000000;
      break;
    default:
      v41[0] = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB8600F0, (void (*)(uint64_t))type metadata accessor for FormatRemoteVideo);
      uint64_t v21 = v40;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      unint64_t v22 = swift_allocBox();
      sub_1BFE7FB8C(v21, v23, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      break;
  }
  *uint64_t v12 = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatVideoNodeContent.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v63 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v62 = (char *)&v61 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v61 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v61 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v61 - v15;
  uint64_t v17 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *v2;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  unint64_t v26 = sub_1BFEB6A24();
  uint64_t v64 = v22;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatVideoNodeContent, v27, v24, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v25, (uint64_t)v22, v26, (uint64_t)&off_1F1C39B08);
  switch(v23 >> 61)
  {
    case 1uLL:
      uint64_t v35 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v34 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v36 = qword_1EB887620;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v36 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1C151928C();
      uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v13, v38, v37);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v64;
      sub_1C0682F20(1, v35, v34, (uint64_t)v13);
      sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v39, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      return swift_bridgeObjectRelease();
    case 2uLL:
      uint64_t v41 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v42 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v43 = qword_1EB887620;
      swift_retain();
      swift_retain();
      if (v43 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1C151928C();
      uint64_t v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v10, v45, v44);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v64;
      sub_1C06830F4(2, v41, v42, (uint64_t)v10);
      sub_1BFEFEB68((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v46, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      return swift_release();
    case 3uLL:
      uint64_t v47 = v23 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v48 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v50 = *(void *)(v47 + 32);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CA50);
      uint64_t v53 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v62, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = (uint64_t)v64;
      sub_1C06832C8(3, v48, v49, v50, v53);
      uint64_t v32 = type metadata accessor for FormatVersionRequirement;
      uint64_t v33 = v53;
      goto LABEL_14;
    case 4uLL:
      uint64_t v54 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v55 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v56 = qword_1EB887638;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v56 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CA98);
      uint64_t v59 = (uint64_t)v63;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v63, v58, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = (uint64_t)v64;
      sub_1C0683460(4, v54, v55, v59);
      sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v60, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      return swift_release();
    default:
      uint64_t v28 = swift_projectBox();
      sub_1BFE80E70(v28, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C151928C();
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v16, v30, v29);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = (uint64_t)v64;
      sub_1C0682D4C(0, (uint64_t)v19, (uint64_t)v16);
      sub_1BFEFEB68((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
      uint64_t v32 = (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo;
      uint64_t v33 = (uint64_t)v19;
LABEL_14:
      sub_1BFEFEB68(v33, v32);
      return sub_1BFEFEB68(v31, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t FormatBindingImageExpressionLogic.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBindingImageExpressionLogic, v16, v13, (uint64_t)&type metadata for FormatBindingImageExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39B68);
  if (v12)
  {
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C072F0AC(1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C072F0AC(0, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatSupplementaryNodeRubberbandTrait.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  uint64_t v11 = v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v9;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v18;
      *(void *)(v21 + 16) = &unk_1F1B68240;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0861C68();
  long long v25 = 0uLL;
  sub_1C15206EC();
  if (v26)
  {
    long long v25 = xmmword_1C152C800;
    sub_1C01ECF9C();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
    char v19 = v26;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
    char v19 = 2;
  }
  *uint64_t v11 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSupplementaryNodeRubberbandTrait.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTrait, v16, v13, (uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTrait, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39B48);
  if (v12 == 2)
  {
    if (qword_1EB887630 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CA80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C072E8C4(0, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  else
  {
    if (qword_1EB887630 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CA80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0674FB4(1, v12 & 1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFD55F84(a1, (void (*)(uint64_t))sub_1C0861CBC, (uint64_t)&_s10CodingTypeON_188, (uint64_t)&unk_1F1B68290, a2);
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTraitTransform, v16, v13, (uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTraitTransform, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39B48);
  if (v12)
  {
    if (qword_1EB887630 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CA80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C072E4C8(1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB887630 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CA80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C072E4C8(0, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatSlotItemOrdering.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFD55F84(a1, (void (*)(uint64_t))sub_1C0861DA0, (uint64_t)&_s10CodingTypeON_186, (uint64_t)&unk_1F1B68330, a2);
}

uint64_t FormatSlotItemOrdering.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSlotItemOrdering, v16, v13, (uint64_t)&type metadata for FormatSlotItemOrdering, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.DawnburstF, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39AC8);
  if (v12)
  {
    if (qword_1EB8849C8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93C790);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0731EF8(1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB8849C8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C790);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0731EF8(0, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatLayeredMediaNodeBinding.encode(to:)(void *a1)
{
  return sub_1C0786A78(a1, (uint64_t)&type metadata for FormatLayeredMediaNodeBinding, (void (*)(void, char *))sub_1C0679754, (void (*)(uint64_t, char *))sub_1C06798E0);
}

uint64_t FormatTextNodeNumber.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  sub_1C0861E48();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0861EDC();
  sub_1C085F050(&qword_1EB86CD28, (void (*)(uint64_t))sub_1C0861EDC);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v7;
  uint64_t v13 = v29;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v29 = v6;
      uint64_t v19 = *((void *)v16 - 2);
      uint64_t v20 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v21);
      *(&v29 - 4) = (uint64_t)&_s10CodingKeysON_261;
      *(&v29 - 3) = sub_1C0861F60();
      *(&v29 - 2) = sub_1C0861FB4();
      *(&v29 - 1) = sub_1C0862008();
      swift_getKeyPath();
      swift_retain();
      uint64_t v22 = sub_1C085FB14((uint64_t)&unk_1F1B683D0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v19;
      *(void *)(v23 + 8) = v20;
      *(void *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v29);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C086205C();
  long long v32 = 0uLL;
  LOBYTE(v33) = 0;
  sub_1C15206EC();
  uint64_t v17 = v30;
  char v18 = BYTE8(v30);
  long long v30 = xmmword_1C153AB20;
  char v31 = 0;
  sub_1C04671C8();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v6);
  char v25 = v39;
  *(void *)uint64_t v13 = v17;
  *(unsigned char *)(v13 + 8) = v18;
  *(_DWORD *)(v13 + 9) = *(_DWORD *)v40;
  *(_DWORD *)(v13 + 12) = *(_DWORD *)&v40[3];
  long long v26 = v33;
  *(_OWORD *)(v13 + 16) = v32;
  *(_OWORD *)(v13 + 32) = v26;
  long long v27 = v35;
  *(_OWORD *)(v13 + 48) = v34;
  *(_OWORD *)(v13 + 64) = v27;
  long long v28 = v37;
  *(_OWORD *)(v13 + 80) = v36;
  *(_OWORD *)(v13 + 96) = v28;
  *(_OWORD *)(v13 + 112) = v38;
  *(unsigned char *)(v13 + 128) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatTextNodeNumber.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - v7;
  sub_1C08620B0();
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)v1;
  char v13 = *(unsigned char *)(v1 + 8);
  sub_1BFE99AAC(v1 + 16, (uint64_t)v30, &qword_1EB8645E8, (uint64_t)&type metadata for FormatNumberFormat);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C0861EDC();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB86CD28, (void (*)(uint64_t))sub_1C0861EDC);
  char v31 = v11;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextNodeNumber, v19, v14, (uint64_t)&type metadata for FormatTextNodeNumber, v17, (uint64_t)&type metadata for FormatVersions.JazzkonG, v15, (uint64_t)v11, v18, (uint64_t)&off_1F1C39AE8);
  sub_1C01EF338(v12, v13);
  if (qword_1EB887640 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAC8);
  uint64_t v22 = *(void (**)(char *))(*(void *)(v20 - 8) + 16);
  uint64_t v28 = v21;
  v22(v8);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06B9614(v12, v13, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  sub_1C01EF35C(v12, v13);
  if (v2)
  {
    uint64_t v23 = (uint64_t)v31;
  }
  else
  {
    uint64_t v24 = (uint64_t)v29;
    ((void (*)(char *, uint64_t, uint64_t))v22)(v29, v28, v20);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = (uint64_t)v31;
    sub_1C0706050((uint64_t)v30, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    uint64_t v23 = v25;
  }
  return sub_1BFEFEB68(v23, (uint64_t (*)(void))sub_1C08620B0);
}

uint64_t FormatSlotItemTagFilterCondition.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v28 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v8;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v16;
      *(void *)(v19 + 16) = &unk_1F1B68A68;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v16);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C08621D8();
  long long v27 = 0uLL;
  sub_1C15206EC();
  switch((char)v26)
  {
    case 1:
      unint64_t v17 = 0xC000000000000008;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      break;
    case 2:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      unint64_t v17 = 0xC000000000000010;
      break;
    case 3:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      unint64_t v17 = 0xC000000000000018;
      break;
    case 4:
      long long v26 = xmmword_1C152C800;
      sub_1C08622D0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      long long v21 = v27;
      unint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v21;
      break;
    case 5:
      long long v26 = xmmword_1C152C800;
      sub_1C0862264();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      long long v22 = v27;
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v22;
      unint64_t v17 = v23 | 0x4000000000000000;
      break;
    case 6:
      long long v27 = xmmword_1C152C800;
      sub_1C0403238();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      uint64_t v24 = v26;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      unint64_t v17 = v25 | 0x8000000000000000;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      unint64_t v17 = 0xC000000000000000;
      break;
  }
  *uint64_t v28 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t FormatSlotItemTagFilterCondition.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v54 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v54 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v56 = (char *)&v54 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v54 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v54 = (char *)&v54 - v18;
  MEMORY[0x1F4188790](v19);
  long long v21 = (char *)&v54 - v20;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = *v2;
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  unint64_t v28 = sub_1BFEB6A24();
  uint64_t v57 = v24;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSlotItemTagFilterCondition, v29, v26, (uint64_t)&type metadata for FormatSlotItemTagFilterCondition, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.DawnburstC, v27, (uint64_t)v24, v28, (uint64_t)&off_1F1C39A88);
  switch(v25 >> 62)
  {
    case 1uLL:
      unint64_t v31 = *(void *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v30 = *(void *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFF58F10(v31);
      sub_1BFF58F10(v30);
      if (qword_1EB8875E0 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93C9D8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v9, v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = (uint64_t)v57;
      sub_1C0676788(5, v31, v30, (uint64_t)v9);
      uint64_t v35 = (uint64_t)v9;
      goto LABEL_8;
    case 2uLL:
      unint64_t v39 = *(void *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF58F10(v39);
      if (qword_1EB8875E0 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C151928C();
      uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EB93C9D8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v6, v41, v40);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v57;
      sub_1C067691C(6, v39, (uint64_t)v6);
      sub_1BFEFEB68((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v42, (uint64_t (*)(void))sub_1BFEFF7D8);
      unint64_t result = sub_1BFF07CD8(v39);
      break;
    case 3uLL:
      *((void *)&v43 + 1) = v25;
      *(void *)&long long v43 = v25 + 0x4000000000000000;
      switch((unint64_t)(v43 >> 3))
      {
        case 1uLL:
          if (qword_1EB8875E0 != -1) {
            swift_once();
          }
          uint64_t v47 = sub_1C151928C();
          uint64_t v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1EB93C9D8);
          long long v21 = v54;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v54, v48, v47);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v46 = 1;
          break;
        case 2uLL:
          if (qword_1EB8875E0 != -1) {
            swift_once();
          }
          uint64_t v49 = sub_1C151928C();
          uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93C9D8);
          long long v21 = v55;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v55, v50, v49);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v46 = 2;
          break;
        case 3uLL:
          if (qword_1EB8875E0 != -1) {
            swift_once();
          }
          uint64_t v51 = sub_1C151928C();
          uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93C9D8);
          long long v21 = v56;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v56, v52, v51);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v46 = 3;
          break;
        default:
          if (qword_1EB8875E0 != -1) {
            swift_once();
          }
          uint64_t v44 = sub_1C151928C();
          uint64_t v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1EB93C9D8);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v21, v45, v44);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v46 = 0;
          break;
      }
      uint64_t v53 = (uint64_t)v57;
      sub_1C072F354(v46, (uint64_t)v21);
      sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
      unint64_t result = sub_1BFEFEB68(v53, (uint64_t (*)(void))sub_1BFEFF7D8);
      break;
    default:
      unint64_t v31 = *(void *)(v25 + 16);
      unint64_t v30 = *(void *)(v25 + 24);
      sub_1BFF58F10(v31);
      sub_1BFF58F10(v30);
      if (qword_1EB8875E0 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1C151928C();
      uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB93C9D8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v12, v33, v32);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = (uint64_t)v57;
      sub_1C06765F4(4, v31, v30, (uint64_t)v12);
      uint64_t v35 = (uint64_t)v12;
LABEL_8:
      sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v34, (uint64_t (*)(void))sub_1BFEFF7D8);
      sub_1BFF07CD8(v31);
      unint64_t result = sub_1BFF07CD8(v30);
      break;
  }
  return result;
}

uint64_t FormatAdMetricsNode.__allocating_init(from:)(void *a1)
{
  return sub_1BFD45154(a1);
}

uint64_t FormatIssueCoverNode.__allocating_init(from:)(void *a1)
{
  return sub_1BFCD29E0(a1);
}

uint64_t FormatStateMachineInlineInput.Scope.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v20 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v19[1] = (char *)v19 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v19 - v8;
  int v21 = *v1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1EB887640 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB93CAC8);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = v25;
  sub_1BFE97CE8((uint64_t)v9, (uint64_t)sub_1C01B158C, 0, v10, v11);
  uint64_t result = sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    uint64_t v17 = v22[3];
    uint64_t v25 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v17);
    uint64_t v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BFE97CE8(v18, (uint64_t)sub_1C01B158C, 0, v17, v25);
    sub_1BFEFEB68(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  return result;
}

uint64_t FormatStateMachineInlineInput.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  sub_1C0863008();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086309C();
  sub_1C085F050(&qword_1EA19D1C0, (void (*)(uint64_t))sub_1C086309C);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v29;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v29 = *((void *)v16 - 2);
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *((void *)&v28 - 4) = &_s10CodingKeysON_256;
      *((void *)&v28 - 3) = sub_1C0863120();
      *((void *)&v28 - 2) = sub_1C0863174();
      *((void *)&v28 - 1) = sub_1C08631C8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B68EE0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v24 = v29;
      *(void *)uint64_t v25 = v29;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v12;
  long long v32 = 0uLL;
  char v33 = 0;
  uint64_t v18 = sub_1C152069C();
  uint64_t v20 = v19;
  long long v28 = xmmword_1C153AB20;
  long long v32 = xmmword_1C153AB20;
  char v33 = 0;
  if (sub_1C152071C())
  {
    long long v30 = v28;
    char v31 = 0;
    sub_1C02563F8();
    sub_1C15206EC();
    char v27 = v34;
  }
  else
  {
    char v27 = 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *(void *)uint64_t v17 = v18;
  *(void *)(v17 + 8) = v20;
  *(unsigned char *)(v17 + 16) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatStateMachineInlineInput.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  long long v30 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v28[-v6];
  sub_1C086321C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)v1;
  uint64_t v12 = *(void *)(v1 + 8);
  int v29 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C086309C();
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C085F050(&qword_1EA19D1C0, (void (*)(uint64_t))sub_1C086309C);
  long long v32 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatStateMachineInlineInput, v18, v13, (uint64_t)&type metadata for FormatStateMachineInlineInput, v16, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v10, v17, (uint64_t)&off_1F1C39AE8);
  uint64_t v19 = qword_1EB887640;
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAC8);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  v22(v7, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = v31;
  sub_1C06AC190(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v23)
  {
    uint64_t v24 = (uint64_t)v32;
  }
  else
  {
    uint64_t v25 = (uint64_t)v30;
    v22(v30, v21, v20);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (uint64_t)v32;
    sub_1C06C969C(v29, 1, 0, 0, v25, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v25, type metadata accessor for FormatVersionRequirement);
    uint64_t v24 = v26;
  }
  return sub_1BFEFEB68(v24, (uint64_t (*)(void))sub_1C086321C);
}

uint64_t sub_1C06748E8(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0905338;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD743C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAbsoluteURL();
    sub_1C085F050(&qword_1EB862DF8, (void (*)(uint64_t))type metadata accessor for FormatAbsoluteURL);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0674ABC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0905338;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD743C4();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0905344();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0674C54(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EDFBC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EDFC8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0674E20(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EE01C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EE028();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EE07C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0674FB4(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0908020;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C090802C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C01ECFF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067514C(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F06B8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F06C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C01EE93C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06752E4(char a1, char a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  char v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09020D4;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09020E0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C04C60BC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067547C(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EE0D0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EE0DC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0675648(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0909250;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C090925C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C09092B0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06757DC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0909250;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C090925C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0909304();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0675974(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C0909250;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C090925C();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C0660364();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0675B00(uint64_t a1)
{
  sub_1BFEFF7D8();
  uint64_t v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  void v11[2] = sub_1C0901C10;
  void v11[3] = v8;
  swift_retain();
  char v9 = sub_1BFEFF114(a1, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901C34();
    long long v12 = 0uLL;
    sub_1C1520BAC();
    long long v12 = xmmword_1C152C800;
    sub_1C08FF21C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0675C7C(uint64_t a1)
{
  sub_1BFEFF7D8();
  uint64_t v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  void v11[2] = sub_1C08F0F00;
  void v11[3] = v8;
  swift_retain();
  char v9 = sub_1BFEFF114(a1, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F0F24();
    long long v12 = 0uLL;
    sub_1C1520BAC();
    long long v12 = xmmword_1C152C800;
    sub_1C08F0F78();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0675DF8(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  __int16 v18 = a3;
  sub_1BFEFF7D8();
  char v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F4748;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC1068();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDC37B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0675F90(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F4748;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC1068();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F3060();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0676124(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08F4748;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC1068();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFD74370();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06762C0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08F4748;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC1068();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08F4754();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067645C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  char v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FF5E0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FF5EC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FF640();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06765F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0907C8C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0907C98();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0907CEC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0676788(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0907C8C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0907C98();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0907D40();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067691C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0907C8C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0907C98();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C040328C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0676AB0(char a1, uint64_t a2, double a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  double v16 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090246C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0902478();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB85FC28, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F0E64();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0676C84(char a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char v9 = a1 & 1;
  char v23 = a1 & 1;
  double v19 = a3;
  double v20 = a4;
  double v21 = a5;
  double v22 = a6;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C090246C;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0902478();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFDB38CC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0676E1C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08F8974;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F8980();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFDF60D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0676FB4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F8974;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F8980();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0677180(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0904618;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0069058();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0677348(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0904618;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0069058();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C04045FC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06774E0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0904618;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0069058();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0404760();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0677678(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  *(_OWORD *)uint64_t v19 = a2[2];
  *(_DWORD *)&v19[15] = *(_DWORD *)((char *)a2 + 47);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0904618;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0069058();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0404918();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0677820(char a1, uint64_t a2)
{
  char v14 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C0901100;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901124();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    sub_1C0901178();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06779A8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0904E44;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0904E50();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB86C450, (uint64_t (*)(void))sub_1C08688B8, (uint64_t)&type metadata for FormatSupplementaryNodePinEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C0904EA4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0677B80(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  __int16 v18 = a3 & 0x1FF;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0904E44;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0904E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0904F34();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0677D20(uint64_t a1, double a2, double a3)
{
  double v15 = a2;
  double v16 = a3;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v3 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v8;
  void v13[2] = sub_1C08F3D78;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a1, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v4 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F3D9C();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1BFD88EB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0677EA4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E5638;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD49FE8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0678070(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5 & 1;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08E5638;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD49FE8();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08E5644();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0678210(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08E5638;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD49FE8();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0346AD4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06783A8(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  uint64_t v19 = *((void *)a2 + 4);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08E5638;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD49FE8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE2563C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0678548(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E5638;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD49FE8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0316B28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06786DC(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E5638;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD49FE8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatURL();
    sub_1C085F050(&qword_1EB85C2C8, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06788B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08EC824;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCABD0C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08EC830();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0678A48(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC824;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCABD0C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08EC884();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0678BDC(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F3000;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F300C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0678DA8(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F3000;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F300C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F3060();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0678F3C(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08F6504;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F6510();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F6564();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06790C8(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08F6504;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F6510();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F65B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0679254(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F7258;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F7264();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0642A7C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06793E8(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F6C6C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F6C78();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C01EEB9C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0679580(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F6C6C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F6C78();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19DD20, (uint64_t (*)(void))sub_1C0896950, (uint64_t)&type metadata for FormatLayeredMediaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08F6CCC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0679754(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  char v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C0907EF4;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0907F00();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F6564();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06798E0(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  char v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C0907EF4;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0907F00();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F65B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0679A6C(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EA91C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EA928();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EA97C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0679C00(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EA91C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EA928();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0462418();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0679D94(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08EA91C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EA928();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0679F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a3;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v14[2] = sub_1C08EAC5C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EAC80();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067A0B0(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08F26A0;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F26AC();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F2700();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067A23C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F26A0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F26AC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19E0F8, (uint64_t (*)(void))sub_1C08AA3FC, (uint64_t)&type metadata for FormatPuzzleEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08F2754();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067A410(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  __int16 v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v5 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v10;
  v15[2] = sub_1C090494C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v6 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0904970();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFD9F390();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067A5A4(char a1, uint64_t a2, double a3)
{
  char v17 = a1;
  double v16 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0907FB4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCB9E8C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB85FC28, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F0E64();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067A778(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EF9A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF9AC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EFA00();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067A90C(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EF9A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF9AC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EFA54();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067AAA4(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EF9A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF9AC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EFAA8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067AC3C(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08EF9A0;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF9AC();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08EFAFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067ADC8(char a1, long long *a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v29 = a1 & 1;
  long long v7 = a2[7];
  long long v26 = a2[6];
  long long v27 = v7;
  char v28 = *((unsigned char *)a2 + 128);
  long long v8 = a2[3];
  long long v22 = a2[2];
  long long v23 = v8;
  long long v9 = a2[5];
  long long v24 = a2[4];
  long long v25 = v9;
  long long v10 = a2[1];
  long long v20 = *a2;
  long long v21 = v10;
  sub_1BFEFF7D8();
  char v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v6;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C08F92AC;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC00CC();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C08F92B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067AF80(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  long long v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0905B88;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0905B94();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0905BE8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067B118(char a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  char v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C0905B88;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0905B94();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C0905C3C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067B2B8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09024CC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDA001C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB873F18, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08E520C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067B480(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09024CC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDA001C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C00744A8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067B618(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  char v9 = a1 & 1;
  char v23 = a1 & 1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  __int16 v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FCFA0;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD077E8();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFD9F390();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067B7BC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0900DB0;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0900DBC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFC8E03C();
    sub_1C085F050(&qword_1EB85F700, (void (*)(uint64_t))sub_1BFC8E03C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067B98C(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  long long v19 = a2[2];
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0900DB0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0900DBC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D6F0, (uint64_t (*)(void))sub_1C04674D4, (uint64_t)&type metadata for FormatSizeEquation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeKeyPathAnimation);
    sub_1C0900E10();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067BB6C(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  long long v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C09011CC;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09011D8();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C090122C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067BCF8(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  long long v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C09011CC;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09011D8();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C0901280();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067BE84(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E9718;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCFBF04();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEC2DA8();
    sub_1C085F050(&qword_1EB85CEF8, (void (*)(uint64_t))sub_1BFEC2DA8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067C058(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08E9718;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCFBF04();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19E800, (uint64_t (*)(void))sub_1C08CCAFC, (uint64_t)&type metadata for FormatWebEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08E9724();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067C22C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8 = a1 & 1;
  char v21 = a1 & 1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08E97B4;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCF6A4C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067C3C4(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EF5F0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF5FC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067C558(char a1, long long *a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v22 = a1 & 1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08EF5F0;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF5FC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAB90C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067C6F8(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EF72C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF738();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE9DEBC(0, &qword_1EA19C020, (uint64_t)&type metadata for FormatSourceItemTipTrait, MEMORY[0x1E4FBB320]);
    sub_1C08EF78C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067C8B8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EF72C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF738();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08B52D8();
    sub_1C085F050(&qword_1EA1A0978, (void (*)(uint64_t))sub_1C08B52D8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067CA84(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  char v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08EF8D4;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EF8F8();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    sub_1C08EF94C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067CC08(char a1, uint64_t a2, double a3)
{
  char v17 = a1;
  double v16 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0E04;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F0E10();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB85FC28, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F0E64();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067CDDC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F2EC4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCF90F0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067CFA8(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0903784;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0903790();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D4B8, (uint64_t (*)(void))sub_1C086B494, (uint64_t)&type metadata for FormatMediaTimingFunctionName, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C09037E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067D17C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v9 = a1 & 1;
  char v23 = a1 & 1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C0903784;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0903790();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C0903874();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067D314(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4 & 1;
  sub_1BFEFF7D8();
  char v9 = (uint64_t *)(v5 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v10;
  v15[2] = sub_1C08F6398;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v6 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F63BC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08E5644();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067D4A4(uint64_t a1, uint64_t a2)
{
  sub_1C00F6034(a1, (uint64_t)v14);
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08F9028;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F904C();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    sub_1C08F90A0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067D62C(char a1, long long *a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v22 = a1 & 1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  char v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FC420;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC42C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAB90C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067D7CC(char a1, long long *a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v28 = a1 & 1;
  long long v7 = a2[5];
  long long v24 = a2[4];
  long long v25 = v7;
  long long v8 = a2[7];
  long long v26 = a2[6];
  long long v27 = v8;
  long long v9 = a2[1];
  long long v20 = *a2;
  long long v21 = v9;
  long long v10 = a2[3];
  long long v22 = a2[2];
  long long v23 = v10;
  sub_1BFEFF7D8();
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v6;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C08FC420;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC42C();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C08FBED8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067D97C(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E57E4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD28F40();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB8849C0, (uint64_t (*)(void))sub_1C08E57F0, (uint64_t)&type metadata for FormatContentSizeCategoryValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08E5844();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067DB50(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FFCE8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FFCF4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDF6124();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067DCE4(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  long long v19 = a2[2];
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FFCE8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FFCF4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FFD48();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067DE84(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FFCE8;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FFCF4();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08FFD9C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067E01C(char a1, long long *a2, uint64_t a3)
{
  char v19 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  *(_OWORD *)long long v18 = v7;
  *(_OWORD *)&v18[9] = *(long long *)((char *)a2 + 25);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FFCE8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FFCF4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FFDF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067E1BC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EACD4;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EACE0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB87E948, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1C08EAD34();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067E390(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v9 = a1 & 1;
  char v23 = a1 & 1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08EACD4;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EACE0();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08EADC4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067E52C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08EEC78;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EEC84();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFD7C504();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067E6C4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08EEC78;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EEC84();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19E450, (uint64_t (*)(void))sub_1C08B8728, (uint64_t)&type metadata for FormatTagBinding.Command, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1C08EECD8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067E8A0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08EEABC;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EEAC8();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08EEB1C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067EA38(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  uint64_t v19 = *((void *)a2 + 4);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EEABC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EEAC8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19E478, (uint64_t (*)(void))sub_1C08B88B4, (uint64_t)&type metadata for FormatTagBinding.Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1C08EEB70();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067EC18(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EED68;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EED74();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C007DD68();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067EDAC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EED68;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EED74();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19E438, (uint64_t (*)(void))sub_1C0293BA0, (uint64_t)&type metadata for FormatTagBinding.Color, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1C08EEDC8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067EF84(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EE9CC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EE9D8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD1A5D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067F118(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EE9CC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EE9D8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19E498, (uint64_t (*)(void))sub_1C08B89EC, (uint64_t)&type metadata for FormatTagBinding.Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1C08EEA2C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067F2F0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0908658;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908664();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD098E0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067F484(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0908658;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908664();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D128, (uint64_t (*)(void))sub_1C0861364, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1C09086B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067F65C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0718;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C006FC6C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSlotDefinition();
    sub_1C085F050(&qword_1EB866AF0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067F830(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090947C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0909488();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067F9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a3;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v14[2] = sub_1C08F70A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F70C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C00705D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067FB80(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0901FEC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFF8B600();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB873EB8, (uint64_t (*)(void))sub_1C086E9C4, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C09012E0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067FD54(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v8 = a1 & 1;
  char v21 = a1 & 1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4 & 1;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08EE744;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCEB0D8();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0256604();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C067FEF0(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F055C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F0568();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0202760();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0680084(char a1, uint64_t a2, double a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  double v16 = a3;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0724;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F0730();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EA19DEF8, MEMORY[0x1E4FBB3D0], (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F0784();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068024C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F2244;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F2250();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F2178();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06803E0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F2118;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F2124();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F2178();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0680574(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F7DA0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0072FC0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19DD08, (uint64_t (*)(void))sub_1C08912FC, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08F7DAC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0680748(char a1, uint64_t a2)
{
  char v5 = a1 & 1;
  char v15 = a1 & 1;
  sub_1BFEFF7D8();
  char v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08F7E3C;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0073148();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F7E48();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06808D4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0902EE4;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCB0A1C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE39C70();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0680A6C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0902EE4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCB0A1C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0902EF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0680C00(char a1, char a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  char v17 = a2 & 1;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FA59C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA5A8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08FA5FC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0680DDC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FC52C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0680F70(char a1, long long *a2, uint64_t a3)
{
  char v28 = a1;
  long long v7 = a2[5];
  long long v24 = a2[4];
  long long v25 = v7;
  long long v8 = a2[7];
  long long v26 = a2[6];
  long long v27 = v8;
  long long v9 = a2[1];
  long long v20 = *a2;
  long long v21 = v9;
  long long v10 = a2[3];
  long long v22 = a2[2];
  long long v23 = v10;
  sub_1BFEFF7D8();
  char v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C08FC52C;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C08FBED8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0681120(char a1, long long *a2, uint64_t a3)
{
  char v19 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  *(_OWORD *)uint64_t v18 = v7;
  *(_OWORD *)&v18[9] = *(long long *)((char *)a2 + 25);
  sub_1BFEFF7D8();
  long long v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FC52C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC538();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06812C0(char a1, long long *a2, uint64_t a3)
{
  char v30 = a1;
  long long v7 = a2[7];
  long long v26 = a2[6];
  long long v27 = v7;
  long long v28 = a2[8];
  char v29 = *((unsigned char *)a2 + 144);
  long long v8 = a2[3];
  long long v22 = a2[2];
  long long v23 = v8;
  long long v9 = a2[5];
  long long v24 = a2[4];
  long long v25 = v9;
  long long v10 = a2[1];
  long long v20 = *a2;
  long long v21 = v10;
  sub_1BFEFF7D8();
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C08FC52C;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C08FC58C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0681488(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FC52C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFDEEF28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068161C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FC52C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCE1888();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0883168();
    sub_1C085F050(&qword_1EA1A0C48, (void (*)(uint64_t))sub_1C0883168);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06817EC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FE744;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE750();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FE7A4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0681984(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08FE744;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE750();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08FE7F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0681B10(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08FE744;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE750();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08FE84C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0681C9C(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08FE744;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE750();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C060C6D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0681E28(char a1, __int16 a2, uint64_t a3)
{
  char v17 = a1;
  __int16 v16 = a2 & 0x101;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FF770;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FF77C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0681FC8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FF770;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FF7D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0682160(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FF770;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FF824();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06822F8(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  char v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FF770;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FF878();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0682490(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09002F0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09002FC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0900350();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0682628(char a1, long long *a2, uint64_t a3)
{
  char v21 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  long long v19 = a2[2];
  char v20 = *((unsigned char *)a2 + 48);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0900404;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD847E4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFD4F1DC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06827D0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0900404;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD847E4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB875B60, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1C0900410();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06829A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0900404;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD847E4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB8783F8, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1C09004A0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0682B78(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0900404;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD847E4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB866958, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C0900530();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0682D4C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0908278;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908284();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatRemoteVideo();
    sub_1C085F050(&qword_1EA1A0EB0, (void (*)(uint64_t))type metadata accessor for FormatRemoteVideo);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0682F20(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0908278;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908284();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D158, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1C09082D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06830F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0908278;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908284();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, qword_1EB8606E8, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1C0908368();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06832C8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0908278;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908284();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C09083F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0683460(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0908278;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908284();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D140, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C090844C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0683634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a3;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v14[2] = sub_1C08EB380;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EB3A4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06837B8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09091B4;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD4EFE0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D108, (uint64_t (*)(void))sub_1C0073A80, (uint64_t)&type metadata for FormatSyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C09091C0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068398C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906EA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0906EB4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE9DEBC(0, &qword_1EB879D10, (uint64_t)&type metadata for FormatColor, MEMORY[0x1E4FBB320]);
    sub_1BFDB3838();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0683B4C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906EA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0906EB4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0683CE0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0906EA8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0906EB4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D1E8, (uint64_t (*)(void))sub_1C0280EA4, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C0906F08();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0683EB4(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E5164;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E5170();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    sub_1BFEBC698((unint64_t *)&qword_1EB85C4F0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06840A0(char a1, uint64_t a2, uint64_t a3)
{
  v16[47] = a1;
  sub_1C0223ACC(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F8B58;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD5B4EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F8B64();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0684240(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08F8B58;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD5B4EC();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08EEB1C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06843D8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F8B58;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD5B4EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F8BB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068456C(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08F8B58;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD5B4EC();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F8C0C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06846F8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F8B58;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD5B4EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F8C60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0684890(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08F8B58;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD5B4EC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0684A28(char a1, uint64_t a2, uint64_t a3)
{
  v16[47] = a1;
  sub_1C0223D44(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F8B58;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD5B4EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F8CB4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0684BC8(char a1, uint64_t a2, double a3)
{
  char v17 = a1;
  double v16 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F9AC0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F9ACC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB85FC28, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F0E64();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0684D9C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F9AC0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F9ACC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE9DEBC(0, &qword_1EB88FFA8, (uint64_t)&type metadata for FormatBundle, MEMORY[0x1E4FBB320]);
    sub_1C08F9B20();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0684F5C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F9AC0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F9ACC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE9DEBC(0, &qword_1EA19DC48, (uint64_t)&type metadata for FormatPlatform, MEMORY[0x1E4FBB320]);
    sub_1C08F9C08();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068511C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F9AC0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F9ACC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE9DEBC(0, &qword_1EB890068, (uint64_t)&type metadata for FormatGroupColumnSystemKind, MEMORY[0x1E4FBB320]);
    sub_1C08F9CF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06852DC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F9AC0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F9ACC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB86C468, (uint64_t (*)(void))sub_1C086DF2C, (uint64_t)&type metadata for FormatSelector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F9DD8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06854B0(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1C08FD258();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068568C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE83BF4();
    sub_1C085F050(&qword_1EA1A0C80, (void (*)(uint64_t))sub_1BFE83BF4);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0685860(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1C08FD2E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0685A3C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1C08FD378();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0685C0C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1C08FD3FC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0685DE8(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1C08FD48C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0685FC4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FE8A0;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFFEEFC8();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08FE8AC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068615C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FE8A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFFEEFC8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatPurchaseAction();
    sub_1C085F050(&qword_1EA19B2F8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseAction);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0686330(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FE8A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFFEEFC8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FE900();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06864C4(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FE8A0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFFEEFC8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FE954();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0686658(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E9A40;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E9A4C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08E9AA0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06867EC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8 = a1 & 1;
  char v21 = a1 & 1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0905398;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09053A4();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C09053F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0686984(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v8 = a1 & 1;
  char v21 = a1 & 1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4 & 1;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0905398;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09053A4();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFFB2AC8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0686B20(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C090692C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0686CB4(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD1A5D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0686E48(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C09059E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0686FDC(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C0224024(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0905A8C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068717C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3 & 1;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0906920;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0905AE0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0687318(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0905B34();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06874AC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0906980();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0687644(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0906920;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0905A38();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06877DC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0905990();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0687970(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F589C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F58A8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatMicaNodeArchive();
    sub_1C085F050(&qword_1EB85EBD0, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeArchive);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0687B44(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F589C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F58A8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19DE38, (uint64_t (*)(void))sub_1C089C014, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1C08F58FC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0687D18(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F589C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F58A8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19DE20, (uint64_t (*)(void))sub_1C089C014, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08F598C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0687EEC(uint64_t a1, uint64_t a2)
{
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08F5A1C;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F5A40();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    type metadata accessor for FormatURL();
    sub_1C085F050(&qword_1EB85C2C8, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06880A8(char a1, uint64_t a2)
{
  char v14 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08F5E5C;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F5E80();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    sub_1C08F5ED4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0688230(char a1, uint64_t a2, uint64_t a3)
{
  v16[135] = a1;
  sub_1C00F61EC(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090789C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCF2CCC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C09078A8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06883D0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F9444;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDD67E0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F2BCC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0688568(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08F9444;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDD67E0();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08F9450();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06886F4(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  char v21 = a1;
  double v18 = a5;
  uint64_t v19 = a2;
  __int16 v20 = a3;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08F9660;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F966C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08F7FC8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0688890(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FC7C8;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC7D4();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0688A28(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08FC7C8;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC7D4();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08FA9F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0688BB4(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FC7C8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC7D4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C009B050();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0688D48(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FC7C8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC7D4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FAA4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0688EE0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FC7C8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC7D4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C03E8664();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689074(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FC7C8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC7D4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC828();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689208(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08FC7C8;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FC7D4();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08FC87C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689394(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FDC00;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD4DAE4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FDC0C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689528(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FDC00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD4DAE4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FDC60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06896BC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0901B38;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901B44();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689888(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0901B38;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901B44();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C04675B4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689A1C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  __int16 v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v14[2] = sub_1C09088D0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09088F4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFDEBA30();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689BAC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08E9C50;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E9C5C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C04A5F28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  uint64_t v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v3 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v8;
  void v13[2] = sub_1C09023F4;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v4 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0902418();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB86C468, (uint64_t (*)(void))sub_1C086DF2C, (uint64_t)&type metadata for FormatSelector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F9DD8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0689F08(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09049C4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C09049D0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
    sub_1C085F050(&qword_1EA1A0DE8, (void (*)(uint64_t))type metadata accessor for FormatOsloSheetPurchaseDataModel);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068A0DC(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v16 = a1 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F3FA4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F3FB0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatRemoteImage();
    sub_1C085F050(&qword_1EB85B970, (void (*)(uint64_t))type metadata accessor for FormatRemoteImage);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068A2B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F3FA4;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F3FB0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB85D818, (uint64_t (*)(void))sub_1C08A1F2C, (uint64_t)&type metadata for FormatPatternContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1C08F4004();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068A484(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0909D50;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD3EC04();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatCommandOpenURL();
    sub_1C085F050(&qword_1EB85BB90, (void (*)(uint64_t))type metadata accessor for FormatCommandOpenURL);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068A658(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  __int16 v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08F7724;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC4720();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C04023A8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068A7FC(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F7724;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC4720();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatCommandOpenURL();
    sub_1C085F050(&qword_1EB85BB90, (void (*)(uint64_t))type metadata accessor for FormatCommandOpenURL);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068A9D0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F7724;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCC4720();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0083CE8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068AB64(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0907570;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCEEC54();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAbsoluteURL();
    sub_1C085F050(&qword_1EB862DF8, (void (*)(uint64_t))type metadata accessor for FormatAbsoluteURL);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068AD38(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0907570;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCEEC54();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0905344();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068AED0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD6E4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD9C47C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FD6F0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068B068(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD6E4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD9C47C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C04C4140();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068B1FC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD6E4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD9C47C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FD744();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068B390(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FD6E4;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD9C47C();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08FD798();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068B52C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5 & 1;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FD6E4;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD9C47C();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08FD7EC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068B6CC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD6E4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD9C47C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FD840();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068B860(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3 & 1;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0078;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1B8BC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08F0084();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068B9FC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0078;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1B8BC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F00D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068BB90(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0078;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1B8BC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F012C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068BD24(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0078;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1B8BC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EA19E2F0, (uint64_t (*)(void))sub_1C08B3C28, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08F0180();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068BEF8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0078;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1B8BC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C04C0E28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068C08C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0078;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1B8BC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F0210();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068C220(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F2B6C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F2B78();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F2BCC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068C3B8(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08F4F04;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F4F28();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    sub_1C08F3060();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068C53C(char a1, long long *a2, uint64_t a3)
{
  char v22 = a1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  char v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08E4EE8;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C08E4EF4, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E4EFC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0081CEC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068C6DC(char a1, long long *a2, uint64_t a3)
{
  char v23 = a1;
  long long v7 = a2[3];
  long long v20 = a2[2];
  long long v21 = v7;
  uint64_t v22 = *((void *)a2 + 8);
  long long v8 = a2[1];
  long long v18 = *a2;
  long long v19 = v8;
  sub_1BFEFF7D8();
  char v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08E4EE8;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E4EFC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08E4FA8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068C884(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08E4EE8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E4EFC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB860110, (uint64_t (*)(void))sub_1C08E45F0, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1C08E4FFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068CA58(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08E4EE8;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E4EFC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFD18A88(0, &qword_1EB860130, (void (*)(void))sub_1C08E45F0);
    sub_1C08E508C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068CC24(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E4EE8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E4EFC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08E5110();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068CDBC(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08E9D28;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08E9D4C();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19E7E0, (uint64_t (*)(void))sub_1C08CBE68, (uint64_t)&type metadata for FormatBlurEffectStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08E9DA0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068CF80(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08ED6F0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD41398();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08ED6FC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068D118(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  char v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08ED6F0;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD41398();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08ED750();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068D2B4(char a1, __int16 a2, uint64_t a3)
{
  char v17 = a1;
  __int16 v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08ED6F0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD41398();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08ED7A4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068D448(char a1, __int16 a2, uint64_t a3)
{
  char v17 = a1;
  __int16 v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08ED6F0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD41398();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08ED7F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068D5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08F05BC;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F05E0();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    sub_1C08B1884();
    sub_1C08F4B1C(&qword_1EA1A09C0, (void (*)(uint64_t))sub_1C08B1884, (void (*)(void))sub_1C08F0634);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068D7AC(char a1, long long *a2, uint64_t a3)
{
  char v21 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  long long v19 = a2[2];
  uint64_t v20 = *((void *)a2 + 6);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F35D0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F35DC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C00AA6D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068D954(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  *(_OWORD *)long long v19 = a2[2];
  *(_OWORD *)&v19[9] = *(long long *)((char *)a2 + 41);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F35D0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F35DC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08F3630();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068DAFC(uint64_t a1, __int16 a2, uint64_t a3, double a4)
{
  double v16 = a4;
  uint64_t v17 = a1;
  __int16 v18 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v14[2] = sub_1C08F7F50;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F7F74();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F7FC8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068DC88(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08FA998;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA9A4();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08FA9F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068DE14(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA998;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA9A4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C009B050();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068DFA8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA998;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA9A4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FAA4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068E140(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA998;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA9A4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C03E8664();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068E2D4(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C0902134;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7C558();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C0902140();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068E460(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  char v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C0902134;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7C558();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08FD798();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068E5FC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA830;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA83C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD5B540();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068E790(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FA830;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA83C();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08EEB1C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068E928(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA830;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA83C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD5B72C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068EAC0(char a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  __int16 v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FA830;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA83C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C017C9AC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068EC60(char a1, uint64_t a2, uint64_t a3)
{
  v16[47] = a1;
  sub_1C0223D44(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA830;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA83C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F8CB4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068EE00(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0908EDC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908EE8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FBD60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068EF98(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0908EDC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908EE8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FBDB4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068F12C(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FAAA0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FAAAC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C065FA30();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068F2C0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FAAA0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FAAAC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE065B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068F454(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FAAA0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FAAAC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C007DD68();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068F5E8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FAAA0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FAAAC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FAB00();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068F780(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FAAA0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FAAAC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FAB54();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068F918(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C0223E44(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0905930;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE004AC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068FAB8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0905930;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE00A20();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068FC4C(char a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  __int16 v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0905930;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C090593C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068FDEC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0905930;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0905990();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C068FF80(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0905930;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C09059E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0690114(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0905930;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0905A38();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06902AC(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C0224024(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0905930;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0905A8C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069044C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3 & 1;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0905930;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0905AE0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06905E8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0905930;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD1A584();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0905B34();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069077C(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  char v22 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  __int16 v20 = a4;
  char v21 = BYTE2(a4);
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FA890;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA89C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FA8F0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069091C(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  char v22 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  __int16 v20 = a4;
  char v21 = BYTE2(a4);
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FA890;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA89C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C01673D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0690ABC(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  char v21 = a1;
  double v18 = a5;
  uint64_t v19 = a2;
  __int16 v20 = a3;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FA890;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA89C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FA944();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0690C58(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FABA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD0988C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD7D35C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0690DEC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FABA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD0988C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FABB4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0690F80(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FABA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD0988C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C04A9FEC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0691118(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FABA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD0988C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FAC08();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06912AC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FABA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD0988C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD7D738();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0691440(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FABA8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD0988C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C017E2D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06915D8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FABA8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD0988C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0465D04();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069176C(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0902F44;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0902F50();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EA97C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0691900(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0902F44;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0902F50();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFCF6AA0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0691A98(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA758;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA764();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EFAA8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0691C30(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FA758;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA764();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EFA54();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0691DC8(char a1, uint64_t a2)
{
  char v15 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  void v13[2] = sub_1C08FA758;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA764();
    long long v14 = 0uLL;
    sub_1C1520BAC();
    long long v14 = xmmword_1C152C800;
    sub_1C08EFAFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0691F54(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v14[2] = sub_1C08FA68C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA6B0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FA704();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06920DC(uint64_t a1)
{
  sub_1BFEFF7D8();
  uint64_t v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  void v11[2] = sub_1C08FA7B8;
  void v11[3] = v8;
  swift_retain();
  char v9 = sub_1BFEFF114(a1, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FA7DC();
    long long v12 = 0uLL;
    sub_1C1520BAC();
    long long v12 = xmmword_1C152C800;
    sub_1C007B46C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0692258(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBD00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBD0C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FBD60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06923F0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBD00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBD0C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FBDB4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0692584(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBD00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBD0C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0166598();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0692718(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD654;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD95DDC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB873F18, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08E520C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06928E0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FDF90;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE063D0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C065FA30();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0692A74(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  __int16 v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FDF90;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE063D0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FDF9C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0692C14(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FDF90;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE063D0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FAB54();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0692DAC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FDF90;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE063D0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FAB00();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0692F44(char a1, long long *a2, uint64_t a3)
{
  char v29 = a1;
  long long v7 = a2[7];
  long long v26 = a2[6];
  long long v27 = v7;
  char v28 = *((unsigned char *)a2 + 128);
  long long v8 = a2[3];
  long long v22 = a2[2];
  long long v23 = v8;
  long long v9 = a2[5];
  long long v24 = a2[4];
  long long v25 = v9;
  long long v10 = a2[1];
  long long v20 = *a2;
  long long v21 = v10;
  sub_1BFEFF7D8();
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C08EC8D8;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C01EF290();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06930FC(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EC8D8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatTextNodeLink();
    sub_1C085F050(&qword_1EA1A08D8, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLink);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06932D0(char a1, long long *a2, uint64_t a3)
{
  char v21 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  long long v19 = a2[2];
  uint64_t v20 = *((void *)a2 + 6);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC8D8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08EC968();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0693478(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC8D8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB8612E0, (uint64_t (*)(void))sub_1C007C6F8, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C08EC9BC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069364C(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0901E6C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901E78();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB85CF08, (uint64_t (*)(void))sub_1C0355D40, (uint64_t)&type metadata for FormatPatternAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C0901ECC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0693820(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0901E6C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901E78();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB85FC40, (uint64_t (*)(void))sub_1C025A6FC, (uint64_t)&type metadata for FormatPatternDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C0901F5C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06939F8(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFF29220();
    sub_1C085F050(&qword_1EA1A0E10, (void (*)(uint64_t))sub_1BFF29220);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0693BCC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090544C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0868154();
    sub_1C085F050(&qword_1EA1A0E18, (void (*)(uint64_t))sub_1C0868154);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0693D98(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFF8F65C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0693F2C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0073998();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06940C0(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EA19D330, (uint64_t (*)(void))sub_1C0868054, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C0905458();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0694294(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE9A444();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0694428(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C006FA84();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06945BC(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FEB00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7D308();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FABB4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0694750(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FEB00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7D308();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFD098E0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06948E4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FEB00;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7D308();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C017E2D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0694A7C(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FEB00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7D308();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FEB0C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0694C14(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FEB00;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD7D308();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0465D04();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0694DA8(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  char v22 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  __int16 v20 = a4;
  char v21 = BYTE2(a4);
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C09054F4;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0905500();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FA8F0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0694F48(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  char v21 = a1;
  double v18 = a5;
  uint64_t v19 = a2;
  __int16 v20 = a3;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C09054F4;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0905500();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FA944();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06950E4(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  char v22 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v21 = BYTE2(a4);
  __int16 v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C09054F4;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0905500();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0905554();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0695284(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C09054F4;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0905500();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069541C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0904378;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0904384();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06955E4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0904378;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0904384();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB866940, (uint64_t (*)(void))sub_1C04076BC, (uint64_t)&type metadata for FormatVisibility, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1C09043D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06957B8(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09054E8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD6E280();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08EA97C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069594C(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09054E8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD6E280();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFCF6AA0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0695AE4(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09054E8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD6E280();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C0462418();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0695C78(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08ECFAC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD818EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08ECFB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0695E10(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08ECFAC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFD818EC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08ED00C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0695FA4(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  char v19 = a2 & 1;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08ECEF8;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08ECF04();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08ECF58();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696144(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  char v21 = a1;
  double v18 = a5;
  uint64_t v19 = a2;
  __int16 v20 = a3;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0908E7C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0908E88();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08F7FC8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06962E0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8 = a1 & 1;
  char v21 = a1 & 1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C09025BC;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDCD5EC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696478(char a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v9 = a1 & 1;
  char v23 = a1 & 1;
  char v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5 & 1;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08EFCEC;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EFCF8();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08EFD4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696618(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  char v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EFCEC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EFCF8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB894380, (uint64_t (*)(void))sub_1C08B4B18, (uint64_t)&type metadata for FormatSourceItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
    sub_1C08EFDA0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06967EC(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0DA4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F0DB0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696980(char a1, long long *a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v22 = a1 & 1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08F0DA4;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F0DB0();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAB90C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696B20(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBFE0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FBFEC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696CB4(char a1, long long *a2, uint64_t a3)
{
  char v19 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  *(_OWORD *)long long v18 = v7;
  *(_OWORD *)&v18[9] = *(long long *)((char *)a2 + 25);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC040();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696E54(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC094();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0696FE8(char a1, long long *a2, uint64_t a3)
{
  char v28 = a1;
  long long v7 = a2[5];
  long long v24 = a2[4];
  long long v25 = v7;
  long long v8 = a2[7];
  long long v26 = a2[6];
  long long v27 = v8;
  long long v9 = a2[1];
  long long v20 = *a2;
  long long v21 = v9;
  long long v10 = a2[3];
  long long v22 = a2[2];
  long long v23 = v10;
  sub_1BFEFF7D8();
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C09000FC;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C08FBED8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0697198(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09000FC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFDEEF28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069732C(char a1, long long *a2, uint64_t a3)
{
  char v29 = a1;
  long long v7 = a2[7];
  long long v26 = a2[6];
  long long v27 = v7;
  v28[0] = a2[8];
  *(_OWORD *)((char *)v28 + 9) = *(long long *)((char *)a2 + 137);
  long long v8 = a2[3];
  long long v22 = a2[2];
  long long v23 = v8;
  long long v9 = a2[5];
  long long v24 = a2[4];
  long long v25 = v9;
  long long v10 = a2[1];
  long long v20 = *a2;
  long long v21 = v10;
  sub_1BFEFF7D8();
  char v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C09000FC;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C03A9FD8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06974F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  long long v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09000FC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0900108();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0697688(char a1, long long *a2, uint64_t a3)
{
  char v30 = a1;
  long long v7 = a2[7];
  long long v26 = a2[6];
  long long v27 = v7;
  long long v28 = a2[8];
  char v29 = *((unsigned char *)a2 + 144);
  long long v8 = a2[3];
  long long v22 = a2[2];
  long long v23 = v8;
  long long v9 = a2[5];
  long long v24 = a2[4];
  long long v25 = v9;
  long long v10 = a2[1];
  long long v20 = *a2;
  long long v21 = v10;
  sub_1BFEFF7D8();
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C09000FC;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C08FC58C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0697850(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09000FC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C090015C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06979E4(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  char v18 = a2 & 1;
  uint64_t v19 = a3;
  char v20 = a4 & 1;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C0903330;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0261D1C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0697B88(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C0903330;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C09033CC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0697D20(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSupplementaryNodeStyle();
    sub_1C085F050(&qword_1EB8686B8, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0697EEC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatMicaNodeStyle();
    sub_1C085F050(&qword_1EA1A0A98, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06980B8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatVideoNodeStyle();
    sub_1C085F050(&qword_1EA1A08B0, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0698284(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatIssueCoverNodeStyle();
    sub_1C085F050(&qword_1EB867930, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0698450(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAnimationNodeStyle();
    sub_1C085F050(&qword_1EB8606C8, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069861C(char a1, long long *a2, uint64_t a3)
{
  char v22 = a1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08F5154;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08F28B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06987BC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSponsoredBannerNodeStyle();
    sub_1C085F050(&qword_1EA1A0958, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0698988(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08E56F4;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAC954();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB891570, (uint64_t (*)(void))sub_1C08E5700, (uint64_t)&type metadata for FormatTextSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1C08E5754();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0698B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08F149C;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F14C0();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    type metadata accessor for FormatResizeAuto();
    sub_1C085F050(&qword_1EB865D68, (void (*)(uint64_t))type metadata accessor for FormatResizeAuto);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0698D18(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C09061F4;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0906200();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C08F4754();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0698EB4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09061F4;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0906200();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C0316CE0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0699048(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09061F4;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0906200();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0699210(char a1, uint64_t a2, float a3)
{
  char v17 = a1;
  float v16 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F13E8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F13F4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F1448();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06993A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EE418;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EE424();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069956C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8 = a1 & 1;
  char v21 = a1 & 1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08EE418;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08EE424();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0699704(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  void v12[2] = sub_1C08F1730;
  v12[3] = v9;
  swift_retain();
  char v10 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F1754();
    long long v13 = 0uLL;
    sub_1C1520BAC();
    long long v13 = xmmword_1C152C800;
    type metadata accessor for FormatResizeAuto();
    sub_1C085F050(&qword_1EB865D68, (void (*)(uint64_t))type metadata accessor for FormatResizeAuto);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06998C0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F4F7C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F4F88();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0699A8C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F4F7C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F4F88();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE1C798();
    sub_1C085F050(&qword_1EB85B5A0, (void (*)(uint64_t))sub_1BFE1C798);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0699C58(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F4F7C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F4F88();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F4FDC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0699DEC(char a1, uint64_t a2, double a3)
{
  char v17 = a1;
  double v16 = a3;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F529C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F52A8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EA19DEF8, MEMORY[0x1E4FBB3D0], (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08F0784();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C0699FB4(char a1, uint64_t a2, double a3, double a4)
{
  char v19 = a1;
  double v17 = a3;
  double v18 = a4;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F529C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F52A8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C089D840(0, (unint64_t *)&qword_1EA19B600, (uint64_t (*)(void, void *))type metadata accessor for FormatRange);
    sub_1C089D8BC(&qword_1EA1A0AD0, (unint64_t *)&qword_1EA19B600, (uint64_t (*)(void, void *))type metadata accessor for FormatRange);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069A1A0(char a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char v23 = a1;
  double v19 = a3;
  double v20 = a4;
  double v21 = a5;
  double v22 = a6;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08F529C;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F52A8();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C089D840(0, &qword_1EA19DEE8, (uint64_t (*)(void, void *))type metadata accessor for FormatTranslate);
    sub_1C089D8BC(&qword_1EA1A0AC0, &qword_1EA19DEE8, (uint64_t (*)(void, void *))type metadata accessor for FormatTranslate);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069A390(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  uint64_t v19 = *((void *)a2 + 4);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F529C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F52A8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08F52FC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069A530(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FE160;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069A6F8(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  char v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4 & 1;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FE160;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB891390, (uint64_t (*)(void))sub_1C087B428, (uint64_t)&type metadata for FormatSystemColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    sub_1C08FE1C0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069A8D8(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  char v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4 & 1;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FE160;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB86C518, (uint64_t (*)(void))sub_1C087B344, (uint64_t)&type metadata for FormatFixedColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    sub_1C08FE250();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069AAB8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FE160;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB878418, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1BFE63D18();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069AC8C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FE160;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE63DA8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069AE20(char a1, uint64_t a2, char a3, uint64_t a4, double a5)
{
  char v21 = a1;
  double v18 = a5;
  uint64_t v19 = a2;
  char v20 = a3 & 1;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FE160;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FE2E0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069AFC0(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  char v19 = *((unsigned char *)a2 + 32);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FE160;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FE334();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069B160(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FE160;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFE63CC4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069B2FC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FE160;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB87EFF8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BFE63DFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069B4D0(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  uint64_t v19 = *((void *)a2 + 4);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FE160;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C087AEA4(0, &qword_1EA19D8F8, (void (*)(void))sub_1C087AFF4);
    sub_1C08FE388();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069B69C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FE160;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C087AEA4(0, &qword_1EA19D8E0, (void (*)(void))sub_1C087AF20);
    sub_1C08FE404();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069B860(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FE160;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FE16C();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C087AD54();
    sub_1C085F050(&qword_1EA1A0CC8, (void (*)(uint64_t))sub_1C087AD54);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069BA30(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C00A045C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069BBC4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08F0A58();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069BD58(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08F0AAC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069BEEC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C04675B4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069C080(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2 & 1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0A4C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F0B00();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069C218(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatHOverlayNode();
    sub_1C085F050(&qword_1EB860160, (void (*)(uint64_t))type metadata accessor for FormatHOverlayNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069C3E4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatStateViewNode();
    sub_1C085F050(&qword_1EB85F180, (void (*)(uint64_t))type metadata accessor for FormatStateViewNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069C5B0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatCustomNode();
    sub_1C085F050(&qword_1EB85FFE8, (void (*)(uint64_t))type metadata accessor for FormatCustomNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069C77C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatPrintNode();
    sub_1C085F050(&qword_1EA1A0AA0, (void (*)(uint64_t))type metadata accessor for FormatPrintNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069C948(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatMicaNode();
    sub_1C085F050(&qword_1EA1A0AA8, (void (*)(uint64_t))type metadata accessor for FormatMicaNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069CB14(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatLayeredMediaNode();
    sub_1C085F050((unint64_t *)&unk_1EB860630, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069CCE0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatVideoNode();
    sub_1C085F050(&qword_1EA1A0AB0, (void (*)(uint64_t))type metadata accessor for FormatVideoNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069CEAC(char a1, long long *a2, uint64_t a3)
{
  char v24 = a1;
  long long v7 = a2[3];
  long long v20 = a2[2];
  long long v21 = v7;
  long long v22 = a2[4];
  uint64_t v23 = *((void *)a2 + 10);
  long long v8 = a2[1];
  long long v18 = *a2;
  long long v19 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08F5160;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08F516C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069D05C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatBlockNode();
    sub_1C085F050(&qword_1EB85FE60, (void (*)(uint64_t))type metadata accessor for FormatBlockNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069D228(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatGeometryNode();
    sub_1C085F050(&qword_1EB860140, (void (*)(uint64_t))type metadata accessor for FormatGeometryNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069D3F4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatVideoPlayerNode();
    sub_1C085F050(&qword_1EB860600, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069D5C0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatProgressViewNode();
    sub_1C085F050(&qword_1EB867148, (void (*)(uint64_t))type metadata accessor for FormatProgressViewNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069D78C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatItemBindingsNode();
    sub_1C085F050(&qword_1EB867058, (void (*)(uint64_t))type metadata accessor for FormatItemBindingsNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069D958(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAuxiliaryNode();
    sub_1C085F050(&qword_1EB866848, (void (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069DB24(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatResetNode();
    sub_1C085F050(&qword_1EB865BC8, (void (*)(uint64_t))type metadata accessor for FormatResetNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069DCF0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatVariableNode();
    sub_1C085F050(&qword_1EB866590, (void (*)(uint64_t))type metadata accessor for FormatVariableNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069DEBC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatBreakpointNode();
    sub_1C085F050(&qword_1EA198F60, (void (*)(uint64_t))type metadata accessor for FormatBreakpointNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069E088(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatPuzzleEmbedNode();
    sub_1C085F050(&qword_1EB861388, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069E254(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSponsoredBannerNode();
    sub_1C085F050(&qword_1EA1A0AB8, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069E420(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0907A9C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC48A4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatRemoteFont();
    sub_1C085F050(&qword_1EB85B8A8, (void (*)(uint64_t))type metadata accessor for FormatRemoteFont);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069E5F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  char v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C0907A9C;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC48A4();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C035553C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069E790(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  uint64_t v19 = *((void *)a2 + 4);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0907A9C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC48A4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08625E4();
    sub_1C085F050(&qword_1EA1A0E80, (void (*)(uint64_t))sub_1C08625E4);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069E968(char a1, long long *a2, uint64_t a3)
{
  char v22 = a1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FBECC;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDEECEC();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAB90C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069EB08(char a1, long long *a2, uint64_t a3)
{
  char v28 = a1;
  long long v7 = a2[5];
  long long v24 = a2[4];
  long long v25 = v7;
  long long v8 = a2[7];
  long long v26 = a2[6];
  long long v27 = v8;
  long long v9 = a2[1];
  long long v20 = *a2;
  long long v21 = v9;
  long long v10 = a2[3];
  long long v22 = a2[2];
  long long v23 = v10;
  sub_1BFEFF7D8();
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C08FBECC;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDEECEC();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C08FBED8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069ECB8(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBF2C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatContent(0);
    sub_1C085F050(&qword_1EA1A8630, (void (*)(uint64_t))type metadata accessor for FormatContent);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069EE8C(char a1, long long *a2, uint64_t a3)
{
  char v25 = a1;
  long long v7 = a2[5];
  long long v23 = a2[4];
  *(_OWORD *)long long v24 = v7;
  *(_OWORD *)&v24[11] = *(long long *)((char *)a2 + 91);
  long long v8 = a2[1];
  long long v19 = *a2;
  long long v20 = v8;
  long long v9 = a2[3];
  long long v21 = a2[2];
  long long v22 = v9;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FBF2C;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C007EBF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069F03C(char a1, long long *a2, uint64_t a3)
{
  char v29 = a1;
  long long v7 = a2[7];
  long long v26 = a2[6];
  long long v27 = v7;
  long long v28 = a2[8];
  long long v8 = a2[3];
  long long v22 = a2[2];
  long long v23 = v8;
  long long v9 = a2[5];
  long long v24 = a2[4];
  long long v25 = v9;
  long long v10 = a2[1];
  long long v20 = *a2;
  long long v21 = v10;
  sub_1BFEFF7D8();
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v18[2] = sub_1C08FBF2C;
  void v18[3] = v15;
  swift_retain();
  char v16 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v19 = 0uLL;
    sub_1C1520BAC();
    long long v19 = xmmword_1C152C800;
    sub_1C0084004();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069F1FC(char a1, long long *a2, uint64_t a3)
{
  char v26 = a1;
  long long v7 = a2[5];
  long long v23 = a2[4];
  long long v24 = v7;
  *(_OWORD *)long long v25 = a2[6];
  *(_OWORD *)&v25[9] = *(long long *)((char *)a2 + 105);
  long long v8 = a2[1];
  long long v19 = *a2;
  long long v20 = v8;
  long long v9 = a2[3];
  long long v21 = a2[2];
  long long v22 = v9;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FBF2C;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C0084B54();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069F3B4(char a1, long long *a2, uint64_t a3)
{
  char v21 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  long long v19 = a2[2];
  uint64_t v20 = *((void *)a2 + 6);
  sub_1BFEFF7D8();
  long long v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBF2C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C007B350();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069F55C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBF2C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatPackage();
    sub_1C085F050(&qword_1EB874550, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069F730(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FBF2C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FBF8C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069F8C8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBF2C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSnippet();
    sub_1C085F050(&qword_1EB87D6A0, (void (*)(uint64_t))type metadata accessor for FormatSnippet);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069FA94(char a1, long long *a2, uint64_t a3)
{
  char v23 = a1;
  long long v7 = a2[3];
  long long v20 = a2[2];
  long long v21 = v7;
  uint64_t v22 = *((void *)a2 + 8);
  long long v8 = a2[1];
  long long v18 = *a2;
  long long v19 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FBF2C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C0083BCC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069FC3C(char a1, long long *a2, uint64_t a3)
{
  char v25 = a1;
  long long v7 = a2[5];
  long long v23 = a2[4];
  *(_OWORD *)long long v24 = v7;
  *(_OWORD *)&v24[9] = *(long long *)((char *)a2 + 89);
  long long v8 = a2[1];
  long long v19 = *a2;
  long long v20 = v8;
  long long v9 = a2[3];
  long long v21 = a2[2];
  long long v22 = v9;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FBF2C;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1C0079384();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069FDEC(char a1, long long *a2, uint64_t a3)
{
  char v24 = a1;
  long long v7 = a2[3];
  long long v20 = a2[2];
  long long v21 = v7;
  long long v22 = a2[4];
  char v23 = *((unsigned char *)a2 + 80);
  long long v8 = a2[1];
  long long v18 = *a2;
  long long v19 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FBF2C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C00847A4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C069FF9C(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBF2C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08FBF38();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatBindingContent();
    sub_1C085F050(&qword_1EA199FF0, (void (*)(uint64_t))type metadata accessor for FormatBindingContent);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A0170(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0909358;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0909364();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A033C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  char v9 = a1 & 1;
  char v23 = a1 & 1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  __int16 v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C0909358;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0909364();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFD9F390();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A04E0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0901058;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901064();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAnimationNodeBasicAnimation();
    sub_1C085F050(&qword_1EA1A0D20, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeBasicAnimation);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A06AC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0901058;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901064();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAnimationNodeSpringAnimation();
    sub_1C085F050(&qword_1EB85F598, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A0878(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0901058;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C0901064();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAnimationNodeGroupAnimation();
    sub_1C085F050(&qword_1EA199E30, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeGroupAnimation);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A0A44(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  long long v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F1334;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C08F1340();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08F1394();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A0BD8(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  long long v19 = a2[2];
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FCA9C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFCBA48C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FCAA8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t FormatPatternDirection.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v20 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v19[1] = (char *)v19 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v19 - v8;
  int v21 = *v1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __int16 v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB93CAB0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = v25;
  sub_1BFE97CE8((uint64_t)v9, (uint64_t)sub_1C01B158C, 0, v10, v11);
  uint64_t result = sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    uint64_t v17 = v22[3];
    uint64_t v25 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v17);
    uint64_t v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BFE97CE8(v18, (uint64_t)sub_1C01B158C, 0, v17, v25);
    sub_1BFEFEB68(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  return result;
}

uint64_t FormatTextAdjustmentMetric.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v31 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  char v33 = &v29[-v6];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v29[-v8];
  sub_1C0863504();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v13 = *(unsigned char *)v1;
  uint64_t v32 = *(void *)(v1 + 8);
  int v30 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C08633D8();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB892240, (void (*)(uint64_t))sub_1C08633D8);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextAdjustmentMetric, v19, v14, (uint64_t)&type metadata for FormatTextAdjustmentMetric, v17, (uint64_t)&type metadata for FormatVersions.StarSky, v15, (uint64_t)v12, v18, (uint64_t)&off_1F1C39BA8);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CA98);
  __int16 v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = v34;
  sub_1C06AE6AC(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v23)
  {
    uint64_t v24 = (uint64_t)v33;
    v22(v33, v21, v20);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v21;
    uint64_t v25 = swift_retain();
    sub_1C06AE848(v25, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    uint64_t v26 = v34;
    swift_release();
    uint64_t v27 = (uint64_t)v31;
    v22(v31, v26, v20);
    swift_storeEnumTagMultiPayload();
    sub_1C06AEA18(v30, 2, 0, 0, v27, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v12, (uint64_t (*)(void))sub_1C0863504);
}

uint64_t FormatFontMetric.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatFontMetric, v16, v13, (uint64_t)&type metadata for FormatFontMetric, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39BA8);
  if (v12)
  {
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0735B60(1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0735B60(0, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatFontMetricAdjustment.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatFontMetricAdjustment, v16, v13, (uint64_t)&type metadata for FormatFontMetricAdjustment, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1F1C39BA8);
  if (v12)
  {
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C151928C();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0730334(1, (uint64_t)v5);
    uint64_t v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C151928C();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0730334(0, (uint64_t)v8);
    uint64_t v19 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t FormatRange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v76 = a3;
  uint64_t v67 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v60 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v59 = (char *)&v53 - v6;
  MEMORY[0x1F4188790](v7);
  id v66 = (char *)&v53 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = v10;
  unint64_t v71 = (char *)&v53 - v11;
  uint64_t v68 = v12;
  *(void *)&long long v73 = v12;
  *((void *)&v73 + 1) = v10;
  uint64_t v61 = v13;
  uint64_t v62 = v14;
  uint64_t v74 = v13;
  uint64_t v75 = v14;
  uint64_t v15 = _s10CodingKeysOMa_271();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = swift_getWitnessTable();
  *(void *)&long long v73 = v15;
  *((void *)&v73 + 1) = WitnessTable;
  uint64_t v64 = v17;
  uint64_t v65 = WitnessTable;
  uint64_t v74 = v17;
  uint64_t v75 = v18;
  uint64_t v63 = v18;
  uint64_t v19 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v20 = sub_1C152072C();
  uint64_t v69 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  __int16 v22 = (char *)&v53 - v21;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v23 = (void *)v72;
  sub_1C1520EBC();
  uint64_t v24 = v23;
  if (v23) {
    goto LABEL_15;
  }
  uint64_t v56 = v19;
  uint64_t v55 = v15;
  uint64_t v57 = 0;
  uint64_t v58 = v22;
  uint64_t v72 = v20;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v25 = sub_1C1520EAC();
  char v26 = Dictionary<>.errorOnUnknownKeys.getter(v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = v76;
  if ((v26 & 1) == 0)
  {
LABEL_11:
    long long v73 = 0uLL;
    LOBYTE(v74) = 0;
    uint64_t v41 = v68;
    uint64_t v42 = v72;
    uint64_t v44 = v57;
    long long v43 = v58;
    sub_1C15206EC();
    uint64_t v24 = v44;
    if (!v44)
    {
      long long v73 = xmmword_1C153AB20;
      LOBYTE(v74) = 0;
      uint64_t v45 = v66;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v42);
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
      uint64_t v51 = (uint64_t)v59;
      v50(v59, v71, v41);
      uint64_t v52 = (uint64_t)v60;
      v50(v60, v45, v41);
      sub_1C0263C24(v51, v52, v41, v27);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v42);
LABEL_15:
    sub_1C0038728(v3, (uint64_t)v24);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  uint64_t v28 = sub_1C152070C();
  uint64_t v29 = v56;
  if (!MEMORY[0x1C18C6870](v28, v56))
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v54 = v3;
  uint64_t v30 = 0;
  uint64_t v31 = (char *)(v28 + 48);
  while (1)
  {
    char v32 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v32 & 1) == 0) {
      break;
    }
    uint64_t v34 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_18;
    }
    uint64_t v36 = *((void *)v31 - 2);
    uint64_t v35 = *((void *)v31 - 1);
    char v37 = *v31;
    *(void *)&long long v73 = v36;
    *((void *)&v73 + 1) = v35;
    LOBYTE(v74) = v37;
    sub_1BFE94AB4(v36, v35, v37);
    uint64_t v38 = sub_1C0D990EC(v29);
    if (v39)
    {
      uint64_t v46 = v39;
      uint64_t v47 = v38;
      swift_bridgeObjectRelease();
      uint64_t v48 = sub_1C0D98F50(v55, v65, v64, v63);
      sub_1C02570B4();
      uint64_t v24 = (void *)swift_allocError();
      *(void *)uint64_t v49 = v47;
      *(void *)(v49 + 8) = v46;
      *(void *)(v49 + 16) = v48;
      *(_OWORD *)(v49 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v73, *((uint64_t *)&v73 + 1), v74);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v72);
      uint64_t v3 = v54;
      goto LABEL_15;
    }
    sub_1BFE94AD4(v36, v35, v37);
    uint64_t v40 = MEMORY[0x1C18C6870](v28, v29);
    ++v30;
    v31 += 24;
    uint64_t v27 = v76;
    if (v34 == v40)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v54;
      goto LABEL_11;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t FormatRange.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  char v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v35 = *(void *)(a2 + 16);
  *(void *)char v37 = v35;
  long long v34 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)&v37[8] = v34;
  uint64_t v38 = v10;
  uint64_t v11 = _s10CodingKeysOMa_271();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  *(void *)char v37 = v11;
  *(void *)&v37[8] = WitnessTable;
  *(void *)&v37[16] = v13;
  uint64_t v38 = v14;
  uint64_t v15 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v16 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v39 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v33 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  uint64_t v31 = a2;
  sub_1BFEFBD78(a2, v21, v19, a2, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v18, v16, (uint64_t)&off_1F1C39B68);
  memset(v37, 0, 17);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAB0);
  uint64_t v24 = *(void (**)(char *))(*(void *)(v22 - 8) + 16);
  uint64_t v30 = v23;
  v24(v9);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = *(void *)(v34 + 16);
  sub_1BFEFFFF0(v36, (uint64_t)v37, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0, v39, v35, v25);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v18, v39);
  }
  uint64_t v27 = (uint64_t)v32;
  uint64_t v28 = v36 + *(int *)(v31 + 52);
  *(_OWORD *)char v37 = xmmword_1C153AB20;
  v37[16] = 0;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v32, v30, v22);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v39;
  sub_1BFEFFFF0(v28, (uint64_t)v37, v27, (uint64_t)sub_1C01B158C, 0, v39, v35, v25);
  sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v18, v29);
}

uint64_t FormatSymbolImageFill.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  sub_1C0863C14();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0863CA8();
  sub_1C085F050(&qword_1EB891FB0, (void (*)(uint64_t))sub_1C0863CA8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v25;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v25 = (void *)*((void *)v16 - 2);
      uint64_t v18 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v19 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v19);
      *(&v25 - 4) = &_s10CodingKeysON_252;
      *(&v25 - 3) = (void *)sub_1C0863D2C();
      *(&v25 - 2) = (void *)sub_1C0863D80();
      *(&v25 - 1) = (void *)sub_1C0863DD4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v20 = sub_1C085FB14((uint64_t)&unk_1F1B6C8F0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v21 = (uint64_t)v25;
      *(void *)uint64_t v22 = v25;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = v20;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v21, v18, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE113DC();
  long long v26 = 0uLL;
  char v27 = 0;
  sub_1C15206EC();
  uint64_t v17 = v28;
  long long v26 = xmmword_1C153AB20;
  char v27 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  uint64_t v24 = v28;
  *uint64_t v12 = v17;
  v12[1] = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSymbolImageFill.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - v6;
  sub_1C0863E28();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  uint64_t v34 = v1[1];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C0863CA8();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB891FB0, (void (*)(uint64_t))sub_1C0863CA8);
  char v37 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSymbolImageFill, v17, v12, (uint64_t)&type metadata for FormatSymbolImageFill, v15, (uint64_t)&type metadata for FormatVersions.AzdenE, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B08);
  sub_1BFF05D18();
  uint64_t v19 = &v7[*(int *)(v18 + 48)];
  uint64_t v33 = v18;
  uint64_t v20 = &v7[*(int *)(v18 + 64)];
  uint64_t v21 = qword_1EB887620;
  uint64_t v36 = v11 & 0xFFFFFFFFFFFFFFFLL;
  swift_retain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CA50);
  uint64_t v24 = *(void (**)(char *))(*(void *)(v22 - 8) + 16);
  uint64_t v32 = v23;
  v24(v7);
  if (qword_1EB8849D0 != -1) {
    swift_once();
  }
  uint64_t v25 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93C828);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v19, v25, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (uint64_t)v37;
  char v27 = v38;
  sub_1C06B7A88(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v27)
  {
    uint64_t v28 = (uint64_t)v35;
    uint64_t v38 = &v35[*(int *)(v33 + 48)];
    uint64_t v29 = &v35[*(int *)(v33 + 64)];
    ((void (*)(char *, uint64_t, uint64_t))v24)(v35, v32, v22);
    ((void (*)(char *, uint64_t, uint64_t))v24)(v38, v25, v22);
    *(void *)uint64_t v29 = 0;
    *((void *)v29 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = v34;
    swift_retain();
    sub_1C06B7A88(v30, 1, 0, 0, v28, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BFEFEB68(v26, (uint64_t (*)(void))sub_1C0863E28);
}

uint64_t FormatSymbolImageColor.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    uint64_t v18 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v18);
  }
  uint64_t v10 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v11 = sub_1C1520EAC();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v32;
  uint64_t v13 = v8;
  if (v10)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v17;
      *(void *)(v23 + 16) = &unk_1F1B6C918;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v17);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      a1 = v29;
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C0863F50();
  long long v31 = 0uLL;
  sub_1C15206EC();
  switch((char)v30)
  {
    case 1:
      long long v31 = xmmword_1C152C800;
      sub_1BFE113DC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      uint64_t v24 = v30;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      unint64_t v21 = v25 | 0x4000000000000000;
      break;
    case 2:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      unint64_t v21 = 0xC000000000000000;
      break;
    case 3:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      unint64_t v21 = 0xC000000000000008;
      break;
    case 4:
      sub_1BFEFF3E8(0, &qword_1EA19D1E8, (uint64_t (*)(void))sub_1C0280EA4, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v30 = xmmword_1C152C800;
      sub_1C0863FA4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      long long v26 = v31;
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v26;
      unint64_t v21 = v27 | 0x8000000000000000;
      break;
    default:
      sub_1BFE9DEBC(0, &qword_1EB879D10, (uint64_t)&type metadata for FormatColor, MEMORY[0x1E4FBB320]);
      long long v31 = xmmword_1C152C800;
      sub_1BFD622D4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v6);
      uint64_t v20 = v30;
      unint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      break;
  }
  *a2 = v21;
  uint64_t v18 = (uint64_t)v29;
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

uint64_t FormatSymbolImageColor.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v47 = (char *)&v47 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v47 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v47 - v15;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v20 = *v1;
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  unint64_t v23 = sub_1BFEB6A24();
  uint64_t v48 = v19;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSymbolImageColor, v24, v21, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.CrystalGlow, v22, (uint64_t)v19, v23, (uint64_t)&off_1F1C39A48);
  switch(v20 >> 62)
  {
    case 1uLL:
      uint64_t v30 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v31 = qword_1EB8849D0;
      swift_retain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1C151928C();
      uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB93C828);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v13, v33, v32);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = (uint64_t)v48;
      sub_1C0683B4C(1, v30, (uint64_t)v13);
      sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v34, (uint64_t (*)(void))sub_1BFEFF7D8);
      uint64_t result = swift_release();
      break;
    case 2uLL:
      unint64_t v37 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v36 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFF58F10(v37);
      uint64_t v38 = qword_1EB8849D0;
      swift_bridgeObjectRetain();
      if (v38 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1C151928C();
      uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB93C828);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v5, v40, v39);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v48;
      sub_1C0683CE0(4, v37, v36, (uint64_t)v5);
      sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v41, (uint64_t (*)(void))sub_1BFEFF7D8);
      sub_1BFF07CD8(v37);
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3uLL:
      if (v20 == 0xC000000000000000)
      {
        uint64_t v28 = (uint64_t)v48;
        if (qword_1EB8849D0 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_1C151928C();
        uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93C828);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v10, v43, v42);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        sub_1C0731DA4(2, (uint64_t)v10);
        uint64_t v29 = (uint64_t)v10;
      }
      else
      {
        uint64_t v28 = (uint64_t)v48;
        if (qword_1EB8849D0 != -1) {
          swift_once();
        }
        uint64_t v44 = sub_1C151928C();
        uint64_t v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1EB93C828);
        uint64_t v46 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v47, v45, v44);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        sub_1C0731DA4(3, v46);
        uint64_t v29 = v46;
      }
      goto LABEL_18;
    default:
      uint64_t v25 = *(void *)(v20 + 16);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1C151928C();
      uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93C828);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v16, v27, v26);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = (uint64_t)v48;
      sub_1C068398C(0, v25, (uint64_t)v16);
      uint64_t v29 = (uint64_t)v16;
LABEL_18:
      sub_1BFEFEB68(v29, type metadata accessor for FormatVersionRequirement);
      uint64_t result = sub_1BFEFEB68(v28, (uint64_t (*)(void))sub_1BFEFF7D8);
      break;
  }
  return result;
}

uint64_t FormatBreakpointNode.__allocating_init(from:)(void *a1)
{
  return sub_1C0864C98(a1);
}

uint64_t FormatBreakpointNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v49 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v52 = (char *)&v49 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v49 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - v14;
  sub_1C08650EC();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1C0865214();
  uint64_t v22 = v21;
  uint64_t v23 = sub_1C085F050(&qword_1EA19D228, (void (*)(uint64_t))sub_1C0865214);
  sub_1BFEFBD78(v4, v24, v19, v4, v22, (uint64_t)&type metadata for FormatVersions.Dawnburst, v20, (uint64_t)v18, v23, (uint64_t)&off_1F1C39BC8);
  swift_beginAccess();
  uint64_t v25 = v2[2];
  uint64_t v26 = v2[3];
  uint64_t v27 = qword_1EB887668;
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1C151928C();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CB10);
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v32 = v29;
  uint64_t v33 = v31;
  uint64_t v54 = v30 + 16;
  ((void (*)(char *))v31)(v15);
  uint64_t v55 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = v58;
  sub_1C06D13A8(v25, v26, 0, 0, 0, (uint64_t)v15, (uint64_t)sub_1C01B158C, 0);
  if (v34)
  {
    sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v35 = (uint64_t)v18;
  }
  else
  {
    uint64_t v58 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v36 = v2[4];
    uint64_t v37 = (uint64_t)v53;
    uint64_t v49 = v32;
    uint64_t v38 = v32;
    uint64_t v39 = v33;
    v33(v53, v38, v28);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = v36;
    uint64_t v35 = (uint64_t)v18;
    sub_1C06BBC0C(v40, 1, 0, 0, v37, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v37, v58);
    uint64_t v41 = v2[5];
    uint64_t v42 = (uint64_t)v52;
    v39(v52, v49, v28);
    swift_storeEnumTagMultiPayload();
    sub_1C06BBC0C(v41, 2, 0, 0, v42, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v42, type metadata accessor for FormatVersionRequirement);
    uint64_t v43 = v2[6];
    uint64_t v44 = v2[7];
    uint64_t v45 = (uint64_t)v51;
    v39(v51, v49, v28);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1C06BBDA0(v43, v44, 3, 0, 0, v45, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    long long v46 = *((_OWORD *)v2 + 5);
    v56[0] = *((_OWORD *)v2 + 4);
    v56[1] = v46;
    uint64_t v57 = v2[12];
    uint64_t v47 = (uint64_t)v50;
    v39(v50, v49, v28);
    swift_storeEnumTagMultiPayload();
    sub_1BFF1BDBC((uint64_t)v56);
    sub_1C06BBF34(v56, 4, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BFF1BD7C((uint64_t)v56);
  }
  return sub_1BFEFEB68(v35, (uint64_t (*)(void))sub_1C08650EC);
}

uint64_t FormatRemoteFont.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v37 = a2;
  *(void *)&long long v39 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v39);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0865634();
  uint64_t v8 = v7;
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08656C8();
  sub_1C085F050(&qword_1EB86CC88, (void (*)(uint64_t))sub_1C08656C8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_15:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v36 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v10;
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = a1;
      uint64_t v21 = *((void *)v16 - 2);
      uint64_t v22 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v23);
      *(&v35 - 4) = (uint64_t)&_s10CodingKeysON_246;
      *(&v35 - 3) = sub_1C086574C();
      *(&v35 - 2) = sub_1C08657A0();
      *(&v35 - 1) = sub_1C08657F4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v24 = sub_1C085FB14((uint64_t)&unk_1F1B6DAC8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v25 = v21;
      *(void *)(v25 + 8) = v22;
      *(void *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v26 = v21;
      a1 = v20;
      sub_1BFE94AD4(v26, v22, 1);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v8);
      goto LABEL_15;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v44 = 0uLL;
  char v45 = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v19 = v18;
  long long v44 = xmmword_1C153AB20;
  char v45 = 0;
  sub_1C085F050(&qword_1EB879A28, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1C15206EC();
  long long v39 = xmmword_1C1557FA0;
  long long v44 = xmmword_1C1557FA0;
  char v45 = 0;
  double v27 = 16.0;
  if (sub_1C152071C())
  {
    long long v42 = v39;
    char v43 = 0;
    sub_1BFE7E344();
    sub_1C15206EC();
    uint64_t v28 = v37;
    double v27 = v40;
  }
  else
  {
    uint64_t v28 = v37;
  }
  long long v39 = xmmword_1C1557FB0;
  long long v44 = xmmword_1C1557FB0;
  char v45 = 0;
  if (sub_1C152071C())
  {
    long long v42 = v39;
    char v43 = 0;
    sub_1BFDEE468();
    sub_1C15206EC();
    uint64_t v30 = v17;
    double v31 = v40;
    __int16 v32 = v41;
  }
  else
  {
    uint64_t v30 = v17;
    double v31 = 0.0;
    __int16 v32 = 3072;
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
  uint64_t v33 = (int *)type metadata accessor for FormatRemoteFont();
  sub_1BFE7FB8C((uint64_t)v36, (uint64_t)v28 + v33[5], (uint64_t (*)(void))type metadata accessor for FormatURL);
  *uint64_t v28 = v30;
  v28[1] = v19;
  *(double *)((char *)v28 + v33[6]) = v27;
  uint64_t v34 = (char *)v28 + v33[7];
  *(double *)uint64_t v34 = v31;
  *((_WORD *)v34 + 4) = v32;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatRemoteFont.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v65 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v66 = (char *)&v60 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = (uint64_t)&v60 - v9;
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v60 - v11;
  sub_1C0865848();
  uint64_t v68 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v18 = type metadata accessor for FormatRemoteFont();
  sub_1C08656C8();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C085F050(&qword_1EB86CC88, (void (*)(uint64_t))sub_1C08656C8);
  uint64_t v69 = (int *)v18;
  sub_1BFEFBD78(v18, v22, v16, v18, v20, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v15, v21, (uint64_t)&off_1F1C39B68);
  uint64_t v23 = *v2;
  uint64_t v24 = v2[1];
  uint64_t v67 = v2;
  uint64_t v25 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CAB0);
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v30 = v28 + 16;
  v29(v12, v27, v26);
  uint64_t v31 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v71;
  sub_1C06C18B8(v23, v24, 0, 0, 0, (uint64_t)v12, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v32) {
    return sub_1BFEFEB68((uint64_t)v15, (uint64_t (*)(void))sub_1C0865848);
  }
  uint64_t v33 = v69[5];
  uint64_t v34 = v27;
  uint64_t v35 = v70;
  uint64_t v63 = v34;
  uint64_t v64 = v33;
  ((void (*)(uint64_t))v29)(v70);
  swift_storeEnumTagMultiPayload();
  long long v74 = xmmword_1C153AB20;
  char v75 = 0;
  uint64_t v36 = &v15[*((int *)v68 + 11)];
  uint64_t v71 = 0;
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  long long v72 = xmmword_1C153AB20;
  char v73 = 0;
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = sub_1BFE7FB8C((uint64_t)&v72, v39 + 16, (uint64_t (*)(void))sub_1C08656C8);
  uint64_t v68 = &v60;
  *(void *)(v39 + 40) = v38;
  *(void *)(v39 + 48) = v37;
  MEMORY[0x1F4188790](v40);
  *(&v60 - 4) = (uint64_t)sub_1C01B158C;
  *(&v60 - 3) = 0;
  uint64_t v58 = sub_1C0865988;
  uint64_t v59 = v39;
  swift_retain();
  uint64_t v41 = v71;
  sub_1C0812660(v35, 1, 0, 0, (uint64_t)sub_1C08659A0, (uint64_t)(&v60 - 6));
  if (v41)
  {
    swift_release();
    sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
    return sub_1BFEFEB68((uint64_t)v15, (uint64_t (*)(void))sub_1C0865848);
  }
  uint64_t v71 = v31;
  uint64_t v61 = v29;
  uint64_t v62 = v30;
  long long v42 = v67;
  sub_1C08658DC();
  long long v44 = v43;
  uint64_t v45 = sub_1C085F050(&qword_1EB86E120, (void (*)(uint64_t))sub_1C08658DC);
  type metadata accessor for FormatURL();
  sub_1C085F050(&qword_1EB85C2C8, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1C1520BAC();
  uint64_t v64 = v45;
  uint64_t v68 = v44;
  swift_release();
  sub_1BFEFEB68(v70, type metadata accessor for FormatVersionRequirement);
  double v47 = *(double *)((char *)v42 + v69[6]);
  uint64_t v48 = (uint64_t)v66;
  uint64_t v49 = v63;
  uint64_t v50 = v61;
  v61(v66, v63, v26);
  swift_storeEnumTagMultiPayload();
  sub_1C06D7284(2, 0, 0, v47);
  sub_1BFEFEB68(v48, type metadata accessor for FormatVersionRequirement);
  uint64_t v51 = (char *)v67 + v69[7];
  uint64_t v52 = *(void *)v51;
  __int16 v53 = *((_WORD *)v51 + 4);
  uint64_t v54 = v49;
  uint64_t v55 = (uint64_t)v65;
  v50(v65, v54, v26);
  swift_storeEnumTagMultiPayload();
  if ((v53 & 0xFF00) == 0xC00)
  {
    uint64_t v56 = (uint64_t)v15;
  }
  else
  {
    uint64_t v57 = v52;
    uint64_t v56 = (uint64_t)v15;
    if (sub_1C083FE0C(v55, 3, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v74 = xmmword_1C1557FB0;
      char v75 = 0;
      *(void *)&long long v72 = v57;
      WORD4(v72) = v53;
      sub_1BFE65450();
      sub_1C1520BAC();
    }
  }
  sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v56, (uint64_t (*)(void))sub_1C0865848);
}

uint64_t FormatGroupNodeStyle.__allocating_init(from:)(void *a1)
{
  return sub_1BFCCFE88(a1);
}

uint64_t FormatGroupNodeStyle.Selector.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C0865C00();
  uint64_t v7 = v6;
  uint64_t v55 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0865C94();
  sub_1C085F050(&qword_1EA19D270, (void (*)(uint64_t))sub_1C0865C94);
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_11:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v55;
  uint64_t v14 = v9;
  uint64_t v10 = a1;
  if (v12)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_8;
        }
      }
      uint64_t v54 = a1;
      uint64_t v19 = *((void *)v17 - 2);
      uint64_t v20 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = swift_bridgeObjectRelease();
      uint64_t v22 = v13;
      MEMORY[0x1F4188790](v21);
      sub_1C0865D18();
      sub_1C0865D6C();
      sub_1C0865DC0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B6AAA0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v19;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v25 = v20;
      uint64_t v10 = v54;
      sub_1BFE94AD4(v19, v25, 1);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9420C();
  long long v56 = 0uLL;
  LOBYTE(v57) = 0;
  sub_1C15206EC();
  long long v18 = v66;
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v56 = xmmword_1C153AB20;
  LOBYTE(v57) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v26 = v66;
  long long v66 = xmmword_1C1557FA0;
  char v67 = 0;
  sub_1BFE9224C();
  sub_1C152065C();
  uint64_t v52 = v18;
  uint64_t v53 = v26;
  uint64_t v27 = *((void *)&v56 + 1);
  uint64_t v54 = (void *)v56;
  LODWORD(v26) = v57;
  long long v66 = xmmword_1C1557FB0;
  char v67 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  uint64_t v50 = v27;
  int v51 = v26;
  long long v43 = v56;
  uint64_t v44 = v57;
  uint64_t v45 = v58;
  uint64_t v46 = v59;
  uint64_t v47 = v60;
  uint64_t v48 = v61;
  uint64_t v49 = v62;
  uint64_t v42 = v63;
  uint64_t v41 = v64;
  LODWORD(v27) = v65;
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v56 = xmmword_1C1557FD0;
  LOBYTE(v57) = 0;
  sub_1BFE94094();
  sub_1C152065C();
  int v39 = v27;
  uint64_t v40 = v66;
  long long v56 = xmmword_1C1557FC0;
  LOBYTE(v57) = 0;
  int v38 = sub_1C152061C();
  uint64_t v28 = v53;
  long long v56 = xmmword_1C1557FE0;
  LOBYTE(v57) = 0;
  uint64_t v30 = sub_1C152061C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
  *(void *)a2 = v52;
  *(void *)(a2 + 8) = *((void *)&v18 + 1);
  uint64_t v31 = v54;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v31;
  *(void *)(a2 + 32) = v50;
  *(unsigned char *)(a2 + 40) = v51;
  *(_DWORD *)(a2 + 41) = v66;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)((char *)&v66 + 3);
  uint64_t v32 = *((void *)&v43 + 1);
  *(void *)(a2 + 48) = v43;
  *(void *)(a2 + 56) = v32;
  uint64_t v33 = v45;
  *(void *)(a2 + 64) = v44;
  *(void *)(a2 + 72) = v33;
  uint64_t v34 = v47;
  *(void *)(a2 + 80) = v46;
  *(void *)(a2 + 88) = v34;
  uint64_t v35 = v49;
  *(void *)(a2 + 96) = v48;
  *(void *)(a2 + 104) = v35;
  uint64_t v36 = v41;
  *(void *)(a2 + 112) = v42;
  *(void *)(a2 + 120) = v36;
  *(unsigned char *)(a2 + 128) = v39;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v68[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v68;
  *(void *)(a2 + 136) = v40;
  *(unsigned char *)(a2 + 144) = v38;
  *(unsigned char *)(a2 + 145) = v30;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t FormatGroupNodeStyle.Selector.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  int v51 = (uint64_t (*)(uint64_t))&v49[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v53 = (uint64_t (*)(uint64_t))&v49[-v6];
  MEMORY[0x1F4188790](v7);
  uint64_t v55 = (uint64_t (*)(uint64_t))&v49[-v8];
  MEMORY[0x1F4188790](v9);
  long long v56 = (uint64_t (*)(uint64_t))&v49[-v10];
  MEMORY[0x1F4188790](v11);
  uint64_t v60 = (uint64_t (*)(uint64_t))&v49[-v12];
  MEMORY[0x1F4188790](v13);
  uint64_t v62 = (uint64_t (*)(uint64_t))&v49[-v14];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v49[-v16];
  sub_1C0865E14();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = &v49[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *(void *)v1;
  uint64_t v21 = *(void *)(v1 + 8);
  uint64_t v61 = *(void *)(v1 + 16);
  uint64_t v57 = *(void *)(v1 + 24);
  uint64_t v59 = *(void *)(v1 + 32);
  int v58 = *(unsigned __int8 *)(v1 + 40);
  sub_1BFE99AAC(v1 + 48, (uint64_t)v64, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
  uint64_t v54 = *(void *)(v1 + 136);
  int v52 = *(unsigned __int8 *)(v1 + 144);
  int v50 = *(unsigned __int8 *)(v1 + 145);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1C0865C94();
  uint64_t v26 = v25;
  uint64_t v27 = sub_1C085F050(&qword_1EA19D270, (void (*)(uint64_t))sub_1C0865C94);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatGroupNodeStyle.Selector, v28, v23, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, v26, (uint64_t)&type metadata for FormatVersions.StarSky, v24, (uint64_t)v20, v27, (uint64_t)&off_1F1C39BA8);
  uint64_t v29 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C151928C();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CA98);
  uint64_t v32 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  uint64_t v63 = v31;
  ((void (*)(unsigned char *))v32)(v17);
  uint64_t v33 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = (uint64_t)v20;
  uint64_t v35 = v65;
  sub_1C06BB394(v22, v21, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1C01B158C, 0);
  if (v35)
  {
    sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v36 = v62;
    v32(v62, v63, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_1C070C930(v37, 1, 0, 0, (uint64_t)v36, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v36, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t)v60;
    v32(v60, v63, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = v33;
    uint64_t v39 = v57;
    uint64_t v40 = v59;
    char v41 = v58;
    sub_1BFEF6828(v57, v59, v58);
    sub_1C070CB94(v39, v40, v41, 2, 0, 0, v38, (uint64_t)sub_1C01B158C);
    uint64_t v62 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68(v38, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68AC(v39, v40, v41);
    uint64_t v42 = (uint64_t)v56;
    v32(v56, v63, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v64, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C070CE08((uint64_t)v64, 3, 0, 0, v42, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v42, v62);
    sub_1BFE99EB4((uint64_t)v64, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v43 = (uint64_t)v55;
    v32(v55, v63, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = swift_bridgeObjectRetain();
    sub_1C070D13C(v44, 4, 0, 0, v43, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v45 = (uint64_t)v53;
    v32(v53, v63, v30);
    swift_storeEnumTagMultiPayload();
    sub_1C070D3B4(v52, 5, 0, 0, v45, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v46 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CA08);
    uint64_t v47 = (uint64_t)v51;
    v32(v51, v46, v30);
    swift_storeEnumTagMultiPayload();
    sub_1C070D3B4(v50, 6, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68(v34, (uint64_t (*)(void))sub_1C0865E14);
}

unint64_t FormatDateTime.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v57 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int v58 = (char *)&v56 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v56 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v56 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v56 - v18;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *v2;
  uint64_t v25 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  unint64_t v26 = sub_1BFEB6A24();
  uint64_t v59 = v22;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatDateTime, v27, v25, (uint64_t)&type metadata for FormatDateTime, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v24, (uint64_t)v22, v26, (uint64_t)&off_1F1C39BC8);
  switch(v23 >> 62)
  {
    case 1uLL:
      uint64_t v36 = v23 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v38 = *(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v37 = *(void *)(v36 + 24);
      swift_bridgeObjectRetain();
      sub_1BFF58F10(v37);
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1C151928C();
      uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v16, v40, v39);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v59;
      sub_1C0698EB4(1, v38, v37, (uint64_t)v16);
      sub_1BFEFEB68((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v41, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      return sub_1BFF07CD8(v37);
    case 2uLL:
      uint64_t v43 = *(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v44 = *(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v45 = qword_1EB887668;
      swift_bridgeObjectRetain();
      if (v45 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1C151928C();
      uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v13, v47, v46);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = (uint64_t)v59;
      sub_1C0699048(2, v43, v44, (uint64_t)v13);
      sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      return sub_1BFEFEB68(v34, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 3uLL:
      if (v23 == 0xC000000000000000)
      {
        if (qword_1EB887668 != -1) {
          swift_once();
        }
        uint64_t v52 = sub_1C151928C();
        uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)qword_1EB93CB10);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v10, v53, v52);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v34 = (uint64_t)v59;
        sub_1C0735CB4(3, (uint64_t)v10);
        uint64_t v35 = (uint64_t)v10;
      }
      else
      {
        if (v23 == 0xC000000000000008)
        {
          if (qword_1EB887668 != -1) {
            swift_once();
          }
          uint64_t v48 = sub_1C151928C();
          uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EB93CB10);
          uint64_t v50 = (uint64_t)v58;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v58, v49, v48);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v51 = 4;
        }
        else
        {
          if (qword_1EB887668 != -1) {
            swift_once();
          }
          uint64_t v54 = sub_1C151928C();
          uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93CB10);
          uint64_t v50 = (uint64_t)v57;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v57, v55, v54);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v51 = 5;
        }
        uint64_t v34 = (uint64_t)v59;
        sub_1C0735CB4(v51, v50);
        uint64_t v35 = v50;
      }
      goto LABEL_23;
    default:
      uint64_t v28 = *(void *)(v23 + 16);
      uint64_t v29 = *(void *)(v23 + 24);
      uint64_t v30 = *(void *)(v23 + 32);
      char v31 = *(unsigned char *)(v23 + 40);
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1C151928C();
      uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB93CB10);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v19, v33, v32);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = (uint64_t)v59;
      sub_1C0698D18(0, v28, v29, v30, v31, (uint64_t)v19);
      uint64_t v35 = (uint64_t)v19;
LABEL_23:
      sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v34, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t FormatDateTimeOffset.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - v8;
  sub_1C08665D0();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  unint64_t v29 = v1[1];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C08664A4();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB891E70, (void (*)(uint64_t))sub_1C08664A4);
  char v31 = v12;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatDateTimeOffset, v19, v14, (uint64_t)&type metadata for FormatDateTimeOffset, v17, (uint64_t)&type metadata for FormatVersions.Dawnburst, v15, (uint64_t)v12, v18, (uint64_t)&off_1F1C39BC8);
  uint64_t v20 = qword_1EB887668;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CB10);
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06BB89C(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v24 = (uint64_t)v31;
  }
  else
  {
    uint64_t v25 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    unint64_t v26 = v29;
    sub_1BFF58F10(v29);
    uint64_t v27 = (uint64_t)v31;
    sub_1C06BBA74(v26, 1, 0, 0, v25, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v25, type metadata accessor for FormatVersionRequirement);
    sub_1BFF07CD8(v26);
    uint64_t v24 = v27;
  }
  return sub_1BFEFEB68(v24, (uint64_t (*)(void))sub_1C08665D0);
}

uint64_t FormatAccessibilityNode.__allocating_init(from:)(void *a1)
{
  return sub_1BFF4B7A0(a1);
}

uint64_t FormatAnimationNodeGroupAnimation.__allocating_init(from:)(void *a1)
{
  return sub_1C086694C(a1);
}

uint64_t FormatAnimationNodeGroupAnimation.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = *v1;
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v30 - v10;
  sub_1C0866DB0();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C0866ED8();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C085F050(&qword_1EA19D2C0, (void (*)(uint64_t))sub_1C0866ED8);
  uint64_t v34 = v14;
  sub_1BFEFBD78(v6, v20, v15, v6, v18, (uint64_t)&type metadata for FormatVersions.StarSky, v16, (uint64_t)v14, v19, (uint64_t)&off_1F1C39BA8);
  char v31 = v4;
  uint64_t v21 = v4[2];
  uint64_t v22 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C151928C();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CA98);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v25(v11, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06C7884(v21, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v26 = (uint64_t)v34;
  }
  else
  {
    sub_1BFE99AAC((uint64_t)(v31 + 3), (uint64_t)v33, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
    uint64_t v27 = (uint64_t)v32;
    v25(v32, v24, v23);
    swift_storeEnumTagMultiPayload();
    sub_1C00F6940((uint64_t)v33, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
    uint64_t v28 = (uint64_t)v34;
    sub_1C0727D3C((uint64_t)v33, 1, 0, 0, v27, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
    sub_1C00F6940((uint64_t)v33, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
    uint64_t v26 = v28;
  }
  return sub_1BFEFEB68(v26, (uint64_t (*)(void))sub_1C0866DB0);
}

uint64_t sub_1C06A6E48(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086E89C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086E770);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0902010;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F8208(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086E930();
    sub_1C085F050(&qword_1EB86EB50, (void (*)(uint64_t))sub_1C086E930);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A6FE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086E89C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086E770);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0902010;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F8208(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086E930();
    sub_1C085F050(&qword_1EB86EB50, (void (*)(uint64_t))sub_1C086E930);
    sub_1C0316B28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A7178(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0876708();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0876588);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FF51C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F843C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087679C();
    sub_1C085F050(&qword_1EB86EB40, (void (*)(uint64_t))sub_1C087679C);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A7310(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0876708();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0876588);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FF51C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F843C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087679C();
    sub_1C085F050(&qword_1EB86EB40, (void (*)(uint64_t))sub_1C087679C);
    sub_1BFE0FA08();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A74A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086F084();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086EF04);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0901A8C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F8670(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086F118();
    sub_1C085F050(&qword_1EA19D5E8, (void (*)(uint64_t))sub_1C086F118);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A7680(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  char v11 = a3 & 1;
  char v29 = a3 & 1;
  sub_1C08772FC();
  uint64_t v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  v25[0] = a1;
  v25[1] = a2;
  char v26 = v11;
  uint64_t v16 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v25, v16 + 16, (uint64_t (*)(void))sub_1C08771D0);
  *(void *)(v16 + 40) = v15;
  *(void *)(v16 + 48) = v14;
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v23 = sub_1C08FEF58;
  uint64_t v24 = v16;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v11);
  sub_1C07F88A4(a4, a1, a2, v11, (uint64_t)sub_1C090A470, (uint64_t)v20);
  if (!v19)
  {
    sub_1C0877390();
    sub_1C085F050(&qword_1EB86EB30, (void (*)(uint64_t))sub_1C0877390);
    sub_1C08FF21C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A7810(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0898700();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0898580);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F5F4C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F8AD8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0898794();
    sub_1C085F050(&qword_1EA19DD78, (void (*)(uint64_t))sub_1C0898794);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A79E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B1660();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B14E0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0820;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F8D0C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B16F4();
    sub_1C085F050(&qword_1EB86EB20, (void (*)(uint64_t))sub_1C08B16F4);
    sub_1BFE309D0(0, &qword_1EB880D08, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, MEMORY[0x1E4FBB320]);
    sub_1BFD77DFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A7BB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0869710();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0869590);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09048A0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F8F40(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08697A4();
    sub_1C085F050(&qword_1EA19D450, (void (*)(uint64_t))sub_1C08697A4);
    sub_1C0202760();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A7D50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B1C10();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B1A90);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0404;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F9174(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B1CA4();
    sub_1C085F050(&qword_1EA19E298, (void (*)(uint64_t))sub_1C08B1CA4);
    sub_1C0202760();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A7EE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0886314();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0886194);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB3FC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F93A8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08863A8();
    sub_1C085F050(&qword_1EA19DB80, (void (*)(uint64_t))sub_1C08863A8);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A80C0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0886314();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0886194);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB3FC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F93A8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08863A8();
    sub_1C085F050(&qword_1EA19DB80, (void (*)(uint64_t))sub_1C08863A8);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A8258(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0886314();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0886194);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB3FC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F93A8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08863A8();
    sub_1C085F050(&qword_1EA19DB80, (void (*)(uint64_t))sub_1C08863A8);
    type metadata accessor for FormatTextNodeStyle();
    sub_1C085F050(&qword_1EB866970, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A8428(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0881E70();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0881CF0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FCDB4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F95DC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0881F04();
    sub_1C085F050(&qword_1EB86EB10, (void (*)(uint64_t))sub_1C0881F04);
    sub_1BFFB47F4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A85C0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087C788();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087C65C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FDB3C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F9810(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087C81C();
    sub_1C085F050(&qword_1EB86EAF0, (void (*)(uint64_t))sub_1C087C81C);
    sub_1BFDED6F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A8758(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C087C788();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087C65C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08FDB3C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C07F9810(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087C81C();
    sub_1C085F050(&qword_1EB86EAF0, (void (*)(uint64_t))sub_1C087C81C);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A88F0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087B9B4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087B888);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FDB3C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F9A44(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087BA48();
    sub_1C085F050(&qword_1EB86EAE0, (void (*)(uint64_t))sub_1C087BA48);
    sub_1BFDED6F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A8A88(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C087B9B4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087B888);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08FDB3C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C07F9A44(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087BA48();
    sub_1C085F050(&qword_1EB86EAE0, (void (*)(uint64_t))sub_1C087BA48);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A8C20(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1 & 1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0877014();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0876EE8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FEF58;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F9C78(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08770A8();
    sub_1C085F050(&qword_1EB86EAD0, (void (*)(uint64_t))sub_1C08770A8);
    sub_1C01EEB9C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A8DBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B1F4C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B1DCC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0404;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07F9EAC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B1FE0();
    sub_1C085F050(&qword_1EA19E2E0, (void (*)(uint64_t))sub_1C08B1FE0);
    sub_1C0202760();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A8F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08755F8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0875478);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FFB78;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FA0E0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C087568C();
    sub_1C085F050(&qword_1EA19D818, (void (*)(uint64_t))sub_1C087568C);
    sub_1BFDF6124();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A90EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08BF000();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08BEED4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08ECA64;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FA314(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08BF094();
    sub_1C085F050(&qword_1EB86EAC0, (void (*)(uint64_t))sub_1C08BF094);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9280(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BF000();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BEED4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ECA64;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FA314(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BF094();
    sub_1C085F050(&qword_1EB86EAC0, (void (*)(uint64_t))sub_1C08BF094);
    type metadata accessor for FormatTextNodeStyle();
    sub_1C085F050(&qword_1EB866970, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9450(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0885FD8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0885E58);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC5C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FA548(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088606C();
    sub_1C085F050(&qword_1EB86EA40, (void (*)(uint64_t))sub_1C088606C);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9628(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0885FD8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0885E58);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC5C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FA548(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088606C();
    sub_1C085F050(&qword_1EB86EA40, (void (*)(uint64_t))sub_1C088606C);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A97C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C41E4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C40B8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EBB9C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FA77C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C4278();
    sub_1C085F050(&qword_1EB86EA30, (void (*)(uint64_t))sub_1C08C4278);
    sub_1BFE9DEBC(0, &qword_1EB879E38, (uint64_t)&type metadata for FormatQueryParameter, MEMORY[0x1E4FBB320]);
    sub_1BFCFEEEC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08A1284();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08A1104);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F44D0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FA9B0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08A1318();
    sub_1C085F050(&qword_1EA19DFB8, (void (*)(uint64_t))sub_1C08A1318);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08676A4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0867524);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0905854;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FABE4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0867738();
    sub_1C085F050(&qword_1EB86EA20, (void (*)(uint64_t))sub_1C0867738);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0869D34();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0869C08);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EC5C0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FAE18(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0869DC8();
    sub_1C085F050(&qword_1EB86EA10, (void (*)(uint64_t))sub_1C0869DC8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9E40(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0869D34();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0869C08);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC5C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FAE18(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0869DC8();
    sub_1C085F050(&qword_1EB86EA10, (void (*)(uint64_t))sub_1C0869DC8);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06A9FD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0869A4C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08698CC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC5C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FB04C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0869AE0();
    sub_1C085F050(&qword_1EA19D498, (void (*)(uint64_t))sub_1C0869AE0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AA16C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0869A4C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08698CC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC5C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FB04C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0869AE0();
    sub_1C085F050(&qword_1EA19D498, (void (*)(uint64_t))sub_1C0869AE0);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AA304(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C086A198(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C086A070();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0869EF0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C090463C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C07FB280(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086A104();
    sub_1C085F050(&qword_1EB86EA00, (void (*)(uint64_t))sub_1C086A104);
    sub_1BFE1AB4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AA4A4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086A070();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0869EF0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C090463C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FB280(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086A104();
    sub_1C085F050(&qword_1EB86EA00, (void (*)(uint64_t))sub_1C086A104);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AA63C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086D67C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086D550);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09027F0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FB4B4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086D710();
    sub_1C085F050(&qword_1EB86E9F0, (void (*)(uint64_t))sub_1C086D710);
    sub_1BFF8F65C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AA7D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086D67C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086D550);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09027F0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FB4B4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086D710();
    sub_1C085F050(&qword_1EB86E9F0, (void (*)(uint64_t))sub_1C086D710);
    sub_1BFD613BC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AA96C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  char v34 = a3 & 1;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  char v13 = a6 & 1;
  char v31 = a6 & 1;
  sub_1C086D67C();
  uint64_t v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086D550);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a8;
  uint64_t v24 = a9;
  uint64_t v25 = sub_1C09027F0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a4, a5, v13);
  sub_1C07FB4B4(a7, a4, a5, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086D710();
    sub_1C085F050(&qword_1EB86E9F0, (void (*)(uint64_t))sub_1C086D710);
    sub_1BFFB2AC8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AAB0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0875F40();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0875E14);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FF8E4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FB6E8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0875FD4();
    sub_1C085F050(&qword_1EB86E9E0, (void (*)(uint64_t))sub_1C0875FD4);
    sub_1C0316B28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AACA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BFB50();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BF9D0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC69C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FB91C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BFBE4();
    sub_1C085F050(&qword_1EA19E680, (void (*)(uint64_t))sub_1C08BFBE4);
    sub_1BFD0E0D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AAE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08BF814();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08BF694);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EC760;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FBB50(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08BF8A8();
    sub_1C085F050(&qword_1EA19E638, (void (*)(uint64_t))sub_1C08BF8A8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AAFD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BF814();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BF694);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC760;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FBB50(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BF8A8();
    sub_1C085F050(&qword_1EA19E638, (void (*)(uint64_t))sub_1C08BF8A8);
    sub_1BFD0E0D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AB168(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BFE38();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BFD0C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC5C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FBD84(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BFECC();
    sub_1C085F050(&qword_1EB86E9D0, (void (*)(uint64_t))sub_1C08BFECC);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AB340(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BFE38();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BFD0C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC5C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FBD84(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BFECC();
    sub_1C085F050(&qword_1EB86E9D0, (void (*)(uint64_t))sub_1C08BFECC);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AB4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B7CD0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B7DF8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EF0A0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FBFB8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B7D64();
    sub_1C085F050(&qword_1EA19E3D0, (void (*)(uint64_t))sub_1C08B7D64);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AB66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B818C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B800C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EEF7C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FC1EC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B8220();
    sub_1C085F050(&qword_1EA19E418, (void (*)(uint64_t))sub_1C08B8220);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AB804(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087C368();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087C23C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FDCCC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FC420(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087C3FC();
    sub_1C085F050(&qword_1EB86E9C0, (void (*)(uint64_t))sub_1C087C3FC);
    sub_1BFDED6F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AB99C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087C368();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087C23C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FDCCC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FC420(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087C3FC();
    sub_1C085F050(&qword_1EB86E9C0, (void (*)(uint64_t))sub_1C087C3FC);
    sub_1BFD92300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ABB34(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C087C368();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087C23C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08FDCCC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C07FC420(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087C3FC();
    sub_1C085F050(&qword_1EB86E9C0, (void (*)(uint64_t))sub_1C087C3FC);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ABCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08752BC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087513C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FFC3C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FC654(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0875350();
    sub_1C085F050(&qword_1EA19D7D0, (void (*)(uint64_t))sub_1C0875350);
    sub_1BFDF6124();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ABE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0870B80();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0870CA8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0901388;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FC888(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0870C14();
    sub_1C085F050(&qword_1EA19D688, (void (*)(uint64_t))sub_1C0870C14);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ABFF8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0870B80();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0870CA8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0901388;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FC888(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0870C14();
    sub_1C085F050(&qword_1EA19D688, (void (*)(uint64_t))sub_1C0870C14);
    sub_1C04C6890();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AC190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086321C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086309C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0907594;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FCABC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08632B0();
    sub_1C085F050(&qword_1EA19D1D8, (void (*)(uint64_t))sub_1C08632B0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AC324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B8CE4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B8B64);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE920;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FCCF0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B8D78();
    sub_1C085F050(&qword_1EA19E4F0, (void (*)(uint64_t))sub_1C08B8D78);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AC4B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  char v33 = a2 & 1;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08A7660();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08A748C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F30CC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FCF24(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08A76F4();
    sub_1C085F050(&qword_1EB86E9A0, (void (*)(uint64_t))sub_1C08A76F4);
    sub_1C08F3190();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AC658(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  __int16 v35 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  char v13 = a7 & 1;
  char v31 = a7 & 1;
  sub_1C08A7660();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08A748C);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  uint64_t v25 = sub_1C08F30CC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a5, a6, v13);
  sub_1C07FCF24(a8, a5, a6, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08A76F4();
    sub_1C085F050(&qword_1EB86E9A0, (void (*)(uint64_t))sub_1C08A76F4);
    sub_1C00AB468();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AC7F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086DBB8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086DA8C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09025EC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FD158(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086DC4C();
    sub_1C085F050(&qword_1EB86E990, (void (*)(uint64_t))sub_1C086DC4C);
    type metadata accessor for FormatTextNodeStyle();
    sub_1C085F050(&qword_1EB866970, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AC9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08BBAC4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08BBBEC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EDCE0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FD38C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08BBB58();
    sub_1C085F050(&qword_1EB86E970, (void (*)(uint64_t))sub_1C08BBB58);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ACB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08BBED8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08BBDAC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EDBA4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FD5C0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08BBF6C();
    sub_1C085F050(&qword_1EB86E980, (void (*)(uint64_t))sub_1C08BBF6C);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ACCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B92B4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B9188);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE768;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FD7F4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B9348();
    sub_1C085F050(&qword_1EB86E960, (void (*)(uint64_t))sub_1C08B9348);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ACE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086618C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0865FD0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C090626C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FDA28(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0866220();
    sub_1C085F050(&qword_1EB86E940, (void (*)(uint64_t))sub_1C0866220);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AD018(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1BFF44C98(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C0876D2C();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0876C00);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08FEF58;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C07FDC5C(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0876DC0();
    sub_1C085F050(&qword_1EB86E930, (void (*)(uint64_t))sub_1C0876DC0);
    sub_1BFD84838();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AD1B8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0876324();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0876150);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FEF58;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FDE90(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08763B8();
    sub_1C085F050(&qword_1EB86E920, (void (*)(uint64_t))sub_1C08763B8);
    sub_1C08F3060();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AD350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0874E30();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0874CB0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FFE5C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FE0C4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0874EC4();
    sub_1C085F050(&qword_1EA19D770, (void (*)(uint64_t))sub_1C0874EC4);
    sub_1BFDF6124();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AD4E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0874E30();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0874CB0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FFE5C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FE0C4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0874EC4();
    sub_1C085F050(&qword_1EA19D770, (void (*)(uint64_t))sub_1C0874EC4);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AD6C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B84C8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B8348);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EEE70;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FE2F8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B855C();
    sub_1C085F050(&qword_1EA19E430, (void (*)(uint64_t))sub_1C08B855C);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AD858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086AB50();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086AC78);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0903B28;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FE52C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086ABE4();
    sub_1C085F050(&qword_1EB86E900, (void (*)(uint64_t))sub_1C086ABE4);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AD9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086AF64();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086AE38);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09039EC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FE760(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086AFF8();
    sub_1C085F050(&qword_1EB86E910, (void (*)(uint64_t))sub_1C086AFF8);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ADB84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0870120();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086FFA0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C090170C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FE994(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08701B4();
    sub_1C085F050(&qword_1EA19D630, (void (*)(uint64_t))sub_1C08701B4);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ADD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0896F5C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0897084);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F6998;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FEBC8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0896FF0();
    sub_1C085F050(&qword_1EB86E8D0, (void (*)(uint64_t))sub_1C0896FF0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06ADEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08973C4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0897244);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F673C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FEDFC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0897458();
    sub_1C085F050(&qword_1EB86E8E0, (void (*)(uint64_t))sub_1C0897458);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AE044(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C086A198(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C0877638();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087750C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08FEF58;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C07FF030(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08776CC();
    sub_1C085F050(&qword_1EB86E8C0, (void (*)(uint64_t))sub_1C08776CC);
    sub_1BFE1AB4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AE1E4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  __int16 v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0875C58();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0875B2C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FF9D8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FF264(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0875CEC();
    sub_1C085F050(&qword_1EB86E8B0, (void (*)(uint64_t))sub_1C0875CEC);
    sub_1BFDC37B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AE380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08C9D84();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C9EAC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EA660;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FF498(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C9E18();
    sub_1C085F050(&qword_1EB86E890, (void (*)(uint64_t))sub_1C08C9E18);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AE514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08CA198();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08CA06C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EA4B0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FF6CC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08CA22C();
    sub_1C085F050(&qword_1EB86E8A0, (void (*)(uint64_t))sub_1C08CA22C);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AE6AC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1 & 1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0863504();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08633D8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C090734C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FF900(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0863598();
    sub_1C085F050(&qword_1EB86E880, (void (*)(uint64_t))sub_1C0863598);
    sub_1C0261ED8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AE848(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0863504();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08633D8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C090734C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FF900(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0863598();
    sub_1C085F050(&qword_1EB86E880, (void (*)(uint64_t))sub_1C0863598);
    type metadata accessor for FormatTextNodeStyle();
    sub_1C085F050(&qword_1EB866970, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AEA18(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1 & 1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0863504();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08633D8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C090734C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C07FF900(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0863598();
    sub_1C085F050(&qword_1EB86E880, (void (*)(uint64_t))sub_1C0863598);
    sub_1C0262094();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AEBB4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  char v11 = a3 & 1;
  char v29 = a3 & 1;
  sub_1C08B0858();
  uint64_t v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  v25[0] = a1;
  v25[1] = a2;
  char v26 = v11;
  uint64_t v16 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v25, v16 + 16, (uint64_t (*)(void))sub_1C08B069C);
  *(void *)(v16 + 40) = v15;
  *(void *)(v16 + 48) = v14;
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v23 = sub_1C08F0FE4;
  uint64_t v24 = v16;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v11);
  sub_1C07FFB34(a4, a1, a2, v11, (uint64_t)sub_1C090A470, (uint64_t)v20);
  if (!v19)
  {
    sub_1C08B08EC();
    sub_1C085F050(&qword_1EB86E870, (void (*)(uint64_t))sub_1C08B08EC);
    sub_1C060AE34();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AED44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  double v32 = a7;
  double v33 = a8;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  char v13 = a3 & 1;
  char v31 = a3 & 1;
  sub_1C08AB8EC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a1;
  v27[1] = a2;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08AB76C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v25 = sub_1C08F1D3C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v13);
  sub_1C07FFD68(a4, a1, a2, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08AB980();
    sub_1C085F050(&qword_1EA19E180, (void (*)(uint64_t))sub_1C08AB980);
    sub_1BFD88EB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AEEDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C08ABA14(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C08AB8EC();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08AB76C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08F1D3C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C07FFD68(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08AB980();
    sub_1C085F050(&qword_1EA19E180, (void (*)(uint64_t))sub_1C08AB980);
    sub_1C04BDCA4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AF07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08AA8C8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08AA6B8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F2594;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C07FFF9C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08AA95C();
    sub_1C085F050(&qword_1EB86E860, (void (*)(uint64_t))sub_1C08AA95C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AF210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08AAC04();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08AAA84);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F23DC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08001D0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08AAC98();
    sub_1C085F050(&qword_1EA19E148, (void (*)(uint64_t))sub_1C08AAC98);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AF3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08A0B88();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08A09CC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F4854;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0800404(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08A0C1C();
    sub_1C085F050(&qword_1EB86E850, (void (*)(uint64_t))sub_1C08A0C1C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AF53C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C088EA3C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088E910);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F91E8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0800638(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088EAD0();
    sub_1C085F050(&qword_1EB86E820, (void (*)(uint64_t))sub_1C088EAD0);
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AF6D4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C088EA3C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088E910);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F91E8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0800638(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088EAD0();
    sub_1C085F050(&qword_1EB86E820, (void (*)(uint64_t))sub_1C088EAD0);
    sub_1BFD0CBD0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AF86C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C00F6034(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C088EDCC();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C088EBF8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08F910C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  uint64_t v19 = v33;
  sub_1C080086C(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v19)
  {
    sub_1C088EE60();
    sub_1C085F050(&qword_1EA19DCC0, (void (*)(uint64_t))sub_1C088EE60);
    sub_1C08F90A0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AFA1C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C088EDCC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088EBF8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F910C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080086C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088EE60();
    sub_1C085F050(&qword_1EA19DCC0, (void (*)(uint64_t))sub_1C088EE60);
    sub_1BFD0CBD0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AFBB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C088277C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0882650);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FCB14;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0800AA0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0882810();
    sub_1C085F050(&qword_1EB86E810, (void (*)(uint64_t))sub_1C0882810);
    sub_1BFE309D0(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
    sub_1BFD77ECC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AFD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C087D614();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087D4E8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FD534;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0800CD4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C087D6A8();
    sub_1C085F050(&qword_1EB86E800, (void (*)(uint64_t))sub_1C087D6A8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06AFF18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  char v35 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  char v13 = a7 & 1;
  char v31 = a7 & 1;
  sub_1C0877920();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08777F4);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  uint64_t v25 = sub_1C08FEF58;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a5, a6, v13);
  sub_1C0800F08(a8, a5, a6, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08779B4();
    sub_1C085F050(&qword_1EB86E7F0, (void (*)(uint64_t))sub_1C08779B4);
    sub_1BFD74370();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B00B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0862BDC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0862AB0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0907914;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080113C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0862C70();
    sub_1C085F050(&qword_1EB86E7E0, (void (*)(uint64_t))sub_1C0862C70);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B0248(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0862BDC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0862AB0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0907914;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080113C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0862C70();
    sub_1C085F050(&qword_1EB86E7E0, (void (*)(uint64_t))sub_1C0862C70);
    sub_1BFF8B470();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B03E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0862BDC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0862AB0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0907914;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080113C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0862C70();
    sub_1C085F050(&qword_1EB86E7E0, (void (*)(uint64_t))sub_1C0862C70);
    sub_1BFD0E0D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B0578(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B6EFC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B7024);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EF424;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0801370(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B6F90();
    sub_1C085F050(&qword_1EA19E3B8, (void (*)(uint64_t))sub_1C08B6F90);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B0710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08611E8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08610BC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0908760;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08015A4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086127C();
    sub_1C085F050(&qword_1EB86E7D0, (void (*)(uint64_t))sub_1C086127C);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B08A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  char v35 = a4 & 1;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  char v13 = a7 & 1;
  char v31 = a7 & 1;
  sub_1C08A7CD8();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08A7B58);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  uint64_t v25 = sub_1C08F2DD0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a5, a6, v13);
  sub_1C08017D8(a8, a5, a6, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08A7D6C();
    sub_1C085F050(&qword_1EA19E0E8, (void (*)(uint64_t))sub_1C08A7D6C);
    sub_1C08E5644();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B0A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086A614();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086A73C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0903FC8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0801A0C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086A6A8();
    sub_1C085F050(&qword_1EB86E7B0, (void (*)(uint64_t))sub_1C086A6A8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B0BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086AA28();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086A8FC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0903D9C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0801C40(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086AABC();
    sub_1C085F050(&qword_1EB86E7C0, (void (*)(uint64_t))sub_1C086AABC);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B0D74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087BD98();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087BC6C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FDE9C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0801E74(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087BE2C();
    sub_1C085F050(&qword_1EB86E790, (void (*)(uint64_t))sub_1C087BE2C);
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B0F0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C0120();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BFFF4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC4CC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08020A8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C01B4();
    sub_1C085F050(&qword_1EB86E770, (void (*)(uint64_t))sub_1C08C01B4);
    sub_1BFD56F34();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B10A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0860F00();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0860DD4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0908824;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08022DC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0860F94();
    sub_1C085F050(&qword_1EB86E760, (void (*)(uint64_t))sub_1C0860F94);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B123C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0883EE0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0883DB4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FC100;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0802510(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0883F74();
    sub_1C085F050(&qword_1EB86E950, (void (*)(uint64_t))sub_1C0883F74);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B13D0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0883EE0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0883DB4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FC100;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0802510(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0883F74();
    sub_1C085F050(&qword_1EB86E950, (void (*)(uint64_t))sub_1C0883F74);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B1564(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0883EE0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0883DB4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FC100;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0802510(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0883F74();
    sub_1C085F050(&qword_1EB86E950, (void (*)(uint64_t))sub_1C0883F74);
    sub_1BFE9DEBC(0, &qword_1EB879E60, (uint64_t)&type metadata for FormatTypeDefinition.Case, MEMORY[0x1E4FBB320]);
    sub_1BFDF9EE0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B1728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E86F4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E881C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0802744(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E8788();
    sub_1C085F050(&qword_1EA1A07E0, (void (*)(uint64_t))sub_1C08E8788);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B18BC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E86F4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E881C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0802744(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E8788();
    sub_1C085F050(&qword_1EA1A07E0, (void (*)(uint64_t))sub_1C08E8788);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B1A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E8238();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E8360);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0802978(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E82CC();
    sub_1C085F050(&qword_1EA1A0798, (void (*)(uint64_t))sub_1C08E82CC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B1BE4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E8238();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E8360);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0802978(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E82CC();
    sub_1C085F050(&qword_1EA1A0798, (void (*)(uint64_t))sub_1C08E82CC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B1D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E7D7C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E7EA4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0802BAC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E7E10();
    sub_1C085F050(&qword_1EA1A0750, (void (*)(uint64_t))sub_1C08E7E10);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B1F0C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E7D7C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E7EA4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0802BAC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E7E10();
    sub_1C085F050(&qword_1EA1A0750, (void (*)(uint64_t))sub_1C08E7E10);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B20A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E78C0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E79E8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0802DE0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E7954();
    sub_1C085F050(&qword_1EB86EA70, (void (*)(uint64_t))sub_1C08E7954);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B2234(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E78C0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E79E8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0802DE0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E7954();
    sub_1C085F050(&qword_1EB86EA70, (void (*)(uint64_t))sub_1C08E7954);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B23C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E7570();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E7698);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0803014(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E7604();
    sub_1C085F050(&qword_1EB86EA50, (void (*)(uint64_t))sub_1C08E7604);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B255C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E7570();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E7698);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0803014(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E7604();
    sub_1C085F050(&qword_1EB86EA50, (void (*)(uint64_t))sub_1C08E7604);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B26F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E7168();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E7290);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0803248(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E71FC();
    sub_1C085F050(&qword_1EB86EA90, (void (*)(uint64_t))sub_1C08E71FC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B2884(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E7168();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E7290);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0803248(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E71FC();
    sub_1C085F050(&qword_1EB86EA90, (void (*)(uint64_t))sub_1C08E71FC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B2A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E6CDC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E6E04);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080347C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E6D70();
    sub_1C085F050(&qword_1EB86EAB0, (void (*)(uint64_t))sub_1C08E6D70);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B2BAC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E6CDC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E6E04);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080347C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E6D70();
    sub_1C085F050(&qword_1EB86EAB0, (void (*)(uint64_t))sub_1C08E6D70);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B2D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E6820();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E6948);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08036B0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E68B4();
    sub_1C085F050(&qword_1EB86EA60, (void (*)(uint64_t))sub_1C08E68B4);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B2ED4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E6820();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E6948);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08036B0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E68B4();
    sub_1C085F050(&qword_1EB86EA60, (void (*)(uint64_t))sub_1C08E68B4);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B3068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E643C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E6564);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08038E4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E64D0();
    sub_1C085F050(&qword_1EA1A0708, (void (*)(uint64_t))sub_1C08E64D0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B31FC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E643C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E6564);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08038E4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E64D0();
    sub_1C085F050(&qword_1EA1A0708, (void (*)(uint64_t))sub_1C08E64D0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B3390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E5F80();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E60A8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0803B18(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E6014();
    sub_1C085F050(&qword_1EB86EA80, (void (*)(uint64_t))sub_1C08E6014);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B3524(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E5F80();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E60A8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0803B18(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E6014();
    sub_1C085F050(&qword_1EB86EA80, (void (*)(uint64_t))sub_1C08E6014);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B36B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08E5B4C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E5C74);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E5E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0803D4C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E5BE0();
    sub_1C085F050(&qword_1EB86EAA0, (void (*)(uint64_t))sub_1C08E5BE0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B384C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E5B4C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E5C74);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E5E48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0803D4C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E5BE0();
    sub_1C085F050(&qword_1EB86EAA0, (void (*)(uint64_t))sub_1C08E5BE0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B39E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0897DB4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0897BF8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F62BC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0803F80(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0897E48();
    sub_1C085F050(&qword_1EB86E730, (void (*)(uint64_t))sub_1C0897E48);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B3B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089809C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0897F70);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F61E0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08041B4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0898130();
    sub_1C085F050(&qword_1EB86E740, (void (*)(uint64_t))sub_1C0898130);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B3D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089809C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0897F70);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F61E0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08041B4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0898130();
    sub_1C085F050(&qword_1EB86E740, (void (*)(uint64_t))sub_1C0898130);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B3EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C088C004();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C088C12C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FA018;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08043E8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C088C098();
    sub_1C085F050(&qword_1EB86E700, (void (*)(uint64_t))sub_1C088C098);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B4034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C088C418();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C088C2EC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F9E80;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080461C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C088C4AC();
    sub_1C085F050(&qword_1EB86E710, (void (*)(uint64_t))sub_1C088C4AC);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B41CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0886650();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08864D0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB338;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0804850(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08866E4();
    sub_1C085F050(&qword_1EA19DBC8, (void (*)(uint64_t))sub_1C08866E4);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B43A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0883BF8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0883ACC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FC268;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0804A84(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0883C8C();
    sub_1C085F050(&qword_1EB86E6F0, (void (*)(uint64_t))sub_1C0883C8C);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B457C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087CAC4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087C944);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F50A8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0804CB8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087CB58();
    sub_1C085F050(&qword_1EA19D968, (void (*)(uint64_t))sub_1C087CB58);
    sub_1BFD6F22C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B4714(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087B6CC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087B5A0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F45DC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0804EEC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087B760();
    sub_1C085F050(&qword_1EB86E6E0, (void (*)(uint64_t))sub_1C087B760);
    sub_1BFD6F22C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B48AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0872A5C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0872B84);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09008B4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0805120(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0872AF0();
    sub_1C085F050(&qword_1EB86E6C0, (void (*)(uint64_t))sub_1C0872AF0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B4A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C087304C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0872F20);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0900778;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0805354(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08730E0();
    sub_1C085F050(&qword_1EB86E6D0, (void (*)(uint64_t))sub_1C08730E0);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B4BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086C074();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086C19C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09030E0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0805588(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086C108();
    sub_1C085F050(&qword_1EB86E6A0, (void (*)(uint64_t))sub_1C086C108);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B4D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086C488();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086C35C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0902FBC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08057BC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086C51C();
    sub_1C085F050(&qword_1EB86E6B0, (void (*)(uint64_t))sub_1C086C51C);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B4F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086EC1C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086ED44);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0901CA0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08059F0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086ECB0();
    sub_1C085F050(&qword_1EB86E680, (void (*)(uint64_t))sub_1C086ECB0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B5098(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086EC1C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086ED44);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0901CA0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08059F0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086ECB0();
    sub_1C085F050(&qword_1EB86E680, (void (*)(uint64_t))sub_1C086ECB0);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B5230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B8FCC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B8EA0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE82C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0805C24(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B9060();
    sub_1C085F050(&qword_1EB86E670, (void (*)(uint64_t))sub_1C08B9060);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B53C4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A799C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A7870);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F2EF4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0805E58(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A7A30();
    sub_1C085F050(&qword_1EB86E660, (void (*)(uint64_t))sub_1C08A7A30);
    sub_1BFD61368();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B555C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A799C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A7870);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F2EF4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0805E58(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A7A30();
    sub_1C085F050(&qword_1EB86E660, (void (*)(uint64_t))sub_1C08A7A30);
    sub_1BFD613BC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B56F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C085F0EC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C085EF24);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09094F4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080608C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C085F180();
    sub_1C085F050(&qword_1EB86E640, (void (*)(uint64_t))sub_1C085F180);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B58CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C085F0EC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C085EF24);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09094F4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080608C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C085F180();
    sub_1C085F050(&qword_1EB86E640, (void (*)(uint64_t))sub_1C085F180);
    sub_1C00A0614();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B5A64(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1 & 1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08976AC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0897580);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F6624;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08062C0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0897740();
    sub_1C085F050(&qword_1EB86E630, (void (*)(uint64_t))sub_1C0897740);
    sub_1C08F663C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B5C00(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  double v32 = a7;
  double v33 = a8;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  char v13 = a3 & 1;
  char v31 = a3 & 1;
  sub_1C088962C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a1;
  v27[1] = a2;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0889500);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v25 = sub_1C08FAFE0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v13);
  sub_1C08064F4(a4, a1, a2, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08896C0();
    sub_1C085F050(&qword_1EB86E620, (void (*)(uint64_t))sub_1C08896C0);
    sub_1BFD88EB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B5D98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087CE00();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087CC80);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F45DC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080695C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087CE94();
    sub_1C085F050(&qword_1EA19D9B0, (void (*)(uint64_t))sub_1C087CE94);
    sub_1BFD6F22C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B5F30(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  char v33 = a2 & 1;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08666F8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0866820);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0905F90;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0806B90(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086678C();
    sub_1C085F050(&qword_1EB86E610, (void (*)(uint64_t))sub_1C086678C);
    sub_1BFF51EB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B60D0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1 & 1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08AFD6C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08AFC40);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F152C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0806DC4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08AFE00();
    sub_1C085F050(&qword_1EB86E600, (void (*)(uint64_t))sub_1C08AFE00);
    sub_1BFCF54CC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B626C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08AFD6C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08AFC40);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F152C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0806DC4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08AFE00();
    sub_1C085F050(&qword_1EB86E600, (void (*)(uint64_t))sub_1C08AFE00);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B6400(long long *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v12 = a1[1];
  long long v32 = *a1;
  v33[0] = v12;
  *(_OWORD *)((char *)v33 + 10) = *(long long *)((char *)a1 + 26);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C08A7000();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08A7128);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08F31FC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C0806FF8(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08A7094();
    sub_1C085F050(&qword_1EB86E5F0, (void (*)(uint64_t))sub_1C08A7094);
    sub_1C08F3364();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B65A4(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v25 = a1;
  v24[2] = a2;
  v24[3] = a3;
  sub_1BFEFF7D8();
  char v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  v24[0] = a2;
  v24[1] = a3;
  uint64_t v16 = swift_allocObject();
  sub_1BFEFF858((uint64_t)v24, v16 + 16);
  *(void *)(v16 + 32) = v14;
  *(void *)(v16 + 40) = v15;
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  uint64_t v22 = sub_1C08E4F54;
  uint64_t v23 = v16;
  swift_retain();
  sub_1BFEFF7C4(a2, a3);
  sub_1BFD54390(a4, a2, a3, (uint64_t)sub_1C090A470, (uint64_t)v19);
  if (!v18)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1C090293C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B6724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0867218();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08670EC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  char v25 = sub_1C0905CA8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080722C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08672AC();
    sub_1C085F050(&qword_1EB86E5E0, (void (*)(uint64_t))sub_1C08672AC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B68B8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0867218();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08670EC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0905CA8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080722C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08672AC();
    sub_1C085F050(&qword_1EB86E5E0, (void (*)(uint64_t))sub_1C08672AC);
    sub_1BFF08118();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B6A50(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1 & 1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0867218();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08670EC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0905CA8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080722C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08672AC();
    sub_1C085F050(&qword_1EB86E5E0, (void (*)(uint64_t))sub_1C08672AC);
    sub_1BFF0816C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B6BEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0897994();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0897868);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F6428;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807460(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0897A28();
    sub_1C085F050(&qword_1EB86E5D0, (void (*)(uint64_t))sub_1C0897A28);
    sub_1BFD74764();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B6D84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08966FC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0896824);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F6D74;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807694(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0896790();
    sub_1C085F050(&qword_1EB86E5C0, (void (*)(uint64_t))sub_1C0896790);
    sub_1C08F6EDC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B6F1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08966FC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0896824);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F6D74;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807694(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0896790();
    sub_1C085F050(&qword_1EB86E5C0, (void (*)(uint64_t))sub_1C0896790);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B70B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0894100();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0894228);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F7AE0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08078C8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0894194();
    sub_1C085F050(&qword_1EB86E5B0, (void (*)(uint64_t))sub_1C0894194);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B7248(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0885678();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088554C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB7D8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807AFC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088570C();
    sub_1C085F050(&qword_1EB86E590, (void (*)(uint64_t))sub_1C088570C);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B7420(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C937C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C94A4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EA9E8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807D30(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C9410();
    sub_1C085F050(&qword_1EB86E580, (void (*)(uint64_t))sub_1C08C9410);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B75B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C937C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C94A4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EA9E8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807D30(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C9410();
    sub_1C085F050(&qword_1EB86E580, (void (*)(uint64_t))sub_1C08C9410);
    sub_1C006FA84();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B7750(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C937C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C94A4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EA9E8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807D30(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C9410();
    sub_1C085F050(&qword_1EB86E580, (void (*)(uint64_t))sub_1C08C9410);
    sub_1BFF8F65C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B78E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  char v35 = a4 & 1;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  char v13 = a7 & 1;
  char v31 = a7 & 1;
  sub_1C08C937C();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C94A4);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  uint64_t v25 = sub_1C08EA9E8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a5, a6, v13);
  sub_1C0807D30(a8, a5, a6, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C9410();
    sub_1C085F050(&qword_1EB86E580, (void (*)(uint64_t))sub_1C08C9410);
    sub_1C037280C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B7A88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0863E28();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0863CA8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0906FB0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0807F64(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0863EBC();
    sub_1C085F050(&qword_1EB86E570, (void (*)(uint64_t))sub_1C0863EBC);
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B7C20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0868734();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0868560);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0904FA0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0808198(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08687C8();
    sub_1C085F050(&qword_1EB8701C8, (void (*)(uint64_t))sub_1C08687C8);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B7DF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C086885C(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C0868734();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0868560);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C0904FA0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  uint64_t v19 = v33;
  sub_1C0808198(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v19)
  {
    sub_1C08687C8();
    sub_1C085F050(&qword_1EB8701C8, (void (*)(uint64_t))sub_1C08687C8);
    sub_1C0904FB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B7FA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08AA068();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08AA190);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F2874;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08083CC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08AA0FC();
    sub_1C085F050(&qword_1EB86E560, (void (*)(uint64_t))sub_1C08AA0FC);
    sub_1C08F293C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8140(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A2314();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A20EC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F3E08;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0808600(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A23A8();
    sub_1C085F050(&qword_1EA19E068, (void (*)(uint64_t))sub_1C08A23A8);
    sub_1C08F3F20();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B82D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C088F15C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088EFDC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F8F34;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0808834(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088F1F0();
    sub_1C085F050(&qword_1EB86E550, (void (*)(uint64_t))sub_1C088F1F0);
    sub_1BFF8F65C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0885C9C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0885B1C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FB5E4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0808A68(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0885D30();
    sub_1C085F050(&qword_1EB86E540, (void (*)(uint64_t))sub_1C0885D30);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8604(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  char v35 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  char v13 = a7 & 1;
  char v31 = a7 & 1;
  sub_1C0885C9C();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0885B1C);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  uint64_t v25 = sub_1C08FB5E4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a5, a6, v13);
  sub_1C0808A68(a8, a5, a6, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0885D30();
    sub_1C085F050(&qword_1EB86E540, (void (*)(uint64_t))sub_1C0885D30);
    sub_1C033D874();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B87A0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0885960();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0885834);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB6C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0808C9C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08859F4();
    sub_1C085F050(&qword_1EB86E530, (void (*)(uint64_t))sub_1C08859F4);
    sub_1BFDCC42C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8938(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0883580();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0883454);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F111C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0808ED0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0883614();
    sub_1C085F050(&qword_1EB86E510, (void (*)(uint64_t))sub_1C0883614);
    sub_1BFF8B5AC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086A3FC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086A2D0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0904480;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0809104(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086A490();
    sub_1C085F050(&qword_1EB86E500, (void (*)(uint64_t))sub_1C086A490);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086451C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08643F0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE768;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0809338(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08645B0();
    sub_1C085F050(&qword_1EB86E4E0, (void (*)(uint64_t))sub_1C08645B0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0879478();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087934C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FED00;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080956C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C087950C();
    sub_1C085F050(&qword_1EB86E4B0, (void (*)(uint64_t))sub_1C087950C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B8F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08C8CC0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C8DE8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EA660;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08097A0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C8D54();
    sub_1C085F050(&qword_1EA19E780, (void (*)(uint64_t))sub_1C08C8D54);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B9124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08C917C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C8FFC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EA4B0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08099D4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C9210();
    sub_1C085F050(&qword_1EA19E7C8, (void (*)(uint64_t))sub_1C08C9210);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B92BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C3EFC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C3DD0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EBC60;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0809C08(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C3F90();
    sub_1C085F050(&qword_1EB86E490, (void (*)(uint64_t))sub_1C08C3F90);
    sub_1BFE9DEBC(0, &qword_1EB879E60, (uint64_t)&type metadata for FormatTypeDefinition.Case, MEMORY[0x1E4FBB320]);
    sub_1BFDF9EE0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B9480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08C3C14();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C3AE8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EBD24;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0809E3C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C3CA8();
    sub_1C085F050(&qword_1EB86E480, (void (*)(uint64_t))sub_1C08C3CA8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B9614(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  char v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08620B0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0861EDC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0907DAC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080A070(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0862144();
    sub_1C085F050(&qword_1EB86E470, (void (*)(uint64_t))sub_1C0862144);
    sub_1C0907E70();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B97B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BC9F0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BCB18);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ED864;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080A2A4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BCA84();
    sub_1C085F050(&qword_1EB86E460, (void (*)(uint64_t))sub_1C08BCA84);
    sub_1BFE40874();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B9948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B1258();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B112C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F0914;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080A4D8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B12EC();
    sub_1C085F050(&qword_1EB86E450, (void (*)(uint64_t))sub_1C08B12EC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B9ADC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B1258();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B112C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0914;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080A4D8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B12EC();
    sub_1C085F050(&qword_1EB86E450, (void (*)(uint64_t))sub_1C08B12EC);
    sub_1BFE309D0(0, &qword_1EB880D08, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, MEMORY[0x1E4FBB320]);
    sub_1BFD77DFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B9CAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B1258();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B112C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0914;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080A4D8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B12EC();
    sub_1C085F050(&qword_1EB86E450, (void (*)(uint64_t))sub_1C08B12EC);
    sub_1BFE309D0(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
    sub_1BFD77ECC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06B9E7C(long long *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v12 = a1[1];
  long long v32 = *a1;
  long long v33 = v12;
  long long v34 = a1[2];
  char v35 = *((unsigned char *)a1 + 48);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C08AB5B0();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08AB348);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08F1E18;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C080A70C(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08AB644();
    sub_1C085F050(&qword_1EA19E168, (void (*)(uint64_t))sub_1C08AB644);
    sub_1C08F1FB8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BA028(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08AB5B0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08AB348);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F1E18;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080A70C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08AB644();
    sub_1C085F050(&qword_1EA19E168, (void (*)(uint64_t))sub_1C08AB644);
    sub_1BFE9DEBC(0, &qword_1EB879D10, (uint64_t)&type metadata for FormatColor, MEMORY[0x1E4FBB320]);
    sub_1BFDB3838();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08637EC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08636C0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09071B0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080A940(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0863880();
    sub_1C085F050(&qword_1EB86E440, (void (*)(uint64_t))sub_1C0863880);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BA380(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08637EC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08636C0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09071B0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080A940(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0863880();
    sub_1C085F050(&qword_1EB86E440, (void (*)(uint64_t))sub_1C0863880);
    sub_1BFFDD0EC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BA518(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A503C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A4F10);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F3748;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080AB74(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A50D0();
    sub_1C085F050(&qword_1EB86E430, (void (*)(uint64_t))sub_1C08A50D0);
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BA6B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A503C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A4F10);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F3748;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080AB74(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A50D0();
    sub_1C085F050(&qword_1EB86E430, (void (*)(uint64_t))sub_1C08A50D0);
    sub_1BFE9DEBC(0, &qword_1EB879E28, (uint64_t)&type metadata for FormatColorProcessor, MEMORY[0x1E4FBB320]);
    sub_1BFDF1D10();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BA874(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0898B38();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0898964);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F5D68;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080ADA8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0898BCC();
    sub_1C085F050(&qword_1EA19DDC8, (void (*)(uint64_t))sub_1C0898BCC);
    sub_1C08F5BF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BAA0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0862DB4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0862EDC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0907688;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080AFDC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0862E48();
    sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BABA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0862DB4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0862EDC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0907688;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080AFDC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0862E48();
    sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
    sub_1C0072EDC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BAD3C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0862DB4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0862EDC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0907688;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080AFDC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0862E48();
    sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
    sub_1C0077150();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BAED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0890AF0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0890C18);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F846C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080B210(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0890B84();
    sub_1C085F050(&qword_1EB86E3F0, (void (*)(uint64_t))sub_1C0890B84);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BB068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0890F8C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0890E60);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F81F0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080B444(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0891020();
    sub_1C085F050(&qword_1EB86E400, (void (*)(uint64_t))sub_1C0891020);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BB200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08659AC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0865AD4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0906524;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080B678(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0865A40();
    sub_1C085F050(&qword_1EB86E3E0, (void (*)(uint64_t))sub_1C0865A40);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BB394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0865E14();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0865C94);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09063A4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080B8AC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0865EA8();
    sub_1C085F050(&qword_1EA19D288, (void (*)(uint64_t))sub_1C0865EA8);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BB52C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C0889968();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08897E8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08FAED4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C080BAE0(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08899FC();
    sub_1C085F050(&qword_1EA19DC10, (void (*)(uint64_t))sub_1C08899FC);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BB6C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0885390();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0885210);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB8E4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080BD14(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0885424();
    sub_1C085F050(&qword_1EA19DB38, (void (*)(uint64_t))sub_1C0885424);
    sub_1BFEFF3E8(0, &qword_1EB874A80, (uint64_t (*)(void))sub_1C0082908, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1C008231C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BB89C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08665D0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08664A4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0906130;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080BF48(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0866664();
    sub_1C085F050(&qword_1EB86E3C0, (void (*)(uint64_t))sub_1C0866664);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BBA74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08665D0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08664A4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0906130;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080BF48(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0866664();
    sub_1C085F050(&qword_1EB86E3C0, (void (*)(uint64_t))sub_1C0866664);
    sub_1C0316B28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BBC0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08650EC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0865214);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09069EC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080C17C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0865180();
    sub_1C085F050(&qword_1EA19D230, (void (*)(uint64_t))sub_1C0865180);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BBDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08650EC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0865214);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09069EC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080C17C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0865180();
    sub_1C085F050(&qword_1EA19D230, (void (*)(uint64_t))sub_1C0865180);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BBF34(long long *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v12 = a1[1];
  long long v32 = *a1;
  long long v33 = v12;
  uint64_t v34 = *((void *)a1 + 4);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C08650EC();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0865214);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C09069EC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C080C17C(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0865180();
    sub_1C085F050(&qword_1EA19D230, (void (*)(uint64_t))sub_1C0865180);
    sub_1BFC3A24C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BC0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08679E0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0867860);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0905748;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080C3B0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0867A74();
    sub_1C085F050(&qword_1EA19D320, (void (*)(uint64_t))sub_1C0867A74);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BC26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08CB8D8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08CBA00);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E9FE0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080C5E4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08CB96C();
    sub_1C085F050(&qword_1EB86E390, (void (*)(uint64_t))sub_1C08CB96C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BC400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08CBCEC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08CBBC0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08E9E48;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080C818(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08CBD80();
    sub_1C085F050(&qword_1EB86E3A0, (void (*)(uint64_t))sub_1C08CBD80);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BC598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08C3500();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C3628);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EC028;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080CA4C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C3594();
    sub_1C085F050(&qword_1EB86E370, (void (*)(uint64_t))sub_1C08C3594);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BC72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08C3914();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C37E8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EBE30;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080CC80(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C39A8();
    sub_1C085F050(&qword_1EB86E380, (void (*)(uint64_t))sub_1C08C39A8);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BC8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086D0AC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086CE60);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0902AD8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080CEB4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086D140();
    sub_1C085F050(&qword_1EB86E360, (void (*)(uint64_t))sub_1C086D140);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BCA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B9FE4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08BA10C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE490;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080D0E8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08BA078();
    sub_1C085F050(&qword_1EB86E350, (void (*)(uint64_t))sub_1C08BA078);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BCBEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B9FE4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BA10C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EE490;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080D0E8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BA078();
    sub_1C085F050(&qword_1EB86E350, (void (*)(uint64_t))sub_1C08BA078);
    sub_1BFE9DEBC(0, &qword_1EB879CA0, (uint64_t)&type metadata for FormatStateViewNodeState, MEMORY[0x1E4FBB320]);
    sub_1C08EE4D4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BCDB0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B4FB8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B4D90);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EFBBC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080D31C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B504C();
    sub_1C085F050(&qword_1EB86E340, (void (*)(uint64_t))sub_1C08B504C);
    sub_1C08EFC68();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BCF48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A29E0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A28B4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F3B48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080D550(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A2A74();
    sub_1C085F050(&qword_1EB86E330, (void (*)(uint64_t))sub_1C08A2A74);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BD120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089EFA0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C089EDE4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F4C98;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080D784(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C089F034();
    sub_1C085F050(&qword_1EB86E320, (void (*)(uint64_t))sub_1C089F034);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BD2B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C089E7F0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C089E6C4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F50A8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080D9B8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C089E884();
    sub_1C085F050(&qword_1EB86E310, (void (*)(uint64_t))sub_1C089E884);
    sub_1BFE40874();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BD44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089D1B4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C089D2DC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F54D4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080DBEC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C089D248();
    sub_1C085F050(&qword_1EA19DE80, (void (*)(uint64_t))sub_1C089D248);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BD5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089D670();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C089D4F0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F5368;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080DE20(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C089D704();
    sub_1C085F050(&qword_1EA19DEC8, (void (*)(uint64_t))sub_1C089D704);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BD778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0894E5C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0894F84);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F7510;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080E054(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0894EF0();
    sub_1C085F050(&qword_1EB86E2F0, (void (*)(uint64_t))sub_1C0894EF0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BD90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08952C4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0895144);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F72D0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080E288(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0895358();
    sub_1C085F050(&qword_1EB86E300, (void (*)(uint64_t))sub_1C0895358);
    sub_1BFE79808();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BDAA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087D0E8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087CFBC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FD908;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080E4BC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087D17C();
    sub_1C085F050(&qword_1EB86E2D0, (void (*)(uint64_t))sub_1C087D17C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BDC38(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  char v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C087D0E8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087CFBC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FD908;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080E4BC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C087D17C();
    sub_1C085F050(&qword_1EB86E2D0, (void (*)(uint64_t))sub_1C087D17C);
    sub_1BFE28654();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BDDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0879D8C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0879C0C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE768;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080E6F0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0879E20();
    sub_1C085F050(&qword_1EA19D830, (void (*)(uint64_t))sub_1C0879E20);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BDF68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0860018();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C085FEEC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F45DC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080E924(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08600AC();
    sub_1C085F050(&qword_1EB86E2B0, (void (*)(uint64_t))sub_1C08600AC);
    sub_1BFE40874();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BE100(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  char v11 = a3 & 1;
  char v29 = a3 & 1;
  sub_1C0862390();
  uint64_t v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  v25[0] = a1;
  v25[1] = a2;
  char v26 = v11;
  uint64_t v16 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v25, v16 + 16, (uint64_t (*)(void))sub_1C08624B8);
  *(void *)(v16 + 40) = v15;
  *(void *)(v16 + 48) = v14;
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v23 = sub_1C0907AC0;
  uint64_t v24 = v16;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v11);
  sub_1C080EB58(a4, a1, a2, v11, (uint64_t)sub_1C090A470, (uint64_t)v20);
  if (!v19)
  {
    sub_1C0862424();
    sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
    sub_1BFDBFCA8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BE290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0862390();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08624B8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0907AC0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080EB58(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0862424();
    sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BE424(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0862390();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08624B8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0907AC0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080EB58(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0862424();
    sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BE5BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08CC8A8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08CC9D0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E97D8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080ED8C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08CC93C();
    sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
    sub_1BFDB1740();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BE754(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08CC8A8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08CC9D0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E97D8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080ED8C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08CC93C();
    sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BE8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08C5FD0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C60F8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EB63C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C080EFC0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C6064();
    sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BEA80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C07F4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C0674);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08C0934;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080F1F4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C0888();
    sub_1C085F050(&qword_1EA19E710, (void (*)(uint64_t))sub_1C08C0888);
    sub_1BFF8B470();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BEC18(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BD908();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BD788);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ED2A8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080F428(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BD99C();
    sub_1C085F050(&qword_1EA19E590, (void (*)(uint64_t))sub_1C08BD99C);
    sub_1BFDCC42C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BEDB0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BDC44();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BDAC4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ED19C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080F65C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BDCD8();
    sub_1C085F050(&qword_1EA19E5D0, (void (*)(uint64_t))sub_1C08BDCD8);
    sub_1BFDD8BF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BEF48(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BD2E4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BD164);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ED4F0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080F890(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BD378();
    sub_1C085F050(&qword_1EB86E250, (void (*)(uint64_t))sub_1C08BD378);
    sub_1BFDD8C44();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BF0E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BD5CC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BD4A0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ED3CC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080FAC4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BD660();
    sub_1C085F050(&qword_1EB86E240, (void (*)(uint64_t))sub_1C08BD660);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BF2B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BCFA8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BCE28);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ED5FC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080FCF8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BD03C();
    sub_1C085F050(&qword_1EA19E548, (void (*)(uint64_t))sub_1C08BD03C);
    sub_1BFE9A444();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BF450(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086CCA4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086CB24);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0902C10;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C080FF2C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086CD38();
    sub_1C085F050(&qword_1EA19D580, (void (*)(uint64_t))sub_1C086CD38);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BFDD8B60();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BF628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B0CD0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B0ABC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F0B6C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0810160(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B0D64();
    sub_1C085F050(&qword_1EA19E220, (void (*)(uint64_t))sub_1C08B0D64);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BF7BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B0CD0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B0ABC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0B6C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0810160(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B0D64();
    sub_1C085F050(&qword_1EA19E220, (void (*)(uint64_t))sub_1C08B0D64);
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BF954(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1 & 1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B0CD0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B0ABC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0B6C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0810160(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B0D64();
    sub_1C085F050(&qword_1EA19E220, (void (*)(uint64_t))sub_1C08B0D64);
    sub_1C042EFEC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BFAF0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C08B0CD0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B0ABC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08F0B6C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C0810160(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B0D64();
    sub_1C085F050(&qword_1EA19E220, (void (*)(uint64_t))sub_1C08B0D64);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BFC84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C08B0DF8(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C08B0CD0();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B0ABC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08F0B6C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C0810160(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B0D64();
    sub_1C085F050(&qword_1EA19E220, (void (*)(uint64_t))sub_1C08B0D64);
    sub_1C08F0CF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BFE24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B0CD0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B0ABC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F0B6C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0810160(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B0D64();
    sub_1C085F050(&qword_1EA19E220, (void (*)(uint64_t))sub_1C08B0D64);
    sub_1BFE9DEBC(0, &qword_1EA19E200, (uint64_t)&type metadata for FormatShineBlend, MEMORY[0x1E4FBB320]);
    sub_1C08F0C44();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06BFFE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C08B0CD0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B0ABC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08F0B6C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C0810160(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B0D64();
    sub_1C085F050(&qword_1EA19E220, (void (*)(uint64_t))sub_1C08B0D64);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C0180(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A0F48();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A0E1C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F45DC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0810554(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A0FDC();
    sub_1C085F050(&qword_1EB86E230, (void (*)(uint64_t))sub_1C08A0FDC);
    sub_1BFE40874();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C0318(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086932C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0869200);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0904A3C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0810788(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08693C0();
    sub_1C085F050(&qword_1EB86E220, (void (*)(uint64_t))sub_1C08693C0);
    sub_1BFE9DEBC(0, &qword_1EB879ED0, (uint64_t)&type metadata for FormatLocalizationString, MEMORY[0x1E4FBB320]);
    sub_1BFD27824();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C04DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C088E2F8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C088E420);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EB63C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08109BC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C088E38C();
    sub_1C085F050(&qword_1EB86E210, (void (*)(uint64_t))sub_1C088E38C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C0670(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0882158();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088202C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FCCE4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0810BF0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08821EC();
    sub_1C085F050(&qword_1EB86E1E0, (void (*)(uint64_t))sub_1C08821EC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C0804(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  char v35 = a4 & 1;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  char v13 = a7 & 1;
  char v31 = a7 & 1;
  sub_1C0863AEC();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08639C0);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  uint64_t v25 = sub_1C0907074;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a5, a6, v13);
  sub_1C0810E24(a8, a5, a6, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0863B80();
    sub_1C085F050(&qword_1EB86E1C0, (void (*)(uint64_t))sub_1C0863B80);
    sub_1BFDEB98C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C09A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B4588();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B46B0);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EFEF4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0811058(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B461C();
    sub_1C085F050(&qword_1EB86E1B0, (void (*)(uint64_t))sub_1C08B461C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C0B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08A19CC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08A177C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F4278;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08116F4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08A1A60();
    sub_1C085F050(&qword_1EA19E028, (void (*)(uint64_t))sub_1C08A1A60);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C0CCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A19CC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A177C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F4278;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08116F4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A1A60();
    sub_1C085F050(&qword_1EA19E028, (void (*)(uint64_t))sub_1C08A1A60);
    sub_1BFE309D0(0, &qword_1EA19E008, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, MEMORY[0x1E4FBB320]);
    sub_1C08F4290();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C0E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086D394();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086D268);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09029B4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0811928(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086D428();
    sub_1C085F050(&qword_1EB86E170, (void (*)(uint64_t))sub_1C086D428);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1030(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BC534();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BC65C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08ED9EC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0811D90(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BC5C8();
    sub_1C085F050(&qword_1EB86E150, (void (*)(uint64_t))sub_1C08BC5C8);
    sub_1BFE309D0(0, &qword_1EB88FFF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, MEMORY[0x1E4FBB320]);
    sub_1BFE646F0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1200(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BA734();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BA608);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EE19C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0811FC4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BA7C8();
    sub_1C085F050(&qword_1EB86E140, (void (*)(uint64_t))sub_1C08BA7C8);
    sub_1BFF8F65C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1398(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08BA734();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08BA608);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EE19C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0811FC4(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08BA7C8();
    sub_1C085F050(&qword_1EB86E140, (void (*)(uint64_t))sub_1C08BA7C8);
    type metadata accessor for FormatImageNodeStyle();
    sub_1C085F050(&qword_1EB866A90, (void (*)(uint64_t))type metadata accessor for FormatImageNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1568(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C08690BC(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C0868F94();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0868D6C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C0904B3C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  uint64_t v19 = v33;
  sub_1C08121F8(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v19)
  {
    sub_1C0869028();
    sub_1C085F050(&qword_1EA19D400, (void (*)(uint64_t))sub_1C0869028);
    sub_1C0904C6C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1718(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  char v33 = a2 & 1;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08AE4BC();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08AE5E4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F19AC;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C081242C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08AE550();
    sub_1C085F050(&qword_1EB86E130, (void (*)(uint64_t))sub_1C08AE550);
    sub_1C004263C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C18B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0865848();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08656C8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0865988;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0812660(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08658DC();
    sub_1C085F050(&qword_1EB86E120, (void (*)(uint64_t))sub_1C08658DC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1A4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, float a7)
{
  float v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C08A26F8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A25CC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08F3C0C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C0812894(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A278C();
    sub_1C085F050(&qword_1EB86E110, (void (*)(uint64_t))sub_1C08A278C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089F288();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C089F15C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F4BA4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0812AC8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C089F31C();
    sub_1C085F050(&qword_1EB86E100, (void (*)(uint64_t))sub_1C089F31C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1D74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C0883910();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08837E4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08FC268;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C0812CFC(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08839A4();
    sub_1C085F050(&qword_1EB86E0E0, (void (*)(uint64_t))sub_1C08839A4);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C1F0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0883040();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0882F14);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FC5F8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0812F30(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08830D4();
    sub_1C085F050(&qword_1EB86E0D0, (void (*)(uint64_t))sub_1C08830D4);
    sub_1BFD3C1C8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C20A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  char v13 = a6 & 1;
  char v31 = a6 & 1;
  sub_1C086FC64();
  uint64_t v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086FD8C);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a8;
  uint64_t v24 = a9;
  uint64_t v25 = sub_1C09017E8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a4, a5, v13);
  sub_1C0813164(a7, a4, a5, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086FCF8();
    sub_1C085F050(&qword_1EB86E0C0, (void (*)(uint64_t))sub_1C086FCF8);
    sub_1C0901938();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C2240(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086FC64();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086FD8C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09017E8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0813164(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086FCF8();
    sub_1C085F050(&qword_1EB86E0C0, (void (*)(uint64_t))sub_1C086FCF8);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C23D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0868B5C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0868A30);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0904D68;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0813398(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0868BF0();
    sub_1C085F050(&qword_1EA19D3A0, (void (*)(uint64_t))sub_1C0868BF0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C256C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08602E4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086040C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0908B70;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08135CC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0860378();
    sub_1C085F050(&qword_1EB86E0B0, (void (*)(uint64_t))sub_1C0860378);
    sub_1BFDD50D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C2704(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0874AF4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087488C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FFF68;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0813800(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0874B88();
    sub_1C085F050(&qword_1EB86E0A0, (void (*)(uint64_t))sub_1C0874B88);
    sub_1BFE9DEBC(0, &qword_1EB86B178, (uint64_t)&type metadata for FormatBezierPathComponent, MEMORY[0x1E4FBB320]);
    sub_1C08FFF80();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C28C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0873388();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0873208);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09006B4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0813A34(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087341C();
    sub_1C085F050(&qword_1EB86E090, (void (*)(uint64_t))sub_1C087341C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C2A5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C7738();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C7860);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EB410;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0813C68(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C77CC();
    sub_1C085F050(&qword_1EA19E730, (void (*)(uint64_t))sub_1C08C77CC);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C2BF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C7738();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C7860);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EB410;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0813C68(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C77CC();
    sub_1C085F050(&qword_1EA19E730, (void (*)(uint64_t))sub_1C08C77CC);
    sub_1C0073998();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C2D8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0861448();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0861570);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09055C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0813E9C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08614DC();
    sub_1C085F050(&qword_1EB86ED50, (void (*)(uint64_t))sub_1C08614DC);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C2F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B5744();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B55C4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EF668;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08140D0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B57D8();
    sub_1C085F050(&qword_1EA19E3A0, (void (*)(uint64_t))sub_1C08B57D8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C30B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08B5744();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08B55C4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EF668;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08140D0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08B57D8();
    sub_1C085F050(&qword_1EA19E3A0, (void (*)(uint64_t))sub_1C08B57D8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C324C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C08AB18C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08AB00C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08F2024;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C0814304(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08AB220();
    sub_1C085F050(&qword_1EB86ED20, (void (*)(uint64_t))sub_1C08AB220);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C33E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0909D5C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0909AA4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0909E9C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0814538(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0909DF0();
    sub_1C085F050(&qword_1EA1A0F88, (void (*)(uint64_t))sub_1C0909DF0);
    sub_1BFE9DEBC(0, &qword_1EB879DA8, (uint64_t)&type metadata for FormatMenuItem, MEMORY[0x1E4FBB320]);
    sub_1BFCE5874();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C35A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C088F664();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088F78C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F8D20;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C081476C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088F6F8();
    sub_1C085F050(&qword_1EB86ED10, (void (*)(uint64_t))sub_1C088F6F8);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C3740(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C088F664();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088F78C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F8D20;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C081476C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C088F6F8();
    sub_1C085F050(&qword_1EB86ED10, (void (*)(uint64_t))sub_1C088F6F8);
    sub_1BFF8F65C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C38D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0867C70();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0867D98);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09055C0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08149A0(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0867D04();
    sub_1C085F050(&qword_1EB86ECF0, (void (*)(uint64_t))sub_1C0867D04);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C3A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08798D0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08799F8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FEB78;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0814BD4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0879964();
    sub_1C085F050(&qword_1EB86ECE0, (void (*)(uint64_t))sub_1C0879964);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C3C04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08CB170();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08CB298);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EA29C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0814E08(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08CB204();
    sub_1C085F050(&qword_1EB86ECD0, (void (*)(uint64_t))sub_1C08CB204);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C3D9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0868278();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08683A0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09050F4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C081503C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086830C();
    sub_1C085F050(&qword_1EB86ECB0, (void (*)(uint64_t))sub_1C086830C);
    sub_1BFF8B558();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C3F34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0868278();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08683A0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09050F4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C081503C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086830C();
    sub_1C085F050(&qword_1EB86ECB0, (void (*)(uint64_t))sub_1C086830C);
    sub_1BFF8B470();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C40CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08B3980();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08B3AA8);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F027C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0815270(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08B3A14();
    sub_1C085F050(&qword_1EB86ECA0, (void (*)(uint64_t))sub_1C08B3A14);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C4260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089F5C4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C089F444);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE768;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08154A4(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C089F658();
    sub_1C085F050(&qword_1EB86EC90, (void (*)(uint64_t))sub_1C089F658);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C43F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C089BC70();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C089BD98);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F5AAC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08156D8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C089BD04();
    sub_1C085F050(&qword_1EA19DE08, (void (*)(uint64_t))sub_1C089BD04);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C458C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C089BC70();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C089BD98);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F5AAC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C08156D8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C089BD04();
    sub_1C085F050(&qword_1EA19DE08, (void (*)(uint64_t))sub_1C089BD04);
    sub_1C08F5BF0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C4724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  char v13 = a7 & 1;
  char v31 = a7 & 1;
  sub_1C08E4ADC();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E49B0);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  uint64_t v25 = sub_1C08E4C1C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a5, a6, v13);
  sub_1C081590C(a8, a5, a6, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E4B70();
    sub_1C085F050(&qword_1EB86EC80, (void (*)(uint64_t))sub_1C08E4B70);
    sub_1BFFEF56C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C48BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  char v13 = a6 & 1;
  char v31 = a6 & 1;
  sub_1C08E4ADC();
  uint64_t v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08E49B0);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a8;
  uint64_t v24 = a9;
  uint64_t v25 = sub_1C08E4C1C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a4, a5, v13);
  sub_1C081590C(a7, a4, a5, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08E4B70();
    sub_1C085F050(&qword_1EB86EC80, (void (*)(uint64_t))sub_1C08E4B70);
    sub_1BFFEF5C0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C4A58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08E4ADC();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08E49B0);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08E4C1C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C081590C(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08E4B70();
    sub_1C085F050(&qword_1EB86EC80, (void (*)(uint64_t))sub_1C08E4B70);
    sub_1BFFEF518();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C4BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08946B4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08947DC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F7830;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0815B40(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0894748();
    sub_1C085F050(&qword_1EB86EC70, (void (*)(uint64_t))sub_1C0894748);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C4D84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08946B4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08947DC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F7830;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0815B40(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0894748();
    sub_1C085F050(&qword_1EB86EC70, (void (*)(uint64_t))sub_1C0894748);
    sub_1BFE1D79C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C4F1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0889344();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0889218);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FB0A4;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0815D74(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08893D8();
    sub_1C085F050(&qword_1EB86EC50, (void (*)(uint64_t))sub_1C08893D8);
    sub_1BFE9DEBC(0, &qword_1EB879D10, (uint64_t)&type metadata for FormatColor, MEMORY[0x1E4FBB320]);
    sub_1BFDB3838();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C50E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  double v34 = a7;
  double v35 = a8;
  double v36 = a9;
  double v37 = a10;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  char v15 = a3 & 1;
  char v33 = a3 & 1;
  sub_1C0889344();
  uint64_t v17 = (uint64_t *)(v10 + *(int *)(v16 + 44));
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  v29[0] = a1;
  v29[1] = a2;
  char v30 = v15;
  uint64_t v20 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v29, v20 + 16, (uint64_t (*)(void))sub_1C0889218);
  *(void *)(v20 + 40) = v19;
  *(void *)(v20 + 48) = v18;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  char v27 = sub_1C08FB0A4;
  uint64_t v28 = v20;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v15);
  sub_1C0815D74(a4, a1, a2, v15, (uint64_t)sub_1C090A470, (uint64_t)v24);
  if (!v23)
  {
    sub_1C08893D8();
    sub_1C085F050(&qword_1EB86EC50, (void (*)(uint64_t))sub_1C08893D8);
    sub_1BFDB38CC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C527C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0873688();
  char v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087355C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0870680;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0815FA8(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C087371C();
    sub_1C085F050(&qword_1EB86EC40, (void (*)(uint64_t))sub_1C087371C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C5410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C085FC04();
  char v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C085FD2C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0909000;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08161DC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C085FC98();
    sub_1C085F050(&qword_1EB86EC30, (void (*)(uint64_t))sub_1C085FC98);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C55A4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A1DB0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A1B88);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F40AC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0816410(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A1E44();
    sub_1C085F050(&qword_1EB86EC20, (void (*)(uint64_t))sub_1C08A1E44);
    sub_1C05F5B0C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C573C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08A1DB0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08A1B88);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F40AC;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0816410(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08A1E44();
    sub_1C085F050(&qword_1EB86EC20, (void (*)(uint64_t))sub_1C08A1E44);
    sub_1C08F41C4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C58D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  char v19 = a3;
  sub_1C08E8C04();
  uint64_t v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = v15;
  *(void *)(v16 + 32) = v14;
  v18[2] = a5;
  void v18[3] = a6;
  void v18[4] = sub_1C08E8D84;
  v18[5] = v16;
  swift_retain();
  sub_1C0816644(a4, a3, (uint64_t)sub_1C090A470, (uint64_t)v18);
  if (!v7)
  {
    sub_1BFEFF3E8(0, &qword_1EA1A07F0, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1C08E8CF4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C5A30(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v19 = a1;
  char v18 = a2;
  sub_1C08E8C04();
  uint64_t v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  void v17[4] = sub_1C08E8D84;
  v17[5] = v15;
  swift_retain();
  sub_1C0816644(a3, a2, (uint64_t)sub_1C090A470, (uint64_t)v17);
  if (!v6)
  {
    sub_1BFEFF3E8(0, &qword_1EA1A07F0, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1C08E8CF4();
    sub_1BFD8B8AC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C5B90(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a1;
  char v18 = a2;
  sub_1C08E8C04();
  uint64_t v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  void v17[4] = sub_1C08E8D84;
  v17[5] = v15;
  swift_retain();
  sub_1C0816644(a3, a2, (uint64_t)sub_1C090A470, (uint64_t)v17);
  if (!v6)
  {
    sub_1BFEFF3E8(0, &qword_1EA1A07F0, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1C08E8CF4();
    sub_1BFE309D0(0, &qword_1EB879E50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, MEMORY[0x1E4FBB320]);
    sub_1C08E8E70();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C5D28(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a1;
  char v18 = a2;
  sub_1C08E8C04();
  uint64_t v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  void v17[4] = sub_1C08E8D84;
  v17[5] = v15;
  swift_retain();
  sub_1C0816644(a3, a2, (uint64_t)sub_1C090A470, (uint64_t)v17);
  if (!v6)
  {
    sub_1BFEFF3E8(0, &qword_1EA1A07F0, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1C08E8CF4();
    sub_1BFE309D0(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
    sub_1BFD77ECC();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C5EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C089EC28();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C089EAFC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F4D8C;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0816810(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C089ECBC();
    sub_1C085F050(&qword_1EB86EBF0, (void (*)(uint64_t))sub_1C089ECBC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C6054(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C089EC28();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C089EAFC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08F4D8C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0816810(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C089ECBC();
    sub_1C085F050(&qword_1EB86EBF0, (void (*)(uint64_t))sub_1C089ECBC);
    sub_1BFE2945C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C61EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  double v34 = a7;
  double v35 = a8;
  double v36 = a9;
  double v37 = a10;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  char v15 = a3 & 1;
  char v33 = a3 & 1;
  sub_1C089DB98();
  uint64_t v17 = (uint64_t *)(v10 + *(int *)(v16 + 44));
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  v29[0] = a1;
  v29[1] = a2;
  char v30 = v15;
  uint64_t v20 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v29, v20 + 16, (uint64_t (*)(void))sub_1C089DA18);
  *(void *)(v20 + 40) = v19;
  *(void *)(v20 + 48) = v18;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  char v27 = sub_1C08F51D8;
  uint64_t v28 = v20;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v15);
  sub_1C0816A44(a4, a1, a2, v15, (uint64_t)sub_1C090A470, (uint64_t)v24);
  if (!v23)
  {
    sub_1C089DC2C();
    sub_1C085F050(&qword_1EA19DF48, (void (*)(uint64_t))sub_1C089DC2C);
    sub_1C089D840(0, &qword_1EA19DEE8, (uint64_t (*)(void, void *))type metadata accessor for FormatTranslate);
    sub_1C089D8BC(&qword_1EA1A0AC0, &qword_1EA19DEE8, (uint64_t (*)(void, void *))type metadata accessor for FormatTranslate);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C63D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C089DB98();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C089DA18);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08F51D8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C0816A44(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C089DC2C();
    sub_1C085F050(&qword_1EA19DF48, (void (*)(uint64_t))sub_1C089DC2C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C656C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C087A0C8();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0879F48);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE768;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0816C78(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C087A15C();
    sub_1C085F050(&qword_1EB86EBE0, (void (*)(uint64_t))sub_1C087A15C);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C6700(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086B2C4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086B120);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09038E0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0816EAC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086B358();
    sub_1C085F050(&qword_1EB86EBD0, (void (*)(uint64_t))sub_1C086B358);
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C6898(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086B2C4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086B120);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09038E0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0816EAC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086B358();
    sub_1C085F050(&qword_1EB86EBD0, (void (*)(uint64_t))sub_1C086B358);
    sub_1BFE0FA08();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C6A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08BA44C();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08BA320);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08EE2A8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08170E0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08BA4E0();
    sub_1C085F050(&qword_1EB86EBC0, (void (*)(uint64_t))sub_1C08BA4E0);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C6BC4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  double v31 = a7;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v12 = a3 & 1;
  char v30 = a3 & 1;
  sub_1C08628F4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08627C8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = sub_1C08F3B48;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a1, a2, v12);
  sub_1C0817314(a4, a1, a2, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0862988();
    sub_1C085F050(&qword_1EB86EBB0, (void (*)(uint64_t))sub_1C0862988);
    sub_1BFDC74E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C6D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0889CE0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0889B24);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FADB4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0817548(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0889D74();
    sub_1C085F050(&qword_1EB86EBA0, (void (*)(uint64_t))sub_1C0889D74);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C6EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C0879064();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087918C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08FEDC4;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C081777C(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08790F8();
    sub_1C085F050(&qword_1EB86EB90, (void (*)(uint64_t))sub_1C08790F8);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C7084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086BBC4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086BA98);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C0903438;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C08179B0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086BC58();
    sub_1C085F050(&qword_1EB86EB80, (void (*)(uint64_t))sub_1C086BC58);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C7218(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1BFF0A288(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C086BBC4();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086BA98);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C0903438;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C08179B0(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086BC58();
    sub_1C085F050(&qword_1EB86EB80, (void (*)(uint64_t))sub_1C086BC58);
    sub_1BFF0A300();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C73B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08915A4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0891478);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F7C68;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0817DB0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0891638();
    sub_1C085F050(&qword_1EB86EB70, (void (*)(uint64_t))sub_1C0891638);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C754C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C08915A4();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0891478);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C08F7C68;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0817DB0(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0891638();
    sub_1C085F050(&qword_1EB86EB70, (void (*)(uint64_t))sub_1C0891638);
    sub_1BFFB39D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C76E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C0871F98(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C0872424();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C087254C);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C0900B90;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C0817FE4(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08724B8();
    sub_1C085F050(&qword_1EB86ED80, (void (*)(uint64_t))sub_1C08724B8);
    sub_1C0900C98();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C7884(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0866DB0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C0866ED8);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C0905DF0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0818218(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0866E44();
    sub_1C085F050(&qword_1EA19D2C8, (void (*)(uint64_t))sub_1C0866E44);
    sub_1BFE9DEBC(0, &qword_1EB860C38, (uint64_t)&type metadata for FormatAnimationNodeAnimation, MEMORY[0x1E4FBB320]);
    sub_1C0872DA4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C7A48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C0871F98(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C0871CF0();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C0871E18);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C0900EB8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C081844C(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C0871D84();
    sub_1C085F050(&qword_1EA19D6E8, (void (*)(uint64_t))sub_1C0871D84);
    sub_1C0900C98();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C7BE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C08C045C();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C08C02DC);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08EC3F0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0818680(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C08C04F0();
    sub_1C085F050(&qword_1EA19E6C8, (void (*)(uint64_t))sub_1C08C04F0);
    sub_1C0316B28();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C7D80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C08C0584(a1, (uint64_t)v32);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  char v13 = a4 & 1;
  char v31 = a4 & 1;
  sub_1C08C045C();
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  char v28 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08C02DC);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = sub_1C08EC3F0;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v13);
  sub_1C0818680(a5, a2, a3, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08C04F0();
    sub_1C085F050(&qword_1EA19E6C8, (void (*)(uint64_t))sub_1C08C04F0);
    sub_1BFDD6A70();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C7F20(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v11 = a3 & 1;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  char v19 = a3 & 1;
  sub_1C08E597C();
  char v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v15;
  *(void *)(v16 + 32) = v14;
  v18[2] = a5;
  void v18[3] = a6;
  void v18[4] = sub_1C08E5AA8;
  v18[5] = v16;
  swift_retain();
  sub_1C08188B4(a4, v11, (uint64_t)sub_1C090A470, (uint64_t)v18);
  if (!v7)
  {
    sub_1BFEFF3E8(0, &qword_1EB85C610, (uint64_t (*)(void))sub_1BFCAB46C, (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1C08E5A18();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C807C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  char v34 = a3 & 1;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  char v13 = a6 & 1;
  char v31 = a6 & 1;
  sub_1C08BED18();
  uint64_t v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C08BEB98);
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v23 = a8;
  uint64_t v24 = a9;
  uint64_t v25 = sub_1C08ECB40;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a4, a5, v13);
  sub_1C0818A84(a7, a4, a5, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C08BEDAC();
    sub_1C085F050(&qword_1EB86ED70, (void (*)(uint64_t))sub_1C08BEDAC);
    sub_1BFFB2AC8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C821C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086E4B8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086E38C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C090220C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0818CB8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086E54C();
    sub_1C085F050(&qword_1EB86EDB0, (void (*)(uint64_t))sub_1C086E54C);
    sub_1BFF8B470();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C83B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086E4B8();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086E38C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C090220C;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0818CB8(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086E54C();
    sub_1C085F050(&qword_1EB86EDB0, (void (*)(uint64_t))sub_1C086E54C);
    sub_1BFE9DEBC(0, &qword_1EB879C88, (uint64_t)&type metadata for FormatTextNodeFormat.Token, MEMORY[0x1E4FBB320]);
    sub_1BFDD6E50();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C8578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  char v13 = a5 & 1;
  char v31 = a5 & 1;
  sub_1C086E1D0();
  uint64_t v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  char v28 = v13;
  uint64_t v18 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v27, v18 + 16, (uint64_t (*)(void))sub_1C086E0A4);
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = sub_1C09022E8;
  uint64_t v26 = v18;
  swift_retain();
  sub_1BFE94AB4(a3, a4, v13);
  sub_1C0818EEC(a6, a3, a4, v13, (uint64_t)sub_1C090A470, (uint64_t)v22);
  if (!v21)
  {
    sub_1C086E264();
    sub_1C085F050(&qword_1EB86EDC0, (void (*)(uint64_t))sub_1C086E264);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C870C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C086E1D0();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C086E0A4);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C09022E8;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0818EEC(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C086E264();
    sub_1C085F050(&qword_1EB86EDC0, (void (*)(uint64_t))sub_1C086E264);
    sub_1BFF8B470();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C88A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087C080();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087BF54);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FDDC0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0819120(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087C114();
    sub_1C085F050(&qword_1EB86EDA0, (void (*)(uint64_t))sub_1C087C114);
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C8A3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C087C080();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C087BF54);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FDDC0;
  uint64_t v25 = v17;
  swift_retain();
  sub_1BFE94AB4(a2, a3, v12);
  sub_1C0819120(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C087C114();
    sub_1C085F050(&qword_1EB86EDA0, (void (*)(uint64_t))sub_1C087C114);
    sub_1BFD6F22C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C8BD4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v31 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  char v12 = a4 & 1;
  char v30 = a4 & 1;
  sub_1C0882BB4();
  uint64_t v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  char v27 = v12;
  uint64_t v17 = swift_allocObject();
  sub_1BFE7FB8C((uint64_t)v26, v17 + 16, (uint64_t (*)(void))sub_1C088298C);
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = sub_1C08FC8E8;
  uint64_t v25 = v17;
  sub_1BFE94AB4(a2, a3, v12);
  swift_retain();
  sub_1C0819354(a5, a2, a3, v12, (uint64_t)sub_1C090A470, (uint64_t)v21);
  if (!v20)
  {
    sub_1C0882C48();
    sub_1C085F050(&qword_1EB86ED90, (void (*)(uint64_t))sub_1C0882C48);
    sub_1C08FC900();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1C06C8D6C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C08298F4(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C087E610();
      sub_1C085F050(&qword_1EB86EB60, (void (*)(uint64_t))sub_1C087E610);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879E90, type metadata accessor for FormatCompilerProperty, MEMORY[0x1E4FBB320]);
      sub_1BFD8EACC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C8EDC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0829D6C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08B16F4();
      sub_1C085F050(&qword_1EB86EB20, (void (*)(uint64_t))sub_1C08B16F4);
      sub_1BFE309D0(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
      sub_1BFD77ECC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C904C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082A1E4(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C087E280();
      sub_1C085F050(&qword_1EB86EB00, (void (*)(uint64_t))sub_1C087E280);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879E90, type metadata accessor for FormatCompilerProperty, MEMORY[0x1E4FBB320]);
      sub_1BFD8EACC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C91BC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (result != 2)
  {
    char v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082A65C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      uint64_t v16 = a2;
      uint64_t v17 = a3;
      BOOL v18 = v8 != 0;
      char v15 = v7;
      sub_1C08A1654();
      sub_1C085F050(&qword_1EA19DFD0, (void (*)(uint64_t))sub_1C08A1654);
      sub_1C03CD7A4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C92F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082B188(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08B7D64();
      sub_1C085F050(&qword_1EA19E3D0, (void (*)(uint64_t))sub_1C08B7D64);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C9538(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082B188(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08B7D64();
      sub_1C085F050(&qword_1EA19E3D0, (void (*)(uint64_t))sub_1C08B7D64);
      sub_1BFE9DEBC(0, &qword_1EA1A0940, (uint64_t)&type metadata for FormatSponsoredBannerNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C08EF164();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C969C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if ((a1 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = a3;
  char v15 = sub_1C1520A9C();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    int v16 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v17[2] = a6;
    v17[3] = a7;
    uint64_t result = sub_1C082B600(a5, a2, v18, v16, (uint64_t)sub_1C090A46C, (uint64_t)v17);
    if (!v7 && (result & 1) != 0)
    {
      uint64_t v20 = a2;
      uint64_t v21 = v18;
      BOOL v22 = v16 != 0;
      char v19 = a1 & 1;
      sub_1C08632B0();
      sub_1C085F050(&qword_1EA19D1D8, (void (*)(uint64_t))sub_1C08632B0);
      sub_1C025644C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C9848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082BA78(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08BBB58();
      sub_1C085F050(&qword_1EB86E970, (void (*)(uint64_t))sub_1C08BBB58);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C9A88(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082BA78(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08BBB58();
      sub_1C085F050(&qword_1EB86E970, (void (*)(uint64_t))sub_1C08BBB58);
      sub_1BFE9DEBC(0, &qword_1EB86B240, (uint64_t)&type metadata for FormatSupplementaryNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C08EDDA4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C9BEC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082BEF0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0866220();
      sub_1C085F050(&qword_1EB86E940, (void (*)(uint64_t))sub_1C0866220);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879E90, type metadata accessor for FormatCompilerProperty, MEMORY[0x1E4FBB320]);
      sub_1BFD8EACC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C9D5C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082BEF0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0866220();
      sub_1C085F050(&qword_1EB86E940, (void (*)(uint64_t))sub_1C0866220);
      sub_1BFE9DEBC(0, &qword_1EB880CF8, (uint64_t)&type metadata for FormatSlotTransform, MEMORY[0x1E4FBB320]);
      sub_1BFD8EB9C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06C9EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082CA1C(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C086ABE4();
      sub_1C085F050(&qword_1EB86E900, (void (*)(uint64_t))sub_1C086ABE4);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CA100(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082CA1C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086ABE4();
      sub_1C085F050(&qword_1EB86E900, (void (*)(uint64_t))sub_1C086ABE4);
      sub_1BFE9DEBC(0, &qword_1EB86B1F8, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C00648FC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CA264(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  uint64_t v19 = a5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  sub_1BFFC0BF8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v12;
  *(unsigned char *)(inited + 40) = 0;
  LOBYTE(v12) = sub_1C00DE998(a1, inited);
  swift_setDeallocating();
  sub_1BFEFF3E8(0, qword_1EB876620, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquationToken);
  uint64_t result = swift_arrayDestroy();
  if ((v12 & 1) == 0)
  {
    int v15 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v16[2] = v17;
    v16[3] = v18;
    uint64_t result = sub_1C082CE94(v19, a2, a3, v15, (uint64_t)sub_1C090A46C, (uint64_t)v16);
    if (!v7 && (result & 1) != 0)
    {
      uint64_t v21 = a2;
      uint64_t v22 = a3;
      BOOL v23 = v15 != 0;
      uint64_t v20 = a1;
      sub_1C08A540C();
      sub_1C085F050(&qword_1EB86E8F0, (void (*)(uint64_t))sub_1C08A540C);
      sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BFDD8B60();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CA4A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1BFE94AD4(a1, a2, 1);
    uint64_t result = sub_1BFE94AD4(1, 0, 0);
  }
  else
  {
    sub_1BFE94AD4(a1, a2, 0);
    uint64_t result = sub_1BFE94AD4(1, 0, 0);
    if (a1) {
      return result;
    }
  }
  int v21 = a3;
  int v18 = a6 & 1;
  MEMORY[0x1F4188790](result);
  void v20[2] = a8;
  v20[3] = v19;
  uint64_t result = sub_1C082CE94(a7, a4, a5, v18, (uint64_t)sub_1C090A46C, (uint64_t)v20);
  if (!v8 && (result & 1) != 0)
  {
    uint64_t v25 = a4;
    uint64_t v26 = a5;
    BOOL v27 = v18 != 0;
    uint64_t v22 = a1;
    uint64_t v23 = a2;
    char v24 = v21 & 1;
    sub_1C08A540C();
    sub_1C085F050(&qword_1EB86E8F0, (void (*)(uint64_t))sub_1C08A540C);
    sub_1BFFB2AC8();
    return sub_1C1520BAC();
  }
  return result;
}

uint64_t sub_1C06CA670(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  uint64_t v19 = a5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x3FF0000000000000;
  sub_1BFFC0BF8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v12;
  *(unsigned char *)(inited + 40) = 0;
  LOBYTE(v12) = sub_1C00DE998(a1, inited);
  swift_setDeallocating();
  sub_1BFEFF3E8(0, qword_1EB876620, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquationToken);
  uint64_t result = swift_arrayDestroy();
  if ((v12 & 1) == 0)
  {
    int v15 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v16[2] = v17;
    v16[3] = v18;
    uint64_t result = sub_1C082CE94(v19, a2, a3, v15, (uint64_t)sub_1C090A46C, (uint64_t)v16);
    if (!v7 && (result & 1) != 0)
    {
      uint64_t v21 = a2;
      uint64_t v22 = a3;
      BOOL v23 = v15 != 0;
      uint64_t v20 = a1;
      sub_1C08A540C();
      sub_1C085F050(&qword_1EB86E8F0, (void (*)(uint64_t))sub_1C08A540C);
      sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BFDD8B60();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CA8B8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v20 = a3;
  int v19 = a4 & 1;
  char v13 = sub_1C1520A9C();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    MEMORY[0x1F4188790](result);
    v18[2] = a6;
    void v18[3] = a7;
    uint64_t v15 = a5;
    uint64_t v16 = v20;
    int v17 = v19;
    uint64_t result = sub_1C082CE94(v15, a2, v20, v19, (uint64_t)sub_1C090A46C, (uint64_t)v18);
    if (!v7 && (result & 1) != 0)
    {
      uint64_t v22 = a2;
      uint64_t v23 = v16;
      BOOL v24 = v17 != 0;
      char v21 = a1;
      sub_1C08A540C();
      sub_1C085F050(&qword_1EB86E8F0, (void (*)(uint64_t))sub_1C08A540C);
      sub_1BFDF85F0();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CAA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  char v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082D0D0(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0896FF0();
      sub_1C085F050(&qword_1EB86E8D0, (void (*)(uint64_t))sub_1C0896FF0);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CACB4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082D0D0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0896FF0();
      sub_1C085F050(&qword_1EB86E8D0, (void (*)(uint64_t))sub_1C0896FF0);
      sub_1BFE9DEBC(0, &qword_1EB86B1E8, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1BFD99DF4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CAE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082D9C0(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08C9E18();
      sub_1C085F050(&qword_1EB86E890, (void (*)(uint64_t))sub_1C08C9E18);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CB058(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082D9C0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08C9E18();
      sub_1C085F050(&qword_1EB86E890, (void (*)(uint64_t))sub_1C08C9E18);
      sub_1BFE9DEBC(0, &qword_1EB86B1A8, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C0064990();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CB1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082DE38(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08B08EC();
      sub_1C085F050(&qword_1EB86E870, (void (*)(uint64_t))sub_1C08B08EC);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CB3FC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082DE38(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08B08EC();
      sub_1C085F050(&qword_1EB86E870, (void (*)(uint64_t))sub_1C08B08EC);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CB560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082E074(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08AA95C();
      sub_1C085F050(&qword_1EB86E860, (void (*)(uint64_t))sub_1C08AA95C);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CB7A0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082E074(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08AA95C();
      sub_1C085F050(&qword_1EB86E860, (void (*)(uint64_t))sub_1C08AA95C);
      sub_1BFE9DEBC(0, &qword_1EA1A0A18, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C08F24E8();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CB904(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082E4EC(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08A0C1C();
      sub_1C085F050(&qword_1EB86E850, (void (*)(uint64_t))sub_1C08A0C1C);
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB861430, (uint64_t)&type metadata for FormatOptionsNodeStatementModifier, MEMORY[0x1E4FBB320]);
      sub_1C08F47A8();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CBA68(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082E728(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0890268();
      sub_1C085F050(&qword_1EB86E840, (void (*)(uint64_t))sub_1C0890268);
      sub_1BFE9DEBC(0, &qword_1EB86B2A0, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment, MEMORY[0x1E4FBB320]);
      sub_1C08F87A0();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CBBCC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082E964(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C088FF80();
      sub_1C085F050(&qword_1EB86E830, (void (*)(uint64_t))sub_1C088FF80);
      sub_1BFE9DEBC(0, &qword_1EB86B2A0, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment, MEMORY[0x1E4FBB320]);
      sub_1C08F87A0();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CBD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082F018(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08B6F90();
      sub_1C085F050(&qword_1EA19E3B8, (void (*)(uint64_t))sub_1C08B6F90);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CBF70(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082F018(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08B6F90();
      sub_1C085F050(&qword_1EA19E3B8, (void (*)(uint64_t))sub_1C08B6F90);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CC0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082F490(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C086A6A8();
      sub_1C085F050(&qword_1EB86E7B0, (void (*)(uint64_t))sub_1C086A6A8);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CC314(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082F490(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086A6A8();
      sub_1C085F050(&qword_1EB86E7B0, (void (*)(uint64_t))sub_1C086A6A8);
      sub_1BFE9DEBC(0, &qword_1EB86B190, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C09040E8();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CC478(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C082F490(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086A6A8();
      sub_1C085F050(&qword_1EB86E7B0, (void (*)(uint64_t))sub_1C086A6A8);
      sub_1BFE9DEBC(0, &qword_1EB860CD0, (uint64_t)&type metadata for FormatIssueCoverTraits, MEMORY[0x1E4FBB320]);
      sub_1C0903DC8();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CC5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C082F908(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C088A05C();
      sub_1C085F050(&qword_1EB86E7A0, (void (*)(uint64_t))sub_1C088A05C);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CC81C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1BFE94AD4(a1, a2, 1);
    uint64_t result = sub_1BFE94AD4(1, 0, 0);
  }
  else
  {
    sub_1BFE94AD4(a1, a2, 0);
    uint64_t result = sub_1BFE94AD4(1, 0, 0);
    if (a1) {
      return result;
    }
  }
  int v21 = a3;
  int v18 = a6 & 1;
  MEMORY[0x1F4188790](result);
  void v20[2] = a8;
  v20[3] = v19;
  uint64_t result = sub_1C082FFBC(a7, a4, a5, v18, (uint64_t)sub_1C090A46C, (uint64_t)v20);
  if (!v8 && (result & 1) != 0)
  {
    uint64_t v25 = a4;
    uint64_t v26 = a5;
    BOOL v27 = v18 != 0;
    uint64_t v22 = a1;
    uint64_t v23 = a2;
    char v24 = v21 & 1;
    sub_1C08C01B4();
    sub_1C085F050(&qword_1EB86E770, (void (*)(uint64_t))sub_1C08C01B4);
    sub_1BFFB2AC8();
    return sub_1C1520BAC();
  }
  return result;
}

uint64_t sub_1C06CC9E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  uint64_t v19 = a5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  sub_1BFFC0BF8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v12;
  *(unsigned char *)(inited + 40) = 0;
  LOBYTE(v12) = sub_1C00DE998(a1, inited);
  swift_setDeallocating();
  sub_1BFEFF3E8(0, qword_1EB876620, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquationToken);
  uint64_t result = swift_arrayDestroy();
  if ((v12 & 1) == 0)
  {
    int v15 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v16[2] = v17;
    v16[3] = v18;
    uint64_t result = sub_1C0831CC8(v19, a2, a3, v15, (uint64_t)sub_1C090A46C, (uint64_t)v16);
    if (!v7 && (result & 1) != 0)
    {
      uint64_t v21 = a2;
      uint64_t v22 = a3;
      BOOL v23 = v15 != 0;
      uint64_t v20 = a1;
      sub_1C085F4BC();
      sub_1C085F050(&qword_1EB86E750, (void (*)(uint64_t))sub_1C085F4BC);
      sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BFDD8B60();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CCC28(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1BFE94AD4(a1, a2, 1);
    uint64_t result = sub_1BFE94AD4(0, 0, 0);
  }
  else
  {
    sub_1BFE94AD4(a1, a2, 0);
    uint64_t result = sub_1BFE94AD4(0, 0, 0);
    if ((a1 & 1) == 0) {
      return result;
    }
  }
  int v21 = a3;
  int v18 = a6 & 1;
  MEMORY[0x1F4188790](result);
  void v20[2] = a8;
  v20[3] = v19;
  uint64_t result = sub_1C0831CC8(a7, a4, a5, v18, (uint64_t)sub_1C090A46C, (uint64_t)v20);
  if (!v8 && (result & 1) != 0)
  {
    uint64_t v25 = a4;
    uint64_t v26 = a5;
    BOOL v27 = v18 != 0;
    uint64_t v22 = a1;
    uint64_t v23 = a2;
    char v24 = v21 & 1;
    sub_1C085F4BC();
    sub_1C085F050(&qword_1EB86E750, (void (*)(uint64_t))sub_1C085F4BC);
    sub_1BFFB2AC8();
    return sub_1C1520BAC();
  }
  return result;
}

uint64_t sub_1C06CCDF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  uint64_t v19 = a5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x3FF0000000000000;
  sub_1BFFC0BF8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v12;
  *(unsigned char *)(inited + 40) = 0;
  LOBYTE(v12) = sub_1C00DE998(a1, inited);
  swift_setDeallocating();
  sub_1BFEFF3E8(0, qword_1EB876620, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquationToken);
  uint64_t result = swift_arrayDestroy();
  if ((v12 & 1) == 0)
  {
    int v15 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v16[2] = v17;
    v16[3] = v18;
    uint64_t result = sub_1C0831CC8(v19, a2, a3, v15, (uint64_t)sub_1C090A46C, (uint64_t)v16);
    if (!v7 && (result & 1) != 0)
    {
      uint64_t v21 = a2;
      uint64_t v22 = a3;
      BOOL v23 = v15 != 0;
      uint64_t v20 = a1;
      sub_1C085F4BC();
      sub_1C085F050(&qword_1EB86E750, (void (*)(uint64_t))sub_1C085F4BC);
      sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BFDD8B60();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CD038(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0831F04(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0897E48();
      sub_1C085F050(&qword_1EB86E730, (void (*)(uint64_t))sub_1C0897E48);
      sub_1BFE9DEBC(0, &qword_1EB85C450, (uint64_t)&type metadata for FormatLocalizationString.Selector, MEMORY[0x1E4FBB320]);
      sub_1BFE2130C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CD19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083237C(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C088C098();
      sub_1C085F050(&qword_1EB86E700, (void (*)(uint64_t))sub_1C088C098);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CD3DC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083237C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C088C098();
      sub_1C085F050(&qword_1EB86E700, (void (*)(uint64_t))sub_1C088C098);
      sub_1BFE9DEBC(0, &qword_1EB86B160, (uint64_t)&type metadata for FormatGroupNodeMaskStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1BFD39E80();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CD540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0832A30(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0872AF0();
      sub_1C085F050(&qword_1EB86E6C0, (void (*)(uint64_t))sub_1C0872AF0);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CD780(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0832A30(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0872AF0();
      sub_1C085F050(&qword_1EB86E6C0, (void (*)(uint64_t))sub_1C0872AF0);
      sub_1BFE9DEBC(0, &qword_1EB860CE8, (uint64_t)&type metadata for FormatAnimationNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C0900948();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CD8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0832EA8(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C086C108();
      sub_1C085F050(&qword_1EB86E6A0, (void (*)(uint64_t))sub_1C086C108);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CDB24(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0832EA8(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086C108();
      sub_1C085F050(&qword_1EB86E6A0, (void (*)(uint64_t))sub_1C086C108);
      sub_1BFE9DEBC(0, &qword_1EB86B140, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C0064A24();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CDC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083355C(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C086ECB0();
      sub_1C085F050(&qword_1EB86E680, (void (*)(uint64_t))sub_1C086ECB0);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CDEC8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083355C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086ECB0();
      sub_1C085F050(&qword_1EB86E680, (void (*)(uint64_t))sub_1C086ECB0);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CE02C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083355C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086ECB0();
      sub_1C085F050(&qword_1EB86E680, (void (*)(uint64_t))sub_1C086ECB0);
      sub_1BFE9DEBC(0, &qword_1EB85C3D8, (uint64_t)&type metadata for FormatNodeStyle, MEMORY[0x1E4FBB320]);
      sub_1BFE0F71C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CE190(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083355C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086ECB0();
      sub_1C085F050(&qword_1EB86E680, (void (*)(uint64_t))sub_1C086ECB0);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
      sub_1BFE201AC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CE300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0833E4C(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C086678C();
      sub_1C085F050(&qword_1EB86E610, (void (*)(uint64_t))sub_1C086678C);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CE540(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (result)
  {
    char v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0834088(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      uint64_t v16 = a2;
      uint64_t v17 = a3;
      BOOL v18 = v8 != 0;
      char v15 = v7 & 1;
      sub_1C08BE3F8();
      sub_1C085F050(&qword_1EB86FDD8, (void (*)(uint64_t))sub_1C08BE3F8);
      sub_1C0266408();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CE678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C08342C4(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08A7094();
      sub_1C085F050(&qword_1EB86E5F0, (void (*)(uint64_t))sub_1C08A7094);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CE8B8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C08342C4(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08A7094();
      sub_1C085F050(&qword_1EB86E5F0, (void (*)(uint64_t))sub_1C08A7094);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CEA1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a3;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a2;
  int v24 = a4;
  sub_1C08A7318(a1, (uint64_t)v41);
  uint64_t v8 = v41[0];
  uint64_t v9 = v41[1];
  uint64_t v10 = v41[3];
  uint64_t v30 = v41[2];
  uint64_t v31 = a1;
  uint64_t v12 = v41[4];
  uint64_t v11 = v41[5];
  uint64_t v13 = v41[6];
  char v14 = v42;
  uint64_t result = sub_1C08A7318(a1, (uint64_t)v45);
  if ((v48 & 0xC0) != 0x80
    || v48 != 128
    || (int8x16_t v16 = vorrq_s8(v46, v47),
        *(void *)&vorr_s8(*(int8x8_t *)v16.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL)) | v45[2] | v45[1] | v45[0]))
  {
    v34[0] = v8;
    v34[1] = v9;
    v34[2] = v30;
    v34[3] = v10;
    v34[4] = v12;
    v34[5] = v11;
    v34[6] = v13;
    char v35 = v14;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    uint64_t v39 = 0;
    char v40 = 0x80;
    uint64_t v17 = v31;
    sub_1C08A7318(v31, (uint64_t)v43);
    if (v44 < 0)
    {
      return sub_1C08F3240((uint64_t)v34, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C05DD070);
    }
    else
    {
      int v18 = v24 & 1;
      v44 &= 0x3Fu;
      sub_1BFF8C6C8(v31, (void (*)(void, void, void, void, void, void, void, void))sub_1C08A7374);
      uint64_t v19 = sub_1C08F3240((uint64_t)v34, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C05DD070);
      MEMORY[0x1F4188790](v19);
      v23[2] = v25;
      void v23[3] = v26;
      uint64_t v21 = v28;
      uint64_t v20 = v29;
      uint64_t v22 = v49;
      uint64_t result = sub_1C08342C4(v27, v28, v29, v18, (uint64_t)sub_1C090A46C, (uint64_t)v23);
      if (!v22 && (result & 1) != 0)
      {
        v32[8] = v21;
        v32[9] = v20;
        BOOL v33 = v18 != 0;
        sub_1C08A7318(v17, (uint64_t)v32);
        sub_1C08A7094();
        sub_1C085F050(&qword_1EB86E5F0, (void (*)(uint64_t))sub_1C08A7094);
        sub_1C08F32E0();
        return sub_1C1520BAC();
      }
    }
  }
  return result;
}

uint64_t sub_1C06CECDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v19 = a2;
  int v8 = a4 & 1;
  switch((char)a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      uint64_t v18 = a1;
      char v14 = sub_1C1520A9C();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        MEMORY[0x1F4188790](result);
        v17[2] = a6;
        v17[3] = a7;
        uint64_t v15 = a5;
        uint64_t v16 = v19;
        uint64_t result = sub_1C08346D4(v15, v19, a3, v8, (uint64_t)sub_1C090A46C, (uint64_t)v17);
        if (!v7 && (result & 1) != 0)
        {
          uint64_t v21 = v16;
          uint64_t v22 = a3;
          BOOL v23 = v8 != 0;
          char v20 = v18;
          sub_1C0897A28();
          sub_1C085F050(&qword_1EB86E5D0, (void (*)(uint64_t))sub_1C0897A28);
          sub_1BFD92300();
          uint64_t result = sub_1C1520BAC();
        }
      }
      break;
    default:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t sub_1C06CEF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0834910(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0896790();
      sub_1C085F050(&qword_1EB86E5C0, (void (*)(uint64_t))sub_1C0896790);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CF1C8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0834910(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0896790();
      sub_1C085F050(&qword_1EB86E5C0, (void (*)(uint64_t))sub_1C0896790);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CF32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0834B4C(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0894194();
      sub_1C085F050(&qword_1EB86E5B0, (void (*)(uint64_t))sub_1C0894194);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CF56C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0834B4C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0894194();
      sub_1C085F050(&qword_1EB86E5B0, (void (*)(uint64_t))sub_1C0894194);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
      sub_1BFE201AC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CF6DC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0834B4C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0894194();
      sub_1C085F050(&qword_1EB86E5B0, (void (*)(uint64_t))sub_1C0894194);
      sub_1BFE9DEBC(0, &qword_1EB85C3D8, (uint64_t)&type metadata for FormatNodeStyle, MEMORY[0x1E4FBB320]);
      sub_1BFE0F71C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CF840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083543C(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08C9410();
      sub_1C085F050(&qword_1EB86E580, (void (*)(uint64_t))sub_1C08C9410);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CFA80(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083543C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08C9410();
      sub_1C085F050(&qword_1EB86E580, (void (*)(uint64_t))sub_1C08C9410);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CFBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0835678(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08AA0FC();
      sub_1C085F050(&qword_1EB86E560, (void (*)(uint64_t))sub_1C08AA0FC);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CFE24(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0835678(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08AA0FC();
      sub_1C085F050(&qword_1EB86E560, (void (*)(uint64_t))sub_1C08AA0FC);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06CFF88(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C08363E0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0864B80();
      sub_1C085F050(&qword_1EB86E4C0, (void (*)(uint64_t))sub_1C0864B80);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879E90, type metadata accessor for FormatCompilerProperty, MEMORY[0x1E4FBB320]);
      sub_1BFD8EACC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D00F8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C08363E0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0864B80();
      sub_1C085F050(&qword_1EB86E4C0, (void (*)(uint64_t))sub_1C0864B80);
      sub_1BFE309D0(0, &qword_1EB879F08, type metadata accessor for FormatCompilerSlotDefinition, MEMORY[0x1E4FBB320]);
      sub_1BFD6965C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D0268(uint64_t result, uint64_t a2, char a3, double a4)
{
  if (a4 != 16.0)
  {
    uint64_t v7 = result;
    int v8 = a3 & 1;
    MEMORY[0x1F4188790](result);
    void v12[2] = v9;
    v12[3] = v10;
    uint64_t result = sub_1C0836A94(v11, v7, a2, v8, (uint64_t)sub_1C090A46C, (uint64_t)v12);
    if (!v4 && (result & 1) != 0)
    {
      v12[5] = v7;
      v12[6] = a2;
      BOOL v13 = v8 != 0;
      *(double *)&void v12[4] = a4;
      sub_1C0876AD8();
      sub_1C085F050(&qword_1EB86E4A0, (void (*)(uint64_t))sub_1C0876AD8);
      sub_1BFDC74E8();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D03B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  BOOL v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0836CD0(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08C8D54();
      sub_1C085F050(&qword_1EA19E780, (void (*)(uint64_t))sub_1C08C8D54);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D05F4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0836CD0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08C8D54();
      sub_1C085F050(&qword_1EA19E780, (void (*)(uint64_t))sub_1C08C8D54);
      sub_1BFE9DEBC(0, &qword_1EA1A0870, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C08EB0D8();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D0758(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C08377FC(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08B12EC();
      sub_1C085F050(&qword_1EB86E450, (void (*)(uint64_t))sub_1C08B12EC);
      sub_1BFE9DEBC(0, &qword_1EB880CF8, (uint64_t)&type metadata for FormatSlotTransform, MEMORY[0x1E4FBB320]);
      sub_1BFD8EB9C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D08BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C08380EC(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0862E48();
      sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D0AFC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C08380EC(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0862E48();
      sub_1C085F050(&qword_1EB86E410, (void (*)(uint64_t))sub_1C0862E48);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D0C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0838328(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0890B84();
      sub_1C085F050(&qword_1EB86E3F0, (void (*)(uint64_t))sub_1C0890B84);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D0EA0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0838328(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0890B84();
      sub_1C085F050(&qword_1EB86E3F0, (void (*)(uint64_t))sub_1C0890B84);
      sub_1BFE9DEBC(0, &qword_1EB86B0D8, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1BFE56F78();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D1004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C08387A0(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0865A40();
      sub_1C085F050(&qword_1EB86E3E0, (void (*)(uint64_t))sub_1C0865A40);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D1244(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C08387A0(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0865A40();
      sub_1C085F050(&qword_1EB86E3E0, (void (*)(uint64_t))sub_1C0865A40);
      sub_1BFE9DEBC(0, &qword_1EA1A0E40, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C0906644();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D13A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C08392CC(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0865180();
      sub_1C085F050(&qword_1EA19D230, (void (*)(uint64_t))sub_1C0865180);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D15E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0839744(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0875A04();
      sub_1C085F050(&qword_1EB86E3B0, (void (*)(uint64_t))sub_1C0875A04);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D1828(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0839744(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0875A04();
      sub_1C085F050(&qword_1EB86E3B0, (void (*)(uint64_t))sub_1C0875A04);
      sub_1BFE9DEBC(0, &qword_1EB879DD0, (uint64_t)&type metadata for FormatItemTrait, MEMORY[0x1E4FBB320]);
      sub_1BFE76C90();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D198C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0839980(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08CB96C();
      sub_1C085F050(&qword_1EB86E390, (void (*)(uint64_t))sub_1C08CB96C);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D1BCC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0839980(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08CB96C();
      sub_1C085F050(&qword_1EB86E390, (void (*)(uint64_t))sub_1C08CB96C);
      sub_1BFE9DEBC(0, &qword_1EB86B0C8, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1BFE871D0();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D1D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C0839DF8(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08C3594();
      sub_1C085F050(&qword_1EB86E370, (void (*)(uint64_t))sub_1C08C3594);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D1F70(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C0839DF8(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08C3594();
      sub_1C085F050(&qword_1EB86E370, (void (*)(uint64_t))sub_1C08C3594);
      sub_1BFE9DEBC(0, &qword_1EB86B0B8, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1BFE9A498();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D20D4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083A270(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086D140();
      sub_1C085F050(&qword_1EB86E360, (void (*)(uint64_t))sub_1C086D140);
      sub_1BFE9DEBC(0, &qword_1EB85C3D8, (uint64_t)&type metadata for FormatNodeStyle, MEMORY[0x1E4FBB320]);
      sub_1BFE0F71C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D2238(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if ((a1 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = a3;
  char v15 = sub_1C1520A9C();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    int v16 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v17[2] = a6;
    v17[3] = a7;
    uint64_t result = sub_1C083A270(a5, a2, v18, v16, (uint64_t)sub_1C090A46C, (uint64_t)v17);
    if (!v7 && (result & 1) != 0)
    {
      uint64_t v20 = a2;
      uint64_t v21 = v18;
      BOOL v22 = v16 != 0;
      char v19 = a1 & 1;
      sub_1C086D140();
      sub_1C085F050(&qword_1EB86E360, (void (*)(uint64_t))sub_1C086D140);
      sub_1BFD6CEB8();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D23D4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083A270(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086D140();
      sub_1C085F050(&qword_1EB86E360, (void (*)(uint64_t))sub_1C086D140);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
      sub_1BFE201AC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D2544(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083A270(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C086D140();
      sub_1C085F050(&qword_1EB86E360, (void (*)(uint64_t))sub_1C086D140);
      sub_1BFE9DEBC(0, &qword_1EB879CF8, (uint64_t)&type metadata for FormatType, MEMORY[0x1E4FBB320]);
      sub_1C08EE33C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D26A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083A4AC(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08BA078();
      sub_1C085F050(&qword_1EB86E350, (void (*)(uint64_t))sub_1C08BA078);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D28E8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083A4AC(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08BA078();
      sub_1C085F050(&qword_1EB86E350, (void (*)(uint64_t))sub_1C08BA078);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D2A4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if ((a3 & 1) != 0 || *(void *)(a1 + 16))
  {
    uint64_t v23 = a4;
    int v14 = a6 & 1;
    sub_1C00F64A4(a1, a2, a3 & 1);
    sub_1C00F64E0(a1, a2, a3 & 1);
    uint64_t v17 = sub_1C00F64E0(MEMORY[0x1E4FBC860], 0, 0);
    MEMORY[0x1F4188790](v17);
    v22[2] = a8;
    v22[3] = a9;
    uint64_t v18 = a5;
    uint64_t v19 = v23;
    uint64_t result = sub_1C083A6E8(a7, v23, v18, v14, (uint64_t)sub_1C090A46C, (uint64_t)v22);
    if (!v9 && (result & 1) != 0)
    {
      uint64_t v27 = v19;
      uint64_t v28 = v18;
      BOOL v29 = v14 != 0;
      uint64_t v24 = a1;
      uint64_t v25 = a2;
      char v26 = a3 & 1;
      sub_1C08B504C();
      sub_1C085F050(&qword_1EB86E340, (void (*)(uint64_t))sub_1C08B504C);
      sub_1C08EFB50();
      return sub_1C1520BAC();
    }
  }
  else
  {
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_1C00F64E0(v21, a2, 0);
    return sub_1C00F64E0(MEMORY[0x1E4FBC860], 0, 0);
  }
  return result;
}

uint64_t sub_1C06D2C2C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083A924(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C089F034();
      sub_1C085F050(&qword_1EB86E320, (void (*)(uint64_t))sub_1C089F034);
      sub_1BFE9DEBC(0, &qword_1EB879F00, (uint64_t)&type metadata for FormatOptionBindingModifier, MEMORY[0x1E4FBB320]);
      sub_1BFE4FE8C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D2D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083AB60(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C089D248();
      sub_1C085F050(&qword_1EA19DE80, (void (*)(uint64_t))sub_1C089D248);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D2FD0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083AB60(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C089D248();
      sub_1C085F050(&qword_1EA19DE80, (void (*)(uint64_t))sub_1C089D248);
      sub_1BFE9DEBC(0, &qword_1EA1A0AE0, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C08F55F4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D3134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083AFD8(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0894EF0();
      sub_1C085F050(&qword_1EB86E2F0, (void (*)(uint64_t))sub_1C0894EF0);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D3374(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083AFD8(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0894EF0();
      sub_1C085F050(&qword_1EB86E2F0, (void (*)(uint64_t))sub_1C0894EF0);
      sub_1BFE309D0(0, &qword_1EB86B098, type metadata accessor for FormatItemNodeStyle.Selector, MEMORY[0x1E4FBB320]);
      sub_1C003298C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D34E4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083B450(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C088BC28();
      sub_1C085F050(&qword_1EB86E2E0, (void (*)(uint64_t))sub_1C088BC28);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D3648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083BB04(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08742C4();
      sub_1C085F050(&qword_1EB86E2C0, (void (*)(uint64_t))sub_1C08742C4);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D3888(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083BB04(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08742C4();
      sub_1C085F050(&qword_1EB86E2C0, (void (*)(uint64_t))sub_1C08742C4);
      sub_1BFE309D0(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
      sub_1BFE201AC();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D39F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083BD40(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0862424();
      sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D3C38(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083BD40(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C0862424();
      sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D3D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083BF7C(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08CC93C();
      sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D3FDC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083BF7C(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08CC93C();
      sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D4140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083C1B8(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C0860AD8();
      sub_1C085F050(&qword_1EB86E280, (void (*)(uint64_t))sub_1C0860AD8);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D4380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB85F240, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  int v16 = (char *)&v25 - v15;
  sub_1C151632C();
  uint64_t v17 = sub_1C151635C();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  uint64_t result = sub_1BFE3053C((uint64_t)v16, (unint64_t *)&qword_1EB85F240, v13);
  if (v18 == 1)
  {
    uint64_t v20 = a1;
    int v21 = a5 & 1;
    MEMORY[0x1F4188790](result);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *(&v25 - 2) = v26;
    *(&v25 - 1) = v23;
    uint64_t v24 = v29;
    uint64_t result = sub_1C083C3F4(v22, a3, v29, v21, (uint64_t)sub_1C090A46C, (uint64_t)(&v25 - 4));
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a3;
      uint64_t v33 = v24;
      BOOL v34 = v21 != 0;
      uint64_t v30 = v20;
      uint64_t v31 = a2;
      sub_1C08C6064();
      sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D45C0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v15[2] = v9;
    v15[3] = v10;
    uint64_t result = sub_1C083C3F4(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v15);
    if (!v4 && (result & 1) != 0)
    {
      v15[5] = a2;
      v15[6] = a3;
      BOOL v16 = v8 != 0;
      void v15[4] = v7;
      sub_1C08C6064();
      sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
      uint64_t v14 = MEMORY[0x1E4FBB1A0];
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v14);
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D4744(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    int v8 = a4 & 1;
    MEMORY[0x1F4188790](result);
    v14[2] = v9;
    v14[3] = v10;
    uint64_t result = sub_1C083C3F4(v13, v11, v12, v8, (uint64_t)sub_1C090A46C, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      BOOL v15 = v8 != 0;
      void v14[4] = v7;
      sub_1C08C6064();
      sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
      sub_1BFE9DEBC(0, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
      sub_1BFF8B4C4();
      return sub_1C1520BAC();
    }
  }
  return result;
}

uint64_t sub_1C06D48A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1BFE94AD4(a1, a2, 1);
    uint64_t result = sub_1BFE94AD4(0, 0, 0);
  }
  else
  {
    sub_1BFE94AD4(a1, a2, 0);
    uint64_t result = sub_1BFE94AD4(0, 0, 0);
    if ((a1 & 1) == 0) {
      return result;
    }
  }
  int v21 = a3;
  int v18 = a6 & 1;
  MEMORY[0x1F4188790](result);
  void v20[2] = a8;
  v20[3] = v19;
  uint64_t result = sub_1C083C3F4(a7, a4, a5, v18, (uint64_t)sub_1C090A46C, (uint64_t)v20);
  if (!v8 && (result & 1) != 0)
  {
    uint64_t v25 = a4;
    uint64_t v26 = a5;
    BOOL v27 = v18 != 0;
    uint64_t v22 = a1;
    uint64_t v23 = a2;
    char v24 = v21 & 1;
    sub_1C08C6064();
    sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
    sub_1BFFB2AC8();
    return sub_1C1520BAC();
  }
  return result;
}

uint64_t sub_1C06D4A70(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((result & 1) == 0)
  {
    int v7 = a4 & 1;
    MEMORY[0x1F4188790](result);
    void v13[2] = v8;
    v13[3] = v9;
    uint64_t result = sub_1C083C630(v12, v10, v11, v7, (uint64_t)sub_1C090A46C, (uint64_t)v13);
    if (!v4 && (result & 1) != 0)
    {
      v13[5] = a2;
      v13[6] = a3;
      BOOL v14 = v7 != 0;
      char v15 = 0;
      sub_1C08BE788();
      sub_1C085F050(&qword_1EB86E260, (void (*)(uint64_t))sub_1C08BE788);
      sub_1C08ECD2C();
      return sub_1C1520BAC();
    }
  }
  return result;
}

unint64_t sub_1C06D4BA0(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  unint64_t v14 = result;
  if (result >> 61) {
    goto LABEL_5;
  }
  v24[5] = a5;
  uint64_t v15 = *(void *)(result + 24);
  __int16 v16 = *(_WORD *)(result + 32);
  char v17 = *(unsigned char *)(result + 34);
  uint64_t v18 = *(void *)(result + 40);
  __int16 v19 = *(_WORD *)(result + 80);
  uint64_t v32 = *(void *)(result + 16);
  uint64_t v33 = v15;
  __int16 v34 = v16;
  char v35 = v17;
  uint64_t v36 = v18;
  long long v20 = *(_OWORD *)(result + 64);
  long long v37 = *(_OWORD *)(result + 48);
  long long v38 = v20;
  __int16 v39 = v19;
  uint64_t v21 = qword_1EB88FBF0;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  v25[0] = qword_1EB88FBA8;
  v25[1] = qword_1EB88FBB0;
  __int16 v26 = word_1EB88FBB8;
  char v27 = byte_1EB88FBBA;
  uint64_t v28 = qword_1EB88FBC0;
  long long v29 = xmmword_1EB88FBC8;
  long long v30 = unk_1EB88FBD8;
  __int16 v31 = word_1EB88FBE8;
  char v22 = _s8NewsFeed16FormatSystemFontV2eeoiySbAC_ACtFZ_0((uint64_t)&v32, (uint64_t)v25);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_5:
    MEMORY[0x1F4188790](result);
    v24[2] = a6;
    v24[3] = a7;
    uint64_t result = sub_1C083C630(v23, a2, a3, a4 & 1, (uint64_t)sub_1C090A46C, (uint64_t)v24);
    if (!v8 && (result & 1) != 0)
    {
      uint64_t v32 = a2;
      uint64_t v33 = a3;
      LOBYTE(v34) = (a4 & 1) != 0;
      v25[0] = v14;
      sub_1C08BE788();
      sub_1C085F050(&qword_1EB86E260, (void (*)(uint64_t))sub_1C08BE788);
      sub_1BFE9A444();
      return sub_1C1520BAC();
    }
  }
  return result;
}