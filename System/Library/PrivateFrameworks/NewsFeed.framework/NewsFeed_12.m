uint64_t sub_1C03C06CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v17;
  uint64_t vars8;

  v3 = *(void *)(v2 + 48);
  if (!v3) {
    goto LABEL_10;
  }
  v6 = *(void *)(*(void *)a1 + 176);
  v7 = *(void *)(v3 + 24);
  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    v10 = *(void *)(v3 + 16);
    if ((v10 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_9;
  }
LABEL_4:
  v8 = *(void *)(a1 + v6 + *(int *)(type metadata accessor for FeedContext() + 40));
  v9 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1C00C9BB4(v9, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    v11 = sub_1C151EC6C();
    v13 = v12;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v15 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v13, a2, AssociatedTypeWitness);
    *(void *)(v13 + v15) = v10;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v11);
  }
LABEL_10:
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

uint64_t sub_1C03C09E0(uint64_t a1)
{
  if (*(void *)(v1 + 56))
  {
    uint64_t v4 = sub_1C03C2CBC(a1 + *(void *)(*(void *)a1 + 176));
    MEMORY[0x1F4188790](v4);
    sub_1C03C8710();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1BFDC6DF0(&qword_1EA19AB80, (void (*)(uint64_t))sub_1C03C8710);
    uint64_t v2 = sub_1C151E97C();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
  return v2;
}

uint64_t sub_1C03C0B30()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C0C64()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C0D98()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C0ECC()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C1000()
{
  if (*(void *)(v0 + 96))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C1134()
{
  if (*(void *)(v0 + 104))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C1268(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 120);
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(*(void *)a1 + 176);
  unint64_t v7 = *(void *)(v3 + 24);
  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    uint64_t v10 = *(void *)(v3 + 16);
    if ((v10 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v8 = *(void *)(a1 + v6 + *(int *)(type metadata accessor for FeedContext() + 40));
  uint64_t v9 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C00C9BB4(v9, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v11 = sub_1C151EC6C();
    uint64_t v13 = v12;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v13, a2, AssociatedTypeWitness);
    *(void *)(v13 + v15) = v10;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v11);
  }
LABEL_10:
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

uint64_t sub_1C03C157C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 112);
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(*(void *)a1 + 176);
  unint64_t v7 = *(void *)(v3 + 24);
  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    uint64_t v10 = *(void *)(v3 + 16);
    if ((v10 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v8 = *(void *)(a1 + v6 + *(int *)(type metadata accessor for FeedContext() + 40));
  uint64_t v9 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C00C9BB4(v9, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v11 = sub_1C151EC6C();
    uint64_t v13 = v12;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v13, a2, AssociatedTypeWitness);
    *(void *)(v13 + v15) = v10;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v11);
  }
LABEL_10:
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

uint64_t sub_1C03C1890()
{
  if (*(void *)(v0 + 128))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C19C4()
{
  if (*(void *)(v0 + 136))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C1AF8()
{
  if (*(void *)(v0 + 144))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C1C2C()
{
  if (*(void *)(v0 + 152))
  {
    uint64_t v1 = FeedGroupKnobsRuleSet.value(for:)();
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v2 = sub_1C151EC6C();
    uint64_t *v3 = v1;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v2);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C1D60(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 208);
  if (!v2) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(*(void *)a1 + 176);
  unint64_t v5 = *(void *)(v2 + 24);
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    if (*(unsigned char *)(v2 + 16) == 1) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v6 = *(void *)(a1 + v4 + *(int *)(type metadata accessor for FeedContext() + 40));
  int v7 = *(unsigned __int8 *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v7) = sub_1C03C7578(v7, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v8 = sub_1C151EC6C();
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v8);
  }
LABEL_10:
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

uint64_t sub_1C03C1F44(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 216);
  if (!v2) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(*(void *)a1 + 176);
  unint64_t v5 = *(void *)(v2 + 24);
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    if (*(unsigned char *)(v2 + 16) == 1) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v6 = *(void *)(a1 + v4 + *(int *)(type metadata accessor for FeedContext() + 40));
  int v7 = *(unsigned __int8 *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v7) = sub_1C03C7578(v7, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v8 = sub_1C151EC6C();
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v8);
  }
LABEL_10:
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

uint64_t sub_1C03C2128(uint64_t a1)
{
  if (*(void *)(v1 + 224))
  {
    uint64_t v2 = sub_1C03C2CBC(a1 + *(void *)(*(void *)a1 + 176));
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v3 = sub_1C151EC6C();
    *uint64_t v4 = v2;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v3);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C225C(uint64_t a1)
{
  if (*(void *)(v1 + 232))
  {
    uint64_t v2 = sub_1C03C2CBC(a1 + *(void *)(*(void *)a1 + 176));
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v3 = sub_1C151EC6C();
    *uint64_t v4 = v2;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v3);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C2390(uint64_t a1)
{
  if (*(void *)(v1 + 192))
  {
    uint64_t v2 = sub_1C03C2CBC(a1 + *(void *)(*(void *)a1 + 176));
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v3 = sub_1C151EC6C();
    *uint64_t v4 = v2;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v3);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C24C4(uint64_t a1)
{
  if (*(void *)(v1 + 200))
  {
    uint64_t v2 = sub_1C03C2CBC(a1 + *(void *)(*(void *)a1 + 176));
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v3 = sub_1C151EC6C();
    *uint64_t v4 = v2;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v3);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C25F8(uint64_t a1)
{
  if (*(void *)(v1 + 248))
  {
    uint64_t v2 = sub_1C03C2CBC(a1 + *(void *)(*(void *)a1 + 176));
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v3 = sub_1C151EC6C();
    *uint64_t v4 = v2;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v3);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t sub_1C03C272C(uint64_t a1)
{
  if (*(void *)(v1 + 256))
  {
    uint64_t v2 = sub_1C03C2CBC(a1 + *(void *)(*(void *)a1 + 176));
    type metadata accessor for FeedGroupEmitterRule();
    sub_1C152089C();
    swift_allocObject();
    uint64_t v3 = sub_1C151EC6C();
    *uint64_t v4 = v2;
    swift_storeEnumTagMultiPayload();
    return sub_1BFE94A38(v3);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule();
    return sub_1C151ECBC();
  }
}

uint64_t FeedGroupKnobsRules.emitterRankMultiplier(cursor:)(uint64_t a1, uint64_t a2)
{
  return sub_1C03C2A90(a1, a2, FeedGroupKnobsRules.emitterRankMultiplier(context:));
}

uint64_t FeedGroupKnobsRules.emitterRankMultiplier(context:)(uint64_t result)
{
  if (*(void *)v1)
  {
    uint64_t v2 = result;
    unint64_t v3 = *(void *)(*(void *)v1 + 24);
    if (!(v3 >> 62))
    {
      if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return result;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_4:
      uint64_t v4 = *(void *)(v2 + *(int *)(type metadata accessor for FeedContext() + 40));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03C71BC(v3, v4);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t FeedGroupKnobsRules.emitterBaseScore(cursor:)(uint64_t a1, uint64_t a2)
{
  return sub_1C03C2A90(a1, a2, FeedGroupKnobsRules.emitterBaseScore(context:));
}

uint64_t FeedGroupKnobsRules.emitterBaseScore(context:)(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 8);
  if (v2)
  {
    uint64_t v3 = result;
    unint64_t v4 = *(void *)(v2 + 24);
    if (!(v4 >> 62))
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return result;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_4:
      uint64_t v5 = *(void *)(v3 + *(int *)(type metadata accessor for FeedContext() + 40));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03C71BC(v4, v5);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t FeedGroupKnobsRules.emitterScoreThreshold(cursor:)(uint64_t a1, uint64_t a2)
{
  return sub_1C03C2A90(a1, a2, FeedGroupKnobsRules.emitterScoreThreshold(context:));
}

uint64_t sub_1C03C2A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(a1 + *(void *)(*(void *)a1 + 176));
}

uint64_t FeedGroupKnobsRules.emitterScoreThreshold(context:)(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = result;
    unint64_t v4 = *(void *)(v2 + 24);
    if (!(v4 >> 62))
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return result;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_4:
      uint64_t v5 = *(void *)(v3 + *(int *)(type metadata accessor for FeedContext() + 40));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03C71BC(v4, v5);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t FeedGroupKnobsRules.emitterSelectors(cursor:)(uint64_t a1)
{
  return FeedGroupKnobsRules.emitterSelectors(context:)(a1 + *(void *)(*(void *)a1 + 176));
}

uint64_t FeedGroupKnobsRules.emitterSelectors(context:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (!v2) {
    return MEMORY[0x1E4FBC870];
  }
  unint64_t v4 = *(void *)(v2 + 24);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v7 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
    return v7;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C03C7914(v6, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C03C2CBC(uint64_t a1)
{
  unint64_t v3 = *(void *)(v1 + 24);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v6 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v6;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v4 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C03C7914(v5, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t FeedGroupKnobsRules.daysOfWeekRules(context:)(uint64_t a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  type metadata accessor for FeedGroupEmitterRule();
  sub_1C151ED5C();
  sub_1C152089C();
  swift_allocObject();
  uint64_t v3 = sub_1C151EC6C();
  uint64_t v5 = v4;
  memcpy(v8, v1, sizeof(v8));
  *uint64_t v5 = sub_1C03C2F2C(a1);
  memcpy(v8, __dst, sizeof(v8));
  v5[1] = sub_1C03C31D4(a1);
  v8[0] = sub_1BFE94A38(v3);
  sub_1C151ED5C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v6 = sub_1C151EA0C();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C03C2F2C(uint64_t a1)
{
  if (*(void *)(v1 + 160))
  {
    uint64_t v2 = sub_1C03C2CBC(a1);
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v3 = v2 + 56;
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = -1;
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    uint64_t v6 = v5 & *(void *)(v2 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v6)
      {
        v6 &= v6 - 1;
      }
      else
      {
        int64_t v11 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v11 >= v7) {
          goto LABEL_26;
        }
        uint64_t v12 = *(void *)(v3 + 8 * v11);
        ++v9;
        if (!v12)
        {
          int64_t v9 = v11 + 1;
          if (v11 + 1 >= v7) {
            goto LABEL_26;
          }
          uint64_t v12 = *(void *)(v3 + 8 * v9);
          if (!v12)
          {
            int64_t v9 = v11 + 2;
            if (v11 + 2 >= v7) {
              goto LABEL_26;
            }
            uint64_t v12 = *(void *)(v3 + 8 * v9);
            if (!v12)
            {
              int64_t v9 = v11 + 3;
              if (v11 + 3 >= v7) {
                goto LABEL_26;
              }
              uint64_t v12 = *(void *)(v3 + 8 * v9);
              if (!v12)
              {
                int64_t v9 = v11 + 4;
                if (v11 + 4 >= v7) {
                  goto LABEL_26;
                }
                uint64_t v12 = *(void *)(v3 + 8 * v9);
                if (!v12)
                {
                  int64_t v13 = v11 + 5;
                  if (v13 >= v7)
                  {
LABEL_26:
                    swift_release();
                    swift_bridgeObjectRelease();
                    uint64_t v14 = sub_1C0605C10(v17);
                    swift_bridgeObjectRelease();
                    type metadata accessor for FeedGroupEmitterRule();
                    sub_1C152089C();
                    swift_allocObject();
                    uint64_t v15 = sub_1C151EC6C();
                    uint64_t *v16 = v14;
                    swift_storeEnumTagMultiPayload();
                    return sub_1BFE94A38(v15);
                  }
                  uint64_t v12 = *(void *)(v3 + 8 * v13);
                  if (!v12)
                  {
                    while (1)
                    {
                      int64_t v9 = v13 + 1;
                      if (__OFADD__(v13, 1)) {
                        goto LABEL_33;
                      }
                      if (v9 >= v7) {
                        goto LABEL_26;
                      }
                      uint64_t v12 = *(void *)(v3 + 8 * v9);
                      ++v13;
                      if (v12) {
                        goto LABEL_25;
                      }
                    }
                  }
                  int64_t v9 = v13;
                }
              }
            }
          }
        }
LABEL_25:
        uint64_t v6 = (v12 - 1) & v12;
      }
      uint64_t v10 = FeedDaysOfWeek.values.getter();
      uint64_t result = sub_1C10488A0(v10);
    }
  }
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

uint64_t sub_1C03C31D4(uint64_t a1)
{
  if (*(void *)(v1 + 168))
  {
    uint64_t v2 = sub_1C03C2CBC(a1);
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v3 = v2 + 56;
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = -1;
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    uint64_t v6 = v5 & *(void *)(v2 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v6)
      {
        v6 &= v6 - 1;
      }
      else
      {
        int64_t v11 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v11 >= v7) {
          goto LABEL_26;
        }
        uint64_t v12 = *(void *)(v3 + 8 * v11);
        ++v9;
        if (!v12)
        {
          int64_t v9 = v11 + 1;
          if (v11 + 1 >= v7) {
            goto LABEL_26;
          }
          uint64_t v12 = *(void *)(v3 + 8 * v9);
          if (!v12)
          {
            int64_t v9 = v11 + 2;
            if (v11 + 2 >= v7) {
              goto LABEL_26;
            }
            uint64_t v12 = *(void *)(v3 + 8 * v9);
            if (!v12)
            {
              int64_t v9 = v11 + 3;
              if (v11 + 3 >= v7) {
                goto LABEL_26;
              }
              uint64_t v12 = *(void *)(v3 + 8 * v9);
              if (!v12)
              {
                int64_t v9 = v11 + 4;
                if (v11 + 4 >= v7) {
                  goto LABEL_26;
                }
                uint64_t v12 = *(void *)(v3 + 8 * v9);
                if (!v12)
                {
                  int64_t v13 = v11 + 5;
                  if (v13 >= v7)
                  {
LABEL_26:
                    swift_release();
                    swift_bridgeObjectRelease();
                    uint64_t v14 = sub_1C0605C10(v17);
                    swift_bridgeObjectRelease();
                    type metadata accessor for FeedGroupEmitterRule();
                    sub_1C152089C();
                    swift_allocObject();
                    uint64_t v15 = sub_1C151EC6C();
                    uint64_t *v16 = v14;
                    swift_storeEnumTagMultiPayload();
                    return sub_1BFE94A38(v15);
                  }
                  uint64_t v12 = *(void *)(v3 + 8 * v13);
                  if (!v12)
                  {
                    while (1)
                    {
                      int64_t v9 = v13 + 1;
                      if (__OFADD__(v13, 1)) {
                        goto LABEL_33;
                      }
                      if (v9 >= v7) {
                        goto LABEL_26;
                      }
                      uint64_t v12 = *(void *)(v3 + 8 * v9);
                      ++v13;
                      if (v12) {
                        goto LABEL_25;
                      }
                    }
                  }
                  int64_t v9 = v13;
                }
              }
            }
          }
        }
LABEL_25:
        uint64_t v6 = (v12 - 1) & v12;
      }
      uint64_t v10 = FeedDaysOfWeek.values.getter();
      uint64_t result = sub_1C10488A0(v10);
    }
  }
  type metadata accessor for FeedGroupEmitterRule();
  return sub_1C151ECBC();
}

BOOL static FeedGroupKnobsRules.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v146 = a1[2];
  uint64_t v148 = a1[1];
  uint64_t v144 = a1[3];
  uint64_t v142 = a1[4];
  uint64_t v140 = a1[5];
  uint64_t v138 = a1[6];
  uint64_t v136 = a1[7];
  uint64_t v134 = a1[8];
  uint64_t v130 = a1[10];
  uint64_t v131 = a1[9];
  uint64_t v127 = a1[11];
  uint64_t v125 = a1[12];
  uint64_t v111 = a1[13];
  uint64_t v113 = a1[14];
  uint64_t v115 = a1[15];
  uint64_t v117 = a1[16];
  uint64_t v119 = a1[17];
  uint64_t v3 = a1[19];
  uint64_t v121 = a1[18];
  uint64_t v5 = a1[30];
  uint64_t v4 = a1[31];
  uint64_t v123 = a1[29];
  uint64_t v124 = a1[32];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v145 = a2[2];
  uint64_t v143 = a2[3];
  uint64_t v141 = a2[4];
  uint64_t v139 = a2[5];
  uint64_t v137 = a2[6];
  uint64_t v135 = a2[7];
  uint64_t v133 = a2[8];
  uint64_t v132 = a2[9];
  uint64_t v128 = a2[11];
  uint64_t v129 = a2[10];
  uint64_t v126 = a2[12];
  uint64_t v110 = a2[13];
  uint64_t v112 = a2[14];
  uint64_t v114 = a2[15];
  uint64_t v116 = a2[16];
  uint64_t v118 = a2[17];
  uint64_t v120 = a2[18];
  uint64_t v8 = a2[20];
  uint64_t v122 = a2[19];
  uint64_t v9 = a2[30];
  uint64_t v10 = a2[31];
  uint64_t v11 = a2[32];
  if (*a1)
  {
    if (!v6) {
      return 0;
    }
    if (*(double *)(v2 + 16) != *(double *)(v6 + 16)) {
      return 0;
    }
    uint64_t v92 = a1[20];
    uint64_t v93 = a2[21];
    uint64_t v94 = a1[21];
    uint64_t v95 = a2[22];
    uint64_t v96 = a1[22];
    uint64_t v97 = a2[23];
    uint64_t v98 = a1[23];
    uint64_t v99 = a2[24];
    uint64_t v100 = a1[24];
    uint64_t v101 = a2[25];
    uint64_t v102 = a1[25];
    uint64_t v103 = a2[26];
    uint64_t v104 = a1[26];
    uint64_t v105 = a2[27];
    uint64_t v106 = a1[27];
    uint64_t v107 = a2[28];
    uint64_t v108 = a1[28];
    uint64_t v109 = a2[29];
    unint64_t v12 = *(void *)(v2 + 24);
    uint64_t v90 = a2[30];
    uint64_t v13 = a1[30];
    uint64_t v14 = a2[31];
    uint64_t v15 = a1[31];
    uint64_t v16 = *(void *)(v6 + 24);
    swift_retain();
    swift_retain();
    uint64_t v17 = v16;
    uint64_t v4 = v15;
    uint64_t v10 = v14;
    uint64_t v5 = v13;
    uint64_t v9 = v90;
    LOBYTE(v12) = sub_1C00F309C(v12, v17);
    swift_release();
    swift_release();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v92 = a1[20];
    uint64_t v93 = a2[21];
    uint64_t v94 = a1[21];
    uint64_t v95 = a2[22];
    uint64_t v96 = a1[22];
    uint64_t v97 = a2[23];
    uint64_t v98 = a1[23];
    uint64_t v99 = a2[24];
    uint64_t v100 = a1[24];
    uint64_t v101 = a2[25];
    uint64_t v102 = a1[25];
    uint64_t v103 = a2[26];
    uint64_t v104 = a1[26];
    uint64_t v105 = a2[27];
    uint64_t v106 = a1[27];
    uint64_t v107 = a2[28];
    uint64_t v108 = a1[28];
    uint64_t v109 = a2[29];
    if (v6) {
      return 0;
    }
  }
  if (v148)
  {
    if (!v7) {
      return 0;
    }
    if (*(double *)(v148 + 16) != *(double *)(v7 + 16)) {
      return 0;
    }
    unint64_t v18 = *(void *)(v148 + 24);
    uint64_t v19 = *(void *)(v7 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v18) = sub_1C00F309C(v18, v19);
    swift_release();
    swift_release();
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v146)
  {
    if (!v145) {
      return 0;
    }
    if (*(double *)(v146 + 16) != *(double *)(v145 + 16)) {
      return 0;
    }
    uint64_t v91 = v9;
    unint64_t v20 = *(void *)(v146 + 24);
    uint64_t v21 = *(void *)(v145 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v20) = sub_1C00F309C(v20, v21);
    swift_release();
    swift_release();
    if ((v20 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v91 = v9;
    if (v145) {
      return 0;
    }
  }
  if (v144)
  {
    if (!v143) {
      return 0;
    }
    uint64_t v22 = v10;
    uint64_t v23 = *(void *)(v144 + 16);
    uint64_t v24 = *(void *)(v143 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BFEFAE14(v23, v24) & 1) == 0) {
      goto LABEL_30;
    }
    char v25 = sub_1C00F4B50(*(void *)(v144 + 24), *(void *)(v143 + 24));
    swift_release();
    swift_release();
    uint64_t v10 = v22;
    if ((v25 & 1) == 0) {
      return 0;
    }
  }
  else if (v143)
  {
    return 0;
  }
  if (v142)
  {
    if (!v141) {
      return 0;
    }
    if (*(void *)(v142 + 16) != *(void *)(v141 + 16)) {
      return 0;
    }
    uint64_t v26 = *(void *)(v142 + 24);
    uint64_t v27 = v10;
    uint64_t v28 = *(void *)(v141 + 24);
    swift_retain();
    swift_retain();
    uint64_t v29 = v28;
    uint64_t v10 = v27;
    LOBYTE(v26) = sub_1C00F2DD4(v26, v29);
    swift_release();
    swift_release();
    if ((v26 & 1) == 0) {
      return 0;
    }
  }
  else if (v141)
  {
    return 0;
  }
  if (v140)
  {
    if (!v139) {
      return 0;
    }
    if (*(void *)(v140 + 16) != *(void *)(v139 + 16)) {
      return 0;
    }
    uint64_t v31 = *(void *)(v140 + 24);
    uint64_t v32 = v10;
    uint64_t v33 = *(void *)(v139 + 24);
    swift_retain();
    swift_retain();
    uint64_t v34 = v33;
    uint64_t v10 = v32;
    LOBYTE(v31) = sub_1C00F2DD4(v31, v34);
    swift_release();
    swift_release();
    if ((v31 & 1) == 0) {
      return 0;
    }
  }
  else if (v139)
  {
    return 0;
  }
  if (v138)
  {
    if (!v137) {
      return 0;
    }
    uint64_t v147 = v10;
    if (*(void *)(v138 + 16) != *(void *)(v137 + 16)) {
      return 0;
    }
    uint64_t v35 = v8;
    uint64_t v36 = *(void *)(v138 + 24);
    uint64_t v37 = *(void *)(v137 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v36) = sub_1C00F2DD4(v36, v37);
    swift_release();
    swift_release();
    if ((v36 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v35 = v8;
    uint64_t v147 = v10;
    if (v137) {
      return 0;
    }
  }
  if (v136)
  {
    if (!v135) {
      return 0;
    }
    if ((sub_1C00F4798(*(void *)(v136 + 16), *(void *)(v135 + 16)) & 1) == 0) {
      return 0;
    }
    unint64_t v38 = *(void *)(v136 + 24);
    uint64_t v39 = *(void *)(v135 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v38) = sub_1C00F4820(v38, v39);
    swift_release();
    swift_release();
    if ((v38 & 1) == 0) {
      return 0;
    }
  }
  else if (v135)
  {
    return 0;
  }
  if (v134)
  {
    if (!v133) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v40 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v40 & 1) == 0) {
      return 0;
    }
  }
  else if (v133)
  {
    return 0;
  }
  if (v131)
  {
    if (!v132) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v41 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v41 & 1) == 0) {
      return 0;
    }
  }
  else if (v132)
  {
    return 0;
  }
  if (v130)
  {
    if (!v129) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v42 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v42 & 1) == 0) {
      return 0;
    }
  }
  else if (v129)
  {
    return 0;
  }
  if (v127)
  {
    if (!v128) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v43 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v43 & 1) == 0) {
      return 0;
    }
  }
  else if (v128)
  {
    return 0;
  }
  if (v125)
  {
    if (!v126) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v44 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v44 & 1) == 0) {
      return 0;
    }
  }
  else if (v126)
  {
    return 0;
  }
  if (v111)
  {
    if (!v110) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v45 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v45 & 1) == 0) {
      return 0;
    }
  }
  else if (v110)
  {
    return 0;
  }
  if (v113)
  {
    if (!v112) {
      return 0;
    }
    if (*(void *)(v113 + 16) != *(void *)(v112 + 16)) {
      return 0;
    }
    uint64_t v46 = *(void *)(v113 + 24);
    uint64_t v47 = *(void *)(v112 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v46) = sub_1C00F2DD4(v46, v47);
    swift_release();
    swift_release();
    if ((v46 & 1) == 0) {
      return 0;
    }
  }
  else if (v112)
  {
    return 0;
  }
  if (v115)
  {
    if (!v114) {
      return 0;
    }
    if (*(void *)(v115 + 16) != *(void *)(v114 + 16)) {
      return 0;
    }
    uint64_t v48 = *(void *)(v115 + 24);
    uint64_t v49 = *(void *)(v114 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v48) = sub_1C00F2DD4(v48, v49);
    swift_release();
    swift_release();
    if ((v48 & 1) == 0) {
      return 0;
    }
  }
  else if (v114)
  {
    return 0;
  }
  if (v117)
  {
    if (!v116) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v50 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v50 & 1) == 0) {
      return 0;
    }
  }
  else if (v116)
  {
    return 0;
  }
  if (v119)
  {
    if (!v118) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v51 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v51 & 1) == 0) {
      return 0;
    }
  }
  else if (v118)
  {
    return 0;
  }
  if (v121)
  {
    if (!v120) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v52 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v52 & 1) == 0) {
      return 0;
    }
  }
  else if (v120)
  {
    return 0;
  }
  if (v3)
  {
    if (!v122) {
      return 0;
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupKnobsRuleSet();
    swift_retain();
    swift_retain();
    char v53 = static FeedGroupKnobsRuleSet.== infix(_:_:)();
    swift_release();
    swift_release();
    if ((v53 & 1) == 0) {
      return 0;
    }
  }
  else if (v122)
  {
    return 0;
  }
  if (v92)
  {
    if (!v35) {
      return 0;
    }
    uint64_t v54 = *(void *)(v92 + 16);
    uint64_t v55 = *(void *)(v35 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00B0B60(v54, v55) & 1) == 0) {
      goto LABEL_30;
    }
    char v56 = sub_1C00F4780(*(void *)(v92 + 24), *(void *)(v35 + 24));
    swift_release();
    swift_release();
    if ((v56 & 1) == 0) {
      return 0;
    }
  }
  else if (v35)
  {
    return 0;
  }
  if (v94)
  {
    if (!v93) {
      return 0;
    }
    uint64_t v57 = *(void *)(v94 + 16);
    uint64_t v58 = *(void *)(v93 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00B0B60(v57, v58) & 1) == 0) {
      goto LABEL_30;
    }
    char v59 = sub_1C00F4780(*(void *)(v94 + 24), *(void *)(v93 + 24));
    swift_release();
    swift_release();
    if ((v59 & 1) == 0) {
      return 0;
    }
  }
  else if (v93)
  {
    return 0;
  }
  if (v96)
  {
    if (!v95) {
      return 0;
    }
    uint64_t v60 = *(void *)(v96 + 16);
    uint64_t v61 = *(void *)(v95 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00B073C(v60, v61) & 1) == 0) {
      goto LABEL_30;
    }
    char v62 = sub_1C00F4768(*(void *)(v96 + 24), *(void *)(v95 + 24));
    swift_release();
    swift_release();
    if ((v62 & 1) == 0) {
      return 0;
    }
  }
  else if (v95)
  {
    return 0;
  }
  if (v98)
  {
    if (!v97) {
      return 0;
    }
    uint64_t v63 = *(void *)(v98 + 16);
    uint64_t v64 = *(void *)(v97 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00B073C(v63, v64) & 1) == 0) {
      goto LABEL_30;
    }
    char v65 = sub_1C00F4768(*(void *)(v98 + 24), *(void *)(v97 + 24));
    swift_release();
    swift_release();
    if ((v65 & 1) == 0) {
      return 0;
    }
  }
  else if (v97)
  {
    return 0;
  }
  if (v100)
  {
    if (!v99) {
      return 0;
    }
    uint64_t v66 = *(void *)(v100 + 16);
    uint64_t v67 = *(void *)(v99 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00B0490(v66, v67) & 1) == 0) {
      goto LABEL_30;
    }
    char v68 = sub_1C00F4750(*(void *)(v100 + 24), *(void *)(v99 + 24));
    swift_release();
    swift_release();
    if ((v68 & 1) == 0) {
      return 0;
    }
  }
  else if (v99)
  {
    return 0;
  }
  if (v102)
  {
    if (!v101) {
      return 0;
    }
    uint64_t v69 = *(void *)(v102 + 16);
    uint64_t v70 = *(void *)(v101 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00B0490(v69, v70) & 1) == 0) {
      goto LABEL_30;
    }
    char v71 = sub_1C00F4750(*(void *)(v102 + 24), *(void *)(v101 + 24));
    swift_release();
    swift_release();
    if ((v71 & 1) == 0) {
      return 0;
    }
  }
  else if (v101)
  {
    return 0;
  }
  if (v104)
  {
    if (!v103) {
      return 0;
    }
    if (*(unsigned __int8 *)(v104 + 16) != *(unsigned __int8 *)(v103 + 16)) {
      return 0;
    }
    uint64_t v72 = *(void *)(v104 + 24);
    uint64_t v73 = *(void *)(v103 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v72) = sub_1C00F369C(v72, v73);
    swift_release();
    swift_release();
    if ((v72 & 1) == 0) {
      return 0;
    }
  }
  else if (v103)
  {
    return 0;
  }
  if (v106)
  {
    if (!v105) {
      return 0;
    }
    if (*(unsigned __int8 *)(v106 + 16) != *(unsigned __int8 *)(v105 + 16)) {
      return 0;
    }
    uint64_t v74 = *(void *)(v106 + 24);
    uint64_t v75 = *(void *)(v105 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v74) = sub_1C00F369C(v74, v75);
    swift_release();
    swift_release();
    if ((v74 & 1) == 0) {
      return 0;
    }
  }
  else if (v105)
  {
    return 0;
  }
  if (v108)
  {
    if (!v107) {
      return 0;
    }
    uint64_t v76 = *(void *)(v108 + 16);
    uint64_t v77 = *(void *)(v107 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BFEC3A64(v76, v77) & 1) == 0) {
      goto LABEL_30;
    }
    char v78 = sub_1C00F4738(*(void *)(v108 + 24), *(void *)(v107 + 24));
    swift_release();
    swift_release();
    if ((v78 & 1) == 0) {
      return 0;
    }
  }
  else if (v107)
  {
    return 0;
  }
  if (v123)
  {
    if (!v109) {
      return 0;
    }
    uint64_t v79 = *(void *)(v123 + 16);
    uint64_t v80 = *(void *)(v109 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BFEC3A64(v79, v80) & 1) == 0) {
      goto LABEL_30;
    }
    char v81 = sub_1C00F4738(*(void *)(v123 + 24), *(void *)(v109 + 24));
    swift_release();
    swift_release();
    if ((v81 & 1) == 0) {
      return 0;
    }
  }
  else if (v109)
  {
    return 0;
  }
  if (v5)
  {
    if (!v91) {
      return 0;
    }
    swift_retain();
    uint64_t v82 = swift_retain();
    char v83 = sub_1C03BF3E0(v82, v91);
    swift_release();
    swift_release();
    if ((v83 & 1) == 0) {
      return 0;
    }
  }
  else if (v91)
  {
    return 0;
  }
  if (v4)
  {
    if (!v147) {
      return 0;
    }
    uint64_t v84 = *(void *)(v4 + 16);
    uint64_t v85 = *(void *)(v147 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00B0120(v84, v85) & 1) == 0) {
      goto LABEL_30;
    }
    char v86 = sub_1C00F41AC(*(void *)(v4 + 24), *(void *)(v147 + 24));
    swift_release();
    swift_release();
    if ((v86 & 1) == 0) {
      return 0;
    }
  }
  else if (v147)
  {
    return 0;
  }
  if (v124)
  {
    if (!v11) {
      return 0;
    }
    uint64_t v87 = *(void *)(v124 + 16);
    uint64_t v88 = *(void *)(v11 + 16);
    swift_retain();
    swift_retain();
    if (sub_1C00B0120(v87, v88))
    {
      char v89 = sub_1C00F41AC(*(void *)(v124 + 24), *(void *)(v11 + 24));
      swift_release();
      swift_release();
      return (v89 & 1) != 0;
    }
LABEL_30:
    swift_release();
    swift_release();
    return 0;
  }
  return !v11;
}

uint64_t sub_1C03C5000(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746C754D6B6E6172 && a2 == 0xEE007265696C7069;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F635365736162 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72685465726F6373 && a2 == 0xEE00646C6F687365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x727563634F78616DLL && a2 == 0xED000065636E6572 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160D4D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C160D4F0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C160D510 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465646563657270 && a2 == 0xEA00000000007942 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C160D530 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6563657250746F6ELL && a2 == 0xED00007942646564 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160D550 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C160D570 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C160D590 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x73694470756F7267 && a2 == 0xED000065636E6174 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160D5B0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6465776F6C6C6F66 && a2 == 0xEA00000000007942 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C160D5D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6F6C6C6F46746F6ELL && a2 == 0xED00007942646577 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160D5F0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6557664F73796164 && a2 == 0xEA00000000006B65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x4F73796144746F6ELL && a2 == 0xED00006B65655766 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x44664F73656D6974 && a2 == 0xEA00000000007961 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x73656D6954746F6ELL && a2 == 0xED0000796144664FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x65646F4D64656566 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x4D64656546746F6ELL && a2 == 0xEC0000007365646FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x6B53737961776C61 && a2 == 0xEA00000000007069 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C160D610 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C15FD8F0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C15FD910 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x4F746E65746E6F63 && a2 == 0xEE0079616C726576 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C160D630 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160D650)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 32;
    }
    else {
      return 33;
    }
  }
}

uint64_t sub_1C03C5E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03C5000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C03C5E30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C03C7CD4();
  *a1 = result;
  return result;
}

uint64_t sub_1C03C5E5C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C03C5EB0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FeedGroupKnobsRules.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v49 = *(void *)(a2 + 24);
  uint64_t v50 = v4;
  type metadata accessor for FeedGroupKnobsRules.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152083C();
  uint64_t v59 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v9 = *v2;
  uint64_t v8 = v2[1];
  uint64_t v56 = v2[2];
  uint64_t v57 = v8;
  uint64_t v10 = v2[3];
  uint64_t v54 = v2[4];
  uint64_t v55 = v10;
  uint64_t v11 = v2[5];
  uint64_t v52 = v2[6];
  uint64_t v53 = v11;
  uint64_t v51 = v2[7];
  uint64_t v12 = v2[8];
  uint64_t v47 = v2[9];
  uint64_t v48 = v12;
  uint64_t v13 = v2[10];
  uint64_t v45 = v2[11];
  uint64_t v46 = v13;
  uint64_t v44 = v2[12];
  uint64_t v43 = v2[13];
  uint64_t v42 = v2[14];
  uint64_t v41 = v2[15];
  uint64_t v40 = v2[16];
  uint64_t v24 = v2[17];
  uint64_t v25 = v2[18];
  uint64_t v26 = v2[19];
  uint64_t v27 = v2[20];
  uint64_t v28 = v2[21];
  uint64_t v29 = v2[22];
  uint64_t v30 = v2[23];
  uint64_t v31 = v2[24];
  uint64_t v32 = v2[25];
  uint64_t v33 = v2[26];
  uint64_t v34 = v2[27];
  uint64_t v35 = v2[28];
  uint64_t v36 = v2[29];
  uint64_t v37 = v2[30];
  uint64_t v38 = v2[31];
  uint64_t v39 = v2[32];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  uint64_t v60 = v9;
  uint64_t v14 = v7;
  LOBYTE(v65) = 0;
  sub_1BFDC6EB0();
  sub_1BFDC6DF0(&qword_1EB865380, (void (*)(uint64_t))sub_1BFDC6EB0);
  uint64_t v15 = v58;
  sub_1C152078C();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v7, v5);
  }
  uint64_t v18 = v55;
  uint64_t v17 = v56;
  uint64_t v20 = v53;
  uint64_t v19 = v54;
  uint64_t v60 = v57;
  LOBYTE(v65) = 1;
  sub_1C152078C();
  uint64_t v60 = v17;
  LOBYTE(v65) = 2;
  sub_1C152078C();
  uint64_t v60 = v18;
  LOBYTE(v65) = 3;
  sub_1BFDC70BC();
  sub_1BFDC6DF0(&qword_1EB865200, (void (*)(uint64_t))sub_1BFDC70BC);
  sub_1C152078C();
  uint64_t v60 = v19;
  LOBYTE(v65) = 4;
  sub_1BFDC6E38();
  sub_1BFDC6DF0(qword_1EB865388, (void (*)(uint64_t))sub_1BFDC6E38);
  sub_1C152078C();
  uint64_t v60 = v20;
  LOBYTE(v65) = 5;
  sub_1C152078C();
  uint64_t v60 = v52;
  LOBYTE(v65) = 6;
  sub_1C152078C();
  uint64_t v60 = v51;
  LOBYTE(v65) = 7;
  sub_1BFDC6FB8();
  sub_1BFDC6DF0(&qword_1EB865280, (void (*)(uint64_t))sub_1BFDC6FB8);
  sub_1C152078C();
  uint64_t v65 = v48;
  char v64 = 8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v57 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v58 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t v60 = AssociatedTypeWitness;
  uint64_t v61 = AssociatedConformanceWitness;
  uint64_t v62 = v58;
  uint64_t v63 = v23;
  type metadata accessor for FeedGroupKnobsRuleSet();
  swift_getWitnessTable();
  uint64_t v58 = (uint64_t)v14;
  sub_1C152078C();
  uint64_t v60 = v47;
  LOBYTE(v65) = 9;
  sub_1C152078C();
  uint64_t v60 = v46;
  LOBYTE(v65) = 10;
  sub_1C152078C();
  uint64_t v60 = v45;
  LOBYTE(v65) = 11;
  sub_1C152078C();
  uint64_t v60 = v44;
  LOBYTE(v65) = 12;
  sub_1C152078C();
  uint64_t v60 = v43;
  LOBYTE(v65) = 13;
  sub_1C152078C();
  uint64_t v60 = v42;
  LOBYTE(v65) = 14;
  sub_1C152078C();
  uint64_t v60 = v41;
  LOBYTE(v65) = 15;
  sub_1C152078C();
  uint64_t v60 = v40;
  LOBYTE(v65) = 16;
  sub_1C152078C();
  uint64_t v60 = v24;
  LOBYTE(v65) = 17;
  sub_1C152078C();
  uint64_t v60 = v25;
  LOBYTE(v65) = 18;
  sub_1C152078C();
  uint64_t v60 = v26;
  LOBYTE(v65) = 19;
  sub_1C152078C();
  uint64_t v60 = v27;
  LOBYTE(v65) = 20;
  sub_1BFDC72C0();
  sub_1BFDC6DF0(&qword_1EB8651E8, (void (*)(uint64_t))sub_1BFDC72C0);
  sub_1C152078C();
  uint64_t v60 = v28;
  LOBYTE(v65) = 21;
  sub_1C152078C();
  uint64_t v60 = v29;
  LOBYTE(v65) = 22;
  sub_1BFDC7134();
  sub_1BFDC6DF0(&qword_1EB8651F8, (void (*)(uint64_t))sub_1BFDC7134);
  sub_1C152078C();
  uint64_t v60 = v30;
  LOBYTE(v65) = 23;
  sub_1C152078C();
  uint64_t v60 = v31;
  LOBYTE(v65) = 24;
  sub_1BFDC723C();
  sub_1BFDC6DF0(&qword_1EB862C70, (void (*)(uint64_t))sub_1BFDC723C);
  sub_1C152078C();
  uint64_t v60 = v32;
  LOBYTE(v65) = 25;
  sub_1C152078C();
  uint64_t v60 = v33;
  LOBYTE(v65) = 26;
  sub_1BFDC6F40();
  sub_1BFDC6DF0(&qword_1EB865378, (void (*)(uint64_t))sub_1BFDC6F40);
  sub_1C152078C();
  uint64_t v60 = v34;
  LOBYTE(v65) = 27;
  sub_1C152078C();
  uint64_t v60 = v35;
  LOBYTE(v65) = 28;
  sub_1BFDC71B8();
  sub_1BFDC6DF0(&qword_1EB8651F0, (void (*)(uint64_t))sub_1BFDC71B8);
  sub_1C152078C();
  uint64_t v60 = v36;
  LOBYTE(v65) = 29;
  sub_1C152078C();
  uint64_t v60 = v37;
  LOBYTE(v65) = 30;
  sub_1C03C6FC0();
  sub_1BFDC6DF0(&qword_1EB86FB00, (void (*)(uint64_t))sub_1C03C6FC0);
  sub_1C152078C();
  uint64_t v60 = v38;
  LOBYTE(v65) = 31;
  sub_1C03C7044();
  sub_1BFDC6DF0(&qword_1EB86FAF8, (void (*)(uint64_t))sub_1C03C7044);
  sub_1C152078C();
  uint64_t v60 = v39;
  LOBYTE(v65) = 32;
  sub_1C152078C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v58, v57);
}

uint64_t sub_1C03C6D28(void *a1, uint64_t a2)
{
  return FeedGroupKnobsRules.encode(to:)(a1, a2);
}

BOOL sub_1C03C6D40(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupKnobsRules.== infix(_:_:)(a1, a2);
}

uint64_t sub_1C03C6D4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*a1 < 0)
  {
    uint64_t v12 = type metadata accessor for FeedGroupEmitterRule();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
  else
  {
    uint64_t v7 = a1[1];
    uint64_t v6 = a1[2];
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    sub_1BFDC7470();
    uint64_t v9 = (void *)(a3 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a3, a2, AssociatedTypeWitness);
    *uint64_t v9 = v4;
    v9[1] = v7;
    v9[2] = v6;
    uint64_t v10 = type metadata accessor for FeedGroupEmitterRule();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 0, 1, v10);
  }
}

uint64_t sub_1C03C6F7C()
{
  return sub_1C151ECBC();
}

void sub_1C03C6FC0()
{
  if (!qword_1EB893A60[0])
  {
    sub_1C01A4DA8();
    sub_1C01A4DFC();
    sub_1C01A4E50();
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v1) {
      atomic_store(v0, qword_1EB893A60);
    }
  }
}

void sub_1C03C7044()
{
  if (!qword_1EB894260)
  {
    sub_1C03C70C8();
    sub_1C03C711C();
    sub_1C0362C00();
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleSet();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894260);
    }
  }
}

unint64_t sub_1C03C70C8()
{
  unint64_t result = qword_1EB894280;
  if (!qword_1EB894280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894280);
  }
  return result;
}

unint64_t sub_1C03C711C()
{
  unint64_t result = qword_1EB894268;
  if (!qword_1EB894268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894268);
  }
  return result;
}

uint64_t sub_1C03C7170(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1C03C7914(a1, a2, a3);
}

uint64_t sub_1C03C71BC(unint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  unint64_t v2 = a1;
  v36[2] = *MEMORY[0x1E4F143B8];
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  uint64_t v4 = 0;
  unint64_t v29 = v2;
  unint64_t v30 = v2 & 0xC000000000000001;
  unint64_t v27 = v2 + 32;
  uint64_t v28 = v3;
  while (1)
  {
    if (v30)
    {
      uint64_t v5 = MEMORY[0x1C18C7CB0](v4, v2);
      BOOL v6 = __OFADD__(v4++, 1);
      if (v6) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(v27 + 8 * v4);
      swift_retain();
      BOOL v6 = __OFADD__(v4++, 1);
      if (v6)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1C15204BC();
        if (!v3) {
          return swift_bridgeObjectRelease();
        }
        goto LABEL_3;
      }
    }
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v5 + 24);
    v36[0] = *(void *)(v5 + 16);
    v36[1] = v7;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BFEF53C0(v36);
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    if (v4 == v3) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v32 = v5;
  uint64_t v33 = v4;
  uint64_t v31 = v8;
  uint64_t v10 = (uint64_t *)(v8 + 64);
  while (1)
  {
    uint64_t v12 = *(v10 - 1);
    uint64_t v11 = *v10;
    char v13 = *(unsigned char *)(v12 + 32);
    unsigned int v14 = v13 & 0x3F;
    unint64_t v15 = (unint64_t)((1 << v13) + 63) >> 6;
    size_t v16 = 8 * v15;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v14 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v18 = (char *)swift_slowAlloc();
    bzero(v18, v16);
    id v21 = v35;
    uint64_t v22 = sub_1BFEFB09C((uint64_t)v18, v15, v12, v34);
    id v35 = v21;
    if (v21) {
      goto LABEL_29;
    }
    uint64_t v20 = v22;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v18, -1, -1);
LABEL_23:
    char v23 = sub_1BFEFAE14(v20, v12);
    swift_release();
    if (v23)
    {
      char v24 = sub_1BFEFB810(v34, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24)
      {
LABEL_25:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        unint64_t v2 = v29;
        uint64_t v4 = v33;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v10 += 5;
    if (!--v9) {
      goto LABEL_25;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v18 = (char *)&v27 - ((v16 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v18, v16);
  id v19 = v35;
  uint64_t v20 = sub_1BFEFB09C((uint64_t)v18, v15, v12, v34);
  swift_bridgeObjectRelease();
  id v35 = v19;
  if (!v19) {
    goto LABEL_23;
  }
  id v26 = v35;
  swift_willThrow();

  __break(1u);
LABEL_29:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1C18C9B00](v18, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C03C7558@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03C7578(int a1, unint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  unint64_t v3 = a2;
  int v29 = a1;
  v39[2] = *MEMORY[0x1E4F143B8];
  if (a2 >> 62) {
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    return v29 & 1;
  }
LABEL_3:
  uint64_t v5 = 0;
  unint64_t v32 = v3;
  unint64_t v33 = v3 & 0xC000000000000001;
  unint64_t v30 = v3 + 32;
  uint64_t v31 = v4;
  while (1)
  {
    if (v33)
    {
      uint64_t v6 = MEMORY[0x1C18C7CB0](v5, v3);
      BOOL v7 = __OFADD__(v5++, 1);
      if (v7) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(v30 + 8 * v5);
      swift_retain();
      BOOL v7 = __OFADD__(v5++, 1);
      if (v7)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_1C15204BC();
        if (!v4) {
          goto LABEL_29;
        }
        goto LABEL_3;
      }
    }
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)(v6 + 24);
    v39[0] = *(void *)(v6 + 16);
    v39[1] = v8;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1BFEF53C0(v39);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    if (v5 == v4) {
      goto LABEL_29;
    }
  }
  uint64_t v35 = v6;
  uint64_t v36 = v5;
  uint64_t v34 = v9;
  uint64_t v11 = (uint64_t *)(v9 + 64);
  while (1)
  {
    uint64_t v12 = *(v11 - 1);
    uint64_t v13 = *v11;
    char v14 = *(unsigned char *)(v12 + 32);
    unsigned int v15 = v14 & 0x3F;
    unint64_t v16 = (unint64_t)((1 << v14) + 63) >> 6;
    size_t v17 = 8 * v16;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v15 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    id v19 = (char *)swift_slowAlloc();
    bzero(v19, v17);
    id v22 = v38;
    uint64_t v23 = sub_1BFEFB09C((uint64_t)v19, v16, v12, v37);
    id v38 = v22;
    if (v22) {
      goto LABEL_30;
    }
    uint64_t v21 = v23;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v19, -1, -1);
LABEL_23:
    char v24 = sub_1BFEFAE14(v21, v12);
    swift_release();
    if (v24)
    {
      char v25 = sub_1BFEFB810(v37, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
        int v29 = *(unsigned __int8 *)(v35 + 32);
LABEL_26:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v4 = v31;
        unint64_t v3 = v32;
        uint64_t v5 = v36;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v11 += 5;
    if (!--v10) {
      goto LABEL_26;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  id v19 = (char *)&v28 - ((v17 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v19, v17);
  id v20 = v38;
  uint64_t v21 = sub_1BFEFB09C((uint64_t)v19, v16, v12, v37);
  swift_bridgeObjectRelease();
  id v38 = v20;
  if (!v20) {
    goto LABEL_23;
  }
  id v27 = v38;
  swift_willThrow();

  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1C18C9B00](v19, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C03C7914(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v40 = a3;
  unint64_t v5 = a2;
  v42[2] = *MEMORY[0x1E4F143B8];
  uint64_t v33 = a1;
  if (a2 >> 62) {
    goto LABEL_28;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    return v33;
  }
LABEL_3:
  uint64_t v7 = 0;
  unint64_t v35 = v5;
  unint64_t v36 = v5 & 0xC000000000000001;
  unint64_t v32 = v5 + 32;
  uint64_t v34 = v6;
  while (1)
  {
    if (v36)
    {
      uint64_t v8 = MEMORY[0x1C18C7CB0](v7, v5);
      BOOL v9 = __OFADD__(v7++, 1);
      if (v9) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(v32 + 8 * v7);
      swift_retain();
      BOOL v9 = __OFADD__(v7++, 1);
      if (v9)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_1C15204BC();
        if (!v6) {
          goto LABEL_29;
        }
        goto LABEL_3;
      }
    }
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v39 = v8;
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    v42[0] = v10;
    v42[1] = v11;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BFEF53C0(v42);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_5:
    swift_release();
    if (v7 == v6) {
      goto LABEL_29;
    }
  }
  uint64_t v37 = v12;
  uint64_t v38 = v7;
  char v14 = (uint64_t *)(v12 + 64);
  while (1)
  {
    uint64_t v41 = v4;
    uint64_t v15 = *(v14 - 1);
    uint64_t v16 = *v14;
    char v17 = *(unsigned char *)(v15 + 32);
    unsigned int v18 = v17 & 0x3F;
    unint64_t v19 = (unint64_t)((1 << v17) + 63) >> 6;
    size_t v20 = 8 * v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v18 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    id v22 = (char *)swift_slowAlloc();
    bzero(v22, v20);
    char v25 = v41;
    uint64_t v26 = sub_1BFEFB09C((uint64_t)v22, v19, v15, v40);
    uint64_t v4 = v25;
    if (v25) {
      goto LABEL_30;
    }
    uint64_t v24 = v26;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v22, -1, -1);
LABEL_23:
    char v27 = sub_1BFEFAE14(v24, v15);
    swift_release();
    if (v27)
    {
      char v28 = sub_1BFEFB810(v40, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = *(void *)(v39 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v33 = v29;
        uint64_t v6 = v34;
        unint64_t v5 = v35;
        uint64_t v7 = v38;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v14 += 5;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v34;
      unint64_t v5 = v35;
      uint64_t v7 = v38;
      goto LABEL_5;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  id v22 = (char *)&v31 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v22, v20);
  uint64_t v23 = v41;
  uint64_t v24 = sub_1BFEFB09C((uint64_t)v22, v19, v15, v40);
  uint64_t v4 = v23;
  swift_bridgeObjectRelease();
  if (!v23) {
    goto LABEL_23;
  }
  swift_willThrow();

  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1C18C9B00](v22, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C03C7CD4()
{
  return 33;
}

uint64_t sub_1C03C7CDC(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FeedTimeOfDay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03C7FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedTimeOfDay()
{
  return &type metadata for FeedTimeOfDay;
}

void *sub_1C03C7FF4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  a1[18] = a2[18];
  swift_retain();
  swift_release();
  a1[19] = a2[19];
  swift_retain();
  swift_release();
  a1[20] = a2[20];
  swift_retain();
  swift_release();
  a1[21] = a2[21];
  swift_retain();
  swift_release();
  a1[22] = a2[22];
  swift_retain();
  swift_release();
  a1[23] = a2[23];
  swift_retain();
  swift_release();
  a1[24] = a2[24];
  swift_retain();
  swift_release();
  a1[25] = a2[25];
  swift_retain();
  swift_release();
  a1[26] = a2[26];
  swift_retain();
  swift_release();
  a1[27] = a2[27];
  swift_retain();
  swift_release();
  a1[28] = a2[28];
  swift_retain();
  swift_release();
  a1[29] = a2[29];
  swift_retain();
  swift_release();
  a1[30] = a2[30];
  swift_retain();
  swift_release();
  a1[31] = a2[31];
  swift_retain();
  swift_release();
  a1[32] = a2[32];
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy264_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x108uLL);
}

uint64_t sub_1C03C8344(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_release();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_release();
  return a1;
}

uint64_t sub_1C03C84FC(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE0) {
    goto LABEL_17;
  }
  if (a2 + 32 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 32) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 32;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x21;
  int v8 = v6 - 33;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1C03C858C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 32 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 32) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDF)
  {
    unsigned int v6 = ((a2 - 224) >> 8) + 1;
    *uint64_t result = a2 + 32;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03C8658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 32;
        break;
    }
  }
  return result;
}

uint64_t sub_1C03C8680()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C03C869C()
{
  unint64_t result = qword_1EA19AB70;
  if (!qword_1EA19AB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AB70);
  }
  return result;
}

uint64_t sub_1C03C86F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C03C6D4C(a1, *(void *)(v2 + 32), a2);
}

void sub_1C03C8710()
{
  if (!qword_1EA19AB78)
  {
    sub_1BFDC7470();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19AB78);
    }
  }
}

uint64_t sub_1C03C8768@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C03C7558(a1, a2);
}

id sub_1C03C8780()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FB1418]);
  return objc_msgSend(v0, sel_init);
}

void __swiftcall OfflineAlertControllerFactoryType.alertController(for:)(UIAlertController *__return_ptr retstr, NewsFeed::OfflineModel *a2)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1418]);
  objc_msgSend(v2, sel_init);
}

void __swiftcall OfflineAlertControllerFactoryType.alertController(for:type:reason:)(UIAlertController *__return_ptr retstr, NewsFeed::OfflineModel *a2, NewsFeed::AlertContentType type, NewsFeed::ContentAvailability::UnavailableReason reason)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1418]);
  objc_msgSend(v4, sel_init);
}

uint64_t sub_1C03C8828()
{
  sub_1C03C8920();
  uint64_t v1 = swift_allocObject();
  sub_1C151C80C();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  swift_allocObject();
  return sub_1C151C7CC();
}

uint64_t OfflineAlertControllerFactoryType.alert(for:)()
{
  sub_1C03C8920();
  uint64_t v1 = swift_allocObject();
  sub_1C151C80C();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  swift_allocObject();
  return sub_1C151C7CC();
}

unint64_t sub_1C03C8920()
{
  unint64_t result = qword_1EA19AB88;
  if (!qword_1EA19AB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AB88);
  }
  return result;
}

uint64_t sub_1C03C8974()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL static AlertContentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AlertContentType.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t AlertContentType.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C03C8A78()
{
  unint64_t result = qword_1EA19AB90;
  if (!qword_1EA19AB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AB90);
  }
  return result;
}

uint64_t dispatch thunk of OfflineAlertControllerFactoryType.alertController(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of OfflineAlertControllerFactoryType.alertController(for:type:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of OfflineAlertControllerFactoryType.alert(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for OfflineAlertControllerFactory()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AlertContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03C8BF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertContentType()
{
  return &type metadata for AlertContentType;
}

ValueMetadata *type metadata accessor for NoopAlert()
{
  return &type metadata for NoopAlert;
}

uint64_t PuzzleEmbedScript.__allocating_init(with:)(uint64_t a1)
{
  return sub_1C03C9118(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C03C93B0);
}

uint64_t PuzzleEmbedScript.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleEmbedScript.eventName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleEmbedScript.eventDetail.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleEmbedScript.userScript.getter()
{
  return 0;
}

uint64_t PuzzleEmbedScript.executableScript.getter()
{
  uint64_t v2 = sub_1C151E37C();
  if (v1)
  {
    unint64_t v3 = v1;
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C15198DC();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB93C7A8);
    id v5 = v0;
    swift_bridgeObjectRetain_n();
    unsigned int v6 = (char *)v5;
    BOOL v7 = sub_1C15198AC();
    os_log_type_t v8 = sub_1C151F38C();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      v14[0] = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v11 = *(void *)&v6[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName];
      unint64_t v12 = *(void *)&v6[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName + 8];
      swift_bridgeObjectRetain();
      sub_1BFDA76EC(v11, v12, v14);
      sub_1C151FE1C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1BFDA76EC(v2, v3, v14);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v7, v8, "Sending executable script with eventName: %s and detail: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v10, -1, -1);
      MEMORY[0x1C18C9B00](v9, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_1C15200FC();
    sub_1C151E80C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    return v14[0];
  }
  return v2;
}

uint64_t PuzzleEmbedScript.queueable.getter()
{
  return 0;
}

uint64_t PuzzleEmbedScript.init(with:)(uint64_t a1)
{
  return sub_1C03C9118(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C03C92AC);
}

uint64_t sub_1C03C9118(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v8 = a2(v7, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v8;
}

id PuzzleEmbedScript.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PuzzleEmbedScript.init()()
{
}

id PuzzleEmbedScript.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C03C92AC(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  ObjectType = (objc_class *)swift_getObjectType();
  a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_queueable] = 0;
  uint64_t v8 = a4[1];
  uint64_t v9 = a2;
  uint64_t v10 = v8(a3, (uint64_t)a4);
  uint64_t v11 = (uint64_t *)&v9[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_identifier];
  *uint64_t v11 = v10;
  v11[1] = v12;
  uint64_t v13 = a4[2](a3, (uint64_t)a4);
  char v14 = (uint64_t *)&v9[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName];
  *char v14 = v13;
  v14[1] = v15;
  *(void *)&v9[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventDetail] = a4[3](a3, (uint64_t)a4);

  v17.receiver = v9;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_init);
}

id sub_1C03C93B0(uint64_t a1, Class a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  uint64_t v7 = objc_allocWithZone(a2);
  return sub_1C03C92AC(a1, v7, a3, a4);
}

uint64_t dispatch thunk of PuzzleEmbedScriptable.scriptId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedScriptable.scriptEventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedScriptable.scriptEventDetail.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for PuzzleEmbedScript()
{
  return self;
}

uint64_t method lookup function for PuzzleEmbedScript(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleEmbedScript);
}

uint64_t dispatch thunk of PuzzleEmbedScript.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for DebugFormatSnapshotContentView()
{
  return self;
}

unint64_t sub_1C03C959C()
{
  unint64_t result = qword_1EA19ABC0;
  if (!qword_1EA19ABC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA19ABC0);
  }
  return result;
}

uint64_t static UIActivityType.copyLink.getter()
{
  return sub_1C151E5EC();
}

uint64_t static ContextMenuItem.copyLink(tag:)(void *a1)
{
  swift_getObjectType();
  return sub_1C03C9640(a1, v1);
}

uint64_t sub_1C03C9640(void *a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v23 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151B05C();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v12 = MEMORY[0x1F4188790](v10).n128_u64[0];
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(a1, sel_identifier, v12);
  if (!v15)
  {
    sub_1C151E62C();
    id v15 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v16 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v15);

  sub_1C1515F1C();
  sub_1C151CA1C();
  sub_1C151CA0C();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v14, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  char v25 = a1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  swift_unknownObjectRetain();
  sub_1C151B04C();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v18 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v19 = objc_msgSend(self, sel_ts_link);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v23);
  swift_allocObject();
  uint64_t v20 = sub_1C151A7FC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v20;
}

uint64_t sub_1C03C9A44(void *a1, uint64_t a2)
{
  v23[0] = a2;
  uint64_t v3 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C151B05C();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - v9;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v13 = MEMORY[0x1F4188790](v11).n128_u64[0];
  id v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isPuzzleHub, v13, v23[0]))
  {
    sub_1C1515F7C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  id v16 = objc_msgSend(a1, sel_identifier);
  if (!v16)
  {
    sub_1C151E62C();
    id v16 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v17 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v16);

  sub_1C1515F1C();
  sub_1C002F608((uint64_t)v10);
LABEL_8:
  sub_1C151CA1C();
  sub_1C151CA0C();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v15, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  v23[1] = a1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  swift_unknownObjectRetain();
  sub_1C151B04C();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB893B68 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EB893B58;
  sub_1C151B39C();
  swift_allocObject();
  uint64_t v21 = sub_1C151A9EC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v21;
}

uint64_t sub_1C03C9F10(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v4 - 8);
  v24[0] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151B05C();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v24 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(a1, v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1C002F608((uint64_t)v12);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1C151CA1C();
    sub_1C151CA0C();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    v24[1] = a1;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
    swift_unknownObjectRetain();
    sub_1C151B04C();
    sub_1C151E5EC();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v21 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    if (qword_1EB893B68 != -1) {
      swift_once();
    }
    id v22 = (id)qword_1EB893B58;
    sub_1C151B39C();
    sub_1C151A9FC();
    swift_allocObject();
    uint64_t v19 = sub_1C151A9EC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v19;
}

uint64_t sub_1C03CA35C(void *a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151B05C();
  MEMORY[0x1F4188790](v5 - 8);
  v31[2] = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v31 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  id v20 = (char *)v31 - v19;
  id v21 = objc_msgSend(a1, sel_identifier, v18);
  if (!v21)
  {
    sub_1C151E62C();
    id v21 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v22 = objc_msgSend(self, sel_nss_NewsURLForIssueID_, v21);

  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_9;
  }
  v31[1] = v4;
  sub_1C1515F1C();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v23(v12, v16, v13);
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  v24(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_9:
    sub_1C002F608((uint64_t)v12);
    return 0;
  }
  v23(v20, v12, v13);
  sub_1C151CA1C();
  sub_1C151CA0C();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v20, v13);
  v24(v9, 0, 1, v13);
  v31[3] = a1;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87B090);
  id v25 = a1;
  sub_1C151B04C();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v27 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB893B68 != -1) {
    swift_once();
  }
  id v28 = (id)qword_1EB893B58;
  sub_1C151B39C();
  sub_1C151A9FC();
  swift_allocObject();
  uint64_t v29 = sub_1C151A9EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  return v29;
}

uint64_t sub_1C03CA85C(void *a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151B05C();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C151CA1C();
  sub_1C151CA0C();
  FCFeedDescriptor.feedURL.getter();
  uint64_t v7 = sub_1C1515FDC();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v13[1] = a1;
  sub_1BFC39268(0, &qword_1EA19ABC8);
  id v8 = a1;
  sub_1C151B04C();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB893B68 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB893B58;
  sub_1C151B39C();
  sub_1C151A9FC();
  swift_allocObject();
  return sub_1C151A9EC();
}

uint64_t sub_1C03CAB50(void *a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151B05C();
  MEMORY[0x1F4188790](v5 - 8);
  v30[2] = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v30 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  id v20 = (char *)v30 - v19;
  id v21 = objc_msgSend(a1, sel_identifier, v18);
  if (!v21)
  {
    sub_1C151E62C();
    id v21 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v22 = objc_msgSend(self, sel_nss_NewsURLForPuzzleID_, v21);

  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_9;
  }
  v30[1] = v4;
  sub_1C1515F1C();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v23(v12, v16, v13);
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  v24(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_9:
    sub_1C002F608((uint64_t)v12);
    return 0;
  }
  v23(v20, v12, v13);
  sub_1C151CA1C();
  sub_1C151CA0C();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v20, v13);
  v24(v9, 0, 1, v13);
  v30[3] = a1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901B0);
  swift_unknownObjectRetain();
  sub_1C151B04C();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v26 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB893B68 != -1) {
    swift_once();
  }
  id v27 = (id)qword_1EB893B58;
  sub_1C151B39C();
  sub_1C151A9FC();
  swift_allocObject();
  uint64_t v28 = sub_1C151A9EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  return v28;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink14feedDescriptorACSo06FCFeedK0C_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151B05C();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1C151CA1C();
  sub_1C151CA0C();
  FCFeedDescriptor.feedURL.getter();
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  v16[1] = a1;
  sub_1BFC39268(0, &qword_1EA19ABC8);
  id v11 = a1;
  sub_1C151B04C();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v14 = objc_msgSend(self, sel_ts_link);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink6puzzleACSo17FCPuzzleProviding_p_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151B05C();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v26 - v11;
  *(void *)&double v14 = MEMORY[0x1F4188790](v13).n128_u64[0];
  id v16 = (char *)v26 - v15;
  id v17 = objc_msgSend(a1, sel_identifier, v14);
  if (!v17)
  {
    sub_1C151E62C();
    id v17 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v18 = objc_msgSend(self, sel_nss_NewsURLForPuzzleID_, v17);

  if (v18)
  {
    sub_1C1515F1C();

    uint64_t v19 = sub_1C1515FDC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
  }
  sub_1C002F694((uint64_t)v12, (uint64_t)v16);
  sub_1C151CA1C();
  sub_1C151CA0C();
  sub_1C0025B10((uint64_t)v16, (uint64_t)v9);
  v26[1] = a1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901B0);
  swift_unknownObjectRetain();
  sub_1C151B04C();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v22 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v23 = objc_msgSend(self, sel_ts_link);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  sub_1C151A81C();
  swift_allocObject();
  uint64_t v24 = sub_1C151A7FC();
  sub_1C002F608((uint64_t)v16);
  return v24;
}

Swift::Void __swiftcall FormatProgressView.updateProgress(progress:animated:)(Swift::Double progress, Swift::Bool animated)
{
  Swift::Double v4 = progress;
  unint64_t v5 = (unint64_t)*v2;
  unint64_t v6 = (unint64_t)*v2 >> 62;
  if (v6)
  {
    uint64_t v7 = (void *)(v5 & 0x3FFFFFFFFFFFFFFFLL);
    if (v6 == 1)
    {
      id v8 = v7;
      FormatProgressPieView.updatePieProgress(progress:)(v4);
    }
    else
    {
      id v8 = v7;
      FormatProgressCircleView.updateCircleProgress(progress:)(v4);
    }
  }
  else
  {
    *(float *)&progress = progress;
    objc_msgSend((id)v5, sel_setProgress_animated_, animated, progress);
  }
}

uint64_t FormatProgressBarView.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatProgressBarView.identifier.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
  swift_beginAccess();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressBarView.identifier.modify())()
{
  return j__swift_endAccess;
}

id FormatProgressBarView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatProgressBarView.init(frame:)(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatProgressBarView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatProgressBarView.init(coder:)(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  Swift::Double v4 = &v1[OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier];
  *(void *)Swift::Double v4 = 0;
  *((void *)v4 + 1) = 0xE000000000000000;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id FormatProgressBarView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C03CBB58()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void *initializeBufferWithCopyOfBuffer for FormatProgressView(void *a1, void *a2)
{
  id v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for FormatProgressView(void *a1)
{
}

uint64_t *assignWithCopy for FormatProgressView(uint64_t *a1, uint64_t *a2)
{
  id v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  uint64_t v4 = *a1;
  *a1 = *a2;
  id v5 = (void *)(v4 & 0x3FFFFFFFFFFFFFFFLL);
  id v6 = v3;

  return a1;
}

uint64_t *assignWithTake for FormatProgressView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for FormatProgressView()
{
  return &type metadata for FormatProgressView;
}

uint64_t sub_1C03CBC80(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_unknownObjectRetain();
  }
}

uint64_t destroy for SportsRecordFactoryError(uint64_t a1)
{
  return sub_1C03CBCE0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1C03CBCE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_unknownObjectRelease();
  if (a4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SportsRecordFactoryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C03CBC80(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SportsRecordFactoryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C03CBC80(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C03CBCE0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SportsRecordFactoryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C03CBCE0(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for SportsRecordFactoryError()
{
  return &type metadata for SportsRecordFactoryError;
}

uint64_t sub_1C03CBE5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v140 = *a2;
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = sub_1C151E6BC();
  uint64_t v8 = v7;
  uint64_t v130 = v6;
  if (v5)
  {
    *(void *)&long long v131 = sub_1C151E6BC();
    *((void *)&v131 + 1) = v9;
  }
  else
  {
    *(void *)&long long v138 = v6;
    *((void *)&v138 + 1) = v7;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    long long v131 = v138;
  }
  if (qword_1EB86AE58 != -1) {
    goto LABEL_72;
  }
  while (2)
  {
    char v10 = (void *)qword_1EB93C5E8;
    sub_1BFFDEB20();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C152C7F0;
    id v12 = v10;
    id v13 = objc_msgSend((id)a1, sel_identifier);
    uint64_t v14 = sub_1C151E62C();
    uint64_t v16 = v15;

    uint64_t v17 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v18 = sub_1BFE9C558();
    *(void *)(v11 + 32) = v14;
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 96) = v17;
    *(void *)(v11 + 104) = v18;
    *(void *)(v11 + 64) = v18;
    *(void *)(v11 + 72) = v130;
    *(void *)(v11 + 80) = v8;
    *(void *)(v11 + 136) = v17;
    *(void *)(v11 + 144) = v18;
    unint64_t v129 = v18;
    *(_OWORD *)(v11 + 112) = v131;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(v140 + 16);
    if (!v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_18:
      sub_1C03CCD10();
      swift_allocError();
      *(void *)(v32 + 8) = 0;
      *(void *)(v32 + 16) = 0;
      *(void *)uint64_t v32 = a1;
      *(unsigned char *)(v32 + 24) = 0;
LABEL_63:
      swift_unknownObjectRetain();
      return swift_willThrow();
    }
    uint64_t v128 = v8;
    swift_bridgeObjectRetain_n();
    uint64_t v20 = (uint64_t *)(v140 + 56);
    uint64_t v8 = (uint64_t)&selRef_setSpacing_;
    while (1)
    {
      uint64_t v21 = *(v20 - 3);
      uint64_t v22 = *(v20 - 2);
      uint64_t v24 = *(v20 - 1);
      uint64_t v23 = *v20;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v25 = objc_msgSend((id)a1, sel_UMCCanonicalID);
      if (v25) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 += 4;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
    }
    id v26 = v25;
    uint64_t v133 = v23;
    uint64_t v134 = v24;
    uint64_t v27 = sub_1C151E62C();
    uint64_t v29 = v28;

    if (v21 == v27 && v22 == v29)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v33 = v134;
      goto LABEL_21;
    }
    char v31 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v33 = v134;
LABEL_21:
    swift_bridgeObjectRelease_n();
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v132 = a1;
    if (v34)
    {
      swift_bridgeObjectRetain_n();
      a1 = v33 + 56;
      unint64_t v35 = (void *)MEMORY[0x1E4FBC868];
      while (1)
      {
        uint64_t v135 = v34;
        uint64_t v37 = *(void *)a1;
        uint64_t v140 = *(void *)(a1 - 8);
        uint64_t v38 = sub_1C151E6BC();
        uint64_t v40 = v39;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v41 = v35;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v138 = v41;
        unint64_t v44 = sub_1BFEF2D8C(v38, v40);
        uint64_t v45 = v41[2];
        BOOL v46 = (v43 & 1) == 0;
        uint64_t v47 = v45 + v46;
        if (__OFADD__(v45, v46))
        {
          __break(1u);
          goto LABEL_69;
        }
        uint64_t v8 = v43;
        if (v41[3] >= v47)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            unint64_t v35 = (void *)v138;
            if ((v43 & 1) == 0) {
              goto LABEL_32;
            }
          }
          else
          {
            sub_1C106AFB0();
            unint64_t v35 = (void *)v138;
            if ((v8 & 1) == 0) {
              goto LABEL_32;
            }
          }
        }
        else
        {
          sub_1C105548C(v47, isUniquelyReferenced_nonNull_native);
          unint64_t v48 = sub_1BFEF2D8C(v38, v40);
          if ((v8 & 1) != (v49 & 1))
          {
LABEL_73:
            uint64_t result = sub_1C1520CFC();
            __break(1u);
            return result;
          }
          unint64_t v44 = v48;
          unint64_t v35 = (void *)v138;
          if ((v8 & 1) == 0)
          {
LABEL_32:
            v35[(v44 >> 6) + 8] |= 1 << v44;
            uint64_t v50 = (uint64_t *)(v35[6] + 16 * v44);
            *uint64_t v50 = v38;
            v50[1] = v40;
            uint64_t v51 = (void *)(v35[7] + 16 * v44);
            *uint64_t v51 = v140;
            v51[1] = v37;
            uint64_t v52 = v35[2];
            BOOL v53 = __OFADD__(v52, 1);
            uint64_t v54 = v52 + 1;
            if (v53) {
              goto LABEL_70;
            }
            v35[2] = v54;
            swift_bridgeObjectRetain();
            goto LABEL_24;
          }
        }
        unint64_t v36 = (void *)(v35[7] + 16 * v44);
        swift_bridgeObjectRelease();
        *unint64_t v36 = v140;
        v36[1] = v37;
LABEL_24:
        a1 += 32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v34;
        if (v135 == 1)
        {
          uint64_t v33 = v134;
          swift_bridgeObjectRelease();
          a1 = v132;
          uint64_t v55 = v35;
          goto LABEL_38;
        }
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v55 = (void *)MEMORY[0x1E4FBC868];
LABEL_38:
    swift_bridgeObjectRelease();
    uint64_t v56 = (void *)qword_1EB93C5E8;
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1C152C7F0;
    uint64_t v58 = *(void *)(v33 + 16);
    uint64_t v59 = MEMORY[0x1E4FBB5C8];
    *(void *)(v57 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v57 + 64) = v59;
    *(void *)(v57 + 32) = v58;
    id v60 = v56;
    id v61 = objc_msgSend((id)a1, sel_identifier);
    uint64_t v62 = sub_1C151E62C();
    uint64_t v64 = v63;

    uint64_t v65 = MEMORY[0x1E4FBB1A0];
    *(void *)(v57 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v57 + 104) = v129;
    *(void *)(v57 + 72) = v62;
    *(void *)(v57 + 80) = v64;
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1C151E3CC();
    uint64_t v68 = v67;
    uint64_t v126 = (uint64_t)v55;
    swift_bridgeObjectRelease();
    *(void *)(v57 + 136) = v65;
    *(void *)(v57 + 144) = v129;
    *(void *)(v57 + 112) = v66;
    *(void *)(v57 + 120) = v68;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v69 = v133;
    uint64_t v70 = *(void *)(v133 + 16);
    if (v70)
    {
      swift_bridgeObjectRetain_n();
      char v71 = (uint64_t *)(v133 + 40);
      uint64_t v72 = (void *)MEMORY[0x1E4FBC868];
      while (1)
      {
        uint64_t v136 = v70;
        uint64_t v75 = *v71;
        uint64_t v140 = *(v71 - 1);
        uint64_t v8 = sub_1C151E6BC();
        uint64_t v77 = v76;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a1 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v138 = v72;
        unint64_t v79 = sub_1BFEF2D8C(v8, v77);
        uint64_t v80 = v72[2];
        BOOL v81 = (v78 & 1) == 0;
        uint64_t v82 = v80 + v81;
        if (__OFADD__(v80, v81)) {
          break;
        }
        char v83 = v78;
        if (v72[3] >= v82)
        {
          if ((a1 & 1) == 0) {
            sub_1C106AFB0();
          }
        }
        else
        {
          sub_1C105548C(v82, a1);
          unint64_t v84 = sub_1BFEF2D8C(v8, v77);
          if ((v83 & 1) != (v85 & 1)) {
            goto LABEL_73;
          }
          unint64_t v79 = v84;
        }
        a1 = v132;
        uint64_t v72 = (void *)v138;
        if (v83)
        {
          uint64_t v73 = (void *)v138;
          uint64_t v74 = (void *)(*(void *)(v138 + 56) + 16 * v79);
          swift_bridgeObjectRelease();
          *uint64_t v74 = v140;
          v74[1] = v75;
          uint64_t v72 = v73;
        }
        else
        {
          *(void *)(v138 + 8 * (v79 >> 6) + 64) |= 1 << v79;
          char v86 = (uint64_t *)(v72[6] + 16 * v79);
          *char v86 = v8;
          v86[1] = v77;
          uint64_t v87 = (void *)(v72[7] + 16 * v79);
          *uint64_t v87 = v140;
          v87[1] = v75;
          uint64_t v88 = v72[2];
          BOOL v53 = __OFADD__(v88, 1);
          uint64_t v89 = v88 + 1;
          if (v53) {
            goto LABEL_71;
          }
          v72[2] = v89;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v71 += 6;
        uint64_t v70 = v136 - 1;
        if (v136 == 1)
        {
          uint64_t v69 = v133;
          swift_bridgeObjectRelease();
          uint64_t v90 = (uint64_t)v72;
          goto LABEL_53;
        }
      }
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      swift_once();
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  uint64_t v90 = MEMORY[0x1E4FBC868];
LABEL_53:
  swift_bridgeObjectRelease();
  uint64_t v91 = (void *)qword_1EB93C5E8;
  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_1C152C7F0;
  swift_bridgeObjectRetain();
  id v93 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v94 = *(void *)(v69 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v92 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v92 + 64) = MEMORY[0x1E4FBB5C8];
  *(void *)(v92 + 32) = v94;
  id v95 = objc_msgSend((id)a1, sel_identifier);
  uint64_t v96 = sub_1C151E62C();
  uint64_t v98 = v97;

  uint64_t v99 = MEMORY[0x1E4FBB1A0];
  *(void *)(v92 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v92 + 104) = v129;
  *(void *)(v92 + 72) = v96;
  *(void *)(v92 + 80) = v98;
  swift_bridgeObjectRetain();
  uint64_t v100 = sub_1C151E3CC();
  uint64_t v102 = v101;
  swift_bridgeObjectRelease();
  *(void *)(v92 + 136) = v99;
  *(void *)(v92 + 144) = v129;
  *(void *)(v92 + 112) = v100;
  *(void *)(v92 + 120) = v102;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  if (!*(void *)(v126 + 16) || (unint64_t v103 = sub_1BFEF2D8C(1936615799, 0xE400000000000000), (v104 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C03CCD10();
    swift_allocError();
    *(void *)uint64_t v120 = a1;
    long long v121 = xmmword_1C1545050;
LABEL_62:
    *(_OWORD *)(v120 + 8) = v121;
    *(unsigned char *)(v120 + 24) = 1;
    goto LABEL_63;
  }
  uint64_t v105 = (uint64_t *)(*(void *)(v126 + 56) + 16 * v103);
  uint64_t v107 = *v105;
  uint64_t v106 = v105[1];
  uint64_t v108 = *(void *)(v126 + 16);
  swift_bridgeObjectRetain();
  if (!v108 || (unint64_t v109 = sub_1BFEF2D8C(0x736573736F6CLL, 0xE600000000000000), (v110 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C03CCD10();
    swift_allocError();
    *(void *)uint64_t v120 = a1;
    long long v121 = xmmword_1C1545040;
    goto LABEL_62;
  }
  uint64_t v111 = (uint64_t *)(*(void *)(v126 + 56) + 16 * v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  uint64_t v114 = *(void *)(v126 + 16);
  swift_bridgeObjectRetain();
  uint64_t v140 = v113;
  if (v114)
  {
    unint64_t v115 = sub_1BFEF2D8C(1936025972, 0xE400000000000000);
    uint64_t v116 = *((void *)&v131 + 1);
    if (v117)
    {
      uint64_t v118 = (uint64_t *)(*(void *)(v126 + 56) + 16 * v115);
      uint64_t v119 = v118[1];
      uint64_t v137 = *v118;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v137 = 0;
      uint64_t v119 = 0;
    }
    uint64_t v123 = v130;
  }
  else
  {
    uint64_t v137 = 0;
    uint64_t v119 = 0;
    uint64_t v123 = v130;
    uint64_t v116 = *((void *)&v131 + 1);
  }
  sub_1C03CC980(v126, v131, v116, v90, v123, v128, (uint64_t *)&v138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v124 = v139;
  long long v125 = v138;
  *(void *)a4 = v107;
  *(void *)(a4 + 8) = v106;
  *(void *)(a4 + 16) = v140;
  *(void *)(a4 + 24) = v112;
  *(void *)(a4 + 32) = v137;
  *(void *)(a4 + 40) = v119;
  *(_OWORD *)(a4 + 48) = v125;
  *(void *)(a4 + 64) = v124;
  return result;
}

uint64_t sub_1C03CC980@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  if (!*(void *)(result + 16)) {
    goto LABEL_51;
  }
  uint64_t v13 = result;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1BFEF2D8C(a2, a3);
  if ((v15 & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
  uint64_t v18 = *v16;
  unint64_t v17 = v16[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = HIBYTE(v17) & 0xF;
  uint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
  if (!((v17 & 0x2000000000000000) != 0 ? HIBYTE(v17) & 0xF : v18 & 0xFFFFFFFFFFFFLL)) {
    goto LABEL_12;
  }
  if ((v17 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = (uint64_t)sub_1C02969B8(v18, v17, 10);
    LOBYTE(v18) = v42;
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v18 & 1) != 0 || !*(void *)(a4 + 16)) {
      goto LABEL_51;
    }
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_1BFEF2D8C(a5, a6);
    if (v35)
    {
      unint64_t v36 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v34);
      uint64_t v38 = *v36;
      uint64_t v37 = v36[1];
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      *a7 = v23;
      a7[1] = v38;
      a7[2] = v37;
      return result;
    }
LABEL_12:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_51:
    *a7 = 0;
    a7[1] = 0;
    a7[2] = 0;
    return result;
  }
  if ((v17 & 0x2000000000000000) == 0)
  {
    if ((v18 & 0x1000000000000000) != 0) {
      uint64_t v22 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v22 = (unsigned __int8 *)sub_1C152020C();
    }
    uint64_t v23 = (uint64_t)sub_1C02968B8(v22, v20, 10);
    LOBYTE(v18) = v24 & 1;
    goto LABEL_47;
  }
  v43[0] = v18;
  v43[1] = v17 & 0xFFFFFFFFFFFFFFLL;
  if (v18 == 43)
  {
    if (!v19) {
      goto LABEL_63;
    }
    if (v19 == 1 || (BYTE1(v18) - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v23 = (BYTE1(v18) - 48);
    if (v19 != 2)
    {
      if ((BYTE2(v18) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v23 = 10 * (BYTE1(v18) - 48) + (BYTE2(v18) - 48);
      uint64_t v25 = v19 - 3;
      if (v25)
      {
        id v26 = (unsigned __int8 *)v43 + 3;
        while (1)
        {
          unsigned int v27 = *v26 - 48;
          if (v27 > 9) {
            goto LABEL_34;
          }
          uint64_t v28 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            goto LABEL_34;
          }
          uint64_t v23 = v28 + v27;
          if (__OFADD__(v28, v27)) {
            goto LABEL_34;
          }
          LOBYTE(v18) = 0;
          ++v26;
          if (!--v25) {
            goto LABEL_47;
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v18) = 0;
    goto LABEL_47;
  }
  if (v18 != 45)
  {
    if (!v19 || (v18 - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v23 = (v18 - 48);
    if (v19 != 1)
    {
      if ((BYTE1(v18) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v23 = 10 * (v18 - 48) + (BYTE1(v18) - 48);
      uint64_t v29 = v19 - 2;
      if (v29)
      {
        unint64_t v30 = (unsigned __int8 *)v43 + 2;
        while (1)
        {
          unsigned int v31 = *v30 - 48;
          if (v31 > 9) {
            goto LABEL_34;
          }
          uint64_t v32 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            goto LABEL_34;
          }
          uint64_t v23 = v32 + v31;
          if (__OFADD__(v32, v31)) {
            goto LABEL_34;
          }
          LOBYTE(v18) = 0;
          ++v30;
          if (!--v29) {
            goto LABEL_47;
          }
        }
      }
    }
    goto LABEL_46;
  }
  if (v19)
  {
    if (v19 != 1 && (BYTE1(v18) - 48) <= 9u)
    {
      if (v19 == 2)
      {
        LOBYTE(v18) = 0;
        uint64_t v23 = -(uint64_t)(BYTE1(v18) - 48);
        goto LABEL_47;
      }
      if ((BYTE2(v18) - 48) <= 9u)
      {
        uint64_t v23 = -10 * (BYTE1(v18) - 48) - (BYTE2(v18) - 48);
        uint64_t v33 = v19 - 3;
        if (!v33) {
          goto LABEL_46;
        }
        uint64_t v39 = (unsigned __int8 *)v43 + 3;
        while (1)
        {
          unsigned int v40 = *v39 - 48;
          if (v40 > 9) {
            break;
          }
          uint64_t v41 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            break;
          }
          uint64_t v23 = v41 - v40;
          if (__OFSUB__(v41, v40)) {
            break;
          }
          LOBYTE(v18) = 0;
          ++v39;
          if (!--v33) {
            goto LABEL_47;
          }
        }
      }
    }
LABEL_34:
    uint64_t v23 = 0;
    LOBYTE(v18) = 1;
    goto LABEL_47;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

unint64_t sub_1C03CCD10()
{
  unint64_t result = qword_1EA19ABE0;
  if (!qword_1EA19ABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ABE0);
  }
  return result;
}

uint64_t FCCoreConfigurationManager.fetchConfiguration()()
{
  return sub_1C151911C();
}

void sub_1C03CCDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = sub_1BFD35658;
  v11[3] = v10;
  v11[4] = a3;
  v11[5] = a4;
  v13[4] = sub_1C03CD53C;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1C03CCF04;
  v13[3] = &block_descriptor_20;
  id v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_fetchConfigurationIfNeededWithCompletion_, v12);
  _Block_release(v12);
}

void sub_1C03CCF08(uint64_t a1, void *a2, void (*a3)(), uint64_t a4, void (*a5)(), uint64_t a6, unint64_t *a7)
{
  swift_unknownObjectRetain();
  id v11 = a2;
  sub_1BFC9DBE8(0, a7);
  sub_1C1518F4C();
  if (v13) {
    a5();
  }
  else {
    a3();
  }
  sub_1C03CD56C(v12, v13);
}

uint64_t sub_1C03CCFCC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1C03CD04C(uint64_t a1, void *a2)
{
  sub_1C00644AC();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v4);
  FCCurrentQoS();
  id v8 = (id)FCDispatchQueueForQualityOfService();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1C03CD608;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C03CCF04;
  aBlock[3] = &block_descriptor_26;
  id v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchAppConfigurationIfNeededWithCompletionQueue_completion_, v8, v11);
  _Block_release(v11);
}

void sub_1C03CD20C(uint64_t a1)
{
  sub_1C03CD04C(a1, *(void **)(v1 + 24));
}

void sub_1C03CD214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C03CCDD8(a1, a2, a3, a4, *(void **)(v4 + 24));
}

uint64_t sub_1C03CD21C(uint64_t a1, void *a2)
{
  swift_unknownObjectRetain();
  id v3 = a2;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB85C560);
  sub_1C1518F4C();
  sub_1C00644AC();
  if (v5) {
    return sub_1C151EDCC();
  }
  else {
    return sub_1C151EDDC();
  }
}

uint64_t FCNewsAppConfigurationManager.accessor<A>(for:)(uint64_t a1, uint64_t a2)
{
  sub_1C151934C();
  char v5 = (void *)swift_allocObject();
  v5[2] = a2;
  v5[3] = v2;
  v5[4] = a1;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1C151935C();
}

uint64_t sub_1C03CD38C(void *a1)
{
  return swift_unknownObjectRelease();
}

uint64_t FCNewsAppConfigurationManager.int(for:)()
{
  objc_msgSend(v0, sel_possiblyUnfetchedAppConfiguration);
  swift_getAtKeyPath();
  swift_unknownObjectRelease();
  if (v3) {
    return 0;
  }
  else {
    return v2;
  }
}

unint64_t sub_1C03CD464()
{
  unint64_t result = qword_1EB86BF28[0];
  if (!qword_1EB86BF28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB86BF28);
  }
  return result;
}

uint64_t sub_1C03CD4BC()
{
  return sub_1C03CD38C(*(void **)(v0 + 24));
}

void sub_1C03CD4D0(uint64_t a1, void *a2)
{
  sub_1C03CCF08(a1, a2, *(void (**)())(v2 + 16), *(void *)(v2 + 24), *(void (**)())(v2 + 32), *(void *)(v2 + 40), (unint64_t *)&qword_1EB85C560);
}

uint64_t sub_1C03CD500()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C03CD53C(uint64_t a1, void *a2)
{
  sub_1C03CCF08(a1, a2, *(void (**)())(v2 + 16), *(void *)(v2 + 24), *(void (**)())(v2 + 32), *(void *)(v2 + 40), &qword_1EB87A1E0);
}

void sub_1C03CD56C(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C03CD578()
{
  sub_1C00644AC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C03CD608(uint64_t a1, void *a2)
{
  sub_1C00644AC();
  return sub_1C03CD21C(a1, a2);
}

void static FormatCodingScrollingTraitSnapToLeadingStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

BOOL static FormatCodingScrollingTraitSnapToLeadingStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 2;
}

BOOL sub_1C03CD6BC(unsigned __int8 *a1)
{
  return *a1 != 2;
}

unint64_t sub_1C03CD6CC(uint64_t a1)
{
  unint64_t result = sub_1C03CD6F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03CD6F4()
{
  unint64_t result = qword_1EA19ABF8;
  if (!qword_1EA19ABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ABF8);
  }
  return result;
}

unint64_t sub_1C03CD74C()
{
  unint64_t result = qword_1EB86FBE0;
  if (!qword_1EB86FBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FBE0);
  }
  return result;
}

unint64_t sub_1C03CD7A4()
{
  unint64_t result = qword_1EA19AC00;
  if (!qword_1EA19AC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC00);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingScrollingTraitSnapToLeadingStrategy()
{
  return &type metadata for FormatCodingScrollingTraitSnapToLeadingStrategy;
}

ValueMetadata *type metadata accessor for A12_V5()
{
  return &type metadata for A12_V5;
}

uint64_t sub_1C03CD818(void *a1)
{
  uint64_t v3 = v1;
  sub_1C03D265C(0, &qword_1EA19ACB8, (uint64_t (*)(void))sub_1C03D2608, (uint64_t)&type metadata for A12_V5.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03D2608();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C03D26C4(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C03CDA60(uint64_t a1)
{
  unint64_t v2 = sub_1C03D2608();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03CDA9C(uint64_t a1)
{
  unint64_t v2 = sub_1C03D2608();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C03CDAD8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C03D2358(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C03CDB20(void *a1)
{
  return sub_1C03CD818(a1);
}

uint64_t sub_1C03CDB38()
{
  sub_1C03D1F60();
  return sub_1C151798C();
}

uint64_t sub_1C03CDBB4@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C03D265C(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C03CDC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  BOOL v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  unint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  id v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A12_V5;
  unint64_t v20 = sub_1C01866D4();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  id v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *id v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A12_V5;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  unsigned int v31 = (void *)(v30 + 16);
  swift_beginAccess();
  uint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *unsigned int v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *unsigned int v31 = v32;
  }
  v32[2] = v35 + 1;
  unint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B81AC8, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    char v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      char v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      char v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    BOOL v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B81AF0, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V5.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C03D26C4(&qword_1EA19AC18, (void (*)(uint64_t))type metadata accessor for A12_V5.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

uint64_t sub_1C03CE414@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v36 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  long long v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A12_V5.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  uint64_t v10 = *(int *)(v8 + 32);
  *(void *)&long long v37 = v7;
  double v11 = *(double *)(v7 + v10);
  sub_1BFC66384(v9 + 16, (uint64_t)&v43);
  sub_1BFC66384(v9 + 56, (uint64_t)v42);
  double v12 = v11 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v43, inited + 16);
  sub_1BFC773DC(v42, inited + 56);
  *(double *)(inited + 96) = v12;
  v41[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v41, v47);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v14 = *(void *)(v2 + *(int *)(v6 + 28));
  v39[2] = v2;
  uint64_t v39[3] = v47;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C0182EAC((void (*)(uint64_t))sub_1C03D1EE4, (uint64_t)v39, v14, (uint64_t)&v40);
  swift_bridgeObjectRelease();
  unint64_t v16 = *(void *)(v15 + 16);
  if (v16 >= 3) {
    uint64_t v17 = 3;
  }
  else {
    uint64_t v17 = *(void *)(v15 + 16);
  }
  sub_1C1520B6C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(v18 + 16);
  swift_release();
  if (v19 == v16 - v17)
  {
    uint64_t v20 = swift_dynamicCastClass();
    if (!v20)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v20 = sub_1C00B2130(v15, v15 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)), v17, (2 * v16) | 1);
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v43 = v20;
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v22 = v21;
  sub_1C03D1FBC(&qword_1EA197690);
  uint64_t v35 = v22;
  sub_1C151F0BC();
  swift_release();
  uint64_t v23 = *MEMORY[0x1E4FAB6D8];
  uint64_t v24 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v5, v23, v24);
  uint64_t v25 = (*(uint64_t (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v36);
  MEMORY[0x1F4188790](v25);
  sub_1C03D208C(0, &qword_1EA19AC38, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C1517BFC();
  long long v37 = v43;
  uint64_t v27 = v44;
  uint64_t v28 = v45;
  *(void *)&long long v43 = v15;
  *(void *)&v42[0] = v46;
  MEMORY[0x1F4188790](v26);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C03D1FBC((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v43 = v29;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v30 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v31 = v38;
  *uint64_t v38 = 0;
  *(_OWORD *)(v31 + 8) = v37;
  *((void *)v31 + 3) = v27;
  *((void *)v31 + 4) = v28;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v31 + 5) = v30;
  *((void *)v31 + 6) = v32;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
}

uint64_t sub_1C03CEA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C03CEB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C03D208C(0, &qword_1EA19AC58, MEMORY[0x1E4FAB6F0]);
  sub_1C03D2048(&qword_1EA19AC60, &qword_1EA19AC58, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C03CECF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a3;
  uint64_t v56 = a2;
  uint64_t v55 = sub_1C03D1F0C;
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v40 - v7);
  uint64_t v58 = a1;
  uint64_t v9 = sub_1C151729C();
  uint64_t v10 = swift_allocBox();
  uint64_t v11 = *(void *)(v9 - 8);
  double v12 = *(void (**)(void))(v11 + 104);
  unsigned int v46 = *MEMORY[0x1E4FAB4E8];
  uint64_t v45 = v9;
  uint64_t v50 = v11 + 104;
  uint64_t v51 = (void (*)(uint64_t, void, uint64_t))v12;
  v12(v13);
  *uint64_t v8 = v10;
  uint64_t v15 = v6 + 104;
  uint64_t v14 = *(void (**)(uint64_t *))(v6 + 104);
  unsigned int v49 = *MEMORY[0x1E4FAB940];
  v14(v8);
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v16);
  sub_1C151738C();
  uint64_t v21 = *(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8);
  uint64_t v20 = v6 + 8;
  BOOL v53 = v21;
  v21(v8, v5);
  uint64_t v52 = a1;
  uint64_t v58 = a1;
  uint64_t v22 = *MEMORY[0x1E4FABA28];
  uint64_t v47 = v14;
  uint64_t v48 = v15;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v14)(v8, v22, v5);
  sub_1C03D2110();
  sub_1C03D265C(0, &qword_1EA19AC80, (uint64_t (*)(void))v55, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v27 + v26, *MEMORY[0x1E4FAB638], v24);
  uint64_t v57 = v56;
  sub_1C151731C();
  uint64_t v28 = v53;
  swift_bridgeObjectRelease();
  uint64_t result = v28(v8, v5);
  uint64_t v30 = *(void *)(v54 + 16);
  if (v30)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = v19;
    uint64_t v44 = v18;
    uint64_t v31 = 0;
    unsigned int v42 = *MEMORY[0x1E4FAB9E0];
    v40[1] = v5;
    uint64_t v56 = v20;
    uint64_t v41 = v30;
    uint64_t v32 = v47;
    do
    {
      uint64_t v55 = *(unint64_t (**)())(v54 + 8 * v31++ + 32);
      uint64_t v33 = v52;
      uint64_t v58 = v52;
      uint64_t v34 = v45;
      uint64_t v35 = swift_allocBox();
      v51(v36, v46, v34);
      *uint64_t v8 = v35;
      ((void (*)(uint64_t *, void, uint64_t))v32)(v8, v49, v5);
      swift_bridgeObjectRetain();
      sub_1C151738C();
      long long v37 = (void (*)(uint64_t *, uint64_t))v53;
      v53(v8, v5);
      uint64_t v58 = v33;
      uint64_t v38 = ((uint64_t (*)(uint64_t *, void, uint64_t))v32)(v8, v42, v5);
      MEMORY[0x1F4188790](v38);
      sub_1C151731C();
      uint64_t v39 = v41;
      v37(v8, v5);
      swift_bridgeObjectRelease();
    }
    while (v39 != v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C03CF230(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  uint64_t v25 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 4;
  *uint64_t v8 = v9;
  unsigned int v21 = *MEMORY[0x1E4FABA10];
  uint64_t v10 = *(void (**)(uint64_t *))(v6 + 104);
  v10(v8);
  uint64_t v18 = v10;
  uint64_t v24 = a2;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
  sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v11);
  sub_1C151734C();
  double v12 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v12(v8, v5);
  uint64_t v13 = v20;
  uint64_t v25 = v20;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 4;
  *uint64_t v8 = v14;
  ((void (*)(uint64_t *, void, uint64_t))v10)(v8, v21, v5);
  uint64_t v15 = v19;
  uint64_t v23 = v19;
  sub_1C151734C();
  v12(v8, v5);
  uint64_t v25 = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 4;
  *uint64_t v8 = v16;
  ((void (*)(uint64_t *, void, uint64_t))v18)(v8, v21, v5);
  uint64_t v22 = v15;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v12)(v8, v5);
}

uint64_t sub_1C03CF570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  unint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
  sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C03CFB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  unint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
  sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C03D011C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  unint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
  sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C03D06F8(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
  sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C03D099C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16))
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
    sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C03D0D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03D265C(0, &qword_1EA19AC50, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + *(void *)(v14 + 72)
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C03D208C(0, &qword_1EA19AC68, MEMORY[0x1E4FAB4D0]);
    sub_1C03D2048(&qword_1EA19AC70, &qword_1EA19AC68, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C03D1130@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V5.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C03D1220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C03CDC70(a1, a2, a3);
}

uint64_t sub_1C03D1238()
{
  return sub_1C12BC448();
}

unint64_t sub_1C03D1248(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C03D1278();
  unint64_t result = sub_1C03D12CC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C03D1278()
{
  unint64_t result = qword_1EA19AC08;
  if (!qword_1EA19AC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC08);
  }
  return result;
}

unint64_t sub_1C03D12CC()
{
  unint64_t result = qword_1EA19AC10;
  if (!qword_1EA19AC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC10);
  }
  return result;
}

uint64_t type metadata accessor for A12_V5.Bound()
{
  uint64_t result = qword_1EA19AC20;
  if (!qword_1EA19AC20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C03D136C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F104((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  double v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    __n128 v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F104(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    __n128 v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C03D1800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F104((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F104(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C03D1C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C03D1C70);
}

uint64_t sub_1C03D1C70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C03D1D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C03D1D34);
}

void *sub_1C03D1D34(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C03D1DDC()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C03D1E8C(uint64_t a1)
{
  uint64_t result = sub_1C03D26C4(&qword_1EA19AC30, (void (*)(uint64_t))type metadata accessor for A12_V5.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C03D1EE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C03CEA2C(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C03D1F04(uint64_t a1)
{
  return sub_1C03CEB04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C03D1F0C()
{
  unint64_t result = qword_1EA19AC40;
  if (!qword_1EA19AC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC40);
  }
  return result;
}

unint64_t sub_1C03D1F60()
{
  unint64_t result = qword_1EA19AC48;
  if (!qword_1EA19AC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC48);
  }
  return result;
}

uint64_t sub_1C03D1FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C03D1130(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C03D1FBC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C00192A8(255, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C03D2030()
{
  return swift_deallocObject();
}

uint64_t sub_1C03D2040(uint64_t a1)
{
  return sub_1C03CECF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C03D2048(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C03D208C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C03D208C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V5.Layout;
    v8[1] = &type metadata for A12_V5.Layout.Attributes;
    v8[2] = sub_1C03D1F0C();
    v8[3] = sub_1C03D1F60();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C03D2110()
{
  if (!qword_1EA19AC78)
  {
    sub_1C03D265C(255, &qword_1EA19AC80, (uint64_t (*)(void))sub_1C03D1F0C, (uint64_t)&type metadata for A12_V5.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19AC78);
    }
  }
}

uint64_t sub_1C03D21A0(uint64_t a1)
{
  return sub_1C03CF230(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03D21A8(uint64_t a1)
{
  return sub_1C03D06F8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03D21B0(uint64_t a1)
{
  return sub_1C03D099C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03D21B8(uint64_t a1)
{
  return sub_1C03D0D54(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03D21C0(uint64_t a1)
{
  return sub_1C03CF570(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03D21C8(uint64_t a1)
{
  return sub_1C03CFB40(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03D21D0(uint64_t a1)
{
  return sub_1C03D011C(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V5.Layout.Attributes()
{
  return &type metadata for A12_V5.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V5.Layout()
{
  return &type metadata for A12_V5.Layout;
}

unint64_t sub_1C03D21FC()
{
  unint64_t result = qword_1EA19AC88;
  if (!qword_1EA19AC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC88);
  }
  return result;
}

unint64_t sub_1C03D2254()
{
  unint64_t result = qword_1EA19AC90;
  if (!qword_1EA19AC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC90);
  }
  return result;
}

unint64_t sub_1C03D22AC()
{
  unint64_t result = qword_1EA19AC98;
  if (!qword_1EA19AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AC98);
  }
  return result;
}

unint64_t sub_1C03D2304()
{
  unint64_t result = qword_1EA19ACA0;
  if (!qword_1EA19ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ACA0);
  }
  return result;
}

uint64_t sub_1C03D2358@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C03D265C(0, &qword_1EA19ACA8, (uint64_t (*)(void))sub_1C03D2608, (uint64_t)&type metadata for A12_V5.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03D2608();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C03D26C4(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C03D2608()
{
  unint64_t result = qword_1EA19ACB0;
  if (!qword_1EA19ACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ACB0);
  }
  return result;
}

void sub_1C03D265C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C03D26C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V5.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03D27D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V5.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V5.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C03D2814()
{
  unint64_t result = qword_1EA19ACC0;
  if (!qword_1EA19ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ACC0);
  }
  return result;
}

unint64_t sub_1C03D286C()
{
  unint64_t result = qword_1EA19ACC8;
  if (!qword_1EA19ACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ACC8);
  }
  return result;
}

unint64_t sub_1C03D28C4()
{
  unint64_t result = qword_1EA19ACD0;
  if (!qword_1EA19ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ACD0);
  }
  return result;
}

id sub_1C03D2918()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1A58]), sel_initWithTarget_action_, v0, sel_doPanGestureWithGesture_);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C03D2A44()
{
  uint64_t v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, sel_viewDidLoad);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController];
  objc_msgSend(v0, sel_addChildViewController_, v2);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v4 = result;
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = result;
  objc_msgSend(v4, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v6 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = result;
  objc_msgSend(result, sel_bounds);
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;

  objc_msgSend(v6, sel_setFrame_, v9, v11, v13, v15);
  id v16 = sub_1C03D2918();
  objc_msgSend(v16, sel_setDelegate_, v1);

  id result = objc_msgSend(v2, sel_toolbar);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v17 = result;
  id v18 = sub_1C03D2918();
  objc_msgSend(v17, sel_addGestureRecognizer_, v18);

  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController];
  objc_msgSend(v1, sel_addChildViewController_, v19);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v20 = result;
  id result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v21 = result;
  objc_msgSend(v20, sel_addSubview_, result);

  objc_msgSend(v19, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = result;
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    char v23 = result;
    objc_msgSend(result, sel_bounds);
    double v25 = v24;
    double v27 = v26;
    double v29 = v28;
    double v31 = v30;

    objc_msgSend(v22, sel_setFrame_, v25, v27, v29, v31);
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    return (id)swift_release();
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1C03D2DA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editor);
  type metadata accessor for DebugFormatConsoleAnimator();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 16) = v1;
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_1C0192730();
  return swift_release();
}

void sub_1C03D2E78()
{
  uint64_t v1 = v0;
  v77.receiver = v0;
  v77.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v77, sel_viewWillLayoutSubviews);
  if (v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight + 8])
  {
    id v2 = objc_msgSend(v0, sel_view);
    if (!v2)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    id v3 = v2;
    objc_msgSend(v2, sel_bounds);
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v78.origin.x = v5;
    v78.origin.y = v7;
    v78.size.width = v9;
    v78.size.height = v11;
    double v12 = CGRectGetHeight(v78) * 0.4;
  }
  else
  {
    double v12 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (!v76)
  {
    id v43 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController], sel_view);
    if (v43)
    {
      uint64_t v44 = v43;
      id v45 = objc_msgSend(v1, sel_view);
      if (v45)
      {
        unsigned int v46 = v45;
        objc_msgSend(v45, sel_bounds);
        double v48 = v47;
        double v50 = v49;
        double v52 = v51;
        double v54 = v53;

        objc_msgSend(v44, sel_setFrame_, v48, v50, v52, v54);
        id v55 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController], sel_view);
        if (v55)
        {
          double v28 = v55;
          id v56 = objc_msgSend(v1, sel_view);
          if (v56)
          {
            uint64_t v57 = v56;
            objc_msgSend(v56, sel_bounds);
            CGFloat v59 = v58;
            CGFloat v61 = v60;
            CGFloat v63 = v62;
            CGFloat v65 = v64;

            v81.origin.x = v59;
            v81.origin.y = v61;
            v81.size.width = v63;
            v81.size.height = v65;
            double Height = CGRectGetHeight(v81);
            id v66 = objc_msgSend(v1, sel_view);
            if (v66)
            {
              uint64_t v41 = v66;
              goto LABEL_20;
            }
LABEL_33:
            __break(1u);
            return;
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v76 != 1) {
    return;
  }
  id v13 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController], sel_view);
  if (!v13) {
    goto LABEL_23;
  }
  double v14 = v13;
  id v15 = objc_msgSend(v1, sel_view);
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v16 = v15;
  double v75 = v12;
  objc_msgSend(v15, sel_bounds);

  id v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v18 = v17;
  objc_msgSend(v17, sel_bounds);
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v79.origin.x = v20;
  v79.origin.y = v22;
  v79.size.width = v24;
  v79.size.height = v26;
  CGRectGetHeight(v79);
  double v12 = v75;
  sub_1C151F7BC();
  objc_msgSend(v14, sel_setFrame_);

  id v27 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController], sel_view);
  if (!v27)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  double v28 = v27;
  id v29 = objc_msgSend(v1, sel_view);
  if (!v29)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  double v30 = v29;
  objc_msgSend(v29, sel_bounds);
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;
  CGFloat v38 = v37;

  v80.origin.x = v32;
  v80.origin.y = v34;
  v80.size.width = v36;
  v80.size.height = v38;
  double v39 = CGRectGetHeight(v80);
  id v40 = objc_msgSend(v1, sel_view);
  if (!v40)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v41 = v40;
  double Height = v39 - v75;
LABEL_20:
  objc_msgSend(v41, sel_bounds);
  CGFloat v68 = v67;
  CGFloat v70 = v69;
  CGFloat v72 = v71;
  CGFloat v74 = v73;

  v82.origin.x = v68;
  v82.origin.y = v70;
  v82.size.width = v72;
  v82.size.height = v74;
  objc_msgSend(v28, sel_setFrame_, 0.0, Height, CGRectGetWidth(v82), v12);
}

void sub_1C03D3310(void *a1)
{
  id v2 = v1;
  double v4 = (char *)objc_msgSend(a1, sel_state);
  if ((unint64_t)(v4 - 3) >= 3)
  {
    if (v4 == (char *)2)
    {
      double v35 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
      if (v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession + 24]) {
        return;
      }
      double v36 = v35[1];
      double v37 = v35[2];
      id v38 = objc_msgSend(v2, sel_view);
      objc_msgSend(a1, sel_locationInView_, v38);
      double v40 = v39;

      id v41 = objc_msgSend(v2, sel_view);
      if (v41)
      {
        uint64_t v42 = v41;
        objc_msgSend(v41, sel_bounds);
        CGFloat v44 = v43;
        CGFloat v46 = v45;
        CGFloat v48 = v47;
        CGFloat v50 = v49;

        v105.origin.x = v44;
        v105.origin.y = v46;
        v105.size.width = v48;
        v105.size.height = v50;
        CGFloat Height = CGRectGetHeight(v105);
        double v52 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController];
        id v53 = objc_msgSend(v52, sel_toolbar);
        if (v53)
        {
          double v54 = v53;
          double v99 = Height;
          double v100 = v36;
          objc_msgSend(v53, sel_bounds);
          CGFloat v56 = v55;
          CGFloat v58 = v57;
          CGFloat v60 = v59;
          CGFloat v62 = v61;

          v106.origin.x = v56;
          v106.origin.y = v58;
          v106.size.width = v60;
          v106.size.height = v62;
          double v63 = CGRectGetHeight(v106);
          id v64 = objc_msgSend(v52, sel_view);
          if (v64)
          {
            CGFloat v65 = v64;
            double v66 = v40;
            double v67 = v37;
            objc_msgSend(v64, sel_safeAreaInsets);
            double v69 = v68;

            id v70 = objc_msgSend(v2, sel_view);
            if (v70)
            {
              double v71 = v70;
              objc_msgSend(v70, sel_bounds);
              CGFloat v73 = v72;
              CGFloat v75 = v74;
              CGFloat v77 = v76;
              CGFloat v79 = v78;

              v107.origin.x = v73;
              v107.origin.y = v75;
              v107.size.width = v77;
              v107.size.height = v79;
              double v80 = CGRectGetHeight(v107);
              id v81 = objc_msgSend(v2, sel_view);
              if (v81)
              {
                CGRect v82 = v81;
                double v83 = v67 + v100 + v66 - v100;
                double v84 = v99 - v63 - v69;
                double v85 = v80 * 0.4;
                objc_msgSend(v81, sel_bounds);
                CGFloat v87 = v86;
                CGFloat v89 = v88;
                CGFloat v91 = v90;
                CGFloat v93 = v92;

                v108.origin.x = v87;
                v108.origin.y = v89;
                v108.size.width = v91;
                v108.size.height = v93;
                double v94 = CGRectGetHeight(v108) - v83;
                if (v94 >= v84) {
                  double v94 = v84;
                }
                if (v85 > v94) {
                  double v94 = v85;
                }
                id v95 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
                *id v95 = v94;
                *((unsigned char *)v95 + 8) = 0;
                id v96 = objc_msgSend(v2, sel_view);
                if (v96)
                {
                  uint64_t v97 = v96;
                  objc_msgSend(v96, sel_setNeedsLayout);

                  id v98 = objc_msgSend(v2, sel_view);
                  if (v98)
                  {
                    id v101 = v98;
                    objc_msgSend(v98, sel_layoutIfNeeded);

                    return;
                  }
LABEL_35:
                  __break(1u);
                  return;
                }
LABEL_34:
                __break(1u);
                goto LABEL_35;
              }
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v4 != (char *)1) {
      return;
    }
    id v18 = objc_msgSend(v2, sel_view);
    objc_msgSend(a1, sel_locationInView_, v18);
    uint64_t v20 = v19;
    double v22 = v21;

    id v23 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController], sel_view);
    if (v23)
    {
      CGFloat v24 = v23;
      objc_msgSend(v23, sel_frame);
      CGFloat v26 = v25;
      CGFloat v28 = v27;
      CGFloat v30 = v29;
      CGFloat v32 = v31;

      v104.origin.x = v26;
      v104.origin.y = v28;
      v104.size.width = v30;
      v104.size.height = v32;
      CGFloat MinY = CGRectGetMinY(v104);
      CGFloat v34 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
      *(void *)CGFloat v34 = v20;
      v34[1] = v22;
      v34[2] = MinY - v22;
      *((unsigned char *)v34 + 24) = 0;
      swift_retain();
      sub_1C151895C();
      goto LABEL_10;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  CGFloat v5 = &v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
  *((void *)v5 + 1) = 0;
  *((void *)v5 + 2) = 0;
  *(void *)CGFloat v5 = 0;
  v5[24] = 1;
  swift_retain();
  sub_1C151895C();
  swift_release();
  double v6 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
  if (v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight + 8]) {
    return;
  }
  double v7 = *v6;
  id v8 = objc_msgSend(v2, sel_view);
  if (!v8)
  {
    __break(1u);
    goto LABEL_28;
  }
  CGFloat v9 = v8;
  objc_msgSend(v8, sel_bounds);
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;

  v103.origin.x = v11;
  v103.origin.y = v13;
  v103.size.width = v15;
  v103.size.height = v17;
  if (v7 < CGRectGetHeight(v103) * 0.2)
  {
    *double v6 = 0.0;
    *((unsigned char *)v6 + 8) = 1;
    swift_retain();
    sub_1C15170AC();
LABEL_10:
    swift_release();
  }
}

uint64_t type metadata accessor for DebugFormatConsoleViewController()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DebugFormatConsolePanSession(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatConsolePanSession(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatConsolePanSession()
{
  return &type metadata for DebugFormatConsolePanSession;
}

uint64_t sub_1C03D3A34()
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (v3)
  {
    char v0 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v1 = v0 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t FCFeedTheming.hasNavigationChromeBackgroundImage.getter()
{
  char v1 = self;
  id v2 = objc_msgSend(v1, sel_currentDevice);
  id v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3)
  {
    id v4 = objc_msgSend(v1, sel_currentDevice);
    objc_msgSend(v4, sel_userInterfaceIdiom);

    uint64_t result = (uint64_t)objc_msgSend(v0, sel_navigationChromeBackgroundImage);
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = (uint64_t)objc_msgSend(v0, sel_navigationChromeBackgroundImageCompact);
    if (!result) {
      return result;
    }
  }

  return 1;
}

id FCFeedTheming.navigationBarBackgroundColor.getter()
{
  char v1 = v0;
  id v2 = self;
  id v3 = objc_msgSend(v0, sel_navigationChromeBackgroundColor);
  if (v3 || (id v3 = objc_msgSend(v0, sel_backgroundColor)) != 0)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_ne_color);
  }
  else
  {
    id v11 = objc_msgSend(v2, sel_secondarySystemBackgroundColor);
    id v4 = objc_msgSend(v2, sel_systemBackgroundColor);
    id v5 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v11, v4);
  }
  id v6 = objc_msgSend(v1, sel_darkStyleNavigationChromeBackgroundColor);
  if (v6 || (id v6 = objc_msgSend(v1, sel_darkStyleBackgroundColor)) != 0)
  {
    id v7 = v6;
    id v8 = objc_msgSend(v6, sel_ne_color);
  }
  else
  {
    id v12 = objc_msgSend(v2, sel_secondarySystemBackgroundColor);
    id v7 = objc_msgSend(v2, sel_systemBackgroundColor);
    id v8 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v12, v7);
  }
  id v9 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v8);

  return v9;
}

id FCFeedTheming.navigationBarForegroundColor.getter()
{
  sub_1C03D41B8();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v1).n128_u64[0];
  id v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v0, sel_foregroundColor, v4);
  if (!v7) {
    goto LABEL_7;
  }
  id v8 = v7;
  double v36 = v6;
  uint64_t v37 = v3;
  uint64_t v38 = v2;
  id v9 = objc_msgSend(v0, sel_darkStyleForegroundColor, v0);
  if (!v9) {
    id v9 = objc_msgSend(self, sel_whiteColor);
  }
  objc_msgSend(v8, sel_red);
  double v11 = v10;
  objc_msgSend(v8, sel_green);
  double v13 = v12;
  objc_msgSend(v8, sel_blue);
  double v15 = v14;
  objc_msgSend(v8, sel_alpha);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, v11, v13, v15, v16);
  id v18 = v9;
  objc_msgSend(v18, sel_red);
  double v20 = v19;
  objc_msgSend(v18, sel_green);
  double v22 = v21;
  objc_msgSend(v18, sel_blue);
  double v24 = v23;
  objc_msgSend(v18, sel_alpha);
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, v20, v22, v24, v25);
  double v27 = self;
  id v28 = objc_msgSend(v27, sel_ts_dynamicColor_withDarkStyleVariant_, v17, v26);

  uint64_t v3 = v37;
  uint64_t v2 = v38;
  id v6 = v36;
  if (!v28)
  {
LABEL_7:
    CGFloat v32 = self;
    id v40 = objc_msgSend(v32, sel_blackColor);
    id v39 = objc_msgSend(v32, sel_whiteColor);
    sub_1BFF6B690();
    sub_1C151A1BC();
    id v33 = FCFeedTheming.navigationBarBackgroundColor.getter();
    sub_1C151A1CC();

    goto LABEL_8;
  }
  id v29 = FCFeedTheming.navigationBarBackgroundColor.getter();
  unsigned int v30 = objc_msgSend(v28, sel__isSimilarToColor_withinPercentage_, v29, 0.12);

  if (v30)
  {
    id v40 = objc_msgSend(v27, sel_blackColor);
    id v39 = objc_msgSend(v27, sel_whiteColor);
    sub_1BFF6B690();
    sub_1C151A1BC();
    id v31 = FCFeedTheming.navigationBarBackgroundColor.getter();
    sub_1C151A1CC();

LABEL_8:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return v40;
  }
  return v28;
}

id FCFeedTheming.navigationChromeBackgroundImage(for:userInterfaceIdiom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C03D4224(a1, a2, a3, (SEL *)&selRef_navigationChromeBackgroundImageCompact, (SEL *)&selRef_navigationChromeBackgroundImage);
}

void sub_1C03D41B8()
{
  if (!qword_1EB85C8F8)
  {
    sub_1BFF6B690();
    unint64_t v0 = sub_1C151A1DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C8F8);
    }
  }
}

id FCFeedTheming.darkStyleNavigationChromeBackgroundImage(for:userInterfaceIdiom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C03D4224(a1, a2, a3, (SEL *)&selRef_darkStyleNavigationChromeBackgroundImageCompact, (SEL *)&selRef_darkStyleNavigationChromeBackgroundImage);
}

id sub_1C03D4224(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  if (a2) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = a1 == 1;
  }
  if (!v6) {
    a4 = a5;
  }
  id v8 = [v5 *a4];
  return v8;
}

uint64_t FCFeedTheming.navigationChromeBackgroundImageContentMode(for:userInterfaceIdiom:)(uint64_t a1, uint64_t a2)
{
  if (!a1 || a1 == 2)
  {
    unint64_t v4 = (unint64_t)objc_msgSend(v2, sel_navigationChromeBackgroundImageContentMode);
  }
  else
  {
    if (a1 != 1)
    {
      unint64_t v4 = (unint64_t)objc_msgSend(v2, sel_navigationChromeBackgroundImageContentMode);
      if (v4 <= 9) {
        return qword_1C1545518[v4];
      }
      return 4;
    }
    uint64_t v3 = &selRef_navigationChromeBackgroundImageContentModeCompact;
    if (a2) {
      uint64_t v3 = &selRef_navigationChromeBackgroundImageContentMode;
    }
    unint64_t v4 = (unint64_t)[v2 *v3];
  }
  if (v4 < 0xA) {
    return qword_1C1545518[v4];
  }
  return 4;
}

uint64_t dispatch thunk of FormatTraversalContextType.inventory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FeedCursorToken.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorToken.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t FeedCursorToken.description.getter()
{
  return 0xD000000000000013;
}

unint64_t sub_1C03D43FC()
{
  return FeedCursorToken.description.getter();
}

uint64_t static FeedCursorToken.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

void *FeedCursorStore.__allocating_init(log:)(void *a1)
{
  uint64_t v2 = sub_1BFE155BC(a1);

  return v2;
}

void *FeedCursorStore.init(log:)(void *a1)
{
  uint64_t v2 = sub_1BFE155F8(a1);

  return v2;
}

uint64_t FeedCursorStore.update(location:cursorContainer:)(uint64_t a1, uint64_t a2)
{
  return sub_1BFE159E4(a2);
}

uint64_t FeedCursorStore.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedCursorStore.__deallocating_deinit()
{
  FeedCursorStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C03D452C()
{
  sub_1C019B9B4(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t FeedCursorStoreManager.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedCursorStoreManager.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedCursorToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursorToken);
}

uint64_t method lookup function for FeedCursorStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursorStore);
}

uint64_t dispatch thunk of FeedCursorStore.__allocating_init(log:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for FeedCursorStoreManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursorStoreManager);
}

uint64_t dispatch thunk of CoverChannelViewStylerType.cornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.accessoryLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.accessoryPointSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.titleLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.followingButtonTextLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.followingButtonTextPointSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.followingButtonTopPadding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.titleFontColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(title:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(dateText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(badgeText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(followButtonText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(unfollowButtonText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(imageView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(accessoryLabel:badge:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(followingButton:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(moreActionsButton:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

id sub_1C03D477C()
{
  uint64_t v1 = sub_1C15164AC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  sub_1C151644C();
  id v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  id v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v9 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v5;
  double v10 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  double v11 = *(void **)(v0 + 72);
  uint64_t v12 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v11;
  double v13 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 112) = v13;
  *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 120) = v6;
  swift_bridgeObjectRetain();
  id v14 = v8;
  id v15 = v5;
  id v16 = v10;
  id v17 = v11;
  id v18 = v13;
  id v19 = v6;
  sub_1BFF991DC(inited);
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  double v21 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  double v22 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

id sub_1C03D49DC()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v1, sel_setLineBreakMode_, 4);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  uint64_t v3 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  unint64_t v4 = *(void **)(v0 + 24);
  uint64_t v5 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v4;
  id v6 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  id v7 = *(void **)(v0 + 80);
  uint64_t v8 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v7;
  uint64_t v9 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = v9;
  *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 120) = v1;
  swift_bridgeObjectRetain();
  id v10 = v3;
  id v11 = v4;
  id v12 = v6;
  id v13 = v7;
  id v14 = v9;
  id v15 = v1;
  sub_1BFF991DC(inited);
  id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v17 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  id v18 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1C03D4BD4()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v1, sel_setAlignment_, 1);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  uint64_t v3 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  unint64_t v4 = *(void **)(v0 + 24);
  uint64_t v5 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v4;
  id v6 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  id v7 = *(void **)(v0 + 88);
  uint64_t v8 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v7;
  uint64_t v9 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = v9;
  *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 120) = v1;
  swift_bridgeObjectRetain();
  id v10 = v3;
  id v11 = v4;
  id v12 = v6;
  id v13 = v7;
  id v14 = v9;
  id v15 = v1;
  sub_1BFF991DC(inited);
  id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v17 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  id v18 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1C03D4DCC()
{
  uint64_t v1 = sub_1C15164AC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(v0 + 32);
  sub_1C151644C();
  id v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setAlignment_, 1);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  uint64_t v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v9 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v5;
  id v10 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  id v11 = *(void **)(v0 + 128);
  uint64_t v12 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v11;
  id v13 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 112) = v13;
  uint64_t v14 = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 120) = v6;
  id v15 = (void *)*MEMORY[0x1E4FB0710];
  *(void *)(inited + 144) = v14;
  *(void *)(inited + 152) = v15;
  *(void *)(inited + 184) = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 160) = 0xBFE0000000000000;
  id v16 = v5;
  swift_bridgeObjectRetain();
  id v17 = v8;
  id v18 = v10;
  id v19 = v11;
  id v20 = v13;
  id v21 = v6;
  id v22 = v15;
  sub_1BFF991DC(inited);
  id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  double v24 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  uint64_t v25 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  return v26;
}

id sub_1C03D5070()
{
  uint64_t v1 = sub_1C15164AC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v5 = *(id *)(v0 + 32);
  sub_1C151644C();
  id v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);

  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setAlignment_, 0);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  uint64_t v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v9 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v5;
  id v10 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  id v11 = self;
  id v12 = v5;
  swift_bridgeObjectRetain();
  id v13 = v8;
  id v14 = v10;
  id v15 = objc_msgSend(v11, sel_secondaryLabelColor);
  uint64_t v16 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v15;
  id v17 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 112) = v17;
  uint64_t v18 = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 120) = v6;
  id v19 = (void *)*MEMORY[0x1E4FB0710];
  *(void *)(inited + 144) = v18;
  *(void *)(inited + 152) = v19;
  *(void *)(inited + 184) = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 160) = 0xBFE0000000000000;
  id v20 = v17;
  id v21 = v6;
  id v22 = v19;
  sub_1BFF991DC(inited);
  id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  double v24 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  uint64_t v25 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  return v26;
}

void sub_1C03D5338(id a1, unsigned char *a2)
{
  if (*a2)
  {
    if (*a2 == 1)
    {
      objc_msgSend(a1, sel_setClipsToBounds_, 1);
      id v4 = objc_msgSend(a1, sel_layer);
      objc_msgSend(v4, sel_setCornerRadius_, 4.5);

      uint64_t v5 = *(void *)(v2 + 96);
    }
    else
    {
      objc_msgSend(a1, sel_setClipsToBounds_, 1);
      id v7 = objc_msgSend(a1, sel_layer);
      objc_msgSend(v7, sel_setCornerRadius_, 4.5);

      uint64_t v5 = *(void *)(v2 + 104);
    }
    objc_msgSend(a1, sel_setBackgroundColor_, v5);
  }
  else
  {
    objc_msgSend(a1, sel_setClipsToBounds_, 0);
    id v6 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v6, sel_setCornerRadius_, 0.0);

    id v8 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(a1, sel_setBackgroundColor_, v8);
  }
}

void sub_1C03D54CC(char *a1)
{
  uint64_t v3 = sub_1C151A17C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = &a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == *MEMORY[0x1E4FABC70])
  {
    id v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v9, sel_setBorderWidth_, 0.0);
LABEL_8:

    return;
  }
  if (v8 == *MEMORY[0x1E4FABC78])
  {
    id v10 = *(void **)(v1 + 128);
    uint64_t v11 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor;
    id v12 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor];
    *(void *)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor] = v10;
    id v13 = v10;

    id v14 = objc_msgSend(a1, sel_layer);
    id v15 = *(void **)&a1[v11];
    if (v15) {
      id v16 = objc_msgSend(v15, sel_CGColor);
    }
    else {
      id v16 = 0;
    }
    objc_msgSend(v14, sel_setBorderColor_, v16);

    id v17 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v17, sel_setBorderWidth_, 1.5);

    id v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(a1, sel_bounds);
    objc_msgSend(v9, sel_setCornerRadius_, CGRectGetHeight(v19) * 0.5);
    goto LABEL_8;
  }
  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C03D5788()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void **)(v0 + 40);
  uint64_t v5 = *(void **)(v0 + 48);

  id v6 = *(void **)(v0 + 64);
  id v7 = *(void **)(v0 + 72);
  int v8 = *(void **)(v0 + 80);
  id v9 = *(void **)(v0 + 88);
  id v10 = *(void **)(v0 + 96);
  uint64_t v11 = *(void **)(v0 + 104);
  id v12 = *(void **)(v0 + 112);
  id v13 = *(void **)(v0 + 120);

  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoverChannelViewStyler()
{
  return self;
}

double sub_1C03D5868()
{
  return 4.5;
}

id sub_1C03D5870()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 24), sel_lineHeight);
}

id sub_1C03D5884()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 24), sel_pointSize);
}

id sub_1C03D5898()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 16), sel_lineHeight);
}

id sub_1C03D58AC()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 32), sel_pointSize);
}

double sub_1C03D58C0()
{
  return 2.5;
}

id sub_1C03D58C8()
{
  return *(id *)(*(void *)v0 + 72);
}

id sub_1C03D58D4()
{
  return sub_1C03D477C();
}

id sub_1C03D58F8()
{
  return sub_1C03D49DC();
}

id sub_1C03D591C()
{
  return sub_1C03D4BD4();
}

id sub_1C03D5940()
{
  return sub_1C03D4DCC();
}

id sub_1C03D5964()
{
  return sub_1C03D5070();
}

void sub_1C03D598C(void *a1, unsigned char *a2)
{
}

void sub_1C03D59B0(char *a1)
{
}

void sub_1C03D59D4(char *a1)
{
  uint64_t v3 = *(void **)(*(void *)v1 + 72);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  uint64_t v5 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState];
  *(void *)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState] = v3;
  id v6 = v3;

  objc_msgSend(a1, sel_setTintColor_, *(void *)&a1[v4]);
}

void sub_1C03D5A58(void *a1)
{
  objc_msgSend(a1, sel_setClipsToBounds_, 1);
  id v2 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v2, sel_setCornerRadius_, 6.0);

  id v3 = objc_msgSend(a1, sel_layer);
  id v4 = objc_msgSend(self, sel_blackColor);
  id v5 = objc_msgSend(v4, sel_CGColor);

  objc_msgSend(v3, sel_setShadowColor_, v5);
  id v6 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v6, sel_setShadowOffset_, 0.0, 2.0);

  id v7 = objc_msgSend(a1, sel_layer);
  LODWORD(v8) = 1045220557;
  objc_msgSend(v7, sel_setShadowOpacity_, v8);

  id v9 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v9, sel_setShadowRadius_, 4.0);

  id v10 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v10, sel_setMasksToBounds_, 0);

  id v11 = objc_msgSend(a1, sel_layer);
  objc_msgSend(a1, sel_bounds);
  id v16 = objc_msgSend(self, sel_bezierPathWithRect_, v12, v13, v14, v15);
  id v17 = objc_msgSend(v16, sel_CGPath);

  objc_msgSend(v11, sel_setShadowPath_, v17);
}

uint64_t WebEmbedViewController.layoutIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t WebEmbedViewController.layoutIdentifier.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*WebEmbedViewController.layoutIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

id WebEmbedViewController.onReuse.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onReuse);
}

uint64_t sub_1C03D5DE8@<X0>(void *a1@<X0>, uint64_t (**a2)(double *a1)@<X8>)
{
  id v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    id v7 = sub_1C03E4D6C;
  }
  else
  {
    id v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(double *))v6;
  return sub_1BFC648F8(v4);
}

uint64_t sub_1C03D5E88(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C03E4D34;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  id v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *id v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BFC648F8(v3);
  return sub_1BFC3E5C0(v8);
}

uint64_t WebEmbedViewController.onSizeInvalidation.getter()
{
  return sub_1C03D6534(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation, (void (*)(void, void))sub_1C03E5044);
}

uint64_t WebEmbedViewController.onSizeInvalidation.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C03D65BC(a1, a2, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation, (uint64_t (*)(uint64_t, uint64_t))sub_1C03E5048);
}

uint64_t (*WebEmbedViewController.onSizeInvalidation.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t WebEmbedViewController.webLinkPresentingViewController.getter()
{
  return sub_1C03D627C(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webLinkPresentingViewController, MEMORY[0x1E4FBC928]);
}

void sub_1C03D600C()
{
  swift_beginAccess();
  uint64_t v0 = swift_unknownObjectWeakAssign();
  uint64_t v1 = (void *)MEMORY[0x1C18C9C60](v0);
  swift_unknownObjectWeakAssign();
}

void WebEmbedViewController.webLinkPresentingViewController.setter(void *a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakAssign();
  uint64_t v3 = (void *)MEMORY[0x1C18C9C60](v2);
  swift_unknownObjectWeakAssign();
}

void (*WebEmbedViewController.webLinkPresentingViewController.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webLinkPresentingViewController;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C18C9C60](v5);
  return sub_1C03D61A8;
}

void sub_1C03D61A8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 32) + *(void *)(v3 + 40);
    swift_endAccess();

    uint64_t v6 = (void *)MEMORY[0x1C18C9C60](v5);
    swift_unknownObjectWeakAssign();
  }
  free((void *)v3);
}

uint64_t WebEmbedViewController.resizingProvider.getter()
{
  return sub_1C03D627C(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_resizingProvider, MEMORY[0x1E4FBC948]);
}

uint64_t sub_1C03D627C(void *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return a2(v4);
}

uint64_t WebEmbedViewController.resizingProvider.setter()
{
  return swift_release();
}

void (*WebEmbedViewController.resizingProvider.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_resizingProvider;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1C02B352C;
}

uint64_t sub_1C03D63AC@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    id v7 = sub_1BFC81768;
  }
  else
  {
    id v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BFC648F8(v4);
}

uint64_t sub_1C03D644C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C03E4D2C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  id v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *id v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BFC648F8(v3);
  return sub_1BFC3E5C0(v8);
}

uint64_t WebEmbedViewController.onEmbedInteraction.getter()
{
  return sub_1C03D6534(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction, (void (*)(void, void))sub_1BFC648F8);
}

uint64_t sub_1C03D6534(void *a1, void (*a2)(void, void))
{
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t WebEmbedViewController.onEmbedInteraction.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C03D65BC(a1, a2, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC3E5C0);
}

uint64_t sub_1C03D65BC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *uint64_t v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*WebEmbedViewController.onEmbedInteraction.modify())()
{
  return j__swift_endAccess;
}

uint64_t WebEmbedViewController.showsLoadingSpinner.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  swift_beginAccess();
  return *v1;
}

id WebEmbedViewController.showsLoadingSpinner.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  swift_beginAccess();
  unsigned char *v3 = a1;
  double v4 = 0.0;
  if (a1) {
    double v4 = 1.0;
  }
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator), sel_setAlpha_, v4);
}

void (*WebEmbedViewController.showsLoadingSpinner.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C03D67AC;
}

void sub_1C03D67AC(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    double v5 = 0.0;
    if (*(unsigned char *)(v4 + v3[4])) {
      double v5 = 1.0;
    }
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator), sel_setAlpha_, v5);
  }
  free(v3);
}

id WebEmbedViewController.errorView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView);
}

BOOL static WebEmbedViewController.WebEmbedErrorPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WebEmbedViewController.WebEmbedErrorPosition.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t WebEmbedViewController.WebEmbedErrorPosition.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t WebEmbedViewController.errorPosition.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorPosition);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t WebEmbedViewController.errorPosition.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorPosition);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t (*WebEmbedViewController.errorPosition.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C03D69BC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  double v12 = &v19[-v11];
  uint64_t v13 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
  swift_beginAccess();
  sub_1BFE0BE50(v13, (uint64_t)v12, (uint64_t (*)(void))sub_1BFECFC20);
  swift_beginAccess();
  sub_1C03E4DFC(a1, v13, (uint64_t (*)(void))sub_1BFECFC20);
  swift_endAccess();
  sub_1BFE0BE50((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))sub_1BFECFC20);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    double v14 = (uint64_t (*)(void))sub_1BFECFC20;
    uint64_t v15 = (uint64_t)v9;
  }
  else
  {
    sub_1BFED36DC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24);
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager), v16);
    (*(void (**)(uint64_t, _UNKNOWN **, unsigned char *, uint64_t, uint64_t))(v17 + 24))(v1, &protocol witness table for WebEmbedViewController, v6, v16, v17);
    double v14 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
    uint64_t v15 = (uint64_t)v6;
  }
  sub_1C03E4E64(v15, v14);
  sub_1C03E4E64(a1, (uint64_t (*)(void))sub_1BFECFC20);
  return sub_1C03E4E64((uint64_t)v12, (uint64_t (*)(void))sub_1BFECFC20);
}

uint64_t sub_1C03D6C64(uint64_t a1)
{
  return sub_1C03D6CBC(a1, &qword_1EB863778);
}

uint64_t sub_1C03D6C90(uint64_t a1)
{
  return sub_1C03D6CBC(a1, &qword_1EB862900);
}

uint64_t sub_1C03D6CBC(uint64_t a1, void *a2)
{
  sub_1C151706C();
  sub_1C151704C();
  if (*a2 != -1) {
    swift_once();
  }
  sub_1C151703C();
  return swift_release();
}

id sub_1C03D6D48()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F81C10]);
  char v2 = (void *)sub_1C151E5EC();
  id v94 = objc_msgSend(v1, sel_initWithName_, v2);

  id v3 = objc_allocWithZone(MEMORY[0x1E4F81C10]);
  uint64_t v4 = (void *)sub_1C151E5EC();
  id v90 = objc_msgSend(v3, sel_initWithName_, v4);

  uint64_t v5 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v99 = sub_1C03E4234;
  uint64_t v100 = v5;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_1C03DD278;
  id v98 = &block_descriptor_22;
  uint64_t v6 = _Block_copy(&aBlock);
  swift_release();
  id v7 = objc_msgSend(v90, sel_onWillEnter_, v6);
  _Block_release(v6);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v99 = sub_1C03E4260;
  uint64_t v100 = v8;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_1C03DD278;
  id v98 = &block_descriptor_39;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  id v10 = objc_msgSend(v7, sel_onWillExit_, v9);
  _Block_release(v9);

  id v11 = objc_allocWithZone(MEMORY[0x1E4F81C10]);
  double v12 = (void *)sub_1C151E5EC();
  id v13 = objc_msgSend(v11, sel_initWithName_, v12);

  uint64_t v14 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v99 = sub_1C03E428C;
  uint64_t v100 = v14;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_1C03DD278;
  id v98 = &block_descriptor_43;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_release();
  id v16 = objc_msgSend(v13, sel_onWillEnter_, v15);
  _Block_release(v15);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v99 = sub_1C03E4294;
  uint64_t v100 = v17;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_1C03DDD78;
  id v98 = &block_descriptor_47;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_release();
  id v19 = objc_msgSend(v16, sel_onDidEnter_, v18);
  _Block_release(v18);

  uint64_t v20 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v99 = sub_1C03E429C;
  uint64_t v100 = v20;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_1C03DD278;
  id v98 = &block_descriptor_51;
  id v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = objc_msgSend(v19, sel_onWillExit_, v21);
  _Block_release(v21);

  id v23 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
  *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState) = v13;
  id v24 = v13;

  id v25 = objc_allocWithZone(MEMORY[0x1E4F81C10]);
  id v26 = (void *)sub_1C151E5EC();
  id v27 = objc_msgSend(v25, sel_initWithName_, v26);

  uint64_t v28 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v99 = sub_1C03E42A4;
  uint64_t v100 = v28;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_1C03DD278;
  id v98 = &block_descriptor_55_0;
  id v29 = _Block_copy(&aBlock);
  swift_release();
  id v30 = objc_msgSend(v27, sel_onWillEnter_, v29);
  _Block_release(v29);
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v99 = sub_1C03E42AC;
  uint64_t v100 = v31;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_1C03DD278;
  id v98 = &block_descriptor_59;
  CGFloat v32 = _Block_copy(&aBlock);
  swift_release();
  id v33 = objc_msgSend(v30, sel_onWillExit_, v32);
  _Block_release(v32);

  CGFloat v34 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
  *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState) = v27;
  id v35 = v27;

  id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F81C00]), sel_initWithState_withOwner_, v94, v0);
  objc_msgSend(v36, sel_addState_, v90);
  objc_msgSend(v36, sel_addState_, v24);
  objc_msgSend(v36, sel_addState_, v35);
  sub_1BFE4F78C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1540C60;
  *(void *)(inited + 32) = v24;
  *(void *)(inited + 40) = v35;
  *(void *)(inited + 48) = v90;
  unint64_t aBlock = inited;
  sub_1C151EBEC();
  unint64_t v38 = aBlock;
  if (!(aBlock >> 62))
  {
    uint64_t v39 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v40 = v24;
    id v41 = v35;
    id v42 = v90;
    if (!v39) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  id v43 = v24;
  id v44 = v35;
  id v45 = v90;
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v46) {
LABEL_3:
  }
    sub_1C00B8168(v38);
LABEL_5:
  swift_bridgeObjectRelease();
  id v47 = objc_allocWithZone(MEMORY[0x1E4F81C08]);
  id v48 = v94;
  double v49 = (void *)sub_1C151E5EC();
  sub_1BFC39268(0, &qword_1EB85C540);
  sub_1C03E42B4();
  CGFloat v50 = (void *)sub_1C151EFAC();
  swift_bridgeObjectRelease();
  id v92 = objc_msgSend(v47, sel_initWithName_transitionFromStates_toState_, v49, v50, v48);

  uint64_t v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = xmmword_1C1540C60;
  *(void *)(v51 + 32) = v48;
  *(void *)(v51 + 40) = v24;
  *(void *)(v51 + 48) = v35;
  unint64_t aBlock = v51;
  sub_1C151EBEC();
  unint64_t v52 = aBlock;
  if (!(aBlock >> 62))
  {
    uint64_t v53 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v54 = v24;
    id v55 = v35;
    id v56 = v48;
    CGFloat v93 = v48;
    if (!v53) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  id v57 = v24;
  id v58 = v35;
  id v59 = v48;
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  CGFloat v93 = v48;
  if (v60) {
LABEL_7:
  }
    sub_1C00B8168(v52);
LABEL_9:
  swift_bridgeObjectRelease();
  id v61 = objc_allocWithZone(MEMORY[0x1E4F81C08]);
  id v62 = v90;
  double v63 = (void *)sub_1C151E5EC();
  id v64 = (void *)sub_1C151EFAC();
  swift_bridgeObjectRelease();
  id v91 = objc_msgSend(v61, sel_initWithName_transitionFromStates_toState_, v63, v64, v62);

  uint64_t v65 = swift_initStackObject();
  *(_OWORD *)(v65 + 16) = xmmword_1C15320E0;
  *(void *)(v65 + 32) = v62;
  unint64_t aBlock = v65;
  sub_1C151EBEC();
  unint64_t v66 = aBlock;
  if (!(aBlock >> 62))
  {
    uint64_t v67 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v68 = v62;
    if (!v67) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  id v69 = v62;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v70) {
LABEL_11:
  }
    sub_1C00B8168(v66);
LABEL_13:
  swift_bridgeObjectRelease();
  id v71 = objc_allocWithZone(MEMORY[0x1E4F81C08]);
  id v72 = v24;
  CGFloat v73 = (void *)sub_1C151E5EC();
  double v74 = (void *)sub_1C151EFAC();
  swift_bridgeObjectRelease();
  id v75 = objc_msgSend(v71, sel_initWithName_transitionFromStates_toState_, v73, v74, v72);

  uint64_t v76 = swift_initStackObject();
  *(_OWORD *)(v76 + 16) = xmmword_1C15320F0;
  *(void *)(v76 + 32) = v62;
  *(void *)(v76 + 40) = v72;
  unint64_t aBlock = v76;
  sub_1C151EBEC();
  unint64_t v77 = aBlock;
  if (aBlock >> 62)
  {
    id v81 = v72;
    id v82 = v62;
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v83) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  uint64_t v78 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v79 = v72;
  id v80 = v62;
  if (v78) {
LABEL_15:
  }
    sub_1C00B8168(v77);
LABEL_17:
  swift_bridgeObjectRelease();
  id v84 = objc_allocWithZone(MEMORY[0x1E4F81C08]);
  id v85 = v35;
  double v86 = (void *)sub_1C151E5EC();
  CGFloat v87 = (void *)sub_1C151EFAC();
  swift_bridgeObjectRelease();
  id v88 = objc_msgSend(v84, sel_initWithName_transitionFromStates_toState_, v86, v87, v85);

  objc_msgSend(v36, sel_addEvent_, v92);
  objc_msgSend(v36, sel_addEvent_, v91);
  objc_msgSend(v36, sel_addEvent_, v75);
  objc_msgSend(v36, sel_addEvent_, v88);
  objc_msgSend(v36, sel_activate);

  return v36;
}

void sub_1C03D7918(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1C03D796C();
  }
}

id sub_1C03D796C()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v55 - v5;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)&v55 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL];
  swift_beginAccess();
  sub_1BFE0BE50(v20, (uint64_t)v15, (uint64_t (*)(void))sub_1BFF00BEC);
  id v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v21(v15, 1, v16) == 1) {
    return (id)sub_1C03E4E64((uint64_t)v15, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  id v61 = v9;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v60(v19, v15, v16);
  uint64_t v23 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location];
  if (!v23) {
    return (id)(*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  id v59 = v19;
  id v24 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  sub_1BFC66384((uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_configurationProvider], (uint64_t)v63);
  id v57 = __swift_project_boxed_opaque_existential_1(v63, v63[3]);
  uint64_t v58 = v23;
  swift_unknownObjectRetain();
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    id v25 = result;
    id v55 = v24;
    objc_msgSend(result, sel_bounds);
    double v27 = v26;
    double v29 = v28;

    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView], sel_frame);
    double v31 = v30;
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    uint64_t v38 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL];
    swift_beginAccess();
    id v56 = v12;
    sub_1BFE0BE50(v38, (uint64_t)v12, (uint64_t (*)(void))sub_1BFF00BEC);
    sub_1C151846C();
    uint64_t v39 = v62;
    sub_1BFE0BE50((uint64_t)v6, v62, (uint64_t (*)(void))type metadata accessor for FormatPictureInPictureModel);
    uint64_t v40 = 1;
    if (v21((char *)v39, 1, v16) != 1)
    {
      v60(v61, (char *)v39, v16);
      uint64_t v40 = 0;
    }
    uint64_t v41 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v61, v40, 1, v16);
    sub_1C03E4E64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatPictureInPictureModel);
    id v42 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration];
    id v43 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager];
    uint64_t v44 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 24];
    uint64_t v45 = *((void *)v43 + 4);
    __swift_project_boxed_opaque_existential_1(v43, v44);
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8);
    id v47 = v42;
    char v48 = v46(v44, v45);
    uint64_t v49 = *v57;
    uint64_t v50 = v58;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v52 = (uint64_t)v56;
    uint64_t v53 = (uint64_t)v59;
    id v54 = sub_1C1046544((uint64_t)v56, v50, (uint64_t)v59, v41, v47, v48 & 1, v49, ObjectType, v27, v29, v31, v33, v35, v37);

    sub_1C03E4E64(v41, (uint64_t (*)(void))sub_1BFF00BEC);
    sub_1C03E4E64(v52, (uint64_t (*)(void))sub_1BFF00BEC);
    objc_msgSend(v55, sel_setConfiguration_, v54);
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v53, v16);
    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall WebEmbedViewController.viewDidLoad()()
{
  id v1 = v0;
  v37.receiver = v0;
  v37.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v37, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, sel_setClipsToBounds_, 1);

  id v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v5 = v4;
  objc_msgSend(v4, sel_setAutoresizingMask_, 0);

  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  objc_msgSend(v1, sel_addChildViewController_, v6);
  id v7 = objc_msgSend(v1, sel_view);
  if (!v7)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v6, sel_view);
  if (!v9)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v10 = v9;
  objc_msgSend(v8, sel_addSubview_, v9);

  objc_msgSend(v6, sel_prewarm);
  id v11 = objc_msgSend(v6, sel_view);
  if (!v11)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  double v12 = v11;
  objc_msgSend(v11, sel_setHidden_, 1);

  objc_msgSend(v6, sel_didMoveToParentViewController_, v1);
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator];
  objc_msgSend(v13, sel_setAutoresizingMask_, 18);
  id v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, sel_addSubview_, v13);

  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];
  objc_msgSend(v16, sel_setAutoresizingMask_, 18);
  objc_msgSend(v16, sel_setHidden_, 1);
  id v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v18 = v17;
  objc_msgSend(v17, sel_addSubview_, v16);

  id v19 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView];
  objc_msgSend(v19, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v19, sel_setAutoresizingMask_, 18);
  id v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v21 = v20;
  objc_msgSend(v20, sel_addSubview_, v19);

  id v22 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
  if (v22)
  {
    id v23 = v22;
    id v24 = (void *)sub_1C151E5EC();
  }
  if (qword_1EB867318 != -1) {
    swift_once();
  }
  if (byte_1EB870160 == 1)
  {
    id v25 = (objc_class *)type metadata accessor for WebEmbedDebugView();
    id v26 = objc_allocWithZone(v25);
    double v27 = sub_1C0C65C94(1);
    id v28 = objc_msgSend(v1, sel_view);
    if (v28)
    {
      double v29 = v28;
      objc_msgSend(v28, sel_addSubview_, v27);

      double v30 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
      *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView] = v27;
      double v31 = v27;

      id v32 = objc_allocWithZone(v25);
      double v33 = sub_1C0C65C94(0);
      id v34 = objc_msgSend(v1, sel_view);
      if (v34)
      {
        double v35 = v34;
        objc_msgSend(v34, sel_addSubview_, v33);

        double v36 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
        *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView] = v33;

        return;
      }
LABEL_27:
      __break(1u);
      return;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
}

Swift::Void __swiftcall WebEmbedViewController.viewDidLayoutSubviews()()
{
  v88.receiver = v0;
  v88.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v88, sel_viewDidLayoutSubviews);
  id v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController], sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v4 = v3;
  objc_msgSend(v3, sel_bounds);
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
  sub_1C03D796C();
  uint64_t v13 = &v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorPosition];
  swift_beginAccess();
  char v14 = *v13;
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];
  if (v14)
  {
    id v16 = objc_msgSend(v0, sel_view);
    if (!v16)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    id v17 = v16;
    objc_msgSend(v16, sel_bounds);
    double v19 = v18;
    double v21 = v20;
    double v23 = v22;
    double v25 = v24;
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView], sel_frame);
    double v19 = v26;
    double v21 = v27;
    double v23 = v28;
    double v25 = v29;
  }
  objc_msgSend(v15, sel_setFrame_, v19, v21, v23, v25);
  double v30 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator];
  double v31 = &v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner];
  swift_beginAccess();
  double v32 = 0.0;
  double v33 = 0.0;
  double v34 = 0.0;
  double v35 = 0.0;
  if (*v31 == 1)
  {
    id v36 = objc_msgSend(v0, sel_view);
    if (!v36)
    {
LABEL_30:
      __break(1u);
      return;
    }
    objc_super v37 = v36;
    objc_msgSend(v36, sel_bounds);
    double v32 = v38;
    double v33 = v39;
    double v34 = v40;
    double v35 = v41;
  }
  objc_msgSend(v30, sel_setFrame_, v32, v33, v34, v35);
  id v42 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
  if (v42)
  {
    id v43 = v42;
    id v44 = objc_msgSend(v0, sel_view);
    if (v44)
    {
      uint64_t v45 = v44;
      objc_msgSend(v44, sel_bounds);
      double v47 = v46;
      double v49 = v48;
      double v51 = v50;
      double v53 = v52;

      objc_msgSend(v43, sel_setFrame_, v47, v49, v51, v53);
      id v54 = objc_msgSend(v43, sel_layer);
      id v55 = objc_msgSend(v0, sel_view);
      if (v55)
      {
        id v56 = v55;
        id v57 = objc_msgSend(v55, sel_layer);

        objc_msgSend(v57, sel_cornerRadius);
        double v59 = v58;

        objc_msgSend(v54, sel_setCornerRadius_, v59);
        id v60 = objc_msgSend(v43, sel_layer);
        id v61 = objc_msgSend(v0, sel_view);
        if (v61)
        {
          uint64_t v62 = v61;
          id v63 = objc_msgSend(v61, sel_layer);

          id v64 = objc_msgSend(v63, sel_cornerCurve);
          objc_msgSend(v60, sel_setCornerCurve_, v64);

          goto LABEL_15;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_15:
  uint64_t v65 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
  if (!v65) {
    return;
  }
  id v66 = v65;
  id v67 = objc_msgSend(v0, sel_view);
  if (!v67) {
    goto LABEL_26;
  }
  id v68 = v67;
  objc_msgSend(v67, sel_bounds);
  double v70 = v69;
  double v72 = v71;
  double v74 = v73;
  double v76 = v75;

  objc_msgSend(v66, sel_setFrame_, v70, v72, v74, v76);
  id v77 = objc_msgSend(v66, sel_layer);
  id v78 = objc_msgSend(v0, sel_view);
  if (!v78)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v79 = v78;
  id v80 = objc_msgSend(v78, sel_layer);

  objc_msgSend(v80, sel_cornerRadius);
  double v82 = v81;

  objc_msgSend(v77, sel_setCornerRadius_, v82);
  id v83 = objc_msgSend(v66, sel_layer);
  id v84 = objc_msgSend(v0, sel_view);
  if (!v84)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v85 = v84;
  id v86 = objc_msgSend(v84, sel_layer);

  id v87 = objc_msgSend(v86, sel_cornerCurve);
  objc_msgSend(v83, sel_setCornerCurve_, v87);
}

Swift::Void __swiftcall WebEmbedViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v4 - 8);
  double v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  *(void *)&double v8 = MEMORY[0x1F4188790](v7 - 8).n128_u64[0];
  double v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40.receiver = v1;
  v40.super_class = ObjectType;
  objc_msgSendSuper2(&v40, sel_viewWillAppear_, a1, v8);
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C15198DC();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB93C348);
  double v12 = v1;
  uint64_t v13 = sub_1C15198AC();
  os_log_type_t v14 = sub_1C151F38C();
  if (os_log_type_enabled(v13, v14))
  {
    double v35 = v6;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v39 = v37;
    *(_DWORD *)uint64_t v15 = 136315138;
    id v36 = v15 + 4;
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
    *(void *)(v16 + 56) = ObjectType;
    *(void *)(v16 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v16 + 32) = v12;
    id v17 = v12;
    uint64_t v18 = sub_1C151E66C();
    uint64_t v20 = v19;
    uint64_t v21 = (uint64_t)&v17[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    sub_1BFE0BE50(v21, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF00BEC);
    double v22 = &v17[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    uint64_t v23 = (uint64_t)v22;
    uint64_t v24 = (uint64_t)v35;
    sub_1BFE0BE50(v23, (uint64_t)v35, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v25 = sub_1C03E354C(v18, v20, (uint64_t)v10, v24);
    uint64_t v38 = sub_1BFDA76EC(v25, v26, &v39);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v13, v14, "View will appear, %s", v15, 0xCu);
    uint64_t v27 = v37;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v27, -1, -1);
    MEMORY[0x1C18C9B00](v15, -1, -1);
  }
  else
  {
  }
  sub_1C03D8D64();
  sub_1C03D9010();
  double v28 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
  if (v28)
  {
    id v29 = objc_msgSend(v28, sel_state);
    if (v29)
    {
      double v30 = v29;
      double v31 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState];
      if (v31)
      {
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
        id v32 = v31;
        char v33 = sub_1C151FB6C();

        if (v33) {
          sub_1C03D9310();
        }
      }
      else
      {
      }
    }
  }
}

void sub_1C03D8D64()
{
  uint64_t v1 = v0;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_state, v7);
    if (v11)
    {
      double v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
      if (v12)
      {
        id v20 = v11;
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
        id v13 = v12;
        char v14 = sub_1C151FB6C();

        if (v14)
        {
          uint64_t v15 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
          swift_beginAccess();
          sub_1BFE0BE50(v15, (uint64_t)v4, (uint64_t (*)(void))sub_1BFECFC20);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          {
            uint64_t v16 = (uint64_t (*)(void))sub_1BFECFC20;
            uint64_t v17 = (uint64_t)v4;
          }
          else
          {
            sub_1BFED36DC((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24);
            uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32);
            __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager), v18);
            (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v19 + 16))(v1, &protocol witness table for WebEmbedViewController, v9, v18, v19);
            uint64_t v16 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
            uint64_t v17 = (uint64_t)v9;
          }
          sub_1C03E4E64(v17, v16);
        }
      }
      else
      {
      }
    }
  }
}

void sub_1C03D9010()
{
  uint64_t v1 = v0;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_state, v7);
    if (v11)
    {
      double v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
      if (v12)
      {
        id v22 = v11;
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
        id v13 = v12;
        char v14 = sub_1C151FB6C();

        if (v14)
        {
          uint64_t v15 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager);
          uint64_t v16 = *(void *)(v1
                          + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager
                          + 24);
          uint64_t v17 = *(void *)(v1
                          + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager
                          + 32);
          __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager), v16);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17))
          {
            uint64_t v18 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
            swift_beginAccess();
            sub_1BFE0BE50(v18, (uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
            {
              sub_1C03E4E64((uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
              char v19 = sub_1C1515EBC();
              (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
              if (v19)
              {
                uint64_t v20 = v15[3];
                uint64_t v21 = v15[4];
                __swift_project_boxed_opaque_existential_1(v15, v20);
                (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v21 + 40))(v1, &protocol witness table for WebEmbedViewController, v20, v21);
              }
            }
          }
        }
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1C03D9310()
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint8_t *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v55 - v8;
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)&v55 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v61 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v55 - v17;
  char v19 = v0;
  uint64_t v20 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
  uint64_t v22 = v21;
  swift_beginAccess();
  uint64_t v23 = v20;
  uint64_t v24 = v14;
  sub_1BFE0BE50(v23, (uint64_t)v12, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v22) == 1) {
    return sub_1C03E4E64((uint64_t)v12, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  id v57 = v6;
  double v58 = v3;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v27(v18, v12, v22);
  uint64_t v28 = *(void *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location];
  if (!v28) {
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v18, v22);
  }
  uint64_t v59 = v24;
  id v60 = v18;
  uint64_t v29 = (uint64_t)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL];
  swift_beginAccess();
  sub_1BFE0BE50(v29, (uint64_t)v9, (uint64_t (*)(void))sub_1BFF00BEC);
  if (v25(v9, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v22);
    return sub_1C03E4E64((uint64_t)v9, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  else
  {
    double v30 = v61;
    v27(v61, v9, v22);
    double v31 = (uint64_t *)(*(void *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_delegate]
                    + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier);
    uint64_t v32 = v31[1];
    if (v32)
    {
      uint64_t v56 = *v31;
      char v33 = *(void **)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      objc_msgSend(v33, sel_frame);
      CGFloat v35 = v34;
      CGFloat v37 = v36;
      CGFloat v39 = v38;
      CGFloat v41 = v40;
      uint64_t v42 = (uint64_t)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL];
      swift_beginAccess();
      id v43 = v57;
      sub_1BFE0BE50(v42, (uint64_t)v57, (uint64_t (*)(void))sub_1BFF00BEC);
      double v44 = *(double *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize];
      double v45 = *(double *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize + 8];
      uint64_t v46 = (uint64_t)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      uint64_t v47 = (uint64_t)v58;
      sub_1BFE0BE50(v46, (uint64_t)v58, (uint64_t (*)(void))sub_1BFECFC20);
      double v48 = *(void **)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v50 = (uint64_t)v30;
      id v51 = v48;
      uint64_t v52 = (uint64_t)v60;
      sub_1C03E08FC((uint64_t)v60, v43, v28, v50, v47, v56, v32, v51, v35, v37, v39, v41, v44, v45, v19, ObjectType);
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      sub_1C03E4E64(v47, (uint64_t (*)(void))sub_1BFECFC20);
      sub_1C03E4E64((uint64_t)v43, (uint64_t (*)(void))sub_1BFF00BEC);
      double v53 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v53(v50, v22);
      return ((uint64_t (*)(uint64_t, uint64_t))v53)(v52, v22);
    }
    else
    {
      id v54 = *(void (**)(char *, uint64_t))(v59 + 8);
      v54(v30, v22);
      return ((uint64_t (*)(char *, uint64_t))v54)(v60, v22);
    }
  }
}

Swift::Void __swiftcall WebEmbedViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v46 - v12;
  sub_1BFF00BEC();
  *(void *)&double v15 = MEMORY[0x1F4188790](v14 - 8).n128_u64[0];
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54.receiver = v1;
  v54.super_class = ObjectType;
  objc_msgSendSuper2(&v54, sel_viewDidDisappear_, a1, v15);
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C15198DC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB93C348);
  char v19 = v1;
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  int v51 = v21;
  uint64_t v22 = &type metadata for FormatContentSlotItem;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v53[0] = v48;
    uint64_t v49 = v5;
    *(_DWORD *)uint64_t v23 = 136315138;
    v46[1] = v23 + 12;
    uint64_t v47 = v23;
    v46[0] = v23 + 4;
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    uint64_t v50 = v4;
    uint64_t v25 = v24;
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    *(void *)(v24 + 56) = ObjectType;
    *(void *)(v24 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v25 + 32) = v19;
    unint64_t v26 = v19;
    uint64_t v27 = sub_1C151E66C();
    uint64_t v28 = v7;
    uint64_t v30 = v29;
    uint64_t v31 = (uint64_t)&v26[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    sub_1BFE0BE50(v31, (uint64_t)v17, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v32 = (uint64_t)&v26[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    sub_1BFE0BE50(v32, (uint64_t)v13, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v33 = v27;
    uint64_t v4 = v50;
    uint64_t v34 = v30;
    uint64_t v7 = v28;
    uint64_t v35 = sub_1C03E354C(v33, v34, (uint64_t)v17, (uint64_t)v13);
    uint64_t v52 = sub_1BFDA76EC(v35, v36, v53);
    uint64_t v5 = v49;
    sub_1C151FE1C();

    uint64_t v22 = &type metadata for FormatContentSlotItem;
    swift_bridgeObjectRelease();
    CGFloat v37 = v47;
    _os_log_impl(&dword_1BFC31000, v20, (os_log_type_t)v51, "View did disappear, %s", v47, 0xCu);
    uint64_t v38 = v48;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v38, -1, -1);
    MEMORY[0x1C18C9B00](v37, -1, -1);
  }
  else
  {
  }
  uint64_t v39 = (uint64_t)&v19[v22[203].Kind];
  swift_beginAccess();
  sub_1BFE0BE50(v39, (uint64_t)v10, (uint64_t (*)(void))sub_1BFECFC20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    double v40 = (uint64_t (*)(void))sub_1BFECFC20;
    uint64_t v41 = (uint64_t)v10;
  }
  else
  {
    sub_1BFED36DC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v42 = *(void *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24];
    uint64_t v43 = *(void *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32];
    __swift_project_boxed_opaque_existential_1(&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager], v42);
    (*(void (**)(char *, _UNKNOWN **, char *, uint64_t, uint64_t))(v43 + 24))(v19, &protocol witness table for WebEmbedViewController, v7, v42, v43);
    double v40 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
    uint64_t v41 = (uint64_t)v7;
  }
  sub_1C03E4E64(v41, v40);
  uint64_t v44 = *(void *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 24];
  uint64_t v45 = *(void *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 32];
  __swift_project_boxed_opaque_existential_1(&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager], v44);
  (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v45 + 48))(v19, &protocol witness table for WebEmbedViewController, v44, v45);
}

id WebEmbedViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  v8.receiver = v3;
  v8.super_class = (Class)swift_getObjectType();
  id result = objc_msgSendSuper2(&v8, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  if (v3[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable] == 1) {
    return objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager], sel_prepareForLegacyResize);
  }
  return result;
}

uint64_t WebEmbedViewController.accessibilityElements.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController), sel_accessibilityElements);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

uint64_t (*WebEmbedViewController.accessibilityElements.modify(uint64_t *a1))()
{
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController), sel_accessibilityElements);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C151EBCC();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a1 = v5;
  return destroy for FormatOptionBindingModifier;
}

Swift::Void __swiftcall WebEmbedViewController.prepare(contentFrame:isResizable:)(__C::CGRect contentFrame, Swift::Bool isResizable)
{
  double height = contentFrame.size.height;
  double width = contentFrame.size.width;
  double y = contentFrame.origin.y;
  double x = contentFrame.origin.x;
  objc_super v8 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView);
  objc_msgSend(v8, sel_frame);
  v14.origin.double x = v9;
  v14.origin.double y = v10;
  v14.size.double width = v11;
  v14.size.double height = v12;
  v13.origin.double x = x;
  v13.origin.double y = y;
  v13.size.double width = width;
  v13.size.double height = height;
  if (!CGRectEqualToRect(v13, v14))
  {
    objc_msgSend(v8, sel_setFrame_, x, y, width, height);
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged) = 1;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable) = isResizable;
}

void WebEmbedViewController.populate(with:contentFrame:dataFeedURL:location:sourceURL:viewportSize:dataVisualization:identifier:feedConfiguration:)(uint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, double a13, double a14)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C03E08FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v14, ObjectType);
}

uint64_t sub_1C03DA37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v59[1] = a3;
  uint64_t v67 = a2;
  uint64_t v69 = a1;
  uint64_t v5 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  MEMORY[0x1F4188790](v5);
  v59[0] = (uint64_t)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03E3B94(0);
  uint64_t v62 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v65 = (uint64_t)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v60 = (uint64_t)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v68 = (uint64_t)v59 - v12;
  sub_1C0092B34();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v66 = (uint64_t)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  os_log_type_t v21 = (char *)v59 - v20;
  uint64_t v22 = sub_1C1515FDC();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  id v61 = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)v59 - v27;
  int v29 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16);
  v30((char *)v59 - v27, v69, v22, v26);
  if (v29 == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
LABEL_9:
    uint64_t v34 = v68;
    sub_1BFE0BE50(v67, v68, (uint64_t (*)(void))sub_1BFECFC20);
LABEL_10:
    CGFloat v37 = sub_1BFECFC20;
    uint64_t v38 = v34;
LABEL_11:
    sub_1C03E4E64(v38, (uint64_t (*)(void))v37);
    return 1;
  }
  uint64_t v69 = v4;
  uint64_t v31 = v4 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v30)(v21, v28, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  uint64_t v32 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1BFE0BE50(v31, (uint64_t)v16, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE0BE50((uint64_t)v21, v32, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v33((uint64_t)v16, 1, v22) == 1)
  {
    sub_1C03E4E64((uint64_t)v21, (uint64_t (*)(void))sub_1BFF00BEC);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    if (v33(v32, 1, v22) == 1)
    {
      sub_1C03E4E64((uint64_t)v16, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v34 = v68;
      sub_1BFE0BE50(v67, v68, (uint64_t (*)(void))sub_1BFECFC20);
      goto LABEL_14;
    }
LABEL_8:
    sub_1C03E4E64((uint64_t)v16, (uint64_t (*)(void))sub_1C0092B34);
    goto LABEL_9;
  }
  uint64_t v35 = v66;
  sub_1BFE0BE50((uint64_t)v16, v66, (uint64_t (*)(void))sub_1BFF00BEC);
  if (v33(v32, 1, v22) == 1)
  {
    sub_1C03E4E64((uint64_t)v21, (uint64_t (*)(void))sub_1BFF00BEC);
    unint64_t v36 = *(void (**)(char *, uint64_t))(v23 + 8);
    v36(v28, v22);
    v36((char *)v35, v22);
    goto LABEL_8;
  }
  double v40 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v61, v32, v22);
  sub_1C03E3CF4((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
  char v41 = sub_1C151E5CC();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v23 + 8);
  v42(v40, v22);
  sub_1C03E4E64((uint64_t)v21, (uint64_t (*)(void))sub_1BFF00BEC);
  v42(v28, v22);
  v42((char *)v35, v22);
  sub_1C03E4E64((uint64_t)v16, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v34 = v68;
  sub_1BFE0BE50(v67, v68, (uint64_t (*)(void))sub_1BFECFC20);
  if ((v41 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v43 = v69;
  uint64_t v44 = v69 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
  swift_beginAccess();
  uint64_t v45 = v65;
  uint64_t v46 = v65 + *(int *)(v62 + 48);
  sub_1BFE0BE50(v44, v65, (uint64_t (*)(void))sub_1BFECFC20);
  sub_1BFE0BE50(v34, v46, (uint64_t (*)(void))sub_1BFECFC20);
  uint64_t v47 = v64;
  uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v48(v45, 1, v64) == 1)
  {
    sub_1C03E4E64(v34, (uint64_t (*)(void))sub_1BFECFC20);
    if (v48(v46, 1, v47) == 1) {
      goto LABEL_23;
    }
LABEL_19:
    CGFloat v37 = sub_1C03E3B94;
    uint64_t v38 = v45;
    goto LABEL_11;
  }
  uint64_t v49 = v60;
  sub_1BFE0BE50(v45, v60, (uint64_t (*)(void))sub_1BFECFC20);
  if (v48(v46, 1, v47) == 1)
  {
    sub_1C03E4E64(v34, (uint64_t (*)(void))sub_1BFECFC20);
    sub_1C03E4E64(v49, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_19;
  }
  uint64_t v50 = v59[0];
  sub_1BFED36DC(v46, v59[0], (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v51 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v53 = v52;
  if (v51 == WebEmbedDataVisualization.identifier.getter() && v53 == v54)
  {
    swift_bridgeObjectRelease_n();
    sub_1C03E4E64(v50, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    sub_1C03E4E64(v34, (uint64_t (*)(void))sub_1BFECFC20);
    sub_1C03E4E64(v49, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_23:
    sub_1C03E4E64(v45, (uint64_t (*)(void))sub_1BFECFC20);
    goto LABEL_24;
  }
  char v58 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C03E4E64(v50, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C03E4E64(v34, (uint64_t (*)(void))sub_1BFECFC20);
  sub_1C03E4E64(v49, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C03E4E64(v45, (uint64_t (*)(void))sub_1BFECFC20);
  if ((v58 & 1) == 0) {
    return 1;
  }
LABEL_24:
  uint64_t v55 = *(void **)(v43 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration);
  sub_1BFC39268(0, &qword_1EB86B438);
  id v56 = v55;
  char v57 = sub_1C151FB6C();

  if ((v57 & 1) == 0) {
    return 1;
  }
  return objc_msgSend(*(id *)(v43 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView), sel_isHidden) ^ 1;
}

void sub_1C03DAD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_1C151631C();
  uint64_t v7 = *(v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = swift_projectBox();
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1C18C9C60](a1 + 16);
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    uint64_t v59 = v16;
    if (qword_1EB8629B8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C15198DC();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB93C348);
    uint64_t v20 = v18;
    os_log_type_t v21 = sub_1C15198AC();
    os_log_type_t v22 = sub_1C151F38C();
    int v23 = v22;
    BOOL v24 = os_log_type_enabled(v21, v22);
    uint64_t v60 = a2;
    uint64_t v61 = a3;
    if (v24)
    {
      uint64_t v57 = (uint64_t)v9;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v64[0] = v56;
      char v58 = v6;
      uint64_t v55 = v25;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v54 = v25 + 4;
      sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C1529AE0;
      *(void *)(v26 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(void *)(v26 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
      *(void *)(v26 + 32) = v20;
      uint64_t v27 = v20;
      int v53 = v23;
      uint64_t v28 = v27;
      uint64_t v29 = sub_1C151E66C();
      uint64_t v31 = v30;
      uint64_t v32 = v7;
      uint64_t v33 = (uint64_t)&v28[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
      swift_beginAccess();
      sub_1BFE0BE50(v33, (uint64_t)v15, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v34 = &v28[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      uint64_t v35 = (uint64_t)v34;
      uint64_t v7 = v32;
      sub_1BFE0BE50(v35, (uint64_t)v12, (uint64_t (*)(void))sub_1BFECFC20);
      uint64_t v36 = sub_1C03E354C(v29, v31, (uint64_t)v15, (uint64_t)v12);
      uint64_t v62 = sub_1BFDA76EC(v36, v37, v64);
      uint64_t v6 = v58;
      sub_1C151FE1C();

      uint64_t v9 = (char *)v57;
      swift_bridgeObjectRelease();
      uint64_t v38 = v55;
      _os_log_impl(&dword_1BFC31000, v21, (os_log_type_t)v53, "Did finish presenting, %s", v55, 0xCu);
      uint64_t v39 = v56;
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v39, -1, -1);
      MEMORY[0x1C18C9B00](v38, -1, -1);
    }
    else
    {
    }
    double v40 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
    if (v40)
    {
      char v58 = v40;
      uint64_t v57 = sub_1C151E5EC();
      uint64_t v41 = v59;
      swift_beginAccess();
      uint64_t v42 = *(void (**)(char *, uint64_t, void *))(v7 + 16);
      v42(v9, v41, v6);
      uint64_t v43 = v9;
      SuccessContext = (objc_class *)type metadata accessor for LoadSuccessContext(0);
      id v45 = objc_allocWithZone(SuccessContext);
      uint64_t v46 = v61;
      swift_bridgeObjectRetain();
      uint64_t v47 = (char *)v45;
      sub_1C151630C();
      uint64_t v48 = &v47[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_identifier];
      *(void *)uint64_t v48 = v60;
      *((void *)v48 + 1) = v46;
      v42(&v47[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_startDate], (uint64_t)v43, v6);

      v63.receiver = v47;
      v63.super_class = SuccessContext;
      id v49 = objc_msgSendSuper2(&v63, sel_init);
      (*(void (**)(char *, void *))(v7 + 8))(v43, v6);
      uint64_t v51 = (void *)v57;
      id v50 = v58;
    }
    sub_1C03DB2D0();
  }
}

id sub_1C03DB2D0()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier];
  id result = (id)swift_beginAccess();
  uint64_t v3 = v1[1];
  if (v3 && v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable] == 1)
  {
    uint64_t v4 = *v1;
    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
    swift_bridgeObjectRetain();
    objc_msgSend(v5, sel_height);
    double v7 = v6;
    id result = objc_msgSend(v0, sel_view);
    if (result)
    {
      uint64_t v8 = result;
      objc_msgSend(result, sel_bounds);
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;

      v28.origin.double x = v10;
      v28.origin.double y = v12;
      v28.size.double width = v14;
      v28.size.double height = v16;
      if (v7 == CGRectGetHeight(v28)) {
        return (id)swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      if (!swift_weakLoadStrong()) {
        return (id)swift_bridgeObjectRelease();
      }
      id result = objc_msgSend(v0, sel_view);
      if (result)
      {
        uint64_t v17 = result;
        objc_msgSend(result, sel_bounds);
        CGFloat v19 = v18;
        CGFloat v21 = v20;
        CGFloat v23 = v22;
        CGFloat v25 = v24;

        v29.origin.double x = v19;
        v29.origin.double y = v21;
        v29.size.double width = v23;
        v29.size.double height = v25;
        double Width = CGRectGetWidth(v29);
        objc_msgSend(v5, sel_height);
        sub_1C02B2264(v4, v3, Width, v27, *(double *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize], *(double *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize + 8]);
        swift_release();
        return (id)swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_1C03DB4B4(uint64_t a1)
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  double v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + 16;
  uint64_t v13 = swift_projectBox();
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C18C9C60](v12);
  if (v14)
  {
    double v15 = (void *)v14;
    sub_1C151630C();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v13, v11, v8);
    if (qword_1EB8629B8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C15198DC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB93C348);
    uint64_t v17 = v15;
    double v18 = sub_1C15198AC();
    os_log_type_t v19 = sub_1C151F38C();
    if (os_log_type_enabled(v18, v19))
    {
      double v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v39 = v37;
      *(_DWORD *)double v20 = 136315138;
      v35[1] = v20 + 4;
      uint64_t v36 = v20;
      sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
      *(void *)(v21 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(void *)(v21 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
      *(void *)(v21 + 32) = v17;
      double v22 = v17;
      uint64_t v23 = sub_1C151E66C();
      uint64_t v25 = v24;
      uint64_t v26 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
      swift_beginAccess();
      sub_1BFE0BE50(v26, (uint64_t)v7, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v27 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      sub_1BFE0BE50(v27, (uint64_t)v4, (uint64_t (*)(void))sub_1BFECFC20);
      uint64_t v28 = sub_1C03E354C(v23, v25, (uint64_t)v7, (uint64_t)v4);
      uint64_t v38 = sub_1BFDA76EC(v28, v29, &v39);
      sub_1C151FE1C();

      swift_bridgeObjectRelease();
      uint64_t v30 = v36;
      _os_log_impl(&dword_1BFC31000, v18, v19, "Will start presenting, %s", v36, 0xCu);
      uint64_t v31 = v37;
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v31, -1, -1);
      MEMORY[0x1C18C9B00](v30, -1, -1);
    }
    else
    {
    }
    uint64_t v32 = *(void **)&v17[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
    if (v32)
    {
      id v33 = v32;
      uint64_t v34 = (void *)sub_1C151E5EC();
    }
  }
}

void sub_1C03DB988(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
    swift_beginAccess();
    uint64_t v5 = (void (*)(void))*v4;
    sub_1BFC648F8(*v4);

    if (v5)
    {
      v5();
      sub_1BFC3E5C0((uint64_t)v5);
    }
  }
}

void sub_1C03DBA28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)sub_1C151631C();
  uint64_t v9 = *(v8 - 1);
  MEMORY[0x1F4188790](v8);
  double v11 = &v66[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v66[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = swift_projectBox();
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x1C18C9C60](a2 + 16);
  if (v18)
  {
    os_log_type_t v19 = (void *)v18;
    uint64_t v73 = a3;
    if (qword_1EB8629B8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C15198DC();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C348);
    id v21 = a1;
    id v22 = v19;
    id v23 = a1;
    uint64_t v24 = (char *)v22;
    uint64_t v25 = sub_1C15198AC();
    os_log_type_t v26 = sub_1C151F38C();
    int v27 = v26;
    BOOL v28 = os_log_type_enabled(v25, v26);
    uint64_t v74 = a4;
    double v76 = v24;
    if (v28)
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      uint64_t v69 = v30;
      uint64_t v70 = swift_slowAlloc();
      v80[0] = v70;
      *(_DWORD *)uint64_t v29 = 138543618;
      uint64_t v71 = v9;
      id v31 = a1;
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
      double v72 = v8;
      uint64_t v33 = v32;
      uint64_t v78 = v32;
      sub_1C151FE1C();
      *uint64_t v30 = v33;

      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v68 = v29 + 14;
      sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
      *(void *)(v34 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(void *)(v34 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
      uint64_t v35 = v76;
      *(void *)(v34 + 32) = v76;
      id v36 = v35;
      uint64_t v37 = sub_1C151E66C();
      uint64_t v38 = v25;
      uint64_t v39 = v11;
      uint64_t v41 = v40;
      int v67 = v27;
      uint64_t v42 = (uint64_t)v36 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
      swift_beginAccess();
      sub_1BFE0BE50(v42, (uint64_t)v17, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v43 = (uint64_t)v36 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
      swift_beginAccess();
      sub_1BFE0BE50(v43, (uint64_t)v14, (uint64_t (*)(void))sub_1BFECFC20);
      uint64_t v44 = v41;
      double v11 = v39;
      uint64_t v45 = sub_1C03E354C(v37, v44, (uint64_t)v17, (uint64_t)v14);
      uint64_t v77 = sub_1BFDA76EC(v45, v46, v80);
      sub_1C151FE1C();

      uint64_t v9 = v71;
      uint64_t v8 = v72;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v38, (os_log_type_t)v67, "Failed loading with error=%{public}@, %s", (uint8_t *)v29, 0x16u);
      sub_1C01DA31C();
      uint64_t v47 = v69;
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v47, -1, -1);
      uint64_t v48 = v70;
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v48, -1, -1);
      MEMORY[0x1C18C9B00](v29, -1, -1);

      id v49 = v76;
    }
    else
    {

      id v49 = v24;
    }
    id v50 = *(void **)&v49[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
    if (v50)
    {
      double v72 = v50;
      uint64_t v71 = sub_1C151E5EC();
      uint64_t v51 = v75;
      swift_beginAccess();
      uint64_t v52 = *(void (**)(char *, uint64_t, void *))(v9 + 16);
      v52(v11, v51, v8);
      int v53 = v8;
      FailureContext = (objc_class *)type metadata accessor for LoadFailureContext(0);
      uint64_t v55 = v11;
      id v56 = objc_allocWithZone(FailureContext);
      id v57 = a1;
      uint64_t v58 = v74;
      swift_bridgeObjectRetain();
      uint64_t v59 = (char *)v56;
      sub_1C151630C();
      uint64_t v60 = &v59[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_identifier];
      *(void *)uint64_t v60 = v73;
      *((void *)v60 + 1) = v58;
      v52(&v59[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_startDate], (uint64_t)v55, v53);
      *(void *)&v59[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_error] = a1;
      id v61 = a1;

      v79.receiver = v59;
      v79.super_class = FailureContext;
      id v62 = objc_msgSendSuper2(&v79, sel_init);

      objc_super v63 = v55;
      id v49 = v76;
      (*(void (**)(unsigned char *, void *))(v9 + 8))(v63, v53);
      uint64_t v65 = (void *)v71;
      id v64 = v72;
    }
  }
}

void sub_1C03DC0DC(uint64_t a1, double a2, double a3)
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v9 - 8);
  double v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1C18C9C60](a1 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v14 = v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize;
    if ((*(unsigned char *)(v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize + 16) & 1) != 0
      || *(double *)v14 != a2
      || *(double *)(v14 + 8) != a3)
    {
      if (qword_1EB8629B8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1C15198DC();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EB93C348);
      uint64_t v16 = v13;
      uint64_t v17 = sub_1C15198AC();
      os_log_type_t v18 = sub_1C151F38C();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        int v38 = v19;
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        v40[0] = v37;
        *(_DWORD *)uint64_t v20 = 136315138;
        void v35[2] = v20 + 12;
        id v36 = v20;
        v35[1] = v20 + 4;
        sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
        *(void *)(v21 + 56) = type metadata accessor for WebEmbedViewController(0);
        *(void *)(v21 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
        *(void *)(v21 + 32) = v16;
        id v22 = v16;
        uint64_t v23 = sub_1C151E66C();
        uint64_t v25 = v24;
        uint64_t v26 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
        swift_beginAccess();
        sub_1BFE0BE50(v26, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF00BEC);
        uint64_t v27 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
        swift_beginAccess();
        sub_1BFE0BE50(v27, (uint64_t)v8, (uint64_t (*)(void))sub_1BFECFC20);
        uint64_t v28 = sub_1C03E354C(v23, v25, (uint64_t)v11, (uint64_t)v8);
        uint64_t v39 = sub_1BFDA76EC(v28, v29, v40);
        sub_1C151FE1C();

        swift_bridgeObjectRelease();
        uint64_t v30 = v36;
        _os_log_impl(&dword_1BFC31000, v17, (os_log_type_t)v38, "Preferred size did update, %s", v36, 0xCu);
        uint64_t v31 = v37;
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v31, -1, -1);
        MEMORY[0x1C18C9B00](v30, -1, -1);
      }
      else
      {
      }
      *(double *)uint64_t v14 = a2;
      *(double *)(v14 + 8) = a3;
      *(unsigned char *)(v14 + 16) = 0;
      uint64_t v32 = &v16[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation];
      swift_beginAccess();
      uint64_t v33 = *(void (**)(uint64_t, double, double))v32;
      if (*(void *)v32)
      {
        uint64_t v34 = swift_retain();
        v33(v34, a2, a3);
        sub_1BFC3E5C0((uint64_t)v33);
      }
    }
  }
}

void sub_1C03DC524(uint64_t a1, char a2, int a3)
{
  LODWORD(v3) = a3;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v9 - 8);
  double v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1C18C9C60](a1 + 16);
  if (!v12) {
    return;
  }
  uint64_t v13 = (void *)v12;
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C15198DC();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB93C348);
  uint64_t v15 = v13;
  uint64_t v16 = sub_1C15198AC();
  os_log_type_t v17 = sub_1C151F38C();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v41 = v37;
    *(_DWORD *)uint64_t v19 = 67109378;
    int v40 = a2 & 1;
    sub_1C151FE1C();
    *(_WORD *)(v19 + 8) = 2080;
    uint64_t v36 = v19 + 10;
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
    *(void *)(v20 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(void *)(v20 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v20 + 32) = v15;
    uint64_t v21 = v15;
    int v35 = v18;
    id v22 = v21;
    uint64_t v23 = sub_1C151E66C();
    int v38 = v3;
    uint64_t v3 = v24;
    uint64_t v25 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    sub_1BFE0BE50(v25, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v26 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    sub_1BFE0BE50(v26, (uint64_t)v8, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v27 = sub_1C03E354C(v23, v3, (uint64_t)v11, (uint64_t)v8);
    uint64_t v39 = sub_1BFDA76EC(v27, v28, &v41);
    sub_1C151FE1C();

    LOBYTE(v3) = v38;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v16, (os_log_type_t)v35, "Did load data visualization data store, isEmbedInitialized=%{BOOL}d, %s", (uint8_t *)v19, 0x12u);
    uint64_t v29 = v37;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v29, -1, -1);
    MEMORY[0x1C18C9B00](v19, -1, -1);

    if ((a2 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_8:
    if (v3)
    {
      id v30 = objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController], sel_view);
      if (!v30)
      {
        __break(1u);
        return;
      }
      uint64_t v31 = v30;
      objc_msgSend(v30, sel_setHidden_, 0);
    }
    goto LABEL_11;
  }

  if (a2) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v32 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
  if (v32)
  {
    uint64_t v33 = v32;
    sub_1C0C6586C(0);

    uint64_t v15 = v33;
  }
}

void sub_1C03DC978(uint64_t a1)
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C18C9C60](a1 + 16);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    if (qword_1EB8629B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C15198DC();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB93C348);
    double v11 = v9;
    uint64_t v12 = sub_1C15198AC();
    os_log_type_t v13 = sub_1C151F38C();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v32 = v30;
      *(_DWORD *)uint64_t v14 = 136315138;
      unint64_t v28 = v14 + 4;
      uint64_t v29 = v14;
      sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(void *)(v15 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
      *(void *)(v15 + 32) = v11;
      uint64_t v16 = v11;
      uint64_t v17 = sub_1C151E66C();
      uint64_t v19 = v18;
      uint64_t v20 = (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
      swift_beginAccess();
      sub_1BFE0BE50(v20, (uint64_t)v7, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v21 = (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      sub_1BFE0BE50(v21, (uint64_t)v4, (uint64_t (*)(void))sub_1BFECFC20);
      uint64_t v22 = sub_1C03E354C(v17, v19, (uint64_t)v7, (uint64_t)v4);
      uint64_t v31 = sub_1BFDA76EC(v22, v23, &v32);
      sub_1C151FE1C();

      swift_bridgeObjectRelease();
      uint64_t v24 = v29;
      _os_log_impl(&dword_1BFC31000, v12, v13, "Did load live activity data store, %s", v29, 0xCu);
      uint64_t v25 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v25, -1, -1);
      MEMORY[0x1C18C9B00](v24, -1, -1);
    }
    else
    {
    }
    uint64_t v26 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
    if (v26)
    {
      id v27 = v26;
      sub_1C0C6586C(2uLL);
    }
  }
}

uint64_t sub_1C03DCD4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C15198DC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151989C();
  uint64_t v12 = v3;
  os_log_type_t v13 = sub_1C15198AC();
  os_log_type_t v14 = sub_1C151F38C();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v39 = v9;
    uint64_t v40 = v8;
    uint64_t v41 = a1;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    aBlock[0] = v38;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v16 = &v12[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    uint64_t v17 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v16, 1, v5))
    {
      unint64_t v18 = 0xE500000000000000;
      uint64_t v19 = 0x3E6C696E3CLL;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v7, v16, v5);
      uint64_t v19 = sub_1C1515E2C();
      unint64_t v18 = v21;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
    }
    uint64_t v22 = v39;
    uint64_t v45 = sub_1BFDA76EC(v19, v18, aBlock);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v13, v14, "WebEmbedViewController will inject live activity store, embedURL=%{public}s", v15, 0xCu);
    uint64_t v23 = v38;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v23, -1, -1);
    MEMORY[0x1C18C9B00](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v40);
    uint64_t v20 = v44;
    a1 = v41;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v20 = v44;
  }
  uint64_t v24 = (objc_class *)type metadata accessor for LiveActivityEmbedScript();
  uint64_t v25 = objc_allocWithZone(v24);
  uint64_t v26 = &v25[OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_identifier];
  *uint64_t v26 = 0xD000000000000018;
  v26[1] = 0x80000001C160E3E0;
  v25[OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_queueable] = 0;
  *(void *)&v25[OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_newDatastore] = a1;
  v47.receiver = v25;
  v47.super_class = v24;
  id v27 = a1;
  id v28 = objc_msgSendSuper2(&v47, sel_init);
  uint64_t v29 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  id v30 = objc_msgSend(v29, sel_scriptsManager);
  swift_bridgeObjectRetain();
  uint64_t v31 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_removeScriptByIdentifier_, v31);
  swift_unknownObjectRelease();

  id v32 = objc_msgSend(v29, sel_scriptsManager);
  uint64_t v33 = v43;
  if (v43)
  {
    aBlock[4] = v43;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BFC9FC68;
    aBlock[3] = (uint64_t)&block_descriptor_76;
    uint64_t v34 = _Block_copy(aBlock);
    id v35 = v28;
    sub_1BFC648F8(v33);
    swift_release();
  }
  else
  {
    id v36 = v28;
    uint64_t v34 = 0;
  }
  objc_msgSend(v32, sel_executeScript_completion_, v28, v34);
  _Block_release(v34);
  swift_unknownObjectRelease();

  objc_msgSend(objc_msgSend(v29, sel_scriptsManager), sel_addScript_, v28);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C03DD278(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_retain();
  id v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, v8);
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

void sub_1C03DD308(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, SEL *a5)
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v11 - 8);
  os_log_type_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C15198DC();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB93C348);
  swift_retain_n();
  uint64_t v15 = sub_1C15198AC();
  os_log_type_t v16 = sub_1C151F38C();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v40 = a4;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v44[0] = v39;
    uint64_t v38 = v17;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v37 = v17 + 4;
    uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
    uint64_t v41 = a3 + 16;
    uint64_t v19 = (void *)Strong;
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v20 = swift_allocObject();
    uint64_t v42 = a5;
    uint64_t v21 = v20;
    *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
    *(void *)(v20 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(void *)(v21 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v21 + 32) = v19;
    id v22 = v19;
    uint64_t v23 = sub_1C151E66C();
    uint64_t v25 = v24;
    uint64_t v26 = (uint64_t)v22 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BFE0BE50(v26, (uint64_t)v13, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v27 = (uint64_t)v22 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BFE0BE50(v27, (uint64_t)v10, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v28 = sub_1C03E354C(v23, v25, (uint64_t)v13, (uint64_t)v10);
    unint64_t v30 = v29;

    uint64_t v43 = sub_1BFDA76EC(v28, v30, v44);
    sub_1C151FE1C();
    swift_release_n();
    a5 = v42;
    swift_bridgeObjectRelease();
    uint64_t v31 = v38;
    _os_log_impl(&dword_1BFC31000, v15, v16, v40, v38, 0xCu);
    uint64_t v32 = v39;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v32, -1, -1);
    MEMORY[0x1C18C9B00](v31, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v33 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v34 = &v33[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner];
  swift_beginAccess();
  LODWORD(v34) = *v34;

  if (v34 == 1)
  {
    id v35 = (char *)swift_unknownObjectUnownedLoadStrong();
    id v36 = *(id *)&v35[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator];

    [v36 *a5];
  }
}

void sub_1C03DD740()
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C15198DC();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB93C348);
  swift_retain_n();
  uint64_t v7 = sub_1C15198AC();
  os_log_type_t v8 = sub_1C151F38C();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    *(_DWORD *)uint64_t v9 = 136315138;
    v23[1] = v9 + 4;
    uint64_t v24 = v9;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
    *(void *)(v11 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(void *)(v11 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v11 + 32) = Strong;
    id v12 = Strong;
    uint64_t v13 = sub_1C151E66C();
    uint64_t v15 = v14;
    uint64_t v16 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BFE0BE50(v16, (uint64_t)v5, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v17 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BFE0BE50(v17, (uint64_t)v2, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v18 = sub_1C03E354C(v13, v15, (uint64_t)v5, (uint64_t)v2);
    unint64_t v20 = v19;

    uint64_t v26 = sub_1BFDA76EC(v18, v20, &v27);
    sub_1C151FE1C();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v21 = v24;
    _os_log_impl(&dword_1BFC31000, v7, v8, "Will present as loaded, %s", v24, 0xCu);
    uint64_t v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v22, -1, -1);
    MEMORY[0x1C18C9B00](v21, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

void sub_1C03DDAE8(void *a1)
{
  uint64_t v2 = sub_1C151555C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v7 = *(id *)&Strong[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];

  id v8 = objc_msgSend(v7, sel_view);
  if (!v8)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  objc_msgSend(v8, sel_setHidden_, 0);

  uint64_t v9 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
  swift_unknownObjectRetain();

  objc_msgSend(v10, sel_setPresentationState_, 1);
  swift_unknownObjectRelease();
  if (objc_msgSend(a1, sel_context))
  {
    type metadata accessor for LoadSuccessContext(0);
    uint64_t v11 = swift_dynamicCastClass();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = (void *)swift_unknownObjectUnownedLoadStrong();
      sub_1BFC66384((uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_coordinator, (uint64_t)v19);

      uint64_t v14 = v20;
      uint64_t v15 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      uint64_t v16 = *(void *)(v12
                      + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_identifier);
      uint64_t v17 = *(void *)(v12
                      + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_identifier
                      + 8);
      sub_1C15154DC();
      (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v15 + 16))(v16, v17, v5, v14, v15);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  if (!objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F81BF0]), sel_initWithValue_, 0)) {
    goto LABEL_9;
  }
}

id sub_1C03DDD78(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(id, void *))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a3;
  swift_retain();
  id v6 = a2;
  swift_unknownObjectRetain();
  id v7 = (void *)v5(v6, v9);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v7;
}

void sub_1C03DDE20()
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C15198DC();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB93C348);
  swift_retain_n();
  id v7 = sub_1C15198AC();
  os_log_type_t v8 = sub_1C151F38C();
  int v9 = v8;
  if (os_log_type_enabled(v7, v8))
  {
    int v32 = v9;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v34 = v31;
    *(_DWORD *)uint64_t v10 = 136315138;
    unint64_t v29 = v10 + 4;
    unint64_t v30 = v10;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    *(void *)(v12 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(void *)(v12 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v12 + 32) = Strong;
    id v13 = Strong;
    uint64_t v14 = sub_1C151E66C();
    uint64_t v16 = v15;
    uint64_t v17 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BFE0BE50(v17, (uint64_t)v5, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v18 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BFE0BE50(v18, (uint64_t)v2, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v19 = sub_1C03E354C(v14, v16, (uint64_t)v5, (uint64_t)v2);
    unint64_t v21 = v20;

    uint64_t v33 = sub_1BFDA76EC(v19, v21, &v34);
    sub_1C151FE1C();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v22 = v30;
    _os_log_impl(&dword_1BFC31000, v7, (os_log_type_t)v32, "Will present as unloaded, %s", v30, 0xCu);
    uint64_t v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v23, -1, -1);
    MEMORY[0x1C18C9B00](v22, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v24 = (char *)swift_unknownObjectUnownedLoadStrong();
  id v25 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];

  id v26 = objc_msgSend(v25, sel_view);
  if (v26)
  {
    objc_msgSend(v26, sel_setHidden_, 1);

    uint64_t v27 = (char *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v28 = *(void **)&v27[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
    swift_unknownObjectRetain();

    objc_msgSend(v28, sel_setPresentationState_, 2);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C03DE27C(void *a1)
{
  uint64_t v2 = sub_1C151555C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v6 - 8);
  os_log_type_t v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C15198DC();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB93C348);
  swift_retain_n();
  id v13 = sub_1C15198AC();
  os_log_type_t v14 = sub_1C151F38C();
  int v15 = v14;
  BOOL v16 = os_log_type_enabled(v13, v14);
  uint64_t v52 = v5;
  uint64_t v53 = v3;
  if (v16)
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v55[0] = v49;
    uint64_t v51 = v2;
    *(_DWORD *)uint64_t v17 = 136315138;
    objc_super v47 = v17 + 4;
    uint64_t v48 = v17;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
    *(void *)(v19 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(void *)(v19 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v19 + 32) = Strong;
    id v20 = Strong;
    uint64_t v21 = sub_1C151E66C();
    int v46 = v15;
    uint64_t v23 = v22;
    id v50 = a1;
    uint64_t v24 = (uint64_t)v20 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BFE0BE50(v24, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v25 = (uint64_t)v20 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BFE0BE50(v25, (uint64_t)v8, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v26 = sub_1C03E354C(v21, v23, (uint64_t)v11, (uint64_t)v8);
    unint64_t v28 = v27;

    uint64_t v54 = sub_1BFDA76EC(v26, v28, v55);
    uint64_t v2 = v51;
    sub_1C151FE1C();
    swift_release_n();
    a1 = v50;
    swift_bridgeObjectRelease();
    unint64_t v29 = v48;
    _os_log_impl(&dword_1BFC31000, v13, (os_log_type_t)v46, "Will present as error state, %s", v48, 0xCu);
    uint64_t v30 = v49;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v29, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v31 = (char *)swift_unknownObjectUnownedLoadStrong();
  id v32 = *(id *)&v31[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];

  objc_msgSend(v32, sel_setHidden_, 0);
  uint64_t v33 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v34 = objc_msgSend(v33, sel_view);

  if (v34)
  {
    id v35 = (char *)swift_unknownObjectUnownedLoadStrong();
    id v36 = *(id *)&v35[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_tapGestureRecognizer];

    objc_msgSend(v34, sel_addGestureRecognizer_, v36);
    if (objc_msgSend(a1, sel_context))
    {
      type metadata accessor for LoadFailureContext(0);
      uint64_t v37 = swift_dynamicCastClass();
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v39 = (void *)swift_unknownObjectUnownedLoadStrong();
        sub_1BFC66384((uint64_t)v39 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_coordinator, (uint64_t)v55);

        uint64_t v40 = v56;
        uint64_t v41 = v57;
        __swift_project_boxed_opaque_existential_1(v55, v56);
        uint64_t v42 = *(void *)(v38
                        + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_identifier);
        uint64_t v43 = *(void *)(v38
                        + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_identifier
                        + 8);
        uint64_t v44 = v52;
        sub_1C15154DC();
        (*(void (**)(uint64_t, uint64_t, unsigned char *, void, uint64_t, uint64_t))(v41 + 24))(v42, v43, v44, *(void *)(v38 + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_error), v40, v41);
        (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v44, v2);
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C03DE888()
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C15198DC();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB93C348);
  swift_retain_n();
  uint64_t v7 = sub_1C15198AC();
  os_log_type_t v8 = sub_1C151F38C();
  int v9 = v8;
  if (os_log_type_enabled(v7, v8))
  {
    int v33 = v9;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v35 = v32;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v30 = v10 + 4;
    uint64_t v31 = v10;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    *(void *)(v12 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(void *)(v12 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v12 + 32) = Strong;
    id v13 = Strong;
    uint64_t v14 = sub_1C151E66C();
    uint64_t v16 = v15;
    uint64_t v17 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BFE0BE50(v17, (uint64_t)v5, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v18 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BFE0BE50(v18, (uint64_t)v2, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v19 = sub_1C03E354C(v14, v16, (uint64_t)v5, (uint64_t)v2);
    unint64_t v21 = v20;

    uint64_t v34 = sub_1BFDA76EC(v19, v21, &v35);
    sub_1C151FE1C();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v22 = v31;
    _os_log_impl(&dword_1BFC31000, v7, (os_log_type_t)v33, "Will remove error state, %s", v31, 0xCu);
    uint64_t v23 = v32;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v23, -1, -1);
    MEMORY[0x1C18C9B00](v22, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v24 = (char *)swift_unknownObjectUnownedLoadStrong();
  id v25 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];

  objc_msgSend(v25, sel_setHidden_, 1);
  uint64_t v26 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v27 = objc_msgSend(v26, sel_view);

  if (v27)
  {
    unint64_t v28 = (char *)swift_unknownObjectUnownedLoadStrong();
    id v29 = *(id *)&v28[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_tapGestureRecognizer];

    objc_msgSend(v27, sel_removeGestureRecognizer_, v29);
  }
  else
  {
    __break(1u);
  }
}

id WebEmbedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void WebEmbedViewController.init(nibName:bundle:)()
{
}

Swift::Void __swiftcall WebEmbedViewController.prepareForReuse()()
{
  uint64_t v1 = v0;
  MEMORY[0x1C18C4390]();

  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *uint64_t v2 = 0;
  v2[1] = 0;
  sub_1BFC3E5C0(v3);
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *uint64_t v4 = 0;
  v4[1] = 0;
  sub_1BFC3E5C0(v5);
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize;
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(unsigned char *)(v6 + 16) = 1;
}

void sub_1C03DF168()
{
}

void sub_1C03DF18C()
{
  sub_1C03E3CF4((unint64_t *)&unk_1EB877AE0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
  JUMPOUT(0x1C18C4650);
}

Swift::Void __swiftcall WebEmbedViewController.refresh()()
{
  uint64_t v1 = v0;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  int v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_state, v7);
    uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
    if (v11)
    {
      id v13 = v11;
      if (!v12)
      {

        goto LABEL_15;
      }
      sub_1BFC39268(0, &qword_1EB85C540);
      id v14 = v12;
      id v15 = v13;
      char v16 = sub_1C151FB6C();

      if ((v16 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
  }
  if (v12)
  {
LABEL_15:
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager), sel_refresh);
    return;
  }
LABEL_8:
  uint64_t v17 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
  swift_beginAccess();
  sub_1BFE0BE50(v17, (uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C03E4E64((uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  if (qword_1EB862F50 != -1) {
    swift_once();
  }
  int v18 = byte_1EB86BFB1;
  uint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController);
  unint64_t v20 = (void *)sub_1C1515E9C();
  if (v18 == 1) {
    objc_msgSend(v19, sel_loadURL_cachePolicy_, v20, 4);
  }
  else {
    objc_msgSend(v19, sel_loadURL_, v20);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1C03DF504()
{
}

id WebEmbedViewController.isSelectable.getter()
{
  id result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_interactionProvider), sel_interaction);
  if (result)
  {
    unint64_t v2 = (unint64_t)objc_msgSend(result, sel_type);
    swift_unknownObjectRelease();
    if (v2 >= 3)
    {
      id result = (id)sub_1C152040C();
      __break(1u);
    }
    else
    {
      return (id)((v2 & 7) == 2);
    }
  }
  return result;
}

unint64_t sub_1C03DF5EC()
{
  return (unint64_t)WebEmbedViewController.isSelectable.getter() & 1;
}

void (*sub_1C03DF61C(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C151A6BC();
  return sub_1C02B53A8;
}

void WebEmbedViewController.webEmbedDataSourceManager(_:dataVisualization:didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v76 = a3;
  uint64_t v75 = type metadata accessor for WebEmbedDatastoreUpdate();
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v66 = (uint64_t)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03E3B74(0);
  uint64_t v70 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v72 = (uint64_t)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00A8ACC(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v68 = (uint64_t)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v69 = (uint64_t)v65 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v67 = (uint64_t)v65 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v73 = (uint64_t)v65 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v74 = (uint64_t)v65 - v17;
  uint64_t v18 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03E3B94(0);
  uint64_t v23 = v22 - 8;
  MEMORY[0x1F4188790](v22);
  id v25 = (char *)v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v26 - 8);
  unint64_t v28 = (char *)v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v65 - v30;
  sub_1BFE0BE50(a2, (uint64_t)v65 - v30, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v31, 0, 1, v18);
  uint64_t v32 = v3;
  uint64_t v33 = v3 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
  swift_beginAccess();
  uint64_t v34 = (uint64_t)&v25[*(int *)(v23 + 56)];
  sub_1BFE0BE50((uint64_t)v31, (uint64_t)v25, (uint64_t (*)(void))sub_1BFECFC20);
  sub_1BFE0BE50(v33, v34, (uint64_t (*)(void))sub_1BFECFC20);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v35((uint64_t)v25, 1, v18) == 1)
  {
    sub_1C03E4E64((uint64_t)v31, (uint64_t (*)(void))sub_1BFECFC20);
    if (v35(v34, 1, v18) == 1) {
      goto LABEL_11;
    }
LABEL_6:
    id v36 = sub_1C03E3B94;
    uint64_t v37 = (uint64_t)v25;
LABEL_7:
    sub_1C03E4E64(v37, (uint64_t (*)(void))v36);
    return;
  }
  sub_1BFE0BE50((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(void))sub_1BFECFC20);
  if (v35(v34, 1, v18) == 1)
  {
    sub_1C03E4E64((uint64_t)v31, (uint64_t (*)(void))sub_1BFECFC20);
    sub_1C03E4E64((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_6;
  }
  sub_1BFED36DC(v34, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v38 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v40 = v39;
  if (v38 == WebEmbedDataVisualization.identifier.getter() && v40 == v41)
  {
    swift_bridgeObjectRelease_n();
    sub_1C03E4E64((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    sub_1C03E4E64((uint64_t)v31, (uint64_t (*)(void))sub_1BFECFC20);
    sub_1C03E4E64((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_11:
    sub_1C03E4E64((uint64_t)v25, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v42 = v32;
    goto LABEL_12;
  }
  char v56 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C03E4E64((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C03E4E64((uint64_t)v31, (uint64_t (*)(void))sub_1BFECFC20);
  sub_1C03E4E64((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C03E4E64((uint64_t)v25, (uint64_t (*)(void))sub_1BFECFC20);
  uint64_t v42 = v32;
  if ((v56 & 1) == 0) {
    return;
  }
LABEL_12:
  uint64_t v43 = *(void **)(v42 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v43)
  {
    id v44 = objc_msgSend(v43, sel_state);
    if (v44)
    {
      uint64_t v45 = v44;
      int v46 = *(void **)(v42 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
      if (!v46)
      {

        return;
      }
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
      id v47 = v46;
      char v48 = sub_1C151FB6C();

      if ((v48 & 1) == 0) {
        return;
      }
      v65[1] = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController__lastDatastoreUpdate;
      swift_retain();
      uint64_t v49 = v74;
      sub_1C1518EBC();
      swift_release();
      uint64_t v50 = v73;
      sub_1BFE0BE50(v76, v73, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
      uint64_t v51 = v71;
      uint64_t v52 = v75;
      v65[0] = *(void *)(v71 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v65[0])(v50, 0, 1, v75);
      uint64_t v53 = v72;
      uint64_t v54 = v72 + *(int *)(v70 + 48);
      sub_1BFE0BE50(v49, v72, (uint64_t (*)(void))sub_1C00A8ACC);
      sub_1BFE0BE50(v50, v54, (uint64_t (*)(void))sub_1C00A8ACC);
      uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
      if (v55(v53, 1, v52) == 1)
      {
        sub_1C03E4E64(v50, (uint64_t (*)(void))sub_1C00A8ACC);
        sub_1C03E4E64(v49, (uint64_t (*)(void))sub_1C00A8ACC);
        if (v55(v54, 1, v52) == 1)
        {
          id v36 = sub_1C00A8ACC;
          uint64_t v37 = v53;
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v57 = v67;
        sub_1BFE0BE50(v53, v67, (uint64_t (*)(void))sub_1C00A8ACC);
        if (v55(v54, 1, v52) != 1)
        {
          uint64_t v58 = v66;
          sub_1BFED36DC(v54, v66, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
          char updated = _s8NewsFeed23WebEmbedDatastoreUpdateV2eeoiySbAC_ACtFZ_0(v57, v58);
          sub_1C03E4E64(v58, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
          sub_1C03E4E64(v73, (uint64_t (*)(void))sub_1C00A8ACC);
          sub_1C03E4E64(v74, (uint64_t (*)(void))sub_1C00A8ACC);
          sub_1C03E4E64(v57, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
          sub_1C03E4E64(v53, (uint64_t (*)(void))sub_1C00A8ACC);
          if (updated) {
            return;
          }
          goto LABEL_26;
        }
        sub_1C03E4E64(v73, (uint64_t (*)(void))sub_1C00A8ACC);
        sub_1C03E4E64(v74, (uint64_t (*)(void))sub_1C00A8ACC);
        sub_1C03E4E64(v57, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
      }
      sub_1C03E4E64(v53, (uint64_t (*)(void))sub_1C03E3B74);
LABEL_26:
      uint64_t v60 = v76;
      uint64_t v61 = v69;
      sub_1BFE0BE50(v76, v69, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
      uint64_t v62 = v75;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v65[0])(v61, 0, 1, v75);
      sub_1BFE0BE50(v61, v68, (uint64_t (*)(void))sub_1C00A8ACC);
      swift_retain();
      sub_1C1518ECC();
      swift_release();
      sub_1C03E4E64(v61, (uint64_t (*)(void))sub_1C00A8ACC);
      objc_msgSend(*(id *)(v42 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController), sel_loadLocalDatastore_forceUpdate_completion_, *(void *)(*(void *)(v60 + *(int *)(v62 + 20)) + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), 0, 0);
      objc_super v63 = *(void **)(v42 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView);
      if (v63)
      {
        id v64 = v63;
        sub_1C0C6586C(1uLL);
      }
    }
  }
}

uint64_t WebEmbedViewController.liveActivityWebEmbedDatastoreDidChange(datastore:swDatastore:)(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1C03DCD4C(a2, (uint64_t)sub_1C03E3C4C, v3);
  return swift_release_n();
}

void sub_1C03E0354(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView);
    if (v4)
    {
      id v5 = v4;
      sub_1C0C6586C(3uLL);
    }
  }
}

uint64_t sub_1C03E03C8(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1C03DCD4C(a2, (uint64_t)sub_1C03E3C4C, v3);
  return swift_release_n();
}

Swift::Void __swiftcall WebEmbedViewController.sceneWillEnterForeground()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_state);
    if (v2)
    {
      uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
      if (v3)
      {
        id v6 = v2;
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
        id v4 = v3;
        char v5 = sub_1C151FB6C();

        if (v5)
        {
          sub_1C03D9310();
        }
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1C03E0540()
{
  swift_getObjectType();
  return sub_1C15187EC();
}

uint64_t sub_1C03E057C()
{
  swift_getObjectType();
  return sub_1C151881C();
}

uint64_t sub_1C03E05D8()
{
  swift_getObjectType();
  return sub_1C15187EC();
}

uint64_t sub_1C03E0614()
{
  swift_getObjectType();
  return sub_1C151881C();
}

uint64_t sub_1C03E066C()
{
  swift_getObjectType();
  return sub_1C15187EC();
}

id sub_1C03E06D8()
{
  return sub_1C03E07F8(type metadata accessor for LoadSuccessContext);
}

id sub_1C03E07E0()
{
  return sub_1C03E07F8(type metadata accessor for LoadFailureContext);
}

id sub_1C03E07F8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1C03E08FC(uint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, id a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, double a13, double a14, char *a15, uint64_t a16)
{
  uint64_t v362 = a7;
  uint64_t v361 = a6;
  v366 = (uint8_t *)a5;
  uint64_t v360 = a4;
  uint64_t v359 = a3;
  v358 = a2;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C0092B34();
  uint64_t v342 = v24;
  MEMORY[0x1F4188790](v24);
  v351 = (char *)&v323 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1C1515FDC();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  v334 = (char *)&v323 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  v333 = (char *)&v323 - v30;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v348 = (uint64_t)&v323 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v364 = (uint64_t)&v323 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v346 = (uint64_t)&v323 - v36;
  v357 = (char *)type metadata accessor for WebEmbedDataVisualization();
  uint64_t v347 = *((void *)v357 - 1);
  MEMORY[0x1F4188790](v357);
  uint64_t v340 = (uint64_t)&v323 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v323 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v336 = (uint64_t)&v323 - v42;
  uint64_t v43 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1F4188790](v43 - 8);
  uint64_t v45 = (char *)&v323 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v46);
  v345 = (char *)&v323 - v47;
  sub_1C00A8ACC(0);
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v354 = (uint64_t)&v323 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  v355 = (char *)&v323 - v51;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v339 = (uint64_t)&v323 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v54);
  uint64_t v356 = (uint64_t)&v323 - v55;
  MEMORY[0x1F4188790](v56);
  v350 = (char *)&v323 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v338 = (uint64_t)&v323 - v59;
  MEMORY[0x1F4188790](v60);
  v343 = (char *)&v323 - v61;
  MEMORY[0x1F4188790](v62);
  uint64_t v365 = (uint64_t)&v323 - v63;
  id v64 = (double *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize];
  *id v64 = a13;
  v64[1] = a14;
  uint64_t v349 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredContentSizeCategoryOnPopulate;
  uint64_t v65 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredContentSizeCategoryOnPopulate];
  v344 = v45;
  id v363 = a8;
  if (v65)
  {
    uint64_t v66 = v26;
    uint64_t v67 = a1;
    uint64_t v68 = self;
    id v69 = v65;
    id v70 = objc_msgSend(v68, sel_sharedApplication);
    id v71 = objc_msgSend(v70, sel_preferredContentSizeCategory);

    uint64_t v72 = sub_1C151E62C();
    uint64_t v74 = v73;
    if (v72 == sub_1C151E62C() && v74 == v75)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v76 = sub_1C1520A9C();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v76 & 1) == 0)
      {
        objc_msgSend(*(id *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController], sel_prewarm);
        uint64_t v77 = v365;
        uint64_t v26 = v66;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v365, 1, 1, v66);
        uint64_t v78 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
        swift_beginAccess();
        sub_1C03E4D98(v77, v78);
        swift_endAccess();

        a1 = v67;
        goto LABEL_9;
      }
    }
    a1 = v67;
    uint64_t v26 = v66;
LABEL_9:
    a8 = v363;
  }
  uint64_t v79 = (uint64_t)v366;
  if ((sub_1C03DA37C(a1, (uint64_t)v366, (uint64_t)a8) & 1) == 0)
  {
    v152 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
    if (v152)
    {
      id v153 = v152;
      sub_1C0C65624(v79);
    }
    if (qword_1EB8629B8 != -1) {
      swift_once();
    }
    uint64_t v154 = sub_1C15198DC();
    __swift_project_value_buffer(v154, (uint64_t)qword_1EB93C348);
    v155 = a15;
    v156 = sub_1C15198AC();
    os_log_type_t v157 = sub_1C151F38C();
    if (!os_log_type_enabled(v156, v157))
    {

      return;
    }
    v158 = (uint8_t *)swift_slowAlloc();
    uint64_t v159 = swift_slowAlloc();
    uint64_t v374 = v159;
    *(_DWORD *)v158 = 136315138;
    v366 = v158 + 4;
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v160 = swift_allocObject();
    *(_OWORD *)(v160 + 16) = xmmword_1C1529AE0;
    *(void *)(v160 + 56) = ObjectType;
    *(void *)(v160 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v160 + 32) = v155;
    v161 = v155;
    uint64_t v162 = sub_1C151E66C();
    uint64_t v164 = v163;
    uint64_t v165 = (uint64_t)&v161[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    uint64_t v166 = v365;
    sub_1BFE0BE50(v165, v365, (uint64_t (*)(void))sub_1BFF00BEC);
    v167 = &v161[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    uint64_t v168 = (uint64_t)v167;
    uint64_t v169 = v364;
    sub_1BFE0BE50(v168, v364, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v170 = sub_1C03E354C(v162, v164, v166, v169);
    uint64_t v373 = sub_1BFDA76EC(v170, v171, &v374);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v156, v157, "Blocked reloading web embed based on configuration, %s", v158, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v159, -1, -1);
    MEMORY[0x1C18C9B00](v158, -1, -1);
    goto LABEL_97;
  }
  v327 = v40;
  id v80 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView];
  objc_msgSend(v80, sel_frame);
  v376.origin.double x = v81;
  v376.origin.double y = v82;
  v376.size.double width = v83;
  v376.size.double height = v84;
  v375.origin.double x = a9;
  v375.origin.double y = a10;
  v375.size.double width = a11;
  v375.size.double height = a12;
  if (!CGRectEqualToRect(v375, v376))
  {
    objc_msgSend(v80, sel_setFrame_, a9, a10, a11, a12);
    a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged] = 1;
  }
  a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged] = 0;
  id v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  uint64_t v86 = v365;
  uint64_t v341 = a1;
  v85(v365, a1, v26);
  uint64_t v88 = v27 + 56;
  id v87 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v87(v86, 0, 1, v26);
  uint64_t v89 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
  swift_beginAccess();
  uint64_t v335 = v89;
  sub_1C03E4D98(v86, v89);
  swift_endAccess();
  uint64_t v90 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL];
  swift_beginAccess();
  sub_1C03E4DFC((uint64_t)v358, v90, (uint64_t (*)(void))sub_1BFF00BEC);
  swift_endAccess();
  *(void *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location] = v359;
  swift_unknownObjectRelease();
  uint64_t v329 = v27 + 16;
  v328 = v85;
  v85(v86, v360, v26);
  v352 = v87;
  v87(v86, 0, 1, v26);
  uint64_t v91 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL];
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_1C03E4D98(v86, v91);
  swift_endAccess();
  id v92 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration];
  id v93 = v363;
  *(void *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration] = v363;
  id v330 = v93;

  uint64_t v94 = type metadata accessor for WebEmbedDatastoreUpdate();
  uint64_t v95 = *(void *)(v94 - 8);
  uint64_t v96 = (uint64_t)v355;
  v324 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56);
  uint64_t v326 = v95 + 56;
  v324(v355, 1, 1, v94);
  uint64_t v325 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController__lastDatastoreUpdate;
  sub_1BFE0BE50(v96, v354, (uint64_t (*)(void))sub_1C00A8ACC);
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  sub_1C03E4E64(v96, (uint64_t (*)(void))sub_1C00A8ACC);
  uint64_t v97 = (uint64_t *)(*(void *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_delegate]
                  + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier);
  uint64_t v98 = v362;
  *uint64_t v97 = v361;
  v97[1] = v98;
  swift_bridgeObjectRelease();
  double v99 = self;
  swift_bridgeObjectRetain();
  id v100 = objc_msgSend(v99, sel_sharedApplication);
  id v101 = objc_msgSend(v100, sel_preferredContentSizeCategory);

  uint64_t v102 = *(void **)&a15[v349];
  *(void *)&a15[v349] = v101;

  CGRect v103 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  sub_1BFC66384((uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_configurationProvider], (uint64_t)&aBlock);
  CGRect v104 = __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v370);
  id v105 = objc_msgSend(a15, sel_view);
  if (!v105)
  {
    __break(1u);
    goto LABEL_112;
  }
  CGRect v106 = v105;
  uint64_t v323 = v94;
  objc_msgSend(v105, sel_bounds);
  double v108 = v107;
  double v110 = v109;

  uint64_t v111 = v345;
  sub_1C151846C();
  uint64_t v112 = (uint64_t)v344;
  sub_1BFE0BE50((uint64_t)v111, (uint64_t)v344, (uint64_t (*)(void))type metadata accessor for FormatPictureInPictureModel);
  uint64_t v332 = v27;
  uint64_t v113 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  uint64_t v114 = 1;
  uint64_t v331 = v27 + 48;
  v337 = v113;
  unsigned int v115 = v113(v112, 1, v26);
  uint64_t v116 = (uint64_t)v343;
  if (v115 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v343, v112, v26);
    uint64_t v114 = 0;
  }
  v344 = (char *)v26;
  uint64_t v349 = v88;
  v352(v116, v114, 1, v26);
  sub_1C03E4E64((uint64_t)v111, (uint64_t (*)(void))type metadata accessor for FormatPictureInPictureModel);
  uint64_t v117 = *(void *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 24];
  uint64_t v118 = *(void *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 32];
  v345 = &a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager];
  __swift_project_boxed_opaque_existential_1(&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager], v117);
  char v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v117, v118);
  id v120 = sub_1C1046544((uint64_t)v358, v359, v360, v116, v330, v119 & 1, *v104, a16, v108, v110, a9, a10, a11, a12);
  sub_1C03E4E64(v116, (uint64_t (*)(void))sub_1BFF00BEC);
  id v363 = v103;
  objc_msgSend(v103, sel_setConfiguration_, v120);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  sub_1C151631C();
  uint64_t v121 = swift_allocBox();
  sub_1C151630C();
  uint64_t v122 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
  uint64_t v123 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v124 = (void *)swift_allocObject();
  uint64_t v125 = v361;
  v124[2] = v123;
  v124[3] = v125;
  uint64_t v126 = v362;
  v124[4] = v362;
  v124[5] = v121;
  v371 = sub_1C03E4EC8;
  v372 = v124;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v368 = 1107296256;
  v369 = sub_1C0C8396C;
  v370 = &block_descriptor_83;
  uint64_t v127 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v122, sel_onPresentable_, v127);
  _Block_release(v127);
  uint64_t v128 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v129 = swift_allocObject();
  *(void *)(v129 + 16) = v128;
  *(void *)(v129 + 24) = v121;
  v371 = sub_1C03E4F14;
  v372 = (void *)v129;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v368 = 1107296256;
  v369 = sub_1BFC9FC68;
  v370 = &block_descriptor_90;
  uint64_t v130 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v122, sel_onLoad_, v130);
  _Block_release(v130);
  long long v131 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_interactionProvider];
  uint64_t v132 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v371 = sub_1C03E4F1C;
  v372 = (void *)v132;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v368 = 1107296256;
  v369 = sub_1BFC9FC68;
  v370 = &block_descriptor_94;
  uint64_t v133 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v131, sel_setInteractionBlock_, v133);
  _Block_release(v133);
  uint64_t v134 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorProvider];
  uint64_t v135 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v136 = (void *)swift_allocObject();
  v136[2] = v135;
  v136[3] = v125;
  v136[4] = v126;
  v136[5] = v121;
  v371 = sub_1C03E4F70;
  v372 = v136;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v368 = 1107296256;
  v369 = sub_1C0C839C0;
  v370 = &block_descriptor_101;
  uint64_t v137 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v134, sel_onError_, v137);
  _Block_release(v137);
  long long v138 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSizeManager];
  uint64_t v139 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v371 = sub_1C03E4F7C;
  v372 = (void *)v139;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v368 = 1107296256;
  v369 = sub_1C13D5E18;
  v370 = &block_descriptor_105_0;
  uint64_t v140 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v138, sel_onPreferredSize_, v140);
  _Block_release(v140);
  uint64_t v141 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
  swift_beginAccess();
  uint64_t v142 = *(unsigned int (**)(uint64_t, uint64_t, char *))(v347 + 48);
  uint64_t v143 = v357;
  uint64_t v144 = 0;
  uint64_t v145 = 0;
  if (!v142(v141, 1, v357))
  {
    uint64_t v146 = v336;
    sub_1BFE0BE50(v141, v336, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v144 = WebEmbedDataVisualization.identifier.getter();
    uint64_t v145 = v147;
    sub_1C03E4E64(v146, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  }
  uint64_t v362 = v141;
  uint64_t v148 = v346;
  sub_1BFE0BE50((uint64_t)v366, v346, (uint64_t (*)(void))sub_1BFECFC20);
  if (v142(v148, 1, v143) == 1)
  {
    sub_1C03E4E64(v148, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v149 = (uint64_t)v344;
    if (!v145)
    {
      LODWORD(v361) = 1;
      uint64_t v150 = v356;
      uint64_t v151 = (uint64_t)v366;
      goto LABEL_36;
    }
    goto LABEL_33;
  }
  uint64_t v172 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v173 = v148;
  uint64_t v174 = v172;
  uint64_t v176 = v175;
  sub_1C03E4E64(v173, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v149 = (uint64_t)v344;
  if (v145)
  {
    if (v176)
    {
      if (v144 == v174 && v145 == v176)
      {
        swift_bridgeObjectRelease();
        LODWORD(v361) = 1;
      }
      else
      {
        LODWORD(v361) = sub_1C1520A9C();
        swift_bridgeObjectRelease();
      }
      goto LABEL_34;
    }
LABEL_33:
    LODWORD(v361) = 0;
LABEL_34:
    uint64_t v150 = v356;
    uint64_t v151 = (uint64_t)v366;
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  uint64_t v150 = v356;
  uint64_t v151 = (uint64_t)v366;
  if (v176)
  {
    LODWORD(v361) = 0;
    goto LABEL_35;
  }
  LODWORD(v361) = 1;
LABEL_36:
  uint64_t v177 = v364;
  sub_1BFE0BE50(v151, v364, (uint64_t (*)(void))sub_1BFECFC20);
  sub_1C03D69BC(v177);
  v178 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
  if (v178)
  {
    id v179 = v178;
    sub_1C0C65624(v151);
  }
  uint64_t v359 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine;
  v180 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
  if (v180)
  {
    id v181 = objc_msgSend(v180, sel_state);
    if (v181)
    {
      v182 = v181;
      v183 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState];
      if (v183)
      {
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
        id v184 = v183;
        int v185 = sub_1C151FB6C();

        v182 = v184;
      }
      else
      {
        int v185 = 0;
      }
    }
    else
    {
      int v185 = 0;
    }
    uint64_t v151 = (uint64_t)v366;
  }
  else
  {
    int v185 = 0;
  }
  uint64_t v186 = v348;
  sub_1BFE0BE50(v151, v348, (uint64_t (*)(void))sub_1BFECFC20);
  unsigned int v187 = v142(v186, 1, v357);
  uint64_t v360 = v121;
  if (v187 == 1)
  {
    sub_1C03E4E64(v186, (uint64_t (*)(void))sub_1BFECFC20);
    v188 = v352;
    uint64_t v189 = v149;
    goto LABEL_63;
  }
  LODWORD(v366) = v185;
  uint64_t v190 = (uint64_t)v327;
  sub_1BFED36DC(v186, (uint64_t)v327, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v191 = *(void *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24];
  uint64_t v192 = *(void *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32];
  v357 = &a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager];
  __swift_project_boxed_opaque_existential_1(&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager], v191);
  uint64_t v193 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v192 + 32))(v190, v191, v192);
  uint64_t v194 = v340;
  sub_1BFE0BE50(v190, v340, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  v188 = v352;
  uint64_t v189 = v149;
  if (v193)
  {
    v195 = v324;
    id v196 = v363;
    v197 = (uint8_t *)v193;
  }
  else
  {
    v197 = (uint8_t *)_s8NewsFeed17WebEmbedDatastoreC5empty3forAcA0cD17DataVisualizationO_tFZ_0(v194);
    v195 = v324;
    id v196 = v363;
  }
  sub_1C03E4E64(v194, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v198 = (uint64_t)v355;
  sub_1BFE0BE50(v190, (uint64_t)v355, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  *(void *)(v198 + *(int *)(v323 + 20)) = v197;
  ((void (*)(uint64_t, void, uint64_t))v195)(v198, 0, 1);
  sub_1BFE0BE50(v198, v354, (uint64_t (*)(void))sub_1C00A8ACC);
  v358 = v197;
  swift_retain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  sub_1C03E4E64(v198, (uint64_t (*)(void))sub_1C00A8ACC);
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v199 = sub_1C15198DC();
  __swift_project_value_buffer(v199, (uint64_t)qword_1EB93C348);
  v200 = a15;
  v201 = sub_1C15198AC();
  os_log_type_t v202 = sub_1C151F38C();
  BOOL v203 = os_log_type_enabled(v201, v202);
  v204 = v196;
  v355 = v200;
  if (v203)
  {
    uint64_t v205 = swift_slowAlloc();
    uint64_t v354 = swift_slowAlloc();
    uint64_t aBlock = v354;
    *(_DWORD *)uint64_t v205 = 67109378;
    LODWORD(v374) = v366 & 1;
    sub_1C151FE1C();
    *(_WORD *)(v205 + 8) = 2080;
    uint64_t v348 = v205 + 10;
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v206 = swift_allocObject();
    *(_OWORD *)(v206 + 16) = xmmword_1C1529AE0;
    *(void *)(v206 + 56) = ObjectType;
    *(void *)(v206 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v206 + 32) = v200;
    v207 = v200;
    uint64_t v208 = sub_1C151E66C();
    uint64_t v210 = v209;
    uint64_t v211 = v365;
    sub_1BFE0BE50(v335, v365, (uint64_t (*)(void))sub_1BFF00BEC);
    os_log_type_t v212 = v202;
    v213 = v204;
    uint64_t v214 = v364;
    sub_1BFE0BE50(v362, v364, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v215 = v214;
    v204 = v213;
    uint64_t v216 = sub_1C03E354C(v208, v210, v211, v215);
    uint64_t v374 = sub_1BFDA76EC(v216, v217, &aBlock);
    sub_1C151FE1C();

    uint64_t v218 = (uint64_t)v344;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v201, v212, "Will load data visualization data store, isEmbedInitialized=%{BOOL}d, %s", (uint8_t *)v205, 0x12u);
    uint64_t v219 = v354;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v219, -1, -1);
    uint64_t v220 = v205;
    uint64_t v189 = v218;
    v188 = v352;
    MEMORY[0x1C18C9B00](v220, -1, -1);

    char v221 = v361;
    if (v361 & 1 | ((v366 & 1) == 0)) {
      goto LABEL_62;
    }
LABEL_60:
    id v222 = objc_msgSend(v204, sel_view);
    if (v222)
    {
      v223 = v222;
      objc_msgSend(v222, sel_setHidden_, 1);

      goto LABEL_62;
    }
LABEL_112:
    __break(1u);
    return;
  }

  char v221 = v361;
  if (!(v361 & 1 | ((v366 & 1) == 0))) {
    goto LABEL_60;
  }
LABEL_62:
  char v224 = v221 ^ 1;
  v225 = *(void **)&v358[OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore];
  uint64_t v226 = swift_allocObject();
  uint64_t v227 = (uint64_t)v355;
  swift_unknownObjectWeakInit();
  uint64_t v228 = swift_allocObject();
  *(void *)(v228 + 16) = v226;
  *(unsigned char *)(v228 + 24) = v366 & 1;
  *(unsigned char *)(v228 + 25) = v224 & 1;
  v371 = sub_1C03E4FC4;
  v372 = (void *)v228;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v368 = 1107296256;
  v369 = sub_1BFC9FC68;
  v370 = &block_descriptor_113;
  v229 = _Block_copy(&aBlock);
  id v230 = v225;
  swift_release();
  objc_msgSend(v204, sel_loadLocalDatastore_forceUpdate_completion_, v230, 1, v229);
  _Block_release(v229);

  uint64_t v231 = *((void *)v357 + 3);
  uint64_t v232 = *((void *)v357 + 4);
  __swift_project_boxed_opaque_existential_1(v357, v231);
  uint64_t v233 = v227;
  uint64_t v234 = (uint64_t)v327;
  (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v232 + 16))(v233, &protocol witness table for WebEmbedViewController, v327, v231, v232);
  swift_release();
  sub_1C03E4E64(v234, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v150 = v356;
LABEL_63:
  v235 = v345;
  uint64_t v236 = *((void *)v345 + 3);
  uint64_t v237 = *((void *)v345 + 4);
  __swift_project_boxed_opaque_existential_1(v345, v236);
  (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v237 + 48))(a15, &protocol witness table for WebEmbedViewController, v236, v237);
  uint64_t v238 = *((void *)v235 + 3);
  uint64_t v239 = *((void *)v235 + 4);
  __swift_project_boxed_opaque_existential_1(v235, v238);
  char v240 = (*(uint64_t (**)(uint64_t, uint64_t))(v239 + 8))(v238, v239);
  uint64_t v241 = (uint64_t)v351;
  uint64_t v242 = (uint64_t)v350;
  if (v240)
  {
    uint64_t v243 = v338;
    sub_1BFE0BE50(v335, v338, (uint64_t (*)(void))sub_1BFF00BEC);
    if (v337(v243, 1, v189) == 1)
    {
      sub_1C03E4E64(v243, (uint64_t (*)(void))sub_1BFF00BEC);
    }
    else
    {
      v244 = v188;
      uint64_t v245 = v189;
      uint64_t v246 = v332;
      v247 = v333;
      (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v333, v243, v245);
      char v248 = sub_1C1515EBC();
      uint64_t v249 = v246;
      uint64_t v189 = v245;
      v188 = v244;
      (*(void (**)(char *, uint64_t))(v249 + 8))(v247, v189);
      if (v248)
      {
        uint64_t v250 = *((void *)v345 + 3);
        uint64_t v251 = *((void *)v345 + 4);
        __swift_project_boxed_opaque_existential_1(v345, v250);
        v252 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v251 + 24))(v250, v251);
        if (qword_1EB8629B8 != -1) {
          swift_once();
        }
        uint64_t v253 = sub_1C15198DC();
        __swift_project_value_buffer(v253, (uint64_t)qword_1EB93C348);
        v254 = a15;
        v255 = sub_1C15198AC();
        os_log_type_t v256 = sub_1C151F38C();
        int v257 = v256;
        if (os_log_type_enabled(v255, v256))
        {
          LODWORD(v366) = v257;
          uint64_t v258 = swift_slowAlloc();
          uint64_t v361 = swift_slowAlloc();
          uint64_t aBlock = v361;
          v358 = (uint8_t *)v258;
          *(_DWORD *)uint64_t v258 = 136315138;
          v357 = (char *)(v258 + 4);
          sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
          uint64_t v259 = swift_allocObject();
          *(_OWORD *)(v259 + 16) = xmmword_1C1529AE0;
          *(void *)(v259 + 56) = ObjectType;
          *(void *)(v259 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
          *(void *)(v259 + 32) = v254;
          v260 = v254;
          uint64_t v261 = sub_1C151E66C();
          uint64_t v263 = v262;
          uint64_t v264 = v365;
          sub_1BFE0BE50(v335, v365, (uint64_t (*)(void))sub_1BFF00BEC);
          v265 = v252;
          uint64_t v266 = v364;
          sub_1BFE0BE50(v362, v364, (uint64_t (*)(void))sub_1BFECFC20);
          uint64_t v267 = sub_1C03E354C(v261, v263, v264, v266);
          uint64_t v374 = sub_1BFDA76EC(v267, v268, &aBlock);
          v188 = v352;
          sub_1C151FE1C();

          v252 = v265;
          uint64_t v189 = (uint64_t)v344;
          swift_bridgeObjectRelease();
          v269 = v358;
          _os_log_impl(&dword_1BFC31000, v255, (os_log_type_t)v366, "Will load live activity data store, %s", v358, 0xCu);
          uint64_t v270 = v361;
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v270, -1, -1);
          MEMORY[0x1C18C9B00](v269, -1, -1);
        }
        else
        {
        }
        uint64_t v271 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        sub_1C03DCD4C(v252, (uint64_t)sub_1C03E4F84, v271);
        swift_release_n();
        uint64_t v272 = *((void *)v345 + 3);
        uint64_t v273 = *((void *)v345 + 4);
        __swift_project_boxed_opaque_existential_1(v345, v272);
        (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v273 + 40))(v254, &protocol witness table for WebEmbedViewController, v272, v273);

        uint64_t v241 = (uint64_t)v351;
        uint64_t v242 = (uint64_t)v350;
        uint64_t v150 = v356;
      }
    }
  }
  v328(v242, v341, v189);
  uint64_t v274 = 1;
  v188(v242, 0, 1, v189);
  id v275 = objc_msgSend(v363, sel_loadedURL);
  if (v275)
  {
    v276 = v275;
    sub_1C1515F1C();

    uint64_t v274 = 0;
  }
  v188(v150, v274, 1, v189);
  uint64_t v277 = v241 + *(int *)(v342 + 48);
  sub_1BFE0BE50(v242, v241, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE0BE50(v150, v277, (uint64_t (*)(void))sub_1BFF00BEC);
  v278 = v337;
  v279 = &qword_1EB86B000;
  if (v337(v241, 1, v189) != 1)
  {
    uint64_t v280 = v339;
    sub_1BFE0BE50(v241, v339, (uint64_t (*)(void))sub_1BFF00BEC);
    if (v278(v277, 1, v189) != 1)
    {
      uint64_t v281 = v332;
      v282 = v334;
      (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v334, v277, v189);
      sub_1C03E3CF4((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
      char v283 = sub_1C151E5CC();
      uint64_t v284 = v242;
      v285 = *(void (**)(char *, uint64_t))(v281 + 8);
      v285(v282, v189);
      sub_1C03E4E64(v356, (uint64_t (*)(void))sub_1BFF00BEC);
      sub_1C03E4E64(v284, (uint64_t (*)(void))sub_1BFF00BEC);
      v285((char *)v280, v189);
      v279 = &qword_1EB86B000;
      sub_1C03E4E64(v241, (uint64_t (*)(void))sub_1BFF00BEC);
      if (v283) {
        goto LABEL_84;
      }
LABEL_86:
      if (qword_1EB8629B8 != -1) {
        swift_once();
      }
      uint64_t v286 = sub_1C15198DC();
      __swift_project_value_buffer(v286, (uint64_t)qword_1EB93C348);
      v287 = a15;
      v288 = sub_1C15198AC();
      os_log_type_t v289 = sub_1C151F38C();
      if (os_log_type_enabled(v288, v289))
      {
        v290 = (uint8_t *)swift_slowAlloc();
        uint64_t v291 = swift_slowAlloc();
        *(_DWORD *)v290 = 136315138;
        v366 = v290 + 4;
        uint64_t aBlock = v291;
        sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v292 = swift_allocObject();
        *(_OWORD *)(v292 + 16) = xmmword_1C1529AE0;
        *(void *)(v292 + 56) = ObjectType;
        *(void *)(v292 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
        *(void *)(v292 + 32) = v287;
        v293 = v287;
        uint64_t v294 = sub_1C151E66C();
        uint64_t v296 = v295;
        uint64_t v297 = v365;
        sub_1BFE0BE50(v335, v365, (uint64_t (*)(void))sub_1BFF00BEC);
        uint64_t v298 = v364;
        sub_1BFE0BE50(v362, v364, (uint64_t (*)(void))sub_1BFECFC20);
        uint64_t v299 = sub_1C03E354C(v294, v296, v297, v298);
        uint64_t v374 = sub_1BFDA76EC(v299, v300, &aBlock);
        sub_1C151FE1C();

        v279 = &qword_1EB86B000;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BFC31000, v288, v289, "Load embed web view with URL, %s", v290, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v291, -1, -1);
        MEMORY[0x1C18C9B00](v290, -1, -1);
      }
      else
      {
      }
      if (qword_1EB862F50 != -1) {
        swift_once();
      }
      int v301 = *((unsigned __int8 *)v279 + 4017);
      v156 = sub_1C1515E9C();
      if (v301 == 1) {
        objc_msgSend(v363, sel_loadURL_cachePolicy_, v156, 4);
      }
      else {
        objc_msgSend(v363, sel_loadURL_, v156);
      }
      swift_release();
LABEL_97:

      return;
    }
    sub_1C03E4E64(v150, (uint64_t (*)(void))sub_1BFF00BEC);
    sub_1C03E4E64(v242, (uint64_t (*)(void))sub_1BFF00BEC);
    (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v280, v189);
LABEL_82:
    sub_1C03E4E64(v241, (uint64_t (*)(void))sub_1C0092B34);
    goto LABEL_86;
  }
  sub_1C03E4E64(v150, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C03E4E64(v242, (uint64_t (*)(void))sub_1BFF00BEC);
  if (v278(v277, 1, v189) != 1) {
    goto LABEL_82;
  }
  sub_1C03E4E64(v241, (uint64_t (*)(void))sub_1BFF00BEC);
LABEL_84:
  if (qword_1EB862F50 == -1)
  {
    if (*((unsigned char *)v279 + 4017)) {
      goto LABEL_86;
    }
  }
  else
  {
    swift_once();
    if (*((unsigned char *)v279 + 4017)) {
      goto LABEL_86;
    }
  }
  v302 = *(void **)&a15[v359];
  if (v302)
  {
    id v303 = objc_msgSend(v302, sel_state);
    if (v303)
    {
      v304 = v303;
      v305 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState];
      if (v305)
      {
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
        id v306 = v305;
        char v307 = sub_1C151FB6C();

        if (v307) {
          goto LABEL_86;
        }
      }
      else
      {
      }
    }
  }
  if (qword_1EB8629B8 != -1) {
    swift_once();
  }
  uint64_t v308 = sub_1C15198DC();
  __swift_project_value_buffer(v308, (uint64_t)qword_1EB93C348);
  v309 = a15;
  v310 = sub_1C15198AC();
  os_log_type_t v311 = sub_1C151F38C();
  if (os_log_type_enabled(v310, v311))
  {
    v312 = (uint8_t *)swift_slowAlloc();
    uint64_t v313 = swift_slowAlloc();
    *(_DWORD *)v312 = 136315138;
    v366 = v312 + 4;
    uint64_t aBlock = v313;
    sub_1BFECA158(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v314 = swift_allocObject();
    *(_OWORD *)(v314 + 16) = xmmword_1C1529AE0;
    *(void *)(v314 + 56) = ObjectType;
    *(void *)(v314 + 64) = sub_1C03E3CF4(&qword_1EB8613A0, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
    *(void *)(v314 + 32) = v309;
    v315 = v309;
    uint64_t v316 = sub_1C151E66C();
    uint64_t v318 = v317;
    uint64_t v319 = v365;
    sub_1BFE0BE50(v335, v365, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v320 = v364;
    sub_1BFE0BE50(v362, v364, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v321 = sub_1C03E354C(v316, v318, v319, v320);
    uint64_t v374 = sub_1BFDA76EC(v321, v322, &aBlock);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v310, v311, "Already loaded, %s", v312, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v313, -1, -1);
    MEMORY[0x1C18C9B00](v312, -1, -1);
  }
  else
  {
  }
  objc_msgSend(v363, sel_webViewSetNeedsLayout);
  swift_release();
}

uint64_t sub_1C03E354C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v28[1] = a1;
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  v28[0] = (uint64_t)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03E4FD4();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v15[*(int *)(v16 + 56)];
  uint64_t v30 = a3;
  sub_1BFE0BE50(a3, (uint64_t)v15, (uint64_t (*)(void))sub_1BFF00BEC);
  uint64_t v29 = a4;
  sub_1BFE0BE50(a4, v17, (uint64_t (*)(void))sub_1BFECFC20);
  LODWORD(a3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  int v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v17, 1, v6);
  int v19 = v18;
  if (a3 == 1)
  {
    if (v18 == 1)
    {
      uint64_t v31 = 123;
      unint64_t v32 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v20 = v31;
      sub_1C03E4E64(v29, (uint64_t (*)(void))sub_1BFECFC20);
      uint64_t v21 = (uint64_t (*)(void))sub_1BFF00BEC;
      uint64_t v22 = v30;
    }
    else
    {
      uint64_t v25 = v28[0];
      sub_1BFED36DC(v17, v28[0], (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v31 = 123;
      unint64_t v32 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      WebEmbedDataVisualization.identifier.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v20 = v31;
      sub_1C03E4E64(v29, (uint64_t (*)(void))sub_1BFECFC20);
      sub_1C03E4E64(v30, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v21 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
      uint64_t v22 = v25;
    }
    sub_1C03E4E64(v22, v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    if (v19 == 1)
    {
      uint64_t v31 = 123;
      unint64_t v32 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C03E3CF4((unint64_t *)&qword_1EB861120, MEMORY[0x1E4F276F0]);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v20 = v31;
      sub_1C03E4E64(v29, (uint64_t (*)(void))sub_1BFECFC20);
      uint64_t v23 = (uint64_t (*)(void))sub_1BFF00BEC;
      uint64_t v24 = v30;
    }
    else
    {
      uint64_t v26 = v28[0];
      sub_1BFED36DC(v17, v28[0], (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v31 = 123;
      unint64_t v32 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C03E3CF4((unint64_t *)&qword_1EB861120, MEMORY[0x1E4F276F0]);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      WebEmbedDataVisualization.identifier.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v20 = v31;
      sub_1C03E4E64(v29, (uint64_t (*)(void))sub_1BFECFC20);
      sub_1C03E4E64(v30, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v23 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
      uint64_t v24 = v26;
    }
    sub_1C03E4E64(v24, v23);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v20;
}

void sub_1C03E3B74(uint64_t a1)
{
}

void sub_1C03E3B94(uint64_t a1)
{
}

void sub_1C03E3BB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C03E3C14()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C03E3C4C()
{
  sub_1C03E0354(v0);
}

unint64_t sub_1C03E3C58()
{
  unint64_t result = qword_1EA19ADA0;
  if (!qword_1EA19ADA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19ADA0);
  }
  return result;
}

uint64_t sub_1C03E3CAC()
{
  return sub_1C03E3CF4(&qword_1EB877AD8, (void (*)(uint64_t))type metadata accessor for WebEmbedViewController);
}

uint64_t sub_1C03E3CF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C03E3D44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_1Tm_0(a1, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webLinkPresentingViewController, MEMORY[0x1E4FBC928], a2);
}

uint64_t sub_1C03E3D68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_1Tm_0(a1, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_resizingProvider, MEMORY[0x1E4FBC948], a2);
}

uint64_t keypath_get_1Tm_0@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1 + *a2;
  swift_beginAccess();
  uint64_t result = a3(v6);
  *a4 = result;
  return result;
}

uint64_t sub_1C03E3DEC()
{
  return swift_weakAssign();
}

uint64_t sub_1C03E3E4C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  objc_super v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id sub_1C03E3EA0(unsigned __int8 *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  id v4 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  swift_beginAccess();
  *id v4 = v2;
  double v5 = 0.0;
  if (v2) {
    double v5 = 1.0;
  }
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator), sel_setAlpha_, v5);
}

uint64_t sub_1C03E3F20()
{
  return type metadata accessor for WebEmbedViewController(0);
}

uint64_t method lookup function for WebEmbedViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WebEmbedViewController);
}

unsigned char *storeEnumTagSinglePayload for WebEmbedViewController.WebEmbedErrorPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03E400CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedViewController.WebEmbedErrorPosition()
{
  return &type metadata for WebEmbedViewController.WebEmbedErrorPosition;
}

uint64_t type metadata accessor for WebEmbedURLHandlerDelegate()
{
  return self;
}

uint64_t sub_1C03E4068()
{
  return type metadata accessor for LoadSuccessContext(0);
}

uint64_t type metadata accessor for LoadSuccessContext(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB866758);
}

uint64_t sub_1C03E4090()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C03E412C()
{
  return type metadata accessor for LoadFailureContext(0);
}

uint64_t type metadata accessor for LoadFailureContext(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB861760);
}

uint64_t sub_1C03E4154()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C03E41FC()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1C03E4234(uint64_t a1, uint64_t a2)
{
  sub_1C03DD308(a1, a2, v2, "Will start loading with spinner, %s", (SEL *)&selRef_startAnimating);
}

void sub_1C03E4260(uint64_t a1, uint64_t a2)
{
  sub_1C03DD308(a1, a2, v2, "Did finish loading with spinner, %s", (SEL *)&selRef_stopAnimating);
}

void sub_1C03E428C()
{
}

void sub_1C03E4294(void *a1)
{
}

void sub_1C03E429C()
{
}

void sub_1C03E42A4(void *a1)
{
}

void sub_1C03E42AC()
{
}

unint64_t sub_1C03E42B4()
{
  unint64_t result = qword_1EB85C548;
  if (!qword_1EB85C548)
  {
    sub_1BFC39268(255, &qword_1EB85C540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C548);
  }
  return result;
}

void sub_1C03E431C()
{
  unint64_t v1 = v0;
  sub_1C00A8ACC(0);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier];
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onReuse;
  sub_1BFE4F78C(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  *(void *)&v1[v9] = objc_msgSend(objc_allocWithZone(v10), sel_init);
  uint64_t v11 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation];
  *uint64_t v11 = 0;
  v11[1] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView;
  *(void *)&v1[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  swift_weakInit();
  uint64_t v13 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction];
  *uint64_t v13 = 0;
  v13[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner] = 1;
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView;
  *(void *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WebEmbedErrorView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorPosition] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredContentSizeCategoryOnPopulate] = 0;
  uint64_t v15 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  v17(&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL], 1, 1, v16);
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location] = 0;
  v17(&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL], 1, 1, v16);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration;
  *(void *)&v1[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F8F8]), sel_init);
  int v19 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize];
  *int v19 = 0;
  v19[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable] = 0;
  uint64_t v20 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  uint64_t v21 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
  uint64_t v22 = type metadata accessor for WebEmbedDataVisualization();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState] = 0;
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator;
  *(void *)&v1[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v24 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_tapGestureRecognizer;
  *(void *)&v1[v24] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, 0, 0);
  uint64_t v25 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController__lastDatastoreUpdate;
  uint64_t v26 = type metadata accessor for WebEmbedDatastoreUpdate();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1BFE0BE50((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))sub_1C00A8ACC);
  sub_1BFECA158(0, &qword_1EB863E08, (uint64_t (*)(uint64_t))sub_1C00A8ACC, MEMORY[0x1E4FAB060]);
  swift_allocObject();
  uint64_t v27 = sub_1C1518E9C();
  sub_1C03E4E64((uint64_t)v7, (uint64_t (*)(void))sub_1C00A8ACC);
  *(void *)&v1[v25] = v27;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView] = 0;

  sub_1C152040C();
  __break(1u);
}

void sub_1C03E47E8()
{
  uint64_t v1 = v0;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v10 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (!v10)
  {
    uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
LABEL_7:
    if (v12) {
      return;
    }
LABEL_8:
    uint64_t v16 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BFE0BE50(v16, (uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1C03E4E64((uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      if (qword_1EB862F50 != -1) {
        swift_once();
      }
      int v17 = byte_1EB86BFB1;
      uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController);
      int v19 = (void *)sub_1C1515E9C();
      if (v17 == 1) {
        objc_msgSend(v18, sel_loadURL_cachePolicy_, v19, 4);
      }
      else {
        objc_msgSend(v18, sel_loadURL_, v19);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    return;
  }
  id v11 = objc_msgSend(v10, sel_state, v7);
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
  if (!v11) {
    goto LABEL_7;
  }
  if (v12)
  {
    id v20 = v11;
    sub_1BFC39268(0, &qword_1EB85C540);
    id v13 = v12;
    id v14 = v20;
    char v15 = sub_1C151FB6C();

    if ((v15 & 1) == 0) {
      return;
    }
    goto LABEL_8;
  }
}

void sub_1C03E4AF8(uint64_t a1, char a2)
{
  sub_1C1519F8C();
  uint64_t v5 = (void *)MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webLinkPresentingViewController);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_view);

    if (v7)
    {
      id v8 = objc_msgSend(v7, sel_window);

      if (v8)
      {
        id v9 = objc_msgSend(v8, sel_rootViewController);

        if (v9)
        {
          id v10 = (id)sub_1C151F49C();

          objc_msgSend(v10, sel_presentViewController_animated_completion_, a1, a2 & 1, 0);
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1C03E4C18(uint64_t a1)
{
  sub_1BFC66384(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedCoordinator, (uint64_t)v9);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier);
    unint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier + 8);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  id v7 = *(void (**)(uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  v7(v5, v6, a1, 0, v3, v4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_1C03E4CF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C03E4D2C()
{
  return sub_1C0C83944(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C03E4D34(double a1, double a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(v2 + 16);
  *(double *)uint64_t v5 = a1;
  *(double *)&v5[1] = a2;
  return v3(v5);
}

uint64_t sub_1C03E4D6C(double *a1)
{
  return (*(uint64_t (**)(double, double))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1C03E4D98(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03E4DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C03E4E64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C03E4EC8()
{
  sub_1C03DAD00(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C03E4ED4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C03E4F14()
{
  sub_1C03DB4B4(*(void *)(v0 + 16));
}

void sub_1C03E4F1C()
{
  sub_1C03DB988(v0);
}

uint64_t objectdestroy_79Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C03E4F70(void *a1)
{
  sub_1C03DBA28(a1, v1[2], v1[3], v1[4]);
}

void sub_1C03E4F7C(double a1, double a2)
{
  sub_1C03DC0DC(v2, a1, a2);
}

void sub_1C03E4F84()
{
  sub_1C03DC978(v0);
}

uint64_t sub_1C03E4F8C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C03E4FC4()
{
  sub_1C03DC524(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned __int8 *)(v0 + 25));
}

void sub_1C03E4FD4()
{
  if (!qword_1EB862838)
  {
    sub_1BFF00BEC();
    sub_1BFECFC20(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB862838);
    }
  }
}

void sub_1C03E50D8()
{
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v2 = (void *)sub_1C151E5EC();
  objc_msgSend(v1, sel_setTitle_, v2);

  uint64_t v3 = (void *)sub_1C151E5EC();
  id v4 = objc_msgSend(self, sel_systemImageNamed_, v3);

  if (v4)
  {
    id v5 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    unint64_t v6 = v0;
    id v7 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v4, 2, v6, sel_doDismiss);

    id v8 = objc_msgSend(self, sel_systemGrayColor);
    objc_msgSend(v7, sel_setTintColor_, v8);

    id v9 = objc_msgSend(v6, sel_navigationItem);
    sub_1BFE4DBE0();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C15320E0;
    *(void *)(v10 + 32) = v7;
    sub_1C151EBEC();
    sub_1C03E7D9C();
    id v11 = v7;
    uint64_t v12 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setRightBarButtonItems_, v12);

    id v13 = *(void **)&v6[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tableView];
    objc_msgSend(v13, sel_setDelegate_, v6);
    objc_msgSend(v13, sel_setDataSource_, v6);
    objc_msgSend(v13, sel_setAlwaysBounceVertical_, 1);
    type metadata accessor for DebugJournalTableViewCell();
    sub_1C151F26C();
    type metadata accessor for FeedItemTableViewCell();
    sub_1C151F26C();
    id v14 = objc_msgSend(v6, sel_view);
    if (v14)
    {
      char v15 = v14;
      objc_msgSend(v14, sel_addSubview_, v13);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void *sub_1C03E5508(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)type metadata accessor for DebugJournalGroupItem();
  uint64_t v5 = *(v4 - 1);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v129 - v9;
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_sections);
  unint64_t v12 = sub_1C151676C();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_101;
  }
  if (v12 >= *(void *)(v11 + 16))
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t v13 = *(void *)(v11 + 24 * v12 + 48);
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C151673C();
  if ((v14 & 0x8000000000000000) != 0)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v14 < *(void *)(v13 + 16))
  {
    sub_1C03E7D34(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
    swift_bridgeObjectRelease();
    sub_1C03E7D34((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = *((void *)v7 + 2);
        uint64_t v18 = *((void *)v7 + 3);
        int v20 = v7[32];
        a1 = sub_1C03E66A8();
        id v21 = objc_msgSend(a1, sel_textLabel);
        if (v21)
        {
          uint64_t v22 = v21;
          uint64_t v23 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v22, sel_setText_, v23);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v38 = objc_msgSend(a1, sel_detailTextLabel);
        if (!v38) {
          goto LABEL_66;
        }
        uint64_t v39 = v38;
        if (v20)
        {
          if (v20 != 1) {
            goto LABEL_65;
          }
          uint64_t v40 = 0x202C70696B53;
          unint64_t v41 = 0xE600000000000000;
        }
        else
        {
          uint64_t v40 = 0x202C65766F6D6552;
          unint64_t v41 = 0xE800000000000000;
        }
        v134[0] = v40;
        v134[1] = v41;
        sub_1C151E80C();
LABEL_65:
        CGFloat v83 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v39, sel_setText_, v83);

LABEL_66:
        if (!v20)
        {
          id v91 = objc_msgSend(a1, sel_imageView);
          if (v91)
          {
            id v92 = v91;
            id v93 = (void *)sub_1C151E5EC();
            id v94 = objc_msgSend(self, sel_systemImageNamed_, v93);

            objc_msgSend(v92, sel_setImage_, v94);
          }
          id v95 = objc_msgSend(a1, sel_imageView);
          if (v95)
          {
            uint64_t v96 = v95;
            id v97 = objc_msgSend(self, sel_systemRedColor);
            objc_msgSend(v96, sel_setTintColor_, v97);
          }
          sub_1BFDCA350(v19, v18, 0);
          goto LABEL_98;
        }
        if (v20 == 1)
        {
          id v84 = objc_msgSend(a1, sel_imageView);
          if (v84)
          {
            id v85 = v84;
            uint64_t v86 = (void *)sub_1C151E5EC();
            id v87 = objc_msgSend(self, sel_systemImageNamed_, v86);

            objc_msgSend(v85, sel_setImage_, v87);
          }
          id v88 = objc_msgSend(a1, sel_imageView);
          if (v88)
          {
            uint64_t v89 = v88;
            id v90 = objc_msgSend(self, sel_systemGray2Color);
            objc_msgSend(v89, sel_setTintColor_, v90);
          }
          sub_1BFDCA350(v19, v18, 1u);
LABEL_98:
          sub_1C03E7990((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
          return a1;
        }
        id v98 = objc_msgSend(a1, sel_imageView);
        double v99 = v98;
        if (v19 | v18)
        {
          if (v98)
          {
            id v100 = (void *)sub_1C151E5EC();
            id v101 = objc_msgSend(self, sel_systemImageNamed_, v100);

            objc_msgSend(v99, sel_setImage_, v101);
          }
          id v102 = objc_msgSend(a1, sel_imageView);
          if (!v102) {
            goto LABEL_98;
          }
          CGRect v103 = v102;
          id v104 = objc_msgSend(self, sel_systemGray2Color);
        }
        else
        {
          if (v98)
          {
            uint64_t v124 = (void *)sub_1C151E5EC();
            id v125 = objc_msgSend(self, sel_systemImageNamed_, v124);

            objc_msgSend(v99, sel_setImage_, v125);
          }
          id v126 = objc_msgSend(a1, sel_imageView);
          if (!v126) {
            goto LABEL_98;
          }
          CGRect v103 = v126;
          id v104 = objc_msgSend(self, sel_systemGreenColor);
        }
        id v127 = v104;
        objc_msgSend(v103, sel_setTintColor_, v127);

        goto LABEL_98;
      case 2u:
        a1 = sub_1C03E66A8();
        id v24 = objc_msgSend(a1, sel_textLabel);
        if (v24)
        {
          uint64_t v25 = v24;
          uint64_t v26 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v25, sel_setText_, v26);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v42 = objc_msgSend(a1, sel_detailTextLabel);
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v44 = (void *)sub_1C151E5EC();
          objc_msgSend(v43, sel_setText_, v44);
        }
        id v45 = objc_msgSend(a1, sel_imageView);
        if (v45)
        {
          uint64_t v46 = v45;
          objc_msgSend(v45, sel_setImage_, 0);
        }
        sub_1C03E7BEC();
        uint64_t v48 = &v7[*(int *)(v47 + 48)];
        objc_msgSend(a1, sel_setSelectionStyle_, 3);
        objc_msgSend(a1, sel_setAccessoryType_, 1);
        sub_1C03E7990((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
        uint64_t v49 = sub_1C151CA7C();
        (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
        return a1;
      case 3u:
        swift_release();
        sub_1BFC773DC((long long *)v7, (uint64_t)v134);
        type metadata accessor for FeedItemTableViewCell();
        a1 = (void *)sub_1C151F24C();
        id v27 = objc_msgSend(a1, sel_textLabel);
        if (v27)
        {
          uint64_t v28 = v27;
          uint64_t v30 = v135;
          uint64_t v29 = v136;
          __swift_project_boxed_opaque_existential_1(v134, v135);
          (*(void (**)(uint64_t))(*(void *)(v29 + 8) + 24))(v30);
          if (v31)
          {
            unint64_t v32 = (void *)sub_1C151E5EC();
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v32 = 0;
          }
          objc_msgSend(v28, sel_setText_, v32);
        }
        id v54 = objc_msgSend(a1, sel_textLabel);
        if (v54)
        {
          uint64_t v55 = v54;
          id v56 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
          objc_msgSend(v55, sel_setFont_, v56);
        }
        id v57 = objc_msgSend(a1, sel_textLabel);
        if (v57)
        {
          uint64_t v58 = v57;
          objc_msgSend(v57, sel_setNumberOfLines_, 0);
        }
        id v59 = objc_msgSend(a1, sel_detailTextLabel);
        if (v59)
        {
          uint64_t v60 = v59;
          id v61 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
          objc_msgSend(v60, sel_setFont_, v61);
        }
        objc_msgSend(a1, sel_setAccessoryType_, 1);
        id v62 = objc_msgSend(a1, sel_textLabel);
        if (v62)
        {
          uint64_t v63 = v62;
          id v64 = objc_msgSend(self, sel_labelColor);
          objc_msgSend(v63, sel_setTextColor_, v64);
        }
        id v65 = objc_msgSend(a1, sel_detailTextLabel);
        if (v65)
        {
          uint64_t v66 = v65;
          id v67 = objc_msgSend(self, sel_secondaryLabelColor);
          objc_msgSend(v66, sel_setTextColor_, v67);
        }
        id v68 = objc_msgSend(a1, sel_detailTextLabel);
        if (v68)
        {
          id v69 = v68;
          objc_msgSend(v68, sel_setNumberOfLines_, 0);
        }
        uint64_t v71 = v135;
        uint64_t v70 = v136;
        __swift_project_boxed_opaque_existential_1(v134, v135);
        uint64_t v72 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v70 + 8) + 48))(v71);
        if (!v72)
        {
          uint64_t v78 = objc_msgSend(a1, sel_detailTextLabel);
          if (!v78) {
            goto LABEL_86;
          }
          id v4 = v78;
          uint64_t v79 = (void *)sub_1C151E5EC();
          goto LABEL_85;
        }
        uint64_t v73 = v72;
        objc_msgSend(v72, sel_sortingScore);

        uint64_t v74 = objc_msgSend(a1, sel_detailTextLabel);
        if (!v74) {
          goto LABEL_86;
        }
        id v4 = v74;
        *(void *)&long long v132 = 0;
        *((void *)&v132 + 1) = 0xE000000000000000;
        if (qword_1EA194C88 != -1) {
          goto LABEL_104;
        }
        goto LABEL_54;
      case 4u:
        a1 = sub_1C03E66A8();
        id v33 = objc_msgSend(a1, sel_textLabel);
        if (v33)
        {
          uint64_t v34 = v33;
          uint64_t v35 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v34, sel_setText_, v35);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v50 = objc_msgSend(a1, sel_detailTextLabel);
        if (v50)
        {
          uint64_t v51 = v50;
          objc_msgSend(v50, sel_setText_, 0);
        }
        id v52 = objc_msgSend(a1, sel_imageView);
        if (v52)
        {
          uint64_t v53 = v52;
          objc_msgSend(v52, sel_setImage_, 0);
        }
        goto LABEL_98;
      default:
        sub_1C01DC970((uint64_t)(v7 + 16), (uint64_t)v134);
        a1 = sub_1C03E66A8();
        id v15 = objc_msgSend(a1, sel_textLabel);
        if (v15)
        {
          objc_super v16 = v15;
          int v17 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v16, sel_setText_, v17);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v36 = objc_msgSend(a1, sel_detailTextLabel);
        if (v36)
        {
          uint64_t v37 = v36;
          sub_1C03E7D34((uint64_t)v134, (uint64_t)&v132, (uint64_t (*)(void))sub_1C01DC908);
          if (v133)
          {
            __swift_project_boxed_opaque_existential_1(&v132, v133);
            sub_1C152088C();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v132);
          }
          else
          {
            sub_1C03E7990((uint64_t)&v132, (uint64_t (*)(void))sub_1C01DC908);
          }
          id v80 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v37, sel_setText_, v80);
        }
        id v81 = objc_msgSend(a1, sel_imageView);
        if (v81)
        {
          CGFloat v82 = v81;
          objc_msgSend(v81, sel_setImage_, 0);
        }
        sub_1C03E7990((uint64_t)v134, (uint64_t (*)(void))sub_1C01DC908);
        goto LABEL_98;
    }
  }
LABEL_103:
  __break(1u);
LABEL_104:
  swift_once();
LABEL_54:
  uint64_t v75 = (void *)qword_1EA2B5690;
  char v76 = (void *)sub_1C1517D2C();
  id v77 = objc_msgSend(v75, sel_stringForObjectValue_, v76);

  if (v77)
  {
    sub_1C151E62C();
  }
  else
  {
    sub_1C151EF4C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v79 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
LABEL_85:
  objc_msgSend(v4, sel_setText_, v79);

LABEL_86:
  id v105 = objc_msgSend(a1, sel_imageView);
  if (v105)
  {
    CGRect v106 = v105;
    objc_msgSend(v105, sel_setImage_, *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_placeholderImage));
  }
  uint64_t v107 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BFC66384((uint64_t)v134, (uint64_t)&v132);
  sub_1BFC66384((uint64_t)&v132, (uint64_t)v131);
  uint64_t v108 = swift_allocObject();
  *(void *)(v108 + 16) = v107;
  sub_1BFC773DC(&v132, v108 + 24);
  __swift_project_boxed_opaque_existential_1(v134, v135);
  swift_retain_n();
  uint64_t v109 = sub_1C151811C();
  uint64_t v111 = v110;
  uint64_t v112 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_feedItemImages);
  swift_beginAccess();
  uint64_t v113 = *v112;
  if (*(void *)(v113 + 16) && (unint64_t v114 = sub_1BFEF2D8C(v109, v111), (v115 & 1) != 0))
  {
    uint64_t v116 = *(void **)(*(void *)(v113 + 56) + 8 * v114);
    swift_endAccess();
    id v117 = v116;
    swift_bridgeObjectRelease();
    sub_1C03E68FC((uint64_t)v117, v107, v131);
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v118 = v135;
    uint64_t v119 = v136;
    __swift_project_boxed_opaque_existential_1(v134, v135);
    id v120 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_placeholderImage);
    uint64_t v121 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BFC66384((uint64_t)v134, (uint64_t)v130);
    uint64_t v122 = (void *)swift_allocObject();
    v122[2] = v121;
    sub_1BFC773DC(v130, (uint64_t)(v122 + 3));
    v122[8] = sub_1C03E7CD0;
    v122[9] = v108;
    uint64_t v123 = *(void *)(v119 + 8);
    swift_retain();
    swift_retain();
    sub_1C135BADC(v120, (void (*)(void))sub_1C03E7D24, (uint64_t)v122, v118, v123);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
  sub_1C03E7990((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
  return a1;
}

void *sub_1C03E66A8()
{
  type metadata accessor for DebugJournalTableViewCell();
  uint64_t v0 = (void *)sub_1C151F24C();
  id v1 = objc_msgSend(v0, sel_textLabel);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
    objc_msgSend(v2, sel_setFont_, v3);
  }
  id v4 = objc_msgSend(v0, sel_textLabel);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);
  }
  id v7 = objc_msgSend(v0, sel_textLabel);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_setNumberOfLines_, 0);
  }
  id v9 = objc_msgSend(v0, sel_detailTextLabel);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v10, sel_setTextColor_, v11);
  }
  id v12 = objc_msgSend(v0, sel_detailTextLabel);
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
    objc_msgSend(v13, sel_setFont_, v14);
  }
  id v15 = objc_msgSend(v0, sel_detailTextLabel);
  if (v15)
  {
    objc_super v16 = v15;
    objc_msgSend(v15, sel_setNumberOfLines_, 0);
  }
  objc_msgSend(v0, sel_setSelectionStyle_, 0);
  objc_msgSend(v0, sel_setAccessoryType_, 0);
  return v0;
}

void sub_1C03E68FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  id v6 = (void *)MEMORY[0x1C18C9C60](v5);
  id v7 = v6;
  if (v6)
  {
    id v8 = objc_msgSend(v6, sel_textLabel);

    if (!v8)
    {
      id v7 = 0;
      goto LABEL_8;
    }
    id v9 = objc_msgSend(v8, sel_text);

    if (v9)
    {
      id v7 = (void *)sub_1C151E62C();
      id v8 = v10;

      goto LABEL_8;
    }
    id v7 = 0;
  }
  id v8 = 0;
LABEL_8:
  uint64_t v11 = a3[3];
  uint64_t v12 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 24))(v11);
  if (!v8)
  {
    if (!v14) {
      goto LABEL_20;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  if (!v14) {
    goto LABEL_17;
  }
  if (v7 == (void *)v13 && v8 == v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return;
    }
  }
LABEL_20:
  swift_beginAccess();
  int v17 = (void *)MEMORY[0x1C18C9C60](v5);
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_imageView);

    if (v19)
    {
      objc_msgSend(v19, sel_setImage_, a1);
    }
  }
}

uint64_t sub_1C03E6C70(void *a1)
{
  id v53 = a1;
  uint64_t v2 = sub_1C151CA7C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v53 - v7;
  uint64_t v9 = type metadata accessor for DebugJournalGroupItem();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v53 - v14;
  id v54 = v1;
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_sections];
  unint64_t v17 = sub_1C151676C();
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v17 >= *(void *)(v16 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v18 = *(void *)(v16 + 24 * v17 + 48);
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1C151673C();
  if ((v19 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v19 >= *(void *)(v18 + 16))
  {
LABEL_20:
    __break(1u);
    JUMPOUT(0x1C03E7294);
  }
  sub_1C03E7D34(v18+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
  swift_bridgeObjectRelease();
  sub_1C03E7D34((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C03E7990((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
      uint64_t v22 = *((void *)v12 + 2);
      uint64_t v23 = *((void *)v12 + 3);
      unsigned __int8 v24 = v12[32];
      swift_bridgeObjectRelease();
      return sub_1BFDCA350(v22, v23, v24);
    case 2u:
      sub_1C03E7BEC();
      id v27 = &v12[*(int *)(v26 + 48)];
      uint64_t v28 = v3;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v27, v2);
      uint64_t v29 = (void *)sub_1C151670C();
      objc_msgSend(v53, sel_deselectRowAtIndexPath_animated_, v29, 1);

      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
      id v30 = objc_allocWithZone((Class)sub_1C151B78C());
      uint64_t v31 = (void *)sub_1C151B77C();
      id v32 = objc_msgSend(v31, sel_navigationItem);
      id v33 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v32, sel_setTitle_, v33);

      id v34 = objc_msgSend(v54, sel_navigationController);
      objc_msgSend(v34, sel_pushViewController_animated_, v31, 1);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v2);
      goto LABEL_14;
    case 3u:
      uint64_t v35 = *((void *)v12 + 5);
      sub_1BFC773DC((long long *)v12, (uint64_t)v58);
      id v36 = (void *)sub_1C151670C();
      objc_msgSend(v53, sel_deselectRowAtIndexPath_animated_, v36, 1);

      sub_1BFC66384((uint64_t)v58, (uint64_t)v55);
      id v37 = v54;
      uint64_t v38 = *(void *)&v54[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_commandCenter];
      uint64_t v39 = *(void *)&v54[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_commandCenter + 8];
      uint64_t v40 = *(void **)&v54[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_cloudContext];
      unint64_t v41 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugInspectionViewController());
      uint64_t v42 = v56;
      uint64_t v43 = v57;
      uint64_t v44 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
      id v53 = &v53;
      __n128 v45 = MEMORY[0x1F4188790](v44);
      uint64_t v47 = (char *)&v53 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v48 + 16))(v47, v45);
      swift_retain();
      swift_unknownObjectRetain();
      id v49 = v40;
      id v50 = sub_1C0F02F8C(v35, (uint64_t)v47, v38, v39, v49, v41, v42, v43);
      swift_release();
      swift_unknownObjectRelease();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      id v51 = objc_msgSend(v37, sel_navigationController, v53);
      if (v51)
      {
        id v52 = v51;
        objc_msgSend(v51, sel_pushViewController_animated_, v50, 1);
        swift_release();
      }
      else
      {
        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
LABEL_14:
      id v21 = (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem;
      uint64_t v20 = (uint64_t)v15;
      return sub_1C03E7990(v20, v21);
    case 4u:
      sub_1C03E7990((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
      return swift_bridgeObjectRelease();
    default:
      sub_1C03E7990((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
      swift_bridgeObjectRelease();
      uint64_t v20 = (uint64_t)(v12 + 16);
      id v21 = (uint64_t (*)(void))sub_1C01DC908;
      return sub_1C03E7990(v20, v21);
  }
}

void sub_1C03E7424(void *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C18C9C60](v7);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    uint64_t v10 = sub_1C151811C();
    uint64_t v12 = v11;
    if (a1) {
      id v13 = a1;
    }
    else {
      id v13 = *(id *)&v9[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage];
    }
    uint64_t v14 = &v9[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_feedItemImages];
    swift_beginAccess();
    id v15 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *(void *)v14;
    *(void *)uint64_t v14 = 0x8000000000000000;
    sub_1C1067E28((uint64_t)v13, v10, v12, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v14 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v17 = v15;
    if (!a1) {
      id v17 = *(id *)&v9[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage];
    }
    id v18 = v15;
    a4(v17);
  }
}

uint64_t type metadata accessor for DebugJournalGroupViewController()
{
  return self;
}

id sub_1C03E76B0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tableView;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v11 = v8;
  *(void *)&v8[v9] = objc_msgSend(v10, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_feedItemImages] = MEMORY[0x1E4FBC868];
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_placeholderImage;
  id v13 = self;
  id v14 = objc_msgSend(v13, sel_systemGrayColor);
  id v15 = objc_msgSend(v13, sel_lightGrayColor);
  uint64_t v16 = self;
  double v17 = *MEMORY[0x1E4FB09B8];
  id v18 = objc_msgSend(v16, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09B8]);
  uint64_t v19 = sub_1C06680BC(v14, 0, 0, v15, v18, 44.0, 44.0);

  *(void *)&v11[v12] = v19;
  uint64_t v20 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage;
  id v21 = objc_msgSend(v13, sel_lightGrayColor);
  id v22 = objc_msgSend(v16, sel_systemFontOfSize_weight_, 12.0, v17);
  uint64_t v23 = sub_1C06680BC(0, 4271950, 0xE300000000000000, v21, v22, 44.0, 44.0);

  *(void *)&v11[v20] = v23;
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_cloudContext] = a1;
  sub_1BFC66384((uint64_t)a3, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tagService]);
  unsigned __int8 v24 = &v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_commandCenter];
  *(void *)unsigned __int8 v24 = a5;
  *((void *)v24 + 1) = a6;
  sub_1BFE60390(a7, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_group]);
  uint64_t v25 = a1;
  swift_unknownObjectRetain();
  uint64_t v26 = sub_1C14E7988(v25, a2, a3, a4, a7, a8);
  swift_bridgeObjectRelease();
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_sections] = v26;

  v38.receiver = v11;
  v38.super_class = ObjectType;
  id v27 = objc_msgSendSuper2(&v38, sel_initWithNibName_bundle_, 0, 0);
  sub_1C0392E3C(a7);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v27;
}

uint64_t sub_1C03E7990(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C03E79F0()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tableView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_feedItemImages] = MEMORY[0x1E4FBC868];
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_placeholderImage;
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_systemGrayColor);
  id v5 = objc_msgSend(v3, sel_lightGrayColor);
  uint64_t v6 = self;
  double v7 = *MEMORY[0x1E4FB09B8];
  id v8 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09B8]);
  uint64_t v9 = sub_1C06680BC(v4, 0, 0, v5, v8, 44.0, 44.0);

  *(void *)&v0[v2] = v9;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage;
  id v11 = objc_msgSend(v3, sel_lightGrayColor);
  id v12 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 12.0, v7);
  uint64_t v13 = sub_1C06680BC(0, 4271950, 0xE300000000000000, v11, v12, 44.0, 44.0);

  *(void *)&v0[v10] = v13;
  sub_1C152040C();
  __break(1u);
}

void sub_1C03E7BEC()
{
  if (!qword_1EA19AFC0)
  {
    sub_1C151CA7C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19AFC0);
    }
  }
}

uint64_t sub_1C03E7C58()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C03E7C90()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1C03E7CD0(uint64_t a1)
{
  sub_1C03E68FC(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_1C03E7CDC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

void sub_1C03E7D24(void *a1)
{
  sub_1C03E7424(a1, *(void *)(v1 + 16), (void *)(v1 + 24), *(void (**)(id))(v1 + 64));
}

uint64_t sub_1C03E7D34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C03E7D9C()
{
  unint64_t result = qword_1EA19AFD0;
  if (!qword_1EA19AFD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA19AFD0);
  }
  return result;
}

void sub_1C03E7DE0(unsigned char *a1@<X8>)
{
}

void FeedKnobsConfigType.feedRefreshStrategy(for:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t dispatch thunk of FeedKnobsConfigType.maxGroups.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedKnobsConfigType.groupKnobs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedKnobsConfigType.feedRefreshStrategy(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1C03E7E40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEE9D14(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  double v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - v9;
  *(void *)&double v12 = MEMORY[0x1F4188790](v11).n128_u64[0];
  id v14 = (char *)&v28 - v13;
  if (*v2)
  {
    if (*v2 == 1)
    {
      id v15 = objc_msgSend(a1, sel_loadDate, v12);
      if (v15)
      {
        uint64_t v16 = v15;
        sub_1C15162BC();

        uint64_t v17 = sub_1C151631C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 0, 1, v17);
      }
      else
      {
        uint64_t v24 = sub_1C151631C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
      }
      id v14 = v10;
    }
    else
    {
      id v21 = objc_msgSend(a1, sel_publisherSpecifiedArticleIDsModifiedDate, v12);
      if (v21)
      {
        id v22 = v21;
        sub_1C15162BC();

        uint64_t v23 = sub_1C151631C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 0, 1, v23);
      }
      else
      {
        uint64_t v26 = sub_1C151631C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
      }
      id v14 = v7;
    }
  }
  else
  {
    id v18 = objc_msgSend(a1, sel_fetchDate, v12);
    if (v18)
    {
      uint64_t v19 = v18;
      sub_1C15162BC();

      uint64_t v20 = sub_1C151631C();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v14, 0, 1, v20);
    }
    else
    {
      uint64_t v25 = sub_1C151631C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
    }
  }
  return sub_1BFCB311C((uint64_t)v14, a2);
}

uint64_t sub_1C03E812C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148DBBC(*a1, *a2);
}

uint64_t sub_1C03E8138()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03E81E4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03E827C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03E8324@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C03E8F3C();
  *a1 = result;
  return result;
}

void sub_1C03E8354(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000065;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x6574614464616F6CLL;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000028;
    unint64_t v4 = 0x80000001C15FF230;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7461446863746566;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C03E83BC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C03E841C()
{
  return sub_1C151EAEC();
}

void sub_1C03E846C(void *a1@<X8>)
{
  *a1 = &unk_1F1B69DB0;
}

BOOL static FormatTagBinding.DateTime.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatTagBinding.DateTime.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatTagBinding.DateTime.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C03E8508()
{
  unint64_t result = qword_1EA19AFE0;
  if (!qword_1EA19AFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AFE0);
  }
  return result;
}

unint64_t sub_1C03E855C(uint64_t a1)
{
  unint64_t result = sub_1C03E8584();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03E8584()
{
  unint64_t result = qword_1EA19AFE8;
  if (!qword_1EA19AFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AFE8);
  }
  return result;
}

unint64_t sub_1C03E85D8(void *a1)
{
  a1[1] = sub_1C03E8610();
  a1[2] = sub_1C03E8664();
  unint64_t result = sub_1C03E8508();
  a1[3] = result;
  return result;
}

unint64_t sub_1C03E8610()
{
  unint64_t result = qword_1EA19AFF0;
  if (!qword_1EA19AFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AFF0);
  }
  return result;
}

unint64_t sub_1C03E8664()
{
  unint64_t result = qword_1EA19AFF8;
  if (!qword_1EA19AFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19AFF8);
  }
  return result;
}

uint64_t sub_1C03E86B8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatTagBinding.DateTime.init(from:)(a1, a2);
}

uint64_t sub_1C03E86D0(void *a1)
{
  return FormatTagBinding.DateTime.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatTagBinding.DateTime()
{
  return &type metadata for FormatTagBinding.DateTime;
}

unsigned char *_s8DateTimeOwst_2_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03E87C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8DateTimeO10CodingTypeOMa_0()
{
  return &_s8DateTimeO10CodingTypeON_0;
}

unint64_t sub_1C03E8804()
{
  unint64_t result = qword_1EA19B000;
  if (!qword_1EA19B000)
  {
    sub_1C03E885C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B000);
  }
  return result;
}

void sub_1C03E885C()
{
  if (!qword_1EA19B008)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B008);
    }
  }
}

unint64_t sub_1C03E88B8()
{
  unint64_t result = qword_1EA19B010;
  if (!qword_1EA19B010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B010);
  }
  return result;
}

unint64_t sub_1C03E890C()
{
  unint64_t result = qword_1EA19B018;
  if (!qword_1EA19B018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B018);
  }
  return result;
}

uint64_t sub_1C03E8960@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFEE9D14(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v43 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v43 - v12;
  if (*a1)
  {
    if (*a1 == 1)
    {
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
      uint64_t v17 = (void *)(v16 + v15);
      uint64_t v44 = v5;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
      id v19 = objc_msgSend((id)swift_unknownObjectRetain(), sel_loadDate);
      if (v19)
      {
        uint64_t v20 = v19;
        sub_1C15162BC();

        uint64_t v21 = sub_1C151631C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
      }
      else
      {
        uint64_t v36 = sub_1C151631C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v10, 1, 1, v36);
      }
      sub_1BFCB311C((uint64_t)v10, (uint64_t)boxed_opaque_existential_0);
      id v37 = v17;
      uint64_t v38 = 0x7461442064616F4CLL;
      uint64_t v39 = 0xE900000000000065;
    }
    else
    {
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v29 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
      uint64_t v31 = (void *)(v16 + v30);
      uint64_t v44 = v5;
      id v32 = __swift_allocate_boxed_opaque_existential_0(v43);
      id v33 = objc_msgSend((id)swift_unknownObjectRetain(), sel_publisherSpecifiedArticleIDsModifiedDate);
      if (v33)
      {
        id v34 = v33;
        sub_1C15162BC();

        uint64_t v35 = sub_1C151631C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v7, 0, 1, v35);
      }
      else
      {
        uint64_t v41 = sub_1C151631C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v7, 1, 1, v41);
      }
      sub_1BFCB311C((uint64_t)v7, (uint64_t)v32);
      uint64_t v39 = 0x80000001C160E540;
      id v37 = v31;
      uint64_t v38 = 0xD00000000000002CLL;
    }
  }
  else
  {
    sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
    uint64_t v22 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
    uint64_t v24 = (void *)(v16 + v23);
    uint64_t v44 = v5;
    uint64_t v25 = __swift_allocate_boxed_opaque_existential_0(v43);
    id v26 = objc_msgSend((id)swift_unknownObjectRetain(), sel_fetchDate);
    if (v26)
    {
      id v27 = v26;
      sub_1C15162BC();

      uint64_t v28 = sub_1C151631C();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v13, 0, 1, v28);
    }
    else
    {
      uint64_t v40 = sub_1C151631C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v13, 1, 1, v40);
    }
    sub_1BFCB311C((uint64_t)v13, (uint64_t)v25);
    id v37 = v24;
    uint64_t v38 = 0x6144206863746546;
    uint64_t v39 = 0xEA00000000006574;
  }
  sub_1C042F9B0(v38, v39, (uint64_t)v43, v37);
  uint64_t result = swift_unknownObjectRelease();
  *a2 = v16;
  return result;
}

uint64_t sub_1C03E8F3C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t FormatShineBlend.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  char v10 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1C00F6248(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

void FormatShineBlend.blendMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 65);
}

void FormatShineBlend.alphaProcessor.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  char v3 = *(unsigned char *)(v1 + 81);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
}

uint64_t sub_1C03E9000@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatShineBlend.init(from:)(a1, a2);
}

uint64_t sub_1C03E9018(void *a1)
{
  return FormatShineBlend.encode(to:)(a1);
}

BOOL _s8NewsFeed16FormatShineBlendV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 64);
  int v3 = *(unsigned __int8 *)(a1 + 65);
  double v4 = *(double *)(a1 + 72);
  char v5 = *(unsigned char *)(a1 + 80);
  char v6 = *(unsigned char *)(a1 + 81);
  char v7 = *(unsigned char *)(a2 + 64);
  int v8 = *(unsigned __int8 *)(a2 + 65);
  double v9 = *(double *)(a2 + 72);
  char v10 = *(unsigned char *)(a2 + 80);
  char v11 = *(unsigned char *)(a2 + 81);
  long long v12 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v12;
  long long v13 = *(_OWORD *)(a1 + 48);
  void v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v13;
  char v25 = v2;
  long long v14 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  v22[2] = *(_OWORD *)(a2 + 32);
  v22[3] = v15;
  char v23 = v7;
  if ((_s8NewsFeed16FormatShineColorO2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v22) & 1) == 0) {
    return 0;
  }
  if (v3 == 16)
  {
    if (v8 != 16) {
      return 0;
    }
  }
  else
  {
    if (v8 == 16) {
      return 0;
    }
    LOBYTE(v24[0]) = v3;
    LOBYTE(v22[0]) = v8;
    uint64_t v16 = FormatBlendMode.rawValue.getter();
    uint64_t v18 = v17;
    if (v16 == FormatBlendMode.rawValue.getter() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v20 & 1) == 0) {
        return result;
      }
    }
  }
  if (v6)
  {
    if (v11) {
      return 1;
    }
  }
  else if ((v11 & 1) == 0)
  {
    if (v5)
    {
      if (v4 == 0.0)
      {
        if (v10) {
          return *(void *)&v9 == 0;
        }
      }
      else if (v10)
      {
        return *(void *)&v9 != 0;
      }
      return 0;
    }
    if ((v10 & 1) == 0 && v4 == v9) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1C03E91C4(uint64_t a1)
{
  unint64_t result = sub_1C03E91EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03E91EC()
{
  unint64_t result = qword_1EA19B020;
  if (!qword_1EA19B020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B020);
  }
  return result;
}

unint64_t sub_1C03E9240(void *a1)
{
  a1[1] = sub_1C03E9278();
  a1[2] = sub_1C03E92CC();
  unint64_t result = sub_1C03E9320();
  a1[3] = result;
  return result;
}

unint64_t sub_1C03E9278()
{
  unint64_t result = qword_1EA19B028;
  if (!qword_1EA19B028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B028);
  }
  return result;
}

unint64_t sub_1C03E92CC()
{
  unint64_t result = qword_1EA19B030;
  if (!qword_1EA19B030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B030);
  }
  return result;
}

unint64_t sub_1C03E9320()
{
  unint64_t result = qword_1EA19B038;
  if (!qword_1EA19B038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B038);
  }
  return result;
}

uint64_t destroy for FormatShineColor(uint64_t a1)
{
  return sub_1C00F6368(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatShineBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v13 = *(unsigned char *)(a2 + 64);
  sub_1C00F6248(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v13);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for FormatShineBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v23 = *(unsigned char *)(a2 + 64);
  sub_1C00F6248(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v23);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v23;
  sub_1C00F6368(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v21 = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 72) = v21;
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FormatShineBlend(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(unsigned char *)(a1 + 64) = v4;
  sub_1C00F6368(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatShineBlend(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 82)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatShineBlend(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 82) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatShineBlend()
{
  return &type metadata for FormatShineBlend;
}

double static FormatCodingFloatEquationZeroStrategy.defaultValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  sub_1BFFC0BF8();
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

uint64_t sub_1C03E970C()
{
  return swift_deallocObject();
}

double sub_1C03E9720@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  sub_1BFFC0BF8();
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double static FormatCodingFloatEquationOneStrategy.defaultValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0x3FF0000000000000;
  sub_1BFFC0BF8();
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double sub_1C03E97FC@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0x3FF0000000000000;
  sub_1BFFC0BF8();
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double static FormatCodingFloatEquationEightStrategy.defaultValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0x4020000000000000;
  sub_1BFFC0BF8();
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double sub_1C03E98DC@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0x4020000000000000;
  sub_1BFFC0BF8();
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

BOOL _s8NewsFeed36FormatCodingFloatEquationOneStrategyV12shouldEncode12wrappedValueSbAA0cF0VyAA0cE0OG_tFZ_0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0x3FF0000000000000;
  sub_1BFFC0BF8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v2;
  *(unsigned char *)(inited + 40) = 0;
  LOBYTE(v1) = sub_1C00DE998(v1, inited);
  swift_setDeallocating();
  sub_1C007A3D4(0, qword_1EB876620, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquationToken);
  swift_arrayDestroy();
  return (v1 & 1) == 0;
}

BOOL _s8NewsFeed37FormatCodingFloatEquationZeroStrategyV12shouldEncode12wrappedValueSbAA0cF0VyAA0cE0OG_tFZ_0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  sub_1BFFC0BF8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v2;
  *(unsigned char *)(inited + 40) = 0;
  LOBYTE(v1) = sub_1C00DE998(v1, inited);
  swift_setDeallocating();
  sub_1C007A3D4(0, qword_1EB876620, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquationToken);
  swift_arrayDestroy();
  return (v1 & 1) == 0;
}

BOOL _s8NewsFeed38FormatCodingFloatEquationEightStrategyV12shouldEncode12wrappedValueSbAA0cF0VyAA0cE0OG_tFZ_0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0x4020000000000000;
  sub_1BFFC0BF8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v2;
  *(unsigned char *)(inited + 40) = 0;
  LOBYTE(v1) = sub_1C00DE998(v1, inited);
  swift_setDeallocating();
  sub_1C007A3D4(0, qword_1EB876620, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquationToken);
  swift_arrayDestroy();
  return (v1 & 1) == 0;
}

unint64_t sub_1C03E9BC4(uint64_t a1)
{
  unint64_t result = sub_1C03E9BEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03E9BEC()
{
  unint64_t result = qword_1EA19B040;
  if (!qword_1EA19B040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B040);
  }
  return result;
}

uint64_t sub_1C03E9C40()
{
  return sub_1C03E9CA8((unint64_t *)&qword_1EB874A60);
}

uint64_t sub_1C03E9C74()
{
  return sub_1C03E9CA8((unint64_t *)&qword_1EB874A58);
}

uint64_t sub_1C03E9CA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C007A3D4(255, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C03E9D08(uint64_t a1)
{
  unint64_t result = sub_1C03E9D30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03E9D30()
{
  unint64_t result = qword_1EA19B048;
  if (!qword_1EA19B048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B048);
  }
  return result;
}

unint64_t sub_1C03E9D84(uint64_t a1)
{
  unint64_t result = sub_1C03E9DAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03E9DAC()
{
  unint64_t result = qword_1EA19B050;
  if (!qword_1EA19B050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B050);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingFloatEquationZeroStrategy()
{
  return &type metadata for FormatCodingFloatEquationZeroStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingFloatEquationOneStrategy()
{
  return &type metadata for FormatCodingFloatEquationOneStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingFloatEquationEightStrategy()
{
  return &type metadata for FormatCodingFloatEquationEightStrategy;
}

uint64_t WebEmbedDataSourcesConfiguration.dataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedDataSourcesConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1C03EA0C4();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03EA498(0, &qword_1EA19B078, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v18 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03EA22C();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v12 = v9;
    sub_1C03EA11C();
    uint64_t v14 = v13;
    sub_1C03EA280();
    sub_1C152065C();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
    {
      sub_1C03EA2D8((uint64_t)v6);
      uint64_t v16 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v16 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v8);
    *uint64_t v19 = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C03EA0C4()
{
  if (!qword_1EA19B058)
  {
    sub_1C03EA11C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B058);
    }
  }
}

void sub_1C03EA11C()
{
  if (!qword_1EA19B060)
  {
    sub_1C03EA184();
    sub_1C03EA1D8();
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B060);
    }
  }
}

unint64_t sub_1C03EA184()
{
  unint64_t result = qword_1EA19B068;
  if (!qword_1EA19B068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B068);
  }
  return result;
}

unint64_t sub_1C03EA1D8()
{
  unint64_t result = qword_1EA19B070;
  if (!qword_1EA19B070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B070);
  }
  return result;
}

unint64_t sub_1C03EA22C()
{
  unint64_t result = qword_1EA19B080;
  if (!qword_1EA19B080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B080);
  }
  return result;
}

unint64_t sub_1C03EA280()
{
  unint64_t result = qword_1EA19B088;
  if (!qword_1EA19B088)
  {
    sub_1C03EA11C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B088);
  }
  return result;
}

uint64_t sub_1C03EA2D8(uint64_t a1)
{
  sub_1C03EA0C4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WebEmbedDataSourcesConfiguration.encode(to:)(void *a1)
{
  sub_1C03EA498(0, &qword_1EA19B090, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03EA22C();
  sub_1C1520F0C();
  v10[1] = v8;
  sub_1C03EA4FC();
  sub_1C03EA554();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1C03EA498(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C03EA22C();
    unint64_t v7 = a3(a1, &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C03EA4FC()
{
  if (!qword_1EA1A1010)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A1010);
    }
  }
}

unint64_t sub_1C03EA554()
{
  unint64_t result = qword_1EA19B098;
  if (!qword_1EA19B098)
  {
    sub_1C03EA4FC();
    sub_1C03EA1D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B098);
  }
  return result;
}

uint64_t sub_1C03EA5C4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03EA620()
{
  return sub_1C151E77C();
}

uint64_t sub_1C03EA640()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03EA698@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C03EA6EC(void *a1@<X8>)
{
  *a1 = 0x72756F5361746164;
  a1[1] = 0xEB00000000736563;
}

uint64_t sub_1C03EA710()
{
  return 0x72756F5361746164;
}

uint64_t sub_1C03EA730@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C03EA788(uint64_t a1)
{
  unint64_t v2 = sub_1C03EA22C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03EA7C4(uint64_t a1)
{
  unint64_t v2 = sub_1C03EA22C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03EA800@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return WebEmbedDataSourcesConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C03EA818(void *a1)
{
  return WebEmbedDataSourcesConfiguration.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WebEmbedDataSourcesConfiguration()
{
  return &type metadata for WebEmbedDataSourcesConfiguration;
}

unsigned char *storeEnumTagSinglePayload for WebEmbedDataSourcesConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C03EA8DCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataSourcesConfiguration.CodingKeys()
{
  return &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys;
}

unint64_t sub_1C03EA918()
{
  unint64_t result = qword_1EA19B0A0;
  if (!qword_1EA19B0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0A0);
  }
  return result;
}

unint64_t sub_1C03EA970()
{
  unint64_t result = qword_1EA19B0A8;
  if (!qword_1EA19B0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0A8);
  }
  return result;
}

unint64_t sub_1C03EA9C8()
{
  unint64_t result = qword_1EA19B0B0;
  if (!qword_1EA19B0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0B0);
  }
  return result;
}

void sub_1C03EAA1C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  switch(*v2)
  {
    case 1:
      uint64_t v9 = *(void **)(a1 + 40);
      if (objc_msgSend(v9, sel_respondsToSelector_, sel_thumbnailImagePrimaryColor))
      {
        id v10 = objc_msgSend(v9, sel_thumbnailImagePrimaryColor);
        if (v10) {
          goto LABEL_16;
        }
      }
      goto LABEL_10;
    case 2:
      uint64_t v11 = *(void **)(a1 + 40);
      if (objc_msgSend(v11, sel_respondsToSelector_, sel_thumbnailImageBackgroundColor))
      {
        id v10 = objc_msgSend(v11, sel_thumbnailImageBackgroundColor);
        if (v10) {
          goto LABEL_16;
        }
      }
LABEL_10:
      uint64_t v12 = swift_allocObject();
      uint64_t v5 = v12;
      char v13 = 29;
      goto LABEL_18;
    case 3:
      uint64_t v14 = *(void **)(a1 + 40);
      if (objc_msgSend(v14, sel_respondsToSelector_, sel_thumbnailImageTextColor))
      {
        id v10 = objc_msgSend(v14, sel_thumbnailImageTextColor);
        if (v10) {
          goto LABEL_16;
        }
      }
      uint64_t v12 = swift_allocObject();
      uint64_t v5 = v12;
      char v13 = 21;
      goto LABEL_18;
    case 4:
      uint64_t v15 = *(void **)(a1 + 40);
      if ((objc_msgSend(v15, sel_respondsToSelector_, sel_thumbnailImageAccentColor) & 1) != 0
        && (id v10 = objc_msgSend(v15, sel_thumbnailImageAccentColor)) != 0)
      {
LABEL_16:
        uint64_t v16 = v10;
        uint64_t v5 = swift_allocObject();
        objc_msgSend(v16, sel_red);
        double v18 = v17 * 255.0;
        objc_msgSend(v16, sel_green);
        double v20 = v19 * 255.0;
        objc_msgSend(v16, sel_blue);
        double v22 = v21 * 255.0;
        objc_msgSend(v16, sel_alpha);
        *(double *)(v5 + 16) = v18;
        *(double *)(v5 + 24) = v20;
        *(double *)(v5 + 32) = v22;
        *(void *)(v5 + 40) = v23;
        *(unsigned char *)(v5 + 48) = 0;

        uint64_t v8 = 0x6000000000000000;
      }
      else
      {
        uint64_t v12 = swift_allocObject();
        uint64_t v5 = v12;
        char v13 = 8;
LABEL_18:
        *(unsigned char *)(v12 + 16) = v13;
        *(void *)(v12 + 24) = 0x3FF0000000000000;
        *(unsigned char *)(v12 + 32) = 0;
        uint64_t v8 = 0x1000000000000000;
      }
LABEL_19:
      *a2 = v8 | v5;
      return;
    default:
      id v4 = objc_msgSend(*(id *)(a1 + 40), sel_storyStyle);
      uint64_t v5 = swift_allocObject();
      if (v4)
      {
        sub_1C03EAD04(v4, &v25);
        uint64_t v6 = v25;
        sub_1C03EAE28(v4, &v24);

        uint64_t v7 = v24;
        *(void *)(v5 + 16) = v6;
        *(void *)(v5 + 24) = v7;
      }
      else
      {
        sub_1C03EB7C8();
        sub_1C0A90F00((uint64_t *)(v5 + 16));
      }
      uint64_t v8 = 0x3000000000000000;
      goto LABEL_19;
  }
}

void sub_1C03EAD04(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_foreground_color);
  if (v3)
  {
    id v7 = v3;
    FCColor.formatColor.getter(a2);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    *(int64x2_t *)(v4 + 16) = vdupq_n_s64(0x404E000000000000uLL);
    *(void *)(v4 + 32) = 0x4050C00000000000;
    *(void *)(v4 + 40) = 0x3FE3333333333333;
    *(unsigned char *)(v4 + 48) = 0;
    uint64_t v5 = v4 | 0x6000000000000000;
    uint64_t v6 = (int64x2_t *)swift_allocObject();
    v6[1] = vdupq_n_s64(0x4068600000000000uLL);
    v6[2].i64[0] = 0x4067800000000000;
    v6[2].i64[1] = 0x3FE3333333333333;
    v6[3].i8[0] = 0;
    swift_retain();
    swift_release();
    swift_release();
    *a2 = v5;
  }
}

void sub_1C03EAE28(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_dark_style_foreground_color);
  if (v3)
  {
    id v7 = v3;
    FCColor.formatColor.getter(a2);
  }
  else
  {
    uint64_t v4 = (int64x2_t *)swift_allocObject();
    v4[1] = vdupq_n_s64(0x404E000000000000uLL);
    v4[2].i64[0] = 0x4050C00000000000;
    v4[2].i64[1] = 0x3FE3333333333333;
    v4[3].i8[0] = 0;
    uint64_t v5 = swift_allocObject();
    *(int64x2_t *)(v5 + 16) = vdupq_n_s64(0x4068600000000000uLL);
    *(void *)(v5 + 32) = 0x4067800000000000;
    *(void *)(v5 + 40) = 0x3FE3333333333333;
    *(unsigned char *)(v5 + 48) = 0;
    uint64_t v6 = v5 | 0x6000000000000000;
    swift_retain();
    swift_release();
    swift_release();
    *a2 = v6;
  }
}

uint64_t sub_1C03EAF50(unsigned __int8 *a1, char *a2)
{
  return sub_1C1485B44(*a1, *a2);
}

uint64_t sub_1C03EAF5C()
{
  return sub_1C015CA28();
}

uint64_t sub_1C03EAF64()
{
  return sub_1C0449854();
}

uint64_t sub_1C03EAF6C()
{
  return sub_1C044E7A0();
}

void sub_1C03EAF74(void *a1@<X8>)
{
  *a1 = &unk_1F1B6AFC8;
}

uint64_t FormatHeadlineBinding.Color.hash(into:)()
{
  return sub_1C1520DCC();
}

BOOL static FormatHeadlineBinding.Color.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatHeadlineBinding.Color.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C03EB010()
{
  unint64_t result = qword_1EA19B0B8;
  if (!qword_1EA19B0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0B8);
  }
  return result;
}

unint64_t sub_1C03EB064(uint64_t a1)
{
  unint64_t result = sub_1C03EB08C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03EB08C()
{
  unint64_t result = qword_1EA19B0C0;
  if (!qword_1EA19B0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0C0);
  }
  return result;
}

unint64_t sub_1C03EB0E0(void *a1)
{
  a1[1] = sub_1BFE2DDEC();
  a1[2] = sub_1BFE065B8();
  unint64_t result = sub_1C03EB010();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Color()
{
  return &type metadata for FormatHeadlineBinding.Color;
}

ValueMetadata *_s5ColorO10CodingTypeOMa_0()
{
  return &_s5ColorO10CodingTypeON_0;
}

unint64_t sub_1C03EB164()
{
  unint64_t result = qword_1EA19B0C8;
  if (!qword_1EA19B0C8)
  {
    sub_1C03EB1BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0C8);
  }
  return result;
}

void sub_1C03EB1BC()
{
  if (!qword_1EA19B0D0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B0D0);
    }
  }
}

unint64_t sub_1C03EB218()
{
  unint64_t result = qword_1EA19B0D8;
  if (!qword_1EA19B0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0D8);
  }
  return result;
}

uint64_t sub_1C03EB26C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v38 - v10);
  switch(*a1)
  {
    case 1:
      sub_1BFF96680(a2, (uint64_t)v8);
      LOBYTE(v38) = 1;
      sub_1C03EAA1C((uint64_t)v8, &v39);
      uint64_t v16 = v39;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      double v18 = (uint64_t *)(a3 + *(int *)(v17 + 24));
      *double v18 = v16;
      uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
      unint64_t v20 = 0xD000000000000011;
      double v21 = "Thumbnail Primary";
      goto LABEL_8;
    case 2:
      sub_1BFF96680(a2, (uint64_t)v8);
      LOBYTE(v38) = 2;
      sub_1C03EAA1C((uint64_t)v8, &v39);
      uint64_t v22 = v39;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v23 = (uint64_t *)(a3 + *(int *)(v17 + 24));
      *uint64_t v23 = v22;
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
      unint64_t v20 = 0xD000000000000014;
      double v21 = "Thumbnail Background";
      goto LABEL_8;
    case 3:
      sub_1BFF96680(a2, (uint64_t)v8);
      LOBYTE(v38) = 3;
      sub_1C03EAA1C((uint64_t)v8, &v39);
      uint64_t v25 = v39;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      id v26 = (uint64_t *)(a3 + *(int *)(v17 + 24));
      *id v26 = v25;
      uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
      *(_OWORD *)a3 = xmmword_1C15461C0;
      goto LABEL_9;
    case 4:
      sub_1BFF96680(a2, (uint64_t)v8);
      LOBYTE(v38) = 4;
      sub_1C03EAA1C((uint64_t)v8, &v39);
      uint64_t v28 = v39;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v29 = (uint64_t *)(a3 + *(int *)(v17 + 24));
      *uint64_t v29 = v28;
      uint64_t v30 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
      unint64_t v20 = 0xD000000000000010;
      double v21 = "Thumbnail Accent";
LABEL_8:
      *(void *)a3 = v20;
      *(void *)(a3 + 8) = (unint64_t)(v21 - 32) | 0x8000000000000000;
LABEL_9:
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      uint64_t v31 = a3 + *(int *)(v17 + 28);
      *(void *)uint64_t v31 = 0;
      *(void *)(v31 + 8) = 0;
      *(unsigned char *)(v31 + 16) = -1;
      uint64_t v32 = (uint64_t)v8;
      break;
    default:
      sub_1BFF96680(a2, (uint64_t)&v38 - v10);
      id v12 = objc_msgSend(v11[5], sel_storyStyle);
      uint64_t v13 = swift_allocObject();
      if (v12)
      {
        sub_1C03EAD04(v12, &v39);
        uint64_t v14 = v39;
        sub_1C03EAE28(v12, &v38);

        uint64_t v15 = v38;
        *(void *)(v13 + 16) = v14;
        *(void *)(v13 + 24) = v15;
      }
      else
      {
        sub_1C03EB7C8();
        sub_1C0A90F00((uint64_t *)(v13 + 16));
      }
      uint64_t v34 = v13 | 0x3000000000000000;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v35 = (uint64_t *)(a3 + *(int *)(v17 + 24));
      *uint64_t v35 = v34;
      uint64_t v36 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
      *(_OWORD *)a3 = xmmword_1C15461D0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      uint64_t v37 = a3 + *(int *)(v17 + 28);
      *(void *)uint64_t v37 = 0;
      *(void *)(v37 + 8) = 0;
      *(unsigned char *)(v37 + 16) = -1;
      uint64_t v32 = (uint64_t)v11;
      break;
  }
  sub_1BFF2F7F4(v32);
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 0, 1, v17);
}

uint64_t sub_1C03EB780()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1C03EB7C8()
{
  unint64_t result = qword_1EA19B0E0;
  if (!qword_1EA19B0E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA19B0E0);
  }
  return result;
}

uint64_t sub_1C03EB808()
{
  return swift_deallocObject();
}

uint64_t sub_1C03EB818()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for A6_V1()
{
  return &type metadata for A6_V1;
}

uint64_t sub_1C03EB838(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFD5DE6C(0, &qword_1EA19B0E8, (uint64_t (*)(void))sub_1BFC86234, (uint64_t)&type metadata for A6_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC86234();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0019560(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C03EBA80(uint64_t a1)
{
  unint64_t v2 = sub_1BFC86234();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03EBABC(uint64_t a1)
{
  unint64_t v2 = sub_1BFC86234();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03EBAF8(void *a1)
{
  return sub_1C03EB838(a1);
}

uint64_t sub_1C03EBB10()
{
  sub_1BFD5E558();
  return sub_1C151798C();
}

uint64_t sub_1C03EBB8C()
{
  return sub_1C12BC4CC();
}

uint64_t sub_1C03EBB9C()
{
  return swift_deallocObject();
}

uint64_t sub_1C03EBBAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C03EBBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C03EBBF8);
}

uint64_t sub_1C03EBBF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C03EBCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C03EBCBC);
}

void *sub_1C03EBCBC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C03EBD64()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for A6_V1.Layout.Attributes()
{
  return &type metadata for A6_V1.Layout.Attributes;
}

unsigned char *storeEnumTagSinglePayload for A6_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03EBE50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A6_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for A6_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C03EBE8C()
{
  unint64_t result = qword_1EA19B0F0;
  if (!qword_1EA19B0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B0F0);
  }
  return result;
}

uint64_t sub_1C03EBEF8(void *a1)
{
  switch(*a1 >> 62)
  {
    case 1:
    case 2:
    case 3:
      type metadata accessor for UnwrappedSportsTaxonomyGraphNodeWeakReference();
      uint64_t v2 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      *(void *)(v1 + 16) = v2;
      break;
    default:
      type metadata accessor for UnwrappedSportsTaxonomyGraphNodeWeakReference();
      uint64_t v3 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      *(void *)(v1 + 16) = v3;
      break;
  }
  swift_release();
  return v1;
}

uint64_t type metadata accessor for SportsTaxonomyGraphNodeWeakReference()
{
  return self;
}

uint64_t type metadata accessor for UnwrappedSportsTaxonomyGraphNodeWeakReference()
{
  return self;
}

uint64_t sub_1C03EC01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1C03EC044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a6, a3, v12);
  objc_msgSend(a4, sel_boundingRectForGlyphRange_inTextContainer_, a1, a2, a5);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t result = type metadata accessor for FormatTextLink.Link();
  uint64_t v22 = (void *)(a6 + *(int *)(result + 20));
  *uint64_t v22 = v14;
  v22[1] = v16;
  v22[2] = v18;
  v22[3] = v20;
  return result;
}

uint64_t sub_1C03EC118@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v7 = type metadata accessor for FormatTextLink.Link();
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    double v13 = a3 - *(double *)(v3 + 32);
    double v14 = a2 - *(double *)(v3 + 24);
    uint64_t v15 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v16 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BFDA6590(v15, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatTextLink.Link);
      v22.double x = v14;
      v22.double y = v13;
      if (CGRectContainsPoint(*(CGRect *)&v10[*(int *)(v7 + 20)], v22)) {
        break;
      }
      sub_1BFEFDA00((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatTextLink.Link);
      v15 += v16;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1C1515FDC();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a1, v10, v19);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
  }
  else
  {
LABEL_6:
    uint64_t v17 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t FormatTextLink.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatTextLink.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatTextLink(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatTextLink);
}

uint64_t *sub_1C03EC3C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t sub_1C03EC49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1C03EC520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t sub_1C03EC5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1C03EC640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1C03EC6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C03EC6D8);
}

uint64_t sub_1C03EC6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C03EC744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C03EC758);
}

uint64_t sub_1C03EC758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FormatTextLink.Link()
{
  uint64_t result = qword_1EA19B0F8;
  if (!qword_1EA19B0F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C03EC814()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C03EC8A8()
{
  return swift_deallocObject();
}

uint64_t sub_1C03EC8B8()
{
  return swift_deallocObject();
}

uint64_t sub_1C03EC8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C03EC044(a1, a2, a3, *(void **)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1C03EC8D0(uint64_t a1, void (*a2)(void, void, char *), uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v5 = type metadata accessor for FormatTextLink.Link();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v17 = v3;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F70F0(0, v9, 0);
    uint64_t v10 = v21;
    sub_1BFDA666C();
    uint64_t v18 = v11;
    uint64_t v12 = (char *)(a1
                 + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80)));
    uint64_t v13 = *(void *)(*(void *)(v11 - 8) + 72);
    do
    {
      v19(*(void *)v12, *((void *)v12 + 1), &v12[*(int *)(v18 + 48)]);
      uint64_t v21 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F70F0(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v21;
      }
      v12 += v13;
      *(void *)(v10 + 16) = v15 + 1;
      sub_1C03ECAC8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, (uint64_t (*)(void))type metadata accessor for FormatTextLink.Link);
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C03ECAC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

NewsFeed::ManageChannelNotificationsCommandState_optional __swiftcall ManageChannelNotificationsCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = NewsFeed_ManageChannelNotificationsCommandState_showManageNotifications;
  }
  else {
    v2.value = NewsFeed_ManageChannelNotificationsCommandState_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

unint64_t ManageChannelNotificationsCommandState.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_1C03ECBC0(char *a1, char *a2)
{
  return sub_1C1478318(*a1, *a2);
}

uint64_t sub_1C03ECBCC()
{
  return sub_1C015CB30();
}

uint64_t sub_1C03ECBD4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03ECC48()
{
  return sub_1C044C2FC();
}

uint64_t sub_1C03ECC50@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C03ECCB0(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000017;
  }
  else {
    unint64_t v2 = 0xD000000000000013;
  }
  unint64_t v3 = 0x80000001C1602280;
  if (*v1) {
    unint64_t v3 = 0x80000001C16022A0;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C03ECCF4(uint64_t a1)
{
  unint64_t v2 = sub_1C03EDE10();
  return MEMORY[0x1F4163458](a1, v2);
}

NewsFeed::ManageNotificationsContext::TaglessNotification_optional __swiftcall ManageNotificationsContext.TaglessNotification.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t ManageNotificationsContext.TaglessNotification.rawValue.getter()
{
  uint64_t result = 0x73656C7A7A7570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657573734977656ELL;
      break;
    case 2:
      uint64_t result = 0x6E6974656B72616DLL;
      break;
    case 3:
      uint64_t result = 0x647541664F646E65;
      break;
    case 4:
      uint64_t result = 0x7474656C7377656ELL;
      break;
    case 5:
      uint64_t result = 0x7374726F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C03ECE7C(unsigned __int8 *a1, char *a2)
{
  return sub_1C147E758(*a1, *a2);
}

uint64_t sub_1C03ECE88()
{
  return sub_1C015CBB8();
}

uint64_t sub_1C03ECE90()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03ECFA4()
{
  return sub_1C044D674();
}

NewsFeed::ManageNotificationsContext::TaglessNotification_optional sub_1C03ECFAC(Swift::String *a1)
{
  return ManageNotificationsContext.TaglessNotification.init(rawValue:)(*a1);
}

void sub_1C03ECFB8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x73656C7A7A7570;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000073;
      uint64_t v3 = 0x657573734977656ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6974656B72616DLL;
      a1[1] = 0xE900000000000067;
      break;
    case 3:
      *a1 = 0x647541664F646E65;
      a1[1] = 0xEF6B636172546F69;
      break;
    case 4:
      *a1 = 0x7474656C7377656ELL;
      a1[1] = 0xEA00000000007265;
      break;
    case 5:
      *a1 = 0x7374726F7073;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t ManageNotificationsContext.identifier.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    uint64_t result = 0x73656C7A7A7570;
    switch(*(void *)v0)
    {
      case 1u:
        uint64_t result = 0x657573734977656ELL;
        break;
      case 2u:
        uint64_t result = 0x6E6974656B72616DLL;
        break;
      case 3u:
        uint64_t result = 0x647541664F646E65;
        break;
      case 4u:
        uint64_t result = 0x7474656C7377656ELL;
        break;
      case 5u:
        uint64_t result = 0x7374726F7073;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_1C151E80C();
    return 979853684;
  }
  return result;
}

uint64_t static ContextMenuItem.manageChannelNotifications(context:)(uint64_t a1)
{
  sub_1C03ED45C(0, &qword_1EB8945D8, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C03ED45C(0, &qword_1EB8945C8, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1C03ED45C(0, &qword_1EB8945D0, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v4 - 8);
  if (!a1) {
    return 0;
  }
  uint64_t v5 = qword_1EB85F568;
  swift_unknownObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  sub_1C0067870();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151AEBC();
  sub_1C151AE9C();
  sub_1C151B2DC();
  swift_allocObject();
  uint64_t v6 = sub_1C151A80C();
  swift_unknownObjectRelease();
  return v6;
}

void sub_1C03ED45C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0067870();
    unint64_t v7 = a3(a1, &type metadata for ManageChannelNotificationsCommandState, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C03ED4C0()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t sub_1C03ED5C0()
{
  return sub_1C151C8CC();
}

uint64_t static SharingActivity.manageChannelNotifications(context:)(uint64_t a1)
{
  sub_1C03ED7F8();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C03ED864();
  MEMORY[0x1F4188790](v3 - 8);
  if (!a1) {
    return 0;
  }
  uint64_t v4 = qword_1EB85F568;
  swift_unknownObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151E5EC();
  sub_1C0067870();
  sub_1C151AEDC();
  sub_1C151B3AC();
  sub_1C151AEDC();
  swift_allocObject();
  uint64_t v5 = sub_1C151A9DC();
  swift_unknownObjectRelease();
  return v5;
}

void sub_1C03ED7F8()
{
  if (!qword_1EB8641F8)
  {
    sub_1C151B3AC();
    sub_1C0067870();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8641F8);
    }
  }
}

void sub_1C03ED864()
{
  if (!qword_1EB864200)
  {
    sub_1C0067870();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864200);
    }
  }
}

void sub_1C03ED8C8(uint64_t *a1@<X8>)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_1C1515B8C();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t sub_1C03ED9C8()
{
  sub_1C151C8FC();
  sub_1C151C8CC();
  return sub_1C151B39C();
}

unint64_t sub_1C03EDA28()
{
  unint64_t result = qword_1EA19B108;
  if (!qword_1EA19B108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B108);
  }
  return result;
}

unint64_t sub_1C03EDA84()
{
  unint64_t result = qword_1EA19B110;
  if (!qword_1EA19B110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B110);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.Manage()
{
  return &type metadata for Commands.Manage;
}

unsigned char *storeEnumTagSinglePayload for ManageChannelNotificationsCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03EDBB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageChannelNotificationsCommandState()
{
  return &type metadata for ManageChannelNotificationsCommandState;
}

uint64_t sub_1C03EDBF0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ManageNotificationsContext(uint64_t a1)
{
  return sub_1C03EDC10(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1C03EDC10(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed26ManageNotificationsContextOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C03EDBF0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ManageNotificationsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C03EDBF0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C03EDC10(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ManageNotificationsContext(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C03EDC10(v4, v5, v6);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ManageNotificationsContext.TaglessNotification(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03EDDD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageNotificationsContext.TaglessNotification()
{
  return &type metadata for ManageNotificationsContext.TaglessNotification;
}

unint64_t sub_1C03EDE10()
{
  unint64_t result = qword_1EA19B118;
  if (!qword_1EA19B118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B118);
  }
  return result;
}

void sub_1C03EDE64(char a1)
{
  if ((a1 & 1) == 0)
  {
    sub_1C151F36C();
    sub_1BFEE7EB0(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1C152C7F0;
    uint64_t v2 = sub_1C151C99C();
    uint64_t v4 = v3;
    uint64_t v5 = MEMORY[0x1E4FBB1A0];
    *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v6 = sub_1BFE9C558();
    *(void *)(v1 + 64) = v6;
    *(void *)(v1 + 32) = v2;
    *(void *)(v1 + 40) = v4;
    sub_1C1515FDC();
    sub_1C03EE344();
    uint64_t v7 = sub_1C152088C();
    *(void *)(v1 + 96) = v5;
    *(void *)(v1 + 104) = v6;
    *(void *)(v1 + 72) = v7;
    *(void *)(v1 + 80) = v8;
    sub_1BFEE7EB0(0, &qword_1EA19B120, MEMORY[0x1E4FAC900], MEMORY[0x1E4FBB718]);
    swift_retain();
    uint64_t v9 = sub_1C151E6AC();
    *(void *)(v1 + 136) = v5;
    *(void *)(v1 + 144) = v6;
    *(void *)(v1 + 112) = v9;
    *(void *)(v1 + 120) = v10;
    sub_1BFCCB57C();
    uint64_t v11 = (void *)sub_1C151FD3C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C03EE004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a5;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)(*(void *)v5 + 16);
  uint64_t v13 = *(void *)(*(void *)v5 + 40);
  v18[2] = *(void *)(*(void *)v5 + 48);
  v18[1] = __swift_project_boxed_opaque_existential_1(v12, v13);
  sub_1C018EB74(MEMORY[0x1E4FBC860]);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, v11, v8);
  *(void *)(v16 + v15) = v19;
  swift_retain();
  swift_retain();
  sub_1C151AC3C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03EE1BC()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1C03EE2A4(char a1)
{
  sub_1C1515FDC();
  sub_1C03EDE64(a1);
}

unint64_t sub_1C03EE344()
{
  unint64_t result = qword_1EB861120;
  if (!qword_1EB861120)
  {
    sub_1C1515FDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB861120);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V2()
{
  return &type metadata for A12_V2;
}

uint64_t sub_1C03EE3AC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C03F2988(0, &qword_1EA19B1D8, (uint64_t (*)(void))sub_1C03F2934, (uint64_t)&type metadata for A12_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03F2934();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C03F29F0(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C03EE5F4(uint64_t a1)
{
  unint64_t v2 = sub_1C03F2934();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03EE630(uint64_t a1)
{
  unint64_t v2 = sub_1C03F2934();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C03EE66C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C03F2684(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C03EE6B4(void *a1)
{
  return sub_1C03EE3AC(a1);
}

uint64_t sub_1C03EE6CC()
{
  sub_1C03F2308();
  return sub_1C151798C();
}

uint64_t sub_1C03EE748@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C03F2988(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C03EE804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  id v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A12_V2;
  unint64_t v20 = sub_1C0186530();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  id v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *id v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A12_V2;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v31 = (void *)(v30 + 16);
  swift_beginAccess();
  uint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B81CA0, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    long long v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B81CC8, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V2.Bound();
    id v51 = v53;
    uint64_t v53[3] = v50;
    v51[4] = sub_1C03F29F0(&qword_1EA19B138, (void (*)(uint64_t))type metadata accessor for A12_V2.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C03EEFA8@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  v33[0] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A12_V2.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v43);
  sub_1BFC66384(v11 + 56, (uint64_t)v42);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v43, v14 + 16);
  sub_1BFC773DC(v42, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v41[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v41, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v42);
  sub_1BFC66384(v15 + 56, (uint64_t)v41);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v42, v17 + 16);
  sub_1BFC773DC(v41, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v43, *(void *)(*(void *)(v2 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v43 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v43;
  v39[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C03F22A4, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *MEMORY[0x1E4FAB6D8];
  uint64_t v23 = sub_1C151759C();
  uint64_t v24 = v33[0];
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v33[0], v22, v23);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v24, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v21;
  uint64_t v38 = v2;
  sub_1C03F23C0(0, &qword_1EA19B158, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v43;
  uint64_t v26 = v44;
  uint64_t v27 = v45;
  *(void *)&long long v43 = v21;
  *(void *)&v42[0] = v46;
  MEMORY[0x1F4188790](v25);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v43 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  *uint64_t v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1C03EF554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C03EF624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C03F23C0(0, &qword_1EA19B178, MEMORY[0x1E4FAB6F0]);
  sub_1C03F237C(&qword_1EA19B180, &qword_1EA19B178, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C03EF814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = sub_1C151729C();
  uint64_t v10 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, *MEMORY[0x1E4FAB4E8], v9);
  *uint64_t v8 = v10;
  double v12 = *(void (**)(uint64_t *, void, uint64_t))(v6 + 104);
  v12(v8, *MEMORY[0x1E4FAB940], v5);
  double v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03F23C0(0, &qword_1EA19B188, MEMORY[0x1E4FAB4D0]);
  sub_1C03F237C(&qword_1EA19B190, &qword_1EA19B188, v13);
  sub_1C151738C();
  uint64_t v14 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v14(v8, v5);
  uint64_t v20 = a1;
  v12(v8, *MEMORY[0x1E4FAB9E0], v5);
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  sub_1C151731C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v8, v5);
}

uint64_t sub_1C03EFAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v26 = a2;
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v25 - v7);
  uint64_t v34 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  unsigned int v28 = *MEMORY[0x1E4FABA10];
  uint64_t v27 = *(void (**)(uint64_t *))(v6 + 104);
  v27(v8);
  sub_1C03F244C();
  sub_1C03F2988(0, &qword_1EA19B1A0, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  unint64_t v15 = v14 + v13;
  sub_1C003F3A8();
  uint64_t v17 = (void *)(v15 + *(int *)(v16 + 48));
  uint64_t v18 = *MEMORY[0x1E4FAB7E0];
  uint64_t v19 = sub_1C151789C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v15, v18, v19);
  *uint64_t v17 = 0x6C6F437468676972;
  v17[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4FAB5B0], v11);
  uint64_t v20 = v26;
  uint64_t v33 = v26;
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03F23C0(0, &qword_1EA19B188, MEMORY[0x1E4FAB4D0]);
  sub_1C03F237C(&qword_1EA19B190, &qword_1EA19B188, v21);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v22(v8, v5);
  uint64_t v34 = v29;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 6;
  *uint64_t v8 = v23;
  ((void (*)(uint64_t *, void, uint64_t))v27)(v8, v28, v5);
  uint64_t v31 = v20;
  uint64_t v32 = v30;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v22)(v8, v5);
}

uint64_t sub_1C03EFEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B81D10;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03F23C0(0, &qword_1EA19B188, MEMORY[0x1E4FAB4D0]);
  sub_1C03F237C(&qword_1EA19B190, &qword_1EA19B188, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C03F04A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v103 = a3;
  uint64_t v102 = a2;
  uint64_t v120 = a1;
  uint64_t v108 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v108);
  id v101 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (uint64_t *)((char *)&v83 - v10);
  uint64_t v125 = a1;
  uint64_t v12 = *MEMORY[0x1E4FABA28];
  uint64_t v13 = v8 + 104;
  uint64_t v119 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 104);
  v119((char *)&v83 - v10, v12, v7, v9);
  sub_1C03F244C();
  uint64_t v117 = v14;
  sub_1C03F2988(0, &qword_1EA19B1A0, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v16 = v15;
  uint64_t v118 = v15;
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
  uint64_t v18 = *(void *)(v15 - 8);
  uint64_t v114 = ((v17 + 32) & ~v17) + *(void *)(v18 + 72);
  uint64_t v115 = (v17 + 32) & ~v17;
  uint64_t v19 = v115;
  uint64_t v113 = v17 | 7;
  uint64_t v20 = swift_allocObject();
  long long v111 = xmmword_1C1529AE0;
  *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
  uint64_t v21 = *MEMORY[0x1E4FAB638];
  uint64_t v22 = *(uint64_t (**)(void))(v18 + 104);
  uint64_t v116 = v18 + 104;
  uint64_t v112 = v22;
  ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v20 + v19, v21, v16);
  uint64_t v124 = a2;
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03F23C0(0, &qword_1EA19B188, MEMORY[0x1E4FAB4D0]);
  uint64_t v25 = v24;
  uint64_t v82 = sub_1C03F237C(&qword_1EA19B190, &qword_1EA19B188, v23);
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v26(v11, v7);
  uint64_t v27 = v120;
  uint64_t v125 = v120;
  uint64_t v28 = sub_1C151729C();
  uint64_t v29 = swift_allocBox();
  uint64_t v30 = *(void *)(v28 - 8);
  __n128 v31 = *(void (**)(void))(v30 + 104);
  unsigned int v99 = *MEMORY[0x1E4FAB4E8];
  uint64_t v100 = v28;
  id v98 = (void (*)(uint64_t, void, uint64_t))v31;
  uint64_t v97 = v30 + 104;
  v31(v32);
  *uint64_t v11 = v29;
  unsigned int v96 = *MEMORY[0x1E4FAB940];
  uint64_t v33 = (void (*)(uint64_t *, uint64_t, uint64_t))v119;
  ((void (*)(uint64_t *))v119)(v11);
  uint64_t v107 = v25;
  uint64_t v106 = v82;
  sub_1C151738C();
  uint64_t v109 = v8 + 8;
  id v105 = v26;
  v26(v11, v7);
  uint64_t v125 = v27;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C0386118();
  uint64_t v35 = v34;
  uint64_t v36 = swift_allocBox();
  uint64_t v95 = v35;
  uint64_t v38 = (char *)v37 + *(int *)(v35 + 48);
  *uint64_t v37 = 2;
  uint64_t v39 = *MEMORY[0x1E4FAB8C8];
  uint64_t v40 = sub_1C1517A7C();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(void (**)(char *, void, uint64_t))(v41 + 104);
  unsigned int v123 = v39;
  uint64_t v121 = v42;
  uint64_t v122 = v41 + 104;
  v42(v38, v39, v40);
  *uint64_t v11 = v36;
  unsigned int v43 = *MEMORY[0x1E4FAB960];
  uint64_t v44 = *MEMORY[0x1E4FAB960];
  uint64_t v104 = v7;
  uint64_t v45 = v7;
  uint64_t v46 = v102;
  uint64_t v110 = v13;
  v33(v11, v44, v45);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v111;
  uint64_t v48 = (double *)(v47 + v115);
  uint64_t v49 = v103 + *(int *)(type metadata accessor for A12_V2.Bound() + 24);
  uint64_t v93 = *(int *)(type metadata accessor for GroupLayoutContext() + 32);
  *uint64_t v48 = *(double *)(v49 + v93) * 135.0;
  LODWORD(v103) = *MEMORY[0x1E4FAB670];
  uint64_t result = ((uint64_t (*)(double *))v112)(v48);
  if (*(void *)(v46 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v92 = *(void *)(v46 + 16);
    uint64_t v51 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v52 = v46 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
    uint64_t v86 = *(void *)(v51 + 72);
    uint64_t v87 = v52;
    uint64_t v53 = v52 + 3 * v86;
    uint64_t v102 = v49;
    uint64_t v54 = v108;
    uint64_t v55 = *(int *)(v108 + 20);
    uint64_t v56 = v101;
    unsigned int v91 = v43;
    uint64_t v57 = &v101[v55];
    v121(&v101[v55], v123, v40);
    uint64_t v58 = *(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56);
    uint64_t v89 = v41 + 56;
    id v88 = v58;
    v58(v57, 0, 1, v40);
    uint64_t v59 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v56 = 0;
    *(void *)((char *)v56 + *(int *)(v54 + 24)) = 0;
    *(void *)((char *)v56 + *(int *)(v54 + 28)) = v59;
    double v60 = *MEMORY[0x1E4FB2848];
    double v61 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v62 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v63 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v84 = v59;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v53, (uint64_t)v56, v60, v61, v62, v63);
    sub_1BFF1F104((uint64_t)v56, type metadata accessor for HeadlineViewLayout.Options);
    unint64_t v85 = sub_1BFD5DED4();
    uint64_t v90 = v40;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v64 = v104;
    uint64_t v65 = v105;
    v105(v11, v104);
    uint64_t v66 = v120;
    uint64_t v125 = v120;
    uint64_t v67 = v100;
    uint64_t v68 = swift_allocBox();
    v98(v69, v99, v67);
    *uint64_t v11 = v68;
    uint64_t v70 = v119;
    ((void (*)(uint64_t *, void, uint64_t))v119)(v11, v96, v64);
    sub_1C151738C();
    v65(v11, v64);
    uint64_t v125 = v66;
    swift_getKeyPath();
    uint64_t v71 = v95;
    uint64_t v72 = swift_allocBox();
    uint64_t v74 = (char *)v73 + *(int *)(v71 + 48);
    *unsigned __int8 v73 = 2;
    uint64_t v75 = v90;
    ((void (*)(char *, void))v121)(v74, v123);
    *uint64_t v11 = v72;
    ((void (*)(uint64_t *, void, uint64_t))v70)(v11, v91, v64);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = v111;
    *(double *)(v76 + v115) = *(double *)(v102 + v93) * 135.0;
    uint64_t result = v112();
    if (v92 != 4)
    {
      uint64_t v77 = v87 + 4 * v86;
      uint64_t v78 = v108;
      uint64_t v79 = (char *)v56 + *(int *)(v108 + 20);
      v121(v79, v123, v75);
      v88(v79, 0, 1, v75);
      *uint64_t v56 = 0;
      *(void *)((char *)v56 + *(int *)(v78 + 24)) = 0;
      id v80 = v84;
      *(void *)((char *)v56 + *(int *)(v78 + 28)) = v84;
      id v81 = v80;
      _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v77, (uint64_t)v56, v60, v61, v62, v63);
      sub_1BFF1F104((uint64_t)v56, type metadata accessor for HeadlineViewLayout.Options);
      sub_1C151735C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return ((uint64_t (*)(uint64_t *, uint64_t))v105)(v11, v104);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C03F0F84(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 3;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03F23C0(0, &qword_1EA19B188, MEMORY[0x1E4FAB4D0]);
  sub_1C03F237C(&qword_1EA19B190, &qword_1EA19B188, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 3;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C03F1228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03F23C0(0, &qword_1EA19B188, MEMORY[0x1E4FAB4D0]);
  sub_1C03F237C(&qword_1EA19B190, &qword_1EA19B188, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C03F1804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03F2988(0, &qword_1EA19B170, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03F23C0(0, &qword_1EA19B188, MEMORY[0x1E4FAB4D0]);
  sub_1C03F237C(&qword_1EA19B190, &qword_1EA19B188, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C03F1DE0@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V2.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C03F1ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C03EE804(a1, a2, a3);
}

uint64_t sub_1C03F1EE8()
{
  return sub_1C12BC46C();
}

unint64_t sub_1C03F1EF8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C03F1F28();
  unint64_t result = sub_1C03F1F7C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C03F1F28()
{
  unint64_t result = qword_1EA19B128;
  if (!qword_1EA19B128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B128);
  }
  return result;
}

unint64_t sub_1C03F1F7C()
{
  unint64_t result = qword_1EA19B130;
  if (!qword_1EA19B130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B130);
  }
  return result;
}

uint64_t type metadata accessor for A12_V2.Bound()
{
  uint64_t result = qword_1EA19B140;
  if (!qword_1EA19B140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C03F201C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C03F2030);
}

uint64_t sub_1C03F2030(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C03F20E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C03F20F4);
}

void *sub_1C03F20F4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C03F219C()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C03F224C(uint64_t a1)
{
  uint64_t result = sub_1C03F29F0(&qword_1EA19B150, (void (*)(uint64_t))type metadata accessor for A12_V2.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C03F22A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C03EF554(a1, a2, a3);
}

uint64_t sub_1C03F22AC(uint64_t a1)
{
  return sub_1C03EF624(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C03F22B4()
{
  unint64_t result = qword_1EA19B160;
  if (!qword_1EA19B160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B160);
  }
  return result;
}

unint64_t sub_1C03F2308()
{
  unint64_t result = qword_1EA19B168;
  if (!qword_1EA19B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B168);
  }
  return result;
}

uint64_t sub_1C03F235C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C03F1DE0(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C03F2364()
{
  return swift_deallocObject();
}

uint64_t sub_1C03F2374(uint64_t a1)
{
  return sub_1C03EF814(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C03F237C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C03F23C0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C03F23C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V2.Layout;
    v8[1] = &type metadata for A12_V2.Layout.Attributes;
    v8[2] = sub_1C03F22B4();
    v8[3] = sub_1C03F2308();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C03F2444(uint64_t a1)
{
  return sub_1C03EFAA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C03F244C()
{
  if (!qword_1EA19B198)
  {
    sub_1C03F2988(255, &qword_1EA19B1A0, (uint64_t (*)(void))sub_1C03F22B4, (uint64_t)&type metadata for A12_V2.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B198);
    }
  }
}

uint64_t sub_1C03F24DC(uint64_t a1)
{
  return sub_1C03EFEBC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03F24E4(uint64_t a1)
{
  return sub_1C03F04A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C03F24EC(uint64_t a1)
{
  return sub_1C03F0F84(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03F24F4(uint64_t a1)
{
  return sub_1C03F1228(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C03F24FC(uint64_t a1)
{
  return sub_1C03F1804(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V2.Layout.Attributes()
{
  return &type metadata for A12_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V2.Layout()
{
  return &type metadata for A12_V2.Layout;
}

unint64_t sub_1C03F2528()
{
  unint64_t result = qword_1EA19B1A8;
  if (!qword_1EA19B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1A8);
  }
  return result;
}

unint64_t sub_1C03F2580()
{
  unint64_t result = qword_1EA19B1B0;
  if (!qword_1EA19B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1B0);
  }
  return result;
}

unint64_t sub_1C03F25D8()
{
  unint64_t result = qword_1EA19B1B8;
  if (!qword_1EA19B1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1B8);
  }
  return result;
}

unint64_t sub_1C03F2630()
{
  unint64_t result = qword_1EA19B1C0;
  if (!qword_1EA19B1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1C0);
  }
  return result;
}

uint64_t sub_1C03F2684@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C03F2988(0, &qword_1EA19B1C8, (uint64_t (*)(void))sub_1C03F2934, (uint64_t)&type metadata for A12_V2.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03F2934();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C03F29F0(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C03F2934()
{
  unint64_t result = qword_1EA19B1D0;
  if (!qword_1EA19B1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1D0);
  }
  return result;
}

void sub_1C03F2988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C03F29F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V2.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03F2B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C03F2B40()
{
  unint64_t result = qword_1EA19B1E0;
  if (!qword_1EA19B1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1E0);
  }
  return result;
}

unint64_t sub_1C03F2B98()
{
  unint64_t result = qword_1EA19B1E8;
  if (!qword_1EA19B1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1E8);
  }
  return result;
}

unint64_t sub_1C03F2BF0()
{
  unint64_t result = qword_1EA19B1F0;
  if (!qword_1EA19B1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B1F0);
  }
  return result;
}

id CoverIssueView.moreActionsButton.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton);
}

uint64_t CoverIssueView.downloadButtonDataProvider.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v1);
}

uint64_t sub_1C03F2CA4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRetain();
  sub_1C03F2D8C();
  return swift_unknownObjectRelease();
}

uint64_t CoverIssueView.downloadButtonDataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  sub_1C03F2D8C();
  return swift_unknownObjectRelease();
}

void sub_1C03F2D8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151A4DC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider];
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C18C9C60](v6);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *((void *)v6 + 1);
    swift_getObjectType();
    sub_1C151BE5C();
    sub_1C15184CC();
    swift_release();
    sub_1C03F3100((uint64_t)v5, 0, (uint64_t)v1);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C151BE5C();
    sub_1BFE4597C();
    unint64_t v10 = (void *)sub_1C151F56C();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v1;
    v11[3] = v8;
    v11[4] = v9;
    id v12 = v1;
    swift_unknownObjectRetain();
    sub_1C15184EC();
    swift_release();

    swift_release();
    uint64_t v13 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable;
    swift_beginAccess();
    sub_1C03F5460((uint64_t)&v18, v13);
    swift_endAccess();
    sub_1C151BE6C();
    uint64_t v14 = (void *)sub_1C151F56C();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C15184EC();
    swift_unknownObjectRelease();
    swift_release();

    swift_release();
    uint64_t v15 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable;
    swift_beginAccess();
    sub_1C03F5460((uint64_t)&v18, v15);
  }
  else
  {
    uint64_t v16 = (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable;
    swift_beginAccess();
    if (*(void *)(v16 + 24))
    {
      sub_1BFC66384(v16, (uint64_t)&v18);
      __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
      sub_1C1517E4C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    }
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    swift_beginAccess();
    sub_1C03F5460((uint64_t)&v18, v16);
  }
  swift_endAccess();
  sub_1C03F355C();
}

void sub_1C03F3100(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151A4DC();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (id *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v8);
  int v11 = (*(uint64_t (**)(id *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x1E4FABEF0])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v10, v6);
    swift_release();
    id v12 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);
    swift_getObjectType();
    sub_1C151BE6C();
    sub_1C15184CC();
    swift_release();
    HIDWORD(v13) = HIDWORD(v16);
    *(float *)&double v13 = v16;
    objc_msgSend(v12, sel_setProgress_animated_, 0, v13);
    objc_msgSend(v12, sel_setAlpha_, 1.0);
    objc_msgSend(v12, sel_setHidden_, 0);
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E4FABF00])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v10, v6);

    if ((a2 & 1) == 0)
    {
LABEL_7:
      sub_1C03F355C();
      return;
    }
LABEL_6:
    sub_1C03F33D4();
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E4FABEF8])
  {
    uint64_t v14 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);
    objc_msgSend(v14, sel_setProgress_animated_, 0, 0.0);
    objc_msgSend(v14, sel_setAlpha_, 1.0);
    objc_msgSend(v14, sel_setHidden_, 1);
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E4FABF08])
  {
    if ((a2 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  sub_1C152040C();
  __break(1u);
}

void sub_1C03F33D4()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  id v12 = sub_1C03F5668;
  uint64_t v13 = v2;
  uint64_t v8 = MEMORY[0x1E4F143A8];
  uint64_t v9 = 1107296256;
  unint64_t v10 = sub_1BFC9FC68;
  int v11 = &block_descriptor_24;
  uint64_t v3 = _Block_copy(&v8);
  id v4 = v0;
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  id v12 = sub_1C03F5688;
  uint64_t v13 = v5;
  uint64_t v8 = MEMORY[0x1E4F143A8];
  uint64_t v9 = 1107296256;
  unint64_t v10 = sub_1C0DF5960;
  int v11 = &block_descriptor_13;
  uint64_t v6 = _Block_copy(&v8);
  id v7 = v4;
  swift_release();
  objc_msgSend(v1, sel_animateWithDuration_animations_completion_, v3, v6, 0.2);
  _Block_release(v6);
  _Block_release(v3);
}

void sub_1C03F355C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151A4DC();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (id *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar], sel_isHidden, v4) & 1) == 0)
  {
    uint64_t v16 = v3;
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v8 = self;
    id v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    id v10 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    int v11 = &v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider];
    swift_beginAccess();
    if (!MEMORY[0x1C18C9C60](v11))
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, v15);

      return;
    }
    swift_getObjectType();
    sub_1C151BE5C();
    sub_1C15184CC();
    swift_release();
    uint64_t v12 = v16;
    int v13 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v6, v2);
    if (v13 == *MEMORY[0x1E4FABEF0])
    {
      swift_bridgeObjectRelease();
      (*(void (**)(id *, uint64_t))(v12 + 96))(v6, v2);
      swift_release();
      uint64_t v14 = (void *)sub_1C151E5EC();
    }
    else
    {
      if (v13 == *MEMORY[0x1E4FABF00])
      {
        swift_bridgeObjectRelease();
        (*(void (**)(id *, uint64_t))(v12 + 96))(v6, v2);
      }
      else
      {
        if (v13 != *MEMORY[0x1E4FABEF8])
        {
          if (v13 != *MEMORY[0x1E4FABF08])
          {
            sub_1C152040C();
            __break(1u);
            return;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, 0);
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v14 = (void *)sub_1C151E5EC();
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, v14);

LABEL_15:
    swift_unknownObjectRelease();
    return;
  }
  objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, 0);
}

void sub_1C03F39C0(double *a1, uint64_t a2)
{
  double v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = *(id *)(v4 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);

    *(float *)&double v7 = v2;
    objc_msgSend(v6, sel_setProgress_animated_, 1, v7);
  }
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C18C9C60](v3);
  if (v8)
  {
    id v9 = (void *)v8;
    sub_1C03F355C();
  }
}

void (*CoverIssueView.downloadButtonDataProvider.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C03F3B08;
}

void sub_1C03F3B08(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
    sub_1C03F2D8C();
  }
  free(v3);
}

id CoverIssueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *CoverIssueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton;
  id v11 = objc_allocWithZone((Class)type metadata accessor for CoverViewActionButton());
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton;
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewFollowSwitch()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel;
  *(void *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView;
  uint64_t v16 = (objc_class *)type metadata accessor for IssueCoverView();
  *(void *)&v12[v15] = objc_msgSend(objc_allocWithZone(v16), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView;
  *(void *)&v12[v17] = objc_msgSend(objc_allocWithZone(v16), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel;
  *(void *)&v12[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar;
  *(void *)&v12[v19] = objc_msgSend(objc_allocWithZone((Class)sub_1C151A20C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon;
  *(void *)&v12[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView;
  *(void *)&v12[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v22 = &v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_isEditSelected] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  char v23 = &v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable];
  *(_OWORD *)char v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((void *)v23 + 4) = 0;
  uint64_t v24 = &v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable];
  sub_1BFE6C940(0, (unint64_t *)&qword_1EB884E28, (uint64_t (*)(uint64_t))type metadata accessor for DebugButton, MEMORY[0x1E4FAA880]);
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_debugButton] = sub_1C1517F1C();

  v35.receiver = v12;
  v35.super_class = ObjectType;
  uint64_t v25 = (char *)objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v26 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel];
  uint64_t v27 = v25;
  objc_msgSend(v27, sel_addSubview_, v26);
  uint64_t v28 = *(void **)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView];
  objc_msgSend(v27, sel_addSubview_, v28);
  id v29 = *(void **)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView];
  objc_msgSend(v27, sel_addSubview_, v29);
  objc_msgSend(v27, sel_addSubview_, *(void *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel]);
  objc_msgSend(v27, sel_addSubview_, *(void *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton]);
  objc_msgSend(v27, sel_addSubview_, *(void *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton]);
  objc_msgSend(v27, sel_addSubview_, *(void *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar]);
  objc_msgSend(v27, sel_addSubview_, *(void *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon]);
  objc_msgSend(v27, sel_addSubview_, *(void *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView]);
  objc_msgSend(v26, sel_setLineBreakMode_, 4);
  objc_msgSend(v29, sel_setContentMode_, 4);
  objc_msgSend(v29, sel_setAccessibilityIgnoresInvertColors_, 1);
  objc_msgSend(v28, sel_setContentMode_, 4);
  objc_msgSend(v28, sel_setAccessibilityIgnoresInvertColors_, 1);
  uint64_t v30 = *MEMORY[0x1E4FB25C0];
  __n128 v31 = v27;
  unint64_t v32 = (unint64_t)objc_msgSend(v31, sel_accessibilityTraits);
  if ((v30 & ~v32) != 0) {
    uint64_t v33 = v30;
  }
  else {
    uint64_t v33 = 0;
  }
  objc_msgSend(v31, sel_setAccessibilityTraits_, v33 | v32);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1C1517F0C();
  swift_release();
  swift_release();

  return v31;
}

id sub_1C03F40F0@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *a1 = result;
  return result;
}

void sub_1C03F413C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_addSubview_, v2);
  }
}

id CoverIssueView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t CoverIssueView.accessibilityValue.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1C151A4DC();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (id *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28.receiver = v0;
  v28.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v28, sel_accessibilityValue, v4);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C151E62C();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  uint64_t v12 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider];
  swift_beginAccess();
  if (!MEMORY[0x1C18C9C60](v12))
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
LABEL_13:
    sub_1BFE6C940(0, (unint64_t *)&qword_1EB87A898, (uint64_t (*)(uint64_t))sub_1BFF97D54, MEMORY[0x1E4FBBE00]);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1527210;
    *(void *)(v25 + 32) = v9;
    *(void *)(v25 + 40) = v11;
    *(void *)(v25 + 48) = v20;
    *(void *)(v25 + 56) = v21;
    uint64_t v19 = sub_1C151A2DC();
    goto LABEL_14;
  }
  swift_getObjectType();
  sub_1C151BE5C();
  sub_1C15184CC();
  swift_release();
  int v13 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v13 == *MEMORY[0x1E4FABEF0])
  {
    swift_bridgeObjectRelease();
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_release();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v15 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
    sub_1C151BE6C();
    sub_1C15184CC();
    swift_release();
    double v17 = v27 * 100.0;
    uint64_t v18 = MEMORY[0x1E4FBB460];
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v16 + 64) = v18;
    *(double *)(v16 + 32) = v17;
    uint64_t v19 = sub_1C151E66C();
    swift_unknownObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    return v19;
  }
  if (v13 == *MEMORY[0x1E4FABF00])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

LABEL_12:
    type metadata accessor for Localized();
    uint64_t v22 = swift_getObjCClassFromMetadata();
    id v23 = objc_msgSend(self, sel_bundleForClass_, v22);
    uint64_t v20 = sub_1C1515B8C();
    uint64_t v21 = v24;
    swift_unknownObjectRelease();

    goto LABEL_13;
  }
  if (v13 == *MEMORY[0x1E4FABEF8] || v13 == *MEMORY[0x1E4FABF08]) {
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

void CoverIssueView.accessibilityValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    uint64_t v5 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v6.receiver = v2;
  v6.super_class = ObjectType;
  objc_msgSendSuper2(&v6, sel_setAccessibilityValue_, v5);
}

void (*CoverIssueView.accessibilityValue.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[7] = swift_getObjectType();
  void *v3 = CoverIssueView.accessibilityValue.getter();
  v3[1] = v4;
  return sub_1C03F4998;
}

void sub_1C03F4998(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = 0;
    }
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v2 + 48);
    objc_msgSendSuper2((objc_super *)(v2 + 16), sel_setAccessibilityValue_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      uint64_t v5 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
    }
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v2 + 48);
    objc_msgSendSuper2((objc_super *)(v2 + 32), sel_setAccessibilityValue_, v5);
  }
  free((void *)v2);
}

id CoverIssueView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CoverIssueView.prepareForReuse()()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(v1, sel_setAccessibilityLabel_, 0);
  v14.receiver = v1;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, sel_setAccessibilityValue_, 0);
  objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, 0);
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable];
  swift_beginAccess();
  if (*(void *)(v3 + 24))
  {
    sub_1BFC66384(v3, (uint64_t)&v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    sub_1C1517E4C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  swift_beginAccess();
  sub_1C03F5460((uint64_t)&v11, v3);
  swift_endAccess();
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable];
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    sub_1BFC66384(v4, (uint64_t)&v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    sub_1C1517E4C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  swift_beginAccess();
  sub_1C03F5460((uint64_t)&v11, v3);
  swift_endAccess();
  uint64_t v5 = &v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  sub_1BFC3E5C0(v6);
  sub_1C1517EDC();
  id v7 = (void *)v11;
  if ((void)v11)
  {
    uint64_t v8 = (void *)sub_1C151C84C();
  }
  id v9 = objc_retain(*(id *)(*(void *)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton]
                         + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap));

  id v10 = objc_retain(*(id *)(*(void *)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton]
                          + OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap));
}

void sub_1C03F4E24()
{
}

void sub_1C03F4E48(Swift::Bool a1, Swift::Bool a2)
{
}

Swift::Void __swiftcall CoverIssueView.setMultiSelectionEditing(_:selected:)(Swift::Bool _, Swift::Bool selected)
{
  if (_) {
    double v3 = 0.0;
  }
  else {
    double v3 = 1.0;
  }
  if (_) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  double v5 = 0.6;
  if (selected) {
    double v5 = 1.0;
  }
  BOOL v6 = _;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_isEditSelected) = selected;
  id v7 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView);
  if (_) {
    double v8 = v5;
  }
  else {
    double v8 = 1.0;
  }
  id v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView), sel_layer));
  id v10 = objc_msgSend(v7, sel_traitCollection);
  objc_msgSend(v10, sel_displayScale);
  double v12 = v11;

  objc_msgSend(v9, sel_setRasterizationScale_, v12);
  id v13 = objc_msgSend(v7, sel_layer);
  objc_msgSend(v13, sel_setShouldRasterize_, v6);

  objc_super v14 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView);
  id v15 = objc_msgSend(v14, sel_layer);
  id v16 = objc_msgSend(v14, sel_traitCollection);
  objc_msgSend(v16, sel_displayScale);
  double v18 = v17;

  objc_msgSend(v15, sel_setRasterizationScale_, v18);
  id v19 = objc_msgSend(v14, sel_layer);
  objc_msgSend(v19, sel_setShouldRasterize_, v6);

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel), sel_setAlpha_, v8);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel), sel_setAlpha_, v3);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView), sel_setAlpha_, v4);
  objc_msgSend(v7, sel_setAlpha_, v8);
  objc_msgSend(v14, sel_setAlpha_, v8);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton), sel_setAlpha_, v3);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton), sel_setAlpha_, v3);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon), sel_setAlpha_, v3);
  uint64_t v20 = *(void (**)(uint64_t, Swift::Bool))(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection);
  if (v20)
  {
    swift_retain();
    v20(v2, selected);
    sub_1BFC3E5C0((uint64_t)v20);
  }
}

void sub_1C03F5150()
{
  sub_1C0082508(&qword_1EB874928);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C03F51A8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C03F51E0(uint64_t *a1)
{
  sub_1C03F413C(a1, v1);
}

void _s8NewsFeed14CoverIssueViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewActionButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewFollowSwitch()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView;
  double v5 = (objc_class *)type metadata accessor for IssueCoverView();
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar;
  *(void *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)sub_1C151A20C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon;
  *(void *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView;
  *(void *)&v0[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  double v11 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  *double v11 = 0;
  v11[1] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_isEditSelected] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  double v12 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable];
  *(_OWORD *)double v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0;
  id v13 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable];
  *((void *)v13 + 4) = 0;
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C03F5460(uint64_t a1, uint64_t a2)
{
  sub_1BFE6A7A4(0, &qword_1EB8713D8, (unint64_t *)&qword_1EB8713D0, MEMORY[0x1E4FAA818], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03F54F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C03F5550(uint64_t a1)
{
  sub_1BFE6A7A4(0, &qword_1EB8713D8, (unint64_t *)&qword_1EB8713D0, MEMORY[0x1E4FAA818], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C03F55D8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C03F5618(uint64_t a1)
{
  sub_1C03F3100(a1, 1, *(void *)(v1 + 16));
}

void sub_1C03F5628(double *a1)
{
  sub_1C03F39C0(a1, v1);
}

uint64_t sub_1C03F5630()
{
  return swift_deallocObject();
}

id sub_1C03F5668()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar), sel_setAlpha_, 0.0);
}

id sub_1C03F5688()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);
  objc_msgSend(v1, sel_setHidden_, 1);
  return objc_msgSend(v1, sel_setProgress_animated_, 0, 0.0);
}

uint64_t SportsTaxonomyGraphLeafEntityNode.__allocating_init(tagId:umcId:isHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 56) = MEMORY[0x1E4FBC860];
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(unsigned char *)(result + 48) = a5;
  return result;
}

uint64_t SportsTaxonomyGraphLeafEntityNode.init(tagId:umcId:isHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v5 + 56) = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(unsigned char *)(v5 + 48) = a5;
  return v5;
}

uint64_t SportsTaxonomyGraphLeafEntityNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraphLeafEntityNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SportsTaxonomyGraphLeafEntityNode()
{
  return self;
}

uint64_t method lookup function for SportsTaxonomyGraphLeafEntityNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsTaxonomyGraphLeafEntityNode);
}

uint64_t dispatch thunk of SportsTaxonomyGraphLeafEntityNode.__allocating_init(tagId:umcId:isHidden:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *ImagePersistenceProvider.__allocating_init(imageCache:rendererEnvironment:layoutCollectionProvider:layoutProvider:layoutOptionsProvider:)(long long *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v12 = (void *)swift_allocObject();
  sub_1BFC773DC(a1, (uint64_t)(v12 + 2));
  sub_1BFC773DC(a2, (uint64_t)(v12 + 7));
  v12[12] = a3;
  v12[13] = a4;
  v12[14] = a5;
  v12[15] = a6;
  return v12;
}

Swift::Void __swiftcall ImagePersistenceProvider.persist()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = v2[11];
  uint64_t v120 = *(void (***)(char *, uint64_t))(v3 - 8);
  ((void (*)())MEMORY[0x1F4188790])();
  id v126 = (char *)&v92 - v4;
  uint64_t v5 = v2[13];
  uint64_t v115 = sub_1C151B1CC();
  uint64_t v102 = *(void (***)(char *, uint64_t))(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v125 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v97 = (char *)&v92 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v104 = (char *)&v92 - v10;
  uint64_t v11 = v2[10];
  unint64_t v12 = v2[12];
  uint64_t v143 = v11;
  uint64_t v144 = v3;
  unint64_t v145 = v12;
  uint64_t v146 = v5;
  uint64_t v108 = sub_1C151B67C();
  id v101 = *(void (***)(uint64_t *, char *, uint64_t))(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v107 = (char *)&v92 - v13;
  uint64_t v100 = *(void (***)(char *, uint64_t))(v11 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v106 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v114 = (char *)&v92 - v17;
  uint64_t v116 = sub_1C151677C();
  unsigned int v99 = *(void (***)(char *, char *, uint64_t))(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v103 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v129 = (char *)&v92 - v20;
  sub_1C03F7048();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v134 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1C151C1EC();
  id v98 = *(void (***)(char *, uint64_t))(v131 - 8);
  MEMORY[0x1F4188790](v131);
  uint64_t v118 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v124 = (char *)&v92 - v25;
  uint64_t v117 = v11;
  uint64_t v143 = v11;
  uint64_t v144 = v3;
  uint64_t v128 = v3;
  unint64_t v137 = v12;
  unint64_t v145 = v12;
  uint64_t v146 = v5;
  uint64_t v139 = v5;
  uint64_t v123 = sub_1C151A79C();
  uint64_t v105 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v133 = (char *)&v92 - v26;
  uint64_t v27 = sub_1C151BCEC();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1C151A9BC();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  unint64_t v34 = (char *)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v1 + 7, v1[10]);
  sub_1C151B9EC();
  uint64_t v136 = v1;
  sub_1C151C38C();
  sub_1C151A9AC();
  sub_1C151A97C();
  sub_1C151A96C();
  unint64_t v35 = sub_1C151BCCC();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (v35)
  {
    uint64_t v95 = v34;
    uint64_t v96 = v32;
    uint64_t v138 = v31;
    *(void *)&long long v140 = v136[13];
    uint64_t v143 = v117;
    uint64_t v144 = v128;
    unint64_t v145 = v137;
    uint64_t v146 = v139;
    sub_1C151B86C();
    swift_getWitnessTable();
    uint64_t v36 = v133;
    sub_1C151BE7C();
    unint64_t v135 = v35;
    uint64_t v132 = v35 & 0xFFFFFFFFFFFFFF8;
    if (v35 >> 62) {
      goto LABEL_46;
    }
    uint64_t v139 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
    uint64_t v37 = v115;
    uint64_t v38 = v116;
    uint64_t v39 = v123;
    uint64_t v40 = v138;
    if (v139)
    {
      unint64_t v41 = 0;
      unint64_t v137 = v135 & 0xC000000000000001;
      unint64_t v130 = v135 + 32;
      id v127 = (void (**)(char *, uint64_t))(v99 + 1);
      uint64_t v122 = v102 + 1;
      uint64_t v121 = (void (**)(uint64_t *, char *, uint64_t))(v120 + 2);
      ++v120;
      uint64_t v119 = (unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 6);
      uint64_t v113 = (void (**)(char *, uint64_t, uint64_t))(v98 + 4);
      uint64_t v112 = (void (**)(char *, char *, uint64_t))(v98 + 2);
      long long v111 = (uint64_t (**)(char *, uint64_t))(v98 + 11);
      int v110 = *MEMORY[0x1E4FAD298];
      int v94 = *MEMORY[0x1E4FAD290];
      uint64_t v109 = v98 + 1;
      v98 += 12;
      v99 += 4;
      uint64_t v93 = (void (**)(char *, char *, uint64_t))(v102 + 2);
      uint64_t v102 = (void (**)(char *, uint64_t))(v101 + 1);
      id v101 = (void (**)(uint64_t *, char *, uint64_t))(v100 + 2);
      ++v100;
      uint64_t v42 = &selRef_setCenter_;
      while (1)
      {
        if (v137)
        {
          id v43 = (id)MEMORY[0x1C18C7CB0](v41, v135);
        }
        else
        {
          if (v41 >= *(void *)(v132 + 16)) {
            goto LABEL_45;
          }
          id v43 = *(id *)(v130 + 8 * v41);
        }
        uint64_t v44 = v43;
        if (__OFADD__(v41++, 1))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          swift_bridgeObjectRetain();
          uint64_t v139 = sub_1C15204BC();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        id v46 = [v43 v42[127]];
        if (!v46)
        {
          id v49 = objc_msgSend(v44, sel_indexPath);
          uint64_t v50 = v129;
          sub_1C151672C();

          uint64_t v51 = v125;
          sub_1C151A7AC();
          (*v127)(v50, v38);
          uint64_t v52 = v42;
          uint64_t v53 = v38;
          uint64_t v54 = v126;
          sub_1C151B1BC();
          (*v122)(v51, v37);
          uint64_t v55 = v37;
          uint64_t v56 = v39;
          uint64_t v57 = v128;
          uint64_t v146 = v128;
          uint64_t v58 = __swift_allocate_boxed_opaque_existential_0(&v143);
          (*v121)(v58, v54, v57);
          sub_1C03F6C24((uint64_t)&v143);

          uint64_t v59 = v54;
          uint64_t v38 = v53;
          uint64_t v42 = v52;
          uint64_t v60 = v57;
          uint64_t v39 = v56;
          uint64_t v37 = v55;
          (*v120)(v59, v60);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
          goto LABEL_36;
        }
        if (v46 != (id)1) {
          break;
        }
        sub_1C1519E5C();
        uint64_t v47 = (uint64_t)v134;
        uint64_t v48 = v131;
        if ((*v119)(v134, 1, v131) == 1)
        {

          sub_1C03F7138(v47, (uint64_t (*)(void))sub_1C03F7048);
          goto LABEL_35;
        }
        double v61 = v124;
        (*v113)(v124, v47, v48);
        double v62 = v118;
        (*v112)(v118, v61, v48);
        int v63 = (*v111)(v62, v48);
        if (v63 != v110)
        {
          uint64_t v78 = v48;
          uint64_t v39 = v123;
          if (v63 == v94)
          {
            uint64_t v79 = v118;
            (*v98)(v118, v48);
            sub_1C03F70A0();
            id v81 = v103;
            (*v99)(v103, &v79[*(int *)(v80 + 48)], v38);
            uint64_t v82 = v104;
            sub_1C151A7AC();
            (*v93)(v97, v82, v37);
            sub_1BFC845BC(0, &qword_1EB8715F8);
            if (swift_dynamicCast())
            {
              sub_1BFC773DC(&v140, (uint64_t)&v143);
              __swift_project_boxed_opaque_existential_1(&v143, v146);
              uint64_t v83 = sub_1C151C76C();
              if (v83)
              {
                uint64_t v84 = *(void *)(v83 + 16);
                if (v84)
                {
                  unint64_t v85 = (void *)(v83 + 32);
                  do
                  {
                    uint64_t v86 = v85[3];
                    uint64_t v87 = __swift_project_boxed_opaque_existential_1(v85, v86);
                    *((void *)&v141 + 1) = v86;
                    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v140);
                    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v86 - 8) + 16))(boxed_opaque_existential_0, v87, v86);
                    sub_1C03F6C24((uint64_t)&v140);
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
                    v85 += 5;
                    --v84;
                  }
                  while (v84);
                }
                swift_bridgeObjectRelease();

                uint64_t v37 = v115;
                (*v122)(v104, v115);
                uint64_t v38 = v116;
                (*v127)(v103, v116);
              }
              else
              {

                uint64_t v37 = v115;
                (*v122)(v104, v115);
                (*v127)(v103, v38);
              }
              (*v109)(v124, v131);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
              goto LABEL_41;
            }
            uint64_t v142 = 0;
            long long v140 = 0u;
            long long v141 = 0u;

            (*v122)(v82, v37);
            (*v127)(v81, v38);
            (*v109)(v124, v78);
            sub_1BFE4D118((uint64_t)&v140, &qword_1EB85C938, &qword_1EB8715F8);
          }
          else
          {
            uint64_t v89 = v37;
            uint64_t v90 = v123;
            unsigned int v91 = *v109;
            (*v109)(v124, v48);

            v91(v118, v48);
            uint64_t v39 = v90;
            uint64_t v37 = v89;
            uint64_t v42 = &selRef_setCenter_;
          }
LABEL_35:
          uint64_t v36 = v133;
LABEL_36:
          uint64_t v40 = v138;
          goto LABEL_37;
        }
        id v64 = objc_msgSend(v44, sel_indexPath);
        uint64_t v65 = v129;
        sub_1C151672C();

        sub_1C151676C();
        (*v127)(v65, v38);
        uint64_t v66 = v107;
        sub_1C151A7BC();
        uint64_t v67 = v114;
        uint64_t v68 = v108;
        sub_1C151B63C();
        (*v102)(v66, v68);
        uint64_t v69 = v117;
        uint64_t v146 = v117;
        uint64_t v70 = __swift_allocate_boxed_opaque_existential_0(&v143);
        uint64_t v71 = *v101;
        (*v101)(v70, v67, v69);
        sub_1C03F6C24((uint64_t)&v143);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
        v71((uint64_t *)v106, v67, v69);
        sub_1BFC845BC(0, &qword_1EB8715F8);
        if (swift_dynamicCast())
        {
          sub_1BFC773DC(&v140, (uint64_t)&v143);
          __swift_project_boxed_opaque_existential_1(&v143, v146);
          uint64_t v72 = sub_1C151C76C();
          uint64_t v39 = v123;
          if (v72)
          {
            uint64_t v73 = *(void *)(v72 + 16);
            if (v73)
            {
              uint64_t v74 = (void *)(v72 + 32);
              do
              {
                uint64_t v75 = v74[3];
                uint64_t v76 = __swift_project_boxed_opaque_existential_1(v74, v75);
                *((void *)&v141 + 1) = v75;
                uint64_t v77 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v140);
                (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v77, v76, v75);
                sub_1C03F6C24((uint64_t)&v140);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
                v74 += 5;
                --v73;
              }
              while (v73);
            }
            swift_bridgeObjectRelease();
          }

          (*v100)(v114, v117);
          (*v109)(v124, v131);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
          uint64_t v37 = v115;
          uint64_t v38 = v116;
LABEL_41:
          uint64_t v36 = v133;
          uint64_t v40 = v138;
          uint64_t v42 = &selRef_setCenter_;
          goto LABEL_37;
        }
        uint64_t v142 = 0;
        long long v140 = 0u;
        long long v141 = 0u;

        (*v100)(v67, v69);
        (*v109)(v124, v131);
        sub_1BFE4D118((uint64_t)&v140, &qword_1EB85C938, &qword_1EB8715F8);
        uint64_t v38 = v116;
        uint64_t v36 = v133;
        uint64_t v40 = v138;
        uint64_t v39 = v123;
LABEL_37:
        if (v41 == v139) {
          goto LABEL_42;
        }
      }

      goto LABEL_36;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v36, v39);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  }
}

uint64_t sub_1C03F6C24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  uint64_t v29 = sub_1C151B62C();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for ImageRequestOptions();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C151C3FC();
  sub_1C151B52C();
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v15 = v8;
  uint64_t v16 = v29;
  v14(v15, v29);
  sub_1C151C3FC();
  uint64_t v17 = sub_1C151B57C();
  v14(v5, v16);
  uint64_t v18 = v31;
  uint64_t v19 = &v31[*(int *)(v10 + 32)];
  uint64_t v20 = sub_1C151A01C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *uint64_t v18 = v13;
  v18[1] = v17;
  sub_1BFF6A008(v30, (uint64_t)v35);
  sub_1BFC845BC(0, &qword_1EB878A38);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v32, (uint64_t)v36);
    uint64_t v21 = v37;
    uint64_t v22 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    uint64_t v23 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 8))(v18, v21, v22);
    if (v23)
    {
      uint64_t v30 = v23;
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        uint64_t v25 = v30 + 32;
        do
        {
          sub_1BFC66384(v25, (uint64_t)&v32);
          __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
          __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
          sub_1C151BD8C();
          sub_1C151A4FC();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
          v25 += 40;
          --v24;
        }
        while (v24);
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = (uint64_t)v31;
    }
    else
    {
      uint64_t v26 = (uint64_t)v18;
    }
    sub_1C03F7138(v26, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  else
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    sub_1C03F7138((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
    return sub_1BFE4D118((uint64_t)&v32, &qword_1EB878A40, &qword_1EB878A38);
  }
}

uint64_t ImagePersistenceProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ImagePersistenceProvider.__deallocating_deinit()
{
  ImagePersistenceProvider.deinit();
  return swift_deallocClassInstance();
}

void sub_1C03F7048()
{
  if (!qword_1EB8715D0)
  {
    sub_1C151C1EC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8715D0);
    }
  }
}

void sub_1C03F70A0()
{
  if (!qword_1EB85DF78)
  {
    sub_1C151677C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB85DF78);
    }
  }
}

uint64_t method lookup function for ImagePersistenceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImagePersistenceProvider);
}

uint64_t dispatch thunk of ImagePersistenceProvider.__allocating_init(imageCache:rendererEnvironment:layoutCollectionProvider:layoutProvider:layoutOptionsProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1C03F7138(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatLocalization.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLocalization.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatLocalization.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatLocalization.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLocalization.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatLocalization.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatLocalization.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLocalization.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatLocalization.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatLocalization.strings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed18FormatLocalizationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (!v7 || (v2 != v8 || v4 != v7) && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v6)
  {
    if (v9 && (v3 == v10 && v6 == v9 || (sub_1C1520A9C() & 1) != 0)) {
      goto LABEL_16;
    }
    return 0;
  }
  if (v9) {
    return 0;
  }
LABEL_16:
  return sub_1C00EBD00(v5, v11);
}

unint64_t sub_1C03F746C(uint64_t a1)
{
  unint64_t result = sub_1C00F69AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C03F7494(void *a1)
{
  a1[1] = sub_1C007B2FC();
  a1[2] = sub_1C007B350();
  unint64_t result = sub_1C03F74CC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C03F74CC()
{
  unint64_t result = qword_1EB891630;
  if (!qword_1EB891630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891630);
  }
  return result;
}

uint64_t sub_1C03F7520@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03F752C(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C03F7570@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03F757C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C03F75C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C03F75CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatLocalization()
{
  return &type metadata for FormatLocalization;
}

uint64_t PuzzleComponentMenuEvent.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

NewsFeed::PuzzleComponentMenuEvent __swiftcall PuzzleComponentMenuEvent.init(identifier:)(NewsFeed::PuzzleComponentMenuEvent identifier)
{
  *uint64_t v1 = identifier;
  return identifier;
}

unint64_t PuzzleComponentMenuEvent.scriptId.getter()
{
  return 0xD000000000000011;
}

unint64_t PuzzleComponentMenuEvent.scriptEventName.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t PuzzleComponentMenuEvent.scriptEventDetail.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1BFED9C78();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  return sub_1BFF99224(inited);
}

unint64_t sub_1C03F770C()
{
  return 0xD000000000000011;
}

unint64_t sub_1C03F7728()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C03F7744()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1BFED9C78();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  return sub_1BFF99224(inited);
}

ValueMetadata *type metadata accessor for PuzzleComponentMenuEvent()
{
  return &type metadata for PuzzleComponentMenuEvent;
}

void *sub_1C03F77D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    uint64_t v10 = a2[12];
    uint64_t v11 = *(int *)(a3 + 48);
    __dst = (void *)(a1 + v11);
    uint64_t v12 = (char *)a2 + v11;
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    uint64_t v13 = sub_1C151928C();
    uint64_t v18 = *(void *)(v13 - 8);
    uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v12, 1, v14))
    {
      sub_1BFEC0CE8(0);
      memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v12, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v14);
    }
  }
  return v3;
}

uint64_t sub_1C03F79C4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_1C151928C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1C03F7AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(int *)(a3 + 48);
  __dst = (void *)(a1 + v10);
  uint64_t v11 = (const void *)(a2 + v10);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v12 = sub_1C151928C();
  uint64_t v16 = *(void *)(v12 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v11, 1, v13))
  {
    sub_1BFEC0CE8(0);
    memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(__dst, v11, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_1C03F7C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFEC0CE8(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C03F7EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v4 = *(int *)(a3 + 48);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BFEC0CE8(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1C03F7FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 48);
  int v12 = (void *)(a1 + v11);
  int v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1C151928C();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BFEC0CE8(0);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1C03F81E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C03F81F4);
}

uint64_t sub_1C03F81F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFEC0CE8(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C03F82A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C03F82B8);
}

uint64_t sub_1C03F82B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFEC0CE8(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DebugNewsroomThemeData()
{
  uint64_t result = qword_1EA19B270;
  if (!qword_1EA19B270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C03F83AC()
{
  sub_1BFEC0CE8(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1C03F8468(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465766968637261;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0x4A6567616B636170;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x655674736574616CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C03F858C()
{
  return sub_1C03F8468(*v0);
}

uint64_t sub_1C03F8594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03F9618(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C03F85BC(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1C03F85C8(uint64_t a1)
{
  unint64_t v2 = sub_1C03F8FC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C03F8604(uint64_t a1)
{
  unint64_t v2 = sub_1C03F8FC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03F8640(void *a1)
{
  uint64_t v3 = v1;
  sub_1C03F9258(0, &qword_1EA19B2B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C03F8FC8();
  sub_1C1520F0C();
  LOBYTE(v12) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1C152075C();
    LOBYTE(v12) = 2;
    sub_1C152074C();
    LOBYTE(v12) = 3;
    sub_1C152074C();
    LOBYTE(v12) = 4;
    sub_1C152074C();
    LOBYTE(v12) = 5;
    sub_1C152074C();
    uint64_t v12 = *(void *)(v3 + 88);
    HIBYTE(v11) = 6;
    sub_1C03F901C();
    sub_1C03F92BC(&qword_1EA19B2B8);
    sub_1C152078C();
    uint64_t v12 = *(void *)(v3 + 96);
    HIBYTE(v11) = 7;
    sub_1C03F9080();
    sub_1C03F931C();
    sub_1C152078C();
    type metadata accessor for DebugNewsroomThemeData();
    LOBYTE(v12) = 8;
    sub_1C151928C();
    sub_1C03F93C4(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C03F8988@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03F9258(0, &qword_1EA19B288, MEMORY[0x1E4FBBDC0]);
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = type metadata accessor for DebugNewsroomThemeData();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[16] = 2;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  *(_OWORD *)(v11 + 88) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  uint64_t v13 = (uint64_t)&v11[*(int *)(v12 + 56)];
  uint64_t v14 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = a1[3];
  unint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C03F8FC8();
  uint64_t v34 = v8;
  uint64_t v16 = v36;
  sub_1C1520EBC();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t (*)(void))sub_1BFEC0CE8;
    uint64_t v29 = v13;
  }
  else
  {
    uint64_t v36 = v14;
    uint64_t v17 = v32;
    uint64_t v18 = v33;
    LOBYTE(v38) = 0;
    *(void *)uint64_t v11 = sub_1C152069C();
    *((void *)v11 + 1) = v20;
    LOBYTE(v38) = 1;
    v11[16] = sub_1C152061C();
    LOBYTE(v38) = 2;
    uint64_t v21 = v17;
    *((void *)v11 + 3) = sub_1C152060C();
    *((void *)v11 + 4) = v22;
    LOBYTE(v38) = 3;
    uint64_t v23 = sub_1C152060C();
    uint64_t v24 = (uint64_t)v35;
    *((void *)v11 + 5) = v23;
    *((void *)v11 + 6) = v25;
    LOBYTE(v38) = 4;
    *((void *)v11 + 7) = sub_1C152060C();
    *((void *)v11 + 8) = v26;
    LOBYTE(v38) = 5;
    *((void *)v11 + 9) = sub_1C152060C();
    *((void *)v11 + 10) = v27;
    sub_1C03F901C();
    char v37 = 6;
    sub_1C03F92BC((unint64_t *)&qword_1EA19B298);
    sub_1C152065C();
    *((void *)v11 + 11) = v38;
    sub_1C03F9080();
    char v37 = 7;
    sub_1C03F90E8();
    sub_1C152065C();
    *((void *)v11 + 12) = v38;
    LOBYTE(v38) = 8;
    sub_1C03F93C4(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v34, v18);
    sub_1C03F9190((uint64_t)v5, v13);
    sub_1C03F91F4((uint64_t)v11, v31);
    __swift_destroy_boxed_opaque_existential_1(v24);
    uint64_t v28 = (uint64_t (*)(void))type metadata accessor for DebugNewsroomThemeData;
    uint64_t v29 = (uint64_t)v11;
  }
  return sub_1BFEC0868(v29, v28);
}

unint64_t sub_1C03F8EF8()
{
  return 0xD000000000000016;
}

uint64_t sub_1C03F8F14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C03F8988(a1, a2);
}

uint64_t sub_1C03F8F2C(void *a1)
{
  return sub_1C03F8640(a1);
}

uint64_t sub_1C03F8F44(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C03F93C4(&qword_1EA19B280, (void (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData);
  uint64_t result = sub_1C03F93C4(&qword_1EA199ED0, (void (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C03F8FC8()
{
  unint64_t result = qword_1EA19B290;
  if (!qword_1EA19B290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B290);
  }
  return result;
}

void sub_1C03F901C()
{
  if (!qword_1EB8701F0)
  {
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8701F0);
    }
  }
}

void sub_1C03F9080()
{
  if (!qword_1EA19B2A0)
  {
    sub_1C1515FDC();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B2A0);
    }
  }
}

unint64_t sub_1C03F90E8()
{
  unint64_t result = qword_1EA19B2A8;
  if (!qword_1EA19B2A8)
  {
    sub_1C03F9080();
    sub_1C03F93C4((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B2A8);
  }
  return result;
}

uint64_t sub_1C03F9190(uint64_t a1, uint64_t a2)
{
  sub_1BFEC0CE8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03F91F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugNewsroomThemeData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C03F9258(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C03F8FC8();
    unint64_t v7 = a3(a1, &type metadata for DebugNewsroomThemeData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C03F92BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C03F901C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C03F931C()
{
  unint64_t result = qword_1EA19B2C0;
  if (!qword_1EA19B2C0)
  {
    sub_1C03F9080();
    sub_1C03F93C4((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B2C0);
  }
  return result;
}

uint64_t sub_1C03F93C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugNewsroomThemeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03F94D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugNewsroomThemeData.CodingKeys()
{
  return &type metadata for DebugNewsroomThemeData.CodingKeys;
}

unint64_t sub_1C03F9514()
{
  unint64_t result = qword_1EA19B2C8;
  if (!qword_1EA19B2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B2C8);
  }
  return result;
}

unint64_t sub_1C03F956C()
{
  unint64_t result = qword_1EA19B2D0;
  if (!qword_1EA19B2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B2D0);
  }
  return result;
}

unint64_t sub_1C03F95C4()
{
  unint64_t result = qword_1EA19B2D8;
  if (!qword_1EA19B2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B2D8);
  }
  return result;
}

uint64_t sub_1C03F9618(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xEB000000006E6F73 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xED000064496E6F73 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xEE006C72556E6F73 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C160EE50 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C160EE70 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x655674736574616CLL && a2 == 0xED00006E6F697372)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

void *FeedItemSorter.__allocating_init(sorter:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  unsigned int v4 = sub_1C03FA594(a1, a2);
  swift_release();
  return v4;
}

void *FeedItemSorter.init(sorter:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = sub_1C03FA594(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1C03F9A88(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = v1[2];
  uint64_t v5 = *(void *)(v3 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = v5;
  swift_getTupleTypeMetadata2();
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2();
  if (MEMORY[0x1C18C6870](v4, FunctionTypeMetadata2))
  {
    uint64_t v7 = 0;
    uint64_t v25 = FunctionTypeMetadata2;
    while (1)
    {
      char v8 = sub_1C151ECDC();
      sub_1C151EC7C();
      if ((v8 & 1) == 0) {
        break;
      }
      BOOL v9 = __OFADD__(v7, 1);
      long long v28 = *(_OWORD *)(v4 + 16 * v7 + 32);
      uint64_t result = swift_retain();
      if (v9) {
        goto LABEL_11;
      }
      uint64_t v11 = swift_allocObject();
      uint64_t v27 = v7 + 1;
      uint64_t v12 = v26;
      *(void *)(v11 + 16) = v26;
      *(_OWORD *)(v11 + 24) = v28;
      uint64_t v29 = a1;
      uint64_t v13 = sub_1C151ED5C();
      uint64_t WitnessTable = swift_getWitnessTable();
      MEMORY[0x1C18C64C0](&v30, v13, WitnessTable);
      uint64_t v15 = swift_bridgeObjectRelease();
      uint64_t v29 = v30;
      MEMORY[0x1F4188790](v15);
      v23[0] = v12;
      v23[1] = sub_1C03FA818;
      uint64_t v24 = v11;
      sub_1C152048C();
      swift_retain();
      swift_getWitnessTable();
      uint64_t v16 = sub_1C151E9FC();
      uint64_t v17 = v25;
      swift_release();
      uint64_t v18 = swift_bridgeObjectRelease();
      uint64_t v30 = v16;
      MEMORY[0x1F4188790](v18);
      uint64_t v24 = v12;
      swift_getTupleTypeMetadata2();
      uint64_t v19 = sub_1C151ED5C();
      uint64_t v20 = swift_getWitnessTable();
      a1 = sub_1C035E7C8((void (*)(char *, char *))sub_1C03FA8A8, (uint64_t)v23, v19, v12, MEMORY[0x1E4FBC248], v20, MEMORY[0x1E4FBC278], v21);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v22 = MEMORY[0x1C18C6870](v4, v17);
      ++v7;
      if (v27 == v22) {
        goto LABEL_9;
      }
    }
    uint64_t result = sub_1C152016C();
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return a1;
  }
  return result;
}

uint64_t sub_1C03F9E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, char *), uint64_t a6, uint64_t a7)
{
  void (*v25)(uint64_t *__return_ptr, char *, char *);
  uint64_t v26;

  v24[1] = a6;
  uint64_t v25 = a5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v24 - v18;
  *(void *)((char *)v24 - v18) = a1;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a7 - 8) + 16);
  v21((char *)v24 + *(int *)(v20 + 48) - v18, a2, a7, v17);
  *(void *)uint64_t v15 = a3;
  ((void (*)(char *, uint64_t, uint64_t))v21)(&v15[*(int *)(TupleTypeMetadata2 + 48)], a4, a7);
  v25(&v26, v19, v15);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v15, TupleTypeMetadata2);
  v22(v19, TupleTypeMetadata2);
  return v26;
}

uint64_t sub_1C03F9FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v7 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v10 = *(int *)(v9 + 56);
  uint64_t v11 = (char *)&v15 + v10 - v8;
  uint64_t v12 = a1 + v10;
  uint64_t v13 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v11, v12, a2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a3, v11, a2);
}

uint64_t FeedItemSorter.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t + infix<A>(_:_:)(uint64_t a1)
{
  sub_1C03FA6A8(a1);
  return swift_retain();
}

uint64_t sub_1C03FA104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (id *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (id *)((char *)&v53 - v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v53 - v14;
  sub_1BFF9254C(0, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (uint64_t *)((char *)&v53 - v21);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v53 + *(int *)(v17 + 56) - v24;
  uint64_t v54 = a1;
  *(uint64_t *)((char *)&v53 - v24) = a1;
  uint64_t v26 = (char *)&v53 - v24;
  sub_1BFF96680(a2, (uint64_t)v25);
  uint64_t v27 = (uint64_t)v22 + *(int *)(v17 + 56);
  uint64_t v55 = a3;
  *uint64_t v22 = a3;
  sub_1BFF96680(v56, v27);
  uint64_t v28 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_1BFF96680((uint64_t)v25, v28);
  sub_1C03FA8C8(v28, (uint64_t)v15);
  uint64_t v29 = (uint64_t)&v19[*(int *)(v17 + 56)];
  uint64_t v30 = (uint64_t)v15;
  uint64_t v31 = (uint64_t)v12;
  sub_1BFF96680(v27, v29);
  sub_1C03FA8C8(v29, (uint64_t)v12);
  LODWORD(v29) = objc_msgSend(*(id *)(v30 + 40), sel_hasThumbnail);
  sub_1BFF96680((uint64_t)v12, (uint64_t)v9);
  if (!v29)
  {
    sub_1BFF2F7F4((uint64_t)v9);
    goto LABEL_6;
  }
  unsigned __int8 v32 = objc_msgSend(v9[5], sel_hasThumbnail);
  sub_1BFF2F7F4((uint64_t)v9);
  if ((v32 & 1) == 0)
  {
LABEL_6:
    unsigned int v36 = objc_msgSend(v12[5], sel_hasThumbnail);
    sub_1BFF2F7F4((uint64_t)v12);
    sub_1BFF2F7F4(v30);
    sub_1BFF924F0((uint64_t)v22, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    sub_1BFF924F0((uint64_t)v26, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    return v36 ^ 1;
  }
  uint64_t v33 = *(void **)(v30 + 40);
  id v34 = objc_msgSend(v33, sel_title);
  if (v34)
  {
    unint64_t v35 = v34;
    sub_1C151E62C();
  }
  id v38 = objc_msgSend(v33, sel_shortExcerpt);
  if (v38)
  {
    uint64_t v39 = v38;
    sub_1C151E62C();
  }
  uint64_t v40 = sub_1C151E7AC();
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_1C151E7AC();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v42 = v40 + v41;
  if (__OFADD__(v40, v41))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v43 = *(void **)(v31 + 40);
  id v44 = objc_msgSend(v43, sel_title);
  if (v44)
  {
    uint64_t v45 = v44;
    sub_1C151E62C();
  }
  id v46 = objc_msgSend(v43, sel_shortExcerpt);
  if (v46)
  {
    uint64_t v47 = v46;
    sub_1C151E62C();
  }
  uint64_t v48 = sub_1C151E7AC();
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_1C151E7AC();
  uint64_t result = swift_bridgeObjectRelease();
  BOOL v50 = __OFADD__(v48, v49);
  uint64_t v51 = v48 + v49;
  if (v50) {
    goto LABEL_20;
  }
  sub_1BFF2F7F4(v31);
  sub_1BFF2F7F4(v30);
  sub_1BFF924F0((uint64_t)v22, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t result = sub_1BFF924F0((uint64_t)v26, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v52 = v42 - v51;
  if (__OFSUB__(v42, v51))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (v52) {
    return v52 > 0;
  }
  else {
    return v54 < v55;
  }
}

void *sub_1C03FA594(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(*v3 + 80);
  swift_getTupleTypeMetadata2();
  swift_getFunctionTypeMetadata2();
  v3[2] = sub_1C151E30C();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  swift_beginAccess();
  sub_1C151ED5C();
  swift_retain();
  sub_1C151ED1C();
  swift_endAccess();
  return v3;
}

uint64_t sub_1C03FA6A8(uint64_t a1)
{
  return a1;
}

uint64_t method lookup function for FeedItemSorter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedItemSorter);
}

uint64_t dispatch thunk of FeedItemSorter.__allocating_init(sorter:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C03FA7E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C03FA818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C03F9E04(a1, a2, a3, a4, *(void (**)(uint64_t *__return_ptr, char *, char *))(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 16));
}

uint64_t sub_1C03FA824(char *a1, char *a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, char *, void, char *))(v2 + 24);
  uint64_t v6 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(v6, &a1[*(int *)(TupleTypeMetadata2 + 48)], *(void *)a2, &a2[*(int *)(TupleTypeMetadata2 + 48)]) & 1;
}

uint64_t sub_1C03FA8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C03F9FB0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C03FA8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03FA92C@<X0>(char *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, char *, void, char *))(v3 + 24);
  uint64_t v8 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = v7(v8, &a1[*(int *)(TupleTypeMetadata2 + 48)], *(void *)a2, &a2[*(int *)(TupleTypeMetadata2 + 48)]);
  *a3 = result & 1;
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatConsoleDisplay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03FAA7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatConsoleDisplay()
{
  return &type metadata for DebugFormatConsoleDisplay;
}

unint64_t sub_1C03FAAB8()
{
  unint64_t result = qword_1EA19B2E0;
  if (!qword_1EA19B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B2E0);
  }
  return result;
}

uint64_t sub_1C03FAB0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148095C(*a1, *a2);
}

uint64_t sub_1C03FAB18()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03FABC0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C03FAC54()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C03FACF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C03FAE90();
  *a1 = result;
  return result;
}

void sub_1C03FAD28(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000064;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6C616974726170;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6465646E61707865;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x657370616C6C6F63;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C03FAD8C(uint64_t a1)
{
  unint64_t v2 = sub_1C03FAEDC();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C03FADE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C03FAEDC();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C03FAE3C(uint64_t a1)
{
  unint64_t v2 = sub_1C03FAEDC();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C03FAE90()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C03FAEDC()
{
  unint64_t result = qword_1EA19B2E8;
  if (!qword_1EA19B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B2E8);
  }
  return result;
}

unint64_t FeedJournalEntry.slots.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1BFE60260(v2);
}

uint64_t sub_1C03FAF3C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_1BFE9DD8C(0, &qword_1EB86BA50, (uint64_t)&type metadata for FeedJournalGroup, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  swift_retain();
  id v9 = a2;
  sub_1C0CE8B90(a1, a2, (uint64_t)v18, a4);
  long long v10 = v18[13];
  *(_OWORD *)(v8 + 224) = v18[12];
  *(_OWORD *)(v8 + 240) = v10;
  *(_OWORD *)(v8 + 256) = v18[14];
  *(void *)(v8 + 272) = v19;
  long long v11 = v18[9];
  *(_OWORD *)(v8 + 160) = v18[8];
  *(_OWORD *)(v8 + 176) = v11;
  long long v12 = v18[11];
  *(_OWORD *)(v8 + 192) = v18[10];
  *(_OWORD *)(v8 + 208) = v12;
  long long v13 = v18[5];
  *(_OWORD *)(v8 + 96) = v18[4];
  *(_OWORD *)(v8 + 112) = v13;
  long long v14 = v18[7];
  *(_OWORD *)(v8 + 128) = v18[6];
  *(_OWORD *)(v8 + 144) = v14;
  long long v15 = v18[1];
  *(_OWORD *)(v8 + 32) = v18[0];
  *(_OWORD *)(v8 + 48) = v15;
  long long v16 = v18[3];
  *(_OWORD *)(v8 + 64) = v18[2];
  *(_OWORD *)(v8 + 80) = v16;

  uint64_t result = swift_release();
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = 1;
  *(double *)(a3 + 16) = a4;
  return result;
}

uint64_t FeedJournalEntry.chosenGroup.getter@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(*(void *)v1 + 16)) {
    return sub_1BFE60390(*(void *)v1 + 32, a1);
  }
  __break(1u);
  return result;
}

void *assignWithCopy for FeedJournalEntry(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a1 + 1;
  unint64_t v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *unint64_t v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C03FB13C((uint64_t)(a1 + 1));
      *unint64_t v4 = a2[1];
    }
  }
  else
  {
    *unint64_t v4 = v5;
    if (v5 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_1C03FB13C(uint64_t a1)
{
  sub_1BFE9DD8C(0, &qword_1EB879F70, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for FeedJournalEntry(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = a1 + 1;
  unint64_t v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *unint64_t v4 = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C03FB13C((uint64_t)(a1 + 1));
  }
  *unint64_t v4 = v5;
LABEL_6:
  a1[2] = a2[2];
  return a1;
}

unint64_t sub_1C03FB238@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  if (!*(void *)(*v2 + 16))
  {
    __break(1u);
    __break(1u);
    JUMPOUT(0x1C03FB530);
  }
  unint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  sub_1BFE60390(v3 + 32, (uint64_t)&v13);
  sub_1BFD7EBD0((uint64_t)&v14, (uint64_t)v11);
  sub_1BFE60270((uint64_t)&v13);
  switch(v12)
  {
    case 3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      goto LABEL_6;
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
LABEL_6:
      *a2 = v3;
      a2[1] = v6;
      a2[2] = v7;
      swift_bridgeObjectRetain();
      unint64_t result = sub_1BFE60260(v6);
      break;
    default:
      sub_1BFC773DC(v11, (uint64_t)v15);
      uint64_t v8 = v16;
      uint64_t v9 = v17;
      __swift_project_boxed_opaque_existential_1(v15, v16);
      sub_1C1080E58(a1, v8, v9);
      *a2 = v3;
      a2[1] = v6;
      a2[2] = v7;
      swift_bridgeObjectRetain();
      sub_1BFE60260(v6);
      unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      break;
  }
  return result;
}

unint64_t sub_1C03FB54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *v3;
  unint64_t v5 = *(void *)(*v3 + 16);
  if (!v5)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v9 = v3[1];
  uint64_t v10 = v3[2];
  sub_1BFE60390(v4 + 32, (uint64_t)&v24);
  sub_1BFD7EBD0((uint64_t)&v26, (uint64_t)v21);
  sub_1BFE60270((uint64_t)&v24);
  switch(v23)
  {
    case 3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      goto LABEL_15;
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
LABEL_15:
      *a3 = v4;
      a3[1] = v9;
      a3[2] = v10;
      swift_bridgeObjectRetain();
      return sub_1BFE60260(v9);
    default:
      double v11 = v22;
      sub_1BFC773DC(v21, (uint64_t)v27);
      __swift_project_boxed_opaque_existential_1(v27, v28);
      if (sub_1C151811C() == a1 && v12 == a2)
      {
        swift_bridgeObjectRelease();
LABEL_11:
        sub_1BFE60390(v4 + 32, (uint64_t)v21);
        uint64_t v16 = v28;
        uint64_t v15 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        (*(void (**)(uint64_t))(*(void *)(v15 + 8) + 64))(v16);
        uint64_t v24 = 0;
        uint64_t v25 = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        uint64_t v24 = 0xD000000000000014;
        uint64_t v25 = 0x80000001C160EE90;
        sub_1C151E80C();
        sub_1C0CE8D04((uint64_t)v27, v24, v25, (uint64_t)&v24, v11);
        swift_bridgeObjectRelease();
        sub_1BFE60270((uint64_t)v21);
        sub_1BFE9DD8C(0, &qword_1EB86BA50, (uint64_t)&type metadata for FeedJournalGroup, MEMORY[0x1E4FBBE00]);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
        sub_1BFC88478((uint64_t)&v24, v17 + 32);
        if (*(void *)(v4 + 16) >= v5)
        {
          *(void *)&v21[0] = v17;
          uint64_t v18 = swift_bridgeObjectRetain();
          sub_1C1048E1C(v18, v4 + 32, 1, (2 * v5) | 1);
          uint64_t v19 = *(void *)&v21[0];
          sub_1BFE60270((uint64_t)&v24);
          *a3 = v19;
          a3[1] = v9;
          a3[2] = v10;
          goto LABEL_13;
        }
LABEL_17:
        __break(1u);
        JUMPOUT(0x1C03FB82CLL);
      }
      char v14 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_11;
      }
      *a3 = v4;
      a3[1] = v9;
      a3[2] = v10;
      swift_bridgeObjectRetain();
LABEL_13:
      sub_1BFE60260(v9);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
}

unint64_t sub_1C03FB848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *v3;
  unint64_t v5 = *(void *)(*v3 + 16);
  if (!v5)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v9 = v3[1];
  uint64_t v10 = v3[2];
  sub_1BFE60390(v4 + 32, (uint64_t)&v24);
  sub_1BFD7EBD0((uint64_t)&v26, (uint64_t)v21);
  sub_1BFE60270((uint64_t)&v24);
  switch(v23)
  {
    case 3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      goto LABEL_15;
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
LABEL_15:
      *a3 = v4;
      a3[1] = v9;
      a3[2] = v10;
      swift_bridgeObjectRetain();
      return sub_1BFE60260(v9);
    default:
      double v11 = v22;
      sub_1BFC773DC(v21, (uint64_t)v27);
      __swift_project_boxed_opaque_existential_1(v27, v28);
      if (sub_1C151811C() == a1 && v12 == a2)
      {
        swift_bridgeObjectRelease();
LABEL_11:
        sub_1BFE60390(v4 + 32, (uint64_t)v21);
        uint64_t v16 = v28;
        uint64_t v15 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        (*(void (**)(uint64_t))(*(void *)(v15 + 8) + 64))(v16);
        uint64_t v24 = 0;
        uint64_t v25 = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        type metadata accessor for FeedContext();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C0CE8D04((uint64_t)v27, v24, v25, (uint64_t)&v24, v11);
        swift_bridgeObjectRelease();
        sub_1BFE60270((uint64_t)v21);
        sub_1BFE9DD8C(0, &qword_1EB86BA50, (uint64_t)&type metadata for FeedJournalGroup, MEMORY[0x1E4FBBE00]);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
        sub_1BFC88478((uint64_t)&v24, v17 + 32);
        if (*(void *)(v4 + 16) >= v5)
        {
          *(void *)&v21[0] = v17;
          uint64_t v18 = swift_bridgeObjectRetain();
          sub_1C1048E1C(v18, v4 + 32, 1, (2 * v5) | 1);
          uint64_t v19 = *(void *)&v21[0];
          sub_1BFE60270((uint64_t)&v24);
          *a3 = v19;
          a3[1] = v9;
          a3[2] = v10;
          goto LABEL_13;
        }
LABEL_17:
        __break(1u);
        JUMPOUT(0x1C03FBB78);
      }
      char v14 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_11;
      }
      *a3 = v4;
      a3[1] = v9;
      a3[2] = v10;
      swift_bridgeObjectRetain();
LABEL_13:
      sub_1BFE60260(v9);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
}

uint64_t sub_1C03FBB94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v3 = v2;
  uint64_t v59 = a2;
  uint64_t v53 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1F4188790](v53);
  unint64_t v5 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC44A48(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  double v11 = (char *)&v51 - v10;
  sub_1BFC44A48(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (uint64_t)&v51 - v15;
  uint64_t v56 = type metadata accessor for OsloSheetPurchaseDataModel(0);
  MEMORY[0x1F4188790](v56);
  uint64_t v52 = (void **)((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v51 = (void **)((char *)&v51 - v18);
  sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v51 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v51 - v26;
  uint64_t v28 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03FFDBC(v3, (uint64_t)v30);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v32 = v58;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1C03FFEE8((uint64_t)v30, (uint64_t)v11, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      sub_1C03FFE20((uint64_t)v11, (uint64_t)v8, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v36 = type metadata accessor for FormatPurchaseLandingPage();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v8, 1, v36) == 1)
      {
        sub_1C03FFE8C((uint64_t)v11, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        sub_1C03FFE8C((uint64_t)v8, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        uint64_t v37 = type metadata accessor for FormatPurchaseLandingPageData();
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v59, 1, 1, v37);
        goto LABEL_19;
      }
      sub_1C0F04990(v57, v59);
      sub_1C03FFE8C((uint64_t)v11, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t result = sub_1C007753C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatPurchaseLandingPage);
      if (!v32)
      {
        uint64_t v49 = type metadata accessor for FormatPurchaseLandingPageData();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v59, 0, 1, v49);
        goto LABEL_19;
      }
      return result;
    case 2:
      sub_1C03FFF54((uint64_t)v30, (uint64_t)v5, type metadata accessor for FormatOsloSheetPurchaseDataModel);
      uint64_t v38 = *v5;
      uint64_t v39 = v5[1];
      sub_1C03FFE20((uint64_t)v5 + *(int *)(v53 + 20), (uint64_t)v21, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      uint64_t v40 = type metadata accessor for FormatPostPurchase();
      int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v21, 1, v40);
      swift_bridgeObjectRetain();
      if (v41 == 1)
      {
        sub_1C007753C((uint64_t)v5, type metadata accessor for FormatOsloSheetPurchaseDataModel);
        sub_1C03FFE8C((uint64_t)v21, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        uint64_t v42 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v43 = v55;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v55, 1, 1, v42);
LABEL_17:
        uint64_t v46 = (uint64_t)v52;
        *uint64_t v52 = v38;
        *(void *)(v46 + 8) = v39;
        uint64_t v47 = v46 + *(int *)(v56 + 20);
        uint64_t v48 = v43;
        goto LABEL_18;
      }
      uint64_t v43 = v55;
      sub_1C11C826C(v57, v55);
      if (!v32)
      {
        sub_1C007753C((uint64_t)v5, type metadata accessor for FormatOsloSheetPurchaseDataModel);
        sub_1C007753C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
        uint64_t v50 = type metadata accessor for FormatPostPurchaseData();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v43, 0, 1, v50);
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      sub_1C007753C((uint64_t)v5, type metadata accessor for FormatOsloSheetPurchaseDataModel);
      return sub_1C007753C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
    case 3:
    case 4:
      goto LABEL_19;
    default:
      sub_1C03FFEE8((uint64_t)v30, (uint64_t)v27, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      sub_1C03FFE20((uint64_t)v27, (uint64_t)v24, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      uint64_t v33 = type metadata accessor for FormatPostPurchase();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v24, 1, v33) == 1)
      {
        sub_1C03FFE8C((uint64_t)v27, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        sub_1C03FFE8C((uint64_t)v24, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        uint64_t v34 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v35 = v54;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v54, 1, 1, v34);
      }
      else
      {
        uint64_t v35 = v54;
        sub_1C11C826C(v57, v54);
        sub_1C03FFE8C((uint64_t)v27, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        uint64_t result = sub_1C007753C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
        if (v32) {
          return result;
        }
        uint64_t v45 = type metadata accessor for FormatPostPurchaseData();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v35, 0, 1, v45);
      }
      uint64_t v46 = (uint64_t)v51;
      *uint64_t v51 = 0;
      *(void *)(v46 + 8) = 0;
      uint64_t v47 = v46 + *(int *)(v56 + 20);
      uint64_t v48 = v35;
LABEL_18:
      sub_1C03FFEE8(v48, v47, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
      sub_1C03FFF54(v46, (uint64_t)v59, type metadata accessor for OsloSheetPurchaseDataModel);
LABEL_19:
      type metadata accessor for FormatPurchaseData(0);
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1C03FC4DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPurchaseAction.init(from:)(a1, a2);
}

uint64_t sub_1C03FC4F4(void *a1)
{
  return FormatPurchaseAction.encode(to:)(a1);
}

BOOL _s8NewsFeed20FormatPurchaseActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = a1;
  uint64_t v80 = a2;
  uint64_t v2 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v74 = (uint64_t *)((char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FormatPurchaseLandingPage();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v69 = (long long *)((char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C03FFFBC(0, &qword_1EA19B308, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v78 = (uint64_t)&v67 - v8;
  sub_1BFC44A48(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (long long *)((char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v75 = (uint64_t)&v67 - v12;
  uint64_t v13 = type metadata accessor for FormatPostPurchase();
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v68 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03FFFBC(0, (unint64_t *)&qword_1EA19B310, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v73 = (uint64_t)&v67 - v17;
  sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v67 - v22;
  uint64_t v24 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (uint64_t *)((char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v67 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v67 - v31;
  sub_1C0400020();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v67 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t)&v35[*(int *)(v36 + 56)];
  sub_1C03FFDBC(v79, (uint64_t)v35);
  sub_1C03FFDBC(v80, v37);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C03FFDBC((uint64_t)v35, (uint64_t)v29);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1C03FFE8C((uint64_t)v29, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        goto LABEL_16;
      }
      uint64_t v38 = v75;
      sub_1C03FFEE8(v37, v75, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v39 = v78;
      uint64_t v40 = v78 + *(int *)(v7 + 48);
      sub_1C03FFEE8((uint64_t)v29, v78, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      sub_1C03FFE20(v38, v40, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v41 = v77;
      uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
      if (v42(v39, 1, v77) == 1)
      {
        sub_1C03FFE8C(v38, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        if (v42(v40, 1, v41) == 1)
        {
          uint64_t v43 = &qword_1EB87BA78;
          id v44 = type metadata accessor for FormatPurchaseLandingPage;
          uint64_t v45 = v39;
          goto LABEL_21;
        }
        goto LABEL_24;
      }
      uint64_t v56 = v70;
      sub_1C03FFE20(v39, (uint64_t)v70, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      if (v42(v40, 1, v41) == 1)
      {
        sub_1C03FFE8C(v38, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        sub_1C007753C((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatPurchaseLandingPage);
LABEL_24:
        uint64_t v57 = &qword_1EA19B308;
        uint64_t v58 = &qword_1EB87BA78;
        uint64_t v59 = type metadata accessor for FormatPurchaseLandingPage;
        uint64_t v60 = v39;
        goto LABEL_28;
      }
      double v61 = v69;
      sub_1C03FFF54(v40, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for FormatPurchaseLandingPage);
      char v62 = _s8NewsFeed25FormatPurchaseLandingPageV2eeoiySbAC_ACtFZ_0(v56, v61);
      sub_1C007753C((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for FormatPurchaseLandingPage);
      sub_1C03FFE8C(v38, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      sub_1C007753C((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v63 = v39;
      id v64 = &qword_1EB87BA78;
      uint64_t v65 = type metadata accessor for FormatPurchaseLandingPage;
LABEL_31:
      sub_1C03FFE8C(v63, v64, (void (*)(uint64_t))v65);
      uint64_t v48 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction;
      if (v62)
      {
LABEL_13:
        BOOL v47 = 1;
      }
      else
      {
LABEL_32:
        BOOL v47 = 0;
        uint64_t v48 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction;
      }
LABEL_17:
      sub_1C007753C((uint64_t)v35, v48);
      return v47;
    case 2u:
      sub_1C03FFDBC((uint64_t)v35, (uint64_t)v26);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v46 = v74;
        sub_1C03FFF54(v37, (uint64_t)v74, type metadata accessor for FormatOsloSheetPurchaseDataModel);
        BOOL v47 = _s8NewsFeed32FormatOsloSheetPurchaseDataModelV2eeoiySbAC_ACtFZ_0(v26, v46);
        sub_1C007753C((uint64_t)v46, type metadata accessor for FormatOsloSheetPurchaseDataModel);
        sub_1C007753C((uint64_t)v26, type metadata accessor for FormatOsloSheetPurchaseDataModel);
        uint64_t v48 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction;
        goto LABEL_17;
      }
      sub_1C007753C((uint64_t)v26, type metadata accessor for FormatOsloSheetPurchaseDataModel);
      goto LABEL_16;
    case 3u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v48 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction;
      if (EnumCaseMultiPayload == 3) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 4u:
      int v50 = swift_getEnumCaseMultiPayload();
      uint64_t v48 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction;
      if (v50 == 4) {
        goto LABEL_13;
      }
      goto LABEL_16;
    default:
      sub_1C03FFDBC((uint64_t)v35, (uint64_t)v32);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1C03FFE8C((uint64_t)v32, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
LABEL_16:
        BOOL v47 = 0;
        uint64_t v48 = (uint64_t (*)(void))sub_1C0400020;
        goto LABEL_17;
      }
      sub_1C03FFEE8(v37, (uint64_t)v23, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      uint64_t v52 = v73;
      uint64_t v53 = v73 + *(int *)(v16 + 48);
      sub_1C03FFEE8((uint64_t)v32, v73, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      sub_1C03FFE20((uint64_t)v23, v53, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      uint64_t v54 = v72;
      uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
      if (v55(v52, 1, v72) == 1)
      {
        sub_1C03FFE8C((uint64_t)v23, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        if (v55(v53, 1, v54) == 1)
        {
          uint64_t v43 = &qword_1EB87EBC8;
          id v44 = type metadata accessor for FormatPostPurchase;
          uint64_t v45 = v52;
LABEL_21:
          sub_1C03FFE8C(v45, v43, (void (*)(uint64_t))v44);
          BOOL v47 = 1;
          uint64_t v48 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction;
          goto LABEL_17;
        }
      }
      else
      {
        sub_1C03FFE20(v52, (uint64_t)v20, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        if (v55(v53, 1, v54) != 1)
        {
          uint64_t v66 = v68;
          sub_1C03FFF54(v53, v68, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
          char v62 = _s8NewsFeed18FormatPostPurchaseO2eeoiySbAC_ACtFZ_0((uint64_t)v20, v66);
          sub_1C007753C(v66, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
          sub_1C03FFE8C((uint64_t)v23, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          sub_1C007753C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
          uint64_t v63 = v52;
          id v64 = &qword_1EB87EBC8;
          uint64_t v65 = type metadata accessor for FormatPostPurchase;
          goto LABEL_31;
        }
        sub_1C03FFE8C((uint64_t)v23, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        sub_1C007753C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
      }
      uint64_t v57 = (unint64_t *)&qword_1EA19B310;
      uint64_t v58 = &qword_1EB87EBC8;
      uint64_t v59 = type metadata accessor for FormatPostPurchase;
      uint64_t v60 = v52;
LABEL_28:
      sub_1C0400084(v60, v57, v58, (void (*)(uint64_t))v59);
      goto LABEL_32;
  }
}

uint64_t sub_1C03FD020(uint64_t a1)
{
  uint64_t result = sub_1C03FD0F0(&qword_1EA19B2F0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C03FD064(void *a1)
{
  a1[1] = sub_1C03FD0F0(qword_1EB87C0B8);
  a1[2] = sub_1C03FD0F0(&qword_1EA19B2F8);
  uint64_t result = sub_1C03FD0F0(&qword_1EA19B300);
  a1[3] = result;
  return result;
}

uint64_t sub_1C03FD0F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatPurchaseAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPurchaseAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v13 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
        uint64_t v15 = (uint64_t *)((char *)a1 + v14);
        uint64_t v16 = (uint64_t *)&a2[v14];
        uint64_t v17 = type metadata accessor for FormatPostPurchase();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        if (v19(v16, 1, v17))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v24 = type metadata accessor for FormatURL();
          uint64_t v25 = *(void *)(v24 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(v16, 2, v24))
          {
            memcpy(v15, v16, *(void *)(v18 + 64));
          }
          else
          {
            int v38 = swift_getEnumCaseMultiPayload();
            if (v38 == 2)
            {
              uint64_t v50 = v16[1];
              uint64_t v62 = v50;
              uint64_t v64 = *v16;
              uint64_t v51 = v16[2];
              char v52 = *((unsigned char *)v16 + 24);
              sub_1BFE86E48(v64, v50, v51, v52);
              *uint64_t v15 = v64;
              v15[1] = v62;
              v15[2] = v51;
              *((unsigned char *)v15 + 24) = v52;
            }
            else
            {
              if (v38 == 1)
              {
                uint64_t v39 = v16[1];
                *uint64_t v15 = *v16;
                v15[1] = v39;
                v15[2] = v16[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                uint64_t v53 = sub_1C1515FDC();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v53 - 8) + 16))(v15, v16, v53);
                uint64_t v54 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v15 + *(int *)(v54 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v54 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v25 + 56))(v15, 0, 2, v24);
          }
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        goto LABEL_46;
      case 1:
        uint64_t v8 = type metadata accessor for FormatPurchaseLandingPage();
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          sub_1BFC44A48(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
          goto LABEL_46;
        }
        uint64_t v26 = *(void *)a2;
        uint64_t v27 = *((void *)a2 + 1);
        uint64_t v28 = *((void *)a2 + 2);
        char v29 = a2[24];
        sub_1BFDEB94C(*(void *)a2, v27, v28, v29);
        *a1 = v26;
        a1[1] = v27;
        a1[2] = v28;
        *((unsigned char *)a1 + 24) = v29;
        uint64_t v30 = *(int *)(v8 + 20);
        uint64_t v31 = (uint64_t *)((char *)a1 + v30);
        uint64_t v32 = (uint64_t *)&a2[v30];
        uint64_t v33 = type metadata accessor for FormatPostPurchase();
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v40 = type metadata accessor for FormatURL();
          uint64_t v41 = *(void *)(v40 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v41 + 48))(v32, 2, v40))
          {
            memcpy(v31, v32, *(void *)(v34 + 64));
          }
          else
          {
            int v42 = swift_getEnumCaseMultiPayload();
            if (v42 == 2)
            {
              uint64_t v55 = v32[1];
              uint64_t v61 = v55;
              uint64_t v63 = *v32;
              uint64_t v56 = v32[2];
              uint64_t v60 = v56;
              char v57 = *((unsigned char *)v32 + 24);
              sub_1BFE86E48(v63, v55, v56, v57);
              *uint64_t v31 = v63;
              v31[1] = v61;
              v31[2] = v60;
              *((unsigned char *)v31 + 24) = v57;
            }
            else
            {
              if (v42 == 1)
              {
                uint64_t v43 = v32[1];
                *uint64_t v31 = *v32;
                v31[1] = v43;
                v31[2] = v32[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                uint64_t v58 = sub_1C1515FDC();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v58 - 8) + 16))(v31, v32, v58);
                uint64_t v59 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v31 + *(int *)(v59 + 20)) = *(uint64_t *)((char *)v32 + *(int *)(v59 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v41 + 56))(v31, 0, 2, v40);
          }
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
LABEL_45:
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        goto LABEL_46;
      case 0:
        uint64_t v8 = type metadata accessor for FormatPostPurchase();
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_46:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v22 = type metadata accessor for FormatURL();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 2, v22))
        {
          memcpy(a1, a2, *(void *)(v9 + 64));
        }
        else
        {
          int v36 = swift_getEnumCaseMultiPayload();
          if (v36 == 2)
          {
            uint64_t v44 = *(void *)a2;
            uint64_t v45 = *((void *)a2 + 1);
            uint64_t v46 = *((void *)a2 + 2);
            char v47 = a2[24];
            sub_1BFE86E48(v44, v45, v46, v47);
            *a1 = v44;
            a1[1] = v45;
            a1[2] = v46;
            *((unsigned char *)a1 + 24) = v47;
          }
          else
          {
            if (v36 == 1)
            {
              uint64_t v37 = *((void *)a2 + 1);
              *a1 = *(void *)a2;
              a1[1] = v37;
              a1[2] = *((void *)a2 + 2);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v48 = sub_1C1515FDC();
              (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, a2, v48);
              uint64_t v49 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)a1 + *(int *)(v49 + 20)) = *(void *)&a2[*(int *)(v49 + 20)];
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 2, v22);
        }
        goto LABEL_45;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for FormatPurchaseAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
LABEL_8:
    a1 += v3;
    goto LABEL_9;
  }
  if (result == 1)
  {
    uint64_t v4 = type metadata accessor for FormatPurchaseLandingPage();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
    if (result) {
      return result;
    }
    sub_1BFDEB9E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
    uint64_t v3 = *(int *)(v4 + 20);
    goto LABEL_8;
  }
  if (result) {
    return result;
  }
LABEL_9:
  uint64_t v5 = type metadata accessor for FormatPostPurchase();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(a1, 1, v5);
  if (!result)
  {
    uint64_t v6 = type metadata accessor for FormatURL();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 2, v6);
    if (!result)
    {
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        uint64_t v8 = *(void *)a1;
        uint64_t v9 = *(void *)(a1 + 8);
        uint64_t v10 = *(void *)(a1 + 16);
        char v11 = *(unsigned char *)(a1 + 24);
        return sub_1BFD7418C(v8, v9, v10, v11);
      }
      else
      {
        if (result == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if (result) {
            return result;
          }
          uint64_t v7 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
          type metadata accessor for FormatAbsoluteURL();
        }
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t *initializeWithCopy for FormatPurchaseAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v10 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
      uint64_t v12 = (uint64_t *)((char *)a1 + v11);
      uint64_t v13 = (uint64_t *)&a2[v11];
      uint64_t v14 = type metadata accessor for FormatPostPurchase();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v21 = type metadata accessor for FormatURL();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48))(v13, 2, v21))
        {
          memcpy(v12, v13, *(void *)(v15 + 64));
        }
        else
        {
          int v35 = swift_getEnumCaseMultiPayload();
          if (v35 == 2)
          {
            uint64_t v47 = v13[1];
            uint64_t v60 = v47;
            uint64_t v62 = *v13;
            uint64_t v48 = v13[2];
            char v49 = *((unsigned char *)v13 + 24);
            sub_1BFE86E48(v62, v47, v48, v49);
            *uint64_t v12 = v62;
            v12[1] = v60;
            _OWORD v12[2] = v48;
            *((unsigned char *)v12 + 24) = v49;
          }
          else
          {
            if (v35 == 1)
            {
              uint64_t v36 = v13[1];
              *uint64_t v12 = *v13;
              v12[1] = v36;
              _OWORD v12[2] = v13[2];
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v50 = sub_1C1515FDC();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v50 - 8) + 16))(v12, v13, v50);
              uint64_t v51 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)v12 + *(int *)(v51 + 20)) = *(uint64_t *)((char *)v13 + *(int *)(v51 + 20));
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v22 + 56))(v12, 0, 2, v21);
        }
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      goto LABEL_43;
    case 1:
      uint64_t v7 = type metadata accessor for FormatPurchaseLandingPage();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1BFC44A48(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
        goto LABEL_43;
      }
      uint64_t v23 = *(void *)a2;
      uint64_t v24 = *((void *)a2 + 1);
      uint64_t v25 = *((void *)a2 + 2);
      char v26 = a2[24];
      sub_1BFDEB94C(*(void *)a2, v24, v25, v26);
      *a1 = v23;
      a1[1] = v24;
      a1[2] = v25;
      *((unsigned char *)a1 + 24) = v26;
      uint64_t v27 = *(int *)(v7 + 20);
      uint64_t v28 = (uint64_t *)((char *)a1 + v27);
      char v29 = (uint64_t *)&a2[v27];
      uint64_t v30 = type metadata accessor for FormatPostPurchase();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v37 = type metadata accessor for FormatURL();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v38 + 48))(v29, 2, v37))
        {
          memcpy(v28, v29, *(void *)(v31 + 64));
        }
        else
        {
          int v39 = swift_getEnumCaseMultiPayload();
          if (v39 == 2)
          {
            uint64_t v52 = v29[1];
            uint64_t v59 = v52;
            uint64_t v61 = *v29;
            uint64_t v53 = v29[2];
            uint64_t v58 = v53;
            char v54 = *((unsigned char *)v29 + 24);
            sub_1BFE86E48(v61, v52, v53, v54);
            *uint64_t v28 = v61;
            v28[1] = v59;
            uint64_t v28[2] = v58;
            *((unsigned char *)v28 + 24) = v54;
          }
          else
          {
            if (v39 == 1)
            {
              uint64_t v40 = v29[1];
              *uint64_t v28 = *v29;
              v28[1] = v40;
              uint64_t v28[2] = v29[2];
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v55 = sub_1C1515FDC();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v55 - 8) + 16))(v28, v29, v55);
              uint64_t v56 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)v28 + *(int *)(v56 + 20)) = *(uint64_t *)((char *)v29 + *(int *)(v56 + 20));
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v38 + 56))(v28, 0, 2, v37);
        }
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
LABEL_42:
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_43;
    case 0:
      uint64_t v7 = type metadata accessor for FormatPostPurchase();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_43:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v19 = type metadata accessor for FormatURL();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 2, v19))
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        int v33 = swift_getEnumCaseMultiPayload();
        if (v33 == 2)
        {
          uint64_t v41 = *(void *)a2;
          uint64_t v42 = *((void *)a2 + 1);
          uint64_t v43 = *((void *)a2 + 2);
          char v44 = a2[24];
          sub_1BFE86E48(v41, v42, v43, v44);
          *a1 = v41;
          a1[1] = v42;
          a1[2] = v43;
          *((unsigned char *)a1 + 24) = v44;
        }
        else
        {
          if (v33 == 1)
          {
            uint64_t v34 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v34;
            a1[2] = *((void *)a2 + 2);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v45 = sub_1C1515FDC();
            (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
            uint64_t v46 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)a1 + *(int *)(v46 + 20)) = *(void *)&a2[*(int *)(v46 + 20)];
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 2, v19);
      }
      goto LABEL_42;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t *assignWithCopy for FormatPurchaseAction(uint64_t *a1, char *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_1C007753C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        uint64_t v10 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
        uint64_t v11 = (uint64_t *)((char *)a1 + v10);
        uint64_t v12 = (uint64_t *)&a2[v10];
        uint64_t v13 = type metadata accessor for FormatPostPurchase();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        if (v15(v12, 1, v13))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v20 = type metadata accessor for FormatURL();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v12, 2, v20))
          {
            memcpy(v11, v12, *(void *)(v14 + 64));
          }
          else
          {
            int v33 = swift_getEnumCaseMultiPayload();
            if (v33 == 2)
            {
              uint64_t v43 = v12[1];
              uint64_t v56 = v43;
              uint64_t v58 = *v12;
              uint64_t v44 = v12[2];
              char v45 = *((unsigned char *)v12 + 24);
              sub_1BFE86E48(v58, v43, v44, v45);
              *uint64_t v11 = v58;
              v11[1] = v56;
              long long v11[2] = v44;
              *((unsigned char *)v11 + 24) = v45;
            }
            else
            {
              if (v33 == 1)
              {
                *uint64_t v11 = *v12;
                v11[1] = v12[1];
                long long v11[2] = v12[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                uint64_t v46 = sub_1C1515FDC();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v46 - 8) + 16))(v11, v12, v46);
                uint64_t v47 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v11 + *(int *)(v47 + 20)) = *(uint64_t *)((char *)v12 + *(int *)(v47 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v21 + 56))(v11, 0, 2, v20);
          }
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        goto LABEL_44;
      case 1:
        uint64_t v7 = type metadata accessor for FormatPurchaseLandingPage();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_1BFC44A48(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
          goto LABEL_44;
        }
        uint64_t v22 = *(void *)a2;
        uint64_t v23 = *((void *)a2 + 1);
        uint64_t v24 = *((void *)a2 + 2);
        char v25 = a2[24];
        sub_1BFDEB94C(*(void *)a2, v23, v24, v25);
        *a1 = v22;
        a1[1] = v23;
        a1[2] = v24;
        *((unsigned char *)a1 + 24) = v25;
        uint64_t v26 = *(int *)(v7 + 20);
        uint64_t v27 = (uint64_t *)((char *)a1 + v26);
        uint64_t v28 = (uint64_t *)&a2[v26];
        uint64_t v29 = type metadata accessor for FormatPostPurchase();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v34 = type metadata accessor for FormatURL();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v35 + 48))(v28, 2, v34))
          {
            memcpy(v27, v28, *(void *)(v30 + 64));
          }
          else
          {
            int v36 = swift_getEnumCaseMultiPayload();
            if (v36 == 2)
            {
              uint64_t v48 = v28[1];
              uint64_t v55 = v48;
              uint64_t v57 = *v28;
              uint64_t v49 = v28[2];
              uint64_t v54 = v49;
              char v50 = *((unsigned char *)v28 + 24);
              sub_1BFE86E48(v57, v48, v49, v50);
              *uint64_t v27 = v57;
              v27[1] = v55;
              v27[2] = v54;
              *((unsigned char *)v27 + 24) = v50;
            }
            else
            {
              if (v36 == 1)
              {
                *uint64_t v27 = *v28;
                v27[1] = v28[1];
                v27[2] = v28[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                uint64_t v51 = sub_1C1515FDC();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v51 - 8) + 16))(v27, v28, v51);
                uint64_t v52 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v27 + *(int *)(v52 + 20)) = *(uint64_t *)((char *)v28 + *(int *)(v52 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v35 + 56))(v27, 0, 2, v34);
          }
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
LABEL_43:
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        goto LABEL_44;
      case 0:
        uint64_t v7 = type metadata accessor for FormatPostPurchase();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_44:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v18 = type metadata accessor for FormatURL();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(a2, 2, v18))
        {
          memcpy(a1, a2, *(void *)(v8 + 64));
        }
        else
        {
          int v32 = swift_getEnumCaseMultiPayload();
          if (v32 == 2)
          {
            uint64_t v37 = *(void *)a2;
            uint64_t v38 = *((void *)a2 + 1);
            uint64_t v39 = *((void *)a2 + 2);
            char v40 = a2[24];
            sub_1BFE86E48(v37, v38, v39, v40);
            *a1 = v37;
            a1[1] = v38;
            a1[2] = v39;
            *((unsigned char *)a1 + 24) = v40;
          }
          else
          {
            if (v32 == 1)
            {
              *a1 = *(void *)a2;
              a1[1] = *((void *)a2 + 1);
              a1[2] = *((void *)a2 + 2);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v41 = sub_1C1515FDC();
              (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
              uint64_t v42 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)a1 + *(int *)(v42 + 20)) = *(void *)&a2[*(int *)(v42 + 20)];
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 2, v18);
        }
        goto LABEL_43;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for FormatPurchaseAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for FormatPostPurchase();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v21 = type metadata accessor for FormatURL();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 2, v21))
        {
          memcpy(v11, v12, *(void *)(v14 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v11, v12, *(void *)(v22 + 64));
          }
          else
          {
            uint64_t v33 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v11, v12, v33);
            uint64_t v34 = type metadata accessor for FormatAbsoluteURL();
            *(void *)&v11[*(int *)(v34 + 20)] = *(void *)&v12[*(int *)(v34 + 20)];
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 2, v21);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      goto LABEL_37;
    case 1:
      uint64_t v16 = type metadata accessor for FormatPurchaseLandingPage();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BFC44A48(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
        uint64_t v23 = *(int *)(v16 + 20);
        uint64_t v24 = (char *)a1 + v23;
        char v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for FormatPostPurchase();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v29 = type metadata accessor for FormatURL();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 2, v29))
          {
            memcpy(v24, v25, *(void *)(v27 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v24, v25, *(void *)(v30 + 64));
            }
            else
            {
              uint64_t v35 = sub_1C1515FDC();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v24, v25, v35);
              uint64_t v36 = type metadata accessor for FormatAbsoluteURL();
              *(void *)&v24[*(int *)(v36 + 20)] = *(void *)&v25[*(int *)(v36 + 20)];
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v24, 0, 2, v29);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      }
      goto LABEL_37;
    case 0:
      uint64_t v7 = type metadata accessor for FormatPostPurchase();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v19 = type metadata accessor for FormatURL();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(a2, 2, v19))
        {
          memcpy(a1, a2, *(void *)(v8 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(void *)(v20 + 64));
          }
          else
          {
            uint64_t v31 = sub_1C1515FDC();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v31 - 8) + 32))(a1, a2, v31);
            uint64_t v32 = type metadata accessor for FormatAbsoluteURL();
            *(void *)((char *)a1 + *(int *)(v32 + 20)) = *(void *)((char *)a2 + *(int *)(v32 + 20));
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 2, v19);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_37:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatPurchaseAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C007753C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for FormatPostPurchase();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          uint64_t v21 = type metadata accessor for FormatURL();
          uint64_t v22 = *(void *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 2, v21))
          {
            memcpy(v11, v12, *(void *)(v14 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v11, v12, *(void *)(v22 + 64));
            }
            else
            {
              uint64_t v33 = sub_1C1515FDC();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v11, v12, v33);
              uint64_t v34 = type metadata accessor for FormatAbsoluteURL();
              *(void *)&v11[*(int *)(v34 + 20)] = *(void *)&v12[*(int *)(v34 + 20)];
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 2, v21);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        goto LABEL_38;
      case 1:
        uint64_t v16 = type metadata accessor for FormatPurchaseLandingPage();
        uint64_t v17 = *(void *)(v16 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
        {
          sub_1BFC44A48(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
          memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
          uint64_t v23 = *(int *)(v16 + 20);
          uint64_t v24 = (char *)a1 + v23;
          char v25 = (char *)a2 + v23;
          uint64_t v26 = type metadata accessor for FormatPostPurchase();
          uint64_t v27 = *(void *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
          {
            sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
            memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            uint64_t v29 = type metadata accessor for FormatURL();
            uint64_t v30 = *(void *)(v29 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 2, v29))
            {
              memcpy(v24, v25, *(void *)(v27 + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload())
              {
                memcpy(v24, v25, *(void *)(v30 + 64));
              }
              else
              {
                uint64_t v35 = sub_1C1515FDC();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v24, v25, v35);
                uint64_t v36 = type metadata accessor for FormatAbsoluteURL();
                *(void *)&v24[*(int *)(v36 + 20)] = *(void *)&v25[*(int *)(v36 + 20)];
                swift_storeEnumTagMultiPayload();
              }
              (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v24, 0, 2, v29);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        }
        goto LABEL_38;
      case 0:
        uint64_t v7 = type metadata accessor for FormatPostPurchase();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_1BFC44A48(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          uint64_t v19 = type metadata accessor for FormatURL();
          uint64_t v20 = *(void *)(v19 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(a2, 2, v19))
          {
            memcpy(a1, a2, *(void *)(v8 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(a1, a2, *(void *)(v20 + 64));
            }
            else
            {
              uint64_t v31 = sub_1C1515FDC();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v31 - 8) + 32))(a1, a2, v31);
              uint64_t v32 = type metadata accessor for FormatAbsoluteURL();
              *(void *)((char *)a1 + *(int *)(v32 + 20)) = *(void *)((char *)a2 + *(int *)(v32 + 20));
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 2, v19);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_38:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C03FFDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPurchaseAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C03FFE20(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFC44A48(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C03FFE8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFC44A48(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C03FFEE8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFC44A48(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C03FFF54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C03FFFBC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1BFC44A48(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C0400020()
{
  if (!qword_1EA19B318)
  {
    type metadata accessor for FormatPurchaseAction();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19B318);
    }
  }
}

uint64_t sub_1C0400084(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C03FFFBC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFilter()
{
  return &type metadata for DebugFormatFilter;
}

uint64_t sub_1C04000F0()
{
  uint64_t v0 = sub_1C15154CC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151E6BC();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v55 = v4;
  uint64_t v56 = v6;
  sub_1C15153DC();
  sub_1BFF27ECC();
  uint64_t v7 = sub_1C151FE9C();
  unint64_t v9 = v8;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v50 = v1 + 8;
  uint64_t v51 = v0;
  uint64_t v11 = v10;
  v10(v3, v0);
  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v12 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    uint64_t v55 = v7;
    uint64_t v56 = v9;
    uint64_t v53 = 44;
    unint64_t v54 = 0xE100000000000000;
    uint64_t v13 = sub_1C151FE4C();
    swift_bridgeObjectRelease();
    int64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v52 = MEMORY[0x1E4FBC860];
      sub_1C05F742C(0, v14, 0);
      uint64_t v15 = 0;
      v44[1] = v13;
      int64_t v45 = v14;
      uint64_t v46 = v13 + 32;
      do
      {
        uint64_t v16 = (uint64_t *)(v46 + 16 * v15);
        uint64_t v17 = v16[1];
        uint64_t v55 = *v16;
        uint64_t v56 = v17;
        swift_bridgeObjectRetain();
        sub_1C15153DC();
        uint64_t v18 = sub_1C151FE9C();
        uint64_t v20 = v19;
        v11(v3, v51);
        uint64_t v55 = v18;
        uint64_t v56 = v20;
        uint64_t v53 = 32;
        unint64_t v54 = 0xE100000000000000;
        uint64_t v21 = sub_1C151FE4C();
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void *)(v21 + 16);
        if (v22)
        {
          uint64_t v48 = v17;
          uint64_t v49 = v15;
          swift_bridgeObjectRetain();
          uint64_t v47 = v21;
          uint64_t v23 = (uint64_t *)(v21 + 40);
          uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            uint64_t v25 = *v23;
            uint64_t v55 = *(v23 - 1);
            uint64_t v56 = v25;
            swift_bridgeObjectRetain();
            sub_1C15153DC();
            uint64_t v26 = sub_1C151FE9C();
            unint64_t v28 = v27;
            v11(v3, v51);
            if ((v28 & 0x2000000000000000) != 0) {
              uint64_t v29 = HIBYTE(v28) & 0xF;
            }
            else {
              uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
            }
            swift_bridgeObjectRelease();
            if (v29)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v24 = sub_1BFEF9B68(0, v24[2] + 1, 1, v24);
              }
              unint64_t v31 = v24[2];
              unint64_t v30 = v24[3];
              if (v31 >= v30 >> 1) {
                uint64_t v24 = sub_1BFEF9B68((void *)(v30 > 1), v31 + 1, 1, v24);
              }
              void v24[2] = v31 + 1;
              uint64_t v32 = &v24[2 * v31];
              v32[4] = v26;
              v32[5] = v28;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v23 += 2;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v14 = v45;
          uint64_t v15 = v49;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRelease();
        uint64_t v33 = v52;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F742C(0, *(void *)(v33 + 16) + 1, 1);
          uint64_t v33 = v52;
        }
        unint64_t v35 = *(void *)(v33 + 16);
        unint64_t v34 = *(void *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_1C05F742C(v34 > 1, v35 + 1, 1);
          uint64_t v33 = v52;
        }
        ++v15;
        *(void *)(v33 + 16) = v35 + 1;
        *(void *)(v33 + 8 * v35 + 32) = v24;
      }
      while (v15 != v14);
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)(v33 + 16);
      if (v36) {
        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = MEMORY[0x1E4FBC860];
      uint64_t v36 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v36)
      {
LABEL_27:
        uint64_t v37 = (uint64_t *)(v33 + 32);
        uint64_t v38 = MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v41 = *v37;
          if (*(void *)(*v37 + 16))
          {
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v55 = v38;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C05F742C(0, *(void *)(v38 + 16) + 1, 1);
              uint64_t v38 = v55;
            }
            unint64_t v40 = *(void *)(v38 + 16);
            unint64_t v39 = *(void *)(v38 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_1C05F742C(v39 > 1, v40 + 1, 1);
              uint64_t v38 = v55;
            }
            *(void *)(v38 + 16) = v40 + 1;
            *(void *)(v38 + 8 * v40 + 32) = v41;
          }
          ++v37;
          --v36;
        }
        while (v36);
        goto LABEL_38;
      }
    }
    uint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_38:
    swift_bridgeObjectRelease();
    return v38;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t initializeWithCopy for DebugInspectViewSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectViewSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for DebugInspectViewSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectViewSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectViewSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectViewSection()
{
  return &type metadata for DebugInspectViewSection;
}

unint64_t sub_1C04007E8(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0x70756F7267;
      break;
    case 3:
      unint64_t result = 0x73656D656874;
      break;
    case 4:
      unint64_t result = 0x736D657469;
      break;
    case 5:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 6:
      unint64_t result = 0x6E4974756F79616CLL;
      break;
    case 7:
      unint64_t result = 0x746C75736572;
      break;
    case 8:
      unint64_t result = 0x6D65726975716572;
      break;
    case 9:
      unint64_t result = 0x74616D726F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0400924()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C04007E8(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0400988()
{
  sub_1C04007E8(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04009DC()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C04007E8(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0400A3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0400C80();
  *a1 = result;
  return result;
}

unint64_t sub_1C0400A6C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C04007E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectViewSection.Descriptor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0400B64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectViewSection.Descriptor()
{
  return &type metadata for DebugInspectViewSection.Descriptor;
}

uint64_t sub_1C0400B9C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C04007E8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C04007E8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1C0400C2C()
{
  unint64_t result = qword_1EA19B320;
  if (!qword_1EA19B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B320);
  }
  return result;
}

uint64_t sub_1C0400C80()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

NewsFeed::FormatFontDesign_optional __swiftcall FormatFontDesign.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t FormatFontDesign.rawValue.getter()
{
  uint64_t result = 0x746C7561666564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465646E756F72;
      break;
    case 2:
      uint64_t result = 0x6669726573;
      break;
    case 3:
      uint64_t result = 0x636170736F6E6F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0400DB4(unsigned __int8 *a1, char *a2)
{
  return sub_1C1491D48(*a1, *a2);
}

unint64_t sub_1C0400DC4()
{
  unint64_t result = qword_1EA19B328;
  if (!qword_1EA19B328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B328);
  }
  return result;
}

uint64_t sub_1C0400E18()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0400EF0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0400FB0()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatFontDesign_optional sub_1C0401084(Swift::String *a1)
{
  return FormatFontDesign.init(rawValue:)(*a1);
}

void sub_1C0401090(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746C7561666564;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6465646E756F72;
      goto LABEL_3;
    case 2:
      *a1 = 0x6669726573;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x636170736F6E6F6DLL;
      a1[1] = 0xEA00000000006465;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

unint64_t sub_1C0401128(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0401158();
  unint64_t result = sub_1C04011AC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0401158()
{
  unint64_t result = qword_1EA19B330;
  if (!qword_1EA19B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B330);
  }
  return result;
}

unint64_t sub_1C04011AC()
{
  unint64_t result = qword_1EA19B338;
  if (!qword_1EA19B338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B338);
  }
  return result;
}

unint64_t sub_1C0401200(uint64_t a1)
{
  unint64_t result = sub_1C0401228();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0401228()
{
  unint64_t result = qword_1EA19B340;
  if (!qword_1EA19B340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA19B340);
  }
  return result;
}

unint64_t sub_1C040127C(void *a1)
{
  a1[1] = sub_1BFC92E0C();
  a1[2] = sub_1C04012B4();
  unint64_t result = sub_1C0400DC4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C04012B4()
{
  unint64_t result = qword_1EB85FFF0;
  if (!qword_1EB85FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FFF0);
  }
  return result;
}

uint64_t sub_1C0401308()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0401368(void *a1)
{
  return FormatFontDesign.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatFontDesign()
{
  return &type metadata for FormatFontDesign;
}

uint64_t dispatch thunk of FeedIssueOfflineProviderType.isDownloaded(issue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1C04013CC(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    unint64_t v3 = (unsigned char *)(a2 + 32);
    uint64_t v4 = v2 - 1;
    do
    {
      uint64_t v5 = v4;
      LOBYTE(v2) = ((a1 & 1) == 0) ^ *v3;
      if (v2) {
        break;
      }
      --v4;
      ++v3;
    }
    while (v5);
  }
  return v2 & 1;
}

uint64_t sub_1C0401408(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C040146C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1C1520A9C();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  unint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C1520A9C() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t FeedCursorContainer.init(optionalCursor:)(unint64_t result)
{
  if (!result) {
    return 0xF000000000000007;
  }
  return result;
}

uint64_t FeedCursorContainer.publishDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFC7E8AC(a1, &qword_1EB93C670, &qword_1EB93C2F8, a2);
}

uint64_t FeedCursorContainer.serviceState.getter(unint64_t a1)
{
  sub_1C0401FD0(a1);
  return swift_retain();
}

uint64_t FeedCursorContainer.canExpand.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  FeedCursorContainer.feedMode.getter(a1, a2, a3, &v7);
  if (v7 == 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v5 & 1) == 0)
    {
      if (a1 < 0)
      {
        return 1;
      }
      else
      {
        swift_retain();
        char v6 = FeedCursor.canExpand.getter();
        swift_release();
        return v6 & 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C0401638(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C0120D54;
  return sub_1C019C72C();
}

Swift::Int_optional __swiftcall FeedCursorContainer.depthOfKnownGroup(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v4 = (void *)sub_1C04017A4(v1);
  char v5 = sub_1C040146C(countAndFlagsBits, (uint64_t)object, v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t v6 = 0;
  }
  else
  {
    char v7 = (void *)sub_1C04019B8();
    uint64_t v6 = sub_1C0295EC8(countAndFlagsBits, (uint64_t)object, v7);
    char v9 = v8;
    Swift::Int v10 = swift_bridgeObjectRelease();
    if (v9)
    {
      Swift::Bool v11 = 1;
      goto LABEL_7;
    }
    if (__OFADD__(v6++, 1))
    {
      __break(1u);
      goto LABEL_9;
    }
  }
  Swift::Bool v11 = 0;
LABEL_7:
  Swift::Int v10 = v6;
LABEL_9:
  result.value = v10;
  result.is_nil = v11;
  return result;
}

uint64_t sub_1C04017A4(uint64_t a1)
{
  if (a1 < 0)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for FeedDeferredCursorGroup();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for FeedCursorGroup();
  }
  uint64_t v2 = sub_1C151ED5C();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_1C035E7C8((void (*)(char *, char *))sub_1C04020F8, KeyPath, v2, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C04019B8()
{
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for FeedDatabaseGroup();
  uint64_t v1 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = sub_1C035E7C8((void (*)(char *, char *))sub_1C040205C, KeyPath, v1, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v3);
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C0401ADC(uint64_t a1)
{
  if (a1 < 0)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for FeedDeferredCursorGroup();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for FeedCursorGroup();
  }
  uint64_t v2 = sub_1C151ED5C();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1C035E7C8((void (*)(char *, char *))sub_1C04020F8, KeyPath, v2, AssociatedTypeWitness, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C0401DBC()
{
  uint64_t v1 = sub_1BFE16970(*v0);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0401E00@<X0>(void *a1@<X8>)
{
  return FeedCursorContainer.feedJournal.getter(*v1, a1);
}

uint64_t static FeedCursorContainer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    if (a2 < 0)
    {
      uint64_t v6 = a1 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v7 = a2 & 0x7FFFFFFFFFFFFFFFLL;
      type metadata accessor for FeedDeferredCursor();
      swift_retain();
      swift_retain();
      char v4 = static FeedDeferredCursor.== infix(_:_:)(v6, v7);
      goto LABEL_7;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedCursor();
    swift_retain();
    swift_retain();
    char v4 = static FeedCursor.== infix(_:_:)(a1, a2);
LABEL_7:
    char v5 = v4;
    swift_release();
    swift_release();
    return v5 & 1;
  }
  char v5 = 0;
  return v5 & 1;
}

uint64_t sub_1C0401ECC(uint64_t *a1, uint64_t *a2)
{
  return static FeedCursorContainer.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0401EE0()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t sub_1C0401F34(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1BFC542F4;
  return sub_1C0401638(a1);
}

uint64_t sub_1C0401FD0(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    a1 &= ~0x8000000000000000;
    uint64_t v1 = &qword_1EB93C600;
  }
  else
  {
    uint64_t v1 = (uint64_t *)(*(void *)a1 + 264);
  }
  return *(void *)(a1 + *v1);
}

uint64_t sub_1C0402018@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedDatabaseGroup.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0402044()
{
  return 16;
}

__n128 sub_1C0402050(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C040205C()
{
  return swift_release();
}

uint64_t sub_1C04020B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return keypath_get_2Tm(a1, a2, (uint64_t (*)(void, void, void))type metadata accessor for FeedDeferredCursorGroup, (uint64_t (*)(uint64_t))sub_1C135E0D4, a3);
}

uint64_t sub_1C04020E0()
{
  return 16;
}

__n128 sub_1C04020EC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C04020F8()
{
  return swift_getAtKeyPath();
}

uint64_t sub_1C0402124@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return keypath_get_2Tm(a1, a2, (uint64_t (*)(void, void, void))type metadata accessor for FeedCursorGroup, (uint64_t (*)(uint64_t))FeedCursorGroup.identifier.getter, a3);
}

uint64_t keypath_get_2Tm@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(void, void, void)@<X3>, uint64_t (*a4)(uint64_t)@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7 = a3(0, *(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  uint64_t result = a4(v7);
  *a5 = result;
  a5[1] = v9;
  return result;
}

uint64_t sub_1C04021A0()
{
  return 16;
}

__n128 sub_1C04021AC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t static FormatItemNodeActionBinding.== infix(_:_:)(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  __int16 v3 = *((_WORD *)a1 + 12);
  uint64_t v4 = *((void *)a2 + 2);
  __int16 v5 = *((_WORD *)a2 + 12);
  long long v10 = *a1;
  uint64_t v11 = v2;
  __int16 v12 = v3;
  long long v7 = *a2;
  uint64_t v8 = v4;
  __int16 v9 = v5;
  return _s8NewsFeed20FormatCommandBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v10, (uint64_t)&v7) & 1;
}

uint64_t sub_1C0402214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatItemNodeActionBinding.init(from:)(a1, a2);
}

uint64_t sub_1C040222C(void *a1)
{
  return FormatItemNodeActionBinding.encode(to:)(a1);
}

uint64_t sub_1C0402244(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  __int16 v3 = *((_WORD *)a1 + 12);
  uint64_t v4 = *((void *)a2 + 2);
  __int16 v5 = *((_WORD *)a2 + 12);
  long long v10 = *a1;
  uint64_t v11 = v2;
  __int16 v12 = v3;
  long long v7 = *a2;
  uint64_t v8 = v4;
  __int16 v9 = v5;
  return static FormatCommandBinding.== infix(_:_:)(&v10, &v7) & 1;
}

unint64_t sub_1C04022A0(uint64_t a1)
{
  unint64_t result = sub_1C04022C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04022C8()
{
  unint64_t result = qword_1EA19B358;
  if (!qword_1EA19B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B358);
  }
  return result;
}

unint64_t sub_1C040231C(void *a1)
{
  a1[1] = sub_1C0402354();
  a1[2] = sub_1C04023A8();
  unint64_t result = sub_1C04023FC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0402354()
{
  unint64_t result = qword_1EB8681F8;
  if (!qword_1EB8681F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8681F8);
  }
  return result;
}

unint64_t sub_1C04023A8()
{
  unint64_t result = qword_1EB8681F0;
  if (!qword_1EB8681F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8681F0);
  }
  return result;
}

unint64_t sub_1C04023FC()
{
  unint64_t result = qword_1EA19B360;
  if (!qword_1EA19B360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B360);
  }
  return result;
}

uint64_t destroy for FormatItemNodeActionBinding(uint64_t a1)
{
  return sub_1C04024A8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(unsigned char *)(a1 + 25), (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
}

uint64_t sub_1C04024A8(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      unint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      unint64_t result = a7();
      break;
    case 6u:
      unint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      unint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatItemNodeActionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1C04024A8(*(void *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatItemNodeActionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1C04024A8(*(void *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned int v11 = *(unsigned __int8 *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  char v12 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)(a1 + 25) = v6;
  sub_1C04024A8(v8, v9, v10, v11, v12, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  return a1;
}

uint64_t assignWithTake for FormatItemNodeActionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned int v9 = *(unsigned __int8 *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1C04024A8(v5, v7, v6, v9, v8, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  return a1;
}

ValueMetadata *type metadata accessor for FormatItemNodeActionBinding()
{
  return &type metadata for FormatItemNodeActionBinding;
}

uint64_t sub_1C040276C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_1C151829C();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  sub_1BFCF7A3C(0, (unint64_t *)&unk_1EB863F30, (uint64_t (*)(uint64_t))sub_1C0403070, MEMORY[0x1E4FAB160]);
  v3[9] = swift_task_alloc();
  uint64_t v5 = sub_1C151808C();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C04028E8, 0, 0);
}

uint64_t sub_1C04028E8()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BFE71F8C(v4);
  v0[13] = v5;
  swift_bridgeObjectRelease();
  char v8 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C0402A18;
  return v8(v5, v2, v3);
}

uint64_t sub_1C0402A18(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1C0402E48;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_1C0402B34;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0402B34()
{
  unint64_t v1 = *(void *)(v0 + 120);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C0062EF4(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v19 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 56) + 16);
  unint64_t v20 = v1 & 0xC000000000000001;
  uint64_t v18 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 120) + 32;
  uint64_t v21 = v2;
  do
  {
    if (v20)
    {
      uint64_t v5 = MEMORY[0x1C18C7CB0](v4, *(void *)(v0 + 120));
    }
    else
    {
      uint64_t v5 = *(void *)(v17 + 8 * v4);
      swift_unknownObjectRetain();
    }
    *(void *)(v0 + 16) = v5;
    uint64_t v6 = qword_1EB863CF0;
    swift_unknownObjectRetain();
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 48);
    uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB863CD0);
    (*v19)(v7, v9, v8);
    uint64_t v10 = (void *)swift_task_alloc();
    *uint64_t v10 = sub_1C0403070();
    swift_getKeyPath();
    swift_task_dealloc();
    sub_1C151947C();
    sub_1C151807C();
    swift_unknownObjectRelease();
    uint64_t v11 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C0062EF4(0, *(void *)(v22 + 16) + 1, 1);
      uint64_t v11 = v22;
    }
    unint64_t v13 = *(void *)(v11 + 16);
    unint64_t v12 = *(void *)(v11 + 24);
    if (v13 >= v12 >> 1)
    {
      sub_1C0062EF4(v12 > 1, v13 + 1, 1);
      uint64_t v11 = v22;
    }
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 80);
    ++v4;
    *(void *)(v11 + 16) = v13 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v11+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v13, v14, v15);
    uint64_t v22 = v11;
  }
  while (v21 != v4);
  swift_bridgeObjectRelease();
LABEL_18:
  **(void **)(v0 + 24) = v11;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1C0402E48()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0402ED0(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1BFCF7A3C(0, &qword_1EB85AB60, (uint64_t (*)(uint64_t))sub_1C0064EB4, MEMORY[0x1E4FAB088]);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1C1518FDC();
}

uint64_t sub_1C0402F84()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0402FC4(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1BFC542F4;
  return sub_1C040276C(a1, v5, v4);
}

unint64_t sub_1C0403070()
{
  unint64_t result = qword_1EB8901B0;
  if (!qword_1EB8901B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8901B0);
  }
  return result;
}

uint64_t sub_1C04030CC()
{
  return 8;
}

void *sub_1C04030D8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of FormatEquationOperandType.optionIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FormatEquationOperandType.init(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FormatEquationOperandType.value(contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1C0403134()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t static FormatSlotItemTagFilterNotCondition.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v4 = *a2;
  unint64_t v5 = v2;
  return static FormatSlotItemTagFilterCondition.== infix(_:_:)(&v5, &v4) & 1;
}

unint64_t FormatSlotItemTagFilterNotCondition.condition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFF58F10(v2);
}

unint64_t sub_1C0403184(uint64_t a1)
{
  unint64_t result = sub_1C04031AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04031AC()
{
  unint64_t result = qword_1EA19B380;
  if (!qword_1EA19B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B380);
  }
  return result;
}

unint64_t sub_1C0403200(void *a1)
{
  a1[1] = sub_1C0403238();
  a1[2] = sub_1C040328C();
  unint64_t result = sub_1C04032E0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0403238()
{
  unint64_t result = qword_1EA19B388;
  if (!qword_1EA19B388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B388);
  }
  return result;
}

unint64_t sub_1C040328C()
{
  unint64_t result = qword_1EA19B390;
  if (!qword_1EA19B390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B390);
  }
  return result;
}

unint64_t sub_1C04032E0()
{
  unint64_t result = qword_1EA19B398;
  if (!qword_1EA19B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B398);
  }
  return result;
}

uint64_t sub_1C0403334@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatSlotItemTagFilterNotCondition.init(from:)(a1, a2);
}

uint64_t sub_1C040334C(void *a1)
{
  return FormatSlotItemTagFilterNotCondition.encode(to:)(a1);
}

uint64_t sub_1C0403364(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v4 = *a2;
  unint64_t v5 = v2;
  return static FormatSlotItemTagFilterCondition.== infix(_:_:)(&v5, &v4) & 1;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterNotCondition()
{
  return &type metadata for FormatSlotItemTagFilterNotCondition;
}

id FCSportsProviding.navigationBarBackgroundColor.getter()
{
  if (objc_msgSend(v0, sel_isSportsEvent))
  {
    id v1 = objc_msgSend(self, sel_clearColor);
    return v1;
  }
  else
  {
    id v3 = objc_msgSend(v0, sel_asSports);
    if (v3
      && (id v4 = objc_msgSend(v3, sel_sportsTheme), swift_unknownObjectRelease(), v4)
      && (id v5 = objc_msgSend(v4, sel_sportsPrimaryColor),
          swift_unknownObjectRelease(),
          v5))
    {
      id v6 = objc_msgSend(v5, sel_ne_color);

      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      id v8 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      v16[4] = sub_1C029539C;
      v16[5] = v7;
      v16[0] = MEMORY[0x1E4F143A8];
      v16[1] = 1107296256;
      void v16[2] = sub_1BFDF2404;
      v16[3] = &block_descriptor_25;
      uint64_t v9 = _Block_copy(v16);
      id v10 = v6;
      id v11 = objc_msgSend(v8, sel_initWithDynamicProvider_, v9);
      _Block_release(v9);

      swift_release();
      return v11;
    }
    else
    {
      unint64_t v12 = self;
      id v13 = objc_msgSend(v12, sel_secondarySystemBackgroundColor);
      id v14 = objc_msgSend(v12, sel_systemBackgroundColor);
      id v15 = objc_msgSend(v12, sel_ts_dynamicColor_withDarkStyleVariant_, v13, v14);

      return v15;
    }
  }
}

id FCSportsProviding.navigationBarForegroundColor.getter()
{
  if (objc_msgSend(v0, sel_isSportsEvent))
  {
    id v1 = objc_msgSend(self, sel_whiteColor);
    return v1;
  }
  else
  {
    id v3 = FCSportsProviding.navigationBarBackgroundColor.getter();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    id v5 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    void v9[4] = sub_1C04037D8;
    v9[5] = v4;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    v9[2] = sub_1BFDF2404;
    void v9[3] = &block_descriptor_6_0;
    id v6 = _Block_copy(v9);
    id v7 = v3;
    id v8 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
    _Block_release(v6);

    swift_release();
    return v8;
  }
}

uint64_t sub_1C0403750(uint64_t a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  uint64_t v3 = sub_1C151F9FC();

  return v3;
}

uint64_t sub_1C04037A0()
{
  return swift_deallocObject();
}

uint64_t sub_1C04037D8(uint64_t a1)
{
  return sub_1C0403750(a1, *(id *)(v1 + 16));
}

uint64_t FormatBindingTextExpressionLogic.Length.value.getter()
{
  return *(void *)v0;
}

void FormatBindingTextExpressionLogic.Length.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t sub_1C04037FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.Length.init(from:)(a1, a2);
}

uint64_t sub_1C0403814(void *a1)
{
  return FormatBindingTextExpressionLogic.Length.encode(to:)(a1);
}

uint64_t FormatBindingTextExpressionLogic.Compare.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FormatBindingTextExpressionLogic.Compare.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_1C0403870(void *a1)
{
  return FormatBindingTextExpressionLogic.Compare.encode(to:)(a1);
}

uint64_t FormatBindingTextExpressionLogic.Binding.binding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v8 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 48) = v8;
  char v9 = *(unsigned char *)(v1 + 49);
  *(unsigned char *)(a1 + 49) = v9;
  return sub_1BFF2A99C(v2, v3, v4, v5, v6, v7, v8, v9);
}

void FormatBindingTextExpressionLogic.Binding.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 50);
}

uint64_t sub_1C04038C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.Binding.init(from:)(a1, a2);
}

uint64_t sub_1C04038E0(void *a1)
{
  return FormatBindingTextExpressionLogic.Binding.encode(to:)(a1);
}

uint64_t _s8NewsFeed32FormatBindingTextExpressionLogicO0D0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 50);
  __int16 v4 = *(_WORD *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 50);
  long long v6 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v6;
  void v16[2] = *(_OWORD *)(a1 + 32);
  __int16 v17 = v2;
  long long v7 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v7;
  uint64_t v14[2] = *(_OWORD *)(a2 + 32);
  __int16 v15 = v4;
  if (_s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v16, (uint64_t)v14))
  {
    LOBYTE(v16[0]) = v3;
    LOBYTE(v14[0]) = v5;
    unint64_t v8 = FormatOperator.rawValue.getter();
    uint64_t v10 = v9;
    if (v8 == FormatOperator.rawValue.getter() && v10 == v11) {
      char v12 = 1;
    }
    else {
      char v12 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s8NewsFeed32FormatBindingTextExpressionLogicO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  int v6 = *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  unint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  unsigned int v11 = *(unsigned __int16 *)(a2 + 48) | (*(unsigned __int8 *)(a2 + 50) << 16);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  long long v67 = v5;
  long long v68 = v4;
  switch(*(unsigned __int8 *)(a1 + 50) >> 5)
  {
    case 1:
      if ((v11 & 0xE00000) != 0x200000) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 2:
      if ((v11 & 0xE00000) != 0x400000) {
        goto LABEL_19;
      }
LABEL_16:
      uint64_t v63 = *(void *)a1;
      if (v2 == v7 && v3 == v8) {
        char v15 = 1;
      }
      else {
        char v15 = sub_1C1520A9C();
      }
      uint64_t v61 = v8;
      uint64_t v62 = v13;
      uint64_t v65 = v10;
      uint64_t v66 = v12;
      sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
      unint64_t v59 = v9;
      uint64_t v45 = *((void *)&v67 + 1);
      unint64_t v44 = v67;
      uint64_t v47 = *((void *)&v68 + 1);
      uint64_t v46 = v68;
      sub_1BFF2B090(v63, v3, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
      uint64_t v48 = v63;
      uint64_t v49 = v3;
      goto LABEL_56;
    case 3:
      if ((v11 & 0xE00000) != 0x600000) {
        goto LABEL_20;
      }
      if (v2 != v7) {
        goto LABEL_21;
      }
      LOBYTE(v72[0]) = *(void *)(a1 + 8);
      LOBYTE(v69[0]) = v8;
      unint64_t v58 = FormatOperator.rawValue.getter();
      uint64_t v25 = v24;
      if (v58 == FormatOperator.rawValue.getter() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        sub_1BFF00C44(v2, v3, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        uint64_t v27 = v2;
        uint64_t v28 = v8;
        unint64_t v29 = v9;
        uint64_t v30 = v10;
        uint64_t v31 = v13;
        uint64_t v32 = v12;
        unsigned int v33 = v11;
        goto LABEL_40;
      }
      char v60 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF00C44(v2, v3, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
      sub_1BFF00C44(v2, v8, v9, v10, v13, v12, v11);
      if (v60) {
        goto LABEL_64;
      }
      goto LABEL_23;
    case 4:
      if ((v11 & 0xE00000) != 0x800000) {
        goto LABEL_19;
      }
      unint64_t v56 = v5;
      if ((v2 != v7 || v3 != v8) && (sub_1C1520A9C() & 1) == 0)
      {
        sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
        sub_1BFF2B090(v2, v3, v56, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        sub_1BFF00C44(v2, v3, v56, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        uint64_t v18 = v7;
        unint64_t v20 = v9;
        uint64_t v19 = v8;
        uint64_t v21 = v10;
        uint64_t v23 = v12;
        uint64_t v22 = v13;
        goto LABEL_22;
      }
      LOBYTE(v72[0]) = v56;
      LOBYTE(v69[0]) = v9;
      unint64_t v53 = FormatOperator.rawValue.getter();
      uint64_t v57 = v16;
      if (v53 == FormatOperator.rawValue.getter() && v57 == v17) {
        char v54 = 1;
      }
      else {
        char v54 = sub_1C1520A9C();
      }
      sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
      sub_1BFF2B090(v2, v3, v56, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
      sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
      sub_1BFF2B090(v2, v3, v56, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF00C44(v2, v3, v56, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
      sub_1BFF00C44(v7, v8, v9, v10, v13, v12, v11);
      sub_1BFF00C44(v7, v8, v9, v10, v13, v12, v11);
      sub_1BFF00C44(v2, v3, v56, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
      if ((v54 & 1) == 0) {
        goto LABEL_23;
      }
LABEL_64:
      char v15 = 1;
      return v15 & 1;
    case 5:
      if ((v11 & 0xE00000) == 0xA00000)
      {
        v72[0] = *(void *)a1;
        v72[1] = v3;
        long long v73 = v5;
        long long v74 = v4;
        __int16 v75 = v6;
        char v76 = BYTE2(v6) & 0x1F;
        v69[0] = v7;
        v69[1] = v8;
        v69[2] = v9;
        v69[3] = v10;
        v69[4] = v13;
        v69[5] = v12;
        __int16 v70 = v11;
        char v71 = BYTE2(v11) & 0x1F;
        sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
        sub_1BFF2B090(v2, v3, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
        sub_1BFF2B090(v2, v3, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        char v34 = _s8NewsFeed32FormatBindingTextExpressionLogicO0D0V2eeoiySbAE_AEtFZ_0((uint64_t)v72, (uint64_t)v69);
        uint64_t v35 = v2;
        uint64_t v64 = v2;
        char v15 = v34;
        sub_1BFF00C44(v35, v3, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        sub_1BFF00C44(v7, v8, v9, v10, v13, v12, v11);
        sub_1BFF00C44(v7, v8, v9, v10, v13, v12, v11);
        uint64_t v36 = v64;
        uint64_t v37 = v3;
        uint64_t v38 = v68;
        uint64_t v40 = *((void *)&v67 + 1);
        unint64_t v39 = v67;
        uint64_t v41 = *((void *)&v68 + 1);
        unsigned int v42 = v6;
        goto LABEL_57;
      }
      sub_1BFF2A99C(v2, v3, v5, *((uint64_t *)&v5 + 1), v4, *((uint64_t *)&v4 + 1), v6, SBYTE1(v6));
      goto LABEL_20;
    case 6:
      if ((unint64_t)v5 | v3 | v2 | (unint64_t)v4 | *((void *)&v5 + 1) | *((void *)&v4 + 1)
        || v6 != 12582912)
      {
        if ((v11 & 0xE00000) == 0xC00000)
        {
          BOOL v50 = (v11 & 0xFFFFFF) == 0xC00000 && v7 == 1;
          if (v50 && (v9 | v8 | v10 | v13 | v12) == 0)
          {
            char v15 = 1;
            sub_1BFF00C44(1, 0, v5, *((uint64_t *)&v5 + 1), v4, *((uint64_t *)&v4 + 1), 0xC00000u);
            uint64_t v36 = 1;
            uint64_t v37 = 0;
            unint64_t v39 = v9;
            uint64_t v40 = v10;
            uint64_t v38 = v13;
            uint64_t v41 = v12;
            unsigned int v42 = 12582912;
            goto LABEL_57;
          }
        }
        goto LABEL_20;
      }
      BOOL v43 = (v11 & 0xE00000) == 0xC00000 && (v9 | v8 | v7 | v10 | v13 | v12) == 0;
      if (!v43 || (v11 & 0xFFFFFF) != 0xC00000) {
        goto LABEL_20;
      }
      sub_1BFF00C44(0, 0, v5, *((uint64_t *)&v5 + 1), v4, *((uint64_t *)&v4 + 1), 0xC00000u);
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      unint64_t v29 = v9;
      uint64_t v30 = v10;
      uint64_t v31 = v13;
      uint64_t v32 = v12;
      unsigned int v33 = 12582912;
LABEL_40:
      sub_1BFF00C44(v27, v28, v29, v30, v31, v32, v33);
      char v15 = 1;
      break;
    default:
      if ((v11 & 0xFFFFFF) >= 0x200000)
      {
LABEL_19:
        swift_bridgeObjectRetain();
LABEL_20:
        sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
LABEL_21:
        sub_1BFF00C44(v2, v3, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        uint64_t v18 = v7;
        uint64_t v19 = v8;
        unint64_t v20 = v9;
        uint64_t v21 = v10;
        uint64_t v22 = v13;
        uint64_t v23 = v12;
LABEL_22:
        sub_1BFF00C44(v18, v19, v20, v21, v22, v23, v11);
LABEL_23:
        char v15 = 0;
      }
      else
      {
        uint64_t v55 = *(void *)(a1 + 8);
        if (v2 == v7 && v3 == v8)
        {
          uint64_t v14 = *(void *)a1;
          char v15 = 1;
        }
        else
        {
          uint64_t v14 = *(void *)a1;
          char v15 = sub_1C1520A9C();
        }
        uint64_t v61 = v8;
        uint64_t v62 = v13;
        uint64_t v65 = v10;
        uint64_t v66 = v12;
        sub_1BFF2B090(v7, v8, v9, v10, v13, v12, v11);
        unint64_t v59 = v9;
        uint64_t v45 = *((void *)&v67 + 1);
        unint64_t v44 = v67;
        uint64_t v47 = *((void *)&v68 + 1);
        uint64_t v46 = v68;
        sub_1BFF2B090(v14, v55, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v6);
        uint64_t v48 = v14;
        uint64_t v49 = v55;
LABEL_56:
        sub_1BFF00C44(v48, v49, v44, v45, v46, v47, v6);
        uint64_t v36 = v7;
        unint64_t v39 = v59;
        uint64_t v37 = v61;
        uint64_t v40 = v65;
        uint64_t v41 = v66;
        uint64_t v38 = v62;
        unsigned int v42 = v11;
LABEL_57:
        sub_1BFF00C44(v36, v37, v39, v40, v38, v41, v42);
      }
      break;
  }
  return v15 & 1;
}

uint64_t _s8NewsFeed32FormatBindingTextExpressionLogicO6LengthV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 == *a2)
  {
    unint64_t v2 = FormatOperator.rawValue.getter();
    uint64_t v4 = v3;
    if (v2 == FormatOperator.rawValue.getter() && v4 == v5) {
      char v6 = 1;
    }
    else {
      char v6 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t _s8NewsFeed32FormatBindingTextExpressionLogicO7CompareV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = 0, (sub_1C1520A9C() & 1) != 0))
  {
    unint64_t v4 = FormatOperator.rawValue.getter();
    uint64_t v6 = v5;
    if (v4 == FormatOperator.rawValue.getter() && v6 == v7) {
      char v3 = 1;
    }
    else {
      char v3 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

unint64_t sub_1C04044EC(uint64_t a1)
{
  unint64_t result = sub_1C0404514();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0404514()
{
  unint64_t result = qword_1EA19B3A0;
  if (!qword_1EA19B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3A0);
  }
  return result;
}

uint64_t sub_1C0404568(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0404A7C(a1, a2, a3, (uint64_t (*)(void))sub_1C04045A8, (uint64_t (*)(void))sub_1C04045FC, (uint64_t (*)(void))sub_1C0404650);
}

unint64_t sub_1C04045A8()
{
  unint64_t result = qword_1EA19B3A8;
  if (!qword_1EA19B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3A8);
  }
  return result;
}

unint64_t sub_1C04045FC()
{
  unint64_t result = qword_1EA19B3B0;
  if (!qword_1EA19B3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3B0);
  }
  return result;
}

unint64_t sub_1C0404650()
{
  unint64_t result = qword_1EA19B3B8;
  if (!qword_1EA19B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3B8);
  }
  return result;
}

unint64_t sub_1C04046A4(uint64_t a1)
{
  unint64_t result = sub_1C04046CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04046CC()
{
  unint64_t result = qword_1EA19B3C0;
  if (!qword_1EA19B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3C0);
  }
  return result;
}

uint64_t sub_1C0404720(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0404A7C(a1, a2, a3, (uint64_t (*)(void))sub_1BFCB7DE8, (uint64_t (*)(void))sub_1C0404760, (uint64_t (*)(void))sub_1C04047B4);
}

unint64_t sub_1C0404760()
{
  unint64_t result = qword_1EB85ED68;
  if (!qword_1EB85ED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED68);
  }
  return result;
}

unint64_t sub_1C04047B4()
{
  unint64_t result = qword_1EA19B3C8;
  if (!qword_1EA19B3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3C8);
  }
  return result;
}

unint64_t sub_1C0404808(uint64_t a1)
{
  unint64_t result = sub_1C0404830();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0404830()
{
  unint64_t result = qword_1EA19B3D0;
  if (!qword_1EA19B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3D0);
  }
  return result;
}

uint64_t sub_1C0404884(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0404A7C(a1, a2, a3, (uint64_t (*)(void))sub_1C04048C4, (uint64_t (*)(void))sub_1C0404918, (uint64_t (*)(void))sub_1C040496C);
}

unint64_t sub_1C04048C4()
{
  unint64_t result = qword_1EB8697C8;
  if (!qword_1EB8697C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8697C8);
  }
  return result;
}

unint64_t sub_1C0404918()
{
  unint64_t result = qword_1EB8697C0;
  if (!qword_1EB8697C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8697C0);
  }
  return result;
}

unint64_t sub_1C040496C()
{
  unint64_t result = qword_1EA19B3D8;
  if (!qword_1EA19B3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3D8);
  }
  return result;
}

unint64_t sub_1C04049C0(uint64_t a1)
{
  unint64_t result = sub_1C04049E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04049E8()
{
  unint64_t result = qword_1EA19B3E0;
  if (!qword_1EA19B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3E0);
  }
  return result;
}

uint64_t sub_1C0404A3C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0404A7C(a1, a2, a3, (uint64_t (*)(void))sub_1BFD826A0, (uint64_t (*)(void))sub_1C0068E1C, (uint64_t (*)(void))sub_1C0404AD0);
}

uint64_t sub_1C0404A7C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0404AD0()
{
  unint64_t result = qword_1EA19B3E8;
  if (!qword_1EA19B3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3E8);
  }
  return result;
}

uint64_t destroy for FormatBindingTextExpressionLogic(uint64_t a1)
{
  return sub_1BFF00C44(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16));
}

uint64_t initializeWithCopy for FormatBindingTextExpressionLogic(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  int v9 = *(unsigned __int8 *)(a2 + 50);
  int v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1BFF2B090(*(void *)a2, v4, v5, v6, v7, v8, v10 | (v9 << 16));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 50) = v9;
  *(_WORD *)(a1 + 48) = v10;
  return a1;
}

uint64_t assignWithCopy for FormatBindingTextExpressionLogic(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  int v9 = *(unsigned __int8 *)(a2 + 50);
  int v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1BFF2B090(*(void *)a2, v4, v5, v6, v7, v8, v10 | (v9 << 16));
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  unint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  unsigned int v17 = *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 50) = v9;
  sub_1BFF00C44(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormatBindingTextExpressionLogic(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 50);
  __int16 v4 = *(_WORD *)(a2 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  unsigned int v11 = *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 50) = v3;
  sub_1BFF00C44(v5, v7, v6, v8, v9, v10, v11);
  return a1;
}

uint64_t sub_1C0404D34(uint64_t a1)
{
  unsigned __int16 v1 = *(unsigned __int8 *)(a1 + 50);
  if ((unsigned __int16)(v1 >> 6) <= 2u) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_1C0404D54(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 48);
  uint64_t result = a1 + 48;
  *(unsigned char *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x1F;
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t sub_1C0404D70(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    int v2 = *(unsigned __int16 *)(result + 48);
    result += 48;
    int v3 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF07FF | (a2 << 21);
    *(_WORD *)uint64_t result = v2 & 0x7FF;
    *(unsigned char *)(result + 2) = BYTE2(v3);
  }
  else
  {
    *(void *)uint64_t result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    *(unsigned char *)(result + 50) = -64;
    *(_WORD *)(result + 48) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic()
{
  return &type metadata for FormatBindingTextExpressionLogic;
}

uint64_t getEnumTagSinglePayload for FormatLayoutExpression(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 0xC;
  int v5 = v3 - 12;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic.Length()
{
  return &type metadata for FormatBindingTextExpressionLogic.Length;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic.Compare()
{
  return &type metadata for FormatBindingTextExpressionLogic.Compare;
}

uint64_t initializeWithCopy for FormatBindingTextExpressionLogic.Binding(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 49);
  char v11 = *(unsigned char *)(a2 + 48);
  sub_1BFF2A99C(*(void *)a2, v5, v6, v7, v8, v9, v11, v10);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 49) = v10;
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

uint64_t assignWithCopy for FormatBindingTextExpressionLogic.Binding(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 49);
  char v11 = *(unsigned char *)(a2 + 48);
  sub_1BFF2A99C(*(void *)a2, v5, v6, v7, v8, v9, v11, v10);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  unint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  char v18 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v11;
  char v19 = *(unsigned char *)(a1 + 49);
  *(unsigned char *)(a1 + 49) = v10;
  sub_1BFF0084C(v12, v13, v14, v15, v16, v17, v18, v19);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

uint64_t assignWithTake for FormatBindingTextExpressionLogic.Binding(uint64_t a1, uint64_t a2)
{
  __int16 v4 = *(_WORD *)(a2 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v12 = *(unsigned char *)(a1 + 49);
  char v13 = *(unsigned char *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v4;
  sub_1BFF0084C(v5, v6, v7, v8, v9, v10, v13, v12);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindingTextExpressionLogic.Binding(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1F3 && *(unsigned char *)(a1 + 51)) {
    return (*(_DWORD *)a1 + 499);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1 | (2 * *(unsigned __int8 *)(a1 + 49))) ^ 0x1FF;
  if (v3 >= 0x1F2) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatBindingTextExpressionLogic.Binding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1F2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 499;
    if (a3 >= 0x1F3) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1F3) {
      *(unsigned char *)(result + 51) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)uint64_t result = 0u;
      *(unsigned char *)(result + 48) = 8 * (-(char)a2 & 1);
      *(unsigned char *)(result + 49) = -a2 >> 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic.Binding()
{
  return &type metadata for FormatBindingTextExpressionLogic.Binding;
}

uint64_t sub_1C04050C0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatOption();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (void *)((char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0181BEC(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (void *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    v19[1] = v1;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v11, 0);
    uint64_t v12 = v20;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v14 = *(void *)(v4 + 72);
    do
    {
      sub_1C019FFF0(v13, (uint64_t)v6);
      sub_1C0AF5D04(v6, v10);
      uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
      uint64_t v20 = v12;
      unint64_t v17 = *(void *)(v12 + 16);
      unint64_t v16 = *(void *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C05F62D0(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v20;
      }
      *(void *)(v12 + 16) = v17 + 1;
      sub_1C0100634((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v17);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t FormatCustomNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatCustomNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FormatCustomNodeStyle.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNodeStyle.__allocating_init(identifier:class:ignoresSmartInvertColors:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  *(unsigned char *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = a6;
  swift_beginAccess();
  *(void *)(v14 + 64) = a7;
  return v14;
}

uint64_t FormatCustomNodeStyle.init(identifier:class:ignoresSmartInvertColors:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(unsigned char *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a6;
  swift_beginAccess();
  *(void *)(v7 + 64) = a7;
  return v7;
}

uint64_t FormatCustomNodeStyle.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatCustomNodeStyle.init(from:)(a1);
  return v2;
}

uint64_t sub_1C0405698(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C04056E0(unsigned __int8 *a1, char *a2)
{
  return sub_1C1486178(*a1, *a2);
}

uint64_t sub_1C04056EC()
{
  return sub_1C015CCE4();
}

uint64_t sub_1C04056F4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04057DC()
{
  return sub_1C044E9BC();
}

uint64_t sub_1C04057E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0406D70();
  *a1 = result;
  return result;
}

void sub_1C0405814(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7373616C63;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000018;
      a1[1] = 0x80000001C1600480;
      break;
    case 3:
      *a1 = 0x736E6F6974706FLL;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x726F7463656C6573;
      a1[1] = 0xE900000000000073;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C04058EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0406D70();
  *a1 = result;
  return result;
}

uint64_t sub_1C0405914(uint64_t a1)
{
  unint64_t v2 = sub_1BFCF0608();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0405950(uint64_t a1)
{
  unint64_t v2 = sub_1BFCF0608();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C040598C(uint64_t a1)
{
  uint64_t v105 = a1;
  id v106 = 0;
  v108[6] = *MEMORY[0x1E4F143B8];
  uint64_t v97 = *v1;
  uint64_t v2 = type metadata accessor for FormatOption();
  uint64_t v91 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v102 = (uint64_t *)((char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v89 = v1;
  uint64_t v4 = v1[8];
  int64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v92 = sub_1C0EE0C28(0, v5, 0, MEMORY[0x1E4FBC860]);
  uint64_t v90 = sub_1C0EE0B08(0, v5, 0, v6);
  uint64_t v7 = *(void **)(v4 + 16);
  uint64_t v93 = v4;
  uint64_t v96 = v7;
  if (!v7)
  {
LABEL_31:
    sub_1BFCF065C(0, &qword_1EB88D010, (uint64_t (*)(void))sub_1C0406DBC, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    uint64_t v43 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void *)(v43 + 16);
    uint64_t v105 = v43;
    if (v44)
    {
      uint64_t v45 = (void *)(v43 + 56);
      uint64_t v46 = v92;
      do
      {
        uint64_t v48 = *(v45 - 3);
        uint64_t v47 = *(v45 - 2);
        char v49 = *((unsigned char *)v45 - 8);
        uint64_t v50 = *v45;
        unint64_t v51 = v46[2];
        unint64_t v52 = v46[3];
        unint64_t v53 = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v51 >= v52 >> 1) {
          uint64_t v46 = sub_1C0EE0C28((void *)(v52 > 1), v51 + 1, 1, v53);
        }
        else {
          uint64_t v46 = v53;
        }
        v45 += 5;
        void v46[2] = v51 + 1;
        char v54 = &v46[4 * v51];
        v54[4] = v48;
        v54[5] = v47;
        *((unsigned char *)v54 + 48) = v49;
        v54[7] = v50;
        --v44;
      }
      while (v44);
    }
    else
    {
      uint64_t v46 = v92;
    }
    uint64_t v92 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v101 = v92[2];
    if (!v101)
    {
      uint64_t v85 = (uint64_t)v89;
      swift_retain();
      uint64_t v56 = v85;
      swift_bridgeObjectRelease();
      return v56;
    }
    uint64_t v100 = v92 + 4;
    uint64_t v55 = (uint64_t)v89;
    swift_retain();
    uint64_t v56 = v55;
    swift_bridgeObjectRetain();
    uint64_t v57 = 0;
    while (1)
    {
      uint64_t v65 = v56;
      uint64_t v66 = &v100[4 * v57];
      uint64_t v67 = v66[1];
      uint64_t v68 = v66[3];
      LODWORD(v61) = *((unsigned __int8 *)v66 + 16);
      swift_beginAccess();
      if (v61 == 2) {
        LODWORD(v61) = *(unsigned __int8 *)(v56 + 48);
      }
      uint64_t v69 = *(void *)(v56 + 16);
      __int16 v70 = *(void **)(v56 + 24);
      uint64_t v71 = *(void *)(v56 + 32);
      uint64_t v72 = *(void *)(v56 + 40);
      uint64_t v60 = *(void *)(v65 + 56);
      uint64_t v104 = v71;
      uint64_t v105 = v69;
      if (!v68) {
        goto LABEL_57;
      }
      if (v60)
      {
        uint64_t v103 = v72;
        int v98 = v61;
        uint64_t v73 = v68;
        int64_t v74 = *(void *)(v68 + 16);
        uint64_t v99 = v67;
        uint64_t v96 = v70;
        if (v74)
        {
          uint64_t v107 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v94 = v60;
          swift_bridgeObjectRetain();
          sub_1BFF661B8(0, v74, 0);
          unint64_t v75 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
          uint64_t v95 = v73;
          uint64_t v76 = v73 + v75;
          uint64_t v77 = *(void *)(v91 + 72);
          uint64_t v78 = v107;
          do
          {
            uint64_t v79 = v102;
            sub_1C019FFF0(v76, (uint64_t)v102);
            uint64_t v80 = *v79;
            uint64_t v81 = v79[1];
            swift_bridgeObjectRetain();
            sub_1BFD0ABE4((uint64_t)v79, (uint64_t (*)(void))type metadata accessor for FormatOption);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BFF661B8(0, *(void *)(v78 + 16) + 1, 1);
              uint64_t v78 = v107;
            }
            unint64_t v83 = *(void *)(v78 + 16);
            unint64_t v82 = *(void *)(v78 + 24);
            if (v83 >= v82 >> 1)
            {
              sub_1BFF661B8(v82 > 1, v83 + 1, 1);
              uint64_t v78 = v107;
            }
            *(void *)(v78 + 16) = v83 + 1;
            uint64_t v84 = v78 + 16 * v83;
            *(void *)(v84 + 32) = v80;
            *(void *)(v84 + 40) = v81;
            v76 += v77;
            --v74;
          }
          while (v74);
          uint64_t v73 = v95;
          uint64_t v60 = v94;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v78 = MEMORY[0x1E4FBC860];
        }
        uint64_t v58 = sub_1BFEF4060(v78);
        swift_bridgeObjectRelease();
        id v59 = v106;
        uint64_t v61 = sub_1C12A52FC(v60, v58);
        id v106 = v59;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v107 = v73;
        swift_bridgeObjectRetain();
        sub_1BFEDB748(v61);
        uint64_t v60 = v107;
        LOBYTE(v61) = v98;
        uint64_t v62 = v96;
        uint64_t v63 = v103;
        goto LABEL_42;
      }
      if (*(void *)(v68 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v60 = v68;
      }
      else
      {
LABEL_57:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v62 = v70;
      uint64_t v63 = v72;
LABEL_42:
      ++v57;
      swift_beginAccess();
      uint64_t v64 = *(void *)(v65 + 64);
      uint64_t v56 = swift_allocObject();
      swift_beginAccess();
      *(void *)(v56 + 16) = v105;
      *(void *)(v56 + 24) = v62;
      *(void *)(v56 + 32) = v104;
      *(void *)(v56 + 40) = v63;
      *(unsigned char *)(v56 + 48) = v61;
      *(void *)(v56 + 56) = v60;
      swift_beginAccess();
      *(void *)(v56 + 64) = v64;
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v57 == v101)
      {
        swift_bridgeObjectRelease_n();
        return v56;
      }
    }
  }
  uint64_t v95 = v4 + 32;
  swift_bridgeObjectRetain();
  unint64_t v8 = 0;
LABEL_5:
  if (v8 >= *(void *)(v4 + 16)) {
    goto LABEL_64;
  }
  unint64_t v9 = v95 + 32 * v8;
  uint64_t v11 = *(void *)v9;
  uint64_t v10 = *(void *)(v9 + 8);
  int v98 = *(unsigned __int8 *)(v9 + 16);
  uint64_t v12 = *(void *)(v9 + 24);
  uint64_t v13 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  v108[0] = v11;
  v108[1] = v10;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1BFEF53C0(v108);
  swift_bridgeObjectRelease();
  uint64_t v104 = *(void *)(v14 + 16);
  if (!v104)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v94 = v11;
  uint64_t v101 = v12;
  uint64_t v99 = v10;
  uint64_t v100 = (void *)v8;
  unint64_t v15 = 0;
  unint64_t v16 = (uint64_t *)(v14 + 64);
  while (1)
  {
    if (v15 >= *(void *)(v14 + 16))
    {
      __break(1u);
LABEL_64:
      __break(1u);
    }
    uint64_t v103 = *(v16 - 2);
    uint64_t v18 = *(v16 - 1);
    uint64_t v17 = *v16;
    char v19 = *(unsigned char *)(v18 + 32);
    unsigned int v20 = v19 & 0x3F;
    unint64_t v21 = (unint64_t)((1 << v19) + 63) >> 6;
    size_t v22 = 8 * v21;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v20 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v24 = (char *)swift_slowAlloc();
    bzero(v24, v22);
    uint64_t v28 = v21;
    id v29 = v106;
    uint64_t v27 = sub_1BFEFB09C((uint64_t)v24, v28, v18, v105);
    swift_bridgeObjectRelease();
    id v106 = v29;
    if (v29) {
      goto LABEL_65;
    }
    MEMORY[0x1C18C9B00](v24, -1, -1);
LABEL_18:
    char v30 = sub_1BFEFAE14(v27, v18);
    swift_release();
    if (v30 & 1) != 0 && (sub_1BFEFB810(v105, v17))
    {
      swift_bridgeObjectRelease();
      if (v103 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v38 = v92[2];
        unint64_t v39 = v92[3];
        uint64_t v40 = v99;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v4 = v93;
        unint64_t v8 = (unint64_t)v100;
        if (v38 >= v39 >> 1) {
          uint64_t v41 = sub_1C0EE0C28((void *)(v39 > 1), v38 + 1, 1, v92);
        }
        else {
          uint64_t v41 = v92;
        }
        v41[2] = v38 + 1;
        uint64_t v92 = v41;
        unsigned int v42 = &v41[4 * v38];
        v42[4] = v94;
        v42[5] = v40;
        *((unsigned char *)v42 + 48) = v98;
        v42[7] = v101;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v31 = v99;
        swift_bridgeObjectRetain();
        uint64_t v32 = v101;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned int v33 = v90;
        unint64_t v35 = v90[2];
        unint64_t v34 = v90[3];
        uint64_t v4 = v93;
        unint64_t v8 = (unint64_t)v100;
        if (v35 >= v34 >> 1) {
          unsigned int v33 = sub_1C0EE0B08((void *)(v34 > 1), v35 + 1, 1, v90);
        }
        void v33[2] = v35 + 1;
        uint64_t v90 = v33;
        uint64_t v36 = &v33[5 * v35];
        v36[4] = v94;
        v36[5] = v31;
        *((unsigned char *)v36 + 48) = v98;
        uint64_t v37 = v103;
        v36[7] = v32;
        v36[8] = v37;
        swift_bridgeObjectRelease();
      }
LABEL_28:
      swift_bridgeObjectRelease();
LABEL_4:
      if ((void *)++v8 == v96)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      goto LABEL_5;
    }
    ++v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 += 5;
    if (v104 == v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v93;
      unint64_t v8 = (unint64_t)v100;
      goto LABEL_4;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v24 = (char *)&v88 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v24, v22);
  uint64_t v25 = v21;
  id v26 = v106;
  uint64_t v27 = sub_1BFEFB09C((uint64_t)v24, v25, v18, v105);
  swift_bridgeObjectRelease();
  id v106 = v26;
  if (!v26) {
    goto LABEL_18;
  }
  id v87 = v106;
  swift_willThrow();

  __break(1u);
LABEL_65:

  uint64_t result = MEMORY[0x1C18C9B00](v24, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C0406508()
{
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6) {
    uint64_t v6 = sub_1C096B7D8(v6);
  }
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v3;
  *(unsigned char *)(v8 + 48) = v5;
  *(void *)(v8 + 56) = v6;
  swift_beginAccess();
  *(void *)(v8 + 64) = v7;
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t FormatCustomNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatCustomNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C04066C0(void *a1, void *a2)
{
  return static FormatCustomNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatCustomNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FormatCustomNodeStyle.Selector.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C04066FC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 32);
  return result;
}

uint64_t _s8NewsFeed21FormatCustomNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (char v7 = sub_1C1520A9C(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == 2)
    {
      if (v4 != 2) {
        return 0;
      }
LABEL_11:
      if (v3)
      {
        if (!v5) {
          return 0;
        }
        swift_bridgeObjectRetain();
        uint64_t v9 = swift_bridgeObjectRetain();
        char v10 = sub_1C00E0650(v9, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      else if (v5)
      {
        return 0;
      }
      return 1;
    }
    uint64_t result = 0;
    if (v4 != 2 && ((((v2 & 1) == 0) ^ v4) & 1) != 0) {
      goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1C04067E8(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0405698(&qword_1EB88A0D0, a2, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle);
  a1[2] = sub_1C0405698(&qword_1EB866D68, v3, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle);
  uint64_t result = sub_1C0405698(&qword_1EA19B3F0, v4, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0406894(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = sub_1C0405698(&qword_1EB88A0D0, a2, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle);
  uint64_t result = sub_1C0405698(&qword_1EB866D68, v3, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle);
  *(void *)(a1 + 24) = result;
  return result;
}

unint64_t sub_1C0406918(uint64_t a1)
{
  unint64_t result = sub_1C0406940();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0406940()
{
  unint64_t result = qword_1EA19B3F8;
  if (!qword_1EA19B3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B3F8);
  }
  return result;
}

unint64_t sub_1C0406994(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0075554();
  unint64_t result = sub_1C00755A8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C04069C4(void *a1)
{
  a1[1] = sub_1C0075554();
  a1[2] = sub_1C00755A8();
  unint64_t result = sub_1C04069FC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C04069FC()
{
  unint64_t result = qword_1EA19B400;
  if (!qword_1EA19B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B400);
  }
  return result;
}

uint64_t sub_1C0406A50@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0406AA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatCustomNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatCustomNodeStyle);
}

uint64_t dispatch thunk of FormatCustomNodeStyle.__allocating_init(identifier:class:ignoresSmartInvertColors:options:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FormatCustomNodeStyle.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t assignWithCopy for FormatCustomNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatCustomNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatCustomNodeStyle.Selector()
{
  return &type metadata for FormatCustomNodeStyle.Selector;
}

unsigned char *storeEnumTagSinglePayload for FormatCustomNodeStyle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0406CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCustomNodeStyle.CodingKeys()
{
  return &type metadata for FormatCustomNodeStyle.CodingKeys;
}

unint64_t sub_1C0406D1C()
{
  unint64_t result = qword_1EA19B408;
  if (!qword_1EA19B408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B408);
  }
  return result;
}

uint64_t sub_1C0406D70()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C0406DBC()
{
  unint64_t result = qword_1EB882EE8;
  if (!qword_1EB882EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB882EE8);
  }
  return result;
}

void *sub_1C0406E10(void *a1)
{
  int v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFCF06C4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  sub_1BFCF06C4(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
  sub_1C0181BEC(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  char v7 = (void *)(v6 + v5);
  if (a1)
  {
    uint64_t v8 = a1[4];
    unint64_t v9 = a1[5];
    swift_bridgeObjectRetain();
    *(void *)uint64_t v24 = sub_1C0406508();
    memset(&v24[8], 0, 32);
    uint64_t v25 = 0;
    long long v26 = xmmword_1C1547F80;
    uint64_t v10 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)v24, v10 + 16);
    uint64_t v11 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v11 = sub_1C139486C;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v13 = (uint64_t (**)())((char *)v7 + *(int *)(v12 + 24));
  *uint64_t v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *char v7 = v8;
  v7[1] = v9;
  v7[2] = 0;
  v7[3] = 0;
  unint64_t v15 = (char *)v7 + *(int *)(v12 + 28);
  *(void *)unint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = -1;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v16 = swift_allocObject();
  *(void *)(inited + 32) = v16;
  *(void *)(v16 + 48) = v28;
  long long v17 = v27[1];
  *(_OWORD *)(v16 + 16) = v27[0];
  *(_OWORD *)(v16 + 32) = v17;
  if (a1 && a1[7])
  {
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C04050C0(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  sub_1C09BCFA4(0x756C61562D79654BLL, 0xEA00000000007365, 0, 0, v19, v24);
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v20 = swift_allocObject();
  *(void *)(inited + 72) = v20;
  *(void *)(v20 + 48) = *(void *)&v24[32];
  long long v21 = *(_OWORD *)&v24[16];
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v24;
  *(_OWORD *)(v20 + 32) = v21;
  size_t v22 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v22;
}

uint64_t sub_1C0407214()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C040725C()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t static FormatVisibility.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  unint64_t v4 = *a1 >> 62;
  if (v4)
  {
    if (v4 != 1)
    {
      if (v2 == 0x8000000000000000)
      {
        if (v3 != 0x8000000000000000) {
          goto LABEL_19;
        }
        sub_1BFF0056C(0x8000000000000000);
        unint64_t v12 = 0x8000000000000000;
      }
      else
      {
        if (v3 != 0x8000000000000008) {
          goto LABEL_19;
        }
        sub_1BFF0056C(0x8000000000000008);
        unint64_t v12 = 0x8000000000000008;
      }
      sub_1BFF0056C(v12);
      char v10 = 1;
      return v10 & 1;
    }
    if (v3 >> 62 == 1)
    {
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v8 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v7 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      v15[0] = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v6 = v15[0];
      v15[1] = v5;
      v14[0] = v8;
      v14[1] = v7;
      sub_1BFE6FA30(v3);
      sub_1BFE6FA30(v2);
      sub_1BFE6FA30(v15[0]);
      swift_bridgeObjectRetain();
      sub_1BFE6FA30(v8);
      swift_bridgeObjectRetain();
      if (static FormatVisibility.== infix(_:_:)(v15, v14))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v9 = sub_1C00F0180(v5, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFF0056C(v8);
        swift_bridgeObjectRelease();
        sub_1BFF0056C(v6);
        swift_bridgeObjectRelease();
        sub_1BFF0056C(v2);
        sub_1BFF0056C(v3);
        if (v9)
        {
          char v10 = 1;
          return v10 & 1;
        }
LABEL_21:
        char v10 = 0;
        return v10 & 1;
      }
      sub_1BFF0056C(v8);
      swift_bridgeObjectRelease();
      sub_1BFF0056C(v6);
      swift_bridgeObjectRelease();
LABEL_20:
      sub_1BFF0056C(v2);
      sub_1BFF0056C(v3);
      goto LABEL_21;
    }
LABEL_19:
    sub_1BFE6FA30(*a2);
    sub_1BFE6FA30(v2);
    goto LABEL_20;
  }
  if (v3 >> 62) {
    goto LABEL_19;
  }
  if (*(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24)) {
    char v10 = 1;
  }
  else {
    char v10 = sub_1C1520A9C();
  }
  sub_1BFE6FA30(v3);
  sub_1BFE6FA30(v2);
  sub_1BFF0056C(v2);
  sub_1BFF0056C(v3);
  return v10 & 1;
}

uint64_t sub_1C04074B8(void *a1)
{
  return FormatVisibility.encode(to:)(a1);
}

uint64_t FormatVisibility.description.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = (unint64_t)*v0 >> 62;
  if (!v2)
  {
    uint64_t v5 = 0x3A74697265686E69;
    sub_1BFF27ECC();
    if (*(void *)(sub_1C151FE4C() + 16)) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    goto LABEL_10;
  }
  if (v2 == 1)
  {
    unint64_t v3 = *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v5 = 0;
    sub_1BFE6FA30(v3);
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C0407660();
    sub_1C152036C();
    sub_1BFF0056C(v3);
LABEL_10:
    swift_bridgeObjectRelease();
    return v5;
  }
  if (v1 == 0x8000000000000000) {
    return 0x7465736E75;
  }
  else {
    return 0x6E6564646968;
  }
}

void sub_1C0407660()
{
  if (!qword_1EB866940)
  {
    sub_1C04076BC();
    unint64_t v0 = type metadata accessor for FormatSelectorValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB866940);
    }
  }
}

unint64_t sub_1C04076BC()
{
  unint64_t result = qword_1EB865DD0;
  if (!qword_1EB865DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865DD0);
  }
  return result;
}

unint64_t sub_1C0407714(uint64_t a1)
{
  unint64_t result = sub_1C04076BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C040773C(void *a1)
{
  a1[1] = sub_1BFE3D540();
  a1[2] = sub_1C009DA10();
  unint64_t result = sub_1C0407774();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0407774()
{
  unint64_t result = qword_1EB86C6E8;
  if (!qword_1EB86C6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C6E8);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFE6FA30(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatVisibility(unint64_t *a1)
{
  return sub_1BFF0056C(*a1);
}

unint64_t *assignWithCopy for FormatVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFE6FA30(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1BFF0056C(v4);
  return a1;
}

unint64_t *assignWithTake for FormatVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1BFF0056C(v3);
  return a1;
}

uint64_t sub_1C0407874(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

unint64_t *sub_1C0407890(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatVisibility()
{
  return &type metadata for FormatVisibility;
}

uint64_t sub_1C04078CC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id FCColor.formatColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = swift_allocObject();
  objc_msgSend(v1, sel_red);
  double v5 = v4 * 255.0;
  objc_msgSend(v1, sel_green);
  double v7 = v6 * 255.0;
  objc_msgSend(v1, sel_blue);
  double v9 = v8 * 255.0;
  id result = objc_msgSend(v1, sel_alpha);
  *(double *)(v3 + 16) = v5;
  *(double *)(v3 + 24) = v7;
  *(double *)(v3 + 32) = v9;
  *(void *)(v3 + 40) = v11;
  *(unsigned char *)(v3 + 48) = 0;
  *a1 = v3 | 0x6000000000000000;
  return result;
}

uint64_t sub_1C04079C4()
{
  return swift_deallocObject();
}

id FCColor.ne_dynamicColor(darkStyleColor:)(void *a1)
{
  uint64_t v2 = v1;
  objc_msgSend(v2, sel_red);
  double v5 = v4;
  objc_msgSend(v2, sel_green);
  double v7 = v6;
  objc_msgSend(v2, sel_blue);
  double v9 = v8;
  objc_msgSend(v2, sel_alpha);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, v5, v7, v9, v10);
  if (a1)
  {
    id v12 = a1;
    objc_msgSend(v12, sel_red);
    double v14 = v13;
    objc_msgSend(v12, sel_green);
    double v16 = v15;
    objc_msgSend(v12, sel_blue);
    double v18 = v17;
    objc_msgSend(v12, sel_alpha);
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, v14, v16, v18, v19);
    id v21 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v11, v20);

    return v21;
  }
  return v11;
}

id sub_1C0407B44(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)FCColor.ne_color.getter();

  return v2;
}

uint64_t FCColor.ne_color.getter()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  uint64_t v2 = (id *)(v1 + 16);
  v6[4] = sub_1C0407D7C;
  v6[5] = v1;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1C0407D84;
  v6[3] = &block_descriptor_26;
  uint64_t v3 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_readDeconstructedRepresentationWithAcccessor_, v3);
  _Block_release(v3);
  uint64_t result = swift_beginAccess();
  if (*v2)
  {
    id v5 = *v2;
    swift_release();
    return (uint64_t)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0407CA4()
{
  return swift_deallocObject();
}

void sub_1C0407CDC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, a2, a3, a4, a5);
  swift_beginAccess();
  double v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v6;
}

void sub_1C0407D7C(double a1, double a2, double a3, double a4)
{
  sub_1C0407CDC(v4, a1, a2, a3, a4);
}

uint64_t sub_1C0407D84(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v9 = *(void (**)(uint64_t, double, double, double, double))(a1 + 32);
  uint64_t v10 = swift_retain();
  v9(v10, a2, a3, a4, a5);
  return swift_release();
}

uint64_t *sub_1C0407DF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    double v7 = (_OWORD *)((char *)a1 + v6);
    double v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v10 = v8[1];
        if (v10 == 1)
        {
          long long v11 = *((_OWORD *)v8 + 1);
          *double v7 = *(_OWORD *)v8;
          v7[1] = v11;
          v7[2] = *((_OWORD *)v8 + 2);
        }
        else
        {
          *(void *)double v7 = *v8;
          *((void *)v7 + 1) = v10;
          uint64_t v17 = v8[3];
          *((void *)v7 + 2) = v8[2];
          *((void *)v7 + 3) = v17;
          uint64_t v18 = v8[4];
          uint64_t v19 = v8[5];
          *((void *)v7 + 4) = v18;
          *((void *)v7 + 5) = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v16 = v8[1];
        *(void *)double v7 = *v8;
        *((void *)v7 + 1) = v16;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        double v13 = (void *)*v8;
        id v14 = v13;
        *(void *)double v7 = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v15 = sub_1C151928C();
        (*(void (**)(_OWORD *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v7, v8, v15);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return v5;
}

void sub_1C0408024(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DebugFormatUploadHiddenReason();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (*(void *)(v4 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      break;
    case 1u:
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 4u:
      id v5 = *(void **)v4;

      break;
    case 3u:
      uint64_t v6 = sub_1C151928C();
      double v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      v7(v4, v6);
      break;
    default:
      return;
  }
}

void *sub_1C040815C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  id v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for DebugFormatUploadHiddenReason();
  swift_retain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = v6[1];
      if (v8 == 1)
      {
        long long v9 = *((_OWORD *)v6 + 1);
        *id v5 = *(_OWORD *)v6;
        v5[1] = v9;
        void v5[2] = *((_OWORD *)v6 + 2);
      }
      else
      {
        *(void *)id v5 = *v6;
        *((void *)v5 + 1) = v8;
        uint64_t v14 = v6[3];
        *((void *)v5 + 2) = v6[2];
        *((void *)v5 + 3) = v14;
        uint64_t v15 = v6[4];
        uint64_t v16 = v6[5];
        *((void *)v5 + 4) = v15;
        *((void *)v5 + 5) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_9;
    case 1u:
      uint64_t v13 = v6[1];
      *(void *)id v5 = *v6;
      *((void *)v5 + 1) = v13;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
    case 4u:
      uint64_t v10 = (void *)*v6;
      id v11 = v10;
      *(void *)id v5 = v10;
      goto LABEL_9;
    case 3u:
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(_OWORD *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v6, v12);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1C040832C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    sub_1C040853C((uint64_t)a1 + v6);
    uint64_t v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        if (*((void *)v8 + 1) == 1)
        {
          long long v10 = *v8;
          long long v11 = v8[2];
          v7[1] = v8[1];
          v7[2] = v11;
          *uint64_t v7 = v10;
        }
        else
        {
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        goto LABEL_10;
      case 1u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
      case 4u:
        uint64_t v12 = *(void **)v8;
        id v13 = v12;
        *(void *)uint64_t v7 = v12;
        goto LABEL_10;
      case 3u:
        uint64_t v14 = sub_1C151928C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C040853C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatUploadHiddenReason();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C0408598(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  id v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for DebugFormatUploadHiddenReason();
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v8 = sub_1C151928C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_1C0408668(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C040853C((uint64_t)a1 + v6);
    uint64_t v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v10 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0408758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C040876C);
}

uint64_t sub_1C040876C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DebugFormatUploadHiddenReason();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C040881C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0408830);
}

void *sub_1C0408830(void *result, uint64_t a2, int a3, uint64_t a4)
{
  id v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DebugFormatUploadHiddenReason();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatUploadHiddenEntry()
{
  uint64_t result = qword_1EA19B410;
  if (!qword_1EA19B410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0408924()
{
  uint64_t result = type metadata accessor for DebugFormatUploadHiddenReason();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatIssueCoverNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t FormatIssueCoverNodeStyle.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatIssueCoverNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatIssueCoverNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  uint64_t v9 = *(void *)(v1 + 152);
  uint64_t v10 = *(void *)(v1 + 160);
  uint64_t v11 = *(void *)(v1 + 168);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 176);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatIssueCoverNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t FormatIssueCoverNodeStyle.traits.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 184) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNodeStyle.traits.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, long long *a9, char a10, uint64_t a11)
{
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = *a6;
  uint64_t v17 = *a8;
  uint64_t v18 = a8[1];
  LOBYTE(a8) = *((unsigned char *)a8 + 16);
  long long v25 = a9[1];
  long long v26 = *a9;
  long long v23 = a9[3];
  long long v24 = a9[2];
  uint64_t v19 = *((void *)a9 + 8);
  uint64_t v20 = *((void *)a9 + 9);
  char v21 = *((unsigned char *)a9 + 80);
  swift_beginAccess();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  swift_beginAccess();
  *(void *)(v15 + 48) = a5;
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = a7;
  *(void *)(v15 + 72) = v17;
  *(void *)(v15 + 80) = v18;
  *(unsigned char *)(v15 + 88) = (_BYTE)a8;
  *(_OWORD *)(v15 + 96) = v26;
  *(_OWORD *)(v15 + 112) = v25;
  *(_OWORD *)(v15 + 128) = v24;
  *(_OWORD *)(v15 + 144) = v23;
  *(void *)(v15 + 160) = v19;
  *(void *)(v15 + 168) = v20;
  *(unsigned char *)(v15 + 176) = v21;
  *(unsigned char *)(v15 + 177) = a10;
  swift_beginAccess();
  *(void *)(v15 + 184) = a11;
  return v15;
}

uint64_t FormatIssueCoverNodeStyle.init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, long long *a9, char a10, uint64_t a11)
{
  uint64_t v16 = *a6;
  uint64_t v17 = *a8;
  uint64_t v18 = a8[1];
  char v27 = *((unsigned char *)a8 + 16);
  long long v25 = a9[1];
  long long v26 = *a9;
  long long v23 = a9[3];
  long long v24 = a9[2];
  uint64_t v19 = *((void *)a9 + 8);
  uint64_t v22 = *((void *)a9 + 9);
  char v20 = *((unsigned char *)a9 + 80);
  swift_beginAccess();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  swift_beginAccess();
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 56) = v16;
  *(void *)(v11 + 64) = a7;
  *(void *)(v11 + 72) = v17;
  *(void *)(v11 + 80) = v18;
  *(unsigned char *)(v11 + 88) = v27;
  *(_OWORD *)(v11 + 96) = v26;
  *(_OWORD *)(v11 + 112) = v25;
  *(_OWORD *)(v11 + 128) = v24;
  *(_OWORD *)(v11 + 144) = v23;
  *(void *)(v11 + 160) = v19;
  *(void *)(v11 + 168) = v22;
  *(unsigned char *)(v11 + 176) = v20;
  *(unsigned char *)(v11 + 177) = a10;
  swift_beginAccess();
  *(void *)(v11 + 184) = a11;
  return v11;
}

uint64_t sub_1C0408FA0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  swift_beginAccess();
  id v222 = v1;
  uint64_t v7 = v1[6];
  swift_beginAccess();
  uint64_t v223 = a1;
  uint64_t v8 = *(void *)(a1 + 48);
  unint64_t v291 = MEMORY[0x1E4FBC868];
  int64_t v9 = *(void *)(v7 + 16);
  int64_t v10 = *(void *)(v8 + 16);
  if (__OFADD__(v9, v10)) {
    goto LABEL_96;
  }
  uint64_t v219 = v5;
  uint64_t v221 = v4;
  sub_1C040B718();
  uint64_t v220 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = v7;
  sub_1C151E3AC();
  v276 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v218 = v6;
  uint64_t v224 = v8;
  if (!v12) {
    goto LABEL_20;
  }
  int64_t v273 = v10;
  swift_bridgeObjectRetain();
  long long v13 = *(_OWORD *)(v11 + 144);
  long long v298 = *(_OWORD *)(v11 + 128);
  long long v299 = v13;
  long long v300 = *(_OWORD *)(v11 + 160);
  uint64_t v301 = *(void *)(v11 + 176);
  long long v14 = *(_OWORD *)(v11 + 80);
  long long v294 = *(_OWORD *)(v11 + 64);
  long long v295 = v14;
  long long v15 = *(_OWORD *)(v11 + 112);
  long long v296 = *(_OWORD *)(v11 + 96);
  long long v297 = v15;
  long long v16 = *(_OWORD *)(v11 + 48);
  long long v292 = *(_OWORD *)(v11 + 32);
  long long v293 = v16;
  uint64_t v17 = *((void *)&v292 + 1);
  uint64_t v18 = v12 - 1;
  for (uint64_t i = 184; ; i += 152)
  {
    uint64_t v20 = v292;
    sub_1C040B90C((uint64_t)&v292);
    sub_1C040B90C((uint64_t)&v292);
    swift_bridgeObjectRetain();
    unint64_t v21 = v291;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v278[0] = v21;
    unint64_t v24 = sub_1BFEF2D8C(v20, v17);
    uint64_t v25 = *(void *)(v21 + 16);
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v28 = v23;
    if (*(void *)(v21 + 24) >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C106F0F8();
        if (v28) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C105B19C(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_1BFEF2D8C(v20, v17);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_97;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_11:
        uint64_t v31 = *(void **)&v278[0];
        uint64_t v32 = *(void *)(*(void *)&v278[0] + 56) + 152 * v24;
        long long v33 = *(_OWORD *)(v32 + 16);
        long long v281 = *(_OWORD *)v32;
        long long v282 = v33;
        long long v34 = *(_OWORD *)(v32 + 80);
        long long v36 = *(_OWORD *)(v32 + 32);
        long long v35 = *(_OWORD *)(v32 + 48);
        long long v285 = *(_OWORD *)(v32 + 64);
        long long v286 = v34;
        long long v283 = v36;
        long long v284 = v35;
        long long v38 = *(_OWORD *)(v32 + 112);
        long long v37 = *(_OWORD *)(v32 + 128);
        long long v39 = *(_OWORD *)(v32 + 96);
        uint64_t v290 = *(void *)(v32 + 144);
        long long v288 = v38;
        long long v289 = v37;
        long long v287 = v39;
        sub_1C040B77C((uint64_t)&v281);
        long long v40 = v293;
        *(_OWORD *)uint64_t v32 = v292;
        *(_OWORD *)(v32 + 16) = v40;
        long long v41 = v297;
        long long v43 = v294;
        long long v42 = v295;
        *(_OWORD *)(v32 + 64) = v296;
        *(_OWORD *)(v32 + 80) = v41;
        *(_OWORD *)(v32 + 32) = v43;
        *(_OWORD *)(v32 + 48) = v42;
        long long v45 = v299;
        long long v44 = v300;
        long long v46 = v298;
        *(void *)(v32 + 144) = v301;
        *(_OWORD *)(v32 + 112) = v45;
        *(_OWORD *)(v32 + 128) = v44;
        *(_OWORD *)(v32 + 96) = v46;
        goto LABEL_15;
      }
    }
    uint64_t v31 = *(void **)&v278[0];
    *(void *)(*(void *)&v278[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v47 = (uint64_t *)(v31[6] + 16 * v24);
    *uint64_t v47 = v20;
    v47[1] = v17;
    uint64_t v48 = v31[7] + 152 * v24;
    uint64_t v49 = v301;
    long long v51 = v299;
    long long v50 = v300;
    *(_OWORD *)(v48 + 96) = v298;
    *(_OWORD *)(v48 + 112) = v51;
    *(_OWORD *)(v48 + 128) = v50;
    *(void *)(v48 + 144) = v49;
    long long v53 = v296;
    long long v52 = v297;
    long long v54 = v295;
    *(_OWORD *)(v48 + 32) = v294;
    *(_OWORD *)(v48 + 48) = v54;
    *(_OWORD *)(v48 + 64) = v53;
    *(_OWORD *)(v48 + 80) = v52;
    long long v55 = v293;
    *(_OWORD *)uint64_t v48 = v292;
    *(_OWORD *)(v48 + 16) = v55;
    uint64_t v56 = v31[2];
    BOOL v57 = __OFADD__(v56, 1);
    uint64_t v58 = v56 + 1;
    if (v57) {
      goto LABEL_92;
    }
    v31[2] = v58;
    swift_bridgeObjectRetain();
LABEL_15:
    unint64_t v291 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v59 = v276[2];
    unint64_t v60 = v276[3];
    swift_bridgeObjectRetain();
    if (v59 >= v60 >> 1) {
      v276 = sub_1BFEF692C((void *)(v60 > 1), v59 + 1, 1, v276);
    }
    v276[2] = v59 + 1;
    uint64_t v61 = &v276[2 * v59];
    v61[4] = v20;
    v61[5] = v17;
    sub_1C040B77C((uint64_t)&v292);
    if (!v18) {
      break;
    }
    long long v62 = *(_OWORD *)(v11 + i + 16);
    long long v292 = *(_OWORD *)(v11 + i);
    long long v293 = v62;
    long long v63 = *(_OWORD *)(v11 + i + 32);
    long long v64 = *(_OWORD *)(v11 + i + 48);
    long long v65 = *(_OWORD *)(v11 + i + 80);
    long long v296 = *(_OWORD *)(v11 + i + 64);
    long long v297 = v65;
    long long v294 = v63;
    long long v295 = v64;
    long long v66 = *(_OWORD *)(v11 + i + 96);
    long long v67 = *(_OWORD *)(v11 + i + 112);
    long long v68 = *(_OWORD *)(v11 + i + 128);
    uint64_t v301 = *(void *)(v11 + i + 144);
    long long v299 = v67;
    long long v300 = v68;
    long long v298 = v66;
    uint64_t v17 = *((void *)&v292 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v224;
  int64_t v10 = v273;
LABEL_20:
  uint64_t v69 = sub_1BFEF692C(0, v10, 0, MEMORY[0x1E4FBC860]);
  uint64_t v70 = *(void *)(v8 + 16);
  if (!v70) {
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  long long v71 = *(_OWORD *)(v8 + 144);
  long long v298 = *(_OWORD *)(v8 + 128);
  long long v299 = v71;
  long long v300 = *(_OWORD *)(v8 + 160);
  uint64_t v301 = *(void *)(v8 + 176);
  long long v72 = *(_OWORD *)(v8 + 80);
  long long v294 = *(_OWORD *)(v8 + 64);
  long long v295 = v72;
  long long v73 = *(_OWORD *)(v8 + 112);
  long long v296 = *(_OWORD *)(v8 + 96);
  long long v297 = v73;
  long long v74 = *(_OWORD *)(v8 + 48);
  long long v292 = *(_OWORD *)(v8 + 32);
  long long v293 = v74;
  uint64_t v75 = v70 - 1;
  uint64_t v76 = *((void *)&v292 + 1);
  uint64_t v77 = 184;
  while (2)
  {
    uint64_t v78 = v292;
    uint64_t v79 = (void *)v291;
    uint64_t v80 = *(void *)(v291 + 16);
    sub_1C040B90C((uint64_t)&v292);
    if (v80)
    {
      swift_bridgeObjectRetain();
      unint64_t v81 = sub_1BFEF2D8C(v78, v76);
      if (v82)
      {
        uint64_t v83 = v79[7] + 152 * v81;
        long long v84 = *(_OWORD *)(v83 + 16);
        long long v281 = *(_OWORD *)v83;
        long long v282 = v84;
        long long v85 = *(_OWORD *)(v83 + 80);
        long long v87 = *(_OWORD *)(v83 + 32);
        long long v86 = *(_OWORD *)(v83 + 48);
        long long v285 = *(_OWORD *)(v83 + 64);
        long long v286 = v85;
        long long v283 = v87;
        long long v284 = v86;
        long long v88 = *(_OWORD *)(v83 + 96);
        long long v89 = *(_OWORD *)(v83 + 112);
        long long v90 = *(_OWORD *)(v83 + 128);
        uint64_t v290 = *(void *)(v83 + 144);
        long long v288 = v89;
        long long v289 = v90;
        long long v287 = v88;
        sub_1C040B90C((uint64_t)&v281);
        swift_bridgeObjectRelease();
        uint64_t v91 = v282;
        if (!(void)v282) {
          uint64_t v91 = swift_bridgeObjectRetain();
        }
        uint64_t v225 = v91;
        uint64_t v92 = *((void *)&v282 + 1);
        if (!*((void *)&v282 + 1)) {
          uint64_t v92 = swift_bridgeObjectRetain();
        }
        uint64_t v233 = v92;
        uint64_t v236 = v75;
        uint64_t v94 = *((void *)&v283 + 1);
        uint64_t v93 = v283;
        char v95 = v284;
        uint64_t v254 = *((void *)&v283 + 1);
        uint64_t v256 = v283;
        char v96 = v284;
        if (v284 >= 0xFEu)
        {
          uint64_t v94 = *((void *)&v294 + 1);
          uint64_t v93 = v294;
          char v96 = v295;
          sub_1BFEF6828(v294, *((uint64_t *)&v294 + 1), v295);
        }
        uint64_t v229 = v94;
        uint64_t v231 = v93;
        uint64_t v238 = v69;
        uint64_t v97 = *((void *)&v284 + 1);
        uint64_t v98 = v285;
        long long v99 = v288;
        uint64_t v100 = v289;
        uint64_t v250 = v285;
        uint64_t v252 = *((void *)&v284 + 1);
        uint64_t v246 = v286;
        uint64_t v248 = *((void *)&v285 + 1);
        uint64_t v271 = v286;
        uint64_t v274 = *((void *)&v285 + 1);
        uint64_t v242 = v287;
        uint64_t v244 = *((void *)&v286 + 1);
        uint64_t v268 = v287;
        uint64_t v269 = *((void *)&v286 + 1);
        uint64_t v240 = *((void *)&v287 + 1);
        uint64_t v265 = v288;
        uint64_t v267 = *((void *)&v287 + 1);
        uint64_t v261 = v289;
        uint64_t v263 = *((void *)&v288 + 1);
        unsigned __int8 v101 = BYTE8(v289);
        char v259 = BYTE8(v289);
        if (BYTE8(v289) == 254)
        {
          uint64_t v97 = *((void *)&v295 + 1);
          uint64_t v98 = v296;
          char v259 = BYTE8(v300);
          uint64_t v261 = v300;
          uint64_t v263 = *((void *)&v299 + 1);
          uint64_t v271 = v297;
          uint64_t v274 = *((void *)&v296 + 1);
          uint64_t v268 = v298;
          uint64_t v269 = *((void *)&v297 + 1);
          uint64_t v265 = v299;
          uint64_t v267 = *((void *)&v298 + 1);
          sub_1BFEF8708(*((uint64_t *)&v295 + 1), v296, *((uint64_t *)&v296 + 1), v297, *((uint64_t *)&v297 + 1), v298, *((uint64_t *)&v298 + 1), v299, *((uint64_t *)&v299 + 1), v300, BYTE8(v300));
        }
        uint64_t v228 = v98;
        char v102 = BYTE9(v289);
        if (BYTE9(v289) == 2) {
          char v102 = BYTE9(v300);
        }
        char v227 = v102;
        uint64_t v103 = v290;
        if (!v290) {
          uint64_t v103 = swift_bridgeObjectRetain();
        }
        uint64_t v226 = v103;
        long long v104 = v281;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v256, v254, v95);
        sub_1BFEF8708(v252, v250, v248, v246, v244, v242, v240, v99, *((uint64_t *)&v99 + 1), v100, v101);
        swift_bridgeObjectRetain();
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v280 = v79;
        unint64_t v291 = 0x8000000000000000;
        unint64_t v107 = sub_1BFEF2D8C(v104, *((uint64_t *)&v104 + 1));
        uint64_t v108 = v79[2];
        BOOL v109 = (v106 & 1) == 0;
        uint64_t v110 = v108 + v109;
        if (__OFADD__(v108, v109)) {
          goto LABEL_94;
        }
        char v111 = v106;
        if (v79[3] >= v110)
        {
          uint64_t v75 = v236;
          uint64_t v69 = v238;
          if (v105)
          {
            uint64_t v114 = v225;
            if ((v106 & 1) == 0) {
              goto LABEL_61;
            }
          }
          else
          {
            sub_1C106F0F8();
            uint64_t v114 = v225;
            if ((v111 & 1) == 0) {
              goto LABEL_61;
            }
          }
        }
        else
        {
          sub_1C105B19C(v110, v105);
          unint64_t v112 = sub_1BFEF2D8C(v104, *((uint64_t *)&v104 + 1));
          uint64_t v75 = v236;
          uint64_t v69 = v238;
          if ((v111 & 1) != (v113 & 1)) {
            goto LABEL_97;
          }
          unint64_t v107 = v112;
          uint64_t v114 = v225;
          if ((v111 & 1) == 0)
          {
LABEL_61:
            long long v140 = v280;
            v280[(v107 >> 6) + 8] |= 1 << v107;
            *(_OWORD *)(v140[6] + 16 * v107) = v104;
            uint64_t v163 = v140[7] + 152 * v107;
            *(_OWORD *)uint64_t v163 = v104;
            *(void *)(v163 + 16) = v114;
            *(void *)(v163 + 24) = v233;
            *(void *)(v163 + 32) = v231;
            *(void *)(v163 + 40) = v229;
            *(unsigned char *)(v163 + 48) = v96;
            *(void *)(v163 + 56) = v97;
            *(void *)(v163 + 64) = v228;
            *(void *)(v163 + 72) = v274;
            *(void *)(v163 + 80) = v271;
            *(void *)(v163 + 88) = v269;
            *(void *)(v163 + 96) = v268;
            *(void *)(v163 + 104) = v267;
            *(void *)(v163 + 112) = v265;
            *(void *)(v163 + 120) = v263;
            *(void *)(v163 + 128) = v261;
            *(unsigned char *)(v163 + 136) = v259;
            *(unsigned char *)(v163 + 137) = v227;
            *(void *)(v163 + 144) = v226;
            uint64_t v164 = v140[2];
            BOOL v57 = __OFADD__(v164, 1);
            uint64_t v165 = v164 + 1;
            if (v57) {
              goto LABEL_95;
            }
            v140[2] = v165;
            swift_bridgeObjectRetain();
            goto LABEL_63;
          }
        }
        long long v140 = v280;
        uint64_t v141 = v280[7] + 152 * v107;
        long long v142 = *(_OWORD *)(v141 + 16);
        v278[0] = *(_OWORD *)v141;
        v278[1] = v142;
        long long v143 = *(_OWORD *)(v141 + 80);
        long long v145 = *(_OWORD *)(v141 + 32);
        long long v144 = *(_OWORD *)(v141 + 48);
        v278[4] = *(_OWORD *)(v141 + 64);
        v278[5] = v143;
        v278[2] = v145;
        v278[3] = v144;
        long long v147 = *(_OWORD *)(v141 + 112);
        long long v146 = *(_OWORD *)(v141 + 128);
        long long v148 = *(_OWORD *)(v141 + 96);
        uint64_t v279 = *(void *)(v141 + 144);
        v278[7] = v147;
        v278[8] = v146;
        v278[6] = v148;
        sub_1C040B77C((uint64_t)v278);
        *(_OWORD *)uint64_t v141 = v104;
        *(void *)(v141 + 16) = v114;
        *(void *)(v141 + 24) = v233;
        *(void *)(v141 + 32) = v231;
        *(void *)(v141 + 40) = v229;
        *(unsigned char *)(v141 + 48) = v96;
        *(void *)(v141 + 56) = v97;
        *(void *)(v141 + 64) = v228;
        *(void *)(v141 + 72) = v274;
        *(void *)(v141 + 80) = v271;
        *(void *)(v141 + 88) = v269;
        *(void *)(v141 + 96) = v268;
        *(void *)(v141 + 104) = v267;
        *(void *)(v141 + 112) = v265;
        *(void *)(v141 + 120) = v263;
        *(void *)(v141 + 128) = v261;
        *(unsigned char *)(v141 + 136) = v259;
        *(unsigned char *)(v141 + 137) = v227;
        *(void *)(v141 + 144) = v226;
LABEL_63:
        unint64_t v291 = (unint64_t)v140;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C040B77C((uint64_t)&v281);
        sub_1C040B77C((uint64_t)&v292);
        uint64_t v8 = v224;
        if (!v75) {
          goto LABEL_65;
        }
LABEL_64:
        long long v166 = *(_OWORD *)(v8 + v77 + 16);
        long long v292 = *(_OWORD *)(v8 + v77);
        long long v293 = v166;
        long long v167 = *(_OWORD *)(v8 + v77 + 32);
        long long v168 = *(_OWORD *)(v8 + v77 + 48);
        long long v169 = *(_OWORD *)(v8 + v77 + 80);
        long long v296 = *(_OWORD *)(v8 + v77 + 64);
        long long v297 = v169;
        long long v294 = v167;
        long long v295 = v168;
        long long v170 = *(_OWORD *)(v8 + v77 + 96);
        long long v171 = *(_OWORD *)(v8 + v77 + 112);
        long long v172 = *(_OWORD *)(v8 + v77 + 128);
        uint64_t v301 = *(void *)(v8 + v77 + 144);
        long long v299 = v171;
        long long v300 = v172;
        long long v298 = v170;
        uint64_t v76 = *((void *)&v292 + 1);
        v77 += 152;
        --v75;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1C040B90C((uint64_t)&v292);
  swift_bridgeObjectRetain();
  char v115 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v278[0] = v79;
  unint64_t v117 = sub_1BFEF2D8C(v78, v76);
  uint64_t v118 = v79[2];
  BOOL v119 = (v116 & 1) == 0;
  uint64_t v120 = v118 + v119;
  if (__OFADD__(v118, v119)) {
    goto LABEL_91;
  }
  char v121 = v116;
  if (v79[3] >= v120)
  {
    if (v115)
    {
      if ((v116 & 1) == 0) {
        goto LABEL_54;
      }
    }
    else
    {
      sub_1C106F0F8();
      if ((v121 & 1) == 0) {
        goto LABEL_54;
      }
    }
    goto LABEL_49;
  }
  sub_1C105B19C(v120, v115);
  unint64_t v122 = sub_1BFEF2D8C(v78, v76);
  if ((v121 & 1) != (v123 & 1)) {
    goto LABEL_97;
  }
  unint64_t v117 = v122;
  if (v121)
  {
LABEL_49:
    uint64_t v124 = *(void **)&v278[0];
    uint64_t v125 = *(void *)(*(void *)&v278[0] + 56) + 152 * v117;
    long long v126 = *(_OWORD *)(v125 + 16);
    long long v281 = *(_OWORD *)v125;
    long long v282 = v126;
    long long v127 = *(_OWORD *)(v125 + 80);
    long long v129 = *(_OWORD *)(v125 + 32);
    long long v128 = *(_OWORD *)(v125 + 48);
    long long v285 = *(_OWORD *)(v125 + 64);
    long long v286 = v127;
    long long v283 = v129;
    long long v284 = v128;
    long long v131 = *(_OWORD *)(v125 + 112);
    long long v130 = *(_OWORD *)(v125 + 128);
    long long v132 = *(_OWORD *)(v125 + 96);
    uint64_t v290 = *(void *)(v125 + 144);
    long long v288 = v131;
    long long v289 = v130;
    long long v287 = v132;
    sub_1C040B77C((uint64_t)&v281);
    long long v133 = v293;
    *(_OWORD *)uint64_t v125 = v292;
    *(_OWORD *)(v125 + 16) = v133;
    long long v134 = v297;
    long long v136 = v294;
    long long v135 = v295;
    *(_OWORD *)(v125 + 64) = v296;
    *(_OWORD *)(v125 + 80) = v134;
    *(_OWORD *)(v125 + 32) = v136;
    *(_OWORD *)(v125 + 48) = v135;
    long long v138 = v299;
    long long v137 = v300;
    long long v139 = v298;
    *(void *)(v125 + 144) = v301;
    *(_OWORD *)(v125 + 112) = v138;
    *(_OWORD *)(v125 + 128) = v137;
    *(_OWORD *)(v125 + 96) = v139;
    goto LABEL_56;
  }
LABEL_54:
  uint64_t v124 = *(void **)&v278[0];
  *(void *)(*(void *)&v278[0] + 8 * (v117 >> 6) + 64) |= 1 << v117;
  uint64_t v149 = (uint64_t *)(v124[6] + 16 * v117);
  *uint64_t v149 = v78;
  v149[1] = v76;
  uint64_t v150 = v124[7] + 152 * v117;
  uint64_t v151 = v301;
  long long v153 = v299;
  long long v152 = v300;
  *(_OWORD *)(v150 + 96) = v298;
  *(_OWORD *)(v150 + 112) = v153;
  *(_OWORD *)(v150 + 128) = v152;
  *(void *)(v150 + 144) = v151;
  long long v155 = v296;
  long long v154 = v297;
  long long v156 = v295;
  *(_OWORD *)(v150 + 32) = v294;
  *(_OWORD *)(v150 + 48) = v156;
  *(_OWORD *)(v150 + 64) = v155;
  *(_OWORD *)(v150 + 80) = v154;
  long long v157 = v293;
  *(_OWORD *)uint64_t v150 = v292;
  *(_OWORD *)(v150 + 16) = v157;
  uint64_t v158 = v124[2];
  BOOL v57 = __OFADD__(v158, 1);
  uint64_t v159 = v158 + 1;
  if (v57) {
    goto LABEL_93;
  }
  v124[2] = v159;
  swift_bridgeObjectRetain();
LABEL_56:
  unint64_t v291 = (unint64_t)v124;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v160 = v69[2];
  unint64_t v161 = v69[3];
  swift_bridgeObjectRetain();
  if (v160 >= v161 >> 1) {
    uint64_t v69 = sub_1BFEF692C((void *)(v161 > 1), v160 + 1, 1, v69);
  }
  v69[2] = v160 + 1;
  uint64_t v162 = &v69[2 * v160];
  v162[4] = v78;
  v162[5] = v76;
  sub_1C040B77C((uint64_t)&v292);
  if (v75) {
    goto LABEL_64;
  }
LABEL_65:
  swift_bridgeObjectRelease();
LABEL_66:
  *(void *)&long long v292 = v69;
  swift_bridgeObjectRetain();
  uint64_t v173 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v173);
  uint64_t v174 = v292;
  uint64_t v175 = *(void *)(v292 + 16);
  if (v175)
  {
    swift_bridgeObjectRetain();
    uint64_t v176 = (uint64_t *)(v174 + 40);
    uint64_t v177 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v178 = v291;
      if (*(void *)(v291 + 16))
      {
        uint64_t v180 = *(v176 - 1);
        uint64_t v179 = *v176;
        swift_bridgeObjectRetain_n();
        unint64_t v181 = sub_1BFEF2D8C(v180, v179);
        if (v182)
        {
          uint64_t v183 = *(void *)(v178 + 56) + 152 * v181;
          long long v184 = *(_OWORD *)(v183 + 16);
          long long v292 = *(_OWORD *)v183;
          long long v293 = v184;
          long long v185 = *(_OWORD *)(v183 + 80);
          long long v187 = *(_OWORD *)(v183 + 32);
          long long v186 = *(_OWORD *)(v183 + 48);
          long long v296 = *(_OWORD *)(v183 + 64);
          long long v297 = v185;
          long long v294 = v187;
          long long v295 = v186;
          long long v188 = *(_OWORD *)(v183 + 96);
          long long v189 = *(_OWORD *)(v183 + 112);
          long long v190 = *(_OWORD *)(v183 + 128);
          uint64_t v301 = *(void *)(v183 + 144);
          long long v299 = v189;
          long long v300 = v190;
          long long v298 = v188;
          sub_1C040B90C((uint64_t)&v292);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v177 = sub_1C0EE1278(0, v177[2] + 1, 1, v177);
          }
          unint64_t v192 = v177[2];
          unint64_t v191 = v177[3];
          if (v192 >= v191 >> 1) {
            uint64_t v177 = sub_1C0EE1278((void *)(v191 > 1), v192 + 1, 1, v177);
          }
          v177[2] = v192 + 1;
          uint64_t v193 = &v177[19 * v192];
          long long v194 = v293;
          *((_OWORD *)v193 + 2) = v292;
          *((_OWORD *)v193 + 3) = v194;
          long long v195 = v294;
          long long v196 = v295;
          long long v197 = v297;
          *((_OWORD *)v193 + 6) = v296;
          *((_OWORD *)v193 + 7) = v197;
          *((_OWORD *)v193 + 4) = v195;
          *((_OWORD *)v193 + 5) = v196;
          long long v198 = v298;
          long long v199 = v299;
          long long v200 = v300;
          v193[22] = v301;
          *((_OWORD *)v193 + 9) = v199;
          *((_OWORD *)v193 + 10) = v200;
          *((_OWORD *)v193 + 8) = v198;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v176 += 2;
      --v175;
    }
    while (v175);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v177 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v201 = v222[7];
  if (!v201)
  {
    uint64_t v201 = *(void *)(v223 + 56);
    swift_bridgeObjectRetain();
  }
  uint64_t v202 = v222[8];
  if (!v202) {
    uint64_t v202 = swift_bridgeObjectRetain();
  }
  uint64_t v255 = v202;
  uint64_t v260 = v201;
  uint64_t v203 = v222[9];
  uint64_t v204 = v222[10];
  uint64_t v264 = v204;
  uint64_t v266 = v203;
  unsigned int v205 = *((unsigned __int8 *)v222 + 88);
  char v262 = *((unsigned char *)v222 + 88);
  if (v205 >= 0xFE)
  {
    uint64_t v203 = *(void *)(v223 + 72);
    uint64_t v204 = *(void *)(v223 + 80);
    LOBYTE(v205) = *(unsigned char *)(v223 + 88);
    sub_1BFEF6828(v203, v204, v205);
  }
  char v234 = v205;
  uint64_t v235 = v204;
  uint64_t v237 = v203;
  uint64_t v206 = v222[12];
  uint64_t v207 = v222[13];
  uint64_t v209 = v222[18];
  uint64_t v208 = v222[19];
  uint64_t v211 = v222[20];
  uint64_t v210 = v222[21];
  uint64_t v257 = v207;
  uint64_t v258 = v206;
  uint64_t v251 = v222[15];
  uint64_t v253 = v222[14];
  uint64_t v275 = v251;
  uint64_t v277 = v253;
  uint64_t v247 = v222[17];
  uint64_t v249 = v222[16];
  uint64_t v270 = v247;
  uint64_t v272 = v249;
  uint64_t v243 = v208;
  uint64_t v245 = v209;
  uint64_t v239 = v210;
  uint64_t v241 = v211;
  int v212 = *((unsigned __int8 *)v222 + 176);
  unsigned __int8 v213 = *((unsigned char *)v222 + 176);
  if (v212 == 254)
  {
    uint64_t v206 = *(void *)(v223 + 96);
    uint64_t v207 = *(void *)(v223 + 104);
    uint64_t v209 = *(void *)(v223 + 144);
    uint64_t v208 = *(void *)(v223 + 152);
    uint64_t v211 = *(void *)(v223 + 160);
    uint64_t v210 = *(void *)(v223 + 168);
    unsigned __int8 v213 = *(unsigned char *)(v223 + 176);
    uint64_t v275 = *(void *)(v223 + 120);
    uint64_t v277 = *(void *)(v223 + 112);
    uint64_t v270 = *(void *)(v223 + 136);
    uint64_t v272 = *(void *)(v223 + 128);
    sub_1BFEF8708(v206, v207, v277, v275, v272, v270, v209, v208, v211, v210, v213);
  }
  uint64_t v230 = v207;
  uint64_t v232 = v206;
  int v214 = *((unsigned __int8 *)v222 + 177);
  if (v214 == 2) {
    LOBYTE(v214) = *(unsigned char *)(v223 + 177);
  }
  swift_beginAccess();
  uint64_t v215 = v222[23];
  uint64_t v216 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v216 + 16) = v221;
  *(void *)(v216 + 24) = v220;
  *(void *)(v216 + 32) = v219;
  *(void *)(v216 + 40) = v218;
  swift_beginAccess();
  *(void *)(v216 + 48) = v177;
  *(void *)(v216 + 56) = v260;
  *(void *)(v216 + 64) = v255;
  *(void *)(v216 + 72) = v237;
  *(void *)(v216 + 80) = v235;
  *(unsigned char *)(v216 + 88) = v234;
  *(void *)(v216 + 96) = v232;
  *(void *)(v216 + 104) = v230;
  *(void *)(v216 + 112) = v277;
  *(void *)(v216 + 120) = v275;
  *(void *)(v216 + 128) = v272;
  *(void *)(v216 + 136) = v270;
  *(void *)(v216 + 144) = v209;
  *(void *)(v216 + 152) = v208;
  *(void *)(v216 + 160) = v211;
  *(void *)(v216 + 168) = v210;
  *(unsigned char *)(v216 + 176) = v213;
  *(unsigned char *)(v216 + 177) = v214;
  swift_beginAccess();
  *(void *)(v216 + 184) = v215;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v266, v264, v262);
  sub_1BFEF8708(v258, v257, v253, v251, v249, v247, v245, v243, v241, v239, v212);
  swift_bridgeObjectRetain();
  return v216;
}

uint64_t sub_1C0409F34(uint64_t a1)
{
  uint64_t v100 = a1;
  unsigned __int8 v101 = 0;
  uint64_t v122 = *MEMORY[0x1E4F143B8];
  uint64_t v94 = *v1;
  swift_beginAccess();
  long long v89 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1C0EE1278(0, v3, 0, MEMORY[0x1E4FBC860]);
  long long v90 = sub_1C0EE1158(0, v3, 0, v4);
  uint64_t v92 = *(void *)(v2 + 16);
  uint64_t v93 = v2;
  if (!v92)
  {
LABEL_31:
    sub_1C040B85C();
    uint64_t v55 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v55 + 16);
    if (v56)
    {
      uint64_t v57 = v56 - 1;
      for (uint64_t i = 32; ; i += 160)
      {
        long long v59 = *(_OWORD *)(v55 + i + 16);
        long long v112 = *(_OWORD *)(v55 + i);
        long long v113 = v59;
        long long v60 = *(_OWORD *)(v55 + i + 32);
        long long v61 = *(_OWORD *)(v55 + i + 48);
        long long v62 = *(_OWORD *)(v55 + i + 80);
        long long v116 = *(_OWORD *)(v55 + i + 64);
        long long v117 = v62;
        long long v114 = v60;
        long long v115 = v61;
        long long v63 = *(_OWORD *)(v55 + i + 96);
        long long v64 = *(_OWORD *)(v55 + i + 112);
        long long v65 = *(_OWORD *)(v55 + i + 144);
        long long v120 = *(_OWORD *)(v55 + i + 128);
        long long v121 = v65;
        long long v118 = v63;
        long long v119 = v64;
        sub_1C040B90C((uint64_t)&v112);
        unint64_t v67 = v5[2];
        unint64_t v66 = v5[3];
        if (v67 >= v66 >> 1) {
          uint64_t v5 = sub_1C0EE1278((void *)(v66 > 1), v67 + 1, 1, v5);
        }
        void v5[2] = v67 + 1;
        long long v68 = &v5[19 * v67];
        long long v69 = v113;
        *((_OWORD *)v68 + 2) = v112;
        *((_OWORD *)v68 + 3) = v69;
        long long v70 = v114;
        long long v71 = v115;
        long long v72 = v117;
        *((_OWORD *)v68 + 6) = v116;
        *((_OWORD *)v68 + 7) = v72;
        *((_OWORD *)v68 + 4) = v70;
        *((_OWORD *)v68 + 5) = v71;
        long long v73 = v118;
        long long v74 = v119;
        long long v75 = v120;
        v68[22] = v121;
        *((_OWORD *)v68 + 9) = v74;
        *((_OWORD *)v68 + 10) = v75;
        *((_OWORD *)v68 + 8) = v73;
        if (!v57) {
          break;
        }
        --v57;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v76 = v5[2];
    if (v76)
    {
      uint64_t v77 = (uint64_t)v89;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v78 = v76 - 1;
      uint64_t v79 = v77;
      for (uint64_t j = 4; ; j += 19)
      {
        long long v81 = *(_OWORD *)&v5[j + 2];
        long long v112 = *(_OWORD *)&v5[j];
        long long v113 = v81;
        long long v82 = *(_OWORD *)&v5[j + 4];
        long long v83 = *(_OWORD *)&v5[j + 6];
        long long v84 = *(_OWORD *)&v5[j + 10];
        long long v116 = *(_OWORD *)&v5[j + 8];
        long long v117 = v84;
        long long v114 = v82;
        long long v115 = v83;
        long long v85 = *(_OWORD *)&v5[j + 12];
        long long v86 = *(_OWORD *)&v5[j + 14];
        long long v87 = *(_OWORD *)&v5[j + 16];
        *(void *)&long long v121 = v5[j + 18];
        long long v119 = v86;
        long long v120 = v87;
        long long v118 = v85;
        long long v108 = v85;
        long long v109 = v86;
        long long v110 = v87;
        uint64_t v111 = v121;
        long long v104 = v114;
        long long v105 = v115;
        long long v106 = v116;
        long long v107 = v84;
        long long v102 = v112;
        long long v103 = v113;
        swift_allocObject();
        sub_1C040B90C((uint64_t)&v112);
        uint64_t v79 = sub_1C040B9EC(v79, &v102);
        swift_release();
        if (!v78) {
          break;
        }
        --v78;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v79 = (uint64_t)v89;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v79;
  }
  uint64_t v91 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
LABEL_3:
  unint64_t v96 = v6;
  uint64_t v7 = v91 + 152 * v6;
  long long v8 = *(_OWORD *)(v7 + 16);
  long long v112 = *(_OWORD *)v7;
  long long v113 = v8;
  long long v9 = *(_OWORD *)(v7 + 32);
  long long v10 = *(_OWORD *)(v7 + 48);
  long long v11 = *(_OWORD *)(v7 + 80);
  long long v116 = *(_OWORD *)(v7 + 64);
  long long v117 = v11;
  long long v114 = v9;
  long long v115 = v10;
  long long v12 = *(_OWORD *)(v7 + 96);
  long long v13 = *(_OWORD *)(v7 + 112);
  long long v14 = *(_OWORD *)(v7 + 128);
  *(void *)&long long v121 = *(void *)(v7 + 144);
  long long v119 = v13;
  long long v120 = v14;
  long long v118 = v12;
  long long v15 = v112;
  sub_1C040B90C((uint64_t)&v112);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  long long v102 = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1BFEF53C0((uint64_t *)&v102);
  swift_bridgeObjectRelease();
  uint64_t v98 = *(void *)(v16 + 16);
  if (!v98)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  char v95 = v5;
  unint64_t v17 = 0;
  uint64_t v18 = (uint64_t *)(v16 + 64);
  uint64_t v19 = v16;
  while (1)
  {
    if (v17 >= *(void *)(v19 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v97 = *(v18 - 2);
    uint64_t v20 = *(v18 - 1);
    uint64_t v21 = *v18;
    char v22 = *(unsigned char *)(v20 + 32);
    unsigned int v23 = v22 & 0x3F;
    unint64_t v24 = (unint64_t)((1 << v22) + 63) >> 6;
    size_t v25 = 8 * v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v27 = (char *)swift_slowAlloc();
    bzero(v27, v25);
    uint64_t v31 = v24;
    unint64_t v29 = v101;
    uint64_t v30 = sub_1BFEFB09C((uint64_t)v27, v31, v20, v100);
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_47;
    }
    unsigned __int8 v101 = 0;
    MEMORY[0x1C18C9B00](v27, -1, -1);
LABEL_15:
    char v32 = sub_1BFEFAE14(v30, v20);
    swift_release();
    if (v32 & 1) != 0 && (sub_1BFEFB810(v100, v21))
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = v97;
      if (v97 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C040B90C((uint64_t)&v112);
        uint64_t v5 = v95;
        unint64_t v46 = v95[2];
        unint64_t v45 = v95[3];
        if (v46 >= v45 >> 1) {
          uint64_t v5 = sub_1C0EE1278((void *)(v45 > 1), v46 + 1, 1, v95);
        }
        void v5[2] = v46 + 1;
        uint64_t v47 = &v5[19 * v46];
        long long v48 = v113;
        *((_OWORD *)v47 + 2) = v112;
        *((_OWORD *)v47 + 3) = v48;
        long long v49 = v114;
        long long v50 = v115;
        long long v51 = v117;
        *((_OWORD *)v47 + 6) = v116;
        *((_OWORD *)v47 + 7) = v51;
        *((_OWORD *)v47 + 4) = v49;
        *((_OWORD *)v47 + 5) = v50;
        long long v52 = v118;
        long long v53 = v119;
        long long v54 = v120;
        v47[22] = v121;
        *((_OWORD *)v47 + 9) = v53;
        *((_OWORD *)v47 + 10) = v54;
        *((_OWORD *)v47 + 8) = v52;
      }
      else
      {
        sub_1C040B90C((uint64_t)&v112);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v34 = v90;
        unint64_t v36 = v90[2];
        unint64_t v35 = v90[3];
        uint64_t v5 = v95;
        if (v36 >= v35 >> 1) {
          long long v34 = sub_1C0EE1158((void *)(v35 > 1), v36 + 1, 1, v90);
        }
        long long v106 = v116;
        long long v107 = v117;
        long long v104 = v114;
        long long v105 = v115;
        uint64_t v111 = v121;
        long long v110 = v120;
        long long v108 = v118;
        long long v109 = v119;
        long long v102 = v112;
        long long v103 = v113;
        v34[2] = v36 + 1;
        long long v90 = v34;
        long long v37 = &v34[20 * v36];
        long long v38 = v103;
        *((_OWORD *)v37 + 2) = v102;
        *((_OWORD *)v37 + 3) = v38;
        long long v39 = v104;
        long long v40 = v105;
        long long v41 = v107;
        *((_OWORD *)v37 + 6) = v106;
        *((_OWORD *)v37 + 7) = v41;
        *((_OWORD *)v37 + 4) = v39;
        *((_OWORD *)v37 + 5) = v40;
        long long v42 = v108;
        long long v43 = v110;
        uint64_t v44 = v111;
        *((_OWORD *)v37 + 9) = v109;
        *((_OWORD *)v37 + 10) = v43;
        *((_OWORD *)v37 + 8) = v42;
        v37[22] = v44;
        v37[23] = v33;
      }
LABEL_26:
      sub_1C040B77C((uint64_t)&v112);
LABEL_27:
      unint64_t v6 = v96 + 1;
      if (v96 + 1 == v92)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(void *)(v93 + 16)) {
LABEL_45:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 += 5;
    if (v98 == v17)
    {
      swift_bridgeObjectRelease();
      sub_1C040B77C((uint64_t)&v112);
      uint64_t v5 = v95;
      goto LABEL_27;
    }
  }
  long long v99 = &v89;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v27 = (char *)&v89 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v27, v25);
  uint64_t v28 = v24;
  unint64_t v29 = v101;
  uint64_t v30 = sub_1BFEFB09C((uint64_t)v27, v28, v20, v100);
  swift_bridgeObjectRelease();
  if (!v29)
  {
    unsigned __int8 v101 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  uint64_t result = MEMORY[0x1C18C9B00](v27, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C040A6B4()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[5];
  uint64_t v32 = v0[4];
  swift_beginAccess();
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v30 = v6;
  uint64_t v31 = v4;
  uint64_t v29 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7) {
    uint64_t v8 = sub_1C096BB70(v7);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v1[9];
  uint64_t v10 = v1[10];
  char v11 = *((unsigned char *)v1 + 88);
  uint64_t v12 = v1[13];
  uint64_t v13 = v1[16];
  int v14 = *((unsigned __int8 *)v1 + 176);
  uint64_t v33 = v3;
  uint64_t v27 = v1[12];
  uint64_t v28 = v8;
  uint64_t v25 = v1[15];
  uint64_t v26 = v1[14];
  uint64_t v23 = v1[18];
  uint64_t v24 = v1[17];
  uint64_t v21 = v1[20];
  uint64_t v22 = v1[19];
  uint64_t v20 = v1[21];
  uint64_t v15 = v2;
  sub_1BFEF6828(v9, v10, v11);
  if (v14 != 254)
  {
    sub_1C10E55EC(v34);
    uint64_t v13 = v34[0];
    uint64_t v12 = v12;
  }
  char v16 = *((unsigned char *)v1 + 177);
  swift_beginAccess();
  uint64_t v17 = v1[23];
  uint64_t v18 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v18 + 16) = v15;
  *(void *)(v18 + 24) = v33;
  *(void *)(v18 + 32) = v32;
  *(void *)(v18 + 40) = v31;
  swift_beginAccess();
  *(void *)(v18 + 48) = v30;
  *(void *)(v18 + 56) = v29;
  *(void *)(v18 + 64) = v28;
  *(void *)(v18 + 72) = v9;
  *(void *)(v18 + 80) = v10;
  *(unsigned char *)(v18 + 88) = v11;
  *(void *)(v18 + 96) = v27;
  *(void *)(v18 + 104) = v12;
  *(void *)(v18 + 112) = v26;
  *(void *)(v18 + 120) = v25;
  *(void *)(v18 + 128) = v13;
  *(void *)(v18 + 136) = v24;
  *(void *)(v18 + 144) = v23;
  *(void *)(v18 + 152) = v22;
  *(void *)(v18 + 160) = v21;
  *(void *)(v18 + 168) = v20;
  *(unsigned char *)(v18 + 176) = v14;
  *(unsigned char *)(v18 + 177) = v16;
  swift_beginAccess();
  *(void *)(v18 + 184) = v17;
  swift_bridgeObjectRetain();
  return v18;
}

uint64_t FormatIssueCoverNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  sub_1BFEF8738(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssueCoverNodeStyle.__deallocating_deinit()
{
  FormatIssueCoverNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C040A9D0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed25FormatIssueCoverNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatIssueCoverNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatIssueCoverNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  uint64_t v10 = *(void *)(v1 + 120);
  uint64_t v11 = *(void *)(v1 + 128);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatIssueCoverNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t FormatIssueCoverNodeStyle.Selector.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C040AA7C(void *a1)
{
  return FormatIssueCoverNodeStyle.Selector.encode(to:)(a1);
}

uint64_t _s8NewsFeed25FormatIssueCoverNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v52 = *(void *)(a1 + 56);
  uint64_t v53 = *(void *)(a1 + 64);
  uint64_t v54 = *(void *)(a1 + 72);
  uint64_t v55 = *(void *)(a1 + 80);
  uint64_t v56 = *(void *)(a1 + 88);
  uint64_t v57 = *(void *)(a1 + 96);
  uint64_t v58 = *(void *)(a1 + 104);
  uint64_t v59 = *(void *)(a1 + 112);
  uint64_t v50 = *(void *)(a1 + 128);
  uint64_t v51 = *(void *)(a1 + 120);
  int v60 = *(unsigned __int8 *)(a1 + 136);
  int v38 = *(unsigned __int8 *)(a1 + 137);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v61 = *(void *)(a2 + 40);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v41 = *(void *)(a2 + 56);
  uint64_t v42 = *(void *)(a2 + 64);
  uint64_t v43 = *(void *)(a2 + 72);
  uint64_t v44 = *(void *)(a2 + 80);
  uint64_t v45 = *(void *)(a2 + 88);
  uint64_t v46 = *(void *)(a2 + 96);
  uint64_t v47 = *(void *)(a2 + 104);
  uint64_t v48 = *(void *)(a2 + 112);
  uint64_t v39 = *(void *)(a2 + 128);
  uint64_t v40 = *(void *)(a2 + 120);
  int v49 = *(unsigned __int8 *)(a2 + 136);
  int v37 = *(unsigned __int8 *)(a2 + 137);
  uint64_t v36 = *(void *)(a2 + 144);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v12 = sub_1C1520A9C();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (v2)
  {
    if (!v9) {
      return 0;
    }
    uint64_t v35 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C00DE998(v2, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v35 = v7;
    if (v9) {
      return 0;
    }
  }
  if (v4)
  {
    if (!v8) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    BOOL v16 = sub_1C00DFB58(v15, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v16) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v6 > 0xFD)
  {
    uint64_t v17 = v3;
    if (v11 > 0xFD) {
      goto LABEL_21;
    }
LABEL_19:
    sub_1BFEF6828(v10, v61, v11);
    sub_1BFEF68AC(v17, v5, v6);
    sub_1BFEF68AC(v10, v61, v11);
    return 0;
  }
  uint64_t v17 = v3;
  uint64_t v73 = v3;
  uint64_t v74 = v5;
  LOBYTE(v75) = v6;
  if (v11 > 0xFD)
  {
    sub_1BFF046A0(v3, v5, v6);
    sub_1BFF046A0(v3, v5, v6);
    sub_1BFF04738(v3, v5, v6);
    goto LABEL_19;
  }
  uint64_t v62 = v10;
  uint64_t v63 = v61;
  LOBYTE(v64) = v11;
  sub_1BFEF6828(v3, v5, v6);
  sub_1BFF046A0(v3, v5, v6);
  char v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v73, (uint64_t)&v62);
  sub_1BFF04738(v73, v74, v75);
  sub_1BFEF68AC(v3, v5, v6);
  if ((v18 & 1) == 0) {
    return 0;
  }
LABEL_21:
  char v19 = v60;
  if (v60 != 254)
  {
    uint64_t v28 = v52;
    uint64_t v27 = v53;
    uint64_t v73 = v52;
    uint64_t v74 = v53;
    uint64_t v26 = v54;
    uint64_t v25 = v55;
    uint64_t v75 = v54;
    uint64_t v76 = v55;
    uint64_t v24 = v56;
    uint64_t v23 = v57;
    uint64_t v77 = v56;
    uint64_t v78 = v57;
    uint64_t v22 = v58;
    uint64_t v79 = v58;
    uint64_t v80 = v59;
    uint64_t v29 = v50;
    uint64_t v30 = v51;
    uint64_t v81 = v51;
    uint64_t v82 = v50;
    char v83 = v60;
    unsigned __int8 v20 = v49;
    if (v49 != 254)
    {
      uint64_t v62 = v41;
      LODWORD(v63) = v42;
      uint64_t v64 = v43;
      uint64_t v65 = v44;
      uint64_t v66 = v45;
      uint64_t v67 = v46;
      uint64_t v68 = v47;
      uint64_t v69 = v48;
      uint64_t v70 = v40;
      uint64_t v71 = v39;
      char v72 = v49;
      sub_1BFEF8708(v52, v53, v54, v55, v56, v57, v58, v59, v51, v50, v60);
      swift_retain();
      char v31 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v73, (uint64_t)&v62);
      swift_release();
      sub_1BFEF8738(v52, v53, v54, v55, v56, v57, v58, v59, v51, v50, v60);
      if ((v31 & 1) == 0) {
        return 0;
      }
      goto LABEL_30;
    }
    swift_retain();
    uint64_t v21 = v59;
    char v19 = v60;
LABEL_26:
    uint64_t v73 = v28;
    uint64_t v74 = v27;
    uint64_t v75 = v26;
    uint64_t v76 = v25;
    uint64_t v77 = v24;
    uint64_t v78 = v23;
    uint64_t v79 = v22;
    uint64_t v80 = v21;
    uint64_t v81 = v30;
    uint64_t v82 = v29;
    char v83 = v19;
    uint64_t v84 = v41;
    uint64_t v85 = v42;
    uint64_t v86 = v43;
    uint64_t v87 = v44;
    uint64_t v88 = v45;
    uint64_t v89 = v46;
    uint64_t v90 = v47;
    uint64_t v91 = v48;
    uint64_t v92 = v40;
    uint64_t v93 = v39;
    unsigned __int8 v94 = v20;
    sub_1BFEF8708(v41, v42, v43, v44, v45, v46, v47, v48, v40, v39, v20);
    sub_1C02D2004((uint64_t)&v73);
    return 0;
  }
  unsigned __int8 v20 = v49;
  uint64_t v22 = v58;
  uint64_t v21 = v59;
  uint64_t v24 = v56;
  uint64_t v23 = v57;
  uint64_t v26 = v54;
  uint64_t v25 = v55;
  uint64_t v28 = v52;
  uint64_t v27 = v53;
  uint64_t v29 = v50;
  uint64_t v30 = v51;
  if (v49 != 254) {
    goto LABEL_26;
  }
LABEL_30:
  if (v38 == 2)
  {
    uint64_t v32 = v35;
    if (v37 != 2) {
      return 0;
    }
    goto LABEL_35;
  }
  uint64_t result = 0;
  if (v37 != 2)
  {
    uint64_t v32 = v35;
    if ((((v38 & 1) == 0) ^ v37))
    {
LABEL_35:
      if (v32)
      {
        if (v36)
        {
          swift_bridgeObjectRetain();
          uint64_t v33 = swift_bridgeObjectRetain();
          char v34 = sub_1C00E0858(v33, v36);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v34) {
            return 1;
          }
        }
      }
      else if (!v36)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C040AF88(uint64_t a1)
{
  uint64_t result = sub_1C040B0C0(&qword_1EA19B420);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C040AFCC(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C040B0C0(qword_1EB867938);
  uint64_t result = sub_1C040B0C0(&qword_1EB867930);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C040B034(void *a1)
{
  a1[1] = sub_1C040B0C0(qword_1EB867938);
  a1[2] = sub_1C040B0C0(&qword_1EB867930);
  uint64_t result = sub_1C040B0C0(&qword_1EA19B428);
  a1[3] = result;
  return result;
}

uint64_t sub_1C040B0C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatIssueCoverNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C040B100(uint64_t a1)
{
  unint64_t result = sub_1C040B128();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C040B128()
{
  unint64_t result = qword_1EA19B430;
  if (!qword_1EA19B430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B430);
  }
  return result;
}

unint64_t sub_1C040B17C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C006F128();
  unint64_t result = sub_1C006F17C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C040B1AC(void *a1)
{
  a1[1] = sub_1C006F128();
  a1[2] = sub_1C006F17C();
  unint64_t result = sub_1C040B1E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C040B1E4()
{
  unint64_t result = qword_1EA19B438;
  if (!qword_1EA19B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B438);
  }
  return result;
}

uint64_t sub_1C040B238@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C040B288@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C040B2D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 184);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatIssueCoverNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatIssueCoverNodeStyle);
}

uint64_t dispatch thunk of FormatIssueCoverNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:traits:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t assignWithCopy for FormatIssueCoverNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v11 = *(void *)(a2 + 32);
      uint64_t v12 = *(void *)(a2 + 40);
      sub_1BFF046A0(v11, v12, *(unsigned char *)(a2 + 48));
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v11;
      *(void *)(a1 + 40) = v12;
      char v15 = *(unsigned char *)(a1 + 48);
      *(unsigned char *)(a1 + 48) = v6;
      sub_1BFF04738(v13, v14, v15);
    }
    else
    {
      sub_1C02D0F84(a1 + 32);
      char v8 = *(unsigned char *)(a2 + 48);
      *uint64_t v4 = *v5;
      *(unsigned char *)(a1 + 48) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    sub_1BFF046A0(v9, v10, *(unsigned char *)(a2 + 48));
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(unsigned char *)(a1 + 48) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *uint64_t v4 = v7;
  }
  BOOL v16 = (_OWORD *)(a1 + 56);
  uint64_t v17 = (_OWORD *)(a2 + 56);
  int v18 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v18 == 254)
    {
      long long v19 = *(_OWORD *)(a2 + 72);
      _OWORD *v16 = *v17;
      *(_OWORD *)(a1 + 72) = v19;
      long long v20 = *(_OWORD *)(a2 + 88);
      long long v21 = *(_OWORD *)(a2 + 104);
      long long v22 = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v21;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 88) = v20;
    }
    else
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v27 = *(_OWORD *)(a2 + 96);
      long long v28 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v27;
      *(_OWORD *)(a1 + 112) = v28;
      swift_retain();
    }
  }
  else if (v18 == 254)
  {
    sub_1C02D0FD8(a1 + 56);
    long long v23 = *(_OWORD *)(a2 + 72);
    _OWORD *v16 = *v17;
    *(_OWORD *)(a1 + 72) = v23;
    long long v25 = *(_OWORD *)(a2 + 104);
    long long v24 = *(_OWORD *)(a2 + 120);
    long long v26 = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v25;
    *(_OWORD *)(a1 + 120) = v24;
    *(_OWORD *)(a1 + 88) = v26;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_retain();
    swift_release();
    long long v29 = *(_OWORD *)(a2 + 96);
    long long v30 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v29;
    *(_OWORD *)(a1 + 112) = v30;
  }
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatIssueCoverNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a2 + 32);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 48);
  if (v6 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + 48);
  if (v7 > 0xFD)
  {
    sub_1C02D0F84(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v5;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v5;
  *(unsigned char *)(a1 + 48) = v7;
  sub_1BFF04738(v8, v9, v6);
LABEL_6:
  if (*(unsigned __int8 *)(a1 + 136) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 136) != 254)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_release();
      long long v12 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      goto LABEL_11;
    }
    sub_1C02D0FD8(a1 + 56);
  }
  long long v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  long long v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v11;
LABEL_11:
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatIssueCoverNodeStyle.Selector()
{
  return &type metadata for FormatIssueCoverNodeStyle.Selector;
}

void sub_1C040B718()
{
  if (!qword_1EA19B440)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B440);
    }
  }
}

uint64_t sub_1C040B77C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 112);
  char v8 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v2, v3, v8);
  sub_1BFEF8738(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C040B85C()
{
  if (!qword_1EA1A87C0)
  {
    sub_1C040B8B8();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A87C0);
    }
  }
}

unint64_t sub_1C040B8B8()
{
  unint64_t result = qword_1EA19B448;
  if (!qword_1EA19B448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B448);
  }
  return result;
}

uint64_t sub_1C040B90C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 112);
  char v8 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v2, v3, v8);
  sub_1BFEF8708(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C040B9EC(uint64_t a1, long long *a2)
{
  long long v4 = a2[7];
  long long v55 = a2[6];
  long long v56 = v4;
  long long v57 = a2[8];
  uint64_t v58 = *((void *)a2 + 18);
  long long v5 = a2[3];
  long long v51 = a2[2];
  long long v52 = v5;
  long long v6 = a2[5];
  long long v53 = a2[4];
  long long v54 = v6;
  long long v7 = a2[1];
  long long v49 = *a2;
  long long v50 = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = v8;
  *(void *)(v2 + 24) = v9;
  uint64_t v10 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  *(void *)(v2 + 40) = v10;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v11;
  uint64_t v12 = v50;
  if (!(void)v50) {
    uint64_t v12 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 56) = v12;
  uint64_t v13 = *((void *)&v50 + 1);
  if (!*((void *)&v50 + 1)) {
    uint64_t v13 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 64) = v13;
  uint64_t v14 = *((void *)&v51 + 1);
  unsigned long long v16 = v51;
  uint64_t v47 = v16 >> 64;
  uint64_t v15 = v16;
  uint64_t v48 = v51;
  char v17 = v52;
  char v46 = v52;
  if (v52 >= 0xFEu)
  {
    uint64_t v15 = *(void *)(a1 + 72);
    uint64_t v14 = *(void *)(a1 + 80);
    char v17 = *(unsigned char *)(a1 + 88);
    sub_1BFEF6828(v15, v14, v17);
  }
  *(void *)(v2 + 72) = v15;
  *(void *)(v2 + 80) = v14;
  uint64_t v19 = *((void *)&v53 + 1);
  uint64_t v18 = v53;
  uint64_t v20 = *((void *)&v54 + 1);
  uint64_t v21 = v54;
  uint64_t v23 = *((void *)&v55 + 1);
  uint64_t v22 = v55;
  uint64_t v24 = v56;
  uint64_t v44 = v53;
  uint64_t v45 = *((void *)&v52 + 1);
  uint64_t v25 = *((void *)&v52 + 1);
  uint64_t v42 = v54;
  uint64_t v43 = *((void *)&v53 + 1);
  uint64_t v40 = v55;
  uint64_t v41 = *((void *)&v54 + 1);
  uint64_t v38 = v56;
  uint64_t v39 = *((void *)&v55 + 1);
  uint64_t v27 = *((void *)&v56 + 1);
  uint64_t v26 = v57;
  uint64_t v36 = v57;
  uint64_t v37 = *((void *)&v56 + 1);
  *(unsigned char *)(v2 + 88) = v17;
  unsigned __int8 v28 = BYTE8(v57);
  unsigned __int8 v35 = BYTE8(v57);
  if (BYTE8(v57) == 254)
  {
    uint64_t v33 = *(void *)(a1 + 104);
    uint64_t v34 = *(void *)(a1 + 96);
    uint64_t v21 = *(void *)(a1 + 120);
    uint64_t v32 = *(void *)(a1 + 112);
    uint64_t v20 = *(void *)(a1 + 128);
    uint64_t v22 = *(void *)(a1 + 136);
    uint64_t v23 = *(void *)(a1 + 144);
    uint64_t v24 = *(void *)(a1 + 152);
    uint64_t v27 = *(void *)(a1 + 160);
    uint64_t v26 = *(void *)(a1 + 168);
    unsigned __int8 v28 = *(unsigned char *)(a1 + 176);
    sub_1BFEF8708(v34, v33, v32, v21, v20, v22, v23, v24, v27, v26, v28);
    uint64_t v19 = v32;
    uint64_t v18 = v33;
    uint64_t v25 = v34;
  }
  *(void *)(v2 + 96) = v25;
  *(void *)(v2 + 104) = v18;
  *(void *)(v2 + 112) = v19;
  *(void *)(v2 + 120) = v21;
  *(void *)(v2 + 128) = v20;
  *(void *)(v2 + 136) = v22;
  *(void *)(v2 + 144) = v23;
  *(void *)(v2 + 152) = v24;
  *(void *)(v2 + 160) = v27;
  *(void *)(v2 + 168) = v26;
  *(unsigned char *)(v2 + 176) = v28;
  char v29 = BYTE9(v57);
  if (BYTE9(v57) == 2) {
    char v29 = *(unsigned char *)(a1 + 177);
  }
  *(unsigned char *)(v2 + 177) = v29;
  uint64_t v30 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v48, v47, v46);
  sub_1BFEF8708(v45, v44, v43, v42, v41, v40, v39, v38, v37, v36, v35);
  swift_bridgeObjectRetain();
  sub_1C040B77C((uint64_t)&v49);
  if (!v30)
  {
    swift_beginAccess();
    uint64_t v30 = *(void *)(a1 + 184);
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  *(void *)(v2 + 184) = v30;
  return v2;
}

void *sub_1C040BCA8(double *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
  sub_1C0181BEC(0);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v49 = *(void *)(*(void *)(v5 - 8) + 72);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  uint64_t v9 = (void *)(v8 + v7);
  if (a2)
  {
    unint64_t v10 = *(void *)(a2 + 40);
    uint64_t v43 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C040A6B4();
    long long v52 = 0u;
    long long v53 = 0u;
    uint64_t v54 = 0;
    long long v55 = xmmword_1C1548460;
    uint64_t v11 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v51, v11 + 16);
    uint64_t v12 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v12 = sub_1C139486C;
    uint64_t v11 = 0;
    uint64_t v43 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v14 = (uint64_t (**)())((char *)v9 + *(int *)(v13 + 24));
  *uint64_t v14 = v12;
  v14[1] = (uint64_t (*)())v11;
  uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *(void *)(v8 + v7) = v43;
  v9[2] = 0;
  void v9[3] = 0;
  v9[1] = v10;
  unsigned long long v16 = (char *)v9 + *(int *)(v13 + 28);
  *(void *)unsigned long long v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = -1;
  char v17 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v17((uint64_t)v9, 0, 1, v13);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v8, v59);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v18 = swift_allocObject();
  *(void *)(inited + 32) = v18;
  *(void *)(v18 + 48) = v60;
  long long v19 = v59[1];
  *(_OWORD *)(v18 + 16) = v59[0];
  *(_OWORD *)(v18 + 32) = v19;
  uint64_t v20 = v49;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C152A660;
  uint64_t v22 = v21 + v7;
  uint64_t v23 = v17;
  sub_1C0433600(1701869908, 0xE400000000000000, 0x6F65646956, 0xE500000000000000, (void *)(v21 + v7));
  v17(v21 + v7, 0, 1, v13);
  if (a2)
  {
    uint64_t v24 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v24, (void *)(v22 + v49));
    uint64_t v20 = v49;
    v23(v22 + v49, 0, 1, v13);
    char v25 = *(unsigned char *)(a2 + 177);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v22 + v49));
    v17(v22 + v49, 0, 1, v13);
    char v25 = 2;
  }
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v25, (void *)(v22 + 2 * v20));
  v23(v22 + 2 * v20, 0, 1, v13);
  if (a2)
  {
    swift_beginAccess();
    uint64_t v26 = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v26 = 0;
  }
  uint64_t v27 = (void *)(v22 + 3 * v20);
  sub_1C04381F0(0x737469617254, 0xE600000000000000, v26, v27);
  v23((uint64_t)v27, 0, 1, v13);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v21, v61);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v28 = swift_allocObject();
  *(void *)(inited + 72) = v28;
  *(void *)(v28 + 48) = v62;
  long long v29 = v61[1];
  *(_OWORD *)(v28 + 16) = v61[0];
  *(_OWORD *)(v28 + 32) = v29;
  if (a2)
  {
    uint64_t v30 = *(void *)(a2 + 72);
    uint64_t v31 = *(void *)(a2 + 80);
    char v32 = *(unsigned char *)(a2 + 88);
    sub_1BFEF6828(v30, v31, v32);
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    char v32 = -2;
  }
  uint64_t v51 = v30;
  *(void *)&long long v52 = v31;
  BYTE8(v52) = v32;
  uint64_t v33 = sub_1C108626C(a1, (uint64_t)&v51);
  sub_1BFEF68AC(v30, v31, v32);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  long long v50 = (void *)inited;
  *(void *)(inited + 112) = v33;
  if (a2)
  {
    unsigned __int8 v45 = *(unsigned char *)(a2 + 176);
    uint64_t v47 = *(void *)(a2 + 168);
    uint64_t v48 = *(void *)(a2 + 160);
    uint64_t v34 = *(void *)(a2 + 96);
    uint64_t v35 = *(void *)(a2 + 104);
    uint64_t v36 = *(void *)(a2 + 112);
    uint64_t v37 = *(void *)(a2 + 120);
    uint64_t v38 = *(void *)(a2 + 128);
    uint64_t v39 = *(void *)(a2 + 136);
    uint64_t v40 = *(void *)(a2 + 144);
    a2 = *(void *)(a2 + 152);
    sub_1BFEF8708(v34, v35, v36, v37, v38, v39, v40, a2, v48, v47, v45);
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    unsigned __int8 v45 = -2;
  }
  uint64_t v51 = v34;
  *(void *)&long long v52 = v35;
  *((void *)&v52 + 1) = v36;
  *(void *)&long long v53 = v37;
  *((void *)&v53 + 1) = v38;
  uint64_t v54 = v39;
  *(void *)&long long v55 = v40;
  *((void *)&v55 + 1) = a2;
  uint64_t v56 = v48;
  uint64_t v57 = v47;
  unsigned __int8 v58 = v45;
  uint64_t v44 = sub_1C0AD49A4((uint64_t)&v51);
  sub_1BFEF8738(v34, v35, v36, v37, v38, v39, v40, a2, v48, v47, v45);
  v50[22] = &type metadata for FormatInspection;
  v50[23] = &off_1F1C29D30;
  v50[19] = v44;
  uint64_t v41 = sub_1C131B79C((uint64_t)v50);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v41;
}

uint64_t sub_1C040C3D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C040C420()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t IssueCover.identifier.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 56))
  {
    if (*(unsigned char *)(v0 + 56) == 1)
    {
      id v3 = v1;
      swift_bridgeObjectRetain();
      id v4 = objc_msgSend(v3, sel_identifier);
      uint64_t v5 = sub_1C151E62C();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 1701736302;
    }
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v6 = *(void **)(v0 + 48);
    uint64_t v8 = *(void **)(v0 + 32);
    uint64_t v11 = v0 + 8;
    uint64_t v9 = *(void *)(v0 + 8);
    unint64_t v10 = *(void **)(v11 + 8);
    id v12 = v1;
    id v13 = v10;
    id v14 = objc_msgSend(v12, sel_identifier);
    uint64_t v5 = sub_1C151E62C();

    sub_1C00FA1F0(v1, v9, v10, v2, v8, v7, v6, 0);
  }
  return v5;
}

id IssueCover.ImageModel.assetHandle.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t IssueCover.ImageModel.init(issue:aspectRatio:assetHandle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(void *)(a3 + 16) = a2;
  return result;
}

uint64_t IssueCover.LayeredModel.init(issue:aspectRatio:json:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(void *)a4 = result;
  *(double *)(a4 + 8) = a5;
  *(void *)(a4 + 16) = a2;
  *(void *)(a4 + 24) = a3;
  return result;
}

uint64_t IssueCover.Kind.description.getter()
{
  uint64_t v1 = 0x4D6465726579616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 1701736302;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6567616D69;
  }
}

uint64_t IssueCover.Kind.rawValue.getter()
{
  uint64_t v1 = 0x4D6465726579616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 1701736302;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6567616D69;
  }
}

NewsFeed::IssueCover::Kind_optional __swiftcall IssueCover.Kind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C040C6B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1491C34(*a1, *a2);
}

uint64_t sub_1C040C6C4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C040C764()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C040C7F0()
{
  return sub_1C1520E0C();
}

NewsFeed::IssueCover::Kind_optional sub_1C040C88C(Swift::String *a1)
{
  return IssueCover.Kind.init(rawValue:)(*a1);
}

void sub_1C040C898(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xEC00000061696465;
  uint64_t v5 = 0x4D6465726579616CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1701736302;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6567616D69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C040C8F4()
{
  uint64_t v1 = 0x4D6465726579616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 1701736302;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6567616D69;
  }
}

double IssueCover.aspectRatio.getter()
{
  double result = 0.75;
  if (*(unsigned char *)(v0 + 56) == 1) {
    double result = *(double *)(v0 + 8);
  }
  if (!*(unsigned char *)(v0 + 56)) {
    return *(double *)(v0 + 8);
  }
  return result;
}

void IssueCover.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

void IssueCover.imageModel.getter(void *a1@<X8>)
{
  if (*((unsigned char *)v1 + 56))
  {
    if (*((unsigned char *)v1 + 56) != 1)
    {
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
      return;
    }
    int v2 = (void *)*((void *)v1 + 6);
    id v6 = v2;
    long long v3 = v1[2];
  }
  else
  {
    int v2 = (void *)*((void *)v1 + 2);
    id v6 = v2;
    long long v3 = *v1;
  }
  *(_OWORD *)a1 = v3;
  a1[2] = v2;
  id v4 = (id)v3;
  id v5 = v6;
}

unint64_t sub_1C040CA04()
{
  unint64_t result = qword_1EA19B450;
  if (!qword_1EA19B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B450);
  }
  return result;
}

void destroy for IssueCover(uint64_t a1)
{
}

uint64_t initializeWithCopy for IssueCover(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void **)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1C00FA170(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for IssueCover(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void **)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1C00FA170(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void **)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  id v13 = *(void **)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void **)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  char v17 = *(void **)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  char v18 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v10;
  sub_1C00FA1F0(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for IssueCover(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  id v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void **)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  char v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  sub_1C00FA1F0(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t sub_1C040CC0C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 56) <= 1u) {
    return *(unsigned __int8 *)(a1 + 56);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C040CC24(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IssueCover()
{
  return &type metadata for IssueCover;
}

void *initializeBufferWithCopyOfBuffer for IssueCover.ImageModel(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

void destroy for IssueCover.ImageModel(uint64_t a1)
{
  int v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for IssueCover.ImageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for IssueCover.ImageModel(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for IssueCover.ImageModel()
{
  return &type metadata for IssueCover.ImageModel;
}

uint64_t destroy for IssueCover.LayeredModel(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IssueCover.LayeredModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueCover.LayeredModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IssueCover.LayeredModel(uint64_t a1, void *a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IssueCover.LayeredModel()
{
  return &type metadata for IssueCover.LayeredModel;
}

unsigned char *storeEnumTagSinglePayload for IssueCover.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C040CFB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueCover.Kind()
{
  return &type metadata for IssueCover.Kind;
}

uint64_t FormatBackgroundFeedPluginFactory.create(identifier:background:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = *(void **)(a4 + 8);
  uint64_t v8 = *(void **)(a4 + 16);
  id v18 = *(id *)a4;
  id v6 = v18;
  unint64_t v19 = (unint64_t)v7;
  uint64_t v20 = v8;
  long long v21 = *(_OWORD *)(a4 + 24);
  sub_1BFC66384(v4 + 16, (uint64_t)v17);
  id v9 = objc_allocWithZone((Class)type metadata accessor for FormatBackgroundViewController());
  swift_retain();
  id v10 = v6;
  id v11 = v7;
  id v12 = v8;
  swift_unknownObjectRetain();
  id v13 = sub_1C1499818(a3, (uint64_t)&v18, (uint64_t)v17);
  swift_release();
  unint64_t v14 = sub_1C040D16C();
  id v18 = v13;
  unint64_t v19 = v14;
  sub_1C151C97C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C151C90C();

  return v15;
}

uint64_t FormatBackgroundFeedPluginFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t FormatBackgroundFeedPluginFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C040D148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatBackgroundFeedPluginFactory.create(identifier:background:options:)(a1, a2, a3, a4);
}

unint64_t sub_1C040D16C()
{
  unint64_t result = qword_1EA19B458;
  if (!qword_1EA19B458)
  {
    type metadata accessor for FormatBackgroundViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA19B458);
  }
  return result;
}

uint64_t dispatch thunk of FormatBackgroundPluginFactoryType.create(identifier:background:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for FormatBackgroundFeedPluginFactory()
{
  return self;
}

uint64_t method lookup function for FormatBackgroundFeedPluginFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBackgroundFeedPluginFactory);
}

uint64_t FeedServiceType.fetchAll(from:until:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C151ECBC();
  uint64_t v10 = sub_1C0425484((uint64_t)&v12, v9, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t FeedService.state.getter()
{
  sub_1C005F468();
  return swift_retain();
}

uint64_t FeedService.__allocating_init(feed:cursorFactory:personalizationService:offlineProvider:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  FeedService.init(feed:cursorFactory:personalizationService:offlineProvider:)(a1, a2, a3, a4);
  return v8;
}

uint64_t FeedService.__allocating_init(feed:cursorFactory:personalizationService:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  FeedService.init(feed:cursorFactory:personalizationService:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1C040D438()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C040D45C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C040D474(uint64_t *a1)
{
  v2[6] = v1;
  v2[7] = *v1;
  uint64_t v4 = sub_1C151983C();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_1C15197FC();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v6 = sub_1C151982C();
  v2[22] = v6;
  v2[23] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a1;
  v2[24] = v7;
  v2[25] = v8;
  return MEMORY[0x1F4188298](sub_1BFE13F50, 0, 0);
}

uint64_t sub_1C040D684()
{
  uint64_t v1 = (void *)(v0 + 136);
  int v2 = sub_1C151981C();
  sub_1C151984C();
  os_signpost_type_t v3 = sub_1C151F61C();
  if (sub_1C151FD2C())
  {
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    swift_retain();
    sub_1C151987C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 64));
      uint64_t v7 = "";
    }
    uint64_t v1 = (void *)(v0 + 160);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 112);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 216))(*(void *)(v0 + 160), v9, v10);
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    os_signpost_id_t v12 = sub_1C15197EC();
    _os_signpost_emit_with_name_impl(&dword_1BFC31000, v2, v3, v12, "News.FeedService.EmitGroup", v7, v11, 2u);
    MEMORY[0x1C18C9B00](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {
  }
  uint64_t v13 = *(void *)(v0 + 184);
  uint64_t v14 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 176);
  (*(void (**)(void, void))(v0 + 240))(*v1, *(void *)(v0 + 112));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1C040D910()
{
  uint64_t v1 = (void *)(v0 + 128);
  swift_bridgeObjectRelease();
  swift_release_n();
  int v2 = sub_1C151981C();
  sub_1C151984C();
  os_signpost_type_t v3 = sub_1C151F61C();
  if (sub_1C151FD2C())
  {
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v6 = *(void *)(v0 + 64);
    swift_retain();
    sub_1C151987C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
      uint64_t v7 = "";
    }
    uint64_t v1 = (void *)(v0 + 160);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 112);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 216))(*(void *)(v0 + 160), v9, v10);
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    os_signpost_id_t v12 = sub_1C15197EC();
    _os_signpost_emit_with_name_impl(&dword_1BFC31000, v2, v3, v12, "News.FeedService.EmitGroup", v7, v11, 2u);
    MEMORY[0x1C18C9B00](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {
  }
  uint64_t v13 = *(void *)(v0 + 184);
  uint64_t v14 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 176);
  (*(void (**)(void, void))(v0 + 240))(*v1, *(void *)(v0 + 112));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t FeedService.fetchReplaceGroup(from:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FeedReplaceLocation();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151917C();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = v4;
  *((void *)v10 + 3) = v3;
  *((void *)v10 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v10[v9], v8, v5);
  swift_retain();
  return sub_1C1518FDC();
}

uint64_t sub_1C040DD98(uint64_t a1, void *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C0120D54;
  v6[4] = a3;
  v6[5] = a2;
  void v6[6] = *a2;
  return MEMORY[0x1F4188298](sub_1C040DEBC, 0, 0);
}

uint64_t sub_1C040DE74(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *v1;
  return MEMORY[0x1F4188298](sub_1C040DEBC, 0, 0);
}

uint64_t sub_1C040DEBC()
{
  uint64_t v1 = v0[6];
  v0[7] = *(void *)(v0[5] + 104);
  uint64_t v2 = *(void *)(v1 + 88);
  v0[8] = v2;
  uint64_t v3 = *(int **)(v2 + 48);
  uint64_t v4 = *(void *)(v1 + 80);
  v0[9] = v4;
  uint64_t v8 = (int *)((char *)v3 + *v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C040DFDC;
  uint64_t v6 = v0[4];
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))v8)(v0 + 2, v6, v4, v2);
}

uint64_t sub_1C040DFDC()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C040E29C;
  }
  else {
    uint64_t v2 = sub_1C040E0F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C040E0F0()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[2];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v5;
  unint64_t v7 = v6 | 0x2000000000000000;
  uint64_t v13 = v6 | 0x2000000000000000;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FeedReplaceLocation();
  static FeedLocation.container(_:)(*(void *)(v4 + *(int *)(v8 + 36)), &v14);
  uint64_t v15 = v14;
  uint64_t v9 = sub_1BFD009F8(v7);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v1 + 32);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10(&v15, v9, v2, v1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  id v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v13);
}

uint64_t sub_1C040E29C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C040E30C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 496) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1C040F334;
  }
  else
  {
    *(void *)(v4 + 504) = a1;
    uint64_t v5 = sub_1C040E444;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C040E444()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v6 = v0[63];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_1C040E5EC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 536) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1C040F4D8;
  }
  else
  {
    *(void *)(v4 + 544) = a1;
    uint64_t v5 = sub_1C040E724;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C040E724()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v6 = v0[68];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_1C040E8D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 592) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C040EFF0;
  }
  else
  {
    *(void *)(v4 + 600) = a1;
    uint64_t v5 = sub_1C040E9F8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C040E9F8()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v6 = v0[75];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_1C040EB98(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 632) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = sub_1C040F18C;
  }
  else
  {
    *(void *)(v4 + 640) = a1;
    uint64_t v5 = sub_1C040ECD0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C040ECD0()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v6 = v0[80];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_1C040EE7C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C040EFF0()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C040F18C()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C040F334()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C040F4D8()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C040F680()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C040F830(uint64_t a1, void *a2, double a3)
{
  *(void *)(v4 + 176) = v3;
  *(double *)(v4 + 168) = a3;
  *(void *)(v4 + 152) = a1;
  *(void *)(v4 + 160) = a2;
  *(void *)(v4 + 184) = *a2;
  return MEMORY[0x1F4188298](sub_1BFE610B4, 0, 0);
}

uint64_t sub_1C040F880()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C040FAEC;
  }
  else {
    uint64_t v2 = sub_1C040F994;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C040F994()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C040F9F8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C040FAEC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C040FB50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C040FBBC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 352) = a1;
  *(void *)(v3 + 360) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1C0410930;
  }
  else {
    uint64_t v4 = sub_1C040FCD0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C040FCD0()
{
  uint64_t v74 = v0;
  uint64_t v65 = v0[44];
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[28];
  uint64_t v62 = v0[30];
  uint64_t v63 = v0[29];
  uint64_t v66 = v0[26];
  uint64_t v67 = v0[27];
  uint64_t v60 = v0[25];
  uint64_t v61 = v0[24];
  uint64_t v57 = v0[23];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v58 = v0[18];
  v71[0] = v0[40];
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v6 + 32);
  swift_retain();
  v7(v71, v1, v5, v6);
  swift_release();
  uint64_t v8 = (uint64_t *)swift_retain();
  uint64_t v9 = sub_1C04C64E4(v8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  unsigned __int8 v69 = 7;
  uint64_t v10 = sub_1C151631C();
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v3, 1, 1, v10);
  v11(v67, 1, 1, v10);
  v0[11] = *(void *)(v65 + qword_1EB93C680);
  uint64_t v12 = (void *)swift_task_alloc();
  _OWORD v12[2] = v5;
  v12[3] = v6;
  v12[4] = v9;
  uint64_t v13 = type metadata accessor for FeedCursorGroup();
  uint64_t v59 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v55 = v13;
  uint64_t v56 = (unsigned char *)sub_1C151E97C();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v66, 1, 1);
  uint64_t v14 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v58, 1, 1, v14);
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C0426A90(v15, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  FeedJournal.init(entries:)((uint64_t)v16, v70);
  v71[0] = v70[0];
  v71[1] = v70[1];
  v71[2] = v70[2];
  uint64_t v72 = 0;
  __int16 v73 = 256;
  uint64_t v17 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v2, 0, &v69, v3, v67, 0, 0, 0, 0, v56, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          v66,
          v58,
          v71,
          (uint64_t)&v72,
          0,
          0,
          0);
  v0[46] = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C04276B8(v58, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v66, v61);
  unint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v67, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v3, (unint64_t *)&qword_1EB871180, v19);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v2, v63);
  uint64_t v20 = qword_1EB93C680;
  v0[14] = *(void *)&v17[qword_1EB93C680];
  uint64_t WitnessTable = swift_getWitnessTable();
  LOBYTE(v19) = sub_1C151F15C();
  sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  if (v19)
  {
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C1527210;
    unint64_t v23 = 0xE600000000000000;
    uint64_t v24 = 0x657669746361;
    char v25 = (void *)v22;
    switch(v17[32])
    {
      case 1:
        unint64_t v23 = 0xE400000000000000;
        uint64_t v24 = 1852138867;
        break;
      case 2:
        uint64_t v24 = 0x6E657A6F7266;
        break;
      case 3:
        uint64_t v24 = 0x656546664F646E65;
        unint64_t v23 = 0xE900000000000064;
        break;
      case 4:
        uint64_t v24 = 0x646568636163;
        break;
      case 5:
        unint64_t v23 = 0xE800000000000000;
        uint64_t v30 = 0x6C6F6F706572;
        goto LABEL_11;
      case 6:
        unint64_t v23 = 0xE800000000000000;
        uint64_t v30 = 0x646E61707865;
LABEL_11:
        uint64_t v24 = v30 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
        break;
      default:
        break;
    }
    uint64_t v31 = v0[40];
    uint64_t v32 = MEMORY[0x1E4FBB1A0];
    *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v33 = sub_1BFE9C558();
    v25[8] = v33;
    v25[4] = v24;
    v25[5] = v23;
    uint64_t v35 = *((void *)v18 + 2);
    uint64_t v34 = *((void *)v18 + 3);
    v25[12] = v32;
    v25[13] = v33;
    v25[9] = v35;
    v25[10] = v34;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    v0[13] = v31;
    uint64_t v36 = sub_1C151ECBC();
    v0[47] = v36;
    uint64_t v37 = (void *)swift_task_alloc();
    v0[48] = v37;
    *uint64_t v37 = v0;
    v37[1] = sub_1C04106F8;
    v38.n128_u64[0] = v0[16];
    return sub_1BFE60BA0(v0 + 13, v18, v36, v38);
  }
  else
  {
    uint64_t v68 = WitnessTable;
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1C152C7F0;
    unint64_t v27 = 0xE600000000000000;
    uint64_t v28 = 0x657669746361;
    long long v29 = (void *)v26;
    switch(v17[32])
    {
      case 1:
        unint64_t v27 = 0xE400000000000000;
        uint64_t v28 = 1852138867;
        break;
      case 2:
        uint64_t v28 = 0x6E657A6F7266;
        break;
      case 3:
        uint64_t v28 = 0x656546664F646E65;
        unint64_t v27 = 0xE900000000000064;
        break;
      case 4:
        uint64_t v28 = 0x646568636163;
        break;
      case 5:
        unint64_t v27 = 0xE800000000000000;
        uint64_t v40 = 0x6C6F6F706572;
        goto LABEL_20;
      case 6:
        unint64_t v27 = 0xE800000000000000;
        uint64_t v40 = 0x646E61707865;
LABEL_20:
        uint64_t v28 = v40 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
        break;
      default:
        break;
    }
    uint64_t v41 = v0[32];
    uint64_t v42 = MEMORY[0x1E4FBB1A0];
    *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v43 = sub_1BFE9C558();
    v29[8] = v43;
    v29[4] = v28;
    v29[5] = v27;
    uint64_t v45 = *((void *)v18 + 2);
    uint64_t v44 = *((void *)v18 + 3);
    v29[12] = v42;
    v29[13] = v43;
    v29[9] = v45;
    v29[10] = v44;
    uint64_t v46 = *(void *)&v18[v20];
    swift_bridgeObjectRetain();
    int8x16_t v64 = *(int8x16_t *)(v0 + 19);
    uint64_t v47 = MEMORY[0x1C18C6830](v46, v55);
    uint64_t v48 = MEMORY[0x1E4FBB5C8];
    v29[17] = MEMORY[0x1E4FBB550];
    v29[18] = v48;
    v29[14] = v47;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v49 = swift_allocObject();
    v0[12] = *(void *)&v18[v20];
    long long v50 = (int8x16_t *)swift_task_alloc();
    v50[1] = vextq_s8(v64, v64, 8uLL);
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0427148, (uint64_t)v50, v59, v41, MEMORY[0x1E4FBC248], v68, MEMORY[0x1E4FBC278], v51);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(void *)(v49 + 16) = v52;
    *(void *)(v49 + 24) = FeedCursorContainer.init(cursor:)(v18);
    swift_retain();
    unint64_t v53 = sub_1BFE14DE4(v49 | 0x2000000000000000);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = (uint64_t (*)(unint64_t))v0[1];
    return v54(v53);
  }
}

uint64_t sub_1C04106F8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0410B5C;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 400) = a1;
    uint64_t v5 = sub_1C0410828;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0410828()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0410930()
{
  uint64_t v1 = (void *)v0[45];
  sub_1C151F36C();
  sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  v0[8] = 0;
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  v0[9] = 0xE000000000000000;
  v0[10] = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1BFE9C558();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C1250510();
  swift_release();

  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = FeedCursorContainer.init(cursor:)(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(unint64_t))v0[1];
  return v7(v6 | 0x8000000000000000);
}

uint64_t sub_1C0410B5C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[49];
  sub_1C151F36C();
  sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  v0[8] = 0;
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  v0[9] = 0xE000000000000000;
  v0[10] = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1BFE9C558();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C1250510();
  swift_release();

  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = FeedCursorContainer.init(cursor:)(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(unint64_t))v0[1];
  return v7(v6 | 0x8000000000000000);
}

uint64_t sub_1C0410DA4@<X0>(void *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1C151811C();
  sub_1C03FB54C(v2, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0410F00@<X0>(void *a1@<X8>)
{
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1C151811C();
  sub_1C03FB848(v2, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C041106C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FeedCursorGroup();
  return sub_1C0F0321C(a1, v4, a2);
}

uint64_t sub_1C0411120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for FeedCursorGroup() + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t sub_1C0411264(uint64_t a1, uint64_t *a2, uint64_t a3, double a4)
{
  *(void *)(v5 + 728) = v4;
  *(double *)(v5 + 720) = a4;
  *(void *)(v5 + 712) = a3;
  *(void *)(v5 + 704) = a2;
  *(void *)(v5 + 696) = a1;
  uint64_t v6 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0427024(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  *(void *)(v5 + 736) = swift_task_alloc();
  *(void *)(v5 + 744) = *(void *)(v6 + 88);
  uint64_t v8 = *(void *)(v6 + 80);
  *(void *)(v5 + 752) = v8;
  *(void *)(v5 + 760) = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C151FD8C();
  *(void *)(v5 + 768) = v9;
  *(void *)(v5 + 776) = *(void *)(v9 - 8);
  *(void *)(v5 + 784) = swift_task_alloc();
  *(void *)(v5 + 792) = swift_task_alloc();
  *(void *)(v5 + 800) = swift_task_alloc();
  sub_1C0427024(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v7);
  *(void *)(v5 + 808) = swift_task_alloc();
  *(void *)(v5 + 816) = swift_task_alloc();
  *(void *)(v5 + 824) = swift_task_alloc();
  *(void *)(v5 + 832) = swift_task_alloc();
  uint64_t v10 = sub_1C151FD8C();
  *(void *)(v5 + 840) = v10;
  *(void *)(v5 + 848) = *(void *)(v10 - 8);
  *(void *)(v5 + 856) = swift_task_alloc();
  *(void *)(v5 + 864) = swift_task_alloc();
  uint64_t v11 = sub_1C151631C();
  *(void *)(v5 + 872) = v11;
  *(void *)(v5 + 880) = *(void *)(v11 - 8);
  *(void *)(v5 + 888) = swift_task_alloc();
  *(void *)(v5 + 896) = *(void *)(v8 - 8);
  *(void *)(v5 + 904) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for FeedCursorGroup();
  *(void *)(v5 + 912) = v12;
  *(void *)(v5 + 920) = *(void *)(v12 - 8);
  *(void *)(v5 + 928) = swift_task_alloc();
  *(void *)(v5 + 936) = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v5 + 944) = AssociatedTypeWitness;
  *(void *)(v5 + 952) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v5 + 960) = swift_task_alloc();
  uint64_t v14 = swift_task_alloc();
  *(void *)(v5 + 968) = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v5 + 976) = v15;
  *uint64_t v15 = v5;
  v15[1] = sub_1C0411708;
  return sub_1C139616C(v14);
}

uint64_t sub_1C0411708()
{
  *(void *)(*(void *)v1 + 984) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0412560;
  }
  else {
    uint64_t v2 = sub_1C041181C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C041181C()
{
  uint64_t v104 = v0;
  uint64_t v1 = *(void *)(v0 + 960);
  uint64_t v2 = *(void *)(v0 + 952);
  uint64_t v65 = *(void *)(v0 + 944);
  uint64_t v66 = *(void *)(v0 + 968);
  uint64_t v92 = *(void *)(v0 + 928);
  uint64_t v74 = *(void *)(v0 + 912);
  uint64_t v76 = *(void *)(v0 + 920);
  uint64_t v67 = *(void *)(v0 + 904);
  uint64_t v90 = *(void *)(v0 + 896);
  uint64_t v64 = *(void *)(v0 + 888);
  uint64_t v71 = *(void *)(v0 + 880);
  uint64_t v72 = *(void *)(v0 + 872);
  uint64_t v69 = *(void *)(v0 + 864);
  uint64_t v70 = *(void *)(v0 + 832);
  uint64_t v73 = *(void *)(v0 + 824);
  uint64_t v80 = *(void *)(v0 + 792);
  uint64_t v78 = *(void *)(v0 + 776);
  uint64_t v82 = *(void *)(v0 + 768);
  uint64_t v3 = *(void *)(v0 + 712);
  double v4 = *(double *)(v0 + 720);
  *(void *)(v0 + 680) = *(void *)(v3 + qword_1EB93C740);
  uint64_t v95 = *(void *)(v0 + 760);
  uint64_t v5 = *(void *)(v0 + 752);
  type metadata accessor for FeedDatabaseGroup();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151F16C();
  long long v6 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 544) = v6;
  sub_1C151FF4C();
  swift_getWitnessTable();
  uint64_t v86 = sub_1C151ED7C();
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v63(v1, v66, v65);
  uint64_t v7 = sub_1BFD7FEC0();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v67, v3 + *(void *)(*(void *)v3 + 256), v5);
  sub_1C14CDDC4();
  FeedCursorGroup.init(createdDate:group:configIdentifier:serviceConfig:)(v64, v1, v7, v9, v67, v5, v92);
  *(void *)(v0 + 360) = v65;
  *(void *)(v0 + 368) = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 336));
  v63((uint64_t)boxed_opaque_existential_0, v66, v65);
  uint64_t v68 = sub_1BFD7FEC0();
  uint64_t v12 = v11;
  double v13 = (CACurrentMediaTime() - v4) * 1000.0;
  sub_1BFE72C60(0, &qword_1EB86BA50, (uint64_t)&type metadata for FeedJournalGroup, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  sub_1BFC66384(v0 + 336, v0 + 456);
  uint64_t v15 = sub_1C151811C();
  uint64_t v17 = v16;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(void *)(v0 + 448) = 0;
  sub_1BFC66384(v0 + 456, v0 + 264);
  *(void *)(v0 + 304) = 0x3FF0000000000000;
  *(unsigned char *)(v0 + 328) = 1;
  sub_1BFC66384(v0 + 456, v0 + 376);
  uint64_t v18 = swift_allocObject();
  sub_1BFC773DC((long long *)(v0 + 376), v18 + 16);
  *(void *)(v0 + 16) = v15;
  *(void *)(v0 + 24) = v17;
  *(void *)(v0 + 32) = v68;
  *(void *)(v0 + 40) = v12;
  sub_1C0427238(v0 + 416, v0 + 48);
  *(void *)(v0 + 88) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 1;
  *(void *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 120) = 1;
  *(void *)(v0 + 128) = 0;
  *(_WORD *)(v0 + 136) = 1;
  sub_1BFD7EE00(v0 + 264, v0 + 144);
  *(void *)(v0 + 224) = 0;
  *(void *)(v0 + 232) = 0;
  *(void *)(v0 + 216) = 0;
  *(double *)(v0 + 240) = v13;
  *(void *)(v0 + 248) = sub_1C0427230;
  *(void *)(v0 + 256) = v18;
  __swift_destroy_boxed_opaque_existential_1(v0 + 456);
  long long v19 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v14 + 224) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v14 + 240) = v19;
  *(_OWORD *)(v14 + 256) = *(_OWORD *)(v0 + 240);
  *(void *)(v14 + 272) = *(void *)(v0 + 256);
  long long v20 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v14 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v14 + 176) = v20;
  long long v21 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v14 + 192) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v14 + 208) = v21;
  long long v22 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v14 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v14 + 112) = v22;
  long long v23 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v14 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v14 + 144) = v23;
  long long v24 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v14 + 48) = v24;
  long long v25 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v14 + 80) = v25;
  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56))(v69, 1, 1, v5);
  unsigned __int8 v97 = 7;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
  v26(v70, 1, 1, v72);
  v26(v73, 1, 1, v72);
  sub_1C152089C();
  swift_allocObject();
  uint64_t v27 = sub_1C151EC6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v28, v92, v74);
  sub_1BFE94A38(v27);
  uint64_t v93 = (unsigned char *)sub_1C151ECAC();
  swift_bridgeObjectRelease();
  uint64_t v29 = v3 + *(void *)(*(void *)v3 + 224);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v80, v29, v82);
  uint64_t v30 = *(void *)(v95 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v30 + 48))(v80, 1) == 1)
  {
    uint64_t v31 = (void *)(v0 + 768);
    uint64_t v32 = *(void *)(v0 + 776);
    uint64_t v33 = 1;
    uint64_t v91 = v32;
  }
  else
  {
    uint64_t v31 = (void *)(v0 + 760);
    (*(void (**)(void, void))(*(void *)(v0 + 936) + 40))(*(void *)(v0 + 968), *(void *)(v0 + 760));
    uint64_t v33 = 0;
    uint64_t v91 = *(void *)(v0 + 776);
    uint64_t v32 = v30;
  }
  uint64_t v79 = *(void *)(v0 + 864);
  uint64_t v83 = *(void *)(v0 + 848);
  uint64_t v88 = *(void *)(v0 + 840);
  uint64_t v75 = *(void *)(v0 + 824);
  uint64_t v77 = *(void *)(v0 + 832);
  uint64_t v34 = *(void *)(v0 + 800);
  uint64_t v81 = *(void *)(v0 + 768);
  uint64_t v35 = *(void *)(v0 + 760);
  uint64_t v36 = *(void *)(v0 + 736);
  uint64_t v37 = *(void *)(v0 + 712);
  (*(void (**)(void, void))(v32 + 8))(*(void *)(v0 + 792), *v31);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v34, v33, 1, v35);
  uint64_t v38 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = (long long *)(v37 + *(void *)(*(void *)v37 + 240));
  uint64_t v40 = *((void *)v39 + 2);
  long long v99 = *v39;
  uint64_t v100 = v40;
  uint64_t v101 = v14;
  uint64_t v102 = 1;
  double v103 = v13;
  sub_1BFE5BC98(&v99, &v101, v98);
  swift_bridgeObjectRelease();
  sub_1BFD7F858(1uLL);
  uint64_t v101 = v98[0];
  uint64_t v102 = v98[1];
  double v103 = *(double *)&v98[2];
  *(void *)&long long v99 = 0;
  WORD4(v99) = 256;
  unint64_t v96 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v79, 0, &v97, v77, v75, 0, 0, 0, 0, v93, v86, 0, 1, 0, 1, 0, 1,
          0,
          0,
          v34,
          v36,
          &v101,
          (uint64_t)&v99,
          0,
          0,
          0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C04276B8(v36, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v34, v81);
  uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v75, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v77, (unint64_t *)&qword_1EB871180, v41);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v79, v88);
  char v42 = FeedCursor.reachedEnd.getter();
  sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v43 = *(void *)(v0 + 952);
  uint64_t v44 = *(void *)(v0 + 944);
  uint64_t v45 = *(void *)(v0 + 920);
  uint64_t v89 = *(void *)(v0 + 912);
  uint64_t v94 = *(void *)(v0 + 928);
  uint64_t v87 = *(void *)(v0 + 968);
  if (v42)
  {
    uint64_t v46 = *(void *)(v0 + 696);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1C1529AE0;
    uint64_t v48 = sub_1C152088C();
    uint64_t v50 = v49;
    *(void *)(v47 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v47 + 64) = sub_1BFE9C558();
    *(void *)(v47 + 32) = v48;
    *(void *)(v47 + 40) = v50;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v94, v89);
    type metadata accessor for FeedCursor();
    uint64_t v51 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v46, v87, v44);
    *(void *)(v46 + v51) = v96;
  }
  else
  {
    uint64_t v84 = *(void *)(v0 + 952);
    uint64_t v52 = *(void *)(v0 + 712);
    uint64_t v85 = *(void *)(v0 + 696);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1C1527210;
    uint64_t v54 = sub_1C152088C();
    uint64_t v56 = v55;
    *(void *)(v53 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v57 = sub_1BFE9C558();
    *(void *)(v53 + 64) = v57;
    *(void *)(v53 + 32) = v54;
    *(void *)(v53 + 40) = v56;
    *(void *)(v0 + 688) = v52;
    type metadata accessor for FeedCursor();
    swift_getWitnessTable();
    uint64_t v58 = sub_1C15186EC();
    *(void *)(v53 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v53 + 104) = v57;
    *(void *)(v53 + 72) = v58;
    *(void *)(v53 + 80) = v59;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v94, v89);
    uint64_t v60 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v85, v87, v44);
    *(void *)(v85 + v60) = v96;
  }
  type metadata accessor for FeedServiceFetchResult.Internal();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v61 = *(uint64_t (**)(void))(v0 + 8);
  return v61();
}

uint64_t sub_1C0412560()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void **)(v0 + 984);
  uint64_t v43 = v1;
  uint64_t v2 = *(void *)(v0 + 896);
  uint64_t v3 = *(void *)(v0 + 880);
  uint64_t v4 = *(void *)(v0 + 872);
  uint64_t v5 = *(void *)(v0 + 856);
  uint64_t v41 = *(void *)(v0 + 848);
  uint64_t v42 = *(void *)(v0 + 840);
  uint64_t v6 = *(void *)(v0 + 816);
  uint64_t v7 = *(void *)(v0 + 808);
  uint64_t v44 = *(void *)(v0 + 784);
  uint64_t v39 = *(void *)(v0 + 776);
  uint64_t v40 = *(void *)(v0 + 768);
  uint64_t v35 = *(void *)(v0 + 760);
  uint64_t v8 = *(void *)(v0 + 752);
  uint64_t v37 = *(void *)(v0 + 736);
  double v9 = *(double *)(v0 + 720);
  uint64_t v33 = *(void *)(v0 + 712);
  uint64_t v10 = *(void *)(v0 + 704);
  swift_retain();
  id v11 = v1;
  CFTimeInterval v12 = CACurrentMediaTime();
  sub_1C03FAF3C(v10, v1, (uint64_t)&v49, (v12 - v9) * 1000.0);
  uint64_t v13 = v49;
  unint64_t v36 = v50;
  uint64_t v14 = v51;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v5, 1, 1, v8);
  unsigned __int8 v45 = 7;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v15(v6, 1, 1, v4);
  v15(v7, 1, 1, v4);
  *(void *)(v0 + 672) = *(void *)(v33 + qword_1EB93C740);
  type metadata accessor for FeedDatabaseGroup();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151F16C();
  long long v16 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 608) = v16;
  sub_1C151FF4C();
  swift_getWitnessTable();
  uint64_t v34 = sub_1C151ED7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v44, 1, 1);
  uint64_t v17 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v37, 1, 1, v17);
  uint64_t v18 = (long long *)(v33 + *(void *)(*(void *)v33 + 240));
  uint64_t v19 = *((void *)v18 + 2);
  long long v47 = *v18;
  uint64_t v48 = v19;
  uint64_t v49 = v13;
  unint64_t v50 = v36;
  uint64_t v51 = v14;
  sub_1BFE5BC98(&v47, &v49, v46);
  swift_bridgeObjectRelease();
  sub_1BFD7F858(v36);
  uint64_t v49 = v46[0];
  unint64_t v50 = v46[1];
  uint64_t v51 = v46[2];
  *(void *)&long long v47 = 0;
  WORD4(v47) = 256;
  uint64_t v38 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v5, 0, &v45, v6, v7, 0, 0, 0, 0, 0, v34, 0, 1, 0, 1, 0, 1,
          0,
          0,
          v44,
          v37,
          &v49,
          (uint64_t)&v47,
          0,
          0,
          0);
  *(void *)(v0 + 992) = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C04276B8(v37, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v40);
  long long v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v7, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v6, (unint64_t *)&qword_1EB871180, v20);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v5, v42);
  sub_1C151F36C();
  sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
  uint64_t v22 = FeedDatabaseGroup.identifier.getter();
  uint64_t v24 = v23;
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v26 = sub_1BFE9C558();
  *(void *)(v21 + 64) = v26;
  *(void *)(v21 + 32) = v22;
  *(void *)(v21 + 40) = v24;
  *(void *)(v0 + 648) = 0;
  *(void *)(v0 + 656) = 0xE000000000000000;
  *(void *)(v0 + 664) = v43;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v27 = *(void *)(v0 + 648);
  uint64_t v28 = *(void *)(v0 + 656);
  *(void *)(v21 + 96) = v25;
  *(void *)(v21 + 104) = v26;
  *(void *)(v21 + 72) = v27;
  *(void *)(v21 + 80) = v28;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 1000) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_1C0412BC4;
  uint64_t v30 = *(void *)(v0 + 720);
  uint64_t v31 = *(void *)(v0 + 696);
  v29[22] = *(void *)(v0 + 728);
  v29[21] = v30;
  v29[19] = v31;
  v29[20] = v38;
  v29[23] = *(void *)v38;
  return MEMORY[0x1F4188298](sub_1BFE610B4, 0, 0);
}

uint64_t sub_1C0412BC4()
{
  *(void *)(*(void *)v1 + 1008) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0412E24;
  }
  else {
    uint64_t v2 = sub_1C0412CD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0412CD8()
{
  uint64_t v1 = *(void **)(v0 + 984);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0412E24()
{
  uint64_t v1 = *(void **)(v0 + 984);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0412F78()
{
  *(void *)(*(void *)v1 + 1024) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C04176EC;
  }
  else {
    uint64_t v2 = sub_1C041308C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C041308C()
{
  uint64_t v490 = v0;
  uint64_t v425 = v0 + 120;
  uint64_t v341 = (_OWORD *)(v0 + 152);
  v379 = (_OWORD *)(v0 + 184);
  v385 = (_OWORD *)(v0 + 216);
  uint64_t v416 = v0 + 312;
  v337 = (_OWORD *)(v0 + 376);
  v353 = (_OWORD *)(v0 + 344);
  uint64_t v1 = *(void *)(v0 + 944);
  uint64_t v2 = *(void *)(v0 + 904);
  uint64_t v3 = *(void *)(v0 + 896);
  uint64_t v4 = *(void *)(v0 + 888);
  uint64_t v5 = *(void *)(v0 + 880);
  v445 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 912) + 16);
  v462 = *v445;
  (*v445)(v1, *(void *)(v0 + 1008), v2);
  uint64_t v471 = v2;
  uint64_t v6 = v1 + *(int *)(v2 + 44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  uint64_t v7 = type metadata accessor for FeedGroupEmitTaskResult();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v436 = v8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v426 = *(void *)(v0 + 1008);
      uint64_t v15 = *(void *)(v0 + 960);
      uint64_t v16 = *(void *)(v0 + 952);
      uint64_t v17 = *(void *)(v0 + 920);
      uint64_t v386 = *(void *)(v0 + 904);
      uint64_t v18 = *(void *)(v0 + 896);
      uint64_t v19 = v7;
      uint64_t v20 = *(void *)(v0 + 864);
      uint64_t v361 = *(void *)(v0 + 528);
      uint64_t v396 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v405 = MEMORY[0x1E4FBB718];
      sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      uint64_t v21 = v18 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      v371 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
      v371(v15, v18, v20);
      sub_1BFFBE2FC(v21, v416);
      uint64_t v22 = *(void *)(v361 + qword_1EB93CB78);
      uint64_t v480 = v22;
      v462(v17, v426, v386);
      uint64_t v23 = v17 + *(int *)(v471 + 44);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v427 = v19;
      v436(v23, v19);
      uint64_t v24 = sub_1BFE4028C();
      uint64_t v26 = v25;
      swift_release();
      sub_1BFDA65F8(v416, v0 + 56, (uint64_t)&qword_1EB87A940, v396, v405, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFE72C60);
      if (*(void *)(v0 + 80))
      {
        sub_1BFF993A8((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 280));
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v487 = v22;
        sub_1BFFB4A24((_OWORD *)(v0 + 280), v24, v26, isUniquelyReferenced_nonNull_native);
        uint64_t v480 = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v156 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
        sub_1BFE5F150(v0 + 56, (unint64_t *)&qword_1EB87A940, v396, MEMORY[0x1E4FBB718]);
        sub_1C035332C(v24, v26, v337);
        swift_bridgeObjectRelease();
        sub_1BFE5F150((uint64_t)v337, (unint64_t *)&qword_1EB87A940, v396, v156);
      }
      uint64_t v157 = *(void *)(v0 + 1008);
      uint64_t v389 = v157;
      uint64_t v355 = *(void *)(v0 + 992);
      uint64_t v320 = *(void *)(v0 + 968);
      uint64_t v158 = *(void *)(v0 + 928);
      uint64_t v159 = *(void *)(v0 + 904);
      uint64_t v327 = v159;
      uint64_t v409 = *(void *)(v0 + 840);
      uint64_t v333 = *(void *)(v0 + 816);
      uint64_t v336 = *(void *)(v0 + 824);
      uint64_t v160 = *(void *)(v0 + 808);
      uint64_t v321 = *(void *)(v0 + 800);
      uint64_t v161 = *(void *)(v0 + 792);
      uint64_t v162 = *(void *)(v0 + 784);
      uint64_t v163 = *(void *)(v0 + 776);
      uint64_t v324 = *(void *)(v0 + 752);
      uint64_t v326 = *(void *)(v0 + 768);
      uint64_t v328 = *(void *)(v0 + 696);
      uint64_t v365 = *(void *)(v0 + 688);
      uint64_t v339 = *(void *)(v0 + 592);
      uint64_t v343 = *(void *)(v0 + 624);
      uint64_t v347 = *(void *)(v0 + 584);
      uint64_t v351 = *(void *)(v0 + 576);
      uint64_t v400 = *(void *)(v0 + 568);
      uint64_t v164 = *(void *)(v0 + 528);
      (*(void (**)(void))(*(void *)(v0 + 952) + 16))();
      v462(v158, v157, v159);
      uint64_t v165 = v158 + *(int *)(v471 + 44);
      swift_retain();
      v436(v165, v427);
      sub_1BFDCA2AC();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v161 + 16))(v321, v164 + *(void *)(*(void *)v164 + 256), v400);
      sub_1C151630C();
      FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v162, v320, v160, v321, v400, v409);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v161 + 56))(v324, 1, 1, v400);
      unsigned __int8 v481 = 7;
      long long v166 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56);
      v166(v328, 1, 1, v326);
      v166(v365, 1, 1, v326);
      uint64_t v167 = *(void *)(v164 + qword_1EB93C688);
      v462(v158, v389, v327);
      uint64_t v168 = v158 + *(int *)(v471 + 44);
      uint64_t v169 = *(void *)(v168 + *(int *)(v427 + 36));
      swift_retain();
      v436(v168, v427);
      uint64_t v366 = sub_1C041EF68(v167, v169);
      swift_release();
      sub_1BFE72C60(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      swift_allocObject();
      uint64_t v170 = sub_1C151EC6C();
      long long v172 = v171;
      v462(v158, v389, v327);
      uint64_t v173 = v158 + *(int *)(v471 + 44);
      uint64_t v174 = *(void *)(v173 + *(int *)(v427 + 36));
      swift_retain();
      v436(v173, v427);
      *long long v172 = v174;
      type metadata accessor for FeedGroupEmitter();
      sub_1BFE94A38(v170);
      uint64_t v440 = sub_1C151ECAC();
      swift_bridgeObjectRelease();
      sub_1C152089C();
      swift_allocObject();
      uint64_t v175 = sub_1C151EC6C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v336 + 16))(v176, v409, v333);
      sub_1BFE94A38(v175);
      v410 = (unsigned char *)sub_1C151ECAC();
      swift_bridgeObjectRelease();
      uint64_t v177 = *(void *)(v389 + *(int *)(v355 + 44));
      uint64_t v178 = v164 + *(void *)(*(void *)v164 + 224);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v339 + 16))(v343, v178, v347);
      uint64_t v179 = *(void *)(v351 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v179 + 48))(v343, 1) == 1)
      {
        uint64_t v180 = *(void *)(v0 + 624);
        uint64_t v181 = *(void *)(v0 + 584);
        char v182 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 592) + 8);
        swift_bridgeObjectRetain();
        v182(v180, v181);
      }
      else
      {
        uint64_t v183 = *(void *)(v0 + 960);
        uint64_t v184 = *(void *)(v0 + 856);
        uint64_t v185 = *(void *)(v0 + 624);
        uint64_t v186 = *(void *)(v0 + 576);
        long long v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 40);
        swift_bridgeObjectRetain();
        v187(v183, v186, v184);
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v185, v186);
      }
      uint64_t v188 = *(void *)(v0 + 1008);
      uint64_t v189 = *(void *)(v0 + 992);
      uint64_t v476 = *(void *)(v0 + 752);
      uint64_t v356 = *(void *)(v0 + 728);
      uint64_t v390 = *(void *)(v0 + 720);
      uint64_t v458 = *(void *)(v0 + 688);
      uint64_t v467 = *(void *)(v0 + 696);
      uint64_t v348 = *(void *)(v0 + 592);
      uint64_t v352 = *(void *)(v0 + 584);
      uint64_t v190 = *(void *)(v0 + 552);
      uint64_t v191 = *(void *)(v0 + 528);
      uint64_t v192 = *(void *)(v0 + 632);
      (*(void (**)(void))(v179 + 56))();
      uint64_t v193 = type metadata accessor for FeedContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v193 - 8) + 56))(v190, 1, 1, v193);
      long long v194 = (long long *)(v191 + *(void *)(*(void *)v191 + 240));
      uint64_t v195 = *((void *)v194 + 2);
      long long v485 = *v194;
      long long v196 = (uint64_t *)(v188 + *(int *)(v189 + 36));
      uint64_t v197 = *v196;
      uint64_t v198 = v196[1];
      uint64_t v199 = v196[2];
      uint64_t v486 = v195;
      uint64_t v487 = v197;
      uint64_t v488 = v198;
      uint64_t v489 = v199;
      sub_1BFE5BC98(&v485, &v487, &v482);
      uint64_t v487 = v482;
      uint64_t v488 = v483;
      uint64_t v489 = v484;
      *(void *)&long long v485 = 0;
      WORD4(v485) = 256;
      v450 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v476, 0, &v481, v467, v458, 0, v366, v440, 0, v410, 0, 0, 1, 0, 1, 0, 1,
               v480,
               v177,
               v192,
               v190,
               &v487,
               (uint64_t)&v485,
               0,
               0,
               0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C04276B8(v190, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v348 + 8))(v192, v352);
      long long v200 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C04276B8(v458, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C04276B8(v467, (unint64_t *)&qword_1EB871180, v200);
      (*(void (**)(uint64_t, uint64_t))(v356 + 8))(v476, v390);
      LOBYTE(v189) = FeedCursor.reachedEnd.getter();
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v201 = *(void *)(v0 + 1000);
      uint64_t v468 = *(void *)(v0 + 992);
      uint64_t v477 = *(void *)(v0 + 1008);
      uint64_t v202 = *(void *)(v0 + 864);
      uint64_t v441 = *(void *)(v0 + 840);
      uint64_t v203 = *(void *)(v0 + 824);
      uint64_t v401 = *(void *)(v0 + 960);
      uint64_t v411 = *(void *)(v0 + 816);
      if (v189)
      {
        uint64_t v204 = *(void *)(v0 + 520);
        uint64_t v205 = swift_allocObject();
        *(_OWORD *)(v205 + 16) = xmmword_1C1529AE0;
        uint64_t v206 = sub_1C152088C();
        uint64_t v208 = v207;
        *(void *)(v205 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v205 + 64) = sub_1BFE9C558();
        *(void *)(v205 + 32) = v206;
        *(void *)(v205 + 40) = v208;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v441, v411);
        sub_1BFE5F150(v416, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v477, v468);
        type metadata accessor for FeedCursor();
        uint64_t v209 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        v371(v204, v401, v202);
        *(void *)(v204 + v209) = v450;
      }
      else
      {
        uint64_t v367 = *(void *)(v0 + 864);
        uint64_t v210 = *(void *)(v0 + 528);
        uint64_t v391 = *(void *)(v0 + 520);
        uint64_t v211 = swift_allocObject();
        *(_OWORD *)(v211 + 16) = xmmword_1C1527210;
        uint64_t v212 = sub_1C152088C();
        uint64_t v214 = v213;
        *(void *)(v211 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v215 = sub_1BFE9C558();
        *(void *)(v211 + 64) = v215;
        *(void *)(v211 + 32) = v212;
        *(void *)(v211 + 40) = v214;
        *(void *)(v0 + 496) = v210;
        type metadata accessor for FeedCursor();
        swift_getWitnessTable();
        uint64_t v216 = sub_1C15186EC();
        *(void *)(v211 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v211 + 104) = v215;
        *(void *)(v211 + 72) = v216;
        *(void *)(v211 + 80) = v217;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v441, v411);
        sub_1BFE5F150(v416, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v477, v468);
        uint64_t v218 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        v371(v391, v401, v367);
        *(void *)(v391 + v218) = v450;
      }
      goto LABEL_39;
    case 2u:
      uint64_t v28 = v7;
      (*(void (**)(void, void, void))(*(void *)(v0 + 952) + 32))(*(void *)(v0 + 976), *(void *)(v0 + 896), *(void *)(v0 + 864));
      goto LABEL_14;
    case 3u:
      uint64_t v428 = v7;
      uint64_t v29 = *(uint64_t **)(v0 + 896);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      goto LABEL_43;
    case 4u:
      uint64_t v32 = *(uint64_t **)(v0 + 896);
      uint64_t v33 = *(void *)(v0 + 792);
      uint64_t v34 = *(void *)(v0 + 776);
      uint64_t v35 = *(void *)(v0 + 768);
      uint64_t v36 = *(void *)(v0 + 736);
      uint64_t v453 = *(void *)(v0 + 664);
      uint64_t v463 = *(void *)(v0 + 656);
      uint64_t v37 = *(void *)(v0 + 568);
      uint64_t v472 = *(void *)(v0 + 528);
      uint64_t v38 = *v32;
      uint64_t v39 = v32[1];
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
      *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v40 + 64) = sub_1BFE9C558();
      *(void *)(v40 + 32) = v38;
      *(void *)(v40 + 40) = v39;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v36, 1, 1, v37);
      LOBYTE(v480) = 7;
      uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
      v41(v453, 1, 1, v35);
      v41(v463, 1, 1, v35);
      uint64_t v42 = *(void *)(v472 + qword_1EB93C698);
      v473 = (unsigned char *)(v42 + 1);
      if (__OFADD__(v42, 1)) {
        goto LABEL_49;
      }
      uint64_t v43 = *(void *)(v0 + 1008);
      uint64_t v44 = *(void *)(v0 + 992);
      uint64_t v454 = *(void *)(v0 + 728);
      uint64_t v464 = *(void *)(v0 + 720);
      uint64_t v45 = *(void *)(v0 + 664);
      uint64_t v46 = *(void *)(v0 + 656);
      uint64_t v47 = *(void *)(v0 + 600);
      uint64_t v429 = *(void *)(v0 + 736);
      uint64_t v437 = *(void *)(v0 + 592);
      uint64_t v446 = *(void *)(v0 + 584);
      uint64_t v48 = *(void *)(v0 + 552);
      uint64_t v49 = *(void *)(v0 + 528);
      uint64_t v417 = *(void *)(v49 + qword_1EB93C688);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 576) - 8) + 56))(v47, 1, 1);
      uint64_t v50 = type metadata accessor for FeedContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v48, 1, 1, v50);
      uint64_t v51 = (long long *)(v49 + *(void *)(*(void *)v49 + 240));
      uint64_t v52 = *((void *)v51 + 2);
      long long v485 = *v51;
      uint64_t v53 = (uint64_t *)(v43 + *(int *)(v44 + 36));
      uint64_t v54 = *v53;
      uint64_t v55 = v53[1];
      uint64_t v56 = v53[2];
      uint64_t v486 = v52;
      uint64_t v487 = v54;
      uint64_t v488 = v55;
      uint64_t v489 = v56;
      sub_1BFE5BC98(&v485, &v487, &v482);
      uint64_t v487 = v482;
      uint64_t v488 = v483;
      uint64_t v489 = v484;
      *(void *)&long long v485 = 0;
      WORD4(v485) = 256;
      unint64_t v57 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v429, 0, (unsigned __int8 *)&v480, v45, v46, 0, v417, 0, 0, 0, 0, v473, 0, 0, 1, 0, 1,
              0,
              0,
              v47,
              v48,
              &v487,
              (uint64_t)&v485,
              0,
              0,
              0);
      *(void *)(v0 + 1056) = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C04276B8(v48, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v437 + 8))(v47, v446);
      uint64_t v58 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C04276B8(v46, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C04276B8(v45, (unint64_t *)&qword_1EB871180, v58);
      (*(void (**)(uint64_t, uint64_t))(v454 + 8))(v429, v464);
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 1064) = v59;
      *uint64_t v59 = v0;
      uint64_t v60 = sub_1C0416C30;
      goto LABEL_45;
    case 5u:
      uint64_t v387 = *(void *)(v0 + 928);
      uint64_t v397 = *(void *)(v0 + 904);
      uint64_t v406 = *(void *)(v0 + 1008);
      uint64_t v61 = *(uint64_t **)(v0 + 896);
      uint64_t v62 = *(void *)(v0 + 792);
      uint64_t v63 = *(void *)(v0 + 776);
      uint64_t v64 = *(void *)(v0 + 768);
      uint64_t v65 = *(void *)(v0 + 736);
      uint64_t v362 = *(void *)(v0 + 664);
      uint64_t v372 = *(void *)(v0 + 656);
      uint64_t v66 = *(void *)(v0 + 568);
      uint64_t v430 = v7;
      uint64_t v380 = *(void *)(v0 + 528);
      uint64_t v67 = *v61;
      uint64_t v68 = v61[1];
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1C1529AE0;
      *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v69 + 64) = sub_1BFE9C558();
      *(void *)(v69 + 32) = v67;
      *(void *)(v69 + 40) = v68;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v65, 1, 1, v66);
      LOBYTE(v480) = 7;
      uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
      v70(v362, 1, 1, v64);
      v70(v372, 1, 1, v64);
      uint64_t v373 = *(void *)(v380 + qword_1EB93C688);
      sub_1BFE72C60(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      swift_allocObject();
      uint64_t v71 = sub_1C151EC6C();
      uint64_t v73 = v72;
      v462(v387, v406, v397);
      uint64_t v74 = v387 + *(int *)(v471 + 44);
      uint64_t v75 = *(void *)(v74 + *(int *)(v430 + 36));
      swift_retain();
      v436(v74, v430);
      *uint64_t v73 = v75;
      type metadata accessor for FeedGroupEmitter();
      sub_1BFE94A38(v71);
      uint64_t v474 = sub_1C151ECAC();
      swift_bridgeObjectRelease();
      uint64_t v76 = *(void *)(v380 + qword_1EB93C698);
      v465 = (unsigned char *)(v76 + 1);
      if (__OFADD__(v76, 1)) {
        goto LABEL_50;
      }
      uint64_t v77 = *(void *)(v0 + 1008);
      uint64_t v78 = *(void *)(v0 + 992);
      uint64_t v447 = *(void *)(v0 + 728);
      uint64_t v455 = *(void *)(v0 + 720);
      uint64_t v79 = *(void *)(v0 + 664);
      uint64_t v80 = *(void *)(v0 + 656);
      uint64_t v418 = *(void *)(v0 + 736);
      uint64_t v431 = *(void *)(v0 + 592);
      uint64_t v438 = *(void *)(v0 + 584);
      uint64_t v81 = *(void *)(v0 + 552);
      uint64_t v82 = *(void *)(v0 + 528);
      uint64_t v83 = *(void *)(v0 + 600);
      (*(void (**)(void))(*(void *)(*(void *)(v0 + 576) - 8) + 56))();
      uint64_t v84 = type metadata accessor for FeedContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v81, 1, 1, v84);
      uint64_t v85 = (long long *)(v82 + *(void *)(*(void *)v82 + 240));
      uint64_t v86 = *((void *)v85 + 2);
      long long v485 = *v85;
      uint64_t v87 = (uint64_t *)(v77 + *(int *)(v78 + 36));
      uint64_t v88 = *v87;
      uint64_t v89 = v87[1];
      uint64_t v90 = v87[2];
      uint64_t v486 = v86;
      uint64_t v487 = v88;
      uint64_t v488 = v89;
      uint64_t v489 = v90;
      sub_1BFE5BC98(&v485, &v487, &v482);
      uint64_t v487 = v482;
      uint64_t v488 = v483;
      uint64_t v489 = v484;
      *(void *)&long long v485 = 0;
      WORD4(v485) = 256;
      unint64_t v57 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v418, 0, (unsigned __int8 *)&v480, v79, v80, 0, v373, v474, 0, 0, 0, v465, 0, 0, 1, 0, 1,
              0,
              0,
              v83,
              v81,
              &v487,
              (uint64_t)&v485,
              0,
              0,
              0);
      *(void *)(v0 + 1080) = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C04276B8(v81, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v431 + 8))(v83, v438);
      uint64_t v91 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C04276B8(v80, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C04276B8(v79, (unint64_t *)&qword_1EB871180, v91);
      (*(void (**)(uint64_t, uint64_t))(v447 + 8))(v418, v455);
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 1088) = v59;
      *uint64_t v59 = v0;
      uint64_t v60 = sub_1C0416FCC;
      goto LABEL_45;
    case 6u:
      uint64_t v92 = *(uint64_t **)(v0 + 896);
      uint64_t v93 = *(void *)(v0 + 864);
      type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v94 = (uint64_t)v92 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
        uint64_t v219 = *(void *)(v0 + 984);
        uint64_t v220 = *(void *)(v0 + 952);
        sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        uint64_t v221 = (uint64_t)v92 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v220 + 32))(v219, v92, v93);
        uint64_t v14 = v0 + 120;
        sub_1BFFBE2FC(v221, v425);
        __swift_destroy_boxed_opaque_existential_1(v94);
LABEL_28:
        uint64_t v222 = *(void *)(v0 + 1008);
        uint64_t v223 = *(void *)(v0 + 936);
        uint64_t v224 = *(void *)(v0 + 904);
        uint64_t v225 = *(void *)(*(void *)(v0 + 528) + qword_1EB93CB78);
        uint64_t v480 = v225;
        v462(v223, v222, v224);
        uint64_t v226 = v223 + *(int *)(v471 + 44);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v434 = v7;
        v8(v226, v7);
        uint64_t v227 = sub_1BFE4028C();
        uint64_t v229 = v228;
        swift_release();
        v370 = (_OWORD *)(v0 + 248);
        sub_1BFFBE2FC(v14, v0 + 248);
        if (*(void *)(v0 + 272))
        {
          sub_1BFF993A8(v370, v353);
          char v230 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v487 = v225;
          sub_1BFFB4A24(v353, v227, v229, v230);
          uint64_t v480 = v225;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v231 = MEMORY[0x1E4FBC840] + 8;
          uint64_t v232 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
          sub_1BFE5F150((uint64_t)v370, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
          sub_1C035332C(v227, v229, v341);
          swift_bridgeObjectRelease();
          sub_1BFE5F150((uint64_t)v341, (unint64_t *)&qword_1EB87A940, v231, v232);
        }
        uint64_t v233 = *(void *)(v0 + 1008);
        uint64_t v402 = *(void *)(v0 + 992);
        uint64_t v331 = *(void *)(v0 + 968);
        uint64_t v234 = *(void *)(v0 + 928);
        uint64_t v235 = *(void *)(v0 + 904);
        uint64_t v340 = *(void *)(v0 + 848);
        uint64_t v236 = *(void *)(v0 + 824);
        uint64_t v421 = *(void *)(v0 + 816);
        uint64_t v329 = *(void *)(v0 + 808);
        uint64_t v334 = *(void *)(v0 + 800);
        uint64_t v237 = *(void *)(v0 + 792);
        uint64_t v238 = *(void *)(v0 + 784);
        uint64_t v239 = *(void *)(v0 + 776);
        uint64_t v344 = *(void *)(v0 + 760);
        uint64_t v346 = *(void *)(v0 + 712);
        uint64_t v349 = *(void *)(v0 + 768);
        uint64_t v357 = *(void *)(v0 + 704);
        uint64_t v368 = *(void *)(v0 + 592);
        uint64_t v376 = *(void *)(v0 + 640);
        uint64_t v383 = *(void *)(v0 + 584);
        uint64_t v392 = *(void *)(v0 + 576);
        uint64_t v240 = *(void *)(v0 + 568);
        uint64_t v241 = *(void *)(v0 + 528);
        (*(void (**)(void))(*(void *)(v0 + 952) + 16))();
        v462(v234, v233, v235);
        uint64_t v242 = v234 + *(int *)(v471 + 44);
        swift_retain();
        v436(v242, v434);
        sub_1BFDCA2AC();
        swift_release();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16))(v334, v241 + *(void *)(*(void *)v241 + 256), v240);
        sub_1C151630C();
        FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v238, v331, v329, v334, v240, v340);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v237 + 56))(v344, 1, 1, v240);
        unsigned __int8 v481 = 7;
        uint64_t v243 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v239 + 56);
        v243(v346, 1, 1, v349);
        v243(v357, 1, 1, v349);
        uint64_t v478 = *(void *)(v241 + qword_1EB93C688);
        sub_1C152089C();
        swift_allocObject();
        uint64_t v244 = sub_1C151EC6C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v236 + 16))(v245, v340, v421);
        sub_1BFE94A38(v244);
        v442 = (unsigned char *)sub_1C151ECAC();
        swift_bridgeObjectRelease();
        uint64_t v246 = *(void *)(v233 + *(int *)(v402 + 44));
        uint64_t v247 = v241 + *(void *)(*(void *)v241 + 224);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v368 + 16))(v376, v247, v383);
        uint64_t v248 = *(void *)(v392 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v248 + 48))(v376, 1) == 1)
        {
          uint64_t v249 = *(void *)(v0 + 640);
          uint64_t v250 = *(void *)(v0 + 584);
          uint64_t v251 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 592) + 8);
          swift_bridgeObjectRetain();
          v251(v249, v250);
        }
        else
        {
          uint64_t v252 = *(void *)(v0 + 984);
          uint64_t v253 = *(void *)(v0 + 856);
          uint64_t v254 = *(void *)(v0 + 640);
          uint64_t v255 = *(void *)(v0 + 576);
          uint64_t v256 = *(void (**)(uint64_t, uint64_t, uint64_t))(v253 + 40);
          swift_bridgeObjectRetain();
          v256(v252, v255, v253);
          (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v254, v255);
        }
        uint64_t v257 = *(void *)(v0 + 1008);
        uint64_t v258 = *(void *)(v0 + 992);
        uint64_t v469 = *(void *)(v0 + 760);
        uint64_t v393 = *(void *)(v0 + 728);
        uint64_t v412 = *(void *)(v0 + 720);
        uint64_t v459 = *(void *)(v0 + 712);
        uint64_t v369 = *(void *)(v0 + 704);
        uint64_t v377 = *(void *)(v0 + 592);
        uint64_t v384 = *(void *)(v0 + 584);
        uint64_t v259 = *(void *)(v0 + 552);
        uint64_t v260 = *(void *)(v0 + 528);
        uint64_t v261 = *(void *)(v0 + 648);
        (*(void (**)(void))(v248 + 56))();
        uint64_t v262 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v262 - 8) + 56))(v259, 1, 1, v262);
        uint64_t v263 = (long long *)(v260 + *(void *)(*(void *)v260 + 240));
        uint64_t v264 = *((void *)v263 + 2);
        long long v485 = *v263;
        uint64_t v265 = (uint64_t *)(v257 + *(int *)(v258 + 36));
        uint64_t v266 = *v265;
        uint64_t v267 = v265[1];
        uint64_t v268 = v265[2];
        uint64_t v486 = v264;
        uint64_t v487 = v266;
        uint64_t v488 = v267;
        uint64_t v489 = v268;
        sub_1BFE5BC98(&v485, &v487, &v482);
        uint64_t v487 = v482;
        uint64_t v488 = v483;
        uint64_t v489 = v484;
        *(void *)&long long v485 = 0;
        WORD4(v485) = 256;
        v475 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v469, 0, &v481, v459, v369, 0, v478, 0, 0, v442, 0, 0, 1, 0, 1, 0, 1,
                 v480,
                 v246,
                 v261,
                 v259,
                 &v487,
                 (uint64_t)&v485,
                 0,
                 0,
                 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v259, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v377 + 8))(v261, v384);
        uint64_t v269 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v369, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v459, (unint64_t *)&qword_1EB871180, v269);
        (*(void (**)(uint64_t, uint64_t))(v393 + 8))(v469, v412);
        LOBYTE(v261) = FeedCursor.reachedEnd.getter();
        sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v270 = *(void *)(v0 + 1000);
        uint64_t v443 = *(void *)(v0 + 992);
        uint64_t v138 = *(void *)(v0 + 952);
        uint64_t v139 = *(void *)(v0 + 864);
        uint64_t v271 = *(void *)(v0 + 824);
        uint64_t v413 = *(void *)(v0 + 816);
        uint64_t v422 = *(void *)(v0 + 848);
        uint64_t v460 = *(void *)(v0 + 1008);
        uint64_t v399 = *(void *)(v0 + 984);
        if (v261)
        {
          uint64_t v141 = *(void *)(v0 + 520);
          uint64_t v272 = swift_allocObject();
          *(_OWORD *)(v272 + 16) = xmmword_1C1529AE0;
          uint64_t v273 = sub_1C152088C();
          uint64_t v275 = v274;
          *(void *)(v272 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v272 + 64) = sub_1BFE9C558();
          *(void *)(v272 + 32) = v273;
          *(void *)(v272 + 40) = v275;
          sub_1C151F38C();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v422, v413);
          (*(void (**)(uint64_t, uint64_t))(v270 + 8))(v460, v443);
          goto LABEL_36;
        }
        uint64_t v277 = *(void *)(v0 + 528);
        uint64_t v388 = *(void *)(v0 + 520);
        uint64_t v278 = swift_allocObject();
        *(_OWORD *)(v278 + 16) = xmmword_1C1527210;
        uint64_t v451 = v139;
        uint64_t v148 = v138;
        uint64_t v279 = sub_1C152088C();
        uint64_t v281 = v280;
        *(void *)(v278 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v282 = sub_1BFE9C558();
        *(void *)(v278 + 64) = v282;
        *(void *)(v278 + 32) = v279;
        *(void *)(v278 + 40) = v281;
        *(void *)(v0 + 504) = v277;
        type metadata accessor for FeedCursor();
        swift_getWitnessTable();
        uint64_t v283 = sub_1C15186EC();
        *(void *)(v278 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v278 + 104) = v282;
        *(void *)(v278 + 72) = v283;
        *(void *)(v278 + 80) = v284;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v422, v413);
        (*(void (**)(uint64_t, uint64_t))(v270 + 8))(v460, v443);
        uint64_t v155 = v451;
LABEL_38:
        uint64_t v285 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v388, v399, v155);
        *(void *)(v388 + v285) = v475;
        goto LABEL_39;
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v28 = v7;
        (*(void (**)(void, uint64_t *, uint64_t))(*(void *)(v0 + 952) + 32))(*(void *)(v0 + 976), v92, v93);
        __swift_destroy_boxed_opaque_existential_1(v94);
LABEL_14:
        uint64_t v96 = *(void *)(v0 + 1008);
        uint64_t v323 = v96;
        uint64_t v381 = *(void *)(v0 + 992);
        uint64_t v97 = *(void *)(v0 + 928);
        uint64_t v322 = *(void *)(v0 + 968);
        uint64_t v98 = *(void *)(v0 + 904);
        uint64_t v419 = v98;
        uint64_t v432 = *(void *)(v0 + 832);
        uint64_t v350 = *(void *)(v0 + 824);
        uint64_t v319 = *(void *)(v0 + 808);
        uint64_t v325 = *(void *)(v0 + 800);
        uint64_t v99 = *(void *)(v0 + 792);
        uint64_t v100 = *(void *)(v0 + 784);
        uint64_t v335 = *(void *)(v0 + 776);
        uint64_t v338 = *(void *)(v0 + 768);
        uint64_t v330 = *(void *)(v0 + 744);
        uint64_t v332 = *(void *)(v0 + 680);
        uint64_t v342 = *(void *)(v0 + 672);
        uint64_t v345 = *(void *)(v0 + 816);
        uint64_t v354 = *(void *)(v0 + 592);
        uint64_t v358 = *(void *)(v0 + 608);
        uint64_t v363 = *(void *)(v0 + 584);
        uint64_t v374 = *(void *)(v0 + 576);
        uint64_t v407 = *(void *)(v0 + 568);
        uint64_t v101 = *(void *)(v0 + 528);
        (*(void (**)(void))(*(void *)(v0 + 952) + 16))();
        v462(v97, v96, v98);
        uint64_t v102 = v97 + *(int *)(v2 + 44);
        swift_retain();
        v436(v102, v28);
        sub_1BFDCA2AC();
        swift_release();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v325, v101 + *(void *)(*(void *)v101 + 256), v407);
        sub_1C151630C();
        FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v100, v322, v319, v325, v407, v432);
        uint64_t v480 = *(void *)(v101 + qword_1EB93CB78);
        v462(v97, v96, v98);
        uint64_t v103 = v97 + *(int *)(v471 + 44);
        swift_bridgeObjectRetain();
        swift_retain();
        v436(v103, v28);
        uint64_t v104 = sub_1BFE4028C();
        uint64_t v106 = v105;
        swift_release();
        sub_1C035332C(v104, v106, v385);
        swift_bridgeObjectRelease();
        sub_1BFE5F150((uint64_t)v385, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v330, 1, 1, v407);
        unsigned __int8 v481 = 7;
        long long v107 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v335 + 56);
        v107(v332, 1, 1, v338);
        v107(v342, 1, 1, v338);
        uint64_t v108 = *(void *)(v101 + qword_1EB93C688);
        v462(v97, v323, v419);
        uint64_t v109 = v97 + *(int *)(v471 + 44);
        uint64_t v110 = *(void *)(v109 + *(int *)(v28 + 36));
        swift_retain();
        v436(v109, v28);
        uint64_t v448 = sub_1C041EF68(v108, v110);
        swift_release();
        sub_1C152089C();
        swift_allocObject();
        uint64_t v111 = sub_1C151EC6C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v350 + 16))(v112, v432, v345);
        sub_1BFE94A38(v111);
        v433 = (unsigned char *)sub_1C151ECAC();
        swift_bridgeObjectRelease();
        uint64_t v113 = *(void *)(v323 + *(int *)(v381 + 44));
        uint64_t v114 = v101 + *(void *)(*(void *)v101 + 224);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v354 + 16))(v358, v114, v363);
        uint64_t v115 = *(void *)(v374 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v115 + 48))(v358, 1) == 1)
        {
          uint64_t v116 = *(void *)(v0 + 608);
          uint64_t v117 = *(void *)(v0 + 584);
          long long v118 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 592) + 8);
          swift_bridgeObjectRetain();
          v118(v116, v117);
        }
        else
        {
          uint64_t v119 = *(void *)(v0 + 976);
          uint64_t v120 = *(void *)(v0 + 856);
          uint64_t v121 = *(void *)(v0 + 608);
          uint64_t v122 = *(void *)(v0 + 576);
          char v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 40);
          swift_bridgeObjectRetain();
          v123(v119, v122, v120);
          (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v121, v122);
        }
        uint64_t v124 = *(void *)(v0 + 1008);
        uint64_t v125 = *(void *)(v0 + 992);
        uint64_t v382 = *(void *)(v0 + 728);
        uint64_t v398 = *(void *)(v0 + 720);
        uint64_t v456 = *(void *)(v0 + 680);
        uint64_t v466 = *(void *)(v0 + 744);
        uint64_t v359 = *(void *)(v0 + 672);
        uint64_t v364 = *(void *)(v0 + 592);
        uint64_t v375 = *(void *)(v0 + 584);
        uint64_t v126 = *(void *)(v0 + 552);
        uint64_t v127 = *(void *)(v0 + 528);
        uint64_t v128 = *(void *)(v0 + 616);
        (*(void (**)(void))(v115 + 56))();
        uint64_t v129 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v126, 1, 1, v129);
        long long v130 = (long long *)(v127 + *(void *)(*(void *)v127 + 240));
        uint64_t v131 = *((void *)v130 + 2);
        long long v485 = *v130;
        long long v132 = (uint64_t *)(v124 + *(int *)(v125 + 36));
        uint64_t v133 = *v132;
        uint64_t v134 = v132[1];
        uint64_t v135 = v132[2];
        uint64_t v486 = v131;
        uint64_t v487 = v133;
        uint64_t v488 = v134;
        uint64_t v489 = v135;
        sub_1BFE5BC98(&v485, &v487, &v482);
        uint64_t v487 = v482;
        uint64_t v488 = v483;
        uint64_t v489 = v484;
        *(void *)&long long v485 = 0;
        WORD4(v485) = 256;
        v475 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v466, 0, &v481, v456, v359, 0, v448, 0, 0, v433, 0, 0, 1, 0, 1, 0, 1,
                 v480,
                 v113,
                 v128,
                 v126,
                 &v487,
                 (uint64_t)&v485,
                 0,
                 0,
                 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v126, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v364 + 8))(v128, v375);
        long long v136 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v359, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v456, (unint64_t *)&qword_1EB871180, v136);
        (*(void (**)(uint64_t, uint64_t))(v382 + 8))(v466, v398);
        LOBYTE(v128) = FeedCursor.reachedEnd.getter();
        sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v137 = *(void *)(v0 + 1000);
        uint64_t v449 = *(void *)(v0 + 992);
        uint64_t v457 = *(void *)(v0 + 1008);
        uint64_t v138 = *(void *)(v0 + 952);
        uint64_t v139 = *(void *)(v0 + 864);
        uint64_t v140 = *(void *)(v0 + 824);
        uint64_t v408 = *(void *)(v0 + 816);
        uint64_t v420 = *(void *)(v0 + 832);
        uint64_t v399 = *(void *)(v0 + 976);
        if (v128)
        {
          uint64_t v141 = *(void *)(v0 + 520);
          uint64_t v142 = swift_allocObject();
          *(_OWORD *)(v142 + 16) = xmmword_1C1529AE0;
          uint64_t v143 = sub_1C152088C();
          uint64_t v145 = v144;
          *(void *)(v142 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v142 + 64) = sub_1BFE9C558();
          *(void *)(v142 + 32) = v143;
          *(void *)(v142 + 40) = v145;
          sub_1C151F38C();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v420, v408);
          (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v457, v449);
LABEL_36:
          type metadata accessor for FeedCursor();
          uint64_t v276 = *(int *)(swift_getTupleTypeMetadata2() + 48);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 32))(v141, v399, v139);
          *(void *)(v141 + v276) = v475;
LABEL_39:
          type metadata accessor for FeedServiceFetchResult.Internal();
          swift_storeEnumTagMultiPayload();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          long long v286 = *(uint64_t (**)(void))(v0 + 8);
          return v286();
        }
        uint64_t v146 = *(void *)(v0 + 528);
        uint64_t v388 = *(void *)(v0 + 520);
        uint64_t v147 = swift_allocObject();
        *(_OWORD *)(v147 + 16) = xmmword_1C1527210;
        uint64_t v439 = v139;
        uint64_t v148 = v138;
        uint64_t v149 = sub_1C152088C();
        uint64_t v151 = v150;
        *(void *)(v147 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v152 = sub_1BFE9C558();
        *(void *)(v147 + 64) = v152;
        *(void *)(v147 + 32) = v149;
        *(void *)(v147 + 40) = v151;
        *(void *)(v0 + 480) = v146;
        type metadata accessor for FeedCursor();
        swift_getWitnessTable();
        uint64_t v153 = sub_1C15186EC();
        *(void *)(v147 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v147 + 104) = v152;
        *(void *)(v147 + 72) = v153;
        *(void *)(v147 + 80) = v154;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v420, v408);
        (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v457, v449);
        uint64_t v155 = v439;
        goto LABEL_38;
      }
      uint64_t v428 = v7;
      uint64_t v31 = *v92;
      uint64_t v30 = v92[1];
      __swift_destroy_boxed_opaque_existential_1(v94);
LABEL_43:
      uint64_t v288 = *(void *)(v0 + 1008);
      uint64_t v289 = *(void *)(v0 + 928);
      uint64_t v290 = *(void *)(v0 + 904);
      uint64_t v360 = *(void *)(v0 + 792);
      uint64_t v291 = *(void *)(v0 + 776);
      uint64_t v394 = *(void *)(v0 + 736);
      uint64_t v403 = *(void *)(v0 + 664);
      uint64_t v414 = *(void *)(v0 + 768);
      uint64_t v423 = *(void *)(v0 + 656);
      uint64_t v378 = *(void *)(v0 + 568);
      uint64_t v292 = *(void *)(v0 + 528);
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v293 = swift_allocObject();
      *(_OWORD *)(v293 + 16) = xmmword_1C1529AE0;
      *(void *)(v293 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v293 + 64) = sub_1BFE9C558();
      *(void *)(v293 + 32) = v31;
      *(void *)(v293 + 40) = v30;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 488) = *(void *)(v292 + qword_1EB93CB78);
      v462(v289, v288, v290);
      uint64_t v294 = v289 + *(int *)(v471 + 44);
      swift_bridgeObjectRetain();
      swift_retain();
      v436(v294, v428);
      uint64_t v295 = sub_1BFE4028C();
      uint64_t v297 = v296;
      swift_release();
      sub_1C035332C(v295, v297, v379);
      swift_bridgeObjectRelease();
      sub_1BFE5F150((uint64_t)v379, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v360 + 56))(v394, 1, 1, v378);
      LOBYTE(v480) = 7;
      long long v298 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v291 + 56);
      v298(v403, 1, 1, v414);
      v298(v423, 1, 1, v414);
      uint64_t v299 = *(void *)(v292 + qword_1EB93C688);
      v462(v289, v288, v290);
      uint64_t v300 = v289 + *(int *)(v471 + 44);
      uint64_t v301 = *(void *)(v300 + *(int *)(v428 + 36));
      swift_retain();
      v436(v300, v428);
      uint64_t v479 = sub_1C041EF68(v299, v301);
      swift_release();
      uint64_t v302 = *(void *)(v292 + qword_1EB93C698);
      v470 = (unsigned char *)(v302 + 1);
      if (__OFADD__(v302, 1))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        JUMPOUT(0x1C0416878);
      }
      uint64_t v303 = *(void *)(v0 + 1008);
      uint64_t v304 = *(void *)(v0 + 992);
      uint64_t v452 = *(void *)(v0 + 728);
      uint64_t v461 = *(void *)(v0 + 720);
      uint64_t v415 = *(void *)(v0 + 664);
      uint64_t v424 = *(void *)(v0 + 736);
      uint64_t v305 = *(void *)(v0 + 600);
      uint64_t v435 = *(void *)(v0 + 592);
      uint64_t v444 = *(void *)(v0 + 584);
      uint64_t v306 = *(void *)(v0 + 552);
      uint64_t v307 = *(void *)(v0 + 528);
      uint64_t v395 = *(void *)(v0 + 488);
      uint64_t v404 = *(void *)(v0 + 656);
      uint64_t v308 = *(void *)(v303 + *(int *)(v304 + 44));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 576) - 8) + 56))(v305, 1, 1);
      uint64_t v309 = type metadata accessor for FeedContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v309 - 8) + 56))(v306, 1, 1, v309);
      v310 = (long long *)(v307 + *(void *)(*(void *)v307 + 240));
      uint64_t v311 = *((void *)v310 + 2);
      long long v485 = *v310;
      v312 = (uint64_t *)(v303 + *(int *)(v304 + 36));
      uint64_t v313 = *v312;
      uint64_t v314 = v312[1];
      uint64_t v315 = v312[2];
      uint64_t v486 = v311;
      uint64_t v487 = v313;
      uint64_t v488 = v314;
      uint64_t v489 = v315;
      swift_bridgeObjectRetain();
      sub_1BFE5BC98(&v485, &v487, &v482);
      uint64_t v487 = v482;
      uint64_t v488 = v483;
      uint64_t v489 = v484;
      *(void *)&long long v485 = 0;
      WORD4(v485) = 256;
      unint64_t v57 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v424, 0, (unsigned __int8 *)&v480, v415, v404, 0, v479, 0, 0, 0, 0, v470, 0, 0, 1, 0, 1,
              v395,
              v308,
              v305,
              v306,
              &v487,
              (uint64_t)&v485,
              0,
              0,
              0);
      *(void *)(v0 + 1032) = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C04276B8(v306, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v435 + 8))(v305, v444);
      uint64_t v316 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C04276B8(v404, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C04276B8(v415, (unint64_t *)&qword_1EB871180, v316);
      (*(void (**)(uint64_t, uint64_t))(v452 + 8))(v424, v461);
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 1040) = v59;
      *uint64_t v59 = v0;
      uint64_t v60 = sub_1C0416894;
LABEL_45:
      v59[1] = v60;
      uint64_t v317 = *(void *)(v0 + 536);
      uint64_t v318 = *(void *)(v0 + 520);
      v59[22] = *(void *)(v0 + 544);
      v59[21] = v317;
      v59[19] = v318;
      v59[20] = v57;
      v59[23] = *(void *)v57;
      return MEMORY[0x1F4188298](sub_1BFE610B4, 0, 0);
    default:
      uint64_t v9 = *(void *)(v0 + 984);
      uint64_t v10 = *(void *)(v0 + 952);
      uint64_t v11 = *(void *)(v0 + 896);
      uint64_t v12 = *(void *)(v0 + 864);
      sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      uint64_t v13 = v11 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v11, v12);
      uint64_t v14 = v0 + 120;
      sub_1BFFBE2FC(v13, v425);
      goto LABEL_28;
  }
}

uint64_t sub_1C0416894()
{
  *(void *)(*(void *)v1 + 1048) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0419204;
  }
  else {
    uint64_t v2 = sub_1C04169A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C04169A8()
{
  uint64_t v1 = v0[126];
  uint64_t v2 = v0[125];
  uint64_t v3 = v0[124];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C0416C30()
{
  *(void *)(*(void *)v1 + 1072) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0417FDC;
  }
  else {
    uint64_t v2 = sub_1C0416D44;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0416D44()
{
  uint64_t v1 = v0[126];
  uint64_t v2 = v0[125];
  uint64_t v3 = v0[124];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C0416FCC()
{
  *(void *)(*(void *)v1 + 1096) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C04188F0;
  }
  else {
    uint64_t v2 = sub_1C04170E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C04170E0()
{
  uint64_t v1 = v0[126];
  uint64_t v2 = v0[125];
  uint64_t v3 = v0[124];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C0417368()
{
  *(void *)(*(void *)v1 + 1128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0419B18;
  }
  else {
    uint64_t v2 = sub_1C041747C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C041747C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C04176EC()
{
  uint64_t v65 = v0;
  uint64_t v1 = *(void **)(v0 + 1024);
  *(void *)(v0 + 1104) = v1;
  *(void *)(v0 + 512) = v1;
  id v2 = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (!swift_dynamicCast()) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)(v0 + 40);
  int v4 = *(unsigned __int8 *)(v0 + 48);
  if (v4 != 1)
  {
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v4);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  uint64_t v53 = *(void *)(v0 + 32);
  uint64_t v54 = *(void *)(v0 + 16);
  unint64_t v55 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(*(void *)(v0 + 528) + qword_1EB93CB78);
  uint64_t v6 = type metadata accessor for FeedGroupEmitter();
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v44 = (void *)v0;
  if (MEMORY[0x1C18C6870](v7, v6))
  {
    uint64_t v8 = 0;
    uint64_t v9 = (_OWORD *)(v0 + 88);
    uint64_t v56 = MEMORY[0x1E4FBC840] + 8;
    do
    {
      char v10 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v10)
      {
        uint64_t v11 = (uint64_t (*)())swift_retain();
        uint64_t v14 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v11 = (uint64_t (*)())sub_1C152016C();
        uint64_t v14 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          return MEMORY[0x1F4188298](v11, v12, v13);
        }
      }
      uint64_t v15 = sub_1BFE4028C();
      uint64_t v17 = v16;
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_1BFEF2D8C(v15, v17);
      LOBYTE(v15) = v19;
      swift_bridgeObjectRelease();
      if (v15)
      {
        uint64_t v62 = v5;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C106AA18();
          uint64_t v5 = v62;
        }
        swift_bridgeObjectRelease();
        sub_1BFF993A8((_OWORD *)(*(void *)(v5 + 56) + 32 * v18), v9);
        sub_1C091D10C(v18, v5);
        swift_bridgeObjectRelease();
      }
      else
      {
        *uint64_t v9 = 0u;
        v9[1] = 0u;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFE5F150((uint64_t)v9, (unint64_t *)&qword_1EB87A940, v56, MEMORY[0x1E4FBB718]);
      ++v8;
    }
    while (v14 != MEMORY[0x1C18C6870](v3, v6));
  }
  uint64_t v22 = v44[99];
  uint64_t v23 = v44[97];
  uint64_t v24 = v44[96];
  uint64_t v25 = v44[92];
  uint64_t v26 = v44[83];
  uint64_t v51 = v44[82];
  uint64_t v27 = v44[71];
  uint64_t v28 = v44[66];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v25, 1, 1, v27);
  unsigned __int8 v58 = 7;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v29(v26, 1, 1, v24);
  v29(v51, 1, 1, v24);
  uint64_t v30 = sub_1C041F060(*(void *)(v28 + qword_1EB93C688), v3);
  uint64_t v11 = (uint64_t (*)())swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v28 + qword_1EB93C698);
  if (__OFADD__(v31, 1)) {
    goto LABEL_25;
  }
  uint64_t v48 = v44[92];
  uint64_t v45 = (unsigned char *)(v31 + 1);
  uint64_t v57 = v44[90];
  uint64_t v46 = v44[82];
  uint64_t v47 = v44[83];
  uint64_t v32 = v44[75];
  uint64_t v49 = v44[74];
  uint64_t v50 = v44[73];
  uint64_t v52 = v44[91];
  uint64_t v33 = v44[69];
  uint64_t v34 = v30;
  uint64_t v35 = v44[66];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44[72] - 8) + 56))(v32, 1, 1);
  uint64_t v36 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v33, 1, 1, v36);
  uint64_t v37 = (long long *)(v35 + *(void *)(*(void *)v35 + 240));
  uint64_t v38 = *((void *)v37 + 2);
  long long v60 = *v37;
  uint64_t v61 = v38;
  uint64_t v62 = v54;
  unint64_t v63 = v55;
  uint64_t v64 = v53;
  sub_1BFE5BC98(&v60, &v62, v59);
  swift_bridgeObjectRelease();
  sub_1BFD7F858(v55);
  uint64_t v62 = v59[0];
  unint64_t v63 = v59[1];
  uint64_t v64 = v59[2];
  *(void *)&long long v60 = 0;
  WORD4(v60) = 256;
  uint64_t v39 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v48, 0, &v58, v47, v46, 0, v34, 0, 0, 0, 0, v45, 0, 0, 1, 0, 1,
          v5,
          0,
          v32,
          v33,
          &v62,
          (uint64_t)&v60,
          0,
          0,
          0);
  v44[139] = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C04276B8(v33, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v32, v50);
  uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v46, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v47, (unint64_t *)&qword_1EB871180, v40);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v48, v57);
  uint64_t v41 = (void *)swift_task_alloc();
  v44[140] = v41;
  *uint64_t v41 = v44;
  v41[1] = sub_1C0417368;
  uint64_t v42 = v44[67];
  uint64_t v43 = v44[65];
  v41[22] = v44[68];
  v41[21] = v42;
  v41[19] = v43;
  v41[20] = v39;
  v41[23] = *(void *)v39;
  uint64_t v11 = sub_1BFE610B4;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1C0417FDC()
{
  uint64_t v70 = v0;
  uint64_t v1 = *(void *)(v0 + 1008);
  uint64_t v2 = *(void *)(v0 + 1000);
  uint64_t v3 = *(void *)(v0 + 992);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  int v4 = *(void **)(v0 + 1072);
  *(void *)(v0 + 1104) = v4;
  *(void *)(v0 + 512) = v4;
  id v5 = v4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (!swift_dynamicCast()) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v0 + 40);
  int v7 = *(unsigned __int8 *)(v0 + 48);
  if (v7 != 1)
  {
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v7);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  uint64_t v58 = *(void *)(v0 + 32);
  uint64_t v59 = *(void *)(v0 + 16);
  unint64_t v60 = *(void *)(v0 + 24);
  uint64_t v8 = v0;
  uint64_t v9 = *(void *)(*(void *)(v0 + 528) + qword_1EB93CB78);
  uint64_t v10 = type metadata accessor for FeedGroupEmitter();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v49 = (void *)v8;
  if (MEMORY[0x1C18C6870](v11, v10))
  {
    uint64_t v12 = 0;
    uint64_t v13 = (_OWORD *)(v8 + 88);
    uint64_t v61 = MEMORY[0x1E4FBC840] + 8;
    do
    {
      char v14 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v14)
      {
        uint64_t v15 = (uint64_t (*)())swift_retain();
        uint64_t v18 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v15 = (uint64_t (*)())sub_1C152016C();
        uint64_t v18 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          return MEMORY[0x1F4188298](v15, v16, v17);
        }
      }
      uint64_t v19 = sub_1BFE4028C();
      uint64_t v21 = v20;
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1BFEF2D8C(v19, v21);
      LOBYTE(v19) = v23;
      swift_bridgeObjectRelease();
      if (v19)
      {
        uint64_t v67 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C106AA18();
          uint64_t v9 = v67;
        }
        swift_bridgeObjectRelease();
        sub_1BFF993A8((_OWORD *)(*(void *)(v9 + 56) + 32 * v22), v13);
        sub_1C091D10C(v22, v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        *uint64_t v13 = 0u;
        v13[1] = 0u;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFE5F150((uint64_t)v13, (unint64_t *)&qword_1EB87A940, v61, MEMORY[0x1E4FBB718]);
      ++v12;
    }
    while (v18 != MEMORY[0x1C18C6870](v6, v10));
  }
  uint64_t v26 = v49[99];
  uint64_t v27 = v49[97];
  uint64_t v28 = v49[96];
  uint64_t v29 = v49[92];
  uint64_t v30 = v49[83];
  uint64_t v56 = v49[82];
  uint64_t v31 = v49[71];
  uint64_t v32 = v49[66];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v29, 1, 1, v31);
  unsigned __int8 v63 = 7;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v33(v30, 1, 1, v28);
  v33(v56, 1, 1, v28);
  uint64_t v34 = sub_1C041F060(*(void *)(v32 + qword_1EB93C688), v6);
  uint64_t v15 = (uint64_t (*)())swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v32 + qword_1EB93C698);
  BOOL v36 = __OFADD__(v35, 1);
  uint64_t v37 = (unsigned char *)(v35 + 1);
  if (v36) {
    goto LABEL_25;
  }
  uint64_t v51 = v37;
  uint64_t v62 = v49[92];
  uint64_t v55 = v49[91];
  uint64_t v57 = v49[90];
  uint64_t v52 = v49[83];
  uint64_t v50 = v49[82];
  uint64_t v38 = v49[75];
  uint64_t v53 = v49[74];
  uint64_t v54 = v49[73];
  uint64_t v39 = v49[69];
  uint64_t v40 = v49[66];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49[72] - 8) + 56))(v38, 1, 1);
  uint64_t v41 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 1, 1, v41);
  uint64_t v42 = (long long *)(v40 + *(void *)(*(void *)v40 + 240));
  uint64_t v43 = *((void *)v42 + 2);
  long long v65 = *v42;
  uint64_t v66 = v43;
  uint64_t v67 = v59;
  unint64_t v68 = v60;
  uint64_t v69 = v58;
  sub_1BFE5BC98(&v65, &v67, v64);
  swift_bridgeObjectRelease();
  sub_1BFD7F858(v60);
  uint64_t v67 = v64[0];
  unint64_t v68 = v64[1];
  uint64_t v69 = v64[2];
  *(void *)&long long v65 = 0;
  WORD4(v65) = 256;
  uint64_t v44 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v62, 0, &v63, v52, v50, 0, v34, 0, 0, 0, 0, v51, 0, 0, 1, 0, 1,
          v9,
          0,
          v38,
          v39,
          &v67,
          (uint64_t)&v65,
          0,
          0,
          0);
  v49[139] = v44;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C04276B8(v39, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v38, v54);
  uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v50, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v52, (unint64_t *)&qword_1EB871180, v45);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v62, v57);
  uint64_t v46 = (void *)swift_task_alloc();
  v49[140] = v46;
  *uint64_t v46 = v49;
  v46[1] = sub_1C0417368;
  uint64_t v47 = v49[67];
  uint64_t v48 = v49[65];
  v46[22] = v49[68];
  v46[21] = v47;
  v46[19] = v48;
  v46[20] = v44;
  v46[23] = *(void *)v44;
  uint64_t v15 = sub_1BFE610B4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1C04188F0()
{
  uint64_t v70 = v0;
  uint64_t v1 = *(void *)(v0 + 1008);
  uint64_t v2 = *(void *)(v0 + 1000);
  uint64_t v3 = *(void *)(v0 + 992);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  int v4 = *(void **)(v0 + 1096);
  *(void *)(v0 + 1104) = v4;
  *(void *)(v0 + 512) = v4;
  id v5 = v4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (!swift_dynamicCast()) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v0 + 40);
  int v7 = *(unsigned __int8 *)(v0 + 48);
  if (v7 != 1)
  {
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v7);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  uint64_t v58 = *(void *)(v0 + 32);
  uint64_t v59 = *(void *)(v0 + 16);
  unint64_t v60 = *(void *)(v0 + 24);
  uint64_t v8 = v0;
  uint64_t v9 = *(void *)(*(void *)(v0 + 528) + qword_1EB93CB78);
  uint64_t v10 = type metadata accessor for FeedGroupEmitter();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v49 = (void *)v8;
  if (MEMORY[0x1C18C6870](v11, v10))
  {
    uint64_t v12 = 0;
    uint64_t v13 = (_OWORD *)(v8 + 88);
    uint64_t v61 = MEMORY[0x1E4FBC840] + 8;
    do
    {
      char v14 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v14)
      {
        uint64_t v15 = (uint64_t (*)())swift_retain();
        uint64_t v18 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v15 = (uint64_t (*)())sub_1C152016C();
        uint64_t v18 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          return MEMORY[0x1F4188298](v15, v16, v17);
        }
      }
      uint64_t v19 = sub_1BFE4028C();
      uint64_t v21 = v20;
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1BFEF2D8C(v19, v21);
      LOBYTE(v19) = v23;
      swift_bridgeObjectRelease();
      if (v19)
      {
        uint64_t v67 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C106AA18();
          uint64_t v9 = v67;
        }
        swift_bridgeObjectRelease();
        sub_1BFF993A8((_OWORD *)(*(void *)(v9 + 56) + 32 * v22), v13);
        sub_1C091D10C(v22, v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        *uint64_t v13 = 0u;
        v13[1] = 0u;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFE5F150((uint64_t)v13, (unint64_t *)&qword_1EB87A940, v61, MEMORY[0x1E4FBB718]);
      ++v12;
    }
    while (v18 != MEMORY[0x1C18C6870](v6, v10));
  }
  uint64_t v26 = v49[99];
  uint64_t v27 = v49[97];
  uint64_t v28 = v49[96];
  uint64_t v29 = v49[92];
  uint64_t v30 = v49[83];
  uint64_t v56 = v49[82];
  uint64_t v31 = v49[71];
  uint64_t v32 = v49[66];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v29, 1, 1, v31);
  unsigned __int8 v63 = 7;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v33(v30, 1, 1, v28);
  v33(v56, 1, 1, v28);
  uint64_t v34 = sub_1C041F060(*(void *)(v32 + qword_1EB93C688), v6);
  uint64_t v15 = (uint64_t (*)())swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v32 + qword_1EB93C698);
  BOOL v36 = __OFADD__(v35, 1);
  uint64_t v37 = (unsigned char *)(v35 + 1);
  if (v36) {
    goto LABEL_25;
  }
  uint64_t v51 = v37;
  uint64_t v62 = v49[92];
  uint64_t v55 = v49[91];
  uint64_t v57 = v49[90];
  uint64_t v52 = v49[83];
  uint64_t v50 = v49[82];
  uint64_t v38 = v49[75];
  uint64_t v53 = v49[74];
  uint64_t v54 = v49[73];
  uint64_t v39 = v49[69];
  uint64_t v40 = v49[66];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49[72] - 8) + 56))(v38, 1, 1);
  uint64_t v41 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 1, 1, v41);
  uint64_t v42 = (long long *)(v40 + *(void *)(*(void *)v40 + 240));
  uint64_t v43 = *((void *)v42 + 2);
  long long v65 = *v42;
  uint64_t v66 = v43;
  uint64_t v67 = v59;
  unint64_t v68 = v60;
  uint64_t v69 = v58;
  sub_1BFE5BC98(&v65, &v67, v64);
  swift_bridgeObjectRelease();
  sub_1BFD7F858(v60);
  uint64_t v67 = v64[0];
  unint64_t v68 = v64[1];
  uint64_t v69 = v64[2];
  *(void *)&long long v65 = 0;
  WORD4(v65) = 256;
  uint64_t v44 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v62, 0, &v63, v52, v50, 0, v34, 0, 0, 0, 0, v51, 0, 0, 1, 0, 1,
          v9,
          0,
          v38,
          v39,
          &v67,
          (uint64_t)&v65,
          0,
          0,
          0);
  v49[139] = v44;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C04276B8(v39, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v38, v54);
  uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v50, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v52, (unint64_t *)&qword_1EB871180, v45);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v62, v57);
  uint64_t v46 = (void *)swift_task_alloc();
  v49[140] = v46;
  *uint64_t v46 = v49;
  v46[1] = sub_1C0417368;
  uint64_t v47 = v49[67];
  uint64_t v48 = v49[65];
  v46[22] = v49[68];
  v46[21] = v47;
  v46[19] = v48;
  v46[20] = v44;
  v46[23] = *(void *)v44;
  uint64_t v15 = sub_1BFE610B4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1C0419204()
{
  uint64_t v70 = v0;
  uint64_t v1 = *(void *)(v0 + 1008);
  uint64_t v2 = *(void *)(v0 + 1000);
  uint64_t v3 = *(void *)(v0 + 992);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  int v4 = *(void **)(v0 + 1048);
  *(void *)(v0 + 1104) = v4;
  *(void *)(v0 + 512) = v4;
  id v5 = v4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (!swift_dynamicCast()) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v0 + 40);
  int v7 = *(unsigned __int8 *)(v0 + 48);
  if (v7 != 1)
  {
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v7);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  uint64_t v58 = *(void *)(v0 + 32);
  uint64_t v59 = *(void *)(v0 + 16);
  unint64_t v60 = *(void *)(v0 + 24);
  uint64_t v8 = v0;
  uint64_t v9 = *(void *)(*(void *)(v0 + 528) + qword_1EB93CB78);
  uint64_t v10 = type metadata accessor for FeedGroupEmitter();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v49 = (void *)v8;
  if (MEMORY[0x1C18C6870](v11, v10))
  {
    uint64_t v12 = 0;
    uint64_t v13 = (_OWORD *)(v8 + 88);
    uint64_t v61 = MEMORY[0x1E4FBC840] + 8;
    do
    {
      char v14 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v14)
      {
        uint64_t v15 = (uint64_t (*)())swift_retain();
        uint64_t v18 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v15 = (uint64_t (*)())sub_1C152016C();
        uint64_t v18 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          return MEMORY[0x1F4188298](v15, v16, v17);
        }
      }
      uint64_t v19 = sub_1BFE4028C();
      uint64_t v21 = v20;
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1BFEF2D8C(v19, v21);
      LOBYTE(v19) = v23;
      swift_bridgeObjectRelease();
      if (v19)
      {
        uint64_t v67 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C106AA18();
          uint64_t v9 = v67;
        }
        swift_bridgeObjectRelease();
        sub_1BFF993A8((_OWORD *)(*(void *)(v9 + 56) + 32 * v22), v13);
        sub_1C091D10C(v22, v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        *uint64_t v13 = 0u;
        v13[1] = 0u;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFE5F150((uint64_t)v13, (unint64_t *)&qword_1EB87A940, v61, MEMORY[0x1E4FBB718]);
      ++v12;
    }
    while (v18 != MEMORY[0x1C18C6870](v6, v10));
  }
  uint64_t v26 = v49[99];
  uint64_t v27 = v49[97];
  uint64_t v28 = v49[96];
  uint64_t v29 = v49[92];
  uint64_t v30 = v49[83];
  uint64_t v56 = v49[82];
  uint64_t v31 = v49[71];
  uint64_t v32 = v49[66];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v29, 1, 1, v31);
  unsigned __int8 v63 = 7;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v33(v30, 1, 1, v28);
  v33(v56, 1, 1, v28);
  uint64_t v34 = sub_1C041F060(*(void *)(v32 + qword_1EB93C688), v6);
  uint64_t v15 = (uint64_t (*)())swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v32 + qword_1EB93C698);
  BOOL v36 = __OFADD__(v35, 1);
  uint64_t v37 = (unsigned char *)(v35 + 1);
  if (v36) {
    goto LABEL_25;
  }
  uint64_t v51 = v37;
  uint64_t v62 = v49[92];
  uint64_t v55 = v49[91];
  uint64_t v57 = v49[90];
  uint64_t v52 = v49[83];
  uint64_t v50 = v49[82];
  uint64_t v38 = v49[75];
  uint64_t v53 = v49[74];
  uint64_t v54 = v49[73];
  uint64_t v39 = v49[69];
  uint64_t v40 = v49[66];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49[72] - 8) + 56))(v38, 1, 1);
  uint64_t v41 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 1, 1, v41);
  uint64_t v42 = (long long *)(v40 + *(void *)(*(void *)v40 + 240));
  uint64_t v43 = *((void *)v42 + 2);
  long long v65 = *v42;
  uint64_t v66 = v43;
  uint64_t v67 = v59;
  unint64_t v68 = v60;
  uint64_t v69 = v58;
  sub_1BFE5BC98(&v65, &v67, v64);
  swift_bridgeObjectRelease();
  sub_1BFD7F858(v60);
  uint64_t v67 = v64[0];
  unint64_t v68 = v64[1];
  uint64_t v69 = v64[2];
  *(void *)&long long v65 = 0;
  WORD4(v65) = 256;
  uint64_t v44 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v62, 0, &v63, v52, v50, 0, v34, 0, 0, 0, 0, v51, 0, 0, 1, 0, 1,
          v9,
          0,
          v38,
          v39,
          &v67,
          (uint64_t)&v65,
          0,
          0,
          0);
  v49[139] = v44;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C04276B8(v39, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v38, v54);
  uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v50, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v52, (unint64_t *)&qword_1EB871180, v45);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v62, v57);
  uint64_t v46 = (void *)swift_task_alloc();
  v49[140] = v46;
  *uint64_t v46 = v49;
  v46[1] = sub_1C0417368;
  uint64_t v47 = v49[67];
  uint64_t v48 = v49[65];
  v46[22] = v49[68];
  v46[21] = v47;
  v46[19] = v48;
  v46[20] = v44;
  v46[23] = *(void *)v44;
  uint64_t v15 = sub_1BFE610B4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1C0419B18()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0419DB0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1104) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[68] + 8))(v2[72], v2[67]);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v3 = sub_1C041CA0C;
  }
  else {
    uint64_t v3 = sub_1C0419F34;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C0419F34()
{
  uint64_t v1 = v0[128];
  uint64_t v2 = v0[127];
  uint64_t v3 = v0[66];
  (*(void (**)(void, void))(v0[124] + 8))(v0[126], v0[123]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C041A208()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1144) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[68] + 8))(v2[71], v2[67]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v3 = sub_1C041B86C;
  }
  else {
    uint64_t v3 = sub_1C0419F34;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C041A3CC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1176) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[68] + 8))(v2[70], v2[67]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v3 = sub_1C041C13C;
  }
  else {
    uint64_t v3 = sub_1C0419F34;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C041A574()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[151] = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[68] + 8))(v2[69], v2[67]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C041A980, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
}

uint64_t sub_1C041A980()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C041AC20()
{
  *(void *)(*(void *)v1 + 1240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C041D2DC;
  }
  else {
    uint64_t v2 = sub_1C041AD34;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C041AD34()
{
  uint64_t v1 = *(void **)(v0 + 1216);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C041AFDC()
{
  uint64_t v64 = v0;
  uint64_t v1 = *(void **)(v0 + 1080);
  *(void *)(v0 + 1216) = v1;
  *(void *)(v0 + 448) = v1;
  id v2 = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (swift_dynamicCast())
  {
    int v3 = *(unsigned __int8 *)(v0 + 48);
    if (v3 == 1)
    {
      uint64_t v39 = *(void *)(v0 + 32);
      uint64_t v40 = *(void *)(v0 + 16);
      unint64_t v41 = *(void *)(v0 + 24);
      uint64_t v4 = *(void *)(v0 + 1064);
      uint64_t v5 = *(void *)(v0 + 1056);
      uint64_t v6 = *(void *)(v0 + 824);
      uint64_t v7 = *(void *)(v0 + 808);
      uint64_t v8 = *(void *)(v0 + 792);
      uint64_t v46 = *(void *)(v0 + 680);
      uint64_t v48 = *(void *)(v0 + 784);
      uint64_t v50 = *(void *)(v0 + 672);
      uint64_t v52 = *(void *)(v0 + 1040);
      uint64_t v9 = *(void *)(v0 + 504);
      uint64_t v42 = *(void *)(v0 + 512);
      uint64_t v44 = *(void *)(v0 + 752);
      uint64_t v54 = *(void *)(v0 + 480);
      *(void *)(v0 + 440) = *(void *)(v0 + 40);
      uint64_t v10 = (void *)swift_task_alloc();
      uint64_t v11 = *(void *)(v9 + 80);
      *uint64_t v10 = v11;
      v10[1] = v6;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      uint64_t v13 = (void *)swift_task_alloc();
      void v13[2] = v11;
      v13[3] = v6;
      v13[4] = KeyPath;
      uint64_t v15 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0427AC4, (uint64_t)v13, v5, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v4, MEMORY[0x1E4FBC278], v14);
      swift_bridgeObjectRelease();
      swift_release();
      swift_task_dealloc();
      uint64_t v16 = sub_1BFEF4060(v15);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v44, 1, 1, v42);
      unsigned __int8 v57 = 7;
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v17(v46, 1, 1, v48);
      v17(v50, 1, 1, v48);
      *(void *)(v0 + 432) = v52;
      uint64_t v18 = (void *)swift_task_alloc();
      v18[2] = v11;
      void v18[3] = v6;
      v18[4] = v16;
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v19 = sub_1C152023C();
      swift_bridgeObjectRelease();
      uint64_t v20 = (uint64_t (*)())swift_task_dealloc();
      uint64_t v23 = *(void *)(v54 + qword_1EB93C698);
      uint64_t v24 = (unsigned char *)(v23 + 1);
      if (__OFADD__(v23, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v55 = *(void *)(v0 + 744);
        uint64_t v56 = *(void *)(v0 + 736);
        uint64_t v47 = *(void *)(v0 + 680);
        uint64_t v49 = *(void *)(v0 + 752);
        uint64_t v25 = *(void *)(v0 + 672);
        uint64_t v51 = *(void *)(v0 + 608);
        uint64_t v53 = *(void *)(v0 + 600);
        uint64_t v26 = *(void *)(v0 + 584);
        uint64_t v45 = (unsigned char *)v19;
        uint64_t v27 = *(void *)(v0 + 480);
        uint64_t v43 = *(void *)(v27 + qword_1EB93C688);
        uint64_t v28 = *(void *)(v0 + 616);
        (*(void (**)(void))(*(void *)(*(void *)(v0 + 592) - 8) + 56))();
        uint64_t v29 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v26, 1, 1, v29);
        uint64_t v30 = (long long *)(v27 + *(void *)(*(void *)v27 + 240));
        uint64_t v31 = *((void *)v30 + 2);
        long long v59 = *v30;
        uint64_t v60 = v31;
        uint64_t v61 = v40;
        unint64_t v62 = v41;
        uint64_t v63 = v39;
        sub_1BFE5BC98(&v59, &v61, v58);
        swift_bridgeObjectRelease();
        sub_1BFD7F858(v41);
        uint64_t v61 = v58[0];
        unint64_t v62 = v58[1];
        uint64_t v63 = v58[2];
        *(void *)&long long v59 = 0;
        WORD4(v59) = 256;
        uint64_t v32 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v49, 0, &v57, v47, v25, v45, v43, 0, 0, 0, 0, v24, 0, 0, 1, 0, 1,
                0,
                0,
                v28,
                v26,
                &v61,
                (uint64_t)&v59,
                0,
                0,
                0);
        *(void *)(v0 + 1224) = v32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v26, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v28, v53);
        uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v25, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v47, (unint64_t *)&qword_1EB871180, v33);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v49, v56);
        uint64_t v34 = (void *)swift_task_alloc();
        *(void *)(v0 + 1232) = v34;
        *uint64_t v34 = v0;
        v34[1] = sub_1C041AC20;
        uint64_t v35 = *(void *)(v0 + 488);
        uint64_t v36 = *(void *)(v0 + 472);
        v34[22] = *(void *)(v0 + 496);
        v34[21] = v35;
        v34[19] = v36;
        v34[20] = v32;
        v34[23] = *(void *)v32;
        uint64_t v20 = sub_1BFE610B4;
        uint64_t v21 = 0;
        uint64_t v22 = 0;
      }
      return MEMORY[0x1F4188298](v20, v21, v22);
    }
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v3);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_1C041B86C()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void *)(v0 + 1024);
  uint64_t v2 = *(void *)(v0 + 1016);
  uint64_t v3 = *(void *)(v0 + 528);
  (*(void (**)(void, void))(*(void *)(v0 + 992) + 8))(*(void *)(v0 + 1008), *(void *)(v0 + 984));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void **)(v0 + 1144);
  *(void *)(v0 + 1216) = v4;
  *(void *)(v0 + 448) = v4;
  id v5 = v4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (swift_dynamicCast())
  {
    int v6 = *(unsigned __int8 *)(v0 + 48);
    if (v6 == 1)
    {
      uint64_t v42 = *(void *)(v0 + 32);
      uint64_t v43 = *(void *)(v0 + 16);
      unint64_t v44 = *(void *)(v0 + 24);
      uint64_t v7 = *(void *)(v0 + 1064);
      uint64_t v8 = *(void *)(v0 + 1056);
      uint64_t v9 = *(void *)(v0 + 824);
      uint64_t v10 = *(void *)(v0 + 808);
      uint64_t v11 = *(void *)(v0 + 792);
      uint64_t v49 = *(void *)(v0 + 680);
      uint64_t v51 = *(void *)(v0 + 784);
      uint64_t v53 = *(void *)(v0 + 672);
      uint64_t v55 = *(void *)(v0 + 1040);
      uint64_t v12 = *(void *)(v0 + 504);
      uint64_t v45 = *(void *)(v0 + 512);
      uint64_t v47 = *(void *)(v0 + 752);
      uint64_t v57 = *(void *)(v0 + 480);
      *(void *)(v0 + 440) = *(void *)(v0 + 40);
      uint64_t v13 = (void *)swift_task_alloc();
      uint64_t v14 = *(void *)(v12 + 80);
      *uint64_t v13 = v14;
      v13[1] = v9;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      uint64_t v16 = (void *)swift_task_alloc();
      void v16[2] = v14;
      _OWORD v16[3] = v9;
      v16[4] = KeyPath;
      uint64_t v18 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0427AC4, (uint64_t)v16, v8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v7, MEMORY[0x1E4FBC278], v17);
      swift_bridgeObjectRelease();
      swift_release();
      swift_task_dealloc();
      uint64_t v19 = sub_1BFEF4060(v18);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v47, 1, 1, v45);
      unsigned __int8 v60 = 7;
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v20(v49, 1, 1, v51);
      v20(v53, 1, 1, v51);
      *(void *)(v0 + 432) = v55;
      uint64_t v21 = (void *)swift_task_alloc();
      long long v21[2] = v14;
      v21[3] = v9;
      v21[4] = v19;
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v22 = sub_1C152023C();
      swift_bridgeObjectRelease();
      uint64_t v23 = (uint64_t (*)())swift_task_dealloc();
      uint64_t v26 = *(void *)(v57 + qword_1EB93C698);
      uint64_t v27 = (unsigned char *)(v26 + 1);
      if (__OFADD__(v26, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v58 = *(void *)(v0 + 744);
        uint64_t v59 = *(void *)(v0 + 736);
        uint64_t v50 = *(void *)(v0 + 680);
        uint64_t v52 = *(void *)(v0 + 752);
        uint64_t v28 = *(void *)(v0 + 672);
        uint64_t v54 = *(void *)(v0 + 608);
        uint64_t v56 = *(void *)(v0 + 600);
        uint64_t v29 = *(void *)(v0 + 584);
        uint64_t v48 = (unsigned char *)v22;
        uint64_t v30 = *(void *)(v0 + 480);
        uint64_t v46 = *(void *)(v30 + qword_1EB93C688);
        uint64_t v31 = *(void *)(v0 + 616);
        (*(void (**)(void))(*(void *)(*(void *)(v0 + 592) - 8) + 56))();
        uint64_t v32 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 1, 1, v32);
        uint64_t v33 = (long long *)(v30 + *(void *)(*(void *)v30 + 240));
        uint64_t v34 = *((void *)v33 + 2);
        long long v62 = *v33;
        uint64_t v63 = v34;
        uint64_t v64 = v43;
        unint64_t v65 = v44;
        uint64_t v66 = v42;
        sub_1BFE5BC98(&v62, &v64, v61);
        swift_bridgeObjectRelease();
        sub_1BFD7F858(v44);
        uint64_t v64 = v61[0];
        unint64_t v65 = v61[1];
        uint64_t v66 = v61[2];
        *(void *)&long long v62 = 0;
        WORD4(v62) = 256;
        uint64_t v35 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v52, 0, &v60, v50, v28, v48, v46, 0, 0, 0, 0, v27, 0, 0, 1, 0, 1,
                0,
                0,
                v31,
                v29,
                &v64,
                (uint64_t)&v62,
                0,
                0,
                0);
        *(void *)(v0 + 1224) = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v29, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v56);
        uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v28, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v50, (unint64_t *)&qword_1EB871180, v36);
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v52, v59);
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 1232) = v37;
        *uint64_t v37 = v0;
        v37[1] = sub_1C041AC20;
        uint64_t v38 = *(void *)(v0 + 488);
        uint64_t v39 = *(void *)(v0 + 472);
        v37[22] = *(void *)(v0 + 496);
        v37[21] = v38;
        v37[19] = v39;
        v37[20] = v35;
        v37[23] = *(void *)v35;
        uint64_t v23 = sub_1BFE610B4;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      return MEMORY[0x1F4188298](v23, v24, v25);
    }
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v6);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1C041C13C()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void *)(v0 + 1024);
  uint64_t v2 = *(void *)(v0 + 1016);
  uint64_t v3 = *(void *)(v0 + 528);
  (*(void (**)(void, void))(*(void *)(v0 + 992) + 8))(*(void *)(v0 + 1008), *(void *)(v0 + 984));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void **)(v0 + 1176);
  *(void *)(v0 + 1216) = v4;
  *(void *)(v0 + 448) = v4;
  id v5 = v4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (swift_dynamicCast())
  {
    int v6 = *(unsigned __int8 *)(v0 + 48);
    if (v6 == 1)
    {
      uint64_t v42 = *(void *)(v0 + 32);
      uint64_t v43 = *(void *)(v0 + 16);
      unint64_t v44 = *(void *)(v0 + 24);
      uint64_t v7 = *(void *)(v0 + 1064);
      uint64_t v8 = *(void *)(v0 + 1056);
      uint64_t v9 = *(void *)(v0 + 824);
      uint64_t v10 = *(void *)(v0 + 808);
      uint64_t v11 = *(void *)(v0 + 792);
      uint64_t v49 = *(void *)(v0 + 680);
      uint64_t v51 = *(void *)(v0 + 784);
      uint64_t v53 = *(void *)(v0 + 672);
      uint64_t v55 = *(void *)(v0 + 1040);
      uint64_t v12 = *(void *)(v0 + 504);
      uint64_t v45 = *(void *)(v0 + 512);
      uint64_t v47 = *(void *)(v0 + 752);
      uint64_t v57 = *(void *)(v0 + 480);
      *(void *)(v0 + 440) = *(void *)(v0 + 40);
      uint64_t v13 = (void *)swift_task_alloc();
      uint64_t v14 = *(void *)(v12 + 80);
      *uint64_t v13 = v14;
      v13[1] = v9;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      uint64_t v16 = (void *)swift_task_alloc();
      void v16[2] = v14;
      _OWORD v16[3] = v9;
      v16[4] = KeyPath;
      uint64_t v18 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0427AC4, (uint64_t)v16, v8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v7, MEMORY[0x1E4FBC278], v17);
      swift_bridgeObjectRelease();
      swift_release();
      swift_task_dealloc();
      uint64_t v19 = sub_1BFEF4060(v18);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v47, 1, 1, v45);
      unsigned __int8 v60 = 7;
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v20(v49, 1, 1, v51);
      v20(v53, 1, 1, v51);
      *(void *)(v0 + 432) = v55;
      uint64_t v21 = (void *)swift_task_alloc();
      long long v21[2] = v14;
      v21[3] = v9;
      v21[4] = v19;
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v22 = sub_1C152023C();
      swift_bridgeObjectRelease();
      uint64_t v23 = (uint64_t (*)())swift_task_dealloc();
      uint64_t v26 = *(void *)(v57 + qword_1EB93C698);
      uint64_t v27 = (unsigned char *)(v26 + 1);
      if (__OFADD__(v26, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v58 = *(void *)(v0 + 744);
        uint64_t v59 = *(void *)(v0 + 736);
        uint64_t v50 = *(void *)(v0 + 680);
        uint64_t v52 = *(void *)(v0 + 752);
        uint64_t v28 = *(void *)(v0 + 672);
        uint64_t v54 = *(void *)(v0 + 608);
        uint64_t v56 = *(void *)(v0 + 600);
        uint64_t v29 = *(void *)(v0 + 584);
        uint64_t v48 = (unsigned char *)v22;
        uint64_t v30 = *(void *)(v0 + 480);
        uint64_t v46 = *(void *)(v30 + qword_1EB93C688);
        uint64_t v31 = *(void *)(v0 + 616);
        (*(void (**)(void))(*(void *)(*(void *)(v0 + 592) - 8) + 56))();
        uint64_t v32 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 1, 1, v32);
        uint64_t v33 = (long long *)(v30 + *(void *)(*(void *)v30 + 240));
        uint64_t v34 = *((void *)v33 + 2);
        long long v62 = *v33;
        uint64_t v63 = v34;
        uint64_t v64 = v43;
        unint64_t v65 = v44;
        uint64_t v66 = v42;
        sub_1BFE5BC98(&v62, &v64, v61);
        swift_bridgeObjectRelease();
        sub_1BFD7F858(v44);
        uint64_t v64 = v61[0];
        unint64_t v65 = v61[1];
        uint64_t v66 = v61[2];
        *(void *)&long long v62 = 0;
        WORD4(v62) = 256;
        uint64_t v35 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v52, 0, &v60, v50, v28, v48, v46, 0, 0, 0, 0, v27, 0, 0, 1, 0, 1,
                0,
                0,
                v31,
                v29,
                &v64,
                (uint64_t)&v62,
                0,
                0,
                0);
        *(void *)(v0 + 1224) = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v29, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v56);
        uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v28, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v50, (unint64_t *)&qword_1EB871180, v36);
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v52, v59);
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 1232) = v37;
        *uint64_t v37 = v0;
        v37[1] = sub_1C041AC20;
        uint64_t v38 = *(void *)(v0 + 488);
        uint64_t v39 = *(void *)(v0 + 472);
        v37[22] = *(void *)(v0 + 496);
        v37[21] = v38;
        v37[19] = v39;
        v37[20] = v35;
        v37[23] = *(void *)v35;
        uint64_t v23 = sub_1BFE610B4;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      return MEMORY[0x1F4188298](v23, v24, v25);
    }
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v6);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1C041CA0C()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void *)(v0 + 1024);
  uint64_t v2 = *(void *)(v0 + 1016);
  uint64_t v3 = *(void *)(v0 + 528);
  (*(void (**)(void, void))(*(void *)(v0 + 992) + 8))(*(void *)(v0 + 1008), *(void *)(v0 + 984));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void **)(v0 + 1104);
  *(void *)(v0 + 1216) = v4;
  *(void *)(v0 + 448) = v4;
  id v5 = v4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (swift_dynamicCast())
  {
    int v6 = *(unsigned __int8 *)(v0 + 48);
    if (v6 == 1)
    {
      uint64_t v42 = *(void *)(v0 + 32);
      uint64_t v43 = *(void *)(v0 + 16);
      unint64_t v44 = *(void *)(v0 + 24);
      uint64_t v7 = *(void *)(v0 + 1064);
      uint64_t v8 = *(void *)(v0 + 1056);
      uint64_t v9 = *(void *)(v0 + 824);
      uint64_t v10 = *(void *)(v0 + 808);
      uint64_t v11 = *(void *)(v0 + 792);
      uint64_t v49 = *(void *)(v0 + 680);
      uint64_t v51 = *(void *)(v0 + 784);
      uint64_t v53 = *(void *)(v0 + 672);
      uint64_t v55 = *(void *)(v0 + 1040);
      uint64_t v12 = *(void *)(v0 + 504);
      uint64_t v45 = *(void *)(v0 + 512);
      uint64_t v47 = *(void *)(v0 + 752);
      uint64_t v57 = *(void *)(v0 + 480);
      *(void *)(v0 + 440) = *(void *)(v0 + 40);
      uint64_t v13 = (void *)swift_task_alloc();
      uint64_t v14 = *(void *)(v12 + 80);
      *uint64_t v13 = v14;
      v13[1] = v9;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      uint64_t v16 = (void *)swift_task_alloc();
      void v16[2] = v14;
      _OWORD v16[3] = v9;
      v16[4] = KeyPath;
      uint64_t v18 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0427AC4, (uint64_t)v16, v8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v7, MEMORY[0x1E4FBC278], v17);
      swift_bridgeObjectRelease();
      swift_release();
      swift_task_dealloc();
      uint64_t v19 = sub_1BFEF4060(v18);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v47, 1, 1, v45);
      unsigned __int8 v60 = 7;
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v20(v49, 1, 1, v51);
      v20(v53, 1, 1, v51);
      *(void *)(v0 + 432) = v55;
      uint64_t v21 = (void *)swift_task_alloc();
      long long v21[2] = v14;
      v21[3] = v9;
      v21[4] = v19;
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v22 = sub_1C152023C();
      swift_bridgeObjectRelease();
      uint64_t v23 = (uint64_t (*)())swift_task_dealloc();
      uint64_t v26 = *(void *)(v57 + qword_1EB93C698);
      uint64_t v27 = (unsigned char *)(v26 + 1);
      if (__OFADD__(v26, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v58 = *(void *)(v0 + 744);
        uint64_t v59 = *(void *)(v0 + 736);
        uint64_t v50 = *(void *)(v0 + 680);
        uint64_t v52 = *(void *)(v0 + 752);
        uint64_t v28 = *(void *)(v0 + 672);
        uint64_t v54 = *(void *)(v0 + 608);
        uint64_t v56 = *(void *)(v0 + 600);
        uint64_t v29 = *(void *)(v0 + 584);
        uint64_t v48 = (unsigned char *)v22;
        uint64_t v30 = *(void *)(v0 + 480);
        uint64_t v46 = *(void *)(v30 + qword_1EB93C688);
        uint64_t v31 = *(void *)(v0 + 616);
        (*(void (**)(void))(*(void *)(*(void *)(v0 + 592) - 8) + 56))();
        uint64_t v32 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 1, 1, v32);
        uint64_t v33 = (long long *)(v30 + *(void *)(*(void *)v30 + 240));
        uint64_t v34 = *((void *)v33 + 2);
        long long v62 = *v33;
        uint64_t v63 = v34;
        uint64_t v64 = v43;
        unint64_t v65 = v44;
        uint64_t v66 = v42;
        sub_1BFE5BC98(&v62, &v64, v61);
        swift_bridgeObjectRelease();
        sub_1BFD7F858(v44);
        uint64_t v64 = v61[0];
        unint64_t v65 = v61[1];
        uint64_t v66 = v61[2];
        *(void *)&long long v62 = 0;
        WORD4(v62) = 256;
        uint64_t v35 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v52, 0, &v60, v50, v28, v48, v46, 0, 0, 0, 0, v27, 0, 0, 1, 0, 1,
                0,
                0,
                v31,
                v29,
                &v64,
                (uint64_t)&v62,
                0,
                0,
                0);
        *(void *)(v0 + 1224) = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v29, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v56);
        uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v28, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v50, (unint64_t *)&qword_1EB871180, v36);
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v52, v59);
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 1232) = v37;
        *uint64_t v37 = v0;
        v37[1] = sub_1C041AC20;
        uint64_t v38 = *(void *)(v0 + 488);
        uint64_t v39 = *(void *)(v0 + 472);
        v37[22] = *(void *)(v0 + 496);
        v37[21] = v38;
        v37[19] = v39;
        v37[20] = v35;
        v37[23] = *(void *)v35;
        uint64_t v23 = sub_1BFE610B4;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      return MEMORY[0x1F4188298](v23, v24, v25);
    }
    sub_1C04272C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v6);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1C041D2DC()
{
  uint64_t v1 = *(void **)(v0 + 1216);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C041D590(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, double a5)
{
  *(void *)(v6 + 176) = v5;
  *(double *)(v6 + 168) = a5;
  *(void *)(v6 + 152) = a3;
  *(void *)(v6 + 160) = a4;
  *(void *)(v6 + 136) = a1;
  *(void *)(v6 + 144) = a2;
  uint64_t v7 = *v5;
  uint64_t v8 = *a3;
  *(void *)(v6 + 184) = *(void *)(*v5 + 88);
  *(void *)(v6 + 192) = *(void *)(v7 + 80);
  *(void *)(v6 + 200) = *(void *)(v8 + 80);
  *(void *)(v6 + 208) = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  *(void *)(v6 + 216) = swift_getAssociatedTypeWitness();
  *(void *)(v6 + 224) = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for FeedGroupEmitterOutput();
  *(void *)(v6 + 232) = v9;
  *(void *)(v6 + 240) = *(void *)(v9 - 8);
  *(void *)(v6 + 248) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FeedGroupEmitterCachedOutput();
  *(void *)(v6 + 256) = v10;
  uint64_t v11 = sub_1C151FD8C();
  *(void *)(v6 + 264) = v11;
  *(void *)(v6 + 272) = *(void *)(v11 - 8);
  *(void *)(v6 + 280) = swift_task_alloc();
  *(void *)(v6 + 288) = swift_task_alloc();
  *(void *)(v6 + 296) = swift_task_alloc();
  *(void *)(v6 + 304) = *(void *)(v10 - 8);
  *(void *)(v6 + 312) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for FeedScoredResult();
  *(void *)(v6 + 320) = v12;
  uint64_t v13 = sub_1C151FD8C();
  *(void *)(v6 + 328) = v13;
  *(void *)(v6 + 336) = *(void *)(v13 - 8);
  *(void *)(v6 + 344) = swift_task_alloc();
  uint64_t v14 = *(void *)(v12 - 8);
  *(void *)(v6 + 352) = v14;
  *(void *)(v6 + 360) = *(void *)(v14 + 64);
  *(void *)(v6 + 368) = swift_task_alloc();
  *(void *)(v6 + 376) = swift_task_alloc();
  *(void *)(v6 + 384) = swift_task_alloc();
  *(void *)(v6 + 392) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C041D958, 0, 0);
}

uint64_t sub_1C041D958()
{
  uint64_t v52 = v0;
  uint64_t v1 = (void *)v0;
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v48 = v2;
  uint64_t v49 = v0 + 48;
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v43 = v4;
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v46 = v5;
  uint64_t v47 = v3;
  uint64_t v45 = v6;
  uint64_t v42 = *(void *)(v0 + 144);
  *(CFTimeInterval *)(v0 + 400) = CACurrentMediaTime();
  uint64_t v7 = FeedGroupSlots.absoluteDescription<A>(cursor:)(v6, v5);
  uint64_t v9 = v8;
  *(void *)(v0 + 408) = v7;
  *(void *)(v0 + 416) = v8;
  uint64_t v10 = v7;
  uint64_t v44 = v7;
  uint64_t v38 = *(void **)(v4 + 40);
  *(void *)(v0 + 424) = v38;
  sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  *(void *)(v0 + 432) = v11;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1527210;
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1BFE9C558();
  *(void *)(v0 + 440) = v13;
  *(void *)(v12 + 64) = v13;
  *(void *)(v12 + 32) = v10;
  *(void *)(v12 + 40) = v9;
  *(void *)(v0 + 88) = v42;
  uint64_t v14 = swift_task_alloc();
  *(void *)(v14 + 16) = v2;
  *(void *)(v14 + 24) = v3;
  uint64_t v37 = type metadata accessor for FeedGroupEmitter();
  *(void *)(v0 + 448) = v37;
  uint64_t v41 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  uint64_t v17 = sub_1C035E7C8((void (*)(char *, char *))sub_1C04273E0, v14, v41, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
  swift_task_dealloc();
  uint64_t v18 = MEMORY[0x1C18C6710](v17, v15);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 96) = v15;
  *(void *)(v12 + 104) = v13;
  *(void *)(v12 + 72) = v18;
  *(void *)(v12 + 80) = v20;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FeedGroupEmitTaskGap();
  uint64_t v21 = *(void *)(v43 + 32);
  uint64_t v22 = *(void **)(v43 + 48);
  char v23 = *(unsigned char *)(v43 + 56);
  v50[0] = *(void *)(v43 + 24);
  v50[1] = v21;
  v50[2] = v38;
  v50[3] = v22;
  char v51 = v23;
  swift_bridgeObjectRetain();
  id v39 = v38;
  id v24 = v22;
  swift_retain();
  uint64_t v25 = sub_1C02B2A88((uint64_t)v50);
  v1[57] = v25;
  uint64_t v26 = MEMORY[0x1C18C6830](v42, v37);
  char v27 = sub_1BFE57EA4(v26);
  v1[16] = v42;
  uint64_t v28 = swift_task_alloc();
  *(void *)(v28 + 16) = v45;
  *(void *)(v28 + 24) = v25;
  *(unsigned char *)(v28 + 32) = v27 & 1;
  *(void *)(v28 + 40) = v46;
  *(void *)(v28 + 48) = v43;
  *(void *)(v28 + 56) = v44;
  *(void *)(v28 + 64) = v9;
  uint64_t v29 = type metadata accessor for FeedGroupEmitTask();
  v1[58] = v29;
  uint64_t v31 = sub_1C035E7C8((void (*)(char *, char *))sub_1C042741C, v28, v41, v29, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v30);
  v1[59] = v31;
  v1[60] = 0;
  swift_task_dealloc();
  uint64_t v32 = type metadata accessor for FeedGroupEmitTaskGroupResult();
  v1[61] = type metadata accessor for FeedGroupEmitTaskResult();
  uint64_t v33 = sub_1C151E41C();
  uint64_t v34 = (void *)swift_task_alloc();
  v1[62] = v34;
  v34[2] = v48;
  void v34[3] = v47;
  v34[4] = v31;
  v34[5] = v25;
  v34[6] = v39;
  v34[7] = v44;
  v34[8] = v9;
  uint64_t v35 = (void *)swift_task_alloc();
  v1[63] = v35;
  *uint64_t v35 = v1;
  v35[1] = sub_1C041DDC4;
  uint64_t v54 = v33;
  return MEMORY[0x1F4187F28](v49, v32, v33, 0, 0, &unk_1EA19B4D0, v34, v32);
}

uint64_t sub_1C041DDC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C041DEDC, 0, 0);
}

uint64_t sub_1C041DEDC()
{
  uint64_t v162 = v0;
  uint64_t v129 = *(void *)(v0 + 488);
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v128 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v146 = v4;
  uint64_t v138 = *(void *)(v0 + 344);
  uint64_t v139 = *(void *)(v0 + 352);
  uint64_t v143 = *(void *)(v0 + 320);
  uint64_t v140 = *(void *)(v0 + 192);
  uint64_t v154 = *(void *)(v0 + 184);
  uint64_t v134 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C152C7F0;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = v2;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C151E3EC();
  uint64_t v8 = MEMORY[0x1E4FBB550];
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v6 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v6 + 104) = v9;
  uint64_t v10 = v9;
  *(void *)(v6 + 72) = v7;
  uint64_t v11 = MEMORY[0x1C18C6830](v128, v1);
  *(void *)(v6 + 136) = v8;
  *(void *)(v6 + 144) = v10;
  *(void *)(v6 + 112) = v11;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 512) = 0;
  *(void *)(v0 + 64) = v128;
  uint64_t v12 = (void *)swift_task_alloc();
  _OWORD v12[2] = v140;
  v12[3] = v154;
  v12[4] = v5;
  v12[5] = v0 + 512;
  uint64_t v13 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0427544, (uint64_t)v12, v13, v129, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v17 = swift_task_alloc();
  *(void *)(v17 + 16) = v140;
  *(void *)(v17 + 24) = v154;
  uint64_t v18 = sub_1C151EBFC();
  swift_task_dealloc();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  BOOL v20 = v18 > 1;
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 64) = v2;
  *(void *)(v19 + 32) = v146;
  *(void *)(v19 + 40) = v3;
  uint64_t v22 = 1702195828;
  if (v18 <= 1) {
    uint64_t v22 = 0x65736C6166;
  }
  unint64_t v23 = 0xE500000000000000;
  if (v18 > 1) {
    unint64_t v23 = 0xE400000000000000;
  }
  *(void *)(v19 + 96) = v21;
  *(void *)(v19 + 104) = v2;
  uint64_t v24 = v21;
  *(void *)(v19 + 72) = v22;
  *(void *)(v19 + 80) = v23;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 72) = v16;
  uint64_t v25 = swift_task_alloc();
  *(void *)(v25 + 16) = v134;
  *(unsigned char *)(v25 + 24) = v20;
  uint64_t v26 = sub_1C151ED5C();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v29 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0427570, v25, v26, v143, MEMORY[0x1E4FBC248], v27, MEMORY[0x1E4FBC278], v28);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(void *)(v0 + 80) = v29;
  uint64_t v30 = swift_task_alloc();
  *(void *)(v30 + 16) = v140;
  *(void *)(v30 + 24) = v154;
  uint64_t v31 = sub_1C151ED5C();
  swift_getWitnessTable();
  uint64_t v32 = sub_1C151E9FC();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C152C7F0;
  *(void *)(v33 + 56) = v24;
  *(void *)(v33 + 64) = v2;
  *(void *)(v33 + 32) = v146;
  *(void *)(v33 + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v34 = MEMORY[0x1C18C6830](v32, v143);
  *(void *)(v33 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v33 + 104) = MEMORY[0x1E4FBB5C8];
  *(void *)(v33 + 72) = v34;
  uint64_t v159 = 0;
  unint64_t v160 = 0xE000000000000000;
  *(void *)(v0 + 96) = v32;
  swift_getWitnessTable();
  sub_1C1520A3C();
  uint64_t v35 = v159;
  unint64_t v36 = v160;
  *(void *)(v33 + 136) = v24;
  *(void *)(v33 + 144) = v2;
  *(void *)(v33 + 112) = v35;
  *(void *)(v33 + 120) = v36;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = v32;
  uint64_t v37 = swift_task_alloc();
  *(void *)(v37 + 16) = v140;
  *(void *)(v37 + 24) = v154;
  sub_1C151E9BC();
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v138, 1, v143) != 1)
  {
    uint64_t v44 = MEMORY[0x1E4FBB1A0];
    uint64_t v45 = *(void *)(v0 + 440);
    uint64_t v46 = *(void *)(v0 + 416);
    uint64_t v47 = *(void *)(v0 + 408);
    uint64_t v155 = v32;
    uint64_t v48 = *(void *)(v0 + 320);
    uint64_t v144 = *(void *)(v0 + 192);
    uint64_t v142 = *(void *)(v0 + 184);
    uint64_t v151 = (void (**)(void, void, uint64_t))(*(void *)(v0 + 352) + 32);
    uint64_t v147 = *(void *)(v0 + 152);
    uint64_t v149 = *v151;
    (*v151)(*(void *)(v0 + 392), *(void *)(v0 + 344), v48);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1C1527210;
    *(void *)(v49 + 56) = v44;
    *(void *)(v49 + 64) = v45;
    *(void *)(v49 + 32) = v47;
    *(void *)(v49 + 40) = v46;
    uint64_t v159 = 0;
    unint64_t v160 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1C1520A3C();
    *(void *)(v49 + 96) = v44;
    *(void *)(v49 + 104) = v45;
    *(void *)(v49 + 72) = 0;
    *(void *)(v49 + 80) = 0xE000000000000000;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v121 = sub_1BFE57CEC(v32, v144, v142);
    uint64_t v122 = v50;
    uint64_t v158 = *(void *)(v147 + qword_1EB93CBC0);
    swift_bridgeObjectRetain();
    if (!MEMORY[0x1C18C6870](v32, v48))
    {
LABEL_27:
      uint64_t v84 = *(void *)(v0 + 392);
      uint64_t v85 = *(void *)(v0 + 320);
      uint64_t v86 = *(void *)(v0 + 304);
      uint64_t v87 = *(void *)(v0 + 280);
      uint64_t v156 = *(void *)(v0 + 264);
      uint64_t v88 = *(void *)(v0 + 248);
      uint64_t v150 = *(void *)(v0 + 272);
      uint64_t v152 = *(void *)(v0 + 256);
      uint64_t v90 = *(void *)(v0 + 232);
      uint64_t v89 = *(void *)(v0 + 240);
      uint64_t v91 = *(void *)(v0 + 216);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v88, v84 + *(int *)(v85 + 44), v90);
      sub_1C1193A38(v88, v91, v87);
      LODWORD(v85) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v87, 1, v152);
      uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
      v92(v87, v156);
      if (v85 != 1)
      {
        uint64_t v93 = *(void *)(v0 + 288);
        uint64_t v94 = *(void *)(v0 + 264);
        swift_retain();
        uint64_t v95 = sub_1BFE4028C();
        uint64_t v97 = v96;
        swift_release();
        *(void *)(v0 + 32) = v95;
        *(void *)(v0 + 40) = v97;
        sub_1C151E41C();
        sub_1C151E35C();
        swift_bridgeObjectRelease();
        v92(v93, v94);
      }
      uint64_t v136 = *(void *)(v0 + 440);
      uint64_t v131 = *(void *)(v0 + 408);
      uint64_t v133 = *(void *)(v0 + 416);
      double v98 = *(double *)(v0 + 400);
      uint64_t v99 = *(void *)(v0 + 392);
      uint64_t v100 = *(void *)(v0 + 368);
      uint64_t v101 = *(void *)(v0 + 352);
      uint64_t v102 = *(void *)(v0 + 320);
      double v103 = *(double *)(v0 + 168);
      unint64_t v104 = *(void *)(v0 + 160);
      uint64_t v105 = *(void *)(v0 + 136);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v100, v99, v102);
      swift_bridgeObjectRetain();
      uint64_t v159 = v121;
      unint64_t v160 = v104;
      CFTimeInterval v161 = (CACurrentMediaTime() - v103) * 1000.0;
      sub_1C0424FC0(v100, &v159, v122, v158, v105);
      uint64_t v106 = swift_allocObject();
      *(_OWORD *)(v106 + 16) = xmmword_1C1527210;
      *(void *)(v106 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v106 + 64) = v136;
      *(void *)(v106 + 32) = v131;
      *(void *)(v106 + 40) = v133;
      CFTimeInterval v107 = CACurrentMediaTime();
      uint64_t v108 = MEMORY[0x1E4FBB460];
      *(void *)(v106 + 96) = MEMORY[0x1E4FBB3D0];
      *(void *)(v106 + 104) = v108;
      *(CFTimeInterval *)(v106 + 72) = (v107 - v98) * 1000.0;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v99, v102);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v109 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_32;
    }
    uint64_t v51 = 0;
    uint64_t v52 = *(void *)(v0 + 352);
    uint64_t v120 = *(void *)(v0 + 360);
    uint64_t v53 = *(void *)(v0 + 304);
    uint64_t v141 = *(void *)(v0 + 320);
    uint64_t v148 = (void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
    uint64_t v135 = (void (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 240) + 16);
    long long v132 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
    uint64_t v126 = (void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
    uint64_t v127 = (void (**)(uint64_t, void, uint64_t))(v53 + 32);
    uint64_t v124 = (void (**)(uint64_t, uint64_t))(v53 + 8);
    uint64_t v125 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56);
    uint64_t v145 = v52;
    uint64_t v137 = (void (**)(uint64_t, uint64_t))(v52 + 8);
    char v123 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 272) + 8);
    while (1)
    {
      char v54 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v54)
      {
        (*(void (**)(void, unint64_t, void))(v145 + 16))(*(void *)(v0 + 384), v32+ ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80))+ *(void *)(v145 + 72) * v51, *(void *)(v0 + 320));
        uint64_t v55 = v51 + 1;
        if (__OFADD__(v51, 1)) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t result = sub_1C152016C();
        if (v120 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v81 = result;
        uint64_t v82 = *(void *)(v0 + 384);
        uint64_t v83 = *(void *)(v0 + 320);
        *(void *)(v0 + 120) = v81;
        (*v148)(v82, v0 + 120, v83);
        swift_unknownObjectRelease();
        uint64_t v55 = v51 + 1;
        if (__OFADD__(v51, 1))
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
      }
      uint64_t v56 = *(void *)(v0 + 376);
      v149(v56, *(void *)(v0 + 384), *(void *)(v0 + 320));
      uint64_t v57 = v56 + *(int *)(v141 + 44);
      swift_retain();
      uint64_t v58 = sub_1BFE4028C();
      uint64_t v60 = v59;
      swift_release();
      swift_retain();
      uint64_t v61 = sub_1BFE4028C();
      uint64_t v63 = v62;
      swift_release();
      if (v58 == v61 && v60 == v63)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v65 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v65 & 1) == 0)
        {
          uint64_t v66 = *(void *)(v0 + 296);
          uint64_t v68 = *(void *)(v0 + 248);
          uint64_t v67 = *(void *)(v0 + 256);
          uint64_t v69 = *(void *)(v0 + 216);
          (*v135)(v68, v57, *(void *)(v0 + 232));
          sub_1C1193A38(v68, v69, v66);
          int v70 = (*v132)(v66, 1, v67);
          uint64_t v71 = *(void *)(v0 + 376);
          if (v70 == 1)
          {
            uint64_t v72 = *(void *)(v0 + 296);
            uint64_t v73 = *(void *)(v0 + 264);
            (*v137)(*(void *)(v0 + 376), *(void *)(v0 + 320));
            (*v123)(v72, v73);
          }
          else
          {
            uint64_t v74 = *(void *)(v0 + 312);
            uint64_t v130 = *(void *)(v0 + 320);
            uint64_t v75 = *(void *)(v0 + 288);
            uint64_t v76 = *(void *)(v0 + 256);
            (*v127)(v74, *(void *)(v0 + 296), v76);
            swift_retain();
            uint64_t v77 = sub_1BFE4028C();
            uint64_t v79 = v78;
            swift_release();
            (*v126)(v75, v74, v76);
            (*v125)(v75, 0, 1, v76);
            *(void *)(v0 + 16) = v77;
            *(void *)(v0 + 24) = v79;
            sub_1C151E41C();
            sub_1C151E44C();
            (*v124)(v74, v76);
            (*v137)(v71, v130);
          }
          goto LABEL_12;
        }
      }
      (*v137)(*(void *)(v0 + 376), *(void *)(v0 + 320));
LABEL_12:
      uint64_t v32 = v155;
      ++v51;
      if (v55 == MEMORY[0x1C18C6870](v155, *(void *)(v0 + 320))) {
        goto LABEL_27;
      }
    }
  }
  uint64_t v39 = *(void *)(v0 + 336);
  uint64_t v38 = *(void *)(v0 + 344);
  uint64_t v40 = *(void *)(v0 + 328);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  *(void *)(v0 + 104) = v32;
  uint64_t v41 = swift_getWitnessTable();
  if (sub_1C151F15C())
  {
    uint64_t v42 = *(void *)(v0 + 144);
    swift_bridgeObjectRelease();
    type metadata accessor for FeedServiceError();
    swift_getWitnessTable();
    swift_allocError();
    *(void *)uint64_t v43 = v42;
    *(void *)(v43 + 8) = 0;
    *(void *)(v43 + 16) = 0;
    *(void *)(v43 + 24) = 0;
    *(unsigned char *)(v43 + 32) = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v110 = *(void *)(v0 + 448);
    uint64_t v111 = *(void *)(v0 + 192);
    uint64_t v112 = v32;
    uint64_t v113 = *(void *)(v0 + 184);
    double v114 = *(double *)(v0 + 168);
    uint64_t v153 = *(void *)(v0 + 160);
    uint64_t v157 = sub_1BFE57CEC(v112, v111, v113);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    CFTimeInterval v115 = (CACurrentMediaTime() - v114) * 1000.0;
    *(void *)(v0 + 112) = v112;
    uint64_t v116 = swift_task_alloc();
    *(void *)(v116 + 16) = v111;
    *(void *)(v116 + 24) = v113;
    uint64_t v118 = sub_1C035E7C8((void (*)(char *, char *))sub_1C04275CC, v116, v31, v110, MEMORY[0x1E4FBC248], v41, MEMORY[0x1E4FBC278], v117);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    type metadata accessor for FeedServiceError();
    swift_getWitnessTable();
    swift_allocError();
    *(void *)uint64_t v119 = v157;
    *(void *)(v119 + 8) = v153;
    *(CFTimeInterval *)(v119 + 16) = v115;
    *(void *)(v119 + 24) = v118;
    *(unsigned char *)(v119 + 32) = 1;
  }
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v109 = *(uint64_t (**)(void))(v0 + 8);
LABEL_32:
  return v109();
}

uint64_t sub_1C041EF68(uint64_t a1, uint64_t a2)
{
  sub_1BFE72C60(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  swift_allocObject();
  uint64_t v4 = sub_1C151EC6C();
  *uint64_t v5 = a2;
  type metadata accessor for FeedGroupEmitter();
  uint64_t v6 = sub_1BFE94A38(v4);
  swift_retain();
  uint64_t v7 = sub_1C041F060(a1, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C041F060(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for FeedGroupEmitter();
  uint64_t v3 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1C035E7C8((void (*)(char *, char *))sub_1C042738C, KeyPath, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  swift_release();
  sub_1BFEF4060(v6);
  swift_bridgeObjectRelease();
  swift_getTupleTypeMetadata2();
  sub_1C151ECBC();
  sub_1C151E3BC();
  sub_1C151E41C();
  swift_getWitnessTable();
  sub_1C151E9DC();
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_1C041F22C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitter();
  return sub_1C151ECBC();
}

uint64_t sub_1C041F2C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9)
{
  *(double *)(v9 + 208) = a9;
  *(void *)(v9 + 192) = a8;
  *(void *)(v9 + 200) = v16;
  *(void *)(v9 + 176) = a6;
  *(void *)(v9 + 184) = a7;
  *(void *)(v9 + 160) = a4;
  *(void *)(v9 + 168) = a5;
  *(unsigned char *)(v9 + 344) = a3;
  *(void *)(v9 + 144) = a1;
  *(void *)(v9 + 152) = a2;
  uint64_t v10 = *a7;
  *(void *)(v9 + 216) = *v16;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0427024(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  *(void *)(v9 + 224) = swift_task_alloc();
  *(void *)(v9 + 232) = *(void *)(v10 + 88);
  *(void *)(v9 + 240) = *(void *)(v10 + 80);
  *(void *)(v9 + 248) = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C151FD8C();
  *(void *)(v9 + 256) = v12;
  *(void *)(v9 + 264) = *(void *)(v12 - 8);
  *(void *)(v9 + 272) = swift_task_alloc();
  sub_1C0427024(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v11);
  *(void *)(v9 + 280) = swift_task_alloc();
  *(void *)(v9 + 288) = swift_task_alloc();
  uint64_t v13 = sub_1C151FD8C();
  *(void *)(v9 + 296) = v13;
  *(void *)(v9 + 304) = *(void *)(v13 - 8);
  *(void *)(v9 + 312) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C041F544, 0, 0);
}

uint64_t sub_1C041F544()
{
  uint64_t v105 = v0;
  uint64_t v1 = *(void *)(v0 + 184);
  char v2 = *(unsigned char *)(v0 + 344);
  uint64_t v3 = FeedCursor.nextSlotIndex.getter();
  uint64_t v4 = *(void *)(v1 + qword_1EB93C688);
  uint64_t v5 = type metadata accessor for FeedGroupEmitter();
  sub_1C151ED5C();
  uint64_t v94 = v0;
  *(void *)(v0 + 128) = nullsub_1(v4);
  *(void *)(swift_task_alloc() + 16) = v3;
  sub_1C151E3DC();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  char v6 = sub_1C151EA2C();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0 && (v6 & 1) == 0)
  {
    uint64_t v7 = *(void *)(v0 + 200);
    sub_1C151F38C();
    sub_1C15197BC();
    sub_1C0427168(v7 + 112, v0 + 56);
    if (*(void *)(v0 + 80))
    {
      sub_1BFC773DC((long long *)(v0 + 56), v0 + 16);
      uint64_t v9 = *(void *)(v0 + 40);
      uint64_t v8 = *(void *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v9);
      if (FeedOfflineProviding.isOffline.getter(v9, v8))
      {
        FeedCursor.feedMode.getter(&v100);
        if (v100 == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v39 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if ((v39 & 1) == 0)
          {
            type metadata accessor for FeedServiceError();
            swift_getWitnessTable();
            swift_allocError();
            *(void *)uint64_t v69 = 2;
            *(void *)(v69 + 8) = 0;
            *(void *)(v69 + 16) = 0;
            *(void *)(v69 + 24) = 0;
            *(unsigned char *)(v69 + 32) = 6;
            swift_willThrow();
            __swift_destroy_boxed_opaque_existential_1(v0 + 16);
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
LABEL_33:
            return v67();
          }
        }
      }
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    }
    else
    {
      sub_1BFE54B20(v0 + 56, &qword_1EB872820, &qword_1EB872818, (uint64_t)&protocol descriptor for FeedOfflineProviding);
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1C151E30C();
    uint64_t v95 = v40;
    uint64_t v41 = swift_bridgeObjectRetain();
    if (MEMORY[0x1C18C6870](v41, v5))
    {
      uint64_t v42 = 0;
      uint64_t v86 = (_OWORD *)(v0 + 96);
      uint64_t v92 = (uint64_t (**)())(v0 + 136);
      uint64_t v43 = *(void *)(v0 + 168);
      uint64_t v44 = *(void *)(v0 + 160) + 32;
      uint64_t v89 = MEMORY[0x1E4FBC840] + 8;
      while (1)
      {
        char v45 = sub_1C151ECDC();
        sub_1C151EC7C();
        if (v45)
        {
          uint64_t v46 = *(uint64_t (**)())(v44 + 8 * v42);
          uint64_t v21 = (uint64_t (*)())swift_retain();
          uint64_t v47 = v42 + 1;
          if (__OFADD__(v42, 1)) {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t v21 = (uint64_t (*)())sub_1C152016C();
          uint64_t v46 = v21;
          uint64_t v47 = v42 + 1;
          if (__OFADD__(v42, 1))
          {
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return MEMORY[0x1F4188298](v21, v22, v23);
          }
        }
        if (sub_1C0E16630())
        {
          *uint64_t v92 = v46;
          sub_1C151ED1C();
        }
        else
        {
          uint64_t v48 = sub_1BFE4028C();
          uint64_t v50 = v49;
          swift_bridgeObjectRetain();
          unint64_t v51 = sub_1BFEF2D8C(v48, v50);
          LOBYTE(v48) = v52;
          swift_bridgeObjectRelease();
          if (v48)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v100 = v43;
            uint64_t v54 = (uint64_t)v86;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C106AA18();
              uint64_t v43 = v100;
            }
            swift_bridgeObjectRelease();
            sub_1BFF993A8((_OWORD *)(*(void *)(v43 + 56) + 32 * v51), v86);
            sub_1C091D10C(v51, v43);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v54 = (uint64_t)v86;
            *uint64_t v86 = 0u;
            v86[1] = 0u;
          }
          swift_bridgeObjectRelease();
          swift_release();
          sub_1BFE5F150(v54, (unint64_t *)&qword_1EB87A940, v89, MEMORY[0x1E4FBB718]);
          uint64_t v0 = v94;
        }
        ++v42;
        if (v47 == MEMORY[0x1C18C6870](*(void *)(v0 + 160), v5))
        {
          uint64_t v75 = v95;
          goto LABEL_32;
        }
      }
    }
    uint64_t v43 = *(void *)(v0 + 168);
    uint64_t v75 = v40;
LABEL_32:
    uint64_t v55 = *(void *)(v0 + 312);
    uint64_t v73 = v55;
    uint64_t v81 = *(void *)(v0 + 304);
    uint64_t v56 = *(void *)(v0 + 288);
    uint64_t v57 = *(void *)(v0 + 280);
    uint64_t v84 = *(void *)(v0 + 296);
    uint64_t v87 = *(void *)(v0 + 272);
    uint64_t v58 = *(void *)(v0 + 248);
    uint64_t v76 = *(void *)(v0 + 264);
    uint64_t v77 = *(void *)(v0 + 256);
    uint64_t v59 = *(void *)(v0 + 240);
    uint64_t v90 = *(void *)(v0 + 224);
    uint64_t v74 = *(void *)(v0 + 176);
    uint64_t v71 = *(void *)(v0 + 152);
    uint64_t v72 = *(void *)(v0 + 184);
    uint64_t v79 = *(char ***)(v0 + 144);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v55, 1, 1, v59);
    unsigned __int8 v96 = 7;
    uint64_t v60 = sub_1C151631C();
    uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56);
    v61(v56, 1, 1, v60);
    v61(v57, 1, 1, v60);
    int v70 = (unsigned char *)sub_1C151ECBC();
    swift_getTupleTypeMetadata2();
    sub_1C151ECBC();
    uint64_t v62 = sub_1C151E3BC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v87, 1, 1, v58);
    uint64_t v63 = type metadata accessor for FeedContext();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v90, 1, 1, v63);
    sub_1C04204C0(v71, v72, &v97);
    uint64_t v64 = v97;
    uint64_t v100 = v97;
    uint64_t v101 = v98;
    uint64_t v102 = v99;
    uint64_t v103 = 0;
    __int16 v104 = 256;
    char v65 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v73, 0, &v96, v56, v57, v70, v62, v74, v75, 0, 0, 0, 1, 0, 1, 0, 1,
            v43,
            0,
            v87,
            v90,
            &v100,
            (uint64_t)&v103,
            0,
            0,
            0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0427B8C(v64);
    sub_1C04276B8(v90, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v87, v77);
    uint64_t v66 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C04276B8(v57, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    sub_1C04276B8(v56, (unint64_t *)&qword_1EB871180, v66);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v73, v84);
    *uint64_t v79 = v65;
    type metadata accessor for FeedServiceFetchResult.Internal();
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(void))(v94 + 8);
    goto LABEL_33;
  }
  uint64_t v10 = *(void *)(v0 + 312);
  uint64_t v12 = *(void *)(v0 + 280);
  uint64_t v11 = *(void *)(v0 + 288);
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 184);
  char v15 = *(unsigned char *)(v0 + 344);
  sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1527210;
  uint64_t v17 = MEMORY[0x1E4FBB390];
  uint64_t v18 = MEMORY[0x1E4FBB3C8];
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB390];
  *(void *)(v16 + 64) = v18;
  *(unsigned char *)(v16 + 32) = v6 & 1;
  *(void *)(v16 + 96) = v17;
  *(void *)(v16 + 104) = v18;
  *(unsigned char *)(v16 + 72) = v15;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  LOBYTE(v95) = 7;
  uint64_t v19 = sub_1C151631C();
  BOOL v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v11, 1, 1, v19);
  uint64_t v21 = (uint64_t (*)())((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v12, 1, 1, v19);
  uint64_t v24 = *(void *)(v14 + qword_1EB93C698);
  uint64_t v25 = (unsigned char *)(v24 + 1);
  if (__OFADD__(v24, 1)) {
    goto LABEL_38;
  }
  uint64_t v91 = *(void *)(v0 + 304);
  uint64_t v93 = *(void *)(v0 + 296);
  uint64_t v26 = *(void *)(v0 + 280);
  uint64_t v82 = *(void *)(v0 + 288);
  uint64_t v83 = *(void *)(v0 + 312);
  uint64_t v27 = *(void *)(v0 + 272);
  uint64_t v85 = *(void *)(v0 + 264);
  uint64_t v88 = *(void *)(v0 + 256);
  uint64_t v28 = *(void *)(v0 + 224);
  uint64_t v29 = *(void *)(v0 + 184);
  uint64_t v78 = *(void *)(v0 + 176);
  uint64_t v30 = *(void *)(v0 + 168);
  uint64_t v80 = *(unsigned char **)(v0 + 160);
  uint64_t v31 = *(void *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 248) - 8) + 56))(v27, 1, 1);
  uint64_t v32 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v28, 1, 1, v32);
  sub_1C04204C0(v31, v29, &v97);
  uint64_t v33 = v97;
  uint64_t v100 = v97;
  uint64_t v101 = v98;
  uint64_t v102 = v99;
  uint64_t v103 = 0;
  __int16 v104 = 256;
  uint64_t v34 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v83, 0, (unsigned __int8 *)&v95, v82, v26, v80, 0, v78, 0, 0, 0, v25, 0, 0, 1, 0, 1,
          v30,
          0,
          v27,
          v28,
          &v100,
          (uint64_t)&v103,
          0,
          0,
          0);
  *(void *)(v0 + 320) = v34;
  sub_1C0427B8C(v33);
  sub_1C04276B8(v28, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v27, v88);
  uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C04276B8(v26, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C04276B8(v82, (unint64_t *)&qword_1EB871180, v35);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v83, v93);
  unint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v36;
  *unint64_t v36 = v0;
  v36[1] = sub_1C0420264;
  uint64_t v37 = *(void *)(v0 + 208);
  uint64_t v38 = *(void *)(v0 + 144);
  v36[22] = *(void *)(v0 + 200);
  v36[21] = v37;
  v36[19] = v38;
  v36[20] = v34;
  v36[23] = *(void *)v34;
  uint64_t v21 = sub_1BFE610B4;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  return MEMORY[0x1F4188298](v21, v22, v23);
}

uint64_t sub_1C0420264()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1C0420418;
  }
  else {
    char v2 = sub_1C0420378;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0420378()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0420418()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C04204C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v25 = *(void *)(*(void *)a2 + 80);
  uint64_t v6 = type metadata accessor for FeedChosenEmitterResult();
  uint64_t v7 = sub_1C151FD8C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v26[-1] - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v26[-1] - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    char v15 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 240));
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v6);
    BOOL v20 = (long long *)(a2 + *(void *)(*(void *)a2 + 240));
    uint64_t v21 = *((void *)v20 + 2);
    long long v27 = *v20;
    uint64_t v28 = v21;
    uint64_t v22 = (uint64_t *)&v14[*(int *)(v6 + 36)];
    uint64_t v23 = v22[1];
    uint64_t v24 = v22[2];
    v26[0] = *v22;
    v26[1] = v23;
    void v26[2] = v24;
    sub_1BFE5BC98(&v27, v26, v29);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v6);
    uint64_t v16 = v29[0];
    uint64_t v17 = v29[1];
    uint64_t v18 = v29[2];
  }
  *a3 = v16;
  a3[1] = v17;
  a3[2] = v18;
  return result;
}

uint64_t sub_1C042076C(uint64_t a1, uint64_t *a2, int a3, uint64_t a4)
{
  LODWORD(v49) = a3;
  uint64_t v50 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = type metadata accessor for FeedScoredResult();
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = *(int *)(a4 + 40);
  uint64_t v48 = v4;
  *(void *)&v54[0] = *(void *)(v4 + v12);
  uint64_t v51 = v7;
  uint64_t v52 = v8;
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for FeedGroupEmitter();
  uint64_t v14 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_1C035E7C8((void (*)(char *, char *))sub_1C042738C, KeyPath, v14, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1BFEF4060(v17);
  swift_bridgeObjectRelease();
  uint64_t v55 = v18;
  if (v49)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v11, v48, v9);
    uint64_t v19 = &v11[*(int *)(v9 + 44)];
    uint64_t v20 = type metadata accessor for FeedGroupEmitTaskResult();
    uint64_t v21 = *(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8);
    swift_retain();
    v21(v19, v20);
    uint64_t v22 = sub_1BFE4028C();
    uint64_t v24 = v23;
    swift_release();
    sub_1BFEFFC1C((uint64_t *)v54, v22, v24);
    swift_bridgeObjectRelease();
  }
  *(void *)&v54[0] = *(void *)(v50 + qword_1EB93C678);
  MEMORY[0x1F4188790](*(void *)&v54[0]);
  *(&v47 - 4) = v7;
  *(&v47 - 3) = v8;
  *(&v47 - 2) = (uint64_t)&v55;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v25 = sub_1C152023C();
  uint64_t v26 = v55;
  uint64_t v27 = *(void *)(v55 + 56);
  uint64_t v49 = v25;
  uint64_t v50 = v55 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(v55 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  int64_t v31 = (unint64_t)(v28 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v33 = 0;
  uint64_t v34 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    if (v30)
    {
      unint64_t v35 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      unint64_t v36 = v35 | (v33 << 6);
      goto LABEL_24;
    }
    int64_t v37 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v37 >= v31) {
      goto LABEL_28;
    }
    unint64_t v38 = *(void *)(v50 + 8 * v37);
    ++v33;
    if (!v38)
    {
      int64_t v33 = v37 + 1;
      if (v37 + 1 >= v31) {
        goto LABEL_28;
      }
      unint64_t v38 = *(void *)(v50 + 8 * v33);
      if (!v38)
      {
        int64_t v33 = v37 + 2;
        if (v37 + 2 >= v31) {
          goto LABEL_28;
        }
        unint64_t v38 = *(void *)(v50 + 8 * v33);
        if (!v38) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v30 = (v38 - 1) & v38;
    unint64_t v36 = __clz(__rbit64(v38)) + (v33 << 6);
LABEL_24:
    uint64_t v40 = (uint64_t *)(*(void *)(v26 + 48) + 16 * v36);
    uint64_t v41 = *v40;
    uint64_t v42 = v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v43 = sub_1BFEF2D8C(v41, v42);
    LOBYTE(v41) = v44;
    swift_bridgeObjectRelease();
    if (v41)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = *a2;
      uint64_t v53 = *a2;
      *a2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C106AA18();
        uint64_t v46 = v53;
      }
      swift_bridgeObjectRelease();
      sub_1BFF993A8((_OWORD *)(*(void *)(v46 + 56) + 32 * v43), v54);
      sub_1C091D10C(v43, v46);
      *a2 = v46;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v54, 0, sizeof(v54));
    }
    sub_1BFE5F150((uint64_t)v54, (unint64_t *)&qword_1EB87A940, v34, MEMORY[0x1E4FBB718]);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v39 = v37 + 3;
  if (v39 >= v31)
  {
LABEL_28:
    swift_release();
    swift_bridgeObjectRelease();
    return v49;
  }
  unint64_t v38 = *(void *)(v50 + 8 * v39);
  if (v38)
  {
    int64_t v33 = v39;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v33 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v33 >= v31) {
      goto LABEL_28;
    }
    unint64_t v38 = *(void *)(v50 + 8 * v33);
    ++v39;
    if (v38) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C0420C7C@<X0>(uint64_t a1@<X0>, int a2@<W1>, double *a3@<X8>)
{
  int v40 = a2;
  uint64_t v49 = a3;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FeedGroupEmitTaskResult();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v36 - v6;
  swift_getAssociatedTypeWitness();
  uint64_t v48 = AssociatedConformanceWitness;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for FeedGroupEmitterOutput();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v47 = a1;
  v17((char *)&v36 - v15, a1, v10);
  v17(v14, (uint64_t)v16, v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v22 = v43;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v9, v14, AssociatedTypeWitness);
      uint64_t v23 = v42;
      goto LABEL_11;
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 4u:
    case 5u:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      uint64_t v18 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v46, v47, v45);
      *(double *)&unint64_t v19 = -200000.0;
      goto LABEL_14;
    case 6u:
      uint64_t v23 = v42;
      type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v24 = (uint64_t)&v14[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
        unint64_t v38 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
        int64_t v39 = (char *)(MEMORY[0x1E4FBC840] + 8);
        sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        int64_t v37 = &v14[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        uint64_t v22 = v43;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v9, v14, AssociatedTypeWitness);
        sub_1BFE5F150((uint64_t)v37, (unint64_t *)&qword_1EB87A940, (uint64_t)v39, v38);
LABEL_10:
        __swift_destroy_boxed_opaque_existential_1(v24);
LABEL_11:
        sub_1C042136C((uint64_t)v9, v40 & 1, v41);
        double v27 = v26;
        uint64_t v28 = *(void *)(v23 + 8);
        double v29 = (*(double (**)(uint64_t, uint64_t))(v28 + 48))(AssociatedTypeWitness, v28);
        double v30 = (*(double (**)(uint64_t, uint64_t))(v28 + 64))(AssociatedTypeWitness, v28);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v9, AssociatedTypeWitness);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        uint64_t v18 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v46, v47, v45);
        int64_t v31 = v49;
        double v32 = v27;
        double v33 = v29;
        double v34 = v30;
        return sub_1C0421674(v18, v31, v32, v33, v34);
      }
      uint64_t v22 = v43;
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v9, v14, AssociatedTypeWitness);
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v24);
LABEL_13:
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      uint64_t v18 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v46, v47, v45);
      *(double *)&unint64_t v19 = -300000.0;
LABEL_14:
      double v32 = *(double *)&v19;
      double v34 = -1.79769313e308;
      double v33 = 1.0;
      int64_t v31 = v49;
      return sub_1C0421674(v18, v31, v32, v33, v34);
    default:
      uint64_t v20 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v21 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
      sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      int64_t v39 = &v14[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v22 = v43;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v9, v14, AssociatedTypeWitness);
      sub_1BFE5F150((uint64_t)v39, (unint64_t *)&qword_1EB87A940, v20, v21);
      uint64_t v23 = v42;
      goto LABEL_11;
  }
}

void sub_1C042136C(uint64_t a1, char a2, void *a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = &v16[-v8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(&v16[-v8], a1, AssociatedTypeWitness);
  if (a2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    double v11 = (*(double (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 64))(AssociatedTypeWitness);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
    if (v11 <= 0.0) {
      return;
    }
  }
  uint64_t v12 = *(void *)(AssociatedConformanceWitness + 8);
  (*(void (**)(uint64_t, uint64_t))(v12 + 56))(AssociatedTypeWitness, v12);
  (*(double (**)(uint64_t, uint64_t))(v12 + 48))(AssociatedTypeWitness, v12);
  uint64_t v13 = a3 + 8;
  uint64_t v15 = a3[11];
  uint64_t v14 = a3[12];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 96))(&v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  FeedPersonalizationServiceType.score<A>(group:context:)(a1, (uint64_t)&v17, v15, AssociatedTypeWitness, v14, v12);
}

uint64_t sub_1C0421674@<X0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  *a2 = a3;
  a2[1] = a4;
  a2[2] = a5;
  uint64_t v6 = (char *)a2 + *(int *)(type metadata accessor for FeedScoredResult() + 44);
  uint64_t v7 = type metadata accessor for FeedGroupEmitTaskResult();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);
  return v8(v6, a1, v7);
}

uint64_t sub_1C0421710@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v36 = a8;
  uint64_t v37 = a7;
  uint64_t v33 = a5;
  int v32 = a4;
  uint64_t v31 = a3;
  unint64_t v38 = a9;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v30 = type metadata accessor for FeedGroupEmitterCachedOutput();
  uint64_t v12 = sub_1C151FD8C();
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = sub_1BFE4028C();
  uint64_t v17 = v31;
  uint64_t v33 = sub_1C1250B60(v16, v18, v31, v32, v33);
  swift_bridgeObjectRelease();
  type metadata accessor for FeedGroupEmitTask();
  uint64_t v19 = *(void *)(a6 + 32);
  uint64_t v21 = *(void **)(a6 + 40);
  uint64_t v20 = *(void **)(a6 + 48);
  char v22 = *(unsigned char *)(a6 + 56);
  v40[0] = *(void *)(a6 + 24);
  v40[1] = v19;
  void v40[2] = (uint64_t)v21;
  uint64_t v40[3] = (uint64_t)v20;
  char v41 = v22;
  uint64_t v23 = *(void *)(a2 + qword_1EB93CBC0);
  swift_bridgeObjectRetain();
  id v24 = v21;
  id v25 = v20;
  swift_retain();
  v39[0] = sub_1BFE4028C();
  v39[1] = v26;
  MEMORY[0x1C18C5F70](v39, v23, MEMORY[0x1E4FBB1A0], v30, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v27 = v36;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C016E068(v40, v15, v33, (uint64_t)v14, v17, v37, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
  swift_release();
  uint64_t result = swift_release();
  *unint64_t v38 = v28;
  return result;
}

uint64_t sub_1C0421A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a8;
  v8[23] = v16;
  v8[20] = a6;
  v8[21] = a7;
  v8[18] = a4;
  v8[19] = a5;
  v8[16] = a2;
  v8[17] = a3;
  v8[15] = a1;
  v8[24] = *(void *)(*(void *)a4 + 80);
  v8[25] = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8[26] = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C151FD8C();
  v8[27] = v9;
  v8[28] = *(void *)(v9 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FeedGroupEmitTaskResult();
  v8[32] = v10;
  uint64_t v11 = sub_1C151FD8C();
  void v8[33] = v11;
  v8[34] = *(void *)(v11 - 8);
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  v8[38] = *(void *)(v10 - 8);
  v8[39] = swift_task_alloc();
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  v8[42] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for FeedGroupEmitTaskGroupResult();
  v8[43] = v12;
  uint64_t v13 = sub_1C151FD8C();
  v8[44] = v13;
  v8[45] = *(void *)(v13 - 8);
  v8[46] = swift_task_alloc();
  v8[47] = *(void *)(v12 - 8);
  v8[48] = swift_task_alloc();
  v8[49] = swift_task_alloc();
  sub_1C0427024(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  v8[50] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0421E14, 0, 0);
}

uint64_t sub_1C0421E14()
{
  uint64_t v33 = v0;
  uint64_t v1 = MEMORY[0x1E4FBC870];
  *(void *)(v0 + 96) = MEMORY[0x1E4FBC870];
  *(void *)(v0 + 112) = v1;
  uint64_t v2 = type metadata accessor for FeedGroupEmitTask();
  *(void *)(v0 + 408) = v2;
  uint64_t v3 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C18C6870](v3, v2))
  {
    uint64_t v4 = 0;
    uint64_t v28 = *(void *)(v0 + 136) + 32;
    do
    {
      char v10 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v10)
      {
        uint64_t v11 = *(void *)(v28 + 8 * v4);
        swift_retain();
        uint64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v11 = sub_1C152016C();
        uint64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_11:
          __break(1u);
          break;
        }
      }
      uint64_t v13 = sub_1BFE4028C();
      sub_1BFEFFC1C(&v32, v13, v14);
      swift_bridgeObjectRelease();
      sub_1BFDCBA40();
      if (v31 == 1 && (*(unsigned char *)(v11 + 65) & 1) == 0)
      {
        uint64_t v15 = sub_1BFE4028C();
        sub_1BFEFFC1C(&v32, v15, v16);
        swift_bridgeObjectRelease();
      }
      uint64_t v5 = *(void *)(v0 + 400);
      uint64_t v6 = *(void *)(v0 + 136);
      uint64_t v7 = sub_1C151EE9C();
      long long v29 = *(_OWORD *)(v0 + 176);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = 0;
      *(void *)(v8 + 24) = 0;
      *(_OWORD *)(v8 + 32) = v29;
      *(void *)(v8 + 48) = v11;
      uint64_t v9 = sub_1C151EE4C();
      sub_1C0423B0C(v5, (uint64_t)&unk_1EA19B4E0, v8, v9);
      sub_1C04276B8(v5, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
      ++v4;
    }
    while (v12 != MEMORY[0x1C18C6870](v6, v2));
  }
  uint64_t v17 = *(void *)(v0 + 400);
  uint64_t v18 = *(void *)(v0 + 144);
  long long v30 = *(_OWORD *)(v0 + 176);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1C151EE9C();
  *(void *)(v0 + 416) = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  *(void *)(v0 + 424) = v21;
  *(void *)(v0 + 432) = (v20 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v21(v17, 1, 1, v19);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(_OWORD *)(v22 + 32) = v30;
  *(void *)(v22 + 48) = v18;
  uint64_t v23 = sub_1C151EE4C();
  *(void *)(v0 + 440) = v23;
  swift_retain();
  sub_1C0423B0C(v17, (uint64_t)&unk_1EA19B4F0, v22, v23);
  sub_1C04276B8(v17, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  *(void *)(v0 + 80) = sub_1C151E2FC();
  *(unsigned char *)(v0 + 456) = 0;
  id v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v24;
  *id v24 = v0;
  v24[1] = sub_1C0422220;
  uint64_t v25 = *(void *)(v0 + 440);
  uint64_t v26 = *(void *)(v0 + 368);
  return MEMORY[0x1F4187C48](v26, 0, 0, v25);
}

uint64_t sub_1C0422220()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C042231C, 0, 0);
}

uint64_t sub_1C042231C()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 344);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 352);
    uint64_t v5 = *(void *)(v0 + 360);
    uint64_t v6 = *(void **)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
LABEL_3:
    *uint64_t v6 = *(void *)(v0 + 80);
    sub_1C0424128(*(uint64_t **)(v0 + 128));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v9 = *(void *)(v0 + 392);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v9, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v10, v9, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v31 = **(void ***)(v0 + 384);
      uint64_t v32 = *(void *)(v0 + 160);
      uint64_t v33 = *(void *)(v0 + 168);
      id v184 = v31;
      if (v31)
      {
        id v34 = v31;
        sub_1C151F36C();
        sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1C1527210;
        uint64_t v36 = MEMORY[0x1E4FBB1A0];
        *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v37 = sub_1BFE9C558();
        *(void *)(v35 + 64) = v37;
        *(void *)(v35 + 32) = v32;
        *(void *)(v35 + 40) = v33;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0xE000000000000000;
        *(void *)(v0 + 88) = v31;
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        swift_bridgeObjectRetain();
        sub_1C152036C();
        uint64_t v38 = *(void *)(v0 + 16);
        uint64_t v39 = *(void *)(v0 + 24);
        *(void *)(v35 + 96) = v36;
        *(void *)(v35 + 104) = v37;
        *(void *)(v35 + 72) = v38;
        *(void *)(v35 + 80) = v39;
        sub_1C15197BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C151F36C();
        sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v114 = swift_allocObject();
        *(_OWORD *)(v114 + 16) = xmmword_1C1529AE0;
        *(void *)(v114 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v114 + 64) = sub_1BFE9C558();
        *(void *)(v114 + 32) = v32;
        *(void *)(v114 + 40) = v33;
        swift_bridgeObjectRetain();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
      }
      uint64_t v115 = *(void *)(v0 + 408);
      uint64_t v116 = swift_bridgeObjectRetain();
      if (!MEMORY[0x1C18C6870](v116, v115))
      {
        swift_bridgeObjectRelease();
        goto LABEL_87;
      }
      uint64_t v117 = 0;
      unint64_t v190 = 0;
      char v118 = 1;
      while (2)
      {
        char v119 = sub_1C151ECDC();
        sub_1C151EC7C();
        if (v119)
        {
          uint64_t v120 = *(void *)(*(void *)(v0 + 136) + 8 * v117 + 32);
          swift_retain();
          uint64_t v121 = v117 + 1;
          if (__OFADD__(v117, 1)) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v120 = sub_1C152016C();
          uint64_t v121 = v117 + 1;
          if (__OFADD__(v117, 1))
          {
LABEL_83:
            __break(1u);
LABEL_84:
            swift_bridgeObjectRelease();
            if ((v118 & 1) == 0)
            {
              uint64_t v136 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 424);
              uint64_t v137 = *(void *)(v0 + 416);
              uint64_t v138 = *(void *)(v0 + 400);
              uint64_t v182 = *(void *)(v0 + 392);
              uint64_t v139 = *(void *)(v0 + 376);
              uint64_t v176 = *(void *)(v0 + 440);
              uint64_t v179 = *(void *)(v0 + 344);
              uint64_t v141 = *(void *)(v0 + 160);
              uint64_t v140 = *(void *)(v0 + 168);
              long long v170 = *(_OWORD *)(v0 + 176);
              sub_1C151F34C();
              sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
              uint64_t v142 = swift_allocObject();
              *(_OWORD *)(v142 + 16) = xmmword_1C1527210;
              *(void *)(v142 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v143 = sub_1BFE9C558();
              *(void *)(v142 + 32) = v141;
              *(void *)(v142 + 40) = v140;
              uint64_t v144 = MEMORY[0x1E4FBC598];
              *(void *)(v142 + 96) = MEMORY[0x1E4FBC538];
              *(void *)(v142 + 104) = v144;
              *(void *)(v142 + 64) = v143;
              *(void *)(v142 + 72) = v190;
              swift_bridgeObjectRetain();
              sub_1C15197BC();
              swift_bridgeObjectRelease();
              sub_1C151EE7C();
              v136(v138, 0, 1, v137);
              uint64_t v145 = swift_allocObject();
              *(void *)(v145 + 16) = 0;
              *(void *)(v145 + 24) = 0;
              *(_OWORD *)(v145 + 32) = v170;
              *(void *)(v145 + 48) = v190;
              sub_1C0423B0C(v138, (uint64_t)&unk_1EA19B500, v145, v176);

              sub_1C04276B8(v138, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
              (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v182, v179);
              char v81 = *(unsigned char *)(v0 + 456);
              goto LABEL_92;
            }
LABEL_87:
            (*(void (**)(void, void))(*(void *)(v0 + 376) + 8))(*(void *)(v0 + 392), *(void *)(v0 + 344));

            char v81 = *(unsigned char *)(v0 + 456);
            goto LABEL_92;
          }
        }
        uint64_t v122 = *(void *)(v0 + 304);
        uint64_t v123 = *(void *)(v0 + 280);
        uint64_t v124 = *(void *)(v0 + 256);
        uint64_t v125 = sub_1BFE4028C();
        uint64_t v127 = v126;
        uint64_t v128 = *(void *)(v0 + 80);
        *(void *)(v0 + 64) = v125;
        *(void *)(v0 + 72) = v127;
        MEMORY[0x1C18C5F70](v0 + 64, v128, MEMORY[0x1E4FBB1A0], v124, MEMORY[0x1E4FBB1B0]);
        swift_bridgeObjectRelease();
        int v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v123, 1, v124);
        uint64_t v130 = *(void *)(v0 + 272);
        uint64_t v131 = *(void *)(v0 + 280);
        uint64_t v132 = *(void *)(v0 + 264);
        if (v129 == 1)
        {
          (*(void (**)(void, void))(v130 + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
          double v133 = *(double *)(v120 + 24);
          char v134 = *(unsigned char *)(v120 + 32);
          swift_release();
          if ((v134 & 1) == 0)
          {
            unint64_t v135 = v190;
            if (v118) {
              unint64_t v135 = 0;
            }
            if ((~*(void *)&v133 & 0x7FF0000000000000) == 0) {
              goto LABEL_97;
            }
            if (v133 <= -1.0) {
              goto LABEL_98;
            }
            if (v133 >= 1.84467441e19) {
              goto LABEL_99;
            }
            char v118 = 0;
            if (v135 <= (unint64_t)v133) {
              unint64_t v135 = (unint64_t)v133;
            }
            unint64_t v190 = v135;
          }
        }
        else
        {
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v131, v132);
        }
        ++v117;
        if (v121 == MEMORY[0x1C18C6870](*(void *)(v0 + 136), *(void *)(v0 + 408))) {
          goto LABEL_84;
        }
        continue;
      }
    case 2u:
      uint64_t v40 = *(void *)(v0 + 160);
      uint64_t v41 = *(void *)(v0 + 168);
      sub_1C151F36C();
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C1527210;
      *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v177 = sub_1BFE9C558();
      *(void *)(v42 + 64) = v177;
      *(void *)(v42 + 32) = v40;
      *(void *)(v42 + 40) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1C151E3EC();
      swift_bridgeObjectRelease();
      uint64_t v44 = MEMORY[0x1E4FBB5C8];
      *(void *)(v42 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v42 + 104) = v44;
      *(void *)(v42 + 72) = v43;
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      uint64_t v45 = nullsub_1();
      uint64_t v185 = (void *)(v45 + 64);
      uint64_t v46 = -1;
      uint64_t v47 = -1 << *(unsigned char *)(v45 + 32);
      if (-v47 < 64) {
        uint64_t v46 = ~(-1 << -(char)v47);
      }
      unint64_t v48 = v46 & *(void *)(v45 + 64);
      int64_t v187 = (unint64_t)(63 - v47) >> 6;
      swift_bridgeObjectRetain();
      int64_t v49 = 0;
      if (v48) {
        goto LABEL_18;
      }
LABEL_19:
      int64_t v52 = v49 + 1;
      if (__OFADD__(v49, 1))
      {
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
      }
      else
      {
        if (v52 >= v187) {
          goto LABEL_38;
        }
        unint64_t v53 = v185[v52];
        ++v49;
        if (v53) {
          goto LABEL_32;
        }
        int64_t v49 = v52 + 1;
        if (v52 + 1 >= v187) {
          goto LABEL_38;
        }
        unint64_t v53 = v185[v49];
        if (v53) {
          goto LABEL_32;
        }
        int64_t v49 = v52 + 2;
        if (v52 + 2 >= v187) {
          goto LABEL_38;
        }
        unint64_t v53 = v185[v49];
        if (v53) {
          goto LABEL_32;
        }
        int64_t v54 = v52 + 3;
        if (v54 >= v187)
        {
LABEL_38:
          uint64_t v75 = *(void *)(v0 + 392);
          uint64_t v76 = *(void *)(v0 + 376);
          uint64_t v77 = *(void *)(v0 + 344);
          uint64_t v79 = *(void *)(v0 + 160);
          uint64_t v78 = *(void *)(v0 + 168);
          swift_release();
          sub_1C151F36C();
          uint64_t v80 = swift_allocObject();
          *(_OWORD *)(v80 + 16) = xmmword_1C1529AE0;
          *(void *)(v80 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v80 + 64) = v177;
          *(void *)(v80 + 32) = v79;
          *(void *)(v80 + 40) = v78;
          swift_bridgeObjectRetain();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
          char v81 = 1;
          goto LABEL_92;
        }
        unint64_t v53 = v185[v54];
        if (v53)
        {
          int64_t v49 = v54;
LABEL_32:
          unint64_t v48 = (v53 - 1) & v53;
          for (unint64_t i = __clz(__rbit64(v53)) + (v49 << 6); ; unint64_t i = v50 | (v49 << 6))
          {
            uint64_t v55 = *(void *)(v0 + 312);
            uint64_t v56 = *(void *)(v0 + 320);
            uint64_t v57 = *(void *)(v0 + 304);
            uint64_t v58 = *(void *)(v0 + 256);
            uint64_t v59 = *(void *)(v0 + 232);
            uint64_t v60 = *(void *)(v0 + 208);
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v57 + 16))(v56, *(void *)(v45 + 56) + *(void *)(v57 + 72) * i, v58);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v55, v56, v58);
            sub_1C145866C(v59);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v59, 1, v60) != 1)break; {
            uint64_t v62 = *(void *)(v0 + 304);
            }
            uint64_t v61 = *(void *)(v0 + 312);
            uint64_t v63 = *(void *)(v0 + 256);
            (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 232), *(void *)(v0 + 216));
            (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
            if (!v48) {
              goto LABEL_19;
            }
LABEL_18:
            unint64_t v50 = __clz(__rbit64(v48));
            v48 &= v48 - 1;
          }
          uint64_t v70 = *(void *)(v0 + 376);
          id v186 = *(id *)(v0 + 344);
          uint64_t v188 = *(void *)(v0 + 392);
          uint64_t v71 = *(void *)(v0 + 304);
          uint64_t v171 = *(void *)(v0 + 256);
          uint64_t v174 = *(void *)(v0 + 312);
          uint64_t v73 = *(void *)(v0 + 160);
          uint64_t v72 = *(void *)(v0 + 168);
          uint64_t v6 = *(void **)(v0 + 120);
          (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 232), *(void *)(v0 + 216));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C151F36C();
          uint64_t v74 = swift_allocObject();
          *(_OWORD *)(v74 + 16) = xmmword_1C1529AE0;
          *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v74 + 64) = v177;
          *(void *)(v74 + 32) = v73;
          *(void *)(v74 + 40) = v72;
          swift_bridgeObjectRetain();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v174, v171);
          swift_release();
          goto LABEL_89;
        }
        while (1)
        {
          int64_t v49 = v54 + 1;
          if (__OFADD__(v54, 1)) {
            break;
          }
          if (v49 >= v187) {
            goto LABEL_38;
          }
          unint64_t v53 = v185[v49];
          ++v54;
          if (v53) {
            goto LABEL_32;
          }
        }
      }
      __break(1u);
      goto LABEL_102;
    case 3u:
      uint64_t v64 = *(void *)(v0 + 392);
      uint64_t v65 = *(void *)(v0 + 376);
      uint64_t v66 = *(void *)(v0 + 344);
      uint64_t v68 = *(void *)(v0 + 160);
      uint64_t v67 = *(void *)(v0 + 168);
      uint64_t v6 = *(void **)(v0 + 120);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151F36C();
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1C1529AE0;
      *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v69 + 64) = sub_1BFE9C558();
      *(void *)(v69 + 32) = v68;
      *(void *)(v69 + 40) = v67;
      swift_bridgeObjectRetain();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
      goto LABEL_3;
    default:
      int v180 = *(unsigned __int8 *)(v0 + 456);
      uint64_t v11 = *(void *)(v0 + 336);
      uint64_t v12 = *(void *)(v0 + 296);
      uint64_t v13 = *(void *)(v0 + 304);
      uint64_t v14 = *(void *)(v0 + 256);
      (*(void (**)(uint64_t, void, uint64_t))(v13 + 32))(v11, *(void *)(v0 + 384), v14);
      swift_retain();
      uint64_t v15 = sub_1BFE4028C();
      uint64_t v17 = v16;
      swift_release();
      uint64_t v169 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
      v169(v12, v11, v14);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v14);
      *(void *)(v0 + 32) = v15;
      *(void *)(v0 + 40) = v17;
      uint64_t v18 = MEMORY[0x1E4FBB1A0];
      sub_1C151E41C();
      sub_1C151E44C();
      uint64_t v19 = v0 + 48;
      if (v180 != 1) {
        goto LABEL_10;
      }
      uint64_t v20 = *(void *)(v0 + 248);
      uint64_t v21 = *(void *)(v0 + 208);
      sub_1C145866C(v20);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21) != 1)
      {
        uint64_t v70 = *(void *)(v0 + 376);
        id v186 = *(id *)(v0 + 344);
        uint64_t v188 = *(void *)(v0 + 392);
        uint64_t v173 = *(void *)(v0 + 336);
        uint64_t v146 = *(void *)(v0 + 304);
        uint64_t v148 = *(void *)(v0 + 160);
        uint64_t v147 = *(void *)(v0 + 168);
        uint64_t v183 = *(void *)(v0 + 256);
        uint64_t v6 = *(void **)(v0 + 120);
        (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 216));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v149 = swift_allocObject();
        *(_OWORD *)(v149 + 16) = xmmword_1C152C7F0;
        *(void *)(v149 + 56) = v18;
        unint64_t v150 = sub_1BFE9C558();
        *(void *)(v149 + 64) = v150;
        *(void *)(v149 + 32) = v148;
        *(void *)(v149 + 40) = v147;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v151 = sub_1BFCA4558();
        uint64_t v153 = v152;
        swift_release();
        *(void *)(v149 + 96) = v18;
        *(void *)(v149 + 104) = v150;
        *(void *)(v149 + 72) = v151;
        *(void *)(v149 + 80) = v153;
        swift_retain();
        uint64_t v154 = sub_1BFE4028C();
        uint64_t v156 = v155;
        swift_release();
        *(void *)(v149 + 136) = v18;
        *(void *)(v149 + 144) = v150;
        *(void *)(v149 + 112) = v154;
        *(void *)(v149 + 120) = v156;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v173, v183);
LABEL_89:
        (*(void (**)(uint64_t, id))(v70 + 8))(v188, v186);
        goto LABEL_3;
      }
      (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 216));
LABEL_10:
      *(void *)(v0 + 104) = nullsub_1();
      sub_1C151E3DC();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v22 = sub_1C151F05C();
      uint64_t v23 = *(void *)(v0 + 112);
      swift_bridgeObjectRetain();
      char v24 = sub_1BFF20AE8(v22, v23);
      swift_bridgeObjectRelease();
      if (v24)
      {
        uint64_t v25 = *(void *)(v0 + 392);
        uint64_t v26 = *(void *)(v0 + 376);
        uint64_t v28 = *(void *)(v0 + 336);
        uint64_t v27 = *(void *)(v0 + 344);
        uint64_t v29 = *(void *)(v0 + 304);
        uint64_t v30 = *(void *)(v0 + 256);
        uint64_t v6 = *(void **)(v0 + 120);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_12:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      uint64_t v82 = *(void *)(v0 + 96);
      swift_bridgeObjectRetain();
      char v83 = sub_1BFF20AE8(v22, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v83 & 1) == 0) {
        goto LABEL_91;
      }
      uint64_t v172 = v82 + 56;
      uint64_t v84 = -1;
      uint64_t v85 = -1 << *(unsigned char *)(v82 + 32);
      if (-v85 < 64) {
        uint64_t v84 = ~(-1 << -(char)v85);
      }
      unint64_t v86 = v84 & *(void *)(v82 + 56);
      int64_t v175 = (unint64_t)(63 - v85) >> 6;
      swift_bridgeObjectRetain();
      int64_t v87 = 0;
      uint64_t v88 = MEMORY[0x1E4FBB1A0];
      uint64_t v168 = v82;
      break;
  }
  while (1)
  {
    if (v86)
    {
      unint64_t v93 = __clz(__rbit64(v86));
      v86 &= v86 - 1;
      int64_t v189 = v87;
      unint64_t v94 = v93 | (v87 << 6);
      goto LABEL_61;
    }
    int64_t v95 = v87 + 1;
    if (__OFADD__(v87, 1)) {
      goto LABEL_100;
    }
    if (v95 >= v175) {
      break;
    }
    unint64_t v96 = *(void *)(v172 + 8 * v95);
    int64_t v97 = v87 + 1;
    if (!v96)
    {
      int64_t v97 = v87 + 2;
      if (v87 + 2 >= v175) {
        break;
      }
      unint64_t v96 = *(void *)(v172 + 8 * v97);
      if (!v96)
      {
        int64_t v97 = v87 + 3;
        if (v87 + 3 >= v175) {
          break;
        }
        unint64_t v96 = *(void *)(v172 + 8 * v97);
        if (!v96)
        {
          uint64_t v98 = v87 + 4;
          if (v87 + 4 >= v175) {
            break;
          }
          unint64_t v96 = *(void *)(v172 + 8 * v98);
          if (!v96)
          {
            while (1)
            {
              int64_t v97 = v98 + 1;
              if (__OFADD__(v98, 1)) {
                break;
              }
              if (v97 >= v175) {
                goto LABEL_90;
              }
              unint64_t v96 = *(void *)(v172 + 8 * v97);
              ++v98;
              if (v96) {
                goto LABEL_60;
              }
            }
LABEL_102:
            __break(1u);
            JUMPOUT(0x1C04238C0);
          }
          int64_t v97 = v87 + 4;
        }
      }
    }
LABEL_60:
    unint64_t v86 = (v96 - 1) & v96;
    int64_t v189 = v97;
    unint64_t v94 = __clz(__rbit64(v96)) + (v97 << 6);
LABEL_61:
    uint64_t v99 = *(void *)(v0 + 304);
    uint64_t v100 = *(void *)(v0 + 288);
    uint64_t v101 = *(void *)(v0 + 256);
    uint64_t v102 = (void *)(*(void *)(v82 + 48) + 16 * v94);
    uint64_t v103 = v102[1];
    uint64_t v104 = *(void *)(v0 + 80);
    *(void *)(v0 + 48) = *v102;
    *(void *)(v0 + 56) = v103;
    swift_bridgeObjectRetain();
    MEMORY[0x1C18C5F70](v19, v104, v88, v101, MEMORY[0x1E4FBB1B0]);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v100, 1, v101))
    {
      uint64_t v89 = *(void *)(v0 + 240);
      uint64_t v90 = *(void *)(v0 + 224);
      uint64_t v91 = *(void *)(v0 + 208);
      (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 264));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v89, 1, 1, v91);
      uint64_t v92 = *(void (**)(void, void))(v90 + 8);
    }
    else
    {
      uint64_t v105 = *(void *)(v0 + 328);
      uint64_t v106 = *(void *)(v0 + 304);
      uint64_t v107 = *(void *)(v0 + 288);
      uint64_t v109 = *(void *)(v0 + 264);
      uint64_t v108 = *(void *)(v0 + 272);
      uint64_t v110 = *(void *)(v0 + 256);
      uint64_t v111 = *(void *)(v0 + 240);
      uint64_t v178 = *(void *)(v0 + 208);
      uint64_t v181 = *(void *)(v0 + 224);
      v169(v105, v107, v110);
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v109);
      sub_1C145866C(v111);
      uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      v112(v105, v110);
      int v113 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v178 - 8) + 48))(v111, 1);
      uint64_t v92 = *(void (**)(void, void))(v181 + 8);
      if (v113 != 1)
      {
        uint64_t v163 = *(void *)(v0 + 392);
        uint64_t v164 = *(void *)(v0 + 376);
        uint64_t v166 = *(void *)(v0 + 336);
        uint64_t v165 = *(void *)(v0 + 344);
        uint64_t v167 = *(void *)(v0 + 256);
        uint64_t v6 = *(void **)(v0 + 120);
        v92(*(void *)(v0 + 240), *(void *)(v0 + 216));
        swift_release();
        v112(v166, v167);
        (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v163, v165);
        goto LABEL_12;
      }
      uint64_t v19 = v0 + 48;
      uint64_t v82 = v168;
    }
    v92(*(void *)(v0 + 240), *(void *)(v0 + 216));
    int64_t v87 = v189;
  }
LABEL_90:
  swift_release();
LABEL_91:
  uint64_t v157 = *(void *)(v0 + 392);
  uint64_t v158 = *(void *)(v0 + 376);
  uint64_t v159 = *(void *)(v0 + 344);
  (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 256));
  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v159);
  char v81 = *(unsigned char *)(v0 + 456);
LABEL_92:
  *(unsigned char *)(v0 + 456) = v81;
  unint64_t v160 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v160;
  *unint64_t v160 = v0;
  v160[1] = sub_1C0422220;
  uint64_t v161 = *(void *)(v0 + 440);
  uint64_t v162 = *(void *)(v0 + 368);
  return MEMORY[0x1F4187C48](v162, 0, 0, v161);
}

uint64_t sub_1C04238D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a1;
  v4[3] = *a4;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1C0423998;
  return sub_1C0167898(a1);
}

uint64_t sub_1C0423998()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0423A94, 0, 0);
}

uint64_t sub_1C0423A94()
{
  type metadata accessor for FeedGroupEmitTaskGroupResult();
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0423B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = MEMORY[0x1E4FBCFE8];
  uint64_t v11 = MEMORY[0x1E4FBB718];
  sub_1C0427024(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v24 - v13;
  sub_1BFDA65F8(a1, (uint64_t)v24 - v13, (uint64_t)&qword_1EB882700, v10, v11, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C0427024);
  uint64_t v15 = sub_1C151EE9C();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1C04276B8((uint64_t)v14, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v17 = sub_1C151EDBC();
      uint64_t v19 = v18;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v17 = 0;
  uint64_t v19 = 0;
LABEL_6:
  uint64_t v20 = *v5;
  uint64_t v21 = (void *)swift_allocObject();
  long long v21[2] = *(void *)(a4 + 16);
  v21[3] = a2;
  v21[4] = a3;
  uint64_t v22 = (void *)(v19 | v17);
  if (v19 | v17)
  {
    v25[0] = 0;
    v25[1] = 0;
    uint64_t v22 = v25;
    v25[2] = v17;
    v25[3] = v19;
  }
  v24[1] = 1;
  void v24[2] = v22;
  v24[3] = v20;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C0423D7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[8] = a1;
  v4[9] = *a4;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[10] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C0423E38;
  return sub_1C02B2F84();
}

uint64_t sub_1C0423E38()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0423FC8;
  }
  else {
    uint64_t v2 = sub_1C0423F4C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0423F4C()
{
  **(void **)(v0 + 64) = 0;
  type metadata accessor for FeedGroupEmitTaskGroupResult();
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0423FC8()
{
  uint64_t v1 = *(void **)(v0 + 88);
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  type metadata accessor for FeedServiceError();
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    unint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    int v7 = *(unsigned __int8 *)(v0 + 48);
    if (v7 == 6 && v3 == 12 && !(v5 | v4 | v6))
    {

      type metadata accessor for FeedGroupEmitTaskGroupResult();
      swift_storeEnumTagMultiPayload();

      goto LABEL_8;
    }
    sub_1C04272C8(v3, v4, v5, v6, v7);
  }
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v9 = *(void **)(v0 + 64);

  *uint64_t v9 = v8;
  type metadata accessor for FeedGroupEmitTaskGroupResult();
  swift_storeEnumTagMultiPayload();
LABEL_8:
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1C0424128(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for FeedGroupEmitTaskGroupResult();
  return MEMORY[0x1F4187C68](v1, v2, v3, v4);
}

uint64_t sub_1C04241CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  _OWORD v6[2] = a1;
  v6[3] = a4;
  uint64_t v7 = sub_1C152032C();
  void v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0424290, 0, 0);
}

uint64_t sub_1C0424290()
{
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = 1000000000000000000 * v1;
  uint64_t v3 = (v1 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64;
  sub_1C152031C();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1EA19B508 + dword_1EA19B508);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C0424370;
  return v6(v2, v3, 0, 0, 1);
}

uint64_t sub_1C0424370()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[8];
  uint64_t v4 = v2[7];
  uint64_t v5 = v2[6];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1C042B6C0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1C0424508;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C0424508()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitTaskGroupResult();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

int *sub_1C04245E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v34 = type metadata accessor for FeedGroupEmitterOutput();
  MEMORY[0x1F4188790](v34);
  uint64_t v6 = (uint64_t *)((char *)&v32 - v5);
  uint64_t v7 = (int *)type metadata accessor for FeedGroupEmitTaskResult();
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = *a1;
  uint64_t v37 = sub_1BFE4028C();
  uint64_t v38 = v17;
  MEMORY[0x1C18C5F70](&v37, v36, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v12, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    *uint64_t v6 = 0xD00000000000002CLL;
    v6[1] = 0x80000001C160FAA0;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v37 = 0;
    LOBYTE(v38) = 1;
    uint64_t v39 = 0;
    char v40 = 1;
    uint64_t v41 = 0;
    __int16 v42 = 1;
    sub_1C1458478((uint64_t)v6, v18, MEMORY[0x1E4FBC860], &v37, v35, 0.0);
    return (int *)swift_retain();
  }
  else
  {
    uint64_t v36 = v16;
    uint64_t v20 = *(void (**)(char *, char *, int *))(v13 + 32);
    v20(v15, v12, v7);
    if (sub_1C11937B0(v34))
    {
      if (*v33)
      {
        *uint64_t v6 = 0xD00000000000004FLL;
        v6[1] = 0x80000001C160FAD0;
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = *(void *)(v36 + 16);
        uint64_t v22 = *(void *)&v15[v7[10]];
        uint64_t v23 = &v15[v7[11]];
        uint64_t v24 = *(void *)v23;
        char v25 = v23[8];
        uint64_t v26 = *((void *)v23 + 2);
        char v27 = v23[24];
        uint64_t v28 = *((void *)v23 + 4);
        char v29 = v23[40];
        LOBYTE(v23) = v23[41];
        uint64_t v37 = v24;
        LOBYTE(v38) = v25;
        uint64_t v39 = v26;
        char v40 = v27;
        uint64_t v41 = v28;
        LOBYTE(v42) = v29;
        HIBYTE(v42) = (_BYTE)v23;
        double v30 = *(double *)&v15[v7[12]];
        char v31 = *(void (**)(char *, int *))(v13 + 8);
        swift_retain();
        swift_bridgeObjectRetain();
        v31(v15, v7);
        return sub_1C1458478((uint64_t)v6, v21, v22, &v37, v35, v30);
      }
      else
      {
        *uint64_t v33 = 1;
        return (int *)((uint64_t (*)(uint64_t, char *, int *))v20)(v35, v15, v7);
      }
    }
    else
    {
      return (int *)((uint64_t (*)(uint64_t, char *, int *))v20)(v35, v15, v7);
    }
  }
}

uint64_t sub_1C0424AAC(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for FeedGroupEmitterOutput();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v17 - v5, a1, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return 1;
    case 3u:
    case 4u:
    case 5u:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return 0;
    case 6u:
      uint64_t v11 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v12 = (uint64_t)&v6[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
        uint64_t v14 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v15 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
        sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        sub_1BFE5F150((uint64_t)&v6[*(int *)(TupleTypeMetadata2 + 48)], (unint64_t *)&qword_1EB87A940, v14, v15);
        (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v6, AssociatedTypeWitness);
LABEL_10:
        __swift_destroy_boxed_opaque_existential_1(v12);
        return 1;
      }
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
      __swift_destroy_boxed_opaque_existential_1(v12);
      return 0;
    default:
      uint64_t v8 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v9 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
      sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      uint64_t v10 = swift_getTupleTypeMetadata2();
      sub_1BFE5F150((uint64_t)&v6[*(int *)(v10 + 48)], (unint64_t *)&qword_1EB87A940, v8, v9);
      (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v6, AssociatedTypeWitness);
      return 1;
  }
}

uint64_t sub_1C0424EF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for FeedScoredResult() + 44);
  *a2 = *(void *)(v4 + *(int *)(type metadata accessor for FeedGroupEmitTaskResult() + 36));
  return swift_retain();
}

int *sub_1C0424FC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v11 = a2[2];
  uint64_t v12 = type metadata accessor for FeedScoredResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a5, a1, v12);
  uint64_t result = (int *)type metadata accessor for FeedChosenEmitterResult();
  uint64_t v14 = (void *)(a5 + result[9]);
  *uint64_t v14 = v9;
  v14[1] = v10;
  void v14[2] = v11;
  *(void *)(a5 + result[10]) = a3;
  *(void *)(a5 + result[11]) = a4;
  return result;
}

uint64_t FeedService.deinit()
{
  swift_release();
  unint64_t v1 = *(void **)(v0 + 40);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  sub_1BFE54B20(v0 + 112, &qword_1EB872820, &qword_1EB872818, (uint64_t)&protocol descriptor for FeedOfflineProviding);
  return v0;
}

uint64_t FeedService.__deallocating_deinit()
{
  FeedService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0425158(uint64_t a1)
{
  return FeedService.fetchReplaceGroup(from:)(a1);
}

uint64_t FeedServiceType.fetchAllGroups(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151932C();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  uint64_t v6 = (void *)sub_1C1518E7C();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1C151ED5C();
  uint64_t v7 = sub_1C1518FEC();
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1C0425314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C151ECBC();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = sub_1C0425484((uint64_t)&v10, v6, (uint64_t)sub_1BFE31C5C, v7, a3, a4);
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_1C0425484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = *v13;
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  uint64_t v28 = v7;
  uint64_t v29 = v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult();
  sub_1C151932C();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v7, a5);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a5;
  *((void *)v18 + 3) = a6;
  uint64_t v19 = v24;
  uint64_t v20 = v25;
  *((void *)v18 + 4) = a2;
  *((void *)v18 + 5) = v19;
  *((void *)v18 + 6) = v20;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v21 = (void *)sub_1C1518E7C();
  uint64_t v22 = sub_1C1518FEC();
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1C0425698(unint64_t *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v5 = (char *)&v14 - v4;
  unint64_t v6 = *a1;
  switch(v6 >> 61)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v7 = *(void *)((v6 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C151ED5C();
      sub_1C151917C();
      uint64_t v15 = v7;
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 4uLL:
      sub_1C151ED5C();
      sub_1C151917C();
      uint64_t v15 = sub_1C151ECBC();
LABEL_4:
      uint64_t v8 = sub_1C151907C();
      break;
    default:
      type metadata accessor for FeedCursorContainer();
      uint64_t v9 = swift_projectBox();
      uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      v10(v5, v9, AssociatedTypeWitness);
      sub_1C151ED5C();
      sub_1C151917C();
      sub_1BFE18054(AssociatedTypeWitness, AssociatedTypeWitness);
      swift_allocObject();
      uint64_t v11 = sub_1C151EC6C();
      v10(v12, (uint64_t)v5, AssociatedTypeWitness);
      uint64_t v15 = sub_1BFE94A38(v11);
      uint64_t v8 = sub_1C151907C();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
      break;
  }
  return v8;
}

uint64_t FeedServiceType.fetchAll(from:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C151ECBC();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = sub_1C0425484((uint64_t)&v9, v5, (uint64_t)sub_1BFE31C5C, v6, a2, a3);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_1C0425AF8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v55 = a4;
  uint64_t v53 = a5;
  int64_t v54 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)v49 - v16;
  unint64_t v18 = *a1;
  switch(v18 >> 61)
  {
    case 1uLL:
      uint64_t v50 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v51 = a7;
      uint64_t v52 = v50 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v30 = sub_1C151ECAC();
      char v31 = v54;
      uint64_t v32 = v55;
      if (v54())
      {
        swift_bridgeObjectRelease();
        type metadata accessor for FeedServiceFetchResult();
        sub_1C151917C();
        uint64_t v57 = v18;
        swift_retain();
        uint64_t v29 = sub_1C151907C();
      }
      else
      {
        swift_checkMetadataState();
        static FeedLocation.container(_:)(v50, &v57);
        uint64_t v56 = v57;
        uint64_t v29 = sub_1C0425484(&v56, v30, v31, v32, a6, v51);
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_release();
      break;
    case 2uLL:
      uint64_t v52 = a2;
      uint64_t v33 = v15;
      type metadata accessor for FeedCursorContainer();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v35 = swift_projectBox();
      uint64_t v36 = *(void *)(v35 + *(int *)(TupleTypeMetadata2 + 48));
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
      v37(v13, v35, AssociatedTypeWitness);
      type metadata accessor for FeedServiceFetchResult();
      uint64_t v55 = sub_1C151917C();
      uint64_t v38 = swift_allocObject();
      sub_1BFE18054(AssociatedTypeWitness, AssociatedTypeWitness);
      swift_allocObject();
      swift_retain();
      uint64_t v39 = sub_1C151EC6C();
      v37(v40, (uint64_t)v13, AssociatedTypeWitness);
      sub_1BFE94A38(v39);
      uint64_t v41 = sub_1C151ECAC();
      swift_bridgeObjectRelease();
      *(void *)(v38 + 16) = v41;
      *(void *)(v38 + 24) = v36;
      uint64_t v57 = v38 | 0x6000000000000000;
      uint64_t v29 = sub_1C151907C();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, AssociatedTypeWitness);
      break;
    case 3uLL:
      uint64_t v42 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      type metadata accessor for FeedServiceFetchResult();
      sub_1C151917C();
      uint64_t v43 = swift_allocObject();
      swift_retain();
      *(void *)(v43 + 16) = sub_1C151ECAC();
      *(void *)(v43 + 24) = v42;
      uint64_t v57 = v43 | 0x6000000000000000;
      goto LABEL_16;
    case 4uLL:
      uint64_t v44 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v57 = a2;
      sub_1C151ED5C();
      swift_retain();
      swift_getWitnessTable();
      if (sub_1C151F15C())
      {
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = v44;
        uint64_t v46 = v45 | 0x8000000000000000;
      }
      else
      {
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = a2;
        *(void *)(v47 + 24) = v44;
        uint64_t v46 = v47 | 0x6000000000000000;
        swift_bridgeObjectRetain();
      }
      type metadata accessor for FeedServiceFetchResult();
      sub_1C151917C();
      uint64_t v57 = v46;
LABEL_16:
      uint64_t v29 = sub_1C151907C();
      break;
    default:
      uint64_t v51 = a7;
      uint64_t v19 = v15;
      type metadata accessor for FeedCursorContainer();
      uint64_t v20 = swift_getTupleTypeMetadata2();
      uint64_t v21 = swift_projectBox();
      uint64_t v22 = *(void *)(v21 + *(int *)(v20 + 48));
      uint64_t v52 = a2;
      uint64_t v50 = v19;
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
      v23(v17, v21, AssociatedTypeWitness);
      sub_1BFE18054(AssociatedTypeWitness, AssociatedTypeWitness);
      swift_allocObject();
      v49[0] = v22;
      v49[1] = v22 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v24 = sub_1C151EC6C();
      v23(v25, (uint64_t)v17, AssociatedTypeWitness);
      sub_1BFE94A38(v24);
      uint64_t v26 = sub_1C151ECAC();
      swift_bridgeObjectRelease();
      uint64_t v27 = v54;
      uint64_t v28 = v55;
      if (((uint64_t (*)(uint64_t))v54)(v26))
      {
        swift_bridgeObjectRelease();
        type metadata accessor for FeedServiceFetchResult();
        sub_1C151917C();
        uint64_t v57 = v18;
        swift_retain();
        uint64_t v29 = sub_1C151907C();
      }
      else
      {
        static FeedLocation.container(_:)(v49[0], &v57);
        uint64_t v56 = v57;
        uint64_t v29 = sub_1C0425484(&v56, v26, v27, v28, a6, v51);
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v17, AssociatedTypeWitness);
      break;
  }
  return v29;
}

uint64_t sub_1C0426230()
{
  if (sub_1C151F15C()) {
    return swift_bridgeObjectRelease();
  }
  sub_1C151E41C();
  return sub_1C151E44C();
}

BOOL sub_1C0426388(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BFE4028C();
  char v5 = sub_1BFF896B4(v3, v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v5 & 1) == 0;
}

uint64_t sub_1C04263F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_1C152030C();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x1F4188298](sub_1C04264F4, 0, 0);
}

uint64_t sub_1C04264F4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_1C152032C();
  uint64_t v5 = sub_1C0427934(&qword_1EA199070, MEMORY[0x1E4FBD1A8]);
  sub_1C1520D0C();
  sub_1C0427934(&qword_1EA19B510, MEMORY[0x1E4FBD178]);
  sub_1C152033C();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C0426694;
  uint64_t v8 = v0[11];
  return MEMORY[0x1F4188178](v8, v0 + 2, v4, v5);
}

uint64_t sub_1C0426694()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C0426850, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1C0426850()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C04268BC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C0426998;
  return v6(a1);
}

uint64_t sub_1C0426998()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_1C0426A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = swift_bridgeObjectRetain() + 48;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v7 = *(void *)(v4 - 8);
    swift_bridgeObjectRetain();
    sub_1BFE60260(v7);
    sub_1C03FB238(a2, v14);
    swift_bridgeObjectRelease();
    sub_1BFD7F858(v7);
    uint64_t v8 = v14[0];
    if (v14[0])
    {
      uint64_t v9 = v14[1];
      uint64_t v10 = v14[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_1BFE608A0(0, v5[2] + 1, 1, v5);
      }
      unint64_t v12 = v5[2];
      unint64_t v11 = v5[3];
      if (v12 >= v11 >> 1) {
        uint64_t v5 = sub_1BFE608A0((void *)(v11 > 1), v12 + 1, 1, v5);
      }
      void v5[2] = v12 + 1;
      uint64_t v6 = &v5[3 * v12];
      v6[4] = v8;
      v6[5] = v9;
      void v6[6] = v10;
    }
    v4 += 24;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C0426BEC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0426C30()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FeedReplaceLocation() - 8) + 80);
  uint64_t v2 = (v1 + 40) & ~v1;
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v2, AssociatedTypeWitness);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0426DFC(uint64_t a1)
{
  uint64_t v3 = v2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for FeedReplaceLocation() - 8);
  uint64_t v6 = *(void **)(v1 + 32);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1C005E7F4;
  return sub_1C040DD98(a1, v6, v7);
}

uint64_t sub_1C0426F40()
{
  return sub_1C0425314(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_1C0426F60()
{
  return swift_deallocObject();
}

uint64_t sub_1C0426F70(unint64_t *a1)
{
  return sub_1C0425698(a1);
}

uint64_t sub_1C0426F8C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t dispatch thunk of FeedServiceType.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedServiceType.fetchNextGroup(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeedServiceType.fetchReplaceGroup(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t method lookup function for FeedService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedService);
}

uint64_t dispatch thunk of FeedService.__allocating_init(feed:cursorFactory:personalizationService:offlineProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FeedService.__allocating_init(feed:cursorFactory:personalizationService:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_1C0427024(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0427088()
{
  return swift_deallocObject();
}

uint64_t sub_1C042709C()
{
  return swift_deallocObject();
}

uint64_t sub_1C04270AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C04270E4@<X0>(void *a1@<X8>)
{
  return sub_1C0410F00(a1);
}

uint64_t sub_1C0427104@<X0>(void *a1@<X8>)
{
  return sub_1C0410DA4(a1);
}

uint64_t sub_1C0427128@<X0>(uint64_t a1@<X8>)
{
  return sub_1C041106C(*(void *)(v1 + 32), a1);
}

uint64_t sub_1C0427148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0411120(a1, a2);
}

uint64_t sub_1C0427168(uint64_t a1, uint64_t a2)
{
  sub_1BFE57E3C(0, &qword_1EB872820, &qword_1EB872818, (uint64_t)&protocol descriptor for FeedOfflineProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C04271F8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C0427230()
{
  return sub_1C0CE94E8((void *)(v0 + 16));
}

uint64_t sub_1C0427238(uint64_t a1, uint64_t a2)
{
  sub_1BFE57E3C(0, qword_1EB8938D8, &qword_1EB8938D0, (uint64_t)&protocol descriptor for ModernFeedGroupEmitterType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C04272C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_1BFD7F858(a2);
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0427374()
{
  return 16;
}

__n128 sub_1C0427380(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C042738C()
{
  return sub_1C040205C();
}

uint64_t sub_1C04273A4()
{
  return sub_1C0426230();
}

BOOL sub_1C04273C4()
{
  return sub_1C0427B20();
}

uint64_t sub_1C04273E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BFCA4558();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C042741C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0421710(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2);
}

uint64_t sub_1C0427454(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *unint64_t v12 = v3;
  v12[1] = sub_1C005E7F4;
  return sub_1C0421A2C(a1, a2, v7, v8, v9, v10, v11, v6);
}

int *sub_1C0427544@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C04245E8(a1, *(void *)(v2 + 32), *(unsigned char **)(v2 + 40), a2);
}

uint64_t sub_1C0427568(uint64_t a1)
{
  return sub_1C0424AAC(a1);
}

uint64_t sub_1C0427570@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return sub_1C0420C7C(a1, *(unsigned __int8 *)(v2 + 24), a2);
}

BOOL sub_1C04275A4(double *a1, double *a2)
{
  return *a2 < *a1;
}

BOOL sub_1C04275B8(double *a1)
{
  return a1[2] <= *a1;
}

uint64_t sub_1C04275CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0424EF4(a1, a2);
}

uint64_t sub_1C04275F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C005E7F4;
  return sub_1C04238D0(a1, v4, v5, v6);
}

uint64_t sub_1C04276B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0427024(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t objectdestroy_66Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C042776C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1BFC542F4;
  return sub_1C0423D7C(a1, v4, v5, v6);
}

uint64_t sub_1C0427834()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C042786C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C005E7F4;
  return sub_1C04241CC(a1, v6, v7, v8, v4, v5);
}

uint64_t sub_1C0427934(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C042797C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C04279B4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C005E7F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA19B518 + dword_1EA19B518);
  return v6(a1, v4);
}

uint64_t keypath_getTm_0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BFE4028C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0427AAC()
{
  return 16;
}

__n128 sub_1C0427AB8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C0427AC4()
{
  return swift_release();
}

BOOL sub_1C0427B20()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1BFE4028C();
  LOBYTE(v1) = sub_1BFF896B4(v2, v3, v1);
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

BOOL sub_1C0427B78(void *a1)
{
  return *a1 > *(void *)(v1 + 16);
}

uint64_t sub_1C0427B8C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1C0427BD8(uint64_t a1)
{
  return sub_1C0426388(a1, *(uint64_t **)(v1 + 32));
}

uint64_t sub_1C0427BFC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[5];
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 32))(&v4, v1);
}

uint64_t sub_1C0427C50()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C0427D1C(unint64_t *a1)
{
  return sub_1C0425AF8(a1, *(void *)(v1 + 32), *(uint64_t (**)(void))(v1 + 40), *(void *)(v1 + 48), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_40Tm()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1C0427DBC(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ~v7;
  unint64_t v9 = *(void *)(v5 + 64);
  unint64_t v10 = v9 + 7;
  if (v9 <= ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v9 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v9 <= 0x10) {
    unint64_t v11 = 16;
  }
  else {
    unint64_t v11 = v9;
  }
  if ((v11 & 0xFFFFFFFFFFFFFFF8) + 48 <= v11) {
    unint64_t v12 = v11;
  }
  else {
    unint64_t v12 = (v11 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if ((v6 & 0x1000F8) != 0
    || (unint64_t v13 = (((v6 & 0xF8) + 31) & ~v7)
            + (((((((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8),
        ((((v13 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18))
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v14 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v15;
    uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v16 = *v17;
    uint64_t v18 = ((unint64_t)v16 + 15) & v8;
    uint64_t v19 = ((unint64_t)v17 + 15) & v8;
    unsigned int v20 = *(unsigned __int8 *)(v19 + v12);
    unsigned int v21 = v20 - 7;
    if (v20 >= 7)
    {
      if (v12 <= 3) {
        uint64_t v22 = v12;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *(unsigned __int8 *)v19;
          goto LABEL_21;
        case 2:
          int v23 = *(unsigned __int16 *)v19;
          goto LABEL_21;
        case 3:
          int v23 = *(unsigned __int16 *)v19 | (*(unsigned __int8 *)(v19 + 2) << 16);
          goto LABEL_21;
        case 4:
          int v23 = *(_DWORD *)v19;
LABEL_21:
          int v25 = (v23 | (v21 << (8 * v12))) + 7;
          unsigned int v20 = v23 + 7;
          if (v12 < 4) {
            unsigned int v20 = v25;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v26 = v11 + 1;
    unint64_t v27 = v12 + 1;
    unint64_t v28 = v13 + 8;
    switch(v20)
    {
      case 1u:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v18, v19, AssociatedTypeWitness);
        unint64_t v32 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v33 = (v10 + v19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v34 = *(void *)(v33 + 24);
        if (v34 < 0xFFFFFFFF)
        {
          long long v42 = *(_OWORD *)(v33 + 16);
          *(_OWORD *)unint64_t v32 = *(_OWORD *)v33;
          *(_OWORD *)(v32 + 16) = v42;
        }
        else
        {
          *(void *)(v32 + 24) = v34;
          (**(void (***)(void))(v34 - 8))();
        }
        char v35 = 1;
        goto LABEL_58;
      case 2u:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v18, v19, AssociatedTypeWitness);
        char v35 = 2;
        goto LABEL_58;
      case 3u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        char v36 = 3;
        goto LABEL_34;
      case 4u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        char v36 = 4;
        goto LABEL_34;
      case 5u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        char v36 = 5;
LABEL_34:
        *(unsigned char *)(v18 + v12) = v36;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v37 = *(unsigned __int8 *)(v19 + v11);
        unsigned int v38 = v37 - 3;
        if (v37 >= 3)
        {
          if (v11 <= 3) {
            uint64_t v39 = v11;
          }
          else {
            uint64_t v39 = 4;
          }
          switch(v39)
          {
            case 1:
              int v40 = *(unsigned __int8 *)v19;
              goto LABEL_46;
            case 2:
              int v40 = *(unsigned __int16 *)v19;
              goto LABEL_46;
            case 3:
              int v40 = *(unsigned __int16 *)v19 | (*(unsigned __int8 *)(v19 + 2) << 16);
              goto LABEL_46;
            case 4:
              int v40 = *(_DWORD *)v19;
LABEL_46:
              if (v11 < 4) {
                unsigned int v37 = (v40 | (v38 << (8 * v11))) + 3;
              }
              else {
                unsigned int v37 = v40 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v37 == 2)
        {
          *(void *)uint64_t v18 = *(void *)v19;
          *(void *)(v18 + 8) = *(void *)(v19 + 8);
          *(unsigned char *)(v18 + v11) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v37 == 1)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v18, v19, AssociatedTypeWitness);
          *(unsigned char *)(v18 + v11) = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v18, v19, AssociatedTypeWitness);
          unint64_t v43 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v44 = (v10 + v19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v45 = *(void *)(v44 + 24);
          if (v45 < 0xFFFFFFFF)
          {
            long long v46 = *(_OWORD *)(v44 + 16);
            *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
            *(_OWORD *)(v43 + 16) = v46;
          }
          else
          {
            *(void *)(v43 + 24) = v45;
            (**(void (***)(void))(v45 - 8))();
          }
          *(unsigned char *)(v18 + v11) = 0;
        }
        unint64_t v47 = ((v18 | 7) + v26) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v48 = ((v19 | 7) + v26) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v49 = *(void *)(v48 + 24);
        *(void *)(v47 + 24) = v49;
        *(void *)(v47 + 32) = *(void *)(v48 + 32);
        (**(void (***)(void))(v49 - 8))();
        char v35 = 6;
LABEL_58:
        *(unsigned char *)(v18 + v12) = v35;
        break;
      default:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v18, v19, AssociatedTypeWitness);
        unint64_t v29 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v30 = (v10 + v19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v31 = *(void *)(v30 + 24);
        if (v31 < 0xFFFFFFFF)
        {
          long long v41 = *(_OWORD *)(v30 + 16);
          *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
          *(_OWORD *)(v29 + 16) = v41;
        }
        else
        {
          *(void *)(v29 + 24) = v31;
          (**(void (***)(void))(v31 - 8))();
        }
        *(unsigned char *)(v18 + v12) = 0;
        break;
    }
    uint64_t v50 = (void *)(((v18 | 7) + v27) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v51 = (void *)(((v19 | 7) + v27) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v50 = *v51;
    uint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v52 = *v53;
    int64_t v54 = (_OWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v55 = (long long *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v56 = *v55;
    long long v57 = v55[1];
    *(_OWORD *)((char *)v54 + 26) = *(long long *)((char *)v55 + 26);
    *int64_t v54 = v56;
    v54[1] = v57;
    *(void *)(((unint64_t)v54 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v55 + 49) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v58 = (void *)(((unint64_t)a1 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v59 = (void *)(((unint64_t)a2 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v58 = *v59;
    unint64_t v60 = v59[1];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v60 >= 2) {
      swift_bridgeObjectRetain();
    }
    v58[1] = v60;
    v58[2] = v59[2];
    uint64_t v61 = (void *)(((unint64_t)v58 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v62 = (void *)(((unint64_t)v59 + 31) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v61 = *v62;
    *(void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_1C04284FC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  int v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v6 = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  v10 += 15;
  unint64_t v12 = (unsigned __int8 *)(((unint64_t)v6 + v10) & ~v11);
  unint64_t v13 = (unsigned __int8 *)(((unint64_t)v7 + v10) & ~v11);
  unint64_t v14 = *(void *)(v9 + 64);
  unint64_t v15 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v14 > v15) {
    unint64_t v15 = *(void *)(v9 + 64);
  }
  if (v15 <= 0x10) {
    unint64_t v16 = 16;
  }
  else {
    unint64_t v16 = v15;
  }
  if (v12 == v13)
  {
    if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16) {
      unint64_t v18 = v16;
    }
    else {
      unint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
  }
  else
  {
    uint64_t v17 = AssociatedTypeWitness;
    if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16) {
      unint64_t v18 = v16;
    }
    else {
      unint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v19 = v12[v18];
    unsigned int v20 = v19 - 7;
    if (v19 >= 7)
    {
      if (v18 <= 3) {
        uint64_t v21 = v18;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v12;
          goto LABEL_22;
        case 2:
          int v22 = *(unsigned __int16 *)v12;
          goto LABEL_22;
        case 3:
          int v22 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_22;
        case 4:
          int v22 = *(_DWORD *)v12;
LABEL_22:
          int v23 = (v22 | (v20 << (8 * v18))) + 7;
          unsigned int v19 = v22 + 7;
          if (v18 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v73 = v16 + 1;
    switch(v19)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        break;
      case 6u:
        unsigned int v25 = v12[v16];
        unsigned int v26 = v25 - 3;
        if (v25 >= 3)
        {
          if (v16 <= 3) {
            uint64_t v27 = v16;
          }
          else {
            uint64_t v27 = 4;
          }
          switch(v27)
          {
            case 1:
              int v28 = *v12;
              goto LABEL_38;
            case 2:
              int v28 = *(unsigned __int16 *)v12;
              goto LABEL_38;
            case 3:
              int v28 = *(unsigned __int16 *)v12 | (v12[2] << 16);
              goto LABEL_38;
            case 4:
              int v28 = *(_DWORD *)v12;
LABEL_38:
              if (v16 < 4) {
                unsigned int v25 = (v28 | (v26 << (8 * v16))) + 3;
              }
              else {
                unsigned int v25 = v28 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v25 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v25 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
          unint64_t v29 = (((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v29 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v29);
          }
        }
        unint64_t v24 = (((unint64_t)v12 | 7) + v73) & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_48;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        unint64_t v24 = (((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v24 + 24) >= 0xFFFFFFFFuLL) {
LABEL_48:
        }
          __swift_destroy_boxed_opaque_existential_1(v24);
        break;
    }
    unsigned int v30 = v13[v18];
    unsigned int v31 = v30 - 7;
    if (v30 >= 7)
    {
      if (v18 <= 3) {
        uint64_t v32 = v18;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *v13;
          goto LABEL_58;
        case 2:
          int v33 = *(unsigned __int16 *)v13;
          goto LABEL_58;
        case 3:
          int v33 = *(unsigned __int16 *)v13 | (v13[2] << 16);
          goto LABEL_58;
        case 4:
          int v33 = *(_DWORD *)v13;
LABEL_58:
          int v34 = (v33 | (v31 << (8 * v18))) + 7;
          unsigned int v30 = v33 + 7;
          if (v18 < 4) {
            unsigned int v30 = v34;
          }
          break;
        default:
          break;
      }
    }
    switch(v30)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, v17);
        unint64_t v38 = (((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v39 = (((unint64_t)v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v40 = *(void *)(v39 + 24);
        if (v40 < 0xFFFFFFFF)
        {
          long long v48 = *(_OWORD *)(v39 + 16);
          *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
          *(_OWORD *)(v38 + 16) = v48;
        }
        else
        {
          *(void *)(v38 + 24) = v40;
          (**(void (***)(void))(v40 - 8))();
        }
        char v41 = 1;
        goto LABEL_95;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, v17);
        char v41 = 2;
        goto LABEL_95;
      case 3u:
        *(void *)unint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        char v42 = 3;
        goto LABEL_71;
      case 4u:
        *(void *)unint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        char v42 = 4;
        goto LABEL_71;
      case 5u:
        *(void *)unint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        char v42 = 5;
LABEL_71:
        v12[v18] = v42;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v43 = v13[v16];
        unsigned int v44 = v43 - 3;
        if (v43 >= 3)
        {
          if (v16 <= 3) {
            uint64_t v45 = v16;
          }
          else {
            uint64_t v45 = 4;
          }
          switch(v45)
          {
            case 1:
              int v46 = *v13;
              goto LABEL_83;
            case 2:
              int v46 = *(unsigned __int16 *)v13;
              goto LABEL_83;
            case 3:
              int v46 = *(unsigned __int16 *)v13 | (v13[2] << 16);
              goto LABEL_83;
            case 4:
              int v46 = *(_DWORD *)v13;
LABEL_83:
              if (v16 < 4) {
                unsigned int v43 = (v46 | (v44 << (8 * v16))) + 3;
              }
              else {
                unsigned int v43 = v46 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v43 == 2)
        {
          *(void *)unint64_t v12 = *(void *)v13;
          *((void *)v12 + 1) = *((void *)v13 + 1);
          v12[v16] = 2;
          swift_bridgeObjectRetain();
        }
        else if (v43 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, v17);
          v12[v16] = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, v17);
          unint64_t v49 = (((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v50 = (((unint64_t)v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v51 = *(void *)(v50 + 24);
          if (v51 < 0xFFFFFFFF)
          {
            long long v52 = *(_OWORD *)(v50 + 16);
            *(_OWORD *)unint64_t v49 = *(_OWORD *)v50;
            *(_OWORD *)(v49 + 16) = v52;
          }
          else
          {
            *(void *)(v49 + 24) = v51;
            (**(void (***)(void))(v51 - 8))();
          }
          v12[v16] = 0;
        }
        unint64_t v53 = (((unint64_t)v12 | 7) + v73) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v54 = (((unint64_t)v13 | 7) + v73) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v55 = *(void *)(v54 + 24);
        *(void *)(v53 + 24) = v55;
        *(void *)(v53 + 32) = *(void *)(v54 + 32);
        (**(void (***)(void))(v55 - 8))();
        char v41 = 6;
LABEL_95:
        v12[v18] = v41;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, v17);
        unint64_t v35 = (((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v36 = (((unint64_t)v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v37 = *(void *)(v36 + 24);
        if (v37 < 0xFFFFFFFF)
        {
          long long v47 = *(_OWORD *)(v36 + 16);
          *(_OWORD *)unint64_t v35 = *(_OWORD *)v36;
          *(_OWORD *)(v35 + 16) = v47;
        }
        else
        {
          *(void *)(v35 + 24) = v37;
          (**(void (***)(void))(v37 - 8))();
        }
        v12[v18] = 0;
        break;
    }
  }
  long long v56 = (void *)((((unint64_t)v12 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v57 = ((unint64_t)v13 | 7) + v18 + 1;
  unint64_t v58 = (v57 & 0xFFFFFFFFFFFFFFF8) + 15;
  *long long v56 = *(void *)(v57 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  uint64_t v59 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  v58 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v60 = *(void *)v58;
  v58 += 15;
  *uint64_t v59 = v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v61 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v62 = *(void *)(v58 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v61 + 8) = *(unsigned char *)((v58 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)unint64_t v61 = v62;
  uint64_t v63 = *(void *)((v58 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v61 + 24) = *(unsigned char *)((v58 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)(v61 + 16) = v63;
  uint64_t v64 = *(void *)((v58 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(unsigned char *)(v61 + 40) = *(unsigned char *)((v58 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(void *)(v61 + 32) = v64;
  *(unsigned char *)(v61 + 41) = *(unsigned char *)((v58 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(void *)((v61 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v58 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v65 = ((v11 + 24) & ~v11)
      + (((((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v66 = (void *)(((unint64_t)a1 + v65 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v67 = (void *)(((unint64_t)a2 + v65 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v66 = *v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = v66 + 1;
  unint64_t v69 = v67[1];
  if (v66[1] >= 2uLL)
  {
    if (v69 >= 2)
    {
      *uint64_t v68 = v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFE5F150((uint64_t)(v66 + 1), &qword_1EB879F70, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
      *uint64_t v68 = v67[1];
    }
  }
  else
  {
    *uint64_t v68 = v69;
    if (v69 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  v66[2] = v67[2];
  uint64_t v70 = (void *)(((unint64_t)v66 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v71 = (void *)(((unint64_t)v67 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v70 = *v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1C0428EE4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  int v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v6 = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  v10 += 15;
  unint64_t v12 = ((unint64_t)v6 + v10) & ~v11;
  unint64_t v13 = (unsigned __int8 *)(((unint64_t)v7 + v10) & ~v11);
  unint64_t v14 = *(void *)(v9 + 64);
  unint64_t v15 = v14 + 7;
  if (v14 <= ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v14 <= 0x10) {
    unint64_t v16 = 16;
  }
  else {
    unint64_t v16 = v14;
  }
  if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16) {
    unint64_t v17 = v16;
  }
  else {
    unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v18 = v13[v17];
  unsigned int v19 = v18 - 7;
  if (v18 >= 7)
  {
    if (v17 <= 3) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *v13;
        goto LABEL_18;
      case 2:
        int v21 = *(unsigned __int16 *)v13;
        goto LABEL_18;
      case 3:
        int v21 = *(unsigned __int16 *)v13 | (v13[2] << 16);
        goto LABEL_18;
      case 4:
        int v21 = *(_DWORD *)v13;
LABEL_18:
        int v22 = (v21 | (v19 << (8 * v17))) + 7;
        unsigned int v18 = v21 + 7;
        if (v17 < 4) {
          unsigned int v18 = v22;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v23 = v16 + 1;
  switch(v18)
  {
    case 1u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
      int v28 = (_OWORD *)((unint64_t)&v13[v15] & 0xFFFFFFFFFFFFFFF8);
      long long v29 = v28[1];
      unsigned int v30 = (_OWORD *)((v15 + v12) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v30 = *v28;
      v30[1] = v29;
      char v24 = 1;
      break;
    case 2u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
      char v24 = 2;
      break;
    case 3u:
      *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
      char v24 = 3;
      break;
    case 4u:
      *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
      char v24 = 4;
      break;
    case 5u:
      *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
      char v24 = 5;
      break;
    case 6u:
      unsigned int v31 = v13[v16];
      unsigned int v32 = v31 - 3;
      if (v31 >= 3)
      {
        if (v16 <= 3) {
          uint64_t v33 = v16;
        }
        else {
          uint64_t v33 = 4;
        }
        switch(v33)
        {
          case 1:
            int v34 = *v13;
            goto LABEL_36;
          case 2:
            int v34 = *(unsigned __int16 *)v13;
            goto LABEL_36;
          case 3:
            int v34 = *(unsigned __int16 *)v13 | (v13[2] << 16);
            goto LABEL_36;
          case 4:
            int v34 = *(_DWORD *)v13;
LABEL_36:
            int v35 = (v34 | (v32 << (8 * v16))) + 3;
            unsigned int v31 = v34 + 3;
            if (v16 < 4) {
              unsigned int v31 = v35;
            }
            break;
          default:
            break;
        }
      }
      if (v31 == 2)
      {
        *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
        char v36 = 2;
      }
      else if (v31 == 1)
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
        char v36 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
        char v36 = 0;
        unint64_t v37 = (_OWORD *)((unint64_t)&v13[v15] & 0xFFFFFFFFFFFFFFF8);
        long long v38 = v37[1];
        unint64_t v39 = (_OWORD *)((v15 + v12) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v39 = *v37;
        v39[1] = v38;
      }
      *(unsigned char *)(v12 + v16) = v36;
      unint64_t v40 = ((v12 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v41 = (((unint64_t)v13 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
      long long v42 = *(_OWORD *)v41;
      long long v43 = *(_OWORD *)(v41 + 16);
      *(void *)(v40 + 32) = *(void *)(v41 + 32);
      *(_OWORD *)unint64_t v40 = v42;
      *(_OWORD *)(v40 + 16) = v43;
      char v24 = 6;
      break;
    default:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
      char v24 = 0;
      unsigned int v25 = (_OWORD *)((unint64_t)&v13[v15] & 0xFFFFFFFFFFFFFFF8);
      long long v26 = v25[1];
      uint64_t v27 = (_OWORD *)((v15 + v12) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v27 = *v25;
      v27[1] = v26;
      break;
  }
  *(unsigned char *)(v12 + v17) = v24;
  unsigned int v44 = (void *)(((v12 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (void *)((((unint64_t)v13 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v44 = *v45;
  int v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v46 = *v47;
  long long v48 = (_OWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v49 = (long long *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v50 = *v49;
  long long v51 = v49[1];
  *(_OWORD *)((char *)v48 + 26) = *(long long *)((char *)v49 + 26);
  *long long v48 = v50;
  v48[1] = v51;
  *(void *)(((unint64_t)v48 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v49 + 49) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = ((v11 + 24) & ~v11)
      + (((((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v53 = ((unint64_t)a1 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)a2 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v55 = *(_OWORD *)v54;
  *(void *)(v53 + 16) = *(void *)(v54 + 16);
  *(_OWORD *)unint64_t v53 = v55;
  long long v56 = (void *)((v53 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v57 = (void *)((v54 + 31) & 0xFFFFFFFFFFFFFFF8);
  *long long v56 = *v57;
  *(void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C0429400(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  int v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v6 = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  v10 += 15;
  unint64_t v12 = (unsigned __int8 *)(((unint64_t)v6 + v10) & ~v11);
  unint64_t v13 = (unsigned __int8 *)(((unint64_t)v7 + v10) & ~v11);
  unint64_t v14 = *(void *)(v9 + 64);
  unint64_t v15 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v14 > v15) {
    unint64_t v15 = *(void *)(v9 + 64);
  }
  if (v15 <= 0x10) {
    unint64_t v16 = 16;
  }
  else {
    unint64_t v16 = v15;
  }
  if (v12 == v13)
  {
    if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16) {
      unint64_t v18 = v16;
    }
    else {
      unint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
  }
  else
  {
    uint64_t v17 = AssociatedTypeWitness;
    if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16) {
      unint64_t v18 = v16;
    }
    else {
      unint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v19 = v12[v18];
    unsigned int v20 = v19 - 7;
    if (v19 >= 7)
    {
      if (v18 <= 3) {
        uint64_t v21 = v18;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v12;
          goto LABEL_22;
        case 2:
          int v22 = *(unsigned __int16 *)v12;
          goto LABEL_22;
        case 3:
          int v22 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_22;
        case 4:
          int v22 = *(_DWORD *)v12;
LABEL_22:
          int v23 = (v22 | (v20 << (8 * v18))) + 7;
          unsigned int v19 = v22 + 7;
          if (v18 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v71 = v16 + 1;
    switch(v19)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        break;
      case 6u:
        unsigned int v25 = v12[v16];
        unsigned int v26 = v25 - 3;
        if (v25 >= 3)
        {
          if (v16 <= 3) {
            uint64_t v27 = v16;
          }
          else {
            uint64_t v27 = 4;
          }
          switch(v27)
          {
            case 1:
              int v28 = *v12;
              goto LABEL_38;
            case 2:
              int v28 = *(unsigned __int16 *)v12;
              goto LABEL_38;
            case 3:
              int v28 = *(unsigned __int16 *)v12 | (v12[2] << 16);
              goto LABEL_38;
            case 4:
              int v28 = *(_DWORD *)v12;
LABEL_38:
              if (v16 < 4) {
                unsigned int v25 = (v28 | (v26 << (8 * v16))) + 3;
              }
              else {
                unsigned int v25 = v28 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v25 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v25 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
          unint64_t v29 = (((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v29 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v29);
          }
        }
        unint64_t v24 = (((unint64_t)v12 | 7) + v71) & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_48;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        unint64_t v24 = (((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v24 + 24) >= 0xFFFFFFFFuLL) {
LABEL_48:
        }
          __swift_destroy_boxed_opaque_existential_1(v24);
        break;
    }
    unsigned int v30 = v13[v18];
    unsigned int v31 = v30 - 7;
    if (v30 >= 7)
    {
      if (v18 <= 3) {
        uint64_t v32 = v18;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *v13;
          goto LABEL_58;
        case 2:
          int v33 = *(unsigned __int16 *)v13;
          goto LABEL_58;
        case 3:
          int v33 = *(unsigned __int16 *)v13 | (v13[2] << 16);
          goto LABEL_58;
        case 4:
          int v33 = *(_DWORD *)v13;
LABEL_58:
          int v34 = (v33 | (v31 << (8 * v18))) + 7;
          unsigned int v30 = v33 + 7;
          if (v18 < 4) {
            unsigned int v30 = v34;
          }
          break;
        default:
          break;
      }
    }
    switch(v30)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, v17);
        long long v38 = (_OWORD *)((((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v39 = (_OWORD *)((((unint64_t)v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8);
        long long v40 = v39[1];
        *long long v38 = *v39;
        v38[1] = v40;
        char v41 = 1;
        goto LABEL_85;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, v17);
        char v41 = 2;
        goto LABEL_85;
      case 3u:
        *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
        char v41 = 3;
        goto LABEL_85;
      case 4u:
        *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
        char v41 = 4;
        goto LABEL_85;
      case 5u:
        *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
        char v41 = 5;
        goto LABEL_85;
      case 6u:
        unsigned int v42 = v13[v16];
        unsigned int v43 = v42 - 3;
        if (v42 >= 3)
        {
          if (v16 <= 3) {
            uint64_t v44 = v16;
          }
          else {
            uint64_t v44 = 4;
          }
          switch(v44)
          {
            case 1:
              int v45 = *v13;
              goto LABEL_76;
            case 2:
              int v45 = *(unsigned __int16 *)v13;
              goto LABEL_76;
            case 3:
              int v45 = *(unsigned __int16 *)v13 | (v13[2] << 16);
              goto LABEL_76;
            case 4:
              int v45 = *(_DWORD *)v13;
LABEL_76:
              if (v16 < 4) {
                unsigned int v42 = (v45 | (v43 << (8 * v16))) + 3;
              }
              else {
                unsigned int v42 = v45 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v42 == 2)
        {
          *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
          char v46 = 2;
        }
        else if (v42 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, v17);
          char v46 = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, v17);
          char v46 = 0;
          long long v47 = (_OWORD *)((((unint64_t)v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8);
          long long v48 = v47[1];
          unint64_t v49 = (_OWORD *)((((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v49 = *v47;
          v49[1] = v48;
        }
        v12[v16] = v46;
        unint64_t v50 = (((unint64_t)v12 | 7) + v71) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v51 = (((unint64_t)v13 | 7) + v71) & 0xFFFFFFFFFFFFFFF8;
        long long v52 = *(_OWORD *)v51;
        long long v53 = *(_OWORD *)(v51 + 16);
        *(void *)(v50 + 32) = *(void *)(v51 + 32);
        *(_OWORD *)unint64_t v50 = v52;
        *(_OWORD *)(v50 + 16) = v53;
        char v41 = 6;
LABEL_85:
        v12[v18] = v41;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(v12, v13, v17);
        int v35 = (_OWORD *)((((unint64_t)v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8);
        long long v36 = v35[1];
        unint64_t v37 = (_OWORD *)((((unint64_t)v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v37 = *v35;
        v37[1] = v36;
        v12[v18] = 0;
        break;
    }
  }
  unint64_t v54 = (void *)((((unint64_t)v12 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  long long v55 = (void *)((((unint64_t)v13 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v54 = *v55;
  swift_release();
  long long v56 = (void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v57 = ((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = *(void *)v57;
  v57 += 15;
  *long long v56 = v58;
  swift_bridgeObjectRelease();
  unint64_t v59 = ((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v60 = *(void *)(v57 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v59 + 8) = *(unsigned char *)((v57 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)unint64_t v59 = v60;
  uint64_t v61 = *(void *)((v57 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v59 + 24) = *(unsigned char *)((v57 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)(v59 + 16) = v61;
  uint64_t v62 = *(void *)((v57 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(unsigned char *)(v59 + 40) = *(unsigned char *)((v57 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(void *)(v59 + 32) = v62;
  *(unsigned char *)(v59 + 41) = *(unsigned char *)((v57 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(void *)((v59 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v57 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v63 = ((v11 + 24) & ~v11)
      + (((((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v64 = (void *)(((unint64_t)a1 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v65 = (void *)(((unint64_t)a2 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v64 = *v65;
  swift_bridgeObjectRelease();
  uint64_t v66 = v64 + 1;
  unint64_t v67 = v65[1];
  if (v64[1] >= 2uLL)
  {
    if (v67 >= 2)
    {
      *uint64_t v66 = v67;
      swift_bridgeObjectRelease();
      goto LABEL_91;
    }
    sub_1BFE5F150((uint64_t)(v64 + 1), &qword_1EB879F70, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
    unint64_t v67 = v65[1];
  }
  *uint64_t v66 = v67;
LABEL_91:
  v64[2] = v65[2];
  uint64_t v68 = (void *)(((unint64_t)v64 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v69 = (void *)(((unint64_t)v65 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v68 = *v69;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v68 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v69 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0429C7C(int *a1, int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 48 > v5) {
    unint64_t v5 = (v5 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v6 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v7 = v6 | 7;
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_9;
  }
  unint64_t v10 = ((((((v6 + 31) & ~v7)
          + (((((((v5 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v11 = v10 & 0xFFFFFFF8;
  unsigned int v12 = a2 - 2147483646;
  if ((v10 & 0xFFFFFFF8) != 0) {
    unsigned int v12 = 2;
  }
  if (v12 >= 0x10000) {
    int v13 = 4;
  }
  else {
    int v13 = 2;
  }
  if (v12 < 0x100) {
    int v14 = 1;
  }
  else {
    int v14 = v13;
  }
  if (v14 == 4)
  {
    int v15 = *(int *)((char *)a1 + v10);
    if (!v15) {
      goto LABEL_9;
    }
  }
  else if (v14 == 2)
  {
    int v15 = *(unsigned __int16 *)((char *)a1 + v10);
    if (!v15) {
      goto LABEL_9;
    }
  }
  else
  {
    int v15 = *((unsigned __int8 *)a1 + v10);
    if (!v15)
    {
LABEL_9:
      unint64_t v8 = *(void *)(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7)
                      + v5
                      + 8) & 0xFFFFFFFFFFFFFFF8);
      if (v8 >= 0xFFFFFFFF) {
        LODWORD(v8) = -1;
      }
      return (v8 + 1);
    }
  }
  int v16 = v15 - 1;
  if (v11)
  {
    int v16 = 0;
    int v17 = *a1;
  }
  else
  {
    int v17 = 0;
  }
  return (v17 | v16) ^ 0x80000000;
}

void sub_1C0429EA4(unsigned int *a1, int a2, int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v7 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v7 <= 0x10) {
    unint64_t v7 = 16;
  }
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 48 > v7) {
    unint64_t v7 = (v7 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  size_t v10 = ((((((v8 + 31) & ~(v8 | 7))
          + (((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (a3 < 0)
  {
    unsigned int v12 = a3 - 2147483646;
    if (v10) {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v11 = 1;
    }
    else {
      int v11 = v13;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_9;
    }
  }
  else
  {
    int v11 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_9:
      switch(v11)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        case 3:
          goto LABEL_36;
        case 4:
          *(unsigned int *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        default:
LABEL_29:
          if (a2) {
LABEL_30:
          }
            *(void *)(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9)
                       + v7
                       + 8) & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v10) {
    int v14 = 1;
  }
  else {
    int v14 = a2 - 0x7FFFFFFF;
  }
  if (v10)
  {
    bzero(a1, v10);
    *a1 = a2 ^ 0x80000000;
  }
  switch(v11)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v14;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v14;
      break;
    case 3:
LABEL_36:
      __break(1u);
      JUMPOUT(0x1C042A120);
    case 4:
      *(unsigned int *)((char *)a1 + v10) = v14;
      break;
    default:
      return;
  }
}

void *sub_1C042A214(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v3 = *v4;
  unint64_t v5 = (void *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = v9 + 15;
  unint64_t v11 = (unint64_t)v5 + v9 + 15;
  unint64_t v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  int v13 = (unsigned __int8 *)(v11 & v12);
  int v14 = (unsigned __int8 *)(((unint64_t)v6 + v10) & v12);
  unint64_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v15 > v16) {
    unint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 <= 0x10) {
    unint64_t v17 = 16;
  }
  else {
    unint64_t v17 = v16;
  }
  if (v13 == v14)
  {
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17) {
      unint64_t v19 = v17;
    }
    else {
      unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
  }
  else
  {
    uint64_t v18 = AssociatedTypeWitness;
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17) {
      unint64_t v19 = v17;
    }
    else {
      unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v20 = v13[v19];
    unsigned int v21 = v20 - 7;
    if (v20 >= 7)
    {
      if (v19 <= 3) {
        uint64_t v22 = v19;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *v13;
          goto LABEL_22;
        case 2:
          int v23 = *(unsigned __int16 *)v13;
          goto LABEL_22;
        case 3:
          int v23 = *(unsigned __int16 *)(v11 & v12) | (*(unsigned __int8 *)((v11 & v12) + 2) << 16);
          goto LABEL_22;
        case 4:
          int v23 = *(_DWORD *)v13;
LABEL_22:
          int v24 = (v23 | (v21 << (8 * v19))) + 7;
          unsigned int v20 = v23 + 7;
          if (v19 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v25 = v17 + 1;
    switch(v20)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        break;
      case 6u:
        unsigned int v27 = v13[v17];
        unsigned int v28 = v27 - 3;
        if (v27 >= 3)
        {
          if (v17 <= 3) {
            uint64_t v29 = v17;
          }
          else {
            uint64_t v29 = 4;
          }
          switch(v29)
          {
            case 1:
              int v30 = *v13;
              goto LABEL_38;
            case 2:
              int v30 = *(unsigned __int16 *)v13;
              goto LABEL_38;
            case 3:
              int v30 = *(unsigned __int16 *)(v11 & v12) | (*(unsigned __int8 *)((v11 & v12) + 2) << 16);
              goto LABEL_38;
            case 4:
              int v30 = *(_DWORD *)v13;
LABEL_38:
              int v31 = (v30 | (v28 << (8 * v17))) + 3;
              unsigned int v27 = v30 + 3;
              if (v17 < 4) {
                unsigned int v27 = v31;
              }
              break;
            default:
              break;
          }
        }
        if (v27 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v27 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
          unint64_t v32 = (((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v32 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v32);
          }
        }
        unint64_t v26 = (((unint64_t)v13 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_47;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        unint64_t v26 = (((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v26 + 24) >= 0xFFFFFFFFuLL) {
LABEL_47:
        }
          __swift_destroy_boxed_opaque_existential_1(v26);
        break;
    }
    unsigned int v33 = v14[v19];
    unsigned int v34 = v33 - 7;
    if (v33 >= 7)
    {
      if (v19 <= 3) {
        uint64_t v35 = v19;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *v14;
          goto LABEL_57;
        case 2:
          int v36 = *(unsigned __int16 *)v14;
          goto LABEL_57;
        case 3:
          int v36 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_57;
        case 4:
          int v36 = *(_DWORD *)v14;
LABEL_57:
          int v37 = (v36 | (v34 << (8 * v19))) + 7;
          unsigned int v33 = v36 + 7;
          if (v19 < 4) {
            unsigned int v33 = v37;
          }
          break;
        default:
          break;
      }
    }
    switch(v33)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, v18);
        unint64_t v41 = (((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v42 = (((unint64_t)v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v43 = *(void *)(v42 + 24);
        if (v43 < 0xFFFFFFFF)
        {
          long long v51 = *(_OWORD *)(v42 + 16);
          *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
          *(_OWORD *)(v41 + 16) = v51;
        }
        else
        {
          *(void *)(v41 + 24) = v43;
          (**(void (***)(void))(v43 - 8))();
        }
        char v44 = 1;
        goto LABEL_93;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, v18);
        char v44 = 2;
        goto LABEL_93;
      case 3u:
        *(void *)int v13 = *(void *)v14;
        *((void *)v13 + 1) = *((void *)v14 + 1);
        char v45 = 3;
        goto LABEL_70;
      case 4u:
        *(void *)int v13 = *(void *)v14;
        *((void *)v13 + 1) = *((void *)v14 + 1);
        char v45 = 4;
        goto LABEL_70;
      case 5u:
        *(void *)int v13 = *(void *)v14;
        *((void *)v13 + 1) = *((void *)v14 + 1);
        char v45 = 5;
LABEL_70:
        v13[v19] = v45;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v46 = v14[v17];
        unsigned int v47 = v46 - 3;
        if (v46 >= 3)
        {
          if (v17 <= 3) {
            uint64_t v48 = v17;
          }
          else {
            uint64_t v48 = 4;
          }
          switch(v48)
          {
            case 1:
              int v49 = *v14;
              goto LABEL_82;
            case 2:
              int v49 = *(unsigned __int16 *)v14;
              goto LABEL_82;
            case 3:
              int v49 = *(unsigned __int16 *)v14 | (v14[2] << 16);
              goto LABEL_82;
            case 4:
              int v49 = *(_DWORD *)v14;
LABEL_82:
              int v52 = (v49 | (v47 << (8 * v17))) + 3;
              unsigned int v46 = v49 + 3;
              if (v17 < 4) {
                unsigned int v46 = v52;
              }
              break;
            default:
              break;
          }
        }
        if (v46 == 2)
        {
          *(void *)int v13 = *(void *)v14;
          *((void *)v13 + 1) = *((void *)v14 + 1);
          v13[v17] = 2;
          swift_bridgeObjectRetain();
        }
        else if (v46 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, v18);
          v13[v17] = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, v18);
          unint64_t v53 = (((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v54 = (((unint64_t)v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v55 = *(void *)(v54 + 24);
          if (v55 < 0xFFFFFFFF)
          {
            long long v56 = *(_OWORD *)(v54 + 16);
            *(_OWORD *)unint64_t v53 = *(_OWORD *)v54;
            *(_OWORD *)(v53 + 16) = v56;
          }
          else
          {
            *(void *)(v53 + 24) = v55;
            (**(void (***)(void))(v55 - 8))();
          }
          v13[v17] = 0;
        }
        unint64_t v57 = (((unint64_t)v13 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v58 = (((unint64_t)v14 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v59 = *(void *)(v58 + 24);
        *(void *)(v57 + 24) = v59;
        *(void *)(v57 + 32) = *(void *)(v58 + 32);
        (**(void (***)(void))(v59 - 8))();
        char v44 = 6;
LABEL_93:
        v13[v19] = v44;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, v18);
        unint64_t v38 = (((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v39 = (((unint64_t)v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v40 = *(void *)(v39 + 24);
        if (v40 < 0xFFFFFFFF)
        {
          long long v50 = *(_OWORD *)(v39 + 16);
          *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
          *(_OWORD *)(v38 + 16) = v50;
        }
        else
        {
          *(void *)(v38 + 24) = v40;
          (**(void (***)(void))(v40 - 8))();
        }
        v13[v19] = 0;
        break;
    }
  }
  uint64_t v60 = (void *)((((unint64_t)v13 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v61 = ((unint64_t)v14 | 7) + v19 + 1;
  unint64_t v62 = (v61 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v60 = *(void *)(v61 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v63 = (void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
  v62 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v64 = *(void *)v62;
  v62 += 15;
  *unint64_t v63 = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v65 = ((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v66 = *(void *)(v62 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v65 + 8) = *(unsigned char *)((v62 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)unint64_t v65 = v66;
  uint64_t v67 = *(void *)((v62 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v65 + 24) = *(unsigned char *)((v62 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)(v65 + 16) = v67;
  uint64_t v68 = *(void *)((v62 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(unsigned char *)(v65 + 40) = *(unsigned char *)((v62 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(void *)(v65 + 32) = v68;
  *(unsigned char *)(v65 + 41) = *(unsigned char *)((v62 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(void *)((v65 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v62 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C042AAA4(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v3 = *v4;
  unint64_t v5 = (void *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = v9 + 15;
  unint64_t v11 = (unint64_t)v5 + v9 + 15;
  unint64_t v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = v11 & v12;
  int v14 = (unsigned __int8 *)(((unint64_t)v6 + v10) & v12);
  unint64_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = v15 + 7;
  if (v15 <= ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v15 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v15 <= 0x10) {
    unint64_t v17 = 16;
  }
  else {
    unint64_t v17 = v15;
  }
  if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17) {
    unint64_t v18 = v17;
  }
  else {
    unint64_t v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v19 = v14[v18];
  unsigned int v20 = v19 - 7;
  if (v19 >= 7)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v14;
        goto LABEL_18;
      case 2:
        int v22 = *(unsigned __int16 *)v14;
        goto LABEL_18;
      case 3:
        int v22 = *(unsigned __int16 *)(((unint64_t)v6 + v10) & v12) | (*(unsigned __int8 *)((((unint64_t)v6
                                                                                                + v10) & v12)
                                                                                              + 2) << 16);
        goto LABEL_18;
      case 4:
        int v22 = *(_DWORD *)v14;
LABEL_18:
        int v23 = (v22 | (v20 << (8 * v18))) + 7;
        unsigned int v19 = v22 + 7;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v24 = v17 + 1;
  switch(v19)
  {
    case 1u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
      uint64_t v29 = (_OWORD *)((unint64_t)&v14[v16] & 0xFFFFFFFFFFFFFFF8);
      long long v30 = v29[1];
      int v31 = (_OWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
      *int v31 = *v29;
      v31[1] = v30;
      char v25 = 1;
      break;
    case 2u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
      char v25 = 2;
      break;
    case 3u:
      *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
      char v25 = 3;
      break;
    case 4u:
      *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
      char v25 = 4;
      break;
    case 5u:
      *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
      char v25 = 5;
      break;
    case 6u:
      unsigned int v32 = v14[v17];
      unsigned int v33 = v32 - 3;
      if (v32 >= 3)
      {
        if (v17 <= 3) {
          uint64_t v34 = v17;
        }
        else {
          uint64_t v34 = 4;
        }
        switch(v34)
        {
          case 1:
            int v35 = *v14;
            goto LABEL_36;
          case 2:
            int v35 = *(unsigned __int16 *)v14;
            goto LABEL_36;
          case 3:
            int v35 = *(unsigned __int16 *)v14 | (v14[2] << 16);
            goto LABEL_36;
          case 4:
            int v35 = *(_DWORD *)v14;
LABEL_36:
            int v36 = (v35 | (v33 << (8 * v17))) + 3;
            unsigned int v32 = v35 + 3;
            if (v17 < 4) {
              unsigned int v32 = v36;
            }
            break;
          default:
            break;
        }
      }
      if (v32 == 2)
      {
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
        char v37 = 2;
      }
      else if (v32 == 1)
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
        char v37 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
        char v37 = 0;
        unint64_t v38 = (_OWORD *)((unint64_t)&v14[v16] & 0xFFFFFFFFFFFFFFF8);
        long long v39 = v38[1];
        unint64_t v40 = (_OWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v40 = *v38;
        v40[1] = v39;
      }
      *(unsigned char *)(v13 + v17) = v37;
      unint64_t v41 = ((v13 | 7) + v24) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v42 = (((unint64_t)v14 | 7) + v24) & 0xFFFFFFFFFFFFFFF8;
      long long v43 = *(_OWORD *)v42;
      long long v44 = *(_OWORD *)(v42 + 16);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(_OWORD *)unint64_t v41 = v43;
      *(_OWORD *)(v41 + 16) = v44;
      char v25 = 6;
      break;
    default:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
      char v25 = 0;
      unint64_t v26 = (_OWORD *)((unint64_t)&v14[v16] & 0xFFFFFFFFFFFFFFF8);
      long long v27 = v26[1];
      unsigned int v28 = (_OWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v28 = *v26;
      v28[1] = v27;
      break;
  }
  *(unsigned char *)(v13 + v18) = v25;
  char v45 = (void *)((((unint64_t)v14 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v46 = (void *)(((v13 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v46 = *v45;
  unsigned int v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v47;
  int v49 = (_OWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v50 = (long long *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v51 = *v50;
  long long v52 = v50[1];
  *(_OWORD *)((char *)v49 + 26) = *(long long *)((char *)v50 + 26);
  *int v49 = v51;
  v49[1] = v52;
  *(void *)(((unint64_t)v49 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v50 + 49) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C042AF38(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v3 = *v4;
  unint64_t v5 = (void *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = v9 + 15;
  unint64_t v11 = (unint64_t)v5 + v9 + 15;
  unint64_t v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (unsigned __int8 *)(v11 & v12);
  int v14 = (unsigned __int8 *)(((unint64_t)v6 + v10) & v12);
  unint64_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v15 > v16) {
    unint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 <= 0x10) {
    unint64_t v17 = 16;
  }
  else {
    unint64_t v17 = v16;
  }
  if (v13 == v14)
  {
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17) {
      unint64_t v19 = v17;
    }
    else {
      unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
  }
  else
  {
    uint64_t v18 = AssociatedTypeWitness;
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17) {
      unint64_t v19 = v17;
    }
    else {
      unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v20 = v13[v19];
    unsigned int v21 = v20 - 7;
    if (v20 >= 7)
    {
      if (v19 <= 3) {
        uint64_t v22 = v19;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *v13;
          goto LABEL_22;
        case 2:
          int v23 = *(unsigned __int16 *)v13;
          goto LABEL_22;
        case 3:
          int v23 = *(unsigned __int16 *)(v11 & v12) | (*(unsigned __int8 *)((v11 & v12) + 2) << 16);
          goto LABEL_22;
        case 4:
          int v23 = *(_DWORD *)v13;
LABEL_22:
          int v24 = (v23 | (v21 << (8 * v19))) + 7;
          unsigned int v20 = v23 + 7;
          if (v19 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v25 = v17 + 1;
    switch(v20)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        break;
      case 6u:
        unsigned int v27 = v13[v17];
        unsigned int v28 = v27 - 3;
        if (v27 >= 3)
        {
          if (v17 <= 3) {
            uint64_t v29 = v17;
          }
          else {
            uint64_t v29 = 4;
          }
          switch(v29)
          {
            case 1:
              int v30 = *v13;
              goto LABEL_38;
            case 2:
              int v30 = *(unsigned __int16 *)v13;
              goto LABEL_38;
            case 3:
              int v30 = *(unsigned __int16 *)(v11 & v12) | (*(unsigned __int8 *)((v11 & v12) + 2) << 16);
              goto LABEL_38;
            case 4:
              int v30 = *(_DWORD *)v13;
LABEL_38:
              int v31 = (v30 | (v28 << (8 * v17))) + 3;
              unsigned int v27 = v30 + 3;
              if (v17 < 4) {
                unsigned int v27 = v31;
              }
              break;
            default:
              break;
          }
        }
        if (v27 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v27 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
          unint64_t v32 = (((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v32 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v32);
          }
        }
        unint64_t v26 = (((unint64_t)v13 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_47;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        unint64_t v26 = (((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v26 + 24) >= 0xFFFFFFFFuLL) {
LABEL_47:
        }
          __swift_destroy_boxed_opaque_existential_1(v26);
        break;
    }
    unsigned int v33 = v14[v19];
    unsigned int v34 = v33 - 7;
    if (v33 >= 7)
    {
      if (v19 <= 3) {
        uint64_t v35 = v19;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *v14;
          goto LABEL_57;
        case 2:
          int v36 = *(unsigned __int16 *)v14;
          goto LABEL_57;
        case 3:
          int v36 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_57;
        case 4:
          int v36 = *(_DWORD *)v14;
LABEL_57:
          int v37 = (v36 | (v34 << (8 * v19))) + 7;
          unsigned int v33 = v36 + 7;
          if (v19 < 4) {
            unsigned int v33 = v37;
          }
          break;
        default:
          break;
      }
    }
    switch(v33)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, v18);
        unint64_t v41 = (_OWORD *)((((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v42 = (_OWORD *)((((unint64_t)v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
        long long v43 = v42[1];
        *unint64_t v41 = *v42;
        v41[1] = v43;
        char v44 = 1;
        goto LABEL_83;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, v18);
        char v44 = 2;
        goto LABEL_83;
      case 3u:
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
        char v44 = 3;
        goto LABEL_83;
      case 4u:
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
        char v44 = 4;
        goto LABEL_83;
      case 5u:
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
        char v44 = 5;
        goto LABEL_83;
      case 6u:
        unsigned int v45 = v14[v17];
        unsigned int v46 = v45 - 3;
        if (v45 >= 3)
        {
          if (v17 <= 3) {
            uint64_t v47 = v17;
          }
          else {
            uint64_t v47 = 4;
          }
          switch(v47)
          {
            case 1:
              int v48 = *v14;
              goto LABEL_75;
            case 2:
              int v48 = *(unsigned __int16 *)v14;
              goto LABEL_75;
            case 3:
              int v48 = *(unsigned __int16 *)v14 | (v14[2] << 16);
              goto LABEL_75;
            case 4:
              int v48 = *(_DWORD *)v14;
LABEL_75:
              int v49 = (v48 | (v46 << (8 * v17))) + 3;
              unsigned int v45 = v48 + 3;
              if (v17 < 4) {
                unsigned int v45 = v49;
              }
              break;
            default:
              break;
          }
        }
        if (v45 == 2)
        {
          *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
          char v50 = 2;
        }
        else if (v45 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, v18);
          char v50 = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, v18);
          char v50 = 0;
          long long v51 = (_OWORD *)((((unint64_t)v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
          long long v52 = v51[1];
          unint64_t v53 = (_OWORD *)((((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v53 = *v51;
          v53[1] = v52;
        }
        v13[v17] = v50;
        unint64_t v54 = (((unint64_t)v13 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v55 = (((unint64_t)v14 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
        long long v56 = *(_OWORD *)v55;
        long long v57 = *(_OWORD *)(v55 + 16);
        *(void *)(v54 + 32) = *(void *)(v55 + 32);
        *(_OWORD *)unint64_t v54 = v56;
        *(_OWORD *)(v54 + 16) = v57;
        char v44 = 6;
LABEL_83:
        v13[v19] = v44;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, v18);
        unint64_t v38 = (_OWORD *)((((unint64_t)v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
        long long v39 = v38[1];
        unint64_t v40 = (_OWORD *)((((unint64_t)v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v40 = *v38;
        v40[1] = v39;
        v13[v19] = 0;
        break;
    }
  }
  unint64_t v58 = (void *)((((unint64_t)v13 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v59 = (void *)((((unint64_t)v14 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v58 = *v59;
  swift_release();
  uint64_t v60 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v61 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v62 = *(void *)v61;
  v61 += 15;
  *uint64_t v60 = v62;
  swift_bridgeObjectRelease();
  unint64_t v63 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v64 = *(void *)(v61 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v63 + 8) = *(unsigned char *)((v61 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)unint64_t v63 = v64;
  uint64_t v65 = *(void *)((v61 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v63 + 24) = *(unsigned char *)((v61 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)(v63 + 16) = v65;
  uint64_t v66 = *(void *)((v61 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(unsigned char *)(v63 + 40) = *(unsigned char *)((v61 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(void *)(v63 + 32) = v66;
  *(unsigned char *)(v63 + 41) = *(unsigned char *)((v61 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(void *)((v63 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v61 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

id FeedBannerAdView.bannerView.getter()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = *v1;
  return v2;
}

void sub_1C042B718(uint64_t a1)
{
  id v1 = *(id *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  id v3 = *(id *)a1;
  sub_1C042BDA8(v1, v2);
}

void FeedBannerAdView.bannerView.setter(void *a1, uint64_t a2)
{
  sub_1C042BDA8(a1, a2);
}

void (*FeedBannerAdView.bannerView.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = (char *)malloc(0x30uLL);
  *a1 = v3;
  *((void *)v3 + 5) = v1;
  uint64_t v4 = (long long *)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  long long v5 = *v4;
  *(_OWORD *)(v3 + 24) = *v4;
  id v6 = (id)v5;
  return sub_1C042B838;
}

void sub_1C042B838(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  id v3 = *v4;
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    id v6 = v3;
    sub_1C042BDA8(v3, v5);

    id v3 = *v4;
  }
  else
  {
    sub_1C042BDA8(*(id *)(*(void *)a1 + 24), v5);
  }

  free(v2);
}

id FeedBannerAdView.debugView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView];
  }
  else
  {
    sub_1C151D91C();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v0, sel_addSubview_, v4);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t FeedBannerAdView.debugView.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*FeedBannerAdView.debugView.modify(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = FeedBannerAdView.debugView.getter();
  return sub_1C042B9A8;
}

void sub_1C042B9A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView);
  *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView) = v2;
}

id FeedBannerAdView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id FeedBannerAdView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView] = 0;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

id FeedBannerAdView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FeedBannerAdView.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = &v1[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView];
  *(void *)id v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView] = 0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id FeedBannerAdView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C042BCD0()
{
  uint64_t v1 = (id *)(*v0 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = *v1;
  return v2;
}

id sub_1C042BD28()
{
  return FeedBannerAdView.debugView.getter();
}

void sub_1C042BD50()
{
  sub_1C008BF14(qword_1EB871CF8);
  JUMPOUT(0x1C18C4650);
}

void sub_1C042BDA8(id a1, uint64_t a2)
{
  id v5 = &v2[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView];
  swift_beginAccess();
  if (*(void *)v5)
  {
    id v6 = (char *)objc_msgSend(*(id *)v5, sel_superview);
    if (v6)
    {
      objc_super v7 = v6;

      if (v7 == v2)
      {
        id v13 = *(id *)v5;
        if (*(void *)v5)
        {
          if (!a1 || v13 != a1) {
            objc_msgSend(v13, sel_removeFromSuperview);
          }
        }
      }
    }
  }
  id v8 = *(id *)v5;
  *(void *)id v5 = a1;
  *((void *)v5 + 1) = a2;
  id v9 = a1;

  if (*(void *)v5)
  {
    id v10 = *(id *)v5;
    unint64_t v11 = (char *)objc_msgSend(v10, sel_superview);
    if (!v11 || (objc_super v12 = v11, v11, v12 != v2)) {
      objc_msgSend(v2, sel_addSubview_, v10);
    }
  }
}

id sub_1C042BEB4@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  id v3 = (long long *)(*a1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  long long v4 = *v3;
  *a2 = *v3;
  return (id)v4;
}

id sub_1C042BF20@<X0>(void *a1@<X8>)
{
  id result = FeedBannerAdView.debugView.getter();
  *a1 = result;
  return result;
}

void sub_1C042BF4C(void **a1, void *a2)
{
  id v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView);
  *(void *)(*a2 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView) = *a1;
  id v3 = v2;
}

uint64_t FormatProgressViewNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatProgressViewNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.progressColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatProgressViewNodeStyle.trackColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatProgressViewNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t FormatProgressViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:progressColor:trackColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t *a8, char a9)
{
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *a6;
  uint64_t v19 = *a7;
  uint64_t v20 = *a8;
  swift_beginAccess();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  swift_beginAccess();
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = v18;
  *(void *)(v17 + 64) = v19;
  *(void *)(v17 + 72) = v20;
  *(unsigned char *)(v17 + 80) = a9;
  return v17;
}

uint64_t FormatProgressViewNodeStyle.init(identifier:class:selectors:alpha:progressColor:trackColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t *a8, char a9)
{
  uint64_t v15 = *a6;
  uint64_t v16 = *a7;
  uint64_t v17 = *a8;
  swift_beginAccess();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  swift_beginAccess();
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = v15;
  *(void *)(v9 + 64) = v16;
  *(void *)(v9 + 72) = v17;
  *(unsigned char *)(v9 + 80) = a9;
  return v9;
}

uint64_t sub_1C042C330(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  swift_beginAccess();
  uint64_t v131 = v1;
  uint64_t v7 = v1[6];
  swift_beginAccess();
  uint64_t v130 = a1;
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v153 = (void *)MEMORY[0x1E4FBC868];
  int64_t v9 = *(void *)(v7 + 16);
  if (__OFADD__(v9, *(void *)(v8 + 16))) {
    goto LABEL_88;
  }
  int64_t v140 = *(void *)(v8 + 16);
  uint64_t v127 = v5;
  uint64_t v129 = v3;
  sub_1C042E2AC();
  uint64_t v128 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E3AC();
  uint64_t v152 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v126 = v6;
  uint64_t v139 = v8;
  if (!v10) {
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  do
  {
    uint64_t v145 = v11;
    uint64_t v13 = *(void *)(v7 + v11 + 32);
    uint64_t v12 = *(void *)(v7 + v11 + 40);
    uint64_t v15 = *(void *)(v7 + v11 + 48);
    uint64_t v14 = *(void *)(v7 + v11 + 56);
    uint64_t v16 = *(void *)(v7 + v11 + 64);
    char v148 = *(unsigned char *)(v7 + v11 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v14);
    sub_1BFDC11A4(v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v14);
    sub_1BFDC11A4(v16);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = sub_1BFEF2D8C(v13, v12);
    uint64_t v20 = v153[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v23 = v18;
    if (v153[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C106F348();
      }
    }
    else
    {
      sub_1C105B698(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_1BFEF2D8C(v13, v12);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_89;
      }
      unint64_t v19 = v24;
    }
    uint64_t v143 = v10;
    if (v23)
    {
      uint64_t v26 = v153[7] + 48 * v19;
      uint64_t v27 = *(void *)(v26 + 24);
      uint64_t v28 = *(void *)(v26 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFDC11BC(v27);
      sub_1BFDC11BC(v28);
      *(void *)uint64_t v26 = v13;
      *(void *)(v26 + 8) = v12;
      *(void *)(v26 + 16) = v15;
      *(void *)(v26 + 24) = v14;
      *(void *)(v26 + 32) = v16;
      *(unsigned char *)(v26 + 40) = v148;
    }
    else
    {
      v153[(v19 >> 6) + 8] |= 1 << v19;
      uint64_t v29 = (uint64_t *)(v153[6] + 16 * v19);
      *uint64_t v29 = v13;
      v29[1] = v12;
      uint64_t v30 = v153[7] + 48 * v19;
      *(void *)uint64_t v30 = v13;
      *(void *)(v30 + 8) = v12;
      *(void *)(v30 + 16) = v15;
      *(void *)(v30 + 24) = v14;
      *(void *)(v30 + 32) = v16;
      *(unsigned char *)(v30 + 40) = v148;
      uint64_t v31 = v153[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_84;
      }
      v153[2] = v33;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v34 = v152[2];
    unint64_t v35 = v152[3];
    swift_bridgeObjectRetain();
    if (v34 >= v35 >> 1) {
      uint64_t v152 = sub_1BFEF692C((void *)(v35 > 1), v34 + 1, 1, v152);
    }
    v152[2] = v34 + 1;
    int v36 = &v152[2 * v34];
    v36[4] = v13;
    v36[5] = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDC11BC(v14);
    sub_1BFDC11BC(v16);
    uint64_t v11 = v145 + 48;
    uint64_t v10 = v143 - 1;
  }
  while (v143 != 1);
  swift_bridgeObjectRelease();
  uint64_t v8 = v139;
LABEL_18:
  int v37 = sub_1BFEF692C(0, v140, 0, MEMORY[0x1E4FBC860]);
  uint64_t v38 = *(void *)(v8 + 16);
  if (!v38) {
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = 0;
  while (2)
  {
    uint64_t v43 = v8 + v39;
    uint64_t v45 = *(void *)(v8 + v39 + 32);
    uint64_t v44 = *(void *)(v8 + v39 + 40);
    uint64_t v46 = *(void *)(v8 + v39 + 48);
    uint64_t v47 = *(void *)(v8 + v39 + 56);
    uint64_t v48 = *(void *)(v8 + v39 + 64);
    char v146 = *(unsigned char *)(v43 + 72);
    uint64_t v49 = v153[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v47);
    sub_1BFDC11A4(v48);
    uint64_t v144 = v38;
    if (!v49)
    {
LABEL_39:
      uint64_t v142 = v39;
      unint64_t v73 = v37;
      swift_bridgeObjectRetain();
      uint64_t v74 = v46;
      swift_bridgeObjectRetain();
      uint64_t v75 = v47;
      sub_1BFDC11A4(v47);
      uint64_t v150 = v48;
      sub_1BFDC11A4(v48);
      swift_bridgeObjectRetain();
      char v76 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v78 = sub_1BFEF2D8C(v45, v44);
      uint64_t v79 = v153[2];
      BOOL v80 = (v77 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80)) {
        goto LABEL_83;
      }
      char v82 = v77;
      if (v153[3] < v81)
      {
        sub_1C105B698(v81, v76);
        unint64_t v83 = sub_1BFEF2D8C(v45, v44);
        if ((v82 & 1) != (v84 & 1)) {
          goto LABEL_89;
        }
        unint64_t v78 = v83;
        uint64_t v85 = v153;
        if ((v82 & 1) == 0) {
          goto LABEL_52;
        }
LABEL_46:
        uint64_t v86 = v85[7] + 48 * v78;
        uint64_t v87 = *(void *)(v86 + 24);
        uint64_t v88 = *(void *)(v86 + 32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDC11BC(v87);
        sub_1BFDC11BC(v88);
        *(void *)uint64_t v86 = v45;
        *(void *)(v86 + 8) = v44;
        *(void *)(v86 + 16) = v74;
        *(void *)(v86 + 24) = v75;
        *(void *)(v86 + 32) = v150;
        *(unsigned char *)(v86 + 40) = v146;
LABEL_54:
        uint64_t v153 = v85;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v37 = v73;
        unint64_t v97 = v73[2];
        unint64_t v98 = v73[3];
        swift_bridgeObjectRetain();
        if (v97 >= v98 >> 1) {
          int v37 = sub_1BFEF692C((void *)(v98 > 1), v97 + 1, 1, v73);
        }
        uint64_t v8 = v139;
        uint64_t v39 = v142;
        v37[2] = v97 + 1;
        uint64_t v99 = &v37[2 * v97];
        v99[4] = v45;
        v99[5] = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDC11BC(v75);
        sub_1BFDC11BC(v150);
        uint64_t v60 = v144;
        goto LABEL_22;
      }
      if (v76)
      {
        uint64_t v85 = v153;
        if (v77) {
          goto LABEL_46;
        }
      }
      else
      {
        sub_1C106F348();
        uint64_t v85 = v153;
        if (v82) {
          goto LABEL_46;
        }
      }
LABEL_52:
      v85[(v78 >> 6) + 8] |= 1 << v78;
      unint64_t v93 = (uint64_t *)(v85[6] + 16 * v78);
      *unint64_t v93 = v45;
      v93[1] = v44;
      uint64_t v94 = v85[7] + 48 * v78;
      *(void *)uint64_t v94 = v45;
      *(void *)(v94 + 8) = v44;
      *(void *)(v94 + 16) = v74;
      *(void *)(v94 + 24) = v75;
      *(void *)(v94 + 32) = v150;
      *(unsigned char *)(v94 + 40) = v146;
      uint64_t v95 = v85[2];
      BOOL v32 = __OFADD__(v95, 1);
      uint64_t v96 = v95 + 1;
      if (v32) {
        goto LABEL_85;
      }
      v85[2] = v96;
      swift_bridgeObjectRetain();
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    unint64_t v50 = sub_1BFEF2D8C(v45, v44);
    if ((v51 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
    uint64_t v136 = v37;
    uint64_t v52 = v153[7] + 48 * v50;
    uint64_t v53 = *(void *)(v52 + 8);
    uint64_t v149 = *(void *)v52;
    uint64_t v55 = *(void *)(v52 + 16);
    uint64_t v54 = *(void *)(v52 + 24);
    uint64_t v56 = *(void *)(v52 + 32);
    int v135 = *(unsigned __int8 *)(v52 + 40);
    swift_bridgeObjectRetain();
    uint64_t v141 = v53;
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v54);
    uint64_t v138 = v56;
    sub_1BFDC11A4(v56);
    swift_bridgeObjectRelease();
    uint64_t v57 = v55;
    if (!v55)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = v46;
    }
    uint64_t v134 = v57;
    uint64_t v58 = v54;
    uint64_t v137 = v54;
    if ((~v54 & 0xF000000000000007) == 0)
    {
      sub_1BFDC11A4(v47);
      uint64_t v58 = v47;
    }
    uint64_t v132 = v47;
    uint64_t v133 = v58;
    uint64_t v59 = v56;
    uint64_t v60 = v144;
    if ((~v56 & 0xF000000000000007) == 0)
    {
      sub_1BFDC11A4(v48);
      uint64_t v59 = v48;
    }
    uint64_t v61 = v48;
    char v62 = v146;
    if (v135 != 2) {
      char v62 = v135;
    }
    char v147 = v62;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v137);
    sub_1BFDC11A4(v56);
    char v63 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v65 = sub_1BFEF2D8C(v149, v53);
    uint64_t v66 = v153[2];
    BOOL v67 = (v64 & 1) == 0;
    uint64_t v68 = v66 + v67;
    if (__OFADD__(v66, v67)) {
      goto LABEL_86;
    }
    char v69 = v64;
    if (v153[3] >= v68)
    {
      if (v63)
      {
        uint64_t v72 = v153;
        if ((v64 & 1) == 0) {
          goto LABEL_49;
        }
      }
      else
      {
        sub_1C106F348();
        uint64_t v72 = v153;
        if ((v69 & 1) == 0) {
          goto LABEL_49;
        }
      }
      goto LABEL_20;
    }
    sub_1C105B698(v68, v63);
    unint64_t v70 = sub_1BFEF2D8C(v149, v53);
    if ((v69 & 1) != (v71 & 1)) {
      goto LABEL_89;
    }
    unint64_t v65 = v70;
    uint64_t v72 = v153;
    if (v69)
    {
LABEL_20:
      uint64_t v40 = v72[7] + 48 * v65;
      uint64_t v41 = *(void *)(v40 + 24);
      uint64_t v42 = *(void *)(v40 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFDC11BC(v41);
      sub_1BFDC11BC(v42);
      *(void *)uint64_t v40 = v149;
      *(void *)(v40 + 8) = v141;
      *(void *)(v40 + 16) = v134;
      *(void *)(v40 + 24) = v133;
      *(void *)(v40 + 32) = v59;
      *(unsigned char *)(v40 + 40) = v147;
      goto LABEL_21;
    }
LABEL_49:
    v72[(v65 >> 6) + 8] |= 1 << v65;
    uint64_t v89 = (uint64_t *)(v72[6] + 16 * v65);
    *uint64_t v89 = v149;
    v89[1] = v53;
    uint64_t v90 = v72[7] + 48 * v65;
    *(void *)uint64_t v90 = v149;
    *(void *)(v90 + 8) = v53;
    *(void *)(v90 + 16) = v134;
    *(void *)(v90 + 24) = v133;
    *(void *)(v90 + 32) = v59;
    *(unsigned char *)(v90 + 40) = v147;
    uint64_t v91 = v72[2];
    BOOL v32 = __OFADD__(v91, 1);
    uint64_t v92 = v91 + 1;
    if (v32) {
      goto LABEL_87;
    }
    void v72[2] = v92;
    swift_bridgeObjectRetain();
LABEL_21:
    uint64_t v153 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1BFDC11BC(v137);
    sub_1BFDC11BC(v138);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDC11BC(v132);
    sub_1BFDC11BC(v61);
    uint64_t v8 = v139;
    int v37 = v136;
LABEL_22:
    v39 += 48;
    uint64_t v38 = v60 - 1;
    if (v38) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_60:
  swift_bridgeObjectRetain();
  uint64_t v100 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v100);
  uint64_t v101 = v37[2];
  if (v101)
  {
    swift_bridgeObjectRetain();
    uint64_t v102 = v37 + 5;
    uint64_t v151 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (v153[2])
      {
        uint64_t v103 = *(v102 - 1);
        uint64_t v104 = *v102;
        swift_bridgeObjectRetain_n();
        unint64_t v105 = sub_1BFEF2D8C(v103, v104);
        if (v106)
        {
          uint64_t v107 = v153[7] + 48 * v105;
          uint64_t v109 = *(void *)v107;
          uint64_t v108 = *(void *)(v107 + 8);
          uint64_t v110 = *(void *)(v107 + 16);
          uint64_t v111 = *(void *)(v107 + 24);
          uint64_t v112 = *(void *)(v107 + 32);
          char v113 = *(unsigned char *)(v107 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFDC11A4(v111);
          sub_1BFDC11A4(v112);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v151 = sub_1C0EE1918(0, v151[2] + 1, 1, v151);
          }
          unint64_t v115 = v151[2];
          unint64_t v114 = v151[3];
          if (v115 >= v114 >> 1) {
            uint64_t v151 = sub_1C0EE1918((void *)(v114 > 1), v115 + 1, 1, v151);
          }
          v151[2] = v115 + 1;
          uint64_t v116 = &v151[6 * v115];
          v116[4] = v109;
          v116[5] = v108;
          v116[6] = v110;
          v116[7] = v111;
          v116[8] = v112;
          *((unsigned char *)v116 + 72) = v113;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v102 += 2;
      --v101;
    }
    while (v101);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v151 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v117 = v131;
  uint64_t v118 = v131[7];
  if (!v118)
  {
    uint64_t v118 = *(void *)(v130 + 56);
    swift_bridgeObjectRetain();
    uint64_t v117 = v131;
  }
  uint64_t v119 = v117[8];
  uint64_t v120 = v119;
  if ((~v119 & 0xF000000000000007) == 0)
  {
    uint64_t v120 = *(void *)(v130 + 64);
    sub_1BFDC11A4(v120);
    uint64_t v117 = v131;
  }
  uint64_t v121 = v117[9];
  uint64_t v122 = v121;
  if ((~v121 & 0xF000000000000007) == 0)
  {
    uint64_t v122 = *(void *)(v130 + 72);
    sub_1BFDC11A4(v122);
    uint64_t v117 = v131;
  }
  int v123 = *((unsigned __int8 *)v117 + 80);
  if (v123 == 2) {
    LOBYTE(v123) = *(unsigned char *)(v130 + 80);
  }
  uint64_t v124 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v124 + 16) = v129;
  *(void *)(v124 + 24) = v128;
  *(void *)(v124 + 32) = v127;
  *(void *)(v124 + 40) = v126;
  swift_beginAccess();
  *(void *)(v124 + 48) = v151;
  *(void *)(v124 + 56) = v118;
  *(void *)(v124 + 64) = v120;
  *(void *)(v124 + 72) = v122;
  *(unsigned char *)(v124 + 80) = v123;
  swift_bridgeObjectRetain();
  sub_1BFDC11A4(v119);
  sub_1BFDC11A4(v121);
  return v124;
}

uint64_t sub_1C042CF68(uint64_t a1)
{
  uint64_t v88 = a1;
  uint64_t v89 = 0;
  v90[6] = *MEMORY[0x1E4F143B8];
  uint64_t v78 = *v1;
  swift_beginAccess();
  uint64_t v72 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v74 = sub_1C0EE1918(0, v3, 0, MEMORY[0x1E4FBC860]);
  unint64_t v73 = sub_1C0EE17F0(0, v3, 0, v4);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v75 = v2;
  uint64_t v77 = v5;
  if (!v5)
  {
LABEL_30:
    sub_1C042E310();
    uint64_t v42 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void *)(v42 + 16);
    uint64_t v88 = v42;
    if (v43)
    {
      uint64_t v44 = v42 + 40;
      uint64_t v45 = v74;
      do
      {
        uint64_t v46 = *(void *)v44;
        uint64_t v89 = *(void **)(v44 - 8);
        uint64_t v47 = *(void *)(v44 + 8);
        uint64_t v48 = *(void *)(v44 + 16);
        uint64_t v49 = *(void *)(v44 + 24);
        char v50 = *(unsigned char *)(v44 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFDC11A4(v48);
        sub_1BFDC11A4(v49);
        unint64_t v52 = v45[2];
        unint64_t v51 = v45[3];
        if (v52 >= v51 >> 1) {
          uint64_t v45 = sub_1C0EE1918((void *)(v51 > 1), v52 + 1, 1, v45);
        }
        v44 += 56;
        v45[2] = v52 + 1;
        uint64_t v53 = &v45[6 * v52];
        v53[4] = v89;
        v53[5] = v46;
        v53[6] = v47;
        v53[7] = v48;
        v53[8] = v49;
        *((unsigned char *)v53 + 72) = v50;
        --v43;
      }
      while (v43);
    }
    else
    {
      uint64_t v45 = v74;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v45[2];
    if (v54)
    {
      uint64_t v55 = v72;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v74 = v45;
      uint64_t v56 = (unsigned __int8 *)(v45 + 9);
      do
      {
        uint64_t v58 = *((void *)v56 - 3);
        uint64_t v57 = *((void *)v56 - 2);
        uint64_t v59 = *((void *)v56 - 1);
        LODWORD(v89) = *v56;
        uint64_t v60 = swift_allocObject();
        swift_beginAccess();
        uint64_t v61 = v55;
        uint64_t v63 = v55[2];
        uint64_t v62 = v55[3];
        swift_beginAccess();
        *(void *)(v60 + 16) = v63;
        *(void *)(v60 + 24) = v62;
        uint64_t v88 = v62;
        uint64_t v64 = v61[5];
        *(void *)(v60 + 32) = v61[4];
        *(void *)(v60 + 40) = v64;
        swift_beginAccess();
        unint64_t v65 = v61;
        uint64_t v66 = v61[6];
        swift_beginAccess();
        *(void *)(v60 + 48) = v66;
        uint64_t v67 = v58;
        if (!v58) {
          uint64_t v67 = swift_bridgeObjectRetain();
        }
        *(void *)(v60 + 56) = v67;
        uint64_t v68 = v57;
        if ((~v57 & 0xF000000000000007) == 0)
        {
          uint64_t v68 = v65[8];
          sub_1BFDC11A4(v68);
        }
        *(void *)(v60 + 64) = v68;
        uint64_t v69 = v59;
        if ((~v59 & 0xF000000000000007) == 0)
        {
          uint64_t v69 = v65[9];
          sub_1BFDC11A4(v69);
        }
        *(void *)(v60 + 72) = v69;
        char v70 = (char)v89;
        if (v89 == 2) {
          char v70 = *((unsigned char *)v65 + 80);
        }
        v56 += 48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFDC11A4(v57);
        sub_1BFDC11A4(v59);
        swift_release();
        *(unsigned char *)(v60 + 80) = v70;
        uint64_t v55 = (void *)v60;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v60 = (uint64_t)v72;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v60;
  }
  uint64_t v76 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
LABEL_5:
  if (v6 >= *(void *)(v2 + 16)) {
    goto LABEL_52;
  }
  uint64_t v9 = v76 + 48 * v6;
  uint64_t v11 = *(void *)v9;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v8 = *(void *)(v9 + 24);
  uint64_t v7 = *(void *)(v9 + 32);
  int v80 = *(unsigned __int8 *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFDC11A4(v8);
  sub_1BFDC11A4(v7);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  uint64_t v79 = v11;
  v90[0] = v11;
  v90[1] = v10;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1BFEF53C0(v90);
  swift_bridgeObjectRelease();
  uint64_t v87 = *(void *)(v13 + 16);
  if (!v87)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v85 = v12;
  uint64_t v81 = v10;
  uint64_t v82 = v8;
  uint64_t v83 = v7;
  unint64_t v84 = v6;
  unint64_t v14 = 0;
  uint64_t v15 = (uint64_t *)(v13 + 64);
  while (1)
  {
    if (v14 >= *(void *)(v13 + 16))
    {
      __break(1u);
LABEL_52:
      __break(1u);
    }
    uint64_t v86 = *(v15 - 2);
    uint64_t v17 = *(v15 - 1);
    uint64_t v16 = *v15;
    char v18 = *(unsigned char *)(v17 + 32);
    unsigned int v19 = v18 & 0x3F;
    unint64_t v20 = (unint64_t)((1 << v18) + 63) >> 6;
    size_t v21 = 8 * v20;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v19 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    char v23 = (char *)swift_slowAlloc();
    bzero(v23, v21);
    uint64_t v27 = v20;
    char v25 = v89;
    uint64_t v26 = sub_1BFEFB09C((uint64_t)v23, v27, v17, v88);
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_54;
    }
    uint64_t v89 = 0;
    MEMORY[0x1C18C9B00](v23, -1, -1);
LABEL_18:
    char v28 = sub_1BFEFAE14(v26, v17);
    swift_release();
    if (v28 & 1) != 0 && (sub_1BFEFB810(v88, v16))
    {
      swift_bridgeObjectRelease();
      if (v86 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = v81;
        swift_bridgeObjectRetain();
        uint64_t v37 = v85;
        swift_bridgeObjectRetain();
        uint64_t v8 = v82;
        sub_1BFDC11A4(v82);
        uint64_t v7 = v83;
        sub_1BFDC11A4(v83);
        uint64_t v38 = v74;
        unint64_t v40 = v74[2];
        unint64_t v39 = v74[3];
        unint64_t v6 = v84;
        if (v40 >= v39 >> 1) {
          uint64_t v38 = sub_1C0EE1918((void *)(v39 > 1), v40 + 1, 1, v74);
        }
        v38[2] = v40 + 1;
        uint64_t v74 = v38;
        uint64_t v41 = &v38[6 * v40];
        v41[4] = v79;
        v41[5] = v36;
        v41[6] = v37;
        v41[7] = v8;
        v41[8] = v7;
        *((unsigned char *)v41 + 72) = v80;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v8 = v82;
        sub_1BFDC11A4(v82);
        uint64_t v7 = v83;
        sub_1BFDC11A4(v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = v73;
        unint64_t v32 = v73[2];
        unint64_t v31 = v73[3];
        unint64_t v6 = v84;
        if (v32 >= v31 >> 1) {
          uint64_t v30 = sub_1C0EE17F0((void *)(v31 > 1), v32 + 1, 1, v73);
        }
        char v33 = v80;
        uint64_t v34 = v79;
        v30[2] = v32 + 1;
        unint64_t v73 = v30;
        unint64_t v35 = &v30[7 * v32];
        v35[4] = v34;
        v35[5] = v29;
        v35[6] = v85;
        v35[7] = v8;
        v35[8] = v7;
        *((unsigned char *)v35 + 72) = v33;
        v35[10] = v86;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v2 = v75;
LABEL_4:
      ++v6;
      sub_1BFDC11BC(v8);
      sub_1BFDC11BC(v7);
      if (v6 == v77)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      goto LABEL_5;
    }
    ++v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 += 5;
    if (v87 == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v75;
      unint64_t v6 = v84;
      uint64_t v7 = v83;
      uint64_t v8 = v82;
      goto LABEL_4;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  char v23 = (char *)&v72 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v23, v21);
  uint64_t v24 = v20;
  char v25 = v89;
  uint64_t v26 = sub_1BFEFB09C((uint64_t)v23, v24, v17, v88);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    uint64_t v89 = 0;
    goto LABEL_18;
  }
  swift_willThrow();

  __break(1u);
LABEL_54:

  uint64_t result = MEMORY[0x1C18C9B00](v23, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C042D874()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0)
  {
    sub_1C10E55EC(v12);
    uint64_t v6 = v12[0];
  }
  uint64_t v7 = *(void *)(v0 + 72);
  if ((~v7 & 0xF000000000000007) != 0)
  {
    sub_1C10E55EC(v12);
    uint64_t v7 = v12[0];
  }
  char v8 = *(unsigned char *)(v0 + 80);
  uint64_t v9 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v9 + 16) = v11;
  *(void *)(v9 + 24) = v1;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v2;
  swift_beginAccess();
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v5;
  *(void *)(v9 + 64) = v6;
  *(void *)(v9 + 72) = v7;
  *(unsigned char *)(v9 + 80) = v8;
  return v9;
}

uint64_t FormatProgressViewNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDC11BC(*(void *)(v0 + 64));
  sub_1BFDC11BC(*(void *)(v0 + 72));
  return v0;
}

uint64_t FormatProgressViewNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDC11BC(*(void *)(v0 + 64));
  sub_1BFDC11BC(*(void *)(v0 + 72));
  return swift_deallocClassInstance();
}

BOOL sub_1C042DAAC(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed27FormatProgressViewNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatProgressViewNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.Selector.progressColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatProgressViewNodeStyle.Selector.trackColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatProgressViewNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1C042DAF8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 48);
  return result;
}

uint64_t _s8NewsFeed27FormatProgressViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v10 = sub_1C1520A9C(), result = 0, (v10 & 1) != 0))
  {
    if (v2)
    {
      if (!v7) {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = sub_1C00DE998(v2, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        return 0;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if ((~v4 & 0xF000000000000007) != 0)
    {
      uint64_t v17 = v4;
      if ((~v6 & 0xF000000000000007) != 0)
      {
        uint64_t v16 = v6;
        swift_retain_n();
        char v14 = static FormatColor.== infix(_:_:)(&v17, (unint64_t *)&v16);
        swift_release();
        sub_1BFDC11BC(v4);
        if ((v14 & 1) == 0) {
          return 0;
        }
        goto LABEL_16;
      }
      swift_retain();
    }
    else if ((~v6 & 0xF000000000000007) == 0)
    {
LABEL_16:
      if ((~v3 & 0xF000000000000007) != 0)
      {
        uint64_t v17 = v3;
        if ((~v8 & 0xF000000000000007) != 0)
        {
          uint64_t v16 = v8;
          swift_retain_n();
          char v15 = static FormatColor.== infix(_:_:)(&v17, (unint64_t *)&v16);
          swift_release();
          sub_1BFDC11BC(v3);
          if ((v15 & 1) == 0) {
            return 0;
          }
          goto LABEL_26;
        }
        swift_retain();
      }
      else if ((~v8 & 0xF000000000000007) == 0)
      {
LABEL_26:
        if (v5 == 2)
        {
          if (v9 == 2) {
            return 1;
          }
        }
        else if (v9 != 2 && ((((v5 & 1) == 0) ^ v9) & 1) != 0)
        {
          return 1;
        }
        return 0;
      }
      sub_1BFDC11A4(v8);
      sub_1BFDC11BC(v3);
      uint64_t v13 = v8;
LABEL_22:
      sub_1BFDC11BC(v13);
      return 0;
    }
    sub_1BFDC11A4(v6);
    sub_1BFDC11BC(v4);
    uint64_t v13 = v6;
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1C042DD08(uint64_t a1)
{
  uint64_t result = sub_1C042DE40(&qword_1EA19B548);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C042DD4C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C042DE40(qword_1EB868270);
  uint64_t result = sub_1C042DE40(&qword_1EB868268);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C042DDB4(void *a1)
{
  a1[1] = sub_1C042DE40(qword_1EB868270);
  a1[2] = sub_1C042DE40(&qword_1EB868268);
  uint64_t result = sub_1C042DE40(&qword_1EA19B550);
  a1[3] = result;
  return result;
}

uint64_t sub_1C042DE40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatProgressViewNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C042DE80(uint64_t a1)
{
  unint64_t result = sub_1C042DEA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C042DEA8()
{
  unint64_t result = qword_1EA19B558;
  if (!qword_1EA19B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B558);
  }
  return result;
}

unint64_t sub_1C042DEFC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C006C4C8();
  unint64_t result = sub_1C006C51C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C042DF2C(void *a1)
{
  a1[1] = sub_1C006C4C8();
  a1[2] = sub_1C006C51C();
  unint64_t result = sub_1C042DF64();
  a1[3] = result;
  return result;
}

unint64_t sub_1C042DF64()
{
  unint64_t result = qword_1EA19B560;
  if (!qword_1EA19B560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B560);
  }
  return result;
}

uint64_t sub_1C042DFB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C042E008@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatProgressViewNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatProgressViewNodeStyle);
}

uint64_t dispatch thunk of FormatProgressViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:progressColor:trackColor:ignoresSmartInvertColors:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t assignWithCopy for FormatProgressViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1C036EDB0(a1 + 24);
    uint64_t v5 = *(void *)(a2 + 24);
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v7 = (void *)(a1 + 32);
  uint64_t v8 = *(void *)(a2 + 32);
  unint64_t v9 = v8 & 0xF000000000000007;
  if ((~*(void *)(a1 + 32) & 0xF000000000000007) != 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *uint64_t v7 = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_1C036EDB0(a1 + 32);
    uint64_t v8 = *(void *)(a2 + 32);
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
LABEL_13:
    *uint64_t v7 = v8;
    goto LABEL_15;
  }
  *uint64_t v7 = v8;
  swift_retain();
LABEL_15:
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FormatProgressViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0(a1 + 24);
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  uint64_t v7 = (void *)(a1 + 32);
  uint64_t v8 = *(void *)(a2 + 32);
  if ((~*(void *)(a1 + 32) & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *uint64_t v7 = v8;
      swift_release();
      goto LABEL_11;
    }
    sub_1C036EDB0(a1 + 32);
  }
  *uint64_t v7 = v8;
LABEL_11:
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FormatProgressViewNodeStyle.Selector()
{
  return &type metadata for FormatProgressViewNodeStyle.Selector;
}

void sub_1C042E2AC()
{
  if (!qword_1EB861AB8)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861AB8);
    }
  }
}

void sub_1C042E310()
{
  if (!qword_1EB868660)
  {
    sub_1C042E36C();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB868660);
    }
  }
}

unint64_t sub_1C042E36C()
{
  unint64_t result = qword_1EB868260;
  if (!qword_1EB868260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868260);
  }
  return result;
}

void *sub_1C042E3C0(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
  sub_1C0181BEC(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v34 = *(void *)(*(void *)(v4 - 8) + 72);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  uint64_t v8 = (void *)(v7 + v6);
  if (a1)
  {
    unint64_t v9 = *(void *)(a1 + 40);
    uint64_t v33 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(void *)uint64_t v36 = sub_1C042D874();
    memset(&v36[8], 0, 32);
    uint64_t v37 = 0;
    long long v38 = xmmword_1C1548C20;
    uint64_t v10 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)v36, v10 + 16);
    uint64_t v11 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v11 = sub_1C139486C;
    uint64_t v10 = 0;
    uint64_t v33 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v13 = (uint64_t (**)())((char *)v8 + *(int *)(v12 + 24));
  *uint64_t v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(void *)(v7 + v6) = v33;
  v8[2] = 0;
  v8[3] = 0;
  v8[1] = v9;
  char v15 = (char *)v8 + *(int *)(v12 + 28);
  *(void *)char v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = -1;
  uint64_t v16 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v16((uint64_t)v8, 0, 1, v12);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v7, v39);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v17 = swift_allocObject();
  *(void *)(inited + 32) = v17;
  *(void *)(v17 + 48) = v40;
  long long v18 = v39[1];
  *(_OWORD *)(v17 + 16) = v39[0];
  *(_OWORD *)(v17 + 32) = v18;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152C7F0;
  uint64_t v20 = v19 + v6;
  sub_1C0433600(1701869908, 0xE400000000000000, 0x73736572676F7250, 0xED00007765695620, (void *)(v19 + v6));
  unint64_t v35 = v16;
  v16(v19 + v6, 0, 1, v12);
  if (a1)
  {
    uint64_t v21 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v21, (void *)(v20 + v34));
    v35(v20 + v34, 0, 1, v12);
    char v22 = *(unsigned char *)(a1 + 80);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v20 + v34));
    v16(v20 + v34, 0, 1, v12);
    char v22 = 2;
  }
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v22, (void *)(v20 + 2 * v34));
  v35(v20 + 2 * v34, 0, 1, v12);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v19, v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v23 = swift_allocObject();
  *(void *)(inited + 72) = v23;
  *(void *)(v23 + 48) = v42;
  long long v24 = v41[1];
  *(_OWORD *)(v23 + 16) = v41[0];
  *(_OWORD *)(v23 + 32) = v24;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C1527210;
  uint64_t v26 = (void *)(v25 + v6);
  if (a1)
  {
    uint64_t v27 = *(void *)(a1 + 64);
    sub_1BFDC11A4(v27);
    sub_1C0433BC8(0x73736572676F7250, 0xEE00726F6C6F4320, v27, v26);
    v35((uint64_t)v26, 0, 1, v12);
    uint64_t v28 = *(void *)(a1 + 72);
    sub_1BFDC11A4(v28);
  }
  else
  {
    uint64_t v28 = 0xF000000000000007;
    sub_1C0433BC8(0x73736572676F7250, 0xEE00726F6C6F4320, 0xF000000000000007, v26);
    v35((uint64_t)v26, 0, 1, v12);
  }
  sub_1C0433BC8(0x6F43206B63617254, 0xEB00000000726F6CLL, v28, (void *)((char *)v26 + v34));
  v35((uint64_t)v26 + v34, 0, 1, v12);
  sub_1C09BCFA4(0x73736572676F7250, 0xE800000000000000, 0, 0, v25, v36);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 144) = &off_1F1BDEC90;
  uint64_t v29 = swift_allocObject();
  *(void *)(inited + 112) = v29;
  *(void *)(v29 + 48) = *(void *)&v36[32];
  long long v30 = *(_OWORD *)&v36[16];
  *(_OWORD *)(v29 + 16) = *(_OWORD *)v36;
  *(_OWORD *)(v29 + 32) = v30;
  unint64_t v31 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v31;
}

uint64_t sub_1C042EAD0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C042EB18()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

NewsFeed::FormatShineSizer_optional __swiftcall FormatShineSizer.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FormatShineSizer.rawValue.getter()
{
  if (*v0) {
    return 0x7473756A64616E75;
  }
  else {
    return 1702521203;
  }
}

uint64_t sub_1C042EBF8(char *a1, char *a2)
{
  return sub_1C148A63C(*a1, *a2);
}

unint64_t sub_1C042EC08()
{
  unint64_t result = qword_1EA19B568;
  if (!qword_1EA19B568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B568);
  }
  return result;
}

uint64_t sub_1C042EC5C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C042ECDC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C042ED48()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatShineSizer_optional sub_1C042EDC4(Swift::String *a1)
{
  return FormatShineSizer.init(rawValue:)(*a1);
}

void sub_1C042EDD0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702521203;
  if (*v1) {
    uint64_t v2 = 0x7473756A64616E75;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006465;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1C042EE0C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C042EE3C();
  unint64_t result = sub_1C042EE90();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C042EE3C()
{
  unint64_t result = qword_1EA19B570;
  if (!qword_1EA19B570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B570);
  }
  return result;
}

unint64_t sub_1C042EE90()
{
  unint64_t result = qword_1EA19B578;
  if (!qword_1EA19B578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B578);
  }
  return result;
}

unint64_t sub_1C042EEE4(uint64_t a1)
{
  unint64_t result = sub_1C042EF0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C042EF0C()
{
  unint64_t result = qword_1EA19B580;
  if (!qword_1EA19B580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B580);
  }
  return result;
}

unint64_t sub_1C042EF60(void *a1)
{
  a1[1] = sub_1C042EF98();
  a1[2] = sub_1C042EFEC();
  unint64_t result = sub_1C042EC08();
  a1[3] = result;
  return result;
}

unint64_t sub_1C042EF98()
{
  unint64_t result = qword_1EA19B588;
  if (!qword_1EA19B588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B588);
  }
  return result;
}

unint64_t sub_1C042EFEC()
{
  unint64_t result = qword_1EA19B590;
  if (!qword_1EA19B590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B590);
  }
  return result;
}

uint64_t sub_1C042F040()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C042F0A0(void *a1)
{
  return FormatShineSizer.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatShineSizer(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C042F184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatShineSizer()
{
  return &type metadata for FormatShineSizer;
}

uint64_t sub_1C042F1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  char v10 = a4 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (void *)((char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = a3;
  char v32 = v10;
  if (a4)
  {
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    char v15 = (char *)a5 + *(int *)(v14 + 24);
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    char v22 = (char *)a5 + *(int *)(v14 + 28);
    *(void *)char v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v18 = MEMORY[0x1E4FBC958];
  if (swift_dynamicCast())
  {
    uint64_t v19 = v28;
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v20 = (void *)((char *)a5 + *(int *)(v14 + 24));
    *uint64_t v20 = v19;
    uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
    goto LABEL_5;
  }
  uint64_t v29 = v18;
  unint64_t v30 = sub_1C0444E98();
  *(void *)&long long v28 = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  *uint64_t v13 = sub_1C151EF4C();
  v13[1] = v23;
  uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 0, 1, v24);
  *a5 = a1;
  a5[1] = a2;
  uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v25 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v26 = (char *)a5 + *(int *)(v25 + 28);
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  v26[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C042F458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  if (!a3)
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a6 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_11:
    *a6 = a1;
    a6[1] = a2;
    uint64_t v26 = (int *)(v18 + 28);
    a6[2] = 0;
    a6[3] = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C131B4D4(v12);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = 64;
    do
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_1C1047634(v16);
      v15 += 40;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    uint64_t v17 = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v27 = (char *)a6 + *(int *)(v18 + 24);
    uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v23 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v24 = (void *)((char *)a6 + *(int *)(v23 + 24));
  *uint64_t v24 = a3;
  v24[1] = a4;
  void v24[2] = a5;
  uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = a1;
  a6[1] = a2;
  uint64_t v26 = (int *)(v23 + 28);
  a6[2] = a4;
  a6[3] = a5;
LABEL_12:
  uint64_t v29 = (char *)a6 + *v26;
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1C042F6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (void *)((char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = a3;
  if (a3)
  {
    sub_1C044594C(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    uint64_t v12 = v11;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v13 = v30;
      uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v15 = (void *)((char *)a4 + *(int *)(v14 + 24));
      *uint64_t v15 = v13;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v17 = (char *)a4 + *(int *)(v14 + 28);
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      uint64_t v31 = v12;
      unint64_t v32 = sub_1C0445208();
      *(void *)&long long v30 = v33;
      sub_1BFC773DC(&v30, (uint64_t)v29);
      uint64_t v23 = *__swift_project_boxed_opaque_existential_1(v29, v29[3]);
      swift_bridgeObjectRetain();
      *char v10 = sub_1C0BA9458(v23);
      v10[1] = v24;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v27 = (char *)a4 + *(int *)(v26 + 28);
      *(void *)uint64_t v27 = 0;
      *((void *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a4 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = (char *)a4 + *(int *)(v18 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1C042F9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444EEC(a3, (uint64_t)v19, (unint64_t *)&qword_1EA1983A8, (uint64_t)&type metadata for FormatInspectionBinding);
  if (v20)
  {
    sub_1C0223798((uint64_t)v19, (uint64_t)v18);
    sub_1C0444F6C(a3, (unint64_t *)&qword_1EA1983A8, (uint64_t)&type metadata for FormatInspectionBinding);
    uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v9 = (_OWORD *)((char *)a4 + *(int *)(v8 + 24));
    long long v10 = v18[1];
    *uint64_t v9 = v18[0];
    v9[1] = v10;
    uint64_t v11 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v12 = (char *)a4 + *(int *)(v8 + 28);
    *(void *)uint64_t v12 = 0;
    *((void *)v12 + 1) = 0;
    v12[16] = -1;
    return sub_1C02237F4((uint64_t)v19);
  }
  else
  {
    sub_1C0444F6C(a3, (unint64_t *)&qword_1EA1983A8, (uint64_t)&type metadata for FormatInspectionBinding);
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v15 = (char *)a4 + *(int *)(v14 + 24);
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v17 = (char *)a4 + *(int *)(v14 + 28);
    *(void *)uint64_t v17 = 0;
    *((void *)v17 + 1) = 0;
    v17[16] = -1;
  }
  return result;
}

uint64_t sub_1C042FB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v294 = sub_1C151CA7C();
  uint64_t v291 = *(void *)(v294 - 8);
  MEMORY[0x1F4188790](v294);
  uint64_t v293 = (char *)&v290 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v292 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v292);
  uint64_t v295 = (uint64_t)&v290 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatInspectionFeedGroupItem();
  MEMORY[0x1F4188790](v10);
  *(void *)&long long v296 = (char *)&v290 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v12 - 8);
  *(void *)&long long v297 = (char *)&v290 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C1515FDC();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v290 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1E4FBC840] + 8;
  sub_1C0444EEC(a3, (uint64_t)&v314, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
  if (!v315)
  {
    sub_1C0444F6C(a3, (unint64_t *)&qword_1EB87A940, v18);
    uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v28 = (char *)a4 + *(int *)(v27 + 24);
    uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v31 = (char *)a4 + *(int *)(v27 + 28);
    goto LABEL_7;
  }
  uint64_t v300 = a4;
  *(void *)&long long v301 = a3;
  uint64_t v298 = a1;
  uint64_t v299 = a2;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v32 = MEMORY[0x1E4FBC840];
    uint64_t v33 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      uint64_t v34 = *(void *)&v302[0];
      uint64_t v35 = (*(void *)&v302[0] >> 58) & 0x38;
      uint64_t v36 = *(void *)&aSystem_6[v35];
      uint64_t v37 = *(void *)((char *)&unk_1C1549330 + v35);
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v33);
      uint64_t v38 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v39 = v300;
      uint64_t v40 = (uint64_t *)((char *)v300 + *(int *)(v38 + 24));
      *uint64_t v40 = v34;
      uint64_t v41 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
      uint64_t v42 = v299;
      *unint64_t v39 = v298;
      v39[1] = v42;
      _OWORD v39[2] = v36;
      uint64_t v39[3] = v37;
LABEL_10:
      uint64_t v43 = *(int *)(v38 + 28);
LABEL_11:
      uint64_t v26 = (char *)v39 + v43;
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
      char v44 = v302[0];
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      *uint64_t v22 = v44;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
      uint64_t v45 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v39 = v300;
      uint64_t v46 = (char *)v300 + *(int *)(v45 + 24);
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v46, v17, v14);
      uint64_t v47 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
      uint64_t v48 = v299;
      *unint64_t v39 = v298;
      v39[1] = v48;
      _OWORD v39[2] = 0;
      uint64_t v39[3] = 0;
      uint64_t v43 = *(int *)(v45 + 28);
      goto LABEL_11;
    }
    if (swift_dynamicCast())
    {
      long long v49 = v302[0];
      uint64_t v50 = *(void *)&v302[1];
      uint64_t v51 = sub_1C131B4D4(*(uint64_t *)&v302[0]);
      unint64_t v311 = MEMORY[0x1E4FBC860];
      uint64_t v52 = *(void *)(v51 + 16);
      if (v52)
      {
        swift_bridgeObjectRetain();
        uint64_t v53 = 64;
        uint64_t v54 = v300;
        uint64_t v55 = v298;
        do
        {
          uint64_t v56 = swift_bridgeObjectRetain();
          sub_1C1047634(v56);
          v53 += 40;
          --v52;
        }
        while (v52);
        swift_bridgeObjectRelease_n();
        unint64_t v57 = v311;
        uint64_t v32 = MEMORY[0x1E4FBC840];
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v57 = MEMORY[0x1E4FBC860];
        uint64_t v54 = v300;
        uint64_t v55 = v298;
      }
      uint64_t v66 = *(void *)(v57 + 16);
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
      swift_bridgeObjectRelease();
      if (v66)
      {
        uint64_t v67 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v68 = (char *)v54 + *(int *)(v67 + 24);
        *(_OWORD *)uint64_t v68 = v49;
        *((void *)v68 + 2) = v50;
        uint64_t v69 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
        uint64_t v70 = v299;
        *uint64_t v54 = v55;
        v54[1] = v70;
        _OWORD v54[2] = *((void *)&v49 + 1);
        v54[3] = v50;
        char v71 = (char *)v54 + *(int *)(v67 + 28);
        *(void *)char v71 = 0;
        *((void *)v71 + 1) = 0;
        v71[16] = -1;
        swift_bridgeObjectRetain();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v314);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v72 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v73 = (char *)v54 + *(int *)(v72 + 24);
      uint64_t v74 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 1, 1, v74);
      uint64_t v75 = v299;
      *uint64_t v54 = v55;
      v54[1] = v75;
      _OWORD v54[2] = 0;
      v54[3] = 0;
      goto LABEL_34;
    }
    if (swift_dynamicCast())
    {
      uint64_t v58 = *(void *)&v302[0];
      uint64_t v59 = sub_1C131B4D4(*(uint64_t *)&v302[0]);
      unint64_t v311 = MEMORY[0x1E4FBC860];
      uint64_t v60 = *(void *)(v59 + 16);
      if (v60)
      {
        swift_bridgeObjectRetain();
        uint64_t v61 = 64;
        uint64_t v62 = v300;
        uint64_t v63 = v298;
        do
        {
          uint64_t v64 = swift_bridgeObjectRetain();
          sub_1C1047634(v64);
          v61 += 40;
          --v60;
        }
        while (v60);
        swift_bridgeObjectRelease_n();
        unint64_t v65 = v311;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v65 = MEMORY[0x1E4FBC860];
        uint64_t v62 = v300;
        uint64_t v63 = v298;
      }
      uint64_t v82 = *(void *)(v65 + 16);
      swift_bridgeObjectRelease();
      uint64_t v83 = v299;
      if (v82)
      {
        sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
        uint64_t v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = xmmword_1C1529AE0;
        *(void *)(v84 + 56) = &type metadata for FormatInspection;
        *(void *)(v84 + 64) = &off_1F1C29D30;
        *(void *)(v84 + 32) = v58;
        uint64_t v85 = sub_1C0233FC8(v84);
        swift_setDeallocating();
        sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v86 = sub_1C131B79C(v85);
        swift_bridgeObjectRelease();
        sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
        uint64_t v87 = v297;
        *(void *)long long v297 = v86;
        uint64_t v88 = type metadata accessor for FormatInspectionItem.Value(0);
        *(void *)(v87 + 8) = 0;
        *(void *)(v87 + 16) = 0;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
        *uint64_t v62 = v63;
        v62[1] = v83;
        uint64_t v89 = type metadata accessor for FormatInspectionItem(0);
        v62[2] = 0;
        v62[3] = 0;
        sub_1C0445B7C(v87, (uint64_t)v62 + *(int *)(v89 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      }
      else
      {
        sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
        swift_bridgeObjectRelease();
        uint64_t v89 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v90 = (char *)v62 + *(int *)(v89 + 24);
        uint64_t v91 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 1, 1, v91);
        *uint64_t v62 = v63;
        v62[1] = v83;
        v62[2] = 0;
        v62[3] = 0;
      }
      uint64_t v26 = (char *)v62 + *(int *)(v89 + 28);
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      *(_OWORD *)uint64_t v22 = v302[0];
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      uint64_t v54 = v300;
      uint64_t v76 = v298;
      switch(v311 >> 61)
      {
        case 1uLL:
          uint64_t v167 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v168 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          long long v297 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v169 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          uint64_t v170 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
          uint64_t v171 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          uint64_t v172 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFDB3920(v171);
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v173 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v174 = (char *)v54 + *(int *)(v173 + 24);
          *(void *)uint64_t v174 = v167;
          *((void *)v174 + 1) = v168;
          *((_OWORD *)v174 + 1) = v297;
          *((void *)v174 + 4) = v169;
          *((void *)v174 + 5) = v170;
          *((void *)v174 + 6) = v171;
          *((void *)v174 + 7) = v172;
          uint64_t v175 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v174, 0, 1, v175);
          swift_release();
          uint64_t v176 = v299;
          *uint64_t v54 = v76;
          v54[1] = v176;
          *((_OWORD *)v54 + 1) = xmmword_1C1549030;
          uint64_t v26 = (char *)v54 + *(int *)(v173 + 28);
          goto LABEL_12;
        case 2uLL:
          long long v116 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
          long long v305 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
          v306[0] = v116;
          long long v117 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
          v306[1] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
          long long v307 = v117;
          long long v118 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          v302[0] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v302[1] = v118;
          long long v119 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          long long v303 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          long long v304 = v119;
          sub_1C0445004((uint64_t)v302);
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v120 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v121 = (_OWORD *)((char *)v54 + *(int *)(v120 + 24));
          long long v122 = v306[0];
          v121[4] = v305;
          v121[5] = v122;
          long long v123 = v307;
          v121[6] = v306[1];
          v121[7] = v123;
          long long v124 = v302[1];
          *uint64_t v121 = v302[0];
          v121[1] = v124;
          long long v125 = v304;
          v121[2] = v303;
          v121[3] = v125;
          uint64_t v126 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v121, 0, 1, v126);
          swift_release();
          uint64_t v127 = v299;
          *uint64_t v54 = v76;
          v54[1] = v127;
          long long v128 = xmmword_1C1549020;
          goto LABEL_63;
        case 3uLL:
          uint64_t v129 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1BFF7B774(v129);
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v130 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v131 = (uint64_t *)((char *)v54 + *(int *)(v130 + 24));
          *uint64_t v131 = v129;
          uint64_t v132 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 0, 1, v132);
          swift_release();
          uint64_t v133 = v299;
          *uint64_t v54 = v76;
          v54[1] = v133;
          _OWORD v54[2] = 0xD000000000000012;
          v54[3] = 0x80000001C16101A0;
          goto LABEL_61;
        case 4uLL:
          long long v134 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
          v306[1] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
          long long v307 = v134;
          v308[0] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
          *(_OWORD *)((char *)v308 + 9) = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x99);
          long long v135 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          long long v303 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          long long v304 = v135;
          long long v136 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
          long long v305 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
          v306[0] = v136;
          long long v137 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          v302[0] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v302[1] = v137;
          sub_1C0445120((uint64_t)v302);
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v120 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v138 = (_OWORD *)((char *)v54 + *(int *)(v120 + 24));
          long long v139 = v307;
          v138[6] = v306[1];
          v138[7] = v139;
          v138[8] = v308[0];
          *(_OWORD *)((char *)v138 + 137) = *(_OWORD *)((char *)v308 + 9);
          long long v140 = v304;
          v138[2] = v303;
          v138[3] = v140;
          long long v141 = v306[0];
          v138[4] = v305;
          v138[5] = v141;
          long long v142 = v302[1];
          *uint64_t v138 = v302[0];
          v138[1] = v142;
          uint64_t v143 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v138, 0, 1, v143);
          swift_release();
          uint64_t v144 = v299;
          *uint64_t v54 = v76;
          v54[1] = v144;
          long long v128 = xmmword_1C1549080;
          goto LABEL_63;
        case 5uLL:
          uint64_t v178 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v177 = *(void *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          swift_retain();
          swift_retain();
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v130 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v179 = (uint64_t *)((char *)v54 + *(int *)(v130 + 24));
          *uint64_t v179 = v178;
          v179[1] = v177;
          uint64_t v180 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v180 - 8) + 56))(v179, 0, 1, v180);
          swift_release();
          uint64_t v181 = v299;
          *uint64_t v54 = v76;
          v54[1] = v181;
          *((_OWORD *)v54 + 1) = xmmword_1C1549070;
LABEL_61:
          uint64_t v26 = (char *)v54 + *(int *)(v130 + 28);
          goto LABEL_12;
        case 6uLL:
          long long v182 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
          v306[1] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
          long long v307 = v182;
          v308[0] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
          LOBYTE(v308[1]) = *(unsigned char *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0xA0);
          long long v183 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          long long v303 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          long long v304 = v183;
          long long v184 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
          long long v305 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
          v306[0] = v184;
          long long v185 = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          v302[0] = *(_OWORD *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v302[1] = v185;
          sub_1C0445048((uint64_t)v302);
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v120 = type metadata accessor for FormatInspectionItem(0);
          id v186 = (char *)v54 + *(int *)(v120 + 24);
          long long v187 = v307;
          *((_OWORD *)v186 + 6) = v306[1];
          *((_OWORD *)v186 + 7) = v187;
          *((_OWORD *)v186 + 8) = v308[0];
          v186[144] = v308[1];
          long long v188 = v304;
          *((_OWORD *)v186 + 2) = v303;
          *((_OWORD *)v186 + 3) = v188;
          long long v189 = v306[0];
          *((_OWORD *)v186 + 4) = v305;
          *((_OWORD *)v186 + 5) = v189;
          long long v190 = v302[1];
          *(_OWORD *)id v186 = v302[0];
          *((_OWORD *)v186 + 1) = v190;
          uint64_t v191 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v186, 0, 1, v191);
          swift_release();
          uint64_t v192 = v299;
          *uint64_t v54 = v76;
          v54[1] = v192;
          long long v128 = xmmword_1C1549060;
          goto LABEL_63;
        case 7uLL:
          char v145 = *(unsigned char *)((v311 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v120 = type metadata accessor for FormatInspectionItem(0);
          char v146 = (char *)v54 + *(int *)(v120 + 24);
          *char v146 = v145;
          uint64_t v147 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v146, 0, 1, v147);
          swift_release();
          uint64_t v148 = v299;
          *uint64_t v54 = v76;
          v54[1] = v148;
          long long v128 = xmmword_1C1549050;
LABEL_63:
          *((_OWORD *)v54 + 1) = v128;
          uint64_t v26 = (char *)v54 + *(int *)(v120 + 28);
          break;
        default:
          uint64_t v77 = *(void *)(v311 + 16);
          swift_retain();
          sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v72 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v78 = (uint64_t *)((char *)v54 + *(int *)(v72 + 24));
          *uint64_t v78 = v77;
          uint64_t v79 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 0, 1, v79);
          swift_release();
          uint64_t v80 = v299;
          *uint64_t v54 = v76;
          v54[1] = v80;
          long long v81 = xmmword_1C1549090;
          goto LABEL_65;
      }
      goto LABEL_12;
    }
    char v92 = swift_dynamicCast();
    uint64_t v93 = v301;
    if (v92)
    {
      sub_1BFF6530C((uint64_t)v302, (uint64_t)v310);
      sub_1BFF6530C((uint64_t)v310, (uint64_t)&v311);
      int v94 = sub_1C0444FE8((uint64_t)&v311);
      uint64_t v54 = v300;
      uint64_t v95 = v298;
      switch(v94)
      {
        case 1:
          uint64_t v193 = sub_1C0445038((uint64_t)&v311);
          uint64_t v194 = *(void *)(v193 + 8);
          *(void *)&long long v297 = *(void *)v193;
          long long v296 = *(_OWORD *)(v193 + 16);
          uint64_t v195 = *(void *)(v193 + 32);
          uint64_t v196 = *(void *)(v193 + 40);
          uint64_t v197 = *(void *)(v193 + 48);
          uint64_t v198 = *(void *)(v193 + 56);
          sub_1BFF6530C((uint64_t)v310, (uint64_t)v309);
          uint64_t v199 = *(void *)(sub_1C0445038((uint64_t)v309) + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFDB3920(v199);
          sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
          uint64_t v72 = type metadata accessor for FormatInspectionItem(0);
          long long v200 = (char *)v54 + *(int *)(v72 + 24);
          sub_1C0445894(v310, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
          *(void *)long long v200 = v297;
          *((void *)v200 + 1) = v194;
          *((_OWORD *)v200 + 1) = v296;
          *((void *)v200 + 4) = v195;
          *((void *)v200 + 5) = v196;
          *((void *)v200 + 6) = v197;
          *((void *)v200 + 7) = v198;
          uint64_t v201 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v200, 0, 1, v201);
          uint64_t v202 = v299;
          *uint64_t v54 = v95;
          v54[1] = v202;
          long long v81 = xmmword_1C1549030;
          goto LABEL_65;
        case 2:
          uint64_t v149 = (long long *)sub_1C0445038((uint64_t)&v311);
          sub_1BFF6530C((uint64_t)v310, (uint64_t)v309);
          uint64_t v150 = sub_1C0445038((uint64_t)v309);
          sub_1C0445004(v150);
          sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v72 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v151 = (_OWORD *)((char *)v54 + *(int *)(v72 + 24));
          sub_1C0445894(v310, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
          long long v152 = v149[3];
          long long v154 = *v149;
          long long v153 = v149[1];
          v151[2] = v149[2];
          v151[3] = v152;
          *uint64_t v151 = v154;
          v151[1] = v153;
          long long v155 = v149[7];
          long long v157 = v149[4];
          long long v156 = v149[5];
          v151[6] = v149[6];
          v151[7] = v155;
          v151[4] = v157;
          v151[5] = v156;
          uint64_t v158 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56))(v151, 0, 1, v158);
          uint64_t v159 = v299;
          *uint64_t v54 = v95;
          v54[1] = v159;
          long long v81 = xmmword_1C1549020;
          goto LABEL_65;
        case 3:
          uint64_t v160 = *(void *)sub_1C0445038((uint64_t)&v311);
          sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v72 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v161 = (uint64_t *)((char *)v54 + *(int *)(v72 + 24));
          void *v161 = v160;
          uint64_t v162 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v162 - 8) + 56))(v161, 0, 1, v162);
          uint64_t v163 = v299;
          *uint64_t v54 = v95;
          v54[1] = v163;
          _OWORD v54[2] = 0xD000000000000012;
          v54[3] = 0x80000001C16101A0;
          break;
        default:
          uint64_t v96 = (uint64_t *)sub_1C0445038((uint64_t)&v311);
          uint64_t v97 = *v96;
          uint64_t v98 = v96[1];
          sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, v32 + 8);
          uint64_t v72 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v99 = (uint64_t *)((char *)v54 + *(int *)(v72 + 24));
          swift_retain();
          swift_retain();
          sub_1C0445894(v310, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
          *uint64_t v99 = v97;
          v99[1] = v98;
          uint64_t v100 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v99, 0, 1, v100);
          uint64_t v101 = v299;
          *uint64_t v54 = v95;
          v54[1] = v101;
          long long v81 = xmmword_1C1549040;
LABEL_65:
          *((_OWORD *)v54 + 1) = v81;
          break;
      }
LABEL_34:
      uint64_t v26 = (char *)v54 + *(int *)(v72 + 28);
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, v32 + 8);
      uint64_t v102 = *(void *)&v302[0];
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v102;
      uint64_t v104 = v297;
      *(void *)long long v297 = sub_1C0444FE0;
      *(void *)(v104 + 8) = v103;
      uint64_t v105 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v104, 0, 1, v105);
      char v106 = v300;
      uint64_t v107 = v299;
      *uint64_t v300 = v298;
      v106[1] = v107;
      uint64_t v108 = type metadata accessor for FormatInspectionItem(0);
      v106[2] = 0;
      v106[3] = 0;
      sub_1C0445B7C(v104, (uint64_t)v106 + *(int *)(v108 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v26 = (char *)v106 + *(int *)(v108 + 28);
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, v32 + 8);
      long long v301 = v302[0];
      long long v109 = v302[1];
      unint64_t v111 = *((void *)&v303 + 1);
      unint64_t v110 = v303;
      char v112 = v304;
      uint64_t v38 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v39 = v300;
      char v113 = (char *)v300 + *(int *)(v38 + 24);
      *(_OWORD *)char v113 = v301;
      *((_OWORD *)v113 + 1) = v109;
      *((_OWORD *)v113 + 2) = __PAIR128__(v111, v110);
      v113[48] = v112;
      uint64_t v114 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_50:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v113, 0, 1, v114);
      uint64_t v115 = v299;
      *unint64_t v39 = v298;
      v39[1] = v115;
      _OWORD v39[2] = 0;
      uint64_t v39[3] = 0;
      goto LABEL_10;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, v32 + 8);
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      long long v164 = v306[0];
      *((_OWORD *)v22 + 4) = v305;
      *((_OWORD *)v22 + 5) = v164;
      *(_OWORD *)(v22 + 89) = *(_OWORD *)((char *)v306 + 9);
      long long v165 = v302[1];
      *(_OWORD *)uint64_t v22 = v302[0];
      *((_OWORD *)v22 + 1) = v165;
      long long v166 = v304;
      *((_OWORD *)v22 + 2) = v303;
      *((_OWORD *)v22 + 3) = v166;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    uint64_t v203 = v296;
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v93, (unint64_t *)&qword_1EB87A940, v32 + 8);
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      sub_1C0445B7C(v203, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatInspectionFeedGroupItem);
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v32 + 8);
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      long long v204 = v302[1];
      *(_OWORD *)uint64_t v22 = v302[0];
      *((_OWORD *)v22 + 1) = v204;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
      unint64_t v206 = *((void *)&v302[0] + 1);
      unint64_t v205 = *(void *)&v302[0];
      uint64_t v207 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v208 = v300;
      uint64_t v209 = (long long *)((char *)v300 + *(int *)(v207 + 24));
      *uint64_t v209 = __PAIR128__(v206, v205);
      uint64_t v210 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_72:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(long long *, void, uint64_t, uint64_t))(*(void *)(v210 - 8) + 56))(v209, 0, 1, v210);
      uint64_t v211 = v299;
      *uint64_t v208 = v298;
      v208[1] = v211;
      v208[2] = 0;
      v208[3] = 0;
      uint64_t v26 = (char *)v208 + *(int *)(v207 + 28);
      goto LABEL_12;
    }
    uint64_t v212 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      uint64_t v213 = v311;
      uint64_t v214 = v312;
      *(void *)&v302[0] = 40;
      *((void *)&v302[0] + 1) = 0xE100000000000000;
      sub_1C151EF4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151EF4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      *(void *)&long long v296 = *((void *)&v302[0] + 1);
      *(void *)&long long v297 = *(void *)&v302[0];
      sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
      uint64_t v215 = swift_allocObject();
      *(_OWORD *)(v215 + 16) = xmmword_1C1529AE0;
      sub_1C0445DB0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v217 = *(void *)(*(void *)(v216 - 8) + 72);
      unint64_t v218 = (*(unsigned __int8 *)(*(void *)(v216 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v216 - 8) + 80);
      uint64_t v219 = swift_allocObject();
      *(_OWORD *)(v219 + 16) = xmmword_1C1527210;
      uint64_t v220 = (void *)(v219 + v218);
      sub_1C042F1BC(88, 0xE100000000000000, v213, 0, v220);
      uint64_t v221 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v222 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56);
      v222(v220, 0, 1, v221);
      uint64_t v223 = (void *)((char *)v220 + v217);
      sub_1C042F1BC(89, 0xE100000000000000, v214, 0, v223);
      v222(v223, 0, 1, v221);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v219, v302);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v215 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v215 + 64) = &off_1F1BDEC90;
      uint64_t v224 = swift_allocObject();
      *(void *)(v215 + 32) = v224;
      long long v225 = v302[1];
      *(_OWORD *)(v224 + 16) = v302[0];
      *(_OWORD *)(v224 + 32) = v225;
      *(void *)(v224 + 48) = v303;
      uint64_t v226 = sub_1C0233FC8(v215);
      swift_setDeallocating();
      sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v227 = sub_1C131B79C(v226);
      swift_bridgeObjectRelease();
      sub_1C042F458(v298, v299, (uint64_t)v227, v297, v296, v300);
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v212);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v314);
    }
    if (swift_dynamicCast())
    {
      uint64_t v228 = v311;
      uint64_t v229 = v312;
      *(void *)&v302[0] = 40;
      *((void *)&v302[0] + 1) = 0xE100000000000000;
      uint64_t v230 = swift_bridgeObjectRetain();
      sub_1C0BA9458(v230);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v231 = swift_bridgeObjectRetain();
      sub_1C0BA9458(v231);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      *(void *)&long long v296 = *((void *)&v302[0] + 1);
      *(void *)&long long v297 = *(void *)&v302[0];
      sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
      uint64_t v232 = swift_allocObject();
      *(_OWORD *)(v232 + 16) = xmmword_1C1529AE0;
      sub_1C0445DB0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v295 = v233;
      uint64_t v234 = *(void *)(*(void *)(v233 - 8) + 72);
      unint64_t v235 = (*(unsigned __int8 *)(*(void *)(v233 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v233 - 8) + 80);
      uint64_t v236 = swift_allocObject();
      *(_OWORD *)(v236 + 16) = xmmword_1C1527210;
      uint64_t v237 = (void *)(v236 + v235);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v228, v237);
      uint64_t v238 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v239 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v238 - 8) + 56);
      v239(v237, 0, 1, v238);
      uint64_t v240 = (void *)((char *)v237 + v234);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v229, v240);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v239(v240, 0, 1, v238);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v236, v302);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v232 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v232 + 64) = &off_1F1BDEC90;
      uint64_t v241 = swift_allocObject();
      *(void *)(v232 + 32) = v241;
      long long v242 = v302[1];
      *(_OWORD *)(v241 + 16) = v302[0];
      *(_OWORD *)(v241 + 32) = v242;
      *(void *)(v241 + 48) = v303;
      uint64_t v243 = sub_1C0233FC8(v232);
      swift_setDeallocating();
      sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v244 = sub_1C131B79C(v243);
      swift_bridgeObjectRelease();
      sub_1C042F458(v298, v299, (uint64_t)v244, v297, v296, v300);
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v314);
    }
    uint64_t v245 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v245);
      unint64_t v247 = *((void *)&v302[0] + 1);
      unint64_t v246 = *(void *)&v302[0];
      uint64_t v207 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v208 = v300;
      uint64_t v209 = (long long *)((char *)v300 + *(int *)(v207 + 24));
      *uint64_t v209 = __PAIR128__(v247, v246);
      uint64_t v210 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_72;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    type metadata accessor for FormatCommandAction();
    uint64_t v248 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v248);
      uint64_t v249 = *(void *)&v302[0];
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      *(void *)uint64_t v22 = v249;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
      char v250 = v302[0];
      long long v301 = *(long long *)((char *)v302 + 8);
      uint64_t v251 = *((void *)&v302[1] + 1);
      uint64_t v252 = v303;
      uint64_t v38 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v39 = v300;
      char v113 = (char *)v300 + *(int *)(v38 + 24);
      *char v113 = v250;
      *(_OWORD *)(v113 + 8) = v301;
      *((void *)v113 + 3) = v251;
      *((void *)v113 + 4) = v252;
      uint64_t v114 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_50;
    }
    uint64_t v253 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v253);
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      sub_1C0445B7C(v295, (uint64_t)v22, type metadata accessor for FormatPropertyDefinition);
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
      uint64_t v254 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v255 = (char *)v300 + *(int *)(v254 + 24);
      (*(void (**)(char *, char *, uint64_t))(v291 + 32))(v255, v293, v294);
      uint64_t v256 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v256 - 8) + 56))(v255, 0, 1, v256);
      uint64_t v257 = v299;
      *uint64_t v21 = v298;
      v21[1] = v257;
      long long v21[2] = 0;
      v21[3] = 0;
      uint64_t v25 = *(int *)(v254 + 28);
      goto LABEL_5;
    }
    uint64_t v258 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v258);
      uint64_t v259 = *(void *)&v302[0];
      if (v305 == 1)
      {
        long long v260 = v304;
        long long v261 = v303;
        long long v301 = v302[1];
        uint64_t v262 = *((void *)&v302[0] + 1);
        uint64_t v263 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v264 = (char *)v300 + *(int *)(v263 + 24);
        *(void *)uint64_t v264 = v259;
        *((void *)v264 + 1) = v262;
        *((_OWORD *)v264 + 1) = v301;
        *((_OWORD *)v264 + 2) = v261;
        *((_OWORD *)v264 + 3) = v260;
      }
      else
      {
        uint64_t v263 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v264 = (char *)v300 + *(int *)(v263 + 24);
        *(void *)uint64_t v264 = v259;
      }
      uint64_t v265 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v265 - 8) + 56))(v264, 0, 1, v265);
      uint64_t v266 = v300;
      uint64_t v267 = v299;
      *uint64_t v300 = v298;
      v266[1] = v267;
      v266[2] = 0;
      v266[3] = 0;
      uint64_t v26 = (char *)v266 + *(int *)(v263 + 28);
      goto LABEL_12;
    }
    sub_1C044594C(0, &qword_1EA19B5D0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB928]);
    if (swift_dynamicCast()) {
      goto LABEL_3;
    }
    uint64_t v268 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v268);
      long long v301 = v302[0];
      unint64_t v270 = *((void *)&v302[1] + 1);
      unint64_t v269 = *(void *)&v302[1];
      uint64_t v207 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v208 = v300;
      uint64_t v209 = (long long *)((char *)v300 + *(int *)(v207 + 24));
      *uint64_t v209 = v301;
      v209[1] = __PAIR128__(v270, v269);
      uint64_t v210 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_72;
    }
    type metadata accessor for DebugFormatDebuggerCallStackEntry();
    if (swift_dynamicCast()) {
      goto LABEL_3;
    }
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    uint64_t v271 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v271);
      uint64_t v272 = *(void *)&v302[0];
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = v300;
      uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
      *(void *)uint64_t v22 = v272;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(v302, (uint64_t)&v311);
      __swift_project_boxed_opaque_existential_1(&v311, v313);
      uint64_t v273 = sub_1C152088C();
      uint64_t v275 = v274;
      sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
      uint64_t v276 = v297;
      *(void *)long long v297 = v273;
      *(void *)(v276 + 8) = v275;
      uint64_t v277 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v277 - 8) + 56))(v276, 0, 1, v277);
      uint64_t v278 = v300;
      uint64_t v279 = v299;
      *uint64_t v300 = v298;
      v278[1] = v279;
      uint64_t v280 = type metadata accessor for FormatInspectionItem(0);
      v278[2] = 0;
      v278[3] = 0;
      sub_1C0445B7C(v276, (uint64_t)v278 + *(int *)(v280 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v281 = (char *)v278 + *(int *)(v280 + 28);
      *(void *)uint64_t v281 = 0;
      *((void *)v281 + 1) = 0;
      v281[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v314);
    }
    sub_1BFF993A8(&v314, v302);
    unint64_t v311 = 0;
    unint64_t v312 = 0xE000000000000000;
    uint64_t v282 = MEMORY[0x1E4FBC840] + 8;
    sub_1C152036C();
    unint64_t v283 = v311;
    unint64_t v284 = v312;
    sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, v282);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v302);
    uint64_t v285 = v297;
    *(void *)long long v297 = v283;
    *(void *)(v285 + 8) = v284;
    uint64_t v286 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v286 - 8) + 56))(v285, 0, 1, v286);
    long long v287 = v300;
    uint64_t v288 = v299;
    *uint64_t v300 = v298;
    v287[1] = v288;
    uint64_t v289 = type metadata accessor for FormatInspectionItem(0);
    v287[2] = 0;
    v287[3] = 0;
    uint64_t result = sub_1C0445B7C(v285, (uint64_t)v287 + *(int *)(v289 + 24), (uint64_t (*)(void))sub_1C0444DD4);
    uint64_t v31 = (char *)v287 + *(int *)(v289 + 28);
LABEL_7:
    *(void *)uint64_t v31 = 0;
    *((void *)v31 + 1) = 0;
    v31[16] = -1;
    return result;
  }
LABEL_3:
  sub_1C0444F6C(v301, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
  uint64_t v19 = *(void *)&v302[0];
  uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v21 = v300;
  uint64_t v22 = (char *)v300 + *(int *)(v20 + 24);
  *(void *)uint64_t v22 = v19;
  uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_4:
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  uint64_t v24 = v299;
  *uint64_t v21 = v298;
  v21[1] = v24;
  long long v21[2] = 0;
  v21[3] = 0;
  uint64_t v25 = *(int *)(v20 + 28);
LABEL_5:
  uint64_t v26 = (char *)v21 + v25;
LABEL_12:
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  v26[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v314);
}

uint64_t sub_1C0432608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0445CB4(a3, (uint64_t)v17, (uint64_t (*)(void))sub_1BFFFCF8C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) != 1)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFFCF8C);
      uint64_t v22 = v37;
      uint64_t v23 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v24 = (void *)((char *)a4 + *(int *)(v23 + 24));
      *uint64_t v24 = v22;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v26 = (char *)a4 + *(int *)(v23 + 28);
      *(void *)uint64_t v26 = 0;
      *((void *)v26 + 1) = 0;
      v26[16] = -1;
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (!swift_dynamicCast())
      {
        sub_1C0445B7C((uint64_t)v17, (uint64_t)v11, type metadata accessor for FeedHeadline);
        *(void *)&long long v37 = 0;
        *((void *)&v37 + 1) = 0xE000000000000000;
        sub_1C152036C();
        long long v33 = v37;
        sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFFCF8C);
        sub_1C0445D1C((uint64_t)v11, type metadata accessor for FeedHeadline);
        *(_OWORD *)uint64_t v14 = v33;
        uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v14, 0, 1, v34);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        uint64_t result = sub_1C0445B7C((uint64_t)v14, (uint64_t)a4 + *(int *)(v18 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        goto LABEL_9;
      }
      sub_1BFC773DC(&v37, (uint64_t)v36);
      __swift_project_boxed_opaque_existential_1(v36, v36[3]);
      uint64_t v27 = sub_1C152088C();
      uint64_t v29 = v28;
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFFCF8C);
      *(void *)uint64_t v14 = v27;
      *((void *)v14 + 1) = v29;
      uint64_t v30 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v14, 0, 1, v30);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v14, (uint64_t)a4 + *(int *)(v31 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v32 = (char *)a4 + *(int *)(v31 + 28);
      *(void *)uint64_t v32 = 0;
      *((void *)v32 + 1) = 0;
      v32[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    }
    return sub_1C0445D1C((uint64_t)v17, type metadata accessor for FeedHeadline);
  }
  sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFFCF8C);
  uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v19 = (char *)a4 + *(int *)(v18 + 24);
  uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
LABEL_9:
  uint64_t v35 = (char *)a4 + *(int *)(v18 + 28);
  *(void *)uint64_t v35 = 0;
  *((void *)v35 + 1) = 0;
  v35[16] = -1;
  return result;
}

uint64_t sub_1C0432B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  if (a3 == 2)
  {
    uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v8 = (char *)a4 + *(int *)(v7 + 24);
    uint64_t v9 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    char v11 = a3 & 1;
    uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v7 + 24);
    *uint64_t v12 = v11;
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v14 = (char *)a4 + *(int *)(v7 + 28);
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  unsigned char v14[16] = -1;
  return result;
}

uint64_t sub_1C0432C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C04453F4(a3, (uint64_t)v52, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C04453F4((uint64_t)v52, (uint64_t)v54, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C04453F4(a3, (uint64_t)&v44, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C04453F4(a3, (uint64_t)v53, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1C00A0A24(v53) != 1)
  {
    sub_1C04453F4((uint64_t)v54, (uint64_t)v43, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    sub_1C0187FB0((uint64_t)v43);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C01B3B54(a3);
      uint64_t v15 = *(void *)&v30[0];
      uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v16 + 24));
      *uint64_t v17 = v15;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v19 = (char *)a4 + *(int *)(v16 + 28);
      *(void *)uint64_t v19 = 0;
      *((void *)v19 + 1) = 0;
      v19[16] = -1;
      long long v40 = v50;
      v41[0] = v51[0];
      *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v51 + 9);
      long long v34 = v44;
      long long v35 = v45;
      long long v36 = v46;
      long long v37 = v47;
      long long v38 = v48;
      long long v39 = v49;
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (!swift_dynamicCast())
      {
        long long v40 = v50;
        v41[0] = v51[0];
        *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v51 + 9);
        long long v36 = v46;
        long long v37 = v47;
        long long v38 = v48;
        long long v39 = v49;
        long long v34 = v44;
        long long v35 = v45;
        uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v26 = (void *)((char *)a4 + *(int *)(v11 + 24));
        uint64_t v32 = 0;
        unint64_t v33 = 0xE000000000000000;
        v30[6] = v50;
        v31[0] = v51[0];
        *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v51 + 9);
        v30[2] = v46;
        v30[3] = v47;
        void v30[4] = v48;
        v30[5] = v49;
        v30[0] = v44;
        v30[1] = v45;
        sub_1C152036C();
        sub_1C01B3B54(a3);
        sub_1C01880A4((uint64_t)&v34);
        unint64_t v27 = v33;
        *uint64_t v26 = v32;
        v26[1] = v27;
        uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v26, 0, 1, v28);
        goto LABEL_9;
      }
      sub_1BFC773DC(&v42, (uint64_t)&v34);
      __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
      uint64_t v20 = sub_1C152088C();
      uint64_t v22 = v21;
      sub_1C01B3B54(a3);
      *uint64_t v10 = v20;
      v10[1] = v22;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      long long v40 = v50;
      v41[0] = v51[0];
      *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v51 + 9);
      long long v36 = v46;
      long long v37 = v47;
      long long v38 = v48;
      long long v39 = v49;
      long long v34 = v44;
      long long v35 = v45;
    }
    return sub_1C01880A4((uint64_t)&v34);
  }
  uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
  uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_9:
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v29 = (char *)a4 + *(int *)(v11 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1C043317C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0444EEC(a3, (uint64_t)v35, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
  if ((void)v36)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(a3, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
      uint64_t v11 = *(void *)&v34[0];
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v13 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v13 = v11;
      uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v15 = (char *)a4 + *(int *)(v12 + 28);
      *(void *)uint64_t v15 = 0;
      *((void *)v15 + 1) = 0;
      v15[16] = -1;
      return sub_1C01F0A74((uint64_t)v35);
    }
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(v34, (uint64_t)&v31);
      __swift_project_boxed_opaque_existential_1(&v31, v33);
      uint64_t v20 = sub_1C152088C();
      uint64_t v22 = v21;
      sub_1C0444F6C(a3, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
      *uint64_t v10 = v20;
      v10[1] = v22;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      return sub_1C01F0A74((uint64_t)v35);
    }
    v34[10] = v43;
    v34[11] = v44;
    unsigned char v34[12] = v45;
    v34[6] = v39;
    v34[7] = v40;
    v34[8] = v41;
    v34[9] = v42;
    v34[2] = v35[2];
    void v34[3] = v36;
    v34[4] = v37;
    v34[5] = v38;
    v34[0] = v35[0];
    v34[1] = v35[1];
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1C152036C();
    uint64_t v26 = v31;
    unint64_t v27 = v32;
    sub_1C0444F6C(a3, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
    sub_1C01F0A74((uint64_t)v34);
    *uint64_t v10 = v26;
    v10[1] = v27;
    uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
    *a4 = a1;
    a4[1] = a2;
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    uint64_t result = sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v16 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  }
  else
  {
    sub_1C0444F6C(a3, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle);
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (char *)a4 + *(int *)(v16 + 24);
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
  }
  uint64_t v29 = (char *)a4 + *(int *)(v16 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1C0433600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (void *)((char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v34 = a3;
  *((void *)&v34 + 1) = a4;
  if (a4)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = v31;
      uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v16 = (void *)((char *)a5 + *(int *)(v15 + 24));
      void *v16 = v14;
      uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      uint64_t v18 = (char *)a5 + *(int *)(v15 + 28);
      *(void *)uint64_t v18 = 0;
      *((void *)v18 + 1) = 0;
      v18[16] = -1;
    }
    else
    {
      uint64_t v32 = v13;
      uint64_t v33 = MEMORY[0x1E4FBB208];
      long long v31 = v34;
      sub_1BFC773DC(&v31, (uint64_t)v30);
      uint64_t v24 = __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *uint64_t v12 = v26;
      v12[1] = v25;
      uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 0, 1, v27);
      *a5 = a1;
      a5[1] = a2;
      uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1C0445B7C((uint64_t)v12, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v29 = (char *)a5 + *(int *)(v28 + 28);
      *(void *)uint64_t v29 = 0;
      *((void *)v29 + 1) = 0;
      v29[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v20 = (char *)a5 + *(int *)(v19 + 24);
    uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
    a5[3] = 0;
    uint64_t v23 = (char *)a5 + *(int *)(v19 + 28);
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v23[16] = -1;
  }
  return result;
}

uint64_t sub_1C04338EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0445CB4(a3, (uint64_t)v14, (uint64_t (*)(void))sub_1BFF00BEC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v16 = (char *)a4 + *(int *)(v15 + 24);
    uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v15 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v21 = (char *)a4 + *(int *)(v20 + 24);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v21, v11, v8);
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v23 = (char *)a4 + *(int *)(v20 + 28);
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v23[16] = -1;
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  return result;
}

uint64_t sub_1C0433BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v8 = ~a3 & 0xF000000000000007;
  uint64_t v9 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v10 = (void *)((char *)a4 + *(int *)(v9 + 24));
  if (v8)
  {
    *uint64_t v10 = a3;
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 0, 1, v13);
  }
  else
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v14 = (char *)a4 + *(int *)(v9 + 28);
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  unsigned char v14[16] = -1;
  return result;
}

uint64_t sub_1C0433CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v29 = a3;
  if (v8 == 41)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v28;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *uint64_t v11 = sub_1C152088C();
        v11[1] = v19;
        uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v22 = (char *)a4 + *(int *)(v21 + 28);
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      unsigned __int8 v23 = v29;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1C152036C();
      uint64_t v24 = *((void *)&v28 + 1);
      *uint64_t v17 = v28;
      v17[1] = v24;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v25 = (char *)a4 + *(int *)(v12 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C0434008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v29 = a3;
  if (v8 == 13)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v28;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *uint64_t v11 = sub_1C152088C();
        v11[1] = v19;
        uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v22 = (char *)a4 + *(int *)(v21 + 28);
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      unsigned __int8 v23 = v29;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1C152036C();
      uint64_t v24 = *((void *)&v28 + 1);
      *uint64_t v17 = v28;
      v17[1] = v24;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v25 = (char *)a4 + *(int *)(v12 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C0434338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (void *)((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v33 = a3;
  *((void *)&v33 + 1) = a4;
  if (a4)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v30;
      uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v15 = (void *)((char *)a5 + *(int *)(v14 + 24));
      *uint64_t v15 = v13;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      uint64_t v17 = (char *)a5 + *(int *)(v14 + 28);
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      long long v31 = &type metadata for FormatSelector;
      unint64_t v32 = sub_1C04455BC();
      long long v30 = v33;
      sub_1BFC773DC(&v30, (uint64_t)v29);
      unsigned __int8 v23 = __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *uint64_t v12 = v25;
      v12[1] = v24;
      uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 0, 1, v26);
      *a5 = a1;
      a5[1] = a2;
      uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1C0445B7C((uint64_t)v12, (uint64_t)a5 + *(int *)(v27 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      long long v28 = (char *)a5 + *(int *)(v27 + 28);
      *(void *)long long v28 = 0;
      *((void *)v28 + 1) = 0;
      v28[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a5 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v22 = (char *)a5 + *(int *)(v18 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1C0434624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  if (a4)
  {
    uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v11 = (void *)((char *)a5 + *(int *)(v10 + 24));
    *uint64_t v11 = a3;
    v11[1] = a4;
    uint64_t v12 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  }
  else
  {
    uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v14 = (char *)a5 + *(int *)(v10 + 24);
    uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  }
  *a5 = a1;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = 0;
  uint64_t v16 = (char *)a5 + *(int *)(v10 + 28);
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = -1;
  return result;
}

uint64_t sub_1C0434744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v29 = a3;
  if (v8 == 7)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v28;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *uint64_t v11 = sub_1C152088C();
        v11[1] = v19;
        uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v22 = (char *)a4 + *(int *)(v21 + 28);
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      unsigned __int8 v23 = v29;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1C152036C();
      uint64_t v24 = *((void *)&v28 + 1);
      *uint64_t v17 = v28;
      v17[1] = v24;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v25 = (char *)a4 + *(int *)(v12 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C0434A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_1C131B4D4(a3);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = 64;
      do
      {
        uint64_t v14 = swift_bridgeObjectRetain();
        sub_1C1047634(v14);
        v13 += 40;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      uint64_t v15 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x1E4FBC860];
    }
    uint64_t v21 = *(void *)(v15 + 16);
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      *(void *)(inited + 56) = &type metadata for FormatInspection;
      *(void *)(inited + 64) = &off_1F1C29D30;
      *(void *)(inited + 32) = a3;
      uint64_t v23 = sub_1C0233FC8(inited);
      swift_setDeallocating();
      sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
      swift_arrayDestroy();
      uint64_t v24 = sub_1C131B79C(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v10 = v24;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      v10[1] = 0;
      void v10[2] = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(void))sub_1C0444DD4);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v27 = (char *)a4 + *(int *)(v26 + 24);
      uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
    }
    unsigned __int8 v29 = (char *)a4 + *(int *)(v26 + 28);
    *(void *)unsigned __int8 v29 = 0;
    *((void *)v29 + 1) = 0;
    v29[16] = -1;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (char *)a4 + *(int *)(v16 + 24);
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v20 = (char *)a4 + *(int *)(v16 + 28);
    *(void *)uint64_t v20 = 0;
    *((void *)v20 + 1) = 0;
    v20[16] = -1;
  }
  return result;
}

uint64_t sub_1C0434DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v31 = a3;
  if (v8 == 5)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v12 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v28;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  unsigned __int8 v29 = &type metadata for FormatTextAlignment;
  unint64_t v30 = sub_1C0445828();
  LOBYTE(v28) = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  unint64_t v21 = 0xE400000000000000;
  uint64_t v22 = 1952867692;
  switch(*(unsigned char *)v20)
  {
    case 1:
      unint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x7468676972;
      break;
    case 2:
      unint64_t v21 = 0xE600000000000000;
      uint64_t v22 = 0x7265746E6563;
      break;
    case 3:
      unint64_t v21 = 0xE900000000000064;
      uint64_t v22 = 0x656966697473756ALL;
      break;
    case 4:
      unint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x6C61727574616ELL;
      break;
    default:
      break;
  }
  *uint64_t v11 = v22;
  v11[1] = v21;
  uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C04350F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v31 = a3;
  if (v8 == 6)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v12 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v28;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  unsigned __int8 v29 = &type metadata for FormatTextLineBreakMode;
  unint64_t v30 = sub_1C04457D4();
  LOBYTE(v28) = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  unint64_t v21 = 0xEC000000676E6970;
  unint64_t v22 = 0x7061725764726F77;
  switch(*(unsigned char *)v20)
  {
    case 1:
      unint64_t v21 = 0x80000001C1600E60;
      unint64_t v22 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v21 = 0xE400000000000000;
      unint64_t v22 = 1885957219;
      break;
    case 3:
      unint64_t v21 = 0xEC00000064616548;
      goto LABEL_12;
    case 4:
      unint64_t v21 = 0xEC0000006C696154;
      goto LABEL_12;
    case 5:
      unint64_t v21 = 0xEE00656C6464694DLL;
LABEL_12:
      unint64_t v22 = 0x657461636E757274;
      break;
    default:
      break;
  }
  *uint64_t v11 = v22;
  v11[1] = v21;
  uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C0435440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  return sub_1C0438848(a1, a2, a3, a4);
}

uint64_t sub_1C043544C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0444EEC(a3, (uint64_t)v36, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
  if (*((void *)&v36[0] + 1))
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C0444F6C(a3, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
      uint64_t v11 = *(void *)&v34[0];
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v13 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v13 = v11;
      uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v15 = (char *)a4 + *(int *)(v12 + 28);
      *(void *)uint64_t v15 = 0;
      *((void *)v15 + 1) = 0;
      v15[16] = -1;
      return sub_1BFEA4290((uint64_t)v36);
    }
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(v34, (uint64_t)&v31);
      __swift_project_boxed_opaque_existential_1(&v31, v33);
      uint64_t v20 = sub_1C152088C();
      uint64_t v22 = v21;
      sub_1C0444F6C(a3, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
      *uint64_t v10 = v20;
      v10[1] = v22;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      return sub_1BFEA4290((uint64_t)v36);
    }
    v34[6] = v36[6];
    v34[7] = v36[7];
    v34[8] = v36[8];
    char v35 = v37;
    v34[2] = v36[2];
    void v34[3] = v36[3];
    v34[4] = v36[4];
    v34[5] = v36[5];
    v34[0] = v36[0];
    v34[1] = v36[1];
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1C152036C();
    uint64_t v26 = v31;
    unint64_t v27 = v32;
    sub_1C0444F6C(a3, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
    sub_1BFEA4290((uint64_t)v34);
    *uint64_t v10 = v26;
    v10[1] = v27;
    uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
    *a4 = a1;
    a4[1] = a2;
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    uint64_t result = sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v16 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  }
  else
  {
    sub_1C0444F6C(a3, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (char *)a4 + *(int *)(v16 + 24);
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
  }
  unsigned __int8 v29 = (char *)a4 + *(int *)(v16 + 28);
  *(void *)unsigned __int8 v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1C04358EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1BFDC11BC(a3);
      uint64_t v16 = v29;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v18 = (void *)((char *)a4 + *(int *)(v17 + 24));
      *uint64_t v18 = v16;
      uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v20 = (char *)a4 + *(int *)(v17 + 28);
      *(void *)uint64_t v20 = 0;
      *((void *)v20 + 1) = 0;
      v20[16] = -1;
    }
    else
    {
      uint64_t v30 = &type metadata for SportsDataVisualizationEventStatus;
      unint64_t v31 = sub_1C0445298();
      *(void *)&long long v29 = v32;
      sub_1BFC773DC(&v29, (uint64_t)v28);
      __swift_project_boxed_opaque_existential_1(v28, v28[3]);
      swift_retain();
      uint64_t v21 = SportsDataVisualizationEventStatus.description.getter();
      uint64_t v23 = v22;
      sub_1BFDC11BC(a3);
      *uint64_t v10 = v21;
      v10[1] = v23;
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 0, 1, v24);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v25 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v26 = (char *)a4 + *(int *)(v25 + 28);
      *(void *)uint64_t v26 = 0;
      *((void *)v26 + 1) = 0;
      v26[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
    return swift_release();
  }
  else
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v15 = (char *)a4 + *(int *)(v11 + 28);
    *(void *)uint64_t v15 = 0;
    *((void *)v15 + 1) = 0;
    v15[16] = -1;
  }
  return result;
}

uint64_t sub_1C0435BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v29 = a3;
  if (v8 == 12)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v12 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v26;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  unint64_t v27 = &type metadata for FormatFontScalingStyle;
  unint64_t v28 = sub_1C04458F8();
  LOBYTE(v26) = v29;
  sub_1BFC773DC(&v26, (uint64_t)v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  *uint64_t v11 = FormatFontScalingStyle.description.getter();
  v11[1] = v20;
  uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v23 = (char *)a4 + *(int *)(v22 + 28);
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1C0435E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v29 = a3;
  if (v8 == 9)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v28;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *uint64_t v11 = sub_1C152088C();
        v11[1] = v19;
        uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v22 = (char *)a4 + *(int *)(v21 + 28);
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      unsigned __int8 v23 = v29;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1C152036C();
      uint64_t v24 = *((void *)&v28 + 1);
      *uint64_t v17 = v28;
      v17[1] = v24;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v25 = (char *)a4 + *(int *)(v12 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C04361A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v30[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  if (a3)
  {
    sub_1C044594C(0, &qword_1EB879FF8, (uint64_t (*)(void))sub_1C0080600, (uint64_t)&type metadata for FormatFontTrait, MEMORY[0x1E4FBB510]);
    uint64_t v12 = v11;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v31;
      uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v15 = (void *)((char *)a4 + *(int *)(v14 + 24));
      *uint64_t v15 = v13;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v17 = (char *)a4 + *(int *)(v14 + 28);
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      uint64_t v32 = v12;
      unint64_t v33 = sub_1C04459B4();
      *(void *)&long long v31 = v34;
      sub_1BFC773DC(&v31, (uint64_t)v30);
      __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      sub_1C0080600();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C151EFCC();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      *uint64_t v10 = v23;
      v10[1] = v25;
      uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v27 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      long long v28 = (char *)a4 + *(int *)(v27 + 28);
      *(void *)long long v28 = 0;
      *((void *)v28 + 1) = 0;
      v28[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a4 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = (char *)a4 + *(int *)(v18 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1C04364E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  return sub_1C0437504(a1, a2, a3, a4);
}

uint64_t sub_1C04364F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  return sub_1C0440414(a1, a2, a3, a4, MEMORY[0x1E4FBB808], MEMORY[0x1E4FBB858], a5);
}

uint64_t sub_1C0436508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v29 = a3;
  if (v8 == 10)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v28;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *uint64_t v11 = sub_1C152088C();
        v11[1] = v19;
        uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v22 = (char *)a4 + *(int *)(v21 + 28);
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      unsigned __int8 v23 = v29;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1C152036C();
      uint64_t v24 = *((void *)&v28 + 1);
      *uint64_t v17 = v28;
      v17[1] = v24;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v25 = (char *)a4 + *(int *)(v12 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C0436838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (void *)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = a3;
  unint64_t v37 = a4;
  if (a4 != 4)
  {
    sub_1BFEFF7C4(a3, a4);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C04452EC(a3, a4);
      uint64_t v17 = v35;
      uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v19 = (void *)((char *)a5 + *(int *)(v18 + 24));
      *uint64_t v19 = v17;
      uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      uint64_t v21 = (char *)a5 + *(int *)(v18 + 28);
      *(void *)uint64_t v21 = 0;
      *((void *)v21 + 1) = 0;
      v21[16] = -1;
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (!swift_dynamicCast())
      {
        uint64_t v28 = v36;
        unint64_t v29 = v37;
        uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v30 = (void *)((char *)a5 + *(int *)(v13 + 24));
        *(void *)&long long v35 = 0;
        *((void *)&v35 + 1) = 0xE000000000000000;
        v34[0] = v28;
        v34[1] = v29;
        sub_1C152036C();
        sub_1C04452EC(a3, a4);
        sub_1C0257108(v28, v29);
        uint64_t v31 = *((void *)&v35 + 1);
        *uint64_t v30 = v35;
        v30[1] = v31;
        uint64_t v32 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v30, 0, 1, v32);
        goto LABEL_9;
      }
      sub_1BFC773DC(&v35, (uint64_t)v34);
      __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      uint64_t v22 = sub_1C152088C();
      uint64_t v24 = v23;
      sub_1C04452EC(a3, a4);
      *uint64_t v12 = v22;
      v12[1] = v24;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 0, 1, v25);
      *a5 = a1;
      a5[1] = a2;
      uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1C0445B7C((uint64_t)v12, (uint64_t)a5 + *(int *)(v26 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v27 = (char *)a5 + *(int *)(v26 + 28);
      *(void *)uint64_t v27 = 0;
      *((void *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
    return sub_1C0257108(v36, v37);
  }
  uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v14 = (char *)a5 + *(int *)(v13 + 24);
  uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
LABEL_9:
  *a5 = a1;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = 0;
  unint64_t v33 = (char *)a5 + *(int *)(v13 + 28);
  *(void *)unint64_t v33 = 0;
  *((void *)v33 + 1) = 0;
  v33[16] = -1;
  return result;
}

uint64_t sub_1C0436C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043AA00(a1, a2, a3, (unint64_t *)&qword_1EB879D38, (uint64_t)&type metadata for FormatCorner, &qword_1EA19B608, a4);
}

uint64_t sub_1C0436C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  char v10 = a4 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (void *)((char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = a3;
  char v32 = v10;
  if (a4)
  {
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v15 = (char *)a5 + *(int *)(v14 + 24);
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v22 = (char *)a5 + *(int *)(v14 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v18 = MEMORY[0x1E4FBB3D0];
  if (swift_dynamicCast())
  {
    uint64_t v19 = v28;
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v20 = (void *)((char *)a5 + *(int *)(v14 + 24));
    *uint64_t v20 = v19;
    uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
    goto LABEL_5;
  }
  uint64_t v29 = v18;
  uint64_t v30 = MEMORY[0x1E4FBB440];
  *(void *)&long long v28 = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  *uint64_t v13 = sub_1C151EF4C();
  v13[1] = v23;
  uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 0, 1, v24);
  *a5 = a1;
  a5[1] = a2;
  uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v25 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v26 = (char *)a5 + *(int *)(v25 + 28);
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  v26[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C0436ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  char v12 = a5 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (void *)((char *)&v36[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  char v40 = v12;
  if (a5)
  {
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (char *)a6 + *(int *)(v16 + 24);
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
LABEL_5:
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    uint64_t v23 = *(int *)(v16 + 28);
LABEL_6:
    uint64_t v24 = (char *)a6 + v23;
    *(void *)uint64_t v24 = 0;
    *((void *)v24 + 1) = 0;
    v24[16] = -1;
    return result;
  }
  sub_1C0445474();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v37;
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v21 = (void *)((char *)a6 + *(int *)(v16 + 24));
    *uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
  if (!swift_dynamicCast())
  {
    uint64_t v29 = v38;
    uint64_t v30 = v39;
    uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
    char v32 = (void *)((char *)a6 + *(int *)(v31 + 24));
    *(void *)&long long v37 = 0;
    *((void *)&v37 + 1) = 0xE000000000000000;
    v36[0] = v29;
    v36[1] = v30;
    sub_1C152036C();
    uint64_t v33 = *((void *)&v37 + 1);
    *char v32 = v37;
    v32[1] = v33;
    uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v32, 0, 1, v34);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    uint64_t v23 = *(int *)(v31 + 28);
    goto LABEL_6;
  }
  sub_1BFC773DC(&v37, (uint64_t)v36);
  __swift_project_boxed_opaque_existential_1(v36, v36[3]);
  *uint64_t v15 = sub_1C152088C();
  v15[1] = v25;
  uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v15, 0, 1, v26);
  *a6 = a1;
  a6[1] = a2;
  uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
  a6[2] = 0;
  a6[3] = 0;
  sub_1C0445B7C((uint64_t)v15, (uint64_t)a6 + *(int *)(v27 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  long long v28 = (char *)a6 + *(int *)(v27 + 28);
  *(void *)long long v28 = 0;
  *((void *)v28 + 1) = 0;
  v28[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_1C0437250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (void *)((char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v29 = a3;
  char v30 = BYTE4(a3) & 1;
  if ((a3 & 0x100000000) != 0)
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    char v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v11 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v15 = MEMORY[0x1E4FBB470];
  if (swift_dynamicCast())
  {
    uint64_t v16 = v26;
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v11 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  uint64_t v27 = v15;
  uint64_t v28 = MEMORY[0x1E4FBB4C0];
  LODWORD(v26) = v29;
  sub_1BFC773DC(&v26, (uint64_t)v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  *char v10 = sub_1C151EF9C();
  v10[1] = v20;
  uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v23 = (char *)a4 + *(int *)(v22 + 28);
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1C04374E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  return sub_1C0438BD0(a1, a2, a3, a4, a5, (void (*)(void, __n128))type metadata accessor for CGSize, a6);
}

uint64_t sub_1C04374F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  return sub_1C0437504(a1, a2, a3, a4);
}

uint64_t sub_1C0437504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v31[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v33 = a3;
  if (v8 == 4)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = *(int *)(v12 + 28);
    goto LABEL_6;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v32;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v32, (uint64_t)v31);
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    *uint64_t v11 = sub_1C152088C();
    v11[1] = v21;
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 0, 1, v22);
    *a4 = a1;
    a4[1] = a2;
    uint64_t v23 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v23 + 24), (uint64_t (*)(void))sub_1C0444DD4);
    uint64_t v24 = (char *)a4 + *(int *)(v23 + 28);
    *(void *)uint64_t v24 = 0;
    *((void *)v24 + 1) = 0;
    v24[16] = -1;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  unsigned __int8 v25 = v33;
  uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v27 = (void *)((char *)a4 + *(int *)(v26 + 24));
  *(void *)&long long v32 = 0;
  *((void *)&v32 + 1) = 0xE000000000000000;
  LOBYTE(v31[0]) = v25;
  sub_1C152036C();
  uint64_t v28 = *((void *)&v32 + 1);
  *uint64_t v27 = v32;
  v27[1] = v28;
  uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 0, 1, v29);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v19 = *(int *)(v26 + 28);
LABEL_6:
  uint64_t v20 = (char *)a4 + v19;
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  v20[16] = -1;
  return result;
}

uint64_t sub_1C0437874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, void *a6@<X8>)
{
  int v12 = ~a5;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v46 = a3;
  *((void *)&v46 + 1) = a4;
  char v47 = a5;
  if (v12)
  {
    sub_1BFE94AB4(a3, a4, a5 & 1);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1BFFC879C(a3, a4, a5);
      uint64_t v16 = v42;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v18 = (void *)((char *)a6 + *(int *)(v17 + 24));
      *uint64_t v18 = v16;
      uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
      *a6 = a1;
      a6[1] = a2;
      a6[2] = 0;
      a6[3] = 0;
      uint64_t v20 = (char *)a6 + *(int *)(v17 + 28);
      *(void *)uint64_t v20 = 0;
      *((void *)v20 + 1) = 0;
      v20[16] = -1;
    }
    else
    {
      uint64_t v37 = a1;
      uint64_t v38 = a2;
      long long v44 = &type metadata for FormatBoolean;
      unint64_t v45 = sub_1C0445550();
      long long v26 = v46;
      char v27 = v47;
      long long v42 = v46;
      char v43 = v47;
      sub_1BFC773DC(&v42, (uint64_t)v41);
      uint64_t v28 = __swift_project_boxed_opaque_existential_1(v41, v41[3]);
      uint64_t v29 = *v28;
      if (v28[2])
      {
        uint64_t v39 = 0x286E6F6974706FLL;
        unint64_t v40 = 0xE700000000000000;
        sub_1BFE94AB4(v26, *((uint64_t *)&v26 + 1), v27);
        sub_1C151E80C();
        sub_1C151E80C();
        sub_1BFFC879C(a3, a4, a5);
        uint64_t v30 = v39;
        unint64_t v31 = v40;
      }
      else
      {
        sub_1BFE94AB4(v26, *((uint64_t *)&v26 + 1), v27);
        sub_1BFFC879C(a3, a4, a5);
        uint64_t v30 = 1702195828;
        if ((v29 & 1) == 0) {
          uint64_t v30 = 0x65736C6166;
        }
        unint64_t v31 = 0xE400000000000000;
        if ((v29 & 1) == 0) {
          unint64_t v31 = 0xE500000000000000;
        }
      }
      *uint64_t v15 = v30;
      v15[1] = v31;
      uint64_t v32 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 0, 1, v32);
      uint64_t v33 = v38;
      *a6 = v37;
      a6[1] = v33;
      uint64_t v34 = type metadata accessor for FormatInspectionItem(0);
      a6[2] = 0;
      a6[3] = 0;
      sub_1C0445B7C((uint64_t)v15, (uint64_t)a6 + *(int *)(v34 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      long long v35 = (char *)a6 + *(int *)(v34 + 28);
      *(void *)long long v35 = 0;
      *((void *)v35 + 1) = 0;
      v35[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    }
    return sub_1BFE94AD4(v46, *((uint64_t *)&v46 + 1), v47);
  }
  else
  {
    uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v22 = (char *)a6 + *(int *)(v21 + 24);
    uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    unsigned __int8 v25 = (char *)a6 + *(int *)(v21 + 28);
    *(void *)unsigned __int8 v25 = 0;
    *((void *)v25 + 1) = 0;
    v25[16] = -1;
  }
  return result;
}

uint64_t sub_1C0437C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v10 - 8);
  int v12 = (void *)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  if (a3)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      sub_1BFDB3960(a3);
      uint64_t v13 = v35;
      uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v15 = (void *)((char *)a5 + *(int *)(v14 + 24));
      *uint64_t v15 = v13;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      uint64_t v17 = (char *)a5 + *(int *)(v14 + 28);
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      v17[16] = -1;
LABEL_7:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(&v35, (uint64_t)v34);
      __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      uint64_t v22 = sub_1C152088C();
      uint64_t v24 = v23;
      sub_1BFDB3960(a3);
      *int v12 = v22;
      v12[1] = v24;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 0, 1, v25);
      *a5 = a1;
      a5[1] = a2;
      uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1C0445B7C((uint64_t)v12, (uint64_t)a5 + *(int *)(v26 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      char v27 = (char *)a5 + *(int *)(v26 + 28);
      *(void *)char v27 = 0;
      *((void *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      goto LABEL_7;
    }
    uint64_t v28 = v36;
    uint64_t v29 = v37;
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v30 = (void *)((char *)a5 + *(int *)(v18 + 24));
    *(void *)&long long v35 = 0;
    *((void *)&v35 + 1) = 0xE000000000000000;
    v34[0] = v28;
    v34[1] = v29;
    sub_1C152036C();
    sub_1BFDB3960(a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = *((void *)&v35 + 1);
    *uint64_t v30 = v35;
    v30[1] = v31;
    uint64_t v32 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v30, 0, 1, v32);
  }
  else
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a5 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  }
  *a5 = a1;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = 0;
  uint64_t v33 = (char *)a5 + *(int *)(v18 + 28);
  *(void *)uint64_t v33 = 0;
  *((void *)v33 + 1) = 0;
  v33[16] = -1;
  return result;
}

uint64_t sub_1C043801C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C04453F4(a3, (uint64_t)v24, &qword_1EA19B6A8, (uint64_t)&type metadata for FormatSplitBackgroundSide);
  uint64_t v7 = v24[0];
  uint64_t v8 = v24[1];
  uint64_t v9 = v24[2];
  uint64_t v10 = v24[3];
  uint64_t v11 = v24[4];
  uint64_t v12 = v24[5];
  uint64_t v13 = v24[6];
  uint64_t v14 = v24[7];
  char v15 = v25;
  sub_1C04453F4(a3, (uint64_t)v26, &qword_1EA19B6A8, (uint64_t)&type metadata for FormatSplitBackgroundSide);
  if (v26[64] == 255)
  {
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a4 + *(int *)(v16 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  }
  else
  {
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v16 + 24));
    *uint64_t v17 = v7;
    if (v15)
    {
      v17[1] = v8;
      v17[2] = v9;
      v17[3] = v10;
      v17[4] = v11;
      v17[5] = v12;
      v17[6] = v13;
      v17[7] = v14;
    }
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v22 = (char *)a4 + *(int *)(v16 + 28);
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  v22[16] = -1;
  return result;
}

uint64_t sub_1C04381F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043AA00(a1, a2, a3, &qword_1EB860CD0, (uint64_t)&type metadata for FormatIssueCoverTraits, &qword_1EA19B698, a4);
}

uint64_t sub_1C043820C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v30[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  if (a3)
  {
    sub_1C044594C(0, (unint64_t *)&qword_1EB87A000, (uint64_t (*)(void))sub_1BFDFD140, (uint64_t)&type metadata for FormatBorderEdge, MEMORY[0x1E4FBB510]);
    uint64_t v12 = v11;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v31;
      uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
      char v15 = (void *)((char *)a4 + *(int *)(v14 + 24));
      *char v15 = v13;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v17 = (char *)a4 + *(int *)(v14 + 28);
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      uint64_t v32 = v12;
      unint64_t v33 = sub_1C0444E08();
      *(void *)&long long v31 = v34;
      sub_1BFC773DC(&v31, (uint64_t)v30);
      __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      sub_1BFDFD140();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C151EFCC();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      *uint64_t v10 = v23;
      v10[1] = v25;
      uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v27 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v28 = (char *)a4 + *(int *)(v27 + 28);
      *(void *)uint64_t v28 = 0;
      *((void *)v28 + 1) = 0;
      v28[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a4 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = (char *)a4 + *(int *)(v18 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1C043854C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1BFEF68C0(a3);
      uint64_t v16 = v29;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v18 = (void *)((char *)a4 + *(int *)(v17 + 24));
      *uint64_t v18 = v16;
      uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v20 = (char *)a4 + *(int *)(v17 + 28);
      *(void *)uint64_t v20 = 0;
      *((void *)v20 + 1) = 0;
      v20[16] = -1;
    }
    else
    {
      uint64_t v30 = &type metadata for FormatFloat;
      unint64_t v31 = sub_1C008415C();
      *(void *)&long long v29 = v32;
      sub_1BFC773DC(&v29, (uint64_t)v28);
      __swift_project_boxed_opaque_existential_1(v28, v28[3]);
      swift_retain();
      uint64_t v21 = FormatFloat.description.getter();
      uint64_t v23 = v22;
      sub_1BFEF68C0(a3);
      *uint64_t v10 = v21;
      v10[1] = v23;
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 0, 1, v24);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v25 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v26 = (char *)a4 + *(int *)(v25 + 28);
      *(void *)uint64_t v26 = 0;
      *((void *)v26 + 1) = 0;
      v26[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
    return swift_release();
  }
  else
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    char v15 = (char *)a4 + *(int *)(v11 + 28);
    *(void *)char v15 = 0;
    *((void *)v15 + 1) = 0;
    v15[16] = -1;
  }
  return result;
}

uint64_t sub_1C0438848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v31[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v33 = a3;
  if (v8 == 3)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = *(int *)(v12 + 28);
    goto LABEL_6;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v32;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v32, (uint64_t)v31);
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    *uint64_t v11 = sub_1C152088C();
    v11[1] = v21;
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 0, 1, v22);
    *a4 = a1;
    a4[1] = a2;
    uint64_t v23 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v23 + 24), (uint64_t (*)(void))sub_1C0444DD4);
    uint64_t v24 = (char *)a4 + *(int *)(v23 + 28);
    *(void *)uint64_t v24 = 0;
    *((void *)v24 + 1) = 0;
    v24[16] = -1;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  unsigned __int8 v25 = v33;
  uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v27 = (void *)((char *)a4 + *(int *)(v26 + 24));
  *(void *)&long long v32 = 0;
  *((void *)&v32 + 1) = 0xE000000000000000;
  LOBYTE(v31[0]) = v25;
  sub_1C152036C();
  uint64_t v28 = *((void *)&v32 + 1);
  *uint64_t v27 = v32;
  v27[1] = v28;
  uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 0, 1, v29);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v19 = *(int *)(v26 + 28);
LABEL_6:
  uint64_t v20 = (char *)a4 + v19;
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  v20[16] = -1;
  return result;
}

uint64_t sub_1C0438BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  return sub_1C0438BD0(a1, a2, a3, a4, a5, (void (*)(void, __n128))type metadata accessor for CGPoint, a6);
}

uint64_t sub_1C0438BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void (*a6)(void, __n128)@<X5>, void *a7@<X8>)
{
  char v14 = a5 & 1;
  sub_1C0444DD4(0);
  __n128 v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (void *)((char *)&v39[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  char v43 = v14;
  if (a5)
  {
    uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v20 = (char *)a7 + *(int *)(v19 + 24);
    uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
LABEL_5:
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    uint64_t v26 = *(int *)(v19 + 28);
LABEL_6:
    uint64_t v27 = (char *)a7 + v26;
    *(void *)uint64_t v27 = 0;
    *((void *)v27 + 1) = 0;
    v27[16] = -1;
    return result;
  }
  a6(0, v16);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v23 = v40;
    uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v24 = (void *)((char *)a7 + *(int *)(v19 + 24));
    *uint64_t v24 = v23;
    uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
    goto LABEL_5;
  }
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
  if (!swift_dynamicCast())
  {
    uint64_t v32 = v41;
    uint64_t v33 = v42;
    uint64_t v34 = type metadata accessor for FormatInspectionItem(0);
    long long v35 = (void *)((char *)a7 + *(int *)(v34 + 24));
    *(void *)&long long v40 = 0;
    *((void *)&v40 + 1) = 0xE000000000000000;
    v39[0] = v32;
    v39[1] = v33;
    sub_1C152036C();
    uint64_t v36 = *((void *)&v40 + 1);
    *long long v35 = v40;
    v35[1] = v36;
    uint64_t v37 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 0, 1, v37);
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    uint64_t v26 = *(int *)(v34 + 28);
    goto LABEL_6;
  }
  sub_1BFC773DC(&v40, (uint64_t)v39);
  __swift_project_boxed_opaque_existential_1(v39, v39[3]);
  *uint64_t v18 = sub_1C152088C();
  v18[1] = v28;
  uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 0, 1, v29);
  *a7 = a1;
  a7[1] = a2;
  uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
  a7[2] = 0;
  a7[3] = 0;
  sub_1C0445B7C((uint64_t)v18, (uint64_t)a7 + *(int *)(v30 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  unint64_t v31 = (char *)a7 + *(int *)(v30 + 28);
  *(void *)unint64_t v31 = 0;
  *((void *)v31 + 1) = 0;
  v31[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1C0438F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043AA00(a1, a2, a3, (unint64_t *)&qword_1EB879F58, MEMORY[0x1E4FBB3D0], &qword_1EA19B610, a4);
}

uint64_t sub_1C0438F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  if (a5)
  {
    uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v26 = (char *)a6 + *(int *)(v25 + 24);
    uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    uint64_t v28 = (char *)a6 + *(int *)(v25 + 28);
    *(void *)uint64_t v28 = 0;
    *((void *)v28 + 1) = 0;
    v28[16] = -1;
  }
  else
  {
    *(void *)&v30[0] = 40;
    *((void *)&v30[0] + 1) = 0xE100000000000000;
    sub_1C151EF4C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151EF4C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1C0445DB0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    sub_1C0181BEC(0);
    uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 72);
    uint64_t v29 = a2;
    unint64_t v14 = (*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
    unint64_t v16 = v15 + v14;
    sub_1C042F1BC(88, 0xE100000000000000, a3, 0, (void *)(v15 + v14));
    uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v18 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    v18(v16, 0, 1, v17);
    uint64_t v19 = (void *)(v16 + v13);
    sub_1C042F1BC(89, 0xE100000000000000, a4, 0, v19);
    v18((unint64_t)v19, 0, 1, v17);
    sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v15, v30);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(inited + 64) = &off_1F1BDEC90;
    uint64_t v20 = swift_allocObject();
    *(void *)(inited + 32) = v20;
    *(void *)(v20 + 48) = v31;
    long long v21 = v30[1];
    *(_OWORD *)(v20 + 16) = v30[0];
    *(_OWORD *)(v20 + 32) = v21;
    uint64_t v22 = sub_1C0233FC8(inited);
    swift_setDeallocating();
    sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
    swift_arrayDestroy();
    uint64_t v23 = sub_1C131B79C(v22);
    swift_bridgeObjectRelease();
    return sub_1C042F458(a1, v29, (uint64_t)v23, 40, 0xE100000000000000, a6);
  }
  return result;
}

uint64_t sub_1C0439354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (a3)
  {
    uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v9 = (void *)((char *)a4 + *(int *)(v8 + 24));
    *uint64_t v9 = a3;
    uint64_t v10 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v8 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  unint64_t v14 = (char *)a4 + *(int *)(v8 + 28);
  *(void *)unint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  unsigned char v14[16] = -1;
  return result;
}

void sub_1C0439468(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v33[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v37 = a3;
  if (a3)
  {
    type metadata accessor for CAMediaTimingFillMode(0);
    uint64_t v12 = v11;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    id v13 = a3;
    if (swift_dynamicCast())
    {

      uint64_t v14 = v34;
      uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v16 = (void *)((char *)a4 + *(int *)(v15 + 24));
      void *v16 = v14;
      uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v18 = (char *)a4 + *(int *)(v15 + 28);
      *(void *)uint64_t v18 = 0;
      *((void *)v18 + 1) = 0;
      v18[16] = -1;
    }
    else
    {
      uint64_t v35 = v12;
      uint64_t v23 = sub_1C0445E14(&qword_1EA19B688, type metadata accessor for CAMediaTimingFillMode);
      id v24 = v37;
      uint64_t v36 = v23;
      *(void *)&long long v34 = v37;
      sub_1BFC773DC(&v34, (uint64_t)v33);
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      id v25 = v24;
      uint64_t v26 = CAMediaTimingFillMode.description.getter();
      uint64_t v28 = v27;

      *uint64_t v10 = v26;
      v10[1] = v28;
      uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 0, 1, v29);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v30 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v31 = (char *)a4 + *(int *)(v30 + 28);
      *(void *)uint64_t v31 = 0;
      *((void *)v31 + 1) = 0;
      v31[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
  }
  else
  {
    uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v20 = (char *)a4 + *(int *)(v19 + 24);
    uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = (char *)a4 + *(int *)(v19 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
}

uint64_t sub_1C043977C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444EEC(a3, (uint64_t)v22, (unint64_t *)&qword_1EA1ACFC0, (uint64_t)&type metadata for FormatInspectionFeedItem);
  if (v23)
  {
    sub_1C0445330((uint64_t)v22, (uint64_t)v20);
    sub_1C0444F6C(a3, (unint64_t *)&qword_1EA1ACFC0, (uint64_t)&type metadata for FormatInspectionFeedItem);
    uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v9 = (_OWORD *)((char *)a4 + *(int *)(v8 + 24));
    long long v10 = v21[0];
    void v9[4] = v20[4];
    v9[5] = v10;
    *(_OWORD *)((char *)v9 + 89) = *(_OWORD *)((char *)v21 + 9);
    long long v11 = v20[1];
    *uint64_t v9 = v20[0];
    v9[1] = v11;
    long long v12 = v20[3];
    v9[2] = v20[2];
    void v9[3] = v12;
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 0, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v14 = (char *)a4 + *(int *)(v8 + 28);
    *(void *)uint64_t v14 = 0;
    *((void *)v14 + 1) = 0;
    unsigned char v14[16] = -1;
    return sub_1C044538C((uint64_t)v22);
  }
  else
  {
    sub_1C0444F6C(a3, (unint64_t *)&qword_1EA1ACFC0, (uint64_t)&type metadata for FormatInspectionFeedItem);
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (char *)a4 + *(int *)(v16 + 24);
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v16 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
  }
  return result;
}

uint64_t sub_1C0439948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if ((~a3 & 0xF000000000000007) != 0)
  {
    switch(a3 >> 61)
    {
      case 1uLL:
        uint64_t v18 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v19 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        long long v58 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v20 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        uint64_t v21 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
        uint64_t v22 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
        uint64_t v23 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
        uint64_t v59 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v24 = a4 + *(int *)(v59 + 24);
        *(void *)uint64_t v24 = v18;
        *(void *)(v24 + 8) = v19;
        *(_OWORD *)(v24 + 16) = v58;
        *(void *)(v24 + 32) = v20;
        *(void *)(v24 + 40) = v21;
        *(void *)(v24 + 48) = v22;
        *(void *)(v24 + 56) = v23;
        uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFDB3920(v22);
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        *(_OWORD *)(a4 + 16) = xmmword_1C1549030;
        uint64_t v11 = *(int *)(v59 + 28);
        break;
      case 2uLL:
        long long v26 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
        long long v64 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
        long long v65 = v26;
        long long v27 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
        long long v66 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
        long long v67 = v27;
        long long v28 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        long long v60 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v61 = v28;
        long long v29 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
        long long v62 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        long long v63 = v29;
        uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v31 = (void *)(a4 + *(int *)(v30 + 24));
        memmove(v31, (const void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 16), 0x80uLL);
        uint64_t v32 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
        sub_1C0445004((uint64_t)&v60);
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        long long v33 = xmmword_1C1549020;
        goto LABEL_11;
      case 3uLL:
        uint64_t v34 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v35 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v36 = (uint64_t *)(a4 + *(int *)(v35 + 24));
        *uint64_t v36 = v34;
        uint64_t v37 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
        sub_1BFF7B774(v34);
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        *(void *)(a4 + 16) = 0xD000000000000012;
        *(void *)(a4 + 24) = 0x80000001C16101A0;
        uint64_t v11 = *(int *)(v35 + 28);
        break;
      case 4uLL:
        long long v38 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
        long long v66 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
        long long v67 = v38;
        *(_OWORD *)uint64_t v68 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
        *(_OWORD *)&v68[9] = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x99);
        long long v39 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
        long long v62 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        long long v63 = v39;
        long long v40 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
        long long v64 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
        long long v65 = v40;
        long long v41 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        long long v60 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v61 = v41;
        uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v42 = (void *)(a4 + *(int *)(v30 + 24));
        memmove(v42, (const void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 16), 0x99uLL);
        uint64_t v43 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
        sub_1C0445120((uint64_t)&v60);
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        long long v33 = xmmword_1C1549080;
        goto LABEL_11;
      case 5uLL:
        uint64_t v45 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v44 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
        long long v46 = (void *)(a4 + *(int *)(v30 + 24));
        *long long v46 = v45;
        v46[1] = v44;
        uint64_t v47 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
        swift_retain();
        swift_retain();
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        long long v33 = xmmword_1C1549070;
        goto LABEL_11;
      case 6uLL:
        long long v48 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
        long long v66 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
        long long v67 = v48;
        *(_OWORD *)uint64_t v68 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
        v68[16] = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0xA0);
        long long v49 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
        long long v62 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        long long v63 = v49;
        long long v50 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
        long long v64 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
        long long v65 = v50;
        long long v51 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        long long v60 = *(_OWORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v61 = v51;
        uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v52 = (void *)(a4 + *(int *)(v30 + 24));
        memmove(v52, (const void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 16), 0x91uLL);
        uint64_t v53 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
        sub_1C0445048((uint64_t)&v60);
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        long long v33 = xmmword_1C1549060;
LABEL_11:
        *(_OWORD *)(a4 + 16) = v33;
        uint64_t v11 = *(int *)(v30 + 28);
        break;
      case 7uLL:
        char v54 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v55 = (unsigned char *)(a4 + *(int *)(v14 + 24));
        *uint64_t v55 = v54;
        uint64_t v56 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        long long v17 = xmmword_1C1549050;
        goto LABEL_13;
      default:
        uint64_t v13 = *(void *)(a3 + 16);
        uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v15 = (void *)(a4 + *(int *)(v14 + 24));
        *uint64_t v15 = v13;
        uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
        swift_retain();
        uint64_t result = sub_1BFEF68C0(a3);
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        long long v17 = xmmword_1C1549090;
LABEL_13:
        *(_OWORD *)(a4 + 16) = v17;
        uint64_t v11 = *(int *)(v14 + 28);
        break;
    }
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v8 = a4 + *(int *)(v7 + 24);
    uint64_t v9 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = a2;
    *(void *)(a4 + 16) = 0;
    *(void *)(a4 + 24) = 0;
    uint64_t v11 = *(int *)(v7 + 28);
  }
  uint64_t v57 = a4 + v11;
  *(void *)uint64_t v57 = 0;
  *(void *)(v57 + 8) = 0;
  *(unsigned char *)(v57 + 16) = -1;
  return result;
}

uint64_t sub_1C043A010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (void *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C04453F4(a3, (uint64_t)v29, &qword_1EB865C60, (uint64_t)&type metadata for FormatEdgeInsets);
  sub_1C04453F4(a3, (uint64_t)v30, &qword_1EB865C60, (uint64_t)&type metadata for FormatEdgeInsets);
  if (v30[32] == 1)
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    long long v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v18 = (char *)a4 + *(int *)(v11 + 28);
    *(void *)uint64_t v18 = 0;
    *((void *)v18 + 1) = 0;
    v18[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v15 = v26;
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v16 = (void *)((char *)a4 + *(int *)(v11 + 24));
    void *v16 = v15;
    uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
    goto LABEL_5;
  }
  long long v27 = &type metadata for FormatEdgeInsets;
  unint64_t v28 = sub_1C0445A98();
  uint64_t v19 = swift_allocObject();
  *(void *)&long long v26 = v19;
  long long v20 = v29[1];
  *(_OWORD *)(v19 + 16) = v29[0];
  *(_OWORD *)(v19 + 32) = v20;
  sub_1BFC773DC(&v26, (uint64_t)v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  *long long v10 = FormatEdgeInsets.description.getter();
  v10[1] = v21;
  uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v23 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v23 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v24 = (char *)a4 + *(int *)(v23 + 28);
  *(void *)uint64_t v24 = 0;
  *((void *)v24 + 1) = 0;
  v24[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1C043A2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C04453F4(a3, (uint64_t)v22, &qword_1EA19B5F8, (uint64_t)&type metadata for FormatInspectionFrame);
  uint64_t v8 = v22[0];
  uint64_t v9 = v22[1];
  uint64_t v10 = v22[2];
  uint64_t v11 = v22[3];
  uint64_t v12 = v22[4];
  uint64_t v13 = v22[5];
  char v14 = v23;
  sub_1C04453F4(a3, (uint64_t)v24, &qword_1EA19B5F8, (uint64_t)&type metadata for FormatInspectionFrame);
  uint64_t v15 = v25;
  uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v17 = (char *)a4 + *(int *)(v16 + 24);
  if (v15 == 1)
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  }
  else
  {
    *(void *)uint64_t v17 = v8;
    *((void *)v17 + 1) = v9;
    *((void *)v17 + 2) = v10;
    *((void *)v17 + 3) = v11;
    *((void *)v17 + 4) = v12;
    *((void *)v17 + 5) = v13;
    v17[48] = v14;
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 0, 1, v20);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v21 = (char *)a4 + *(int *)(v16 + 28);
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = -1;
  return result;
}

uint64_t sub_1C043A478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FormatItemNodeAction();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFA18D8(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0445CB4(a3, (uint64_t)v17, (uint64_t (*)(void))sub_1BFFA18D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) != 1)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFA18D8);
      uint64_t v22 = v37;
      uint64_t v23 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v24 = (void *)((char *)a4 + *(int *)(v23 + 24));
      *uint64_t v24 = v22;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      long long v26 = (char *)a4 + *(int *)(v23 + 28);
      *(void *)long long v26 = 0;
      *((void *)v26 + 1) = 0;
      v26[16] = -1;
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (!swift_dynamicCast())
      {
        sub_1C0445B7C((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
        *(void *)&long long v37 = 0;
        *((void *)&v37 + 1) = 0xE000000000000000;
        sub_1C152036C();
        long long v33 = v37;
        sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFA18D8);
        sub_1C0445D1C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
        *(_OWORD *)char v14 = v33;
        uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v14, 0, 1, v34);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        uint64_t result = sub_1C0445B7C((uint64_t)v14, (uint64_t)a4 + *(int *)(v18 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        goto LABEL_9;
      }
      sub_1BFC773DC(&v37, (uint64_t)v36);
      __swift_project_boxed_opaque_existential_1(v36, v36[3]);
      uint64_t v27 = sub_1C152088C();
      uint64_t v29 = v28;
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFA18D8);
      *(void *)char v14 = v27;
      *((void *)v14 + 1) = v29;
      uint64_t v30 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v14, 0, 1, v30);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v14, (uint64_t)a4 + *(int *)(v31 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v32 = (char *)a4 + *(int *)(v31 + 28);
      *(void *)uint64_t v32 = 0;
      *((void *)v32 + 1) = 0;
      v32[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    }
    return sub_1C0445D1C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  }
  sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1BFFA18D8);
  uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v19 = (char *)a4 + *(int *)(v18 + 24);
  uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
LABEL_9:
  uint64_t v35 = (char *)a4 + *(int *)(v18 + 28);
  *(void *)uint64_t v35 = 0;
  *((void *)v35 + 1) = 0;
  v35[16] = -1;
  return result;
}

uint64_t sub_1C043A9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043AA00(a1, a2, a3, &qword_1EB88FF38, MEMORY[0x1E4FBC958], &qword_1EA19B620, a4);
}

uint64_t sub_1C043AA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, void *a7@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (void *)((char *)&v37[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = a3;
  if (a3)
  {
    sub_1C0445AFC(0, a4, a5, MEMORY[0x1E4FBB320]);
    uint64_t v18 = v17;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = v38;
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v21 = (void *)((char *)a7 + *(int *)(v20 + 24));
      *uint64_t v21 = v19;
      uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
      *a7 = a1;
      a7[1] = a2;
      a7[2] = 0;
      a7[3] = 0;
      uint64_t v23 = (char *)a7 + *(int *)(v20 + 28);
      *(void *)uint64_t v23 = 0;
      *((void *)v23 + 1) = 0;
      v23[16] = -1;
    }
    else
    {
      uint64_t v39 = v18;
      uint64_t v40 = sub_1C04454EC(a6, a4, a5);
      *(void *)&long long v38 = v41;
      sub_1BFC773DC(&v38, (uint64_t)v37);
      uint64_t v29 = *__swift_project_boxed_opaque_existential_1(v37, v37[3]);
      swift_bridgeObjectRetain();
      uint64_t v30 = MEMORY[0x1C18C6710](v29, a5);
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t *v16 = v30;
      v16[1] = v32;
      uint64_t v33 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v16, 0, 1, v33);
      *a7 = a1;
      a7[1] = a2;
      uint64_t v34 = type metadata accessor for FormatInspectionItem(0);
      a7[2] = 0;
      a7[3] = 0;
      sub_1C0445B7C((uint64_t)v16, (uint64_t)a7 + *(int *)(v34 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v35 = (char *)a7 + *(int *)(v34 + 28);
      *(void *)uint64_t v35 = 0;
      *((void *)v35 + 1) = 0;
      v35[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v25 = (char *)a7 + *(int *)(v24 + 24);
    uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    uint64_t v28 = (char *)a7 + *(int *)(v24 + 28);
    *(void *)uint64_t v28 = 0;
    *((void *)v28 + 1) = 0;
    v28[16] = -1;
  }
  return result;
}

uint64_t sub_1C043AD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1C04455A4(a3);
      uint64_t v15 = v33;
      uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v16 + 24));
      *uint64_t v17 = v15;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v19 = (char *)a4 + *(int *)(v16 + 28);
      *(void *)uint64_t v19 = 0;
      *((void *)v19 + 1) = 0;
      v19[16] = -1;
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (!swift_dynamicCast())
      {
        uint64_t v26 = v34;
        uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v27 = (void *)((char *)a4 + *(int *)(v11 + 24));
        *(void *)&long long v33 = 0;
        *((void *)&v33 + 1) = 0xE000000000000000;
        v32[0] = v26;
        sub_1C152036C();
        sub_1C04455A4(a3);
        swift_release();
        uint64_t v28 = *((void *)&v33 + 1);
        *uint64_t v27 = v33;
        v27[1] = v28;
        uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 0, 1, v29);
        goto LABEL_9;
      }
      sub_1BFC773DC(&v33, (uint64_t)v32);
      __swift_project_boxed_opaque_existential_1(v32, v32[3]);
      uint64_t v20 = sub_1C152088C();
      uint64_t v22 = v21;
      sub_1C04455A4(a3);
      *uint64_t v10 = v20;
      v10[1] = v22;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    return swift_release();
  }
  uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
  uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_9:
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v30 = (char *)a4 + *(int *)(v11 + 28);
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  v30[16] = -1;
  return result;
}

uint64_t sub_1C043B100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  unsigned int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v29 = a3;
  if (v8 < 0xF8)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v16 = v28;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *uint64_t v11 = sub_1C152088C();
        v11[1] = v19;
        uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v22 = (char *)a4 + *(int *)(v21 + 28);
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      unsigned __int8 v23 = v29;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1C152036C();
      uint64_t v24 = *((void *)&v28 + 1);
      *uint64_t v17 = v28;
      v17[1] = v24;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  else
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v25 = (char *)a4 + *(int *)(v12 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C043B430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  char v43 = a6;
  if (a3 == 4)
  {
    uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v18 = (char *)a7 + *(int *)(v17 + 24);
    uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v21 = v37;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v22 = (void *)((char *)a7 + *(int *)(v17 + 24));
      *uint64_t v22 = v21;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v37, (uint64_t)&v34);
        __swift_project_boxed_opaque_existential_1(&v34, v36);
        uint64_t *v16 = sub_1C152088C();
        v16[1] = v24;
        uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v16, 0, 1, v25);
        *a7 = a1;
        a7[1] = a2;
        uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
        a7[2] = 0;
        a7[3] = 0;
        sub_1C0445B7C((uint64_t)v16, (uint64_t)a7 + *(int *)(v26 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        uint64_t v27 = (char *)a7 + *(int *)(v26 + 28);
        *(void *)uint64_t v27 = 0;
        *((void *)v27 + 1) = 0;
        v27[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      }
      char v28 = v40;
      uint64_t v29 = v41;
      uint64_t v30 = v42;
      char v31 = v43;
      uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v22 = (void *)((char *)a7 + *(int *)(v17 + 24));
      uint64_t v34 = 0;
      unint64_t v35 = 0xE000000000000000;
      LOBYTE(v37) = v28;
      *((void *)&v37 + 1) = v29;
      uint64_t v38 = v30;
      char v39 = v31;
      sub_1C152036C();
      unint64_t v32 = v35;
      *uint64_t v22 = v34;
      v22[1] = v32;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  *a7 = a1;
  a7[1] = a2;
  a7[2] = 0;
  a7[3] = 0;
  long long v33 = (char *)a7 + *(int *)(v17 + 28);
  *(void *)long long v33 = 0;
  *((void *)v33 + 1) = 0;
  v33[16] = -1;
  return result;
}

uint64_t sub_1C043B78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1BFE14324(a3);
      uint64_t v15 = v33;
      uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a4 + *(int *)(v16 + 24));
      *uint64_t v17 = v15;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v19 = (char *)a4 + *(int *)(v16 + 28);
      *(void *)uint64_t v19 = 0;
      *((void *)v19 + 1) = 0;
      v19[16] = -1;
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (!swift_dynamicCast())
      {
        uint64_t v26 = v34;
        uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v27 = (void *)((char *)a4 + *(int *)(v11 + 24));
        *(void *)&long long v33 = 0;
        *((void *)&v33 + 1) = 0xE000000000000000;
        v32[0] = v26;
        sub_1C152036C();
        sub_1BFE14324(a3);
        swift_release();
        uint64_t v28 = *((void *)&v33 + 1);
        *uint64_t v27 = v33;
        v27[1] = v28;
        uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 0, 1, v29);
        goto LABEL_9;
      }
      sub_1BFC773DC(&v33, (uint64_t)v32);
      __swift_project_boxed_opaque_existential_1(v32, v32[3]);
      uint64_t v20 = sub_1C152088C();
      uint64_t v22 = v21;
      sub_1BFE14324(a3);
      *uint64_t v10 = v20;
      v10[1] = v22;
      uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    return swift_release();
  }
  uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
  uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_9:
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v30 = (char *)a4 + *(int *)(v11 + 28);
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  v30[16] = -1;
  return result;
}

uint64_t sub_1C043BB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = a3;
  if (a3)
  {
    uint64_t v11 = type metadata accessor for SportsScoreDataVisualization();
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_retain();
    if (swift_dynamicCast())
    {
      swift_release();
      uint64_t v12 = v30;
      uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v14 = (void *)((char *)a4 + *(int *)(v13 + 24));
      *uint64_t v14 = v12;
      uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v16 = (char *)a4 + *(int *)(v13 + 28);
      *(void *)uint64_t v16 = 0;
      *((void *)v16 + 1) = 0;
      v16[16] = -1;
    }
    else
    {
      uint64_t v31 = v11;
      uint64_t v32 = sub_1C0445E14(&qword_1EA19B630, (void (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization);
      *(void *)&long long v30 = v33;
      sub_1BFC773DC(&v30, (uint64_t)v29);
      __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      swift_retain();
      uint64_t v22 = SportsScoreDataVisualization.description.getter();
      uint64_t v24 = v23;
      swift_release();
      *uint64_t v10 = v22;
      v10[1] = v24;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v27 = (char *)a4 + *(int *)(v26 + 28);
      *(void *)uint64_t v27 = 0;
      *((void *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_release();
  }
  else
  {
    uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v18 = (char *)a4 + *(int *)(v17 + 24);
    uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v21 = (char *)a4 + *(int *)(v17 + 28);
    *(void *)uint64_t v21 = 0;
    *((void *)v21 + 1) = 0;
    v21[16] = -1;
  }
  return result;
}

uint64_t sub_1C043BE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043BEA4(a1, a2, a3, (void (*)(void, __n128))type metadata accessor for SportsStandingDataVisualization, a4);
}

uint64_t sub_1C043BE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043BEA4(a1, a2, a3, (void (*)(void, __n128))type metadata accessor for SportsBracketGroupDataVisualization, a4);
}

uint64_t sub_1C043BEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void, __n128)@<X3>, void *a5@<X8>)
{
  sub_1C0444DD4(0);
  __n128 v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (void *)((char *)&v37[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = a3;
  if (a3)
  {
    a4(0, v11);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_retain();
    if (swift_dynamicCast())
    {
      swift_release();
      uint64_t v14 = v38;
      uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v16 = (void *)((char *)a5 + *(int *)(v15 + 24));
      void *v16 = v14;
      uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      uint64_t v18 = (char *)a5 + *(int *)(v15 + 28);
      *(void *)uint64_t v18 = 0;
      *((void *)v18 + 1) = 0;
      v18[16] = -1;
      return swift_release();
    }
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(&v38, (uint64_t)v37);
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      uint64_t v24 = sub_1C152088C();
      uint64_t v26 = v25;
      swift_release();
      *uint64_t v13 = v24;
      v13[1] = v26;
      uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
      *a5 = a1;
      a5[1] = a2;
      uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v29 = (char *)a5 + *(int *)(v28 + 28);
      *(void *)uint64_t v29 = 0;
      *((void *)v29 + 1) = 0;
      v29[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      return swift_release();
    }
    uint64_t v30 = v39;
    uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v32 = (void *)((char *)a5 + *(int *)(v31 + 24));
    *(void *)&long long v38 = 0;
    *((void *)&v38 + 1) = 0xE000000000000000;
    v37[0] = v30;
    sub_1C152036C();
    swift_release();
    swift_release();
    uint64_t v33 = *((void *)&v38 + 1);
    *uint64_t v32 = v38;
    v32[1] = v33;
    uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v32, 0, 1, v34);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = *(int *)(v31 + 28);
  }
  else
  {
    uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v20 = (char *)a5 + *(int *)(v19 + 24);
    uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = *(int *)(v19 + 28);
  }
  unint64_t v35 = (char *)a5 + v23;
  *(void *)unint64_t v35 = 0;
  *((void *)v35 + 1) = 0;
  v35[16] = -1;
  return result;
}

uint64_t sub_1C043C27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043BEA4(a1, a2, a3, (void (*)(void, __n128))type metadata accessor for SportsBoxScoreDataVisualization, a4);
}

uint64_t sub_1C043C294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043BEA4(a1, a2, a3, (void (*)(void, __n128))type metadata accessor for SportsLineScoreDataVisualization, a4);
}

uint64_t sub_1C043C2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043BEA4(a1, a2, a3, (void (*)(void, __n128))type metadata accessor for SportsInjuryReportDataVisualization, a4);
}

uint64_t sub_1C043C2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C043BEA4(a1, a2, a3, (void (*)(void, __n128))type metadata accessor for SportsKeyPlayerDataVisualization, a4);
}

uint64_t sub_1C043C2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v47 = a2;
  sub_1C04453F4(a3, (uint64_t)v65, &qword_1EA19B638, (uint64_t)&type metadata for FeedPuzzleType);
  uint64_t v7 = v65[3];
  unint64_t v8 = v65[4];
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v45 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C04453F4(a3, (uint64_t)v58, &qword_1EA19B638, (uint64_t)&type metadata for FeedPuzzleType);
  sub_1C04453F4(a3, (uint64_t)v66, &qword_1EA19B638, (uint64_t)&type metadata for FeedPuzzleType);
  if (v67)
  {
    uint64_t v46 = a1;
    sub_1BFF7FF04(v7, v8);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (swift_dynamicCast())
    {
      sub_1C0445610(a3);
      uint64_t v11 = v51;
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v13 = (void *)((char *)a4 + *(int *)(v12 + 24));
      *uint64_t v13 = v11;
      uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
      uint64_t v15 = v47;
      *a4 = v46;
      a4[1] = v15;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v16 = (char *)a4 + *(int *)(v12 + 28);
      *(void *)uint64_t v16 = 0;
      *((void *)v16 + 1) = 0;
      v16[16] = -1;
LABEL_7:
      sub_1BFEEFC20(v60, v61);
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(&v51, (uint64_t)&v48);
      __swift_project_boxed_opaque_existential_1(&v48, v50);
      uint64_t v23 = sub_1C152088C();
      uint64_t v25 = v24;
      sub_1C0445610(a3);
      uint64_t v26 = (uint64_t)v45;
      *(void *)uint64_t v45 = v23;
      *(void *)(v26 + 8) = v25;
      uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
      uint64_t v28 = v47;
      *a4 = v46;
      a4[1] = v28;
      uint64_t v29 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C(v26, (uint64_t)a4 + *(int *)(v29 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v30 = (char *)a4 + *(int *)(v29 + 28);
      *(void *)uint64_t v30 = 0;
      *((void *)v30 + 1) = 0;
      v30[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
      goto LABEL_7;
    }
    uint64_t v31 = v58[0];
    uint64_t v44 = v58[1];
    int v43 = v59;
    uint64_t v32 = v60;
    unint64_t v33 = v61;
    uint64_t v35 = v62;
    uint64_t v34 = v63;
    uint64_t v36 = v64;
    uint64_t v45 = (char *)type metadata accessor for FormatInspectionItem(0);
    long long v37 = (void *)((char *)a4 + *((int *)v45 + 6));
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    *(void *)&long long v51 = v31;
    *((void *)&v51 + 1) = v44;
    char v52 = v43;
    uint64_t v53 = v32;
    unint64_t v54 = v33;
    uint64_t v55 = v35;
    uint64_t v56 = v34;
    uint64_t v57 = v36;
    sub_1C152036C();
    sub_1C0445610(a3);
    sub_1BFEEFC20(v32, v33);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v38 = v49;
    *long long v37 = v48;
    v37[1] = v38;
    uint64_t v39 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v37, 0, 1, v39);
    uint64_t v40 = v47;
    *a4 = v46;
    a4[1] = v40;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = *((int *)v45 + 7);
  }
  else
  {
    uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v18 = (char *)a4 + *(int *)(v17 + 24);
    uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    uint64_t v21 = v47;
    *a4 = a1;
    a4[1] = v21;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = *(int *)(v17 + 28);
  }
  uint64_t v41 = (char *)a4 + v22;
  *(void *)uint64_t v41 = 0;
  *((void *)v41 + 1) = 0;
  v41[16] = -1;
  return result;
}

uint64_t sub_1C043C7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v30[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  if (a3)
  {
    sub_1BFEBC4B4();
    uint64_t v12 = v11;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v31;
      uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v15 = (void *)((char *)a4 + *(int *)(v14 + 24));
      *uint64_t v15 = v13;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v17 = (char *)a4 + *(int *)(v14 + 28);
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      uint64_t v32 = v12;
      uint64_t v33 = sub_1C0445E14(&qword_1EA19B640, (void (*)(uint64_t))sub_1BFEBC4B4);
      *(void *)&long long v31 = v34;
      sub_1BFC773DC(&v31, (uint64_t)v30);
      __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C151EFCC();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      *uint64_t v10 = v23;
      v10[1] = v25;
      uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v27 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v28 = (char *)a4 + *(int *)(v27 + 28);
      *(void *)uint64_t v28 = 0;
      *((void *)v28 + 1) = 0;
      v28[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a4 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = (char *)a4 + *(int *)(v18 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1C043CAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v31 = a3;
  if (v8 == 4)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v12 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v28;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  uint64_t v29 = &type metadata for FormatImageResize;
  unint64_t v30 = sub_1C044572C();
  LOBYTE(v28) = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  unint64_t v21 = 0xE500000000000000;
  uint64_t v22 = 0x656C616373;
  switch(*(unsigned char *)v20)
  {
    case 1:
      unint64_t v21 = 0xE400000000000000;
      uint64_t v22 = 1886351971;
      break;
    case 2:
      unint64_t v21 = 0xE400000000000000;
      uint64_t v22 = 1701603700;
      break;
    case 3:
      unint64_t v21 = 0xE900000000000063;
      uint64_t v22 = 0x69736E6972746E69;
      break;
    default:
      break;
  }
  *uint64_t v11 = v22;
  v11[1] = v21;
  uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C043CDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v31 = a3;
  if (v8 == 9)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v12 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v28;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  uint64_t v29 = &type metadata for FormatContentMode;
  unint64_t v30 = sub_1C04456D8();
  LOBYTE(v28) = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  unint64_t v21 = 0xE600000000000000;
  uint64_t v22 = 0x7265746E6563;
  switch(*(unsigned char *)v20)
  {
    case 1:
      unint64_t v21 = 0xE300000000000000;
      uint64_t v22 = 7368564;
      break;
    case 2:
      uint64_t v22 = 0x6D6F74746F62;
      break;
    case 3:
      unint64_t v21 = 0xE400000000000000;
      uint64_t v22 = 1952867692;
      break;
    case 4:
      unint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x7468676972;
      break;
    case 5:
      unint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x7466654C706F74;
      break;
    case 6:
      unint64_t v21 = 0xE800000000000000;
      uint64_t v22 = 0x7468676952706F74;
      break;
    case 7:
      unint64_t v21 = 0xEA00000000007466;
      uint64_t v22 = 0x654C6D6F74746F62;
      break;
    case 8:
      unint64_t v21 = 0xEB00000000746867;
      uint64_t v22 = 0x69526D6F74746F62;
      break;
    default:
      break;
  }
  *uint64_t v11 = v22;
  v11[1] = v21;
  uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C043D168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t (**)(void *))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a3 == 3)
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *uint64_t v10 = sub_1C0445E5C;
    v10[1] = (uint64_t (*)(void *))v15;
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t (**)(void *), void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 0, 1, v16);
    *a4 = a1;
    a4[1] = a2;
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    uint64_t result = sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v11 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  }
  uint64_t v17 = (char *)a4 + *(int *)(v11 + 28);
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = -1;
  return result;
}

void *sub_1C043D320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  sub_1C04453F4((uint64_t)a3, (uint64_t)v45, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  sub_1C04453F4((uint64_t)v45, (uint64_t)v47, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  sub_1C04453F4((uint64_t)a3, (uint64_t)v46, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  if (sub_1C044587C((uint64_t)v46) == 1)
  {
    uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v9 = (char *)a4 + *(int *)(v8 + 24);
    uint64_t v10 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
LABEL_9:
    uint64_t v28 = *(int *)(v8 + 28);
  }
  else
  {
    sub_1C04453F4((uint64_t)v47, (uint64_t)v43, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
    sub_1BFF6530C((uint64_t)v43, (uint64_t)v44);
    switch(sub_1C0444FE8((uint64_t)v44))
    {
      case 1u:
        uint64_t v32 = sub_1C0445038((uint64_t)v44);
        uint64_t v33 = *(void *)v32;
        uint64_t v34 = *(void *)(v32 + 8);
        long long v42 = *(_OWORD *)(v32 + 16);
        uint64_t v35 = *(void *)(v32 + 32);
        uint64_t v36 = *(void *)(v32 + 40);
        uint64_t v37 = *(void *)(v32 + 48);
        uint64_t v38 = *(void *)(v32 + 56);
        uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v39 = (char *)a4 + *(int *)(v8 + 24);
        *(void *)uint64_t v39 = v33;
        *((void *)v39 + 1) = v34;
        *((_OWORD *)v39 + 1) = v42;
        *((void *)v39 + 4) = v35;
        *((void *)v39 + 5) = v36;
        *((void *)v39 + 6) = v37;
        *((void *)v39 + 7) = v38;
        uint64_t v40 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (void *)(*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
        *a4 = a1;
        a4[1] = a2;
        *((_OWORD *)a4 + 1) = xmmword_1C1549030;
        goto LABEL_9;
      case 2u:
        uint64_t v19 = (_OWORD *)sub_1C0445038((uint64_t)v44);
        uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v20 = (_OWORD *)((char *)a4 + *(int *)(v15 + 24));
        long long v22 = v19[6];
        long long v21 = v19[7];
        long long v23 = v19[5];
        v20[4] = v19[4];
        _OWORD v20[5] = v23;
        v20[6] = v22;
        v20[7] = v21;
        long long v25 = v19[2];
        long long v24 = v19[3];
        long long v26 = v19[1];
        *uint64_t v20 = *v19;
        v20[1] = v26;
        v20[2] = v25;
        v20[3] = v24;
        uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (void *)(*(uint64_t (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v20, 0, 1, v27);
        *a4 = a1;
        a4[1] = a2;
        long long v18 = xmmword_1C1549020;
        break;
      case 3u:
        uint64_t v29 = *(void *)sub_1C0445038((uint64_t)v44);
        uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
        unint64_t v30 = (void *)((char *)a4 + *(int *)(v8 + 24));
        *unint64_t v30 = v29;
        uint64_t v31 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t result = (void *)(*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
        *a4 = a1;
        a4[1] = a2;
        a4[2] = 0xD000000000000012;
        a4[3] = 0x80000001C16101A0;
        goto LABEL_9;
      default:
        uint64_t v12 = (uint64_t *)sub_1C0445038((uint64_t)v44);
        uint64_t v13 = *v12;
        uint64_t v14 = v12[1];
        uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v16 = (void *)((char *)a4 + *(int *)(v15 + 24));
        void *v16 = v13;
        v16[1] = v14;
        uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
        swift_retain();
        swift_retain();
        uint64_t result = sub_1C0445894(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
        *a4 = a1;
        a4[1] = a2;
        long long v18 = xmmword_1C1549040;
        break;
    }
    *((_OWORD *)a4 + 1) = v18;
    uint64_t v28 = *(int *)(v15 + 28);
  }
  uint64_t v41 = (char *)a4 + v28;
  *(void *)uint64_t v41 = 0;
  *((void *)v41 + 1) = 0;
  v41[16] = -1;
  return result;
}

uint64_t sub_1C043D758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v31 = a3;
  if (v8 == 8)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v12 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v28;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  uint64_t v29 = &type metadata for FormatUnderlineStyle;
  unint64_t v30 = sub_1C0445780();
  LOBYTE(v28) = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  unint64_t v21 = 0xE600000000000000;
  unint64_t v22 = 0x656C676E6973;
  switch(*(unsigned char *)v20)
  {
    case 1:
      unint64_t v21 = 0xE500000000000000;
      unint64_t v22 = 0x6B63696874;
      break;
    case 2:
      unint64_t v22 = 0x656C62756F64;
      break;
    case 3:
      unint64_t v21 = 0xEA0000000000746FLL;
      goto LABEL_12;
    case 4:
      unint64_t v21 = 0xEB00000000687361;
      goto LABEL_12;
    case 5:
      unint64_t v21 = 0xEE00746F44687361;
LABEL_12:
      unint64_t v22 = 0x446E726574746170;
      break;
    case 6:
      unint64_t v21 = 0x80000001C1600140;
      unint64_t v22 = 0xD000000000000011;
      break;
    case 7:
      unint64_t v22 = 0x64726F577962;
      break;
    default:
      break;
  }
  *uint64_t v11 = v22;
  v11[1] = v21;
  uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  long long v25 = (char *)a4 + *(int *)(v24 + 28);
  *(void *)long long v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

void sub_1C043DAC0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
}

uint64_t sub_1C043DAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  return sub_1C043DEE8(a1, a2, a3, a4, (void (*)(void, __n128))type metadata accessor for SVPlaybackKind, a5);
}

void sub_1C043DAF0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
}

void sub_1C043DB08(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void (*a4)(void, __n128)@<X3>, void *a5@<X8>)
{
  sub_1C0444DD4(0);
  __n128 v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (void *)((char *)&v37[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v39 = a3;
  if (a3)
  {
    a4(0, v11);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    id v14 = a3;
    if (swift_dynamicCast())
    {

      uint64_t v15 = v38;
      uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (void *)((char *)a5 + *(int *)(v16 + 24));
      *uint64_t v17 = v15;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      uint64_t v19 = (char *)a5 + *(int *)(v16 + 28);
      *(void *)uint64_t v19 = 0;
      *((void *)v19 + 1) = 0;
      v19[16] = -1;
LABEL_7:

      return;
    }
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(&v38, (uint64_t)v37);
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      uint64_t v24 = sub_1C152088C();
      uint64_t v26 = v25;

      *uint64_t v13 = v24;
      v13[1] = v26;
      uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
      *a5 = a1;
      a5[1] = a2;
      uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v29 = (char *)a5 + *(int *)(v28 + 28);
      *(void *)uint64_t v29 = 0;
      *((void *)v29 + 1) = 0;
      v29[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      goto LABEL_7;
    }
    id v30 = v39;
    uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v32 = (void *)((char *)a5 + *(int *)(v31 + 24));
    *(void *)&long long v38 = 0;
    *((void *)&v38 + 1) = 0xE000000000000000;
    v37[0] = v30;
    sub_1C152036C();

    uint64_t v33 = *((void *)&v38 + 1);
    *uint64_t v32 = v38;
    v32[1] = v33;
    uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v32, 0, 1, v34);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = *(int *)(v31 + 28);
  }
  else
  {
    uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
    unint64_t v21 = (char *)a5 + *(int *)(v20 + 24);
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = *(int *)(v20 + 28);
  }
  uint64_t v35 = (char *)a5 + v23;
  *(void *)uint64_t v35 = 0;
  *((void *)v35 + 1) = 0;
  v35[16] = -1;
}

uint64_t sub_1C043DED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  return sub_1C043DEE8(a1, a2, a3, a4, (void (*)(void, __n128))type metadata accessor for ActionAtItemEnd, a5);
}

uint64_t sub_1C043DEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void (*a5)(void, __n128)@<X4>, void *a6@<X8>)
{
  char v12 = a4 & 1;
  sub_1C0444DD4(0);
  __n128 v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (void *)((char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = a3;
  char v38 = v12;
  if (a4)
  {
    uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v18 = (char *)a6 + *(int *)(v17 + 24);
    uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
LABEL_5:
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    uint64_t v24 = *(int *)(v17 + 28);
    goto LABEL_6;
  }
  a5(0, v14);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v21 = v36;
    uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v22 = (void *)((char *)a6 + *(int *)(v17 + 24));
    *uint64_t v22 = v21;
    uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
    goto LABEL_5;
  }
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v36, (uint64_t)v35);
    __swift_project_boxed_opaque_existential_1(v35, v35[3]);
    uint64_t *v16 = sub_1C152088C();
    v16[1] = v26;
    uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v16, 0, 1, v27);
    *a6 = a1;
    a6[1] = a2;
    uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
    a6[2] = 0;
    a6[3] = 0;
    sub_1C0445B7C((uint64_t)v16, (uint64_t)a6 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
    uint64_t v29 = (char *)a6 + *(int *)(v28 + 28);
    *(void *)uint64_t v29 = 0;
    *((void *)v29 + 1) = 0;
    v29[16] = -1;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  uint64_t v30 = v37;
  uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v32 = (void *)((char *)a6 + *(int *)(v31 + 24));
  *(void *)&long long v36 = 0;
  *((void *)&v36 + 1) = 0xE000000000000000;
  v35[0] = v30;
  sub_1C152036C();
  uint64_t v33 = *((void *)&v36 + 1);
  *uint64_t v32 = v36;
  v32[1] = v33;
  uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v32, 0, 1, v34);
  *a6 = a1;
  a6[1] = a2;
  a6[2] = 0;
  a6[3] = 0;
  uint64_t v24 = *(int *)(v31 + 28);
LABEL_6:
  uint64_t v25 = (char *)a6 + v24;
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C043E268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void *a4@<X8>)
{
  int v8 = a3;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  __n128 v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v31 = a3;
  if (v8 == 3)
  {
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = (char *)a4 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v12 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v28;
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (void *)((char *)a4 + *(int *)(v12 + 24));
    *uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  uint64_t v29 = &type metadata for IssueCover.Kind;
  unint64_t v30 = sub_1C0445A44();
  LOBYTE(v28) = v31;
  sub_1BFC773DC(&v28, (uint64_t)v27);
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  if (*(unsigned char *)v20)
  {
    if (*(unsigned char *)v20 == 1)
    {
      unint64_t v21 = 0xEC00000061696465;
      uint64_t v22 = 0x4D6465726579616CLL;
    }
    else
    {
      unint64_t v21 = 0xE400000000000000;
      uint64_t v22 = 1701736302;
    }
  }
  else
  {
    unint64_t v21 = 0xE500000000000000;
    uint64_t v22 = 0x6567616D69;
  }
  *__n128 v11 = v22;
  v11[1] = v21;
  uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v11, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v25 = (char *)a4 + *(int *)(v24 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C043E540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_1C151CA7C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  __n128 v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C04456A0(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0445CB4(a3, (uint64_t)v14, (uint64_t (*)(void))sub_1C04456A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C04456A0);
    uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v16 = (char *)a4 + *(int *)(v15 + 24);
    uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v19 = (char *)a4 + *(int *)(v15 + 28);
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C04456A0);
    uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
    unint64_t v21 = (char *)a4 + *(int *)(v20 + 24);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v21, v11, v8);
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v23 = (char *)a4 + *(int *)(v20 + 28);
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v23[16] = -1;
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  return result;
}

uint64_t sub_1C043E81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v30 = BYTE4(a3);
  int v29 = a3;
  if (BYTE4(a3) == 255)
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      uint64_t v15 = v28;
      uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v16 = (void *)((char *)a4 + *(int *)(v11 + 24));
      void *v16 = v15;
      uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *uint64_t v10 = sub_1C152088C();
        v10[1] = v18;
        uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 0, 1, v19);
        *a4 = a1;
        a4[1] = a2;
        uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v20 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        unint64_t v21 = (char *)a4 + *(int *)(v20 + 28);
        *(void *)unint64_t v21 = 0;
        *((void *)v21 + 1) = 0;
        v21[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      int v22 = v29;
      char v23 = v30;
      uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v16 = (void *)((char *)a4 + *(int *)(v11 + 24));
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      LODWORD(v27[0]) = v22;
      BYTE4(v27[0]) = v23;
      sub_1C152036C();
      uint64_t v24 = *((void *)&v28 + 1);
      void *v16 = v28;
      v16[1] = v24;
      uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v25 = (char *)a4 + *(int *)(v11 + 28);
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1C043EB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0445B7C(a3, (uint64_t)&v37, (uint64_t (*)(void))sub_1C0445B48);
  sub_1C0445B7C(a3, (uint64_t)v40, (uint64_t (*)(void))sub_1C0445B48);
  if (v40[32] == 1)
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v18 = *(int *)(v11 + 28);
LABEL_6:
    uint64_t v19 = (char *)a4 + v18;
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  type metadata accessor for UIEdgeInsets(0);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v15 = v34;
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v16 = (void *)((char *)a4 + *(int *)(v11 + 24));
    void *v16 = v15;
    uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
    goto LABEL_5;
  }
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
  if (!swift_dynamicCast())
  {
    long long v30 = v37;
    uint64_t v24 = v38;
    uint64_t v25 = v39;
    uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v27 = (void *)((char *)a4 + *(int *)(v26 + 24));
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    long long v34 = v30;
    uint64_t v35 = v24;
    uint64_t v36 = v25;
    sub_1C152036C();
    unint64_t v28 = v32;
    *uint64_t v27 = v31;
    v27[1] = v28;
    uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 0, 1, v29);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v18 = *(int *)(v26 + 28);
    goto LABEL_6;
  }
  sub_1BFC773DC(&v34, (uint64_t)&v31);
  __swift_project_boxed_opaque_existential_1(&v31, v33);
  *uint64_t v10 = sub_1C152088C();
  v10[1] = v20;
  uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  char v23 = (char *)a4 + *(int *)(v22 + 28);
  *(void *)char v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
}

void sub_1C043EF1C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v33[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v37 = a3;
  if (a3)
  {
    type metadata accessor for UIContentSizeCategory(0);
    uint64_t v12 = v11;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    id v13 = a3;
    if (swift_dynamicCast())
    {

      uint64_t v14 = v34;
      uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v16 = (void *)((char *)a4 + *(int *)(v15 + 24));
      void *v16 = v14;
      uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v18 = (char *)a4 + *(int *)(v15 + 28);
      *(void *)uint64_t v18 = 0;
      *((void *)v18 + 1) = 0;
      v18[16] = -1;
    }
    else
    {
      uint64_t v35 = v12;
      uint64_t v23 = sub_1C0445E14((unint64_t *)&unk_1EB894560, type metadata accessor for UIContentSizeCategory);
      id v24 = v37;
      uint64_t v36 = v23;
      *(void *)&long long v34 = v37;
      sub_1BFC773DC(&v34, (uint64_t)v33);
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      id v25 = v24;
      uint64_t v26 = UIContentSizeCategory.description.getter();
      uint64_t v28 = v27;

      *uint64_t v10 = v26;
      v10[1] = v28;
      uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 0, 1, v29);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v30 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v31 = (char *)a4 + *(int *)(v30 + 28);
      *(void *)uint64_t v31 = 0;
      *((void *)v31 + 1) = 0;
      v31[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
  }
  else
  {
    uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v20 = (char *)a4 + *(int *)(v19 + 24);
    uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = (char *)a4 + *(int *)(v19 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
}

uint64_t sub_1C043F230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  char v10 = a4 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (void *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  char v35 = v10;
  if (a4)
  {
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v15 = (char *)a5 + *(int *)(v14 + 24);
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = (char *)a5 + *(int *)(v14 + 28);
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceLayoutDirection(0);
  uint64_t v19 = v18;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v31;
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v21 = (void *)((char *)a5 + *(int *)(v14 + 24));
    *uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  uint64_t v32 = v19;
  uint64_t v33 = sub_1C0445E14(&qword_1EB894578, type metadata accessor for UIUserInterfaceLayoutDirection);
  *(void *)&long long v31 = v34;
  sub_1BFC773DC(&v31, (uint64_t)v30);
  uint64_t v24 = *__swift_project_boxed_opaque_existential_1(v30, v30[3]);
  if (v24)
  {
    if (v24 == 1)
    {
      unint64_t v25 = 0xED00007466654C20;
      uint64_t v26 = 0x6F74207468676952;
    }
    else
    {
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    unint64_t v25 = 0xED00007468676952;
    uint64_t v26 = 0x206F74207466654CLL;
  }
  *id v13 = v26;
  v13[1] = v25;
  uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v29 = (char *)a5 + *(int *)(v28 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1C043F560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C044070C(a1, a2, a3, MEMORY[0x1E4FAB828], (uint64_t (*)(void, __n128))sub_1C0445D7C, (uint64_t (*)(void))sub_1C0445D7C, (uint64_t (*)(void))sub_1C0445D7C, a4);
}

uint64_t sub_1C043F5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  char v10 = a4 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (void *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  char v35 = v10;
  if (a4)
  {
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v15 = (char *)a5 + *(int *)(v14 + 24);
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = (char *)a5 + *(int *)(v14 + 28);
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceSizeClass(0);
  uint64_t v19 = v18;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v31;
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v21 = (void *)((char *)a5 + *(int *)(v14 + 24));
    *uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  uint64_t v32 = v19;
  uint64_t v33 = sub_1C0445E14((unint64_t *)&unk_1EB893B80, type metadata accessor for UIUserInterfaceSizeClass);
  *(void *)&long long v31 = v34;
  sub_1BFC773DC(&v31, (uint64_t)v30);
  uint64_t v24 = *__swift_project_boxed_opaque_existential_1(v30, v30[3]);
  if (v24)
  {
    if (v24 == 1)
    {
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x746361706D6F63;
    }
    else if (v24 == 2)
    {
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x72616C75676572;
    }
    else
    {
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    unint64_t v25 = 0xEB00000000646569;
    uint64_t v26 = 0x6669636570736E75;
  }
  *id v13 = v26;
  v13[1] = v25;
  uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v29 = (char *)a5 + *(int *)(v28 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1C043F8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  char v10 = a4 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (void *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  char v35 = v10;
  if (a4)
  {
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v15 = (char *)a5 + *(int *)(v14 + 24);
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = (char *)a5 + *(int *)(v14 + 28);
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceStyle(0);
  uint64_t v19 = v18;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v31;
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v21 = (void *)((char *)a5 + *(int *)(v14 + 24));
    *uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  uint64_t v32 = v19;
  uint64_t v33 = sub_1C0445E14((unint64_t *)&unk_1EB894548, type metadata accessor for UIUserInterfaceStyle);
  *(void *)&long long v31 = v34;
  sub_1BFC773DC(&v31, (uint64_t)v30);
  uint64_t v24 = *__swift_project_boxed_opaque_existential_1(v30, v30[3]);
  if (v24)
  {
    if (v24 == 2)
    {
      unint64_t v25 = 0xE400000000000000;
      uint64_t v26 = 1802658148;
    }
    else if (v24 == 1)
    {
      unint64_t v25 = 0xE500000000000000;
      uint64_t v26 = 0x746867696CLL;
    }
    else
    {
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    unint64_t v25 = 0xEB00000000646569;
    uint64_t v26 = 0x6669636570736E75;
  }
  *id v13 = v26;
  v13[1] = v25;
  uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v29 = (char *)a5 + *(int *)(v28 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1C043FC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  char v10 = a4 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (void *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  char v35 = v10;
  if (a4)
  {
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v15 = (char *)a5 + *(int *)(v14 + 24);
    uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    uint64_t v23 = (char *)a5 + *(int *)(v14 + 28);
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceIdiom(0);
  uint64_t v19 = v18;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v31;
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v21 = (void *)((char *)a5 + *(int *)(v14 + 24));
    *uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  uint64_t v32 = v19;
  uint64_t v33 = sub_1C0445E14(&qword_1EA19B6D8, type metadata accessor for UIUserInterfaceIdiom);
  *(void *)&long long v31 = v34;
  sub_1BFC773DC(&v31, (uint64_t)v30);
  uint64_t v24 = __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  unint64_t v25 = 0xE700000000000000;
  uint64_t v26 = 0x79616C50726163;
  switch(*v24)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      unint64_t v25 = 0xEB00000000646569;
      uint64_t v26 = 0x6669636570736E75;
      break;
    case 0:
      unint64_t v25 = 0xE500000000000000;
      uint64_t v26 = 0x656E6F6870;
      break;
    case 1:
      unint64_t v25 = 0xE300000000000000;
      uint64_t v26 = 6578544;
      break;
    case 2:
      unint64_t v25 = 0xE200000000000000;
      uint64_t v26 = 30324;
      break;
    case 3:
      break;
    case 5:
      unint64_t v25 = 0xE300000000000000;
      uint64_t v26 = 6513005;
      break;
    default:
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x6E776F6E6B6E75;
      break;
  }
  *id v13 = v26;
  v13[1] = v25;
  uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1C0445B7C((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v29 = (char *)a5 + *(int *)(v28 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1C043FFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (void *)((char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0445C80(0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0445CB4(a3, (uint64_t)v13, (uint64_t (*)(void))sub_1C0445C80);
  uint64_t v14 = sub_1C151759C();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C0445C80);
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (char *)a4 + *(int *)(v16 + 24);
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v20 = (char *)a4 + *(int *)(v16 + 28);
    *(void *)uint64_t v20 = 0;
    *((void *)v20 + 1) = 0;
    v20[16] = -1;
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C0445C80);
      uint64_t v21 = v34;
      uint64_t v22 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v23 = (void *)((char *)a4 + *(int *)(v22 + 24));
      *uint64_t v23 = v21;
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      unint64_t v25 = (char *)a4 + *(int *)(v22 + 28);
      *(void *)unint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = -1;
    }
    else
    {
      uint64_t v35 = v14;
      uint64_t v36 = sub_1C0445E14(&qword_1EA19B6D0, MEMORY[0x1E4FAB6E0]);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v34);
      (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_0, v13, v14);
      sub_1BFC773DC(&v34, (uint64_t)v33);
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      uint64_t v27 = sub_1C152088C();
      uint64_t v29 = v28;
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C0445C80);
      *char v10 = v27;
      v10[1] = v29;
      uint64_t v30 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v31 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v32 = (char *)a4 + *(int *)(v31 + 28);
      *(void *)uint64_t v32 = 0;
      *((void *)v32 + 1) = 0;
      v32[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  return result;
}

uint64_t sub_1C0440400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  return sub_1C0440414(a1, a2, a3, a4, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB5B0], a5);
}

uint64_t sub_1C0440414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  char v14 = a4 & 1;
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (void *)((char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = a3;
  char v35 = v14;
  if (a4)
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v19 = (char *)a7 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_5:
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    unint64_t v25 = (char *)a7 + *(int *)(v18 + 28);
    *(void *)unint64_t v25 = 0;
    *((void *)v25 + 1) = 0;
    v25[16] = -1;
    return result;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v22 = v31;
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v23 = (void *)((char *)a7 + *(int *)(v18 + 24));
    *uint64_t v23 = v22;
    uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
    goto LABEL_5;
  }
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  *(void *)&long long v31 = v34;
  sub_1BFC773DC(&v31, (uint64_t)v30);
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  *uint64_t v17 = sub_1C152088C();
  v17[1] = v26;
  uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 0, 1, v27);
  *a7 = a1;
  a7[1] = a2;
  uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
  a7[2] = 0;
  a7[3] = 0;
  sub_1C0445B7C((uint64_t)v17, (uint64_t)a7 + *(int *)(v28 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v29 = (char *)a7 + *(int *)(v28 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1C04406B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C044070C(a1, a2, a3, MEMORY[0x1E4FAB6C0], (uint64_t (*)(void, __n128))sub_1C0445C4C, (uint64_t (*)(void))sub_1C0445C4C, (uint64_t (*)(void))sub_1C0445C4C, a4);
}

uint64_t sub_1C044070C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void, __n128)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t (*a7)(void)@<X6>, void *a8@<X8>)
{
  uint64_t v15 = a4(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v48 - v17;
  sub_1C0444DD4(0);
  __n128 v20 = MEMORY[0x1F4188790](v19 - 8);
  long long v51 = (uint64_t *)((char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = a5(0, v20);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v48 - v23;
  sub_1C0445CB4(a3, (uint64_t)&v48 - v23, a6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15) == 1)
  {
    sub_1C0445D1C(a3, a7);
    uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v26 = (char *)a8 + *(int *)(v25 + 24);
    uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    *a8 = a1;
    a8[1] = a2;
    a8[2] = 0;
    a8[3] = 0;
  }
  else
  {
    uint64_t v50 = a1;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C0445D1C(a3, a7);
      uint64_t v29 = a2;
      uint64_t v30 = v53;
      uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v32 = (void *)((char *)a8 + *(int *)(v31 + 24));
      *uint64_t v32 = v30;
      uint64_t v33 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
      *a8 = v50;
      a8[1] = v29;
      a8[2] = 0;
      a8[3] = 0;
      uint64_t v34 = (char *)a8 + *(int *)(v31 + 28);
      *(void *)uint64_t v34 = 0;
      *((void *)v34 + 1) = 0;
      v34[16] = -1;
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v24, v15);
    }
    uint64_t v49 = a2;
    sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
    if (swift_dynamicCast())
    {
      sub_1BFC773DC(&v53, (uint64_t)v52);
      __swift_project_boxed_opaque_existential_1(v52, v52[3]);
      uint64_t v35 = sub_1C152088C();
      uint64_t v37 = v36;
      sub_1C0445D1C(a3, a7);
      uint64_t v38 = (uint64_t)v51;
      *long long v51 = v35;
      *(void *)(v38 + 8) = v37;
      uint64_t v39 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
      uint64_t v40 = v49;
      *a8 = v50;
      a8[1] = v40;
      uint64_t v41 = type metadata accessor for FormatInspectionItem(0);
      a8[2] = 0;
      a8[3] = 0;
      sub_1C0445B7C(v38, (uint64_t)a8 + *(int *)(v41 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      long long v42 = (char *)a8 + *(int *)(v41 + 28);
      *(void *)long long v42 = 0;
      *((void *)v42 + 1) = 0;
      v42[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v24, v15);
    }
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v24, v15);
    *(void *)&long long v53 = 0;
    *((void *)&v53 + 1) = 0xE000000000000000;
    sub_1C152036C();
    long long v43 = v53;
    sub_1C0445D1C(a3, a7);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v44 = (uint64_t)v51;
    *(_OWORD *)long long v51 = v43;
    uint64_t v45 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
    uint64_t v46 = v49;
    *a8 = v50;
    a8[1] = v46;
    uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
    a8[2] = 0;
    a8[3] = 0;
    uint64_t result = sub_1C0445B7C(v44, (uint64_t)a8 + *(int *)(v25 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  }
  uint64_t v47 = (char *)a8 + *(int *)(v25 + 28);
  *(void *)uint64_t v47 = 0;
  *((void *)v47 + 1) = 0;
  v47[16] = -1;
  return result;
}

uint64_t sub_1C0440C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (void *)((char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0445C18(0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0445CB4(a3, (uint64_t)v13, (uint64_t (*)(void))sub_1C0445C18);
  uint64_t v14 = sub_1C151787C();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C0445C18);
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v17 = (char *)a4 + *(int *)(v16 + 24);
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    __n128 v20 = (char *)a4 + *(int *)(v16 + 28);
    *(void *)__n128 v20 = 0;
    *((void *)v20 + 1) = 0;
    v20[16] = -1;
  }
  else
  {
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (swift_dynamicCast())
    {
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C0445C18);
      uint64_t v21 = v34;
      uint64_t v22 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v23 = (void *)((char *)a4 + *(int *)(v22 + 24));
      *uint64_t v23 = v21;
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v25 = (char *)a4 + *(int *)(v22 + 28);
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = -1;
    }
    else
    {
      uint64_t v35 = v14;
      uint64_t v36 = sub_1C0445E14(&qword_1EA19B6C0, MEMORY[0x1E4FAB7C8]);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v34);
      (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_0, v13, v14);
      sub_1BFC773DC(&v34, (uint64_t)v33);
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      uint64_t v27 = sub_1C152088C();
      uint64_t v29 = v28;
      sub_1C0445D1C(a3, (uint64_t (*)(void))sub_1C0445C18);
      *char v10 = v27;
      v10[1] = v29;
      uint64_t v30 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v31 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v32 = (char *)a4 + *(int *)(v31 + 28);
      *(void *)uint64_t v32 = 0;
      *((void *)v32 + 1) = 0;
      v32[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  return result;
}

uint64_t sub_1C04410B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0445B7C(a3, (uint64_t)&v37, (uint64_t (*)(void))sub_1C0445BE4);
  sub_1C0445B7C(a3, (uint64_t)v40, (uint64_t (*)(void))sub_1C0445BE4);
  if (v40[32] == 1)
  {
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (char *)a4 + *(int *)(v11 + 24);
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v18 = *(int *)(v11 + 28);
LABEL_6:
    uint64_t v19 = (char *)a4 + v18;
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  type metadata accessor for CGRect(0);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    uint64_t v15 = v34;
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v16 = (void *)((char *)a4 + *(int *)(v11 + 24));
    void *v16 = v15;
    uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
    goto LABEL_5;
  }
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A8CE0);
  if (!swift_dynamicCast())
  {
    long long v30 = v37;
    uint64_t v24 = v38;
    uint64_t v25 = v39;
    uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v27 = (void *)((char *)a4 + *(int *)(v26 + 24));
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    long long v34 = v30;
    uint64_t v35 = v24;
    uint64_t v36 = v25;
    sub_1C152036C();
    unint64_t v28 = v32;
    *uint64_t v27 = v31;
    v27[1] = v28;
    uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 0, 1, v29);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v18 = *(int *)(v26 + 28);
    goto LABEL_6;
  }
  sub_1BFC773DC(&v34, (uint64_t)&v31);
  __swift_project_boxed_opaque_existential_1(&v31, v33);
  *char v10 = sub_1C152088C();
  v10[1] = v20;
  uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(void))sub_1C0444DD4);
  uint64_t v23 = (char *)a4 + *(int *)(v22 + 28);
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
}

void sub_1C0441478(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v261 = sub_1C151CA7C();
  uint64_t v258 = *(void *)(v261 - 8);
  MEMORY[0x1F4188790](v261);
  long long v260 = (char *)&v257 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v259);
  uint64_t v262 = (uint64_t)&v257 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatInspectionFeedGroupItem();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v257 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v13 - 8);
  *(void *)&long long v263 = (char *)&v257 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v257 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v277 = a3;
  if (!a3)
  {
    uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v26 = (char *)a4 + *(int *)(v25 + 24);
    uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    unint64_t v28 = (char *)a4 + *(int *)(v25 + 28);
    *(void *)unint64_t v28 = 0;
    *((void *)v28 + 1) = 0;
    v28[16] = -1;
    return;
  }
  uint64_t v264 = a1;
  uint64_t v265 = a2;
  uint64_t v266 = a4;
  id v19 = a3;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {

    uint64_t v20 = *(void *)&v267[0];
    uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v22 = v266;
    uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
    *(void *)uint64_t v23 = v20;
    uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_10:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
    uint64_t v40 = v265;
    *uint64_t v22 = v264;
    v22[1] = v40;
    v22[2] = 0;
    v22[3] = 0;
    uint64_t v41 = *(int *)(v21 + 28);
LABEL_11:
    uint64_t v38 = (char *)v22 + v41;
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    uint64_t v29 = *(void *)&v267[0];
    uint64_t v30 = (*(void *)&v267[0] >> 58) & 0x38;
    uint64_t v31 = *(void *)&aSystem_6[v30];
    uint64_t v32 = *(void *)((char *)&unk_1C1549330 + v30);

    uint64_t v33 = type metadata accessor for FormatInspectionItem(0);
    long long v34 = v266;
    uint64_t v35 = (uint64_t *)((char *)v266 + *(int *)(v33 + 24));
    *uint64_t v35 = v29;
    uint64_t v36 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    uint64_t v37 = v265;
    *long long v34 = v264;
    v34[1] = v37;
    v34[2] = v31;
    void v34[3] = v32;
LABEL_7:
    uint64_t v38 = (char *)v34 + *(int *)(v33 + 28);
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {

    char v39 = v267[0];
    uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v22 = v266;
    uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
    *(unsigned char *)uint64_t v23 = v39;
    uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {

    uint64_t v42 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v22 = v266;
    long long v43 = (uint64_t *)((char *)v266 + *(int *)(v42 + 24));
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v43, v18, v15);
    uint64_t v44 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_16:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
    uint64_t v45 = v265;
    *uint64_t v22 = v264;
    v22[1] = v45;
    v22[2] = 0;
    v22[3] = 0;
    uint64_t v41 = *(int *)(v42 + 28);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      uint64_t v55 = *(void *)&v267[0];
      uint64_t v56 = sub_1C131B4D4(*(uint64_t *)&v267[0]);
      unint64_t v275 = MEMORY[0x1E4FBC860];
      uint64_t v57 = *(void *)(v56 + 16);
      if (v57)
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = 64;
        long long v34 = v266;
        do
        {
          uint64_t v59 = swift_bridgeObjectRetain();
          sub_1C1047634(v59);
          v58 += 40;
          --v57;
        }
        while (v57);
        swift_bridgeObjectRelease_n();
        unint64_t v60 = v275;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v60 = MEMORY[0x1E4FBC860];
        long long v34 = v266;
      }
      uint64_t v75 = *(void *)(v60 + 16);
      swift_bridgeObjectRelease();
      uint64_t v76 = v265;
      if (v75)
      {
        sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
        uint64_t v77 = swift_allocObject();
        *(_OWORD *)(v77 + 16) = xmmword_1C1529AE0;
        *(void *)(v77 + 56) = &type metadata for FormatInspection;
        *(void *)(v77 + 64) = &off_1F1C29D30;
        *(void *)(v77 + 32) = v55;
        uint64_t v78 = sub_1C0233FC8(v77);
        swift_setDeallocating();
        sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v79 = sub_1C131B79C(v78);
        swift_bridgeObjectRelease();

        uint64_t v80 = v263;
        *(void *)long long v263 = v79;
        uint64_t v81 = type metadata accessor for FormatInspectionItem.Value(0);
        *(void *)(v80 + 8) = 0;
        *(void *)(v80 + 16) = 0;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 0, 1, v81);
        *long long v34 = v264;
        v34[1] = v76;
        uint64_t v33 = type metadata accessor for FormatInspectionItem(0);
        v34[2] = 0;
        void v34[3] = 0;
        sub_1C0445B7C(v80, (uint64_t)v34 + *(int *)(v33 + 24), (uint64_t (*)(void))sub_1C0444DD4);
        goto LABEL_7;
      }

      swift_bridgeObjectRelease();
      uint64_t v33 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v82 = (char *)v34 + *(int *)(v33 + 24);
      uint64_t v83 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 1, 1, v83);
      *long long v34 = v264;
      v34[1] = v76;
LABEL_41:
      v34[2] = 0;
      void v34[3] = 0;
      goto LABEL_7;
    }
    if (swift_dynamicCast())
    {

      uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v22 = v266;
      uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
      *(_OWORD *)uint64_t v23 = v267[0];
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_10;
    }
    if (swift_dynamicCast())
    {
      char v52 = v266;
      switch(v275 >> 61)
      {
        case 1uLL:
          uint64_t v157 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v158 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          long long v263 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v159 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          uint64_t v160 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
          uint64_t v161 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          uint64_t v162 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFDB3920(v161);

          uint64_t v163 = type metadata accessor for FormatInspectionItem(0);
          long long v164 = (char *)v52 + *(int *)(v163 + 24);
          *(void *)long long v164 = v157;
          *((void *)v164 + 1) = v158;
          *((_OWORD *)v164 + 1) = v263;
          *((void *)v164 + 4) = v159;
          *((void *)v164 + 5) = v160;
          *((void *)v164 + 6) = v161;
          *((void *)v164 + 7) = v162;
          uint64_t v165 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56))(v164, 0, 1, v165);
          swift_release();
          uint64_t v166 = v265;
          *char v52 = v264;
          v52[1] = v166;
          *((_OWORD *)v52 + 1) = xmmword_1C1549030;
          uint64_t v38 = (char *)v52 + *(int *)(v163 + 28);
          goto LABEL_12;
        case 2uLL:
          long long v109 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
          long long v270 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
          v271[0] = v109;
          long long v110 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
          v271[1] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
          long long v272 = v110;
          long long v111 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          v267[0] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v267[1] = v111;
          long long v112 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          long long v268 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          long long v269 = v112;
          sub_1C0445004((uint64_t)v267);

          uint64_t v113 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v114 = (_OWORD *)((char *)v52 + *(int *)(v113 + 24));
          long long v115 = v271[0];
          v114[4] = v270;
          v114[5] = v115;
          long long v116 = v272;
          v114[6] = v271[1];
          v114[7] = v116;
          long long v117 = v267[1];
          *uint64_t v114 = v267[0];
          v114[1] = v117;
          long long v118 = v269;
          v114[2] = v268;
          v114[3] = v118;
          uint64_t v119 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v114, 0, 1, v119);
          swift_release();
          uint64_t v120 = v265;
          *char v52 = v264;
          v52[1] = v120;
          long long v121 = xmmword_1C1549020;
          goto LABEL_62;
        case 3uLL:
          uint64_t v122 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1BFF7B774(v122);

          uint64_t v123 = type metadata accessor for FormatInspectionItem(0);
          long long v124 = (uint64_t *)((char *)v52 + *(int *)(v123 + 24));
          *long long v124 = v122;
          uint64_t v125 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v124, 0, 1, v125);
          swift_release();
          uint64_t v126 = v265;
          *char v52 = v264;
          v52[1] = v126;
          v52[2] = 0xD000000000000012;
          v52[3] = 0x80000001C16101A0;
          goto LABEL_60;
        case 4uLL:
          long long v127 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
          v271[1] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
          long long v272 = v127;
          v273[0] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
          *(_OWORD *)((char *)v273 + 9) = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x99);
          long long v128 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          long long v268 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          long long v269 = v128;
          long long v129 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
          long long v270 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
          v271[0] = v129;
          long long v130 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          v267[0] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v267[1] = v130;
          sub_1C0445120((uint64_t)v267);

          uint64_t v113 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v131 = (_OWORD *)((char *)v52 + *(int *)(v113 + 24));
          long long v132 = v272;
          v131[6] = v271[1];
          v131[7] = v132;
          v131[8] = v273[0];
          *(_OWORD *)((char *)v131 + 137) = *(_OWORD *)((char *)v273 + 9);
          long long v133 = v269;
          v131[2] = v268;
          v131[3] = v133;
          long long v134 = v271[0];
          v131[4] = v270;
          void v131[5] = v134;
          long long v135 = v267[1];
          *uint64_t v131 = v267[0];
          v131[1] = v135;
          uint64_t v136 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v131, 0, 1, v136);
          swift_release();
          uint64_t v137 = v265;
          *char v52 = v264;
          v52[1] = v137;
          long long v121 = xmmword_1C1549080;
          goto LABEL_62;
        case 5uLL:
          uint64_t v168 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v167 = *(void *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          swift_retain();
          swift_retain();

          uint64_t v123 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v169 = (uint64_t *)((char *)v52 + *(int *)(v123 + 24));
          *uint64_t v169 = v168;
          v169[1] = v167;
          uint64_t v170 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v170 - 8) + 56))(v169, 0, 1, v170);
          swift_release();
          uint64_t v171 = v265;
          *char v52 = v264;
          v52[1] = v171;
          *((_OWORD *)v52 + 1) = xmmword_1C1549070;
LABEL_60:
          uint64_t v38 = (char *)v52 + *(int *)(v123 + 28);
          goto LABEL_12;
        case 6uLL:
          long long v172 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
          v271[1] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
          long long v272 = v172;
          v273[0] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
          LOBYTE(v273[1]) = *(unsigned char *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0xA0);
          long long v173 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
          long long v268 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          long long v269 = v173;
          long long v174 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
          long long v270 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
          v271[0] = v174;
          long long v175 = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          v267[0] = *(_OWORD *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v267[1] = v175;
          sub_1C0445048((uint64_t)v267);

          uint64_t v113 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v176 = (char *)v52 + *(int *)(v113 + 24);
          long long v177 = v272;
          *((_OWORD *)v176 + 6) = v271[1];
          *((_OWORD *)v176 + 7) = v177;
          *((_OWORD *)v176 + 8) = v273[0];
          v176[144] = v273[1];
          long long v178 = v269;
          *((_OWORD *)v176 + 2) = v268;
          *((_OWORD *)v176 + 3) = v178;
          long long v179 = v271[0];
          *((_OWORD *)v176 + 4) = v270;
          *((_OWORD *)v176 + 5) = v179;
          long long v180 = v267[1];
          *(_OWORD *)uint64_t v176 = v267[0];
          *((_OWORD *)v176 + 1) = v180;
          uint64_t v181 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v181 - 8) + 56))(v176, 0, 1, v181);
          swift_release();
          uint64_t v182 = v265;
          *char v52 = v264;
          v52[1] = v182;
          long long v121 = xmmword_1C1549060;
          goto LABEL_62;
        case 7uLL:
          char v138 = *(unsigned char *)((v275 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);

          uint64_t v113 = type metadata accessor for FormatInspectionItem(0);
          long long v139 = (char *)v52 + *(int *)(v113 + 24);
          *long long v139 = v138;
          uint64_t v140 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v139, 0, 1, v140);
          swift_release();
          uint64_t v141 = v265;
          *char v52 = v264;
          v52[1] = v141;
          long long v121 = xmmword_1C1549050;
LABEL_62:
          *((_OWORD *)v52 + 1) = v121;
          uint64_t v38 = (char *)v52 + *(int *)(v113 + 28);
          break;
        default:
          uint64_t v71 = *(void *)(v275 + 16);
          swift_retain();

          uint64_t v67 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v72 = (uint64_t *)((char *)v52 + *(int *)(v67 + 24));
          *uint64_t v72 = v71;
          uint64_t v73 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
          swift_release();
          uint64_t v74 = v265;
          *char v52 = v264;
          v52[1] = v74;
          *((_OWORD *)v52 + 1) = xmmword_1C1549090;
          goto LABEL_33;
      }
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {
      uint64_t v84 = a3;
      sub_1BFF6530C((uint64_t)v267, (uint64_t)v274);
      sub_1BFF6530C((uint64_t)v274, (uint64_t)&v275);
      int v85 = sub_1C0444FE8((uint64_t)&v275);
      uint64_t v86 = v266;
      switch(v85)
      {
        case 1:
          uint64_t v183 = sub_1C0445038((uint64_t)&v275);
          uint64_t v184 = *(void *)v183;
          uint64_t v185 = *(void *)(v183 + 8);
          long long v263 = *(_OWORD *)(v183 + 16);
          uint64_t v186 = *(void *)(v183 + 32);
          uint64_t v187 = *(void *)(v183 + 40);
          uint64_t v188 = *(void *)(v183 + 48);
          uint64_t v189 = *(void *)(v183 + 56);
          sub_1C0445894(v274, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);

          uint64_t v90 = type metadata accessor for FormatInspectionItem(0);
          long long v190 = (char *)v86 + *(int *)(v90 + 24);
          sub_1C0445894(v274, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
          *(void *)long long v190 = v184;
          *((void *)v190 + 1) = v185;
          *((_OWORD *)v190 + 1) = v263;
          *((void *)v190 + 4) = v186;
          *((void *)v190 + 5) = v187;
          *((void *)v190 + 6) = v188;
          *((void *)v190 + 7) = v189;
          uint64_t v191 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v190, 0, 1, v191);
          unint64_t v93 = 0xE800000000000000;
          unint64_t v94 = 0x746E656964617247;
          break;
        case 2:
          long long v142 = (long long *)sub_1C0445038((uint64_t)&v275);
          sub_1C0445894(v274, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);

          uint64_t v90 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v143 = (_OWORD *)((char *)v86 + *(int *)(v90 + 24));
          sub_1C0445894(v274, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
          long long v144 = v142[3];
          long long v146 = *v142;
          long long v145 = v142[1];
          v143[2] = v142[2];
          v143[3] = v144;
          *uint64_t v143 = v146;
          v143[1] = v145;
          long long v147 = v142[7];
          long long v149 = v142[4];
          long long v148 = v142[5];
          v143[6] = v142[6];
          v143[7] = v147;
          v143[4] = v149;
          v143[5] = v148;
          uint64_t v150 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56))(v143, 0, 1, v150);
          unint64_t v93 = 0xEF746E6569646172;
          unint64_t v94 = 0x47206C6169646152;
          break;
        case 3:
          uint64_t v151 = *(void *)sub_1C0445038((uint64_t)&v275);

          uint64_t v90 = type metadata accessor for FormatInspectionItem(0);
          long long v152 = (uint64_t *)((char *)v86 + *(int *)(v90 + 24));
          void *v152 = v151;
          uint64_t v153 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v152, 0, 1, v153);
          unint64_t v93 = 0x80000001C16101A0;
          unint64_t v94 = 0xD000000000000012;
          break;
        default:
          uint64_t v87 = (uint64_t *)sub_1C0445038((uint64_t)&v275);
          uint64_t v88 = *v87;
          uint64_t v89 = v87[1];

          uint64_t v90 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v91 = (uint64_t *)((char *)v86 + *(int *)(v90 + 24));
          swift_retain();
          swift_retain();
          sub_1C0445894(v274, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
          *uint64_t v91 = v88;
          v91[1] = v89;
          uint64_t v92 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v91, 0, 1, v92);
          unint64_t v93 = 0xE500000000000000;
          unint64_t v94 = 0x64696C6F53;
          break;
      }
      uint64_t v192 = v265;
      *uint64_t v86 = v264;
      v86[1] = v192;
      v86[2] = v94;
      v86[3] = v93;
      uint64_t v38 = (char *)v86 + *(int *)(v90 + 28);
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {

      uint64_t v95 = *(void *)&v267[0];
      uint64_t v96 = swift_allocObject();
      *(void *)(v96 + 16) = v95;
      uint64_t v97 = v263;
      *(void *)long long v263 = sub_1C0445E5C;
      *(void *)(v97 + 8) = v96;
      uint64_t v98 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v97, 0, 1, v98);
      uint64_t v99 = v266;
      uint64_t v100 = v265;
      *uint64_t v266 = v264;
      v99[1] = v100;
      uint64_t v101 = type metadata accessor for FormatInspectionItem(0);
      v99[2] = 0;
      v99[3] = 0;
      sub_1C0445B7C(v97, (uint64_t)v99 + *(int *)(v101 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v38 = (char *)v99 + *(int *)(v101 + 28);
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {

      long long v263 = v267[0];
      long long v102 = v267[1];
      unint64_t v104 = *((void *)&v268 + 1);
      unint64_t v103 = v268;
      char v105 = v269;
      uint64_t v33 = type metadata accessor for FormatInspectionItem(0);
      long long v34 = v266;
      char v106 = (char *)v266 + *(int *)(v33 + 24);
      *(_OWORD *)char v106 = v263;
      *((_OWORD *)v106 + 1) = v102;
      *((_OWORD *)v106 + 2) = __PAIR128__(v104, v103);
      v106[48] = v105;
      uint64_t v107 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_49:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 0, 1, v107);
      uint64_t v108 = v265;
      *long long v34 = v264;
      v34[1] = v108;
      goto LABEL_41;
    }
    if (swift_dynamicCast())
    {

      uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v22 = v266;
      uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
      long long v154 = v271[0];
      *(_OWORD *)(v23 + 64) = v270;
      *(_OWORD *)(v23 + 80) = v154;
      *(_OWORD *)(v23 + 89) = *(_OWORD *)((char *)v271 + 9);
      long long v155 = v267[1];
      *(_OWORD *)uint64_t v23 = v267[0];
      *(_OWORD *)(v23 + 16) = v155;
      long long v156 = v269;
      *(_OWORD *)(v23 + 32) = v268;
      *(_OWORD *)(v23 + 48) = v156;
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_10;
    }
    if (swift_dynamicCast())
    {

      uint64_t v193 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v194 = v266;
      uint64_t v195 = (_OWORD *)((char *)v266 + *(int *)(v193 + 24));
      sub_1C0445B7C((uint64_t)v12, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for FormatInspectionFeedGroupItem);
      uint64_t v196 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_71:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v196 - 8) + 56))(v195, 0, 1, v196);
      uint64_t v200 = v265;
      *uint64_t v194 = v264;
      v194[1] = v200;
      v194[2] = 0;
      v194[3] = 0;
      uint64_t v38 = (char *)v194 + *(int *)(v193 + 28);
      goto LABEL_12;
    }
    *(void *)&long long v263 = a3;
    if (swift_dynamicCast())
    {

      uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v22 = v266;
      uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
      long long v197 = v267[1];
      *(_OWORD *)uint64_t v23 = v267[0];
      *(_OWORD *)(v23 + 16) = v197;
      uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_10;
    }
    if (swift_dynamicCast())
    {
LABEL_70:

      unint64_t v199 = *((void *)&v267[0] + 1);
      unint64_t v198 = *(void *)&v267[0];
      uint64_t v193 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v194 = v266;
      uint64_t v195 = (_OWORD *)((char *)v266 + *(int *)(v193 + 24));
      *uint64_t v195 = __PAIR128__(v199, v198);
      uint64_t v196 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_71;
    }
    if (swift_dynamicCast())
    {
      uint64_t v202 = v275;
      uint64_t v201 = v276;
      *(void *)&v267[0] = 40;
      *((void *)&v267[0] + 1) = 0xE100000000000000;
      sub_1C151EF4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151EF4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v203 = *((void *)&v267[0] + 1);
      uint64_t v262 = *(void *)&v267[0];
      sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
      uint64_t v204 = swift_allocObject();
      *(_OWORD *)(v204 + 16) = xmmword_1C1529AE0;
      sub_1C0445DB0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      uint64_t v206 = *(void *)(*(void *)(v205 - 8) + 72);
      unint64_t v207 = (*(unsigned __int8 *)(*(void *)(v205 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v205 - 8) + 80);
      uint64_t v208 = swift_allocObject();
      *(_OWORD *)(v208 + 16) = xmmword_1C1527210;
      uint64_t v209 = (void *)(v208 + v207);
      sub_1C042F1BC(88, 0xE100000000000000, v202, 0, v209);
      uint64_t v210 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v211 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v210 - 8) + 56);
      v211(v209, 0, 1, v210);
      uint64_t v212 = (void *)((char *)v209 + v206);
      sub_1C042F1BC(89, 0xE100000000000000, v201, 0, v212);
      v211(v212, 0, 1, v210);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v208, v267);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v204 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v204 + 64) = &off_1F1BDEC90;
      uint64_t v213 = swift_allocObject();
      *(void *)(v204 + 32) = v213;
      long long v214 = v267[1];
      *(_OWORD *)(v213 + 16) = v267[0];
      *(_OWORD *)(v213 + 32) = v214;
      *(void *)(v213 + 48) = v268;
      uint64_t v215 = sub_1C0233FC8(v204);
      swift_setDeallocating();
      sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v216 = sub_1C131B79C(v215);
      swift_bridgeObjectRelease();
      uint64_t v217 = v265;
      unint64_t v218 = v266;
      uint64_t v219 = v264;
      uint64_t v220 = (uint64_t)v216;
      uint64_t v221 = v262;
      uint64_t v222 = v203;
    }
    else
    {
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          if (swift_dynamicCast())
          {

            uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
            uint64_t v22 = v266;
            uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
            uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
            goto LABEL_10;
          }
          type metadata accessor for FormatCommandAction();
          if (!swift_dynamicCast())
          {
            if (swift_dynamicCast())
            {

              char v240 = v267[0];
              long long v263 = *(_OWORD *)((char *)v267 + 8);
              uint64_t v241 = *((void *)&v267[1] + 1);
              uint64_t v242 = v268;
              uint64_t v33 = type metadata accessor for FormatInspectionItem(0);
              long long v34 = v266;
              char v106 = (char *)v266 + *(int *)(v33 + 24);
              *char v106 = v240;
              *(_OWORD *)(v106 + 8) = v263;
              *((void *)v106 + 3) = v241;
              *((void *)v106 + 4) = v242;
              uint64_t v107 = type metadata accessor for FormatInspectionItem.Value(0);
              goto LABEL_49;
            }
            if (swift_dynamicCast())
            {

              uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
              uint64_t v22 = v266;
              uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
              sub_1C0445B7C(v262, v23, type metadata accessor for FormatPropertyDefinition);
              uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
              goto LABEL_10;
            }
            if (swift_dynamicCast())
            {

              uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
              uint64_t v22 = v266;
              uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
              (*(void (**)(uint64_t, char *, uint64_t))(v258 + 32))(v23, v260, v261);
              uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
              goto LABEL_10;
            }
            if (swift_dynamicCast())
            {

              uint64_t v243 = *(void *)&v267[0];
              if (v270 == 1)
              {
                long long v244 = v269;
                long long v245 = v268;
                long long v263 = v267[1];
                uint64_t v246 = *((void *)&v267[0] + 1);
                uint64_t v247 = type metadata accessor for FormatInspectionItem(0);
                uint64_t v248 = (char *)v266 + *(int *)(v247 + 24);
                *(void *)uint64_t v248 = v243;
                *((void *)v248 + 1) = v246;
                *((_OWORD *)v248 + 1) = v263;
                *((_OWORD *)v248 + 2) = v245;
                *((_OWORD *)v248 + 3) = v244;
              }
              else
              {
                uint64_t v247 = type metadata accessor for FormatInspectionItem(0);
                uint64_t v248 = (char *)v266 + *(int *)(v247 + 24);
                *(void *)uint64_t v248 = v243;
              }
              uint64_t v249 = type metadata accessor for FormatInspectionItem.Value(0);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56))(v248, 0, 1, v249);
              char v250 = v266;
              uint64_t v251 = v265;
              *uint64_t v266 = v264;
              v250[1] = v251;
              v250[2] = 0;
              v250[3] = 0;
              uint64_t v38 = (char *)v250 + *(int *)(v247 + 28);
              goto LABEL_12;
            }
            sub_1C044594C(0, &qword_1EA19B5D0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB928]);
            if ((swift_dynamicCast() & 1) == 0)
            {
              if (swift_dynamicCast())
              {

                long long v263 = v267[0];
                unint64_t v253 = *((void *)&v267[1] + 1);
                unint64_t v252 = *(void *)&v267[1];
                uint64_t v193 = type metadata accessor for FormatInspectionItem(0);
                uint64_t v194 = v266;
                uint64_t v195 = (_OWORD *)((char *)v266 + *(int *)(v193 + 24));
                *uint64_t v195 = v263;
                v195[1] = __PAIR128__(v253, v252);
                uint64_t v196 = type metadata accessor for FormatInspectionItem.Value(0);
                goto LABEL_71;
              }
              type metadata accessor for DebugFormatDebuggerCallStackEntry();
              if (!swift_dynamicCast())
              {
                id v255 = v277;
                id v256 = v277;

                uint64_t v42 = type metadata accessor for FormatInspectionItem(0);
                uint64_t v22 = v266;
                long long v43 = (uint64_t *)((char *)v266 + *(int *)(v42 + 24));
                *long long v43 = v255;
                uint64_t v44 = type metadata accessor for FormatInspectionItem.Value(0);
                goto LABEL_16;
              }
            }
          }

          uint64_t v254 = *(void *)&v267[0];
          uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v22 = v266;
          uint64_t v23 = (uint64_t)v266 + *(int *)(v21 + 24);
          *(void *)uint64_t v23 = v254;
          uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
          goto LABEL_10;
        }
        goto LABEL_70;
      }
      uint64_t v223 = v275;
      uint64_t v224 = v276;
      *(void *)&v267[0] = 40;
      *((void *)&v267[0] + 1) = 0xE100000000000000;
      uint64_t v225 = swift_bridgeObjectRetain();
      sub_1C0BA9458(v225);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v226 = swift_bridgeObjectRetain();
      sub_1C0BA9458(v226);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v261 = *((void *)&v267[0] + 1);
      uint64_t v262 = *(void *)&v267[0];
      sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
      uint64_t v227 = swift_allocObject();
      *(_OWORD *)(v227 + 16) = xmmword_1C1529AE0;
      sub_1C0445DB0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
      sub_1C0181BEC(0);
      long long v260 = v228;
      uint64_t v229 = *(void *)(*((void *)v228 - 1) + 72);
      unint64_t v230 = (*(unsigned __int8 *)(*((void *)v228 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v228 - 1) + 80);
      uint64_t v231 = swift_allocObject();
      *(_OWORD *)(v231 + 16) = xmmword_1C1527210;
      uint64_t v232 = (void *)(v231 + v230);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(88, 0xE100000000000000, v223, v232);
      uint64_t v233 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v234 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v233 - 8) + 56);
      v234(v232, 0, 1, v233);
      unint64_t v235 = (void *)((char *)v232 + v229);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(89, 0xE100000000000000, v224, v235);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v234(v235, 0, 1, v233);
      sub_1C09BCFA4(0x746E696F50, 0xE500000000000000, 0, 0, v231, v267);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v227 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v227 + 64) = &off_1F1BDEC90;
      uint64_t v236 = swift_allocObject();
      *(void *)(v227 + 32) = v236;
      long long v237 = v267[1];
      *(_OWORD *)(v236 + 16) = v267[0];
      *(_OWORD *)(v236 + 32) = v237;
      *(void *)(v236 + 48) = v268;
      uint64_t v238 = sub_1C0233FC8(v227);
      swift_setDeallocating();
      sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v239 = sub_1C131B79C(v238);
      swift_bridgeObjectRelease();
      uint64_t v217 = v265;
      unint64_t v218 = v266;
      uint64_t v219 = v264;
      uint64_t v220 = (uint64_t)v239;
      uint64_t v222 = v261;
      uint64_t v221 = v262;
    }
    sub_1C042F458(v219, v217, v220, v221, v222, v218);

    goto LABEL_13;
  }
  long long v46 = v267[0];
  uint64_t v47 = *(void *)&v267[1];
  uint64_t v48 = sub_1C131B4D4(*(uint64_t *)&v267[0]);
  unint64_t v275 = MEMORY[0x1E4FBC860];
  uint64_t v49 = *(void *)(v48 + 16);
  if (v49)
  {
    uint64_t v50 = a3;
    swift_bridgeObjectRetain();
    uint64_t v51 = 64;
    char v52 = v266;
    do
    {
      uint64_t v53 = swift_bridgeObjectRetain();
      sub_1C1047634(v53);
      v51 += 40;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease_n();
    unint64_t v54 = v275;
    a3 = v50;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v54 = MEMORY[0x1E4FBC860];
    char v52 = v266;
  }
  uint64_t v61 = *(void *)(v54 + 16);

  swift_bridgeObjectRelease();
  if (v61)
  {
    uint64_t v62 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v63 = (char *)v52 + *(int *)(v62 + 24);
    *(_OWORD *)uint64_t v63 = v46;
    *((void *)v63 + 2) = v47;
    uint64_t v64 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
    uint64_t v65 = v265;
    *char v52 = v264;
    v52[1] = v65;
    v52[2] = *((void *)&v46 + 1);
    v52[3] = v47;
    long long v66 = (char *)v52 + *(int *)(v62 + 28);
    *(void *)long long v66 = 0;
    *((void *)v66 + 1) = 0;
    v66[16] = -1;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v68 = (char *)v52 + *(int *)(v67 + 24);
  uint64_t v69 = type metadata accessor for FormatInspectionItem.Value(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 1, 1, v69);
  uint64_t v70 = v265;
  *char v52 = v264;
  v52[1] = v70;
  v52[2] = 0;
  v52[3] = 0;
LABEL_33:
  uint64_t v38 = (char *)v52 + *(int *)(v67 + 28);
LABEL_12:
  *(void *)uint64_t v38 = 0;
  *((void *)v38 + 1) = 0;
  v38[16] = -1;
LABEL_13:
}

uint64_t sub_1C0443978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = a3;
  if (a3)
  {
    sub_1C04452FC(0);
    uint64_t v12 = v11;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v33;
      uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v15 = (void *)((char *)a4 + *(int *)(v14 + 24));
      *uint64_t v15 = v13;
      uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      uint64_t v17 = (char *)a4 + *(int *)(v14 + 28);
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      uint64_t v34 = v12;
      uint64_t v35 = sub_1C0445E14(&qword_1EA19B5F0, sub_1C04452FC);
      *(void *)&long long v33 = v36;
      sub_1BFC773DC(&v33, (uint64_t)v32);
      uint64_t v23 = *__swift_project_boxed_opaque_existential_1(v32, v32[3]);
      uint64_t v24 = type metadata accessor for SportsScoreDataVisualization();
      swift_bridgeObjectRetain();
      uint64_t v25 = MEMORY[0x1C18C6710](v23, v24);
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      *uint64_t v10 = v25;
      v10[1] = v27;
      uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
      *a4 = a1;
      a4[1] = a2;
      uint64_t v29 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1C0445B7C((uint64_t)v10, (uint64_t)a4 + *(int *)(v29 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v30 = (char *)a4 + *(int *)(v29 + 28);
      *(void *)uint64_t v30 = 0;
      *((void *)v30 + 1) = 0;
      v30[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
    id v19 = (char *)a4 + *(int *)(v18 + 24);
    uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    uint64_t v22 = (char *)a4 + *(int *)(v18 + 28);
    *(void *)uint64_t v22 = 0;
    *((void *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t FormatBorder.edges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBorder.edges.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FormatBorder.edges.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatBorder.color.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t FormatBorder.width.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

void FormatBorder.inset.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

unsigned char *FormatBorder.inset.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t (*FormatBorder.inset.modify())(void)
{
  return nullsub_1;
}

void FormatBorder.lineCap.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

unsigned char *FormatBorder.lineCap.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 25) = *result;
  return result;
}

uint64_t (*FormatBorder.lineCap.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatBorder.linePattern.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBorder.linePattern.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatBorder.linePattern.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatBorder.init(edges:color:width:inset:lineCap:linePattern:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = *a3;
  char v9 = *a4;
  char v10 = *a5;
  *(void *)a7 = result;
  *(void *)(a7 + 8) = v7;
  *(void *)(a7 + 16) = v8;
  *(unsigned char *)(a7 + 24) = v9;
  *(unsigned char *)(a7 + 25) = v10;
  *(void *)(a7 + 32) = a6;
  return result;
}

uint64_t sub_1C0443E10()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 16) != 1) {
    return 0;
  }
  uint64_t v2 = v0[4];
  uint64_t result = sub_1BFD44A04(v1);
  if (v5)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (*(_DWORD *)(v1 + 36) != v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result == 1 << *(unsigned char *)(v1 + 32)) {
    return 0;
  }
  sub_1C029720C(result, v4, v1, &v6);
  uint64_t result = 0;
  if (!*(void *)(v2 + 16)) {
    return v6 == 4;
  }
  return result;
}

uint64_t FormatBorderInset.rawValue.getter()
{
  uint64_t v1 = 0x656C6464696DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x72657474756FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72656E6E69;
  }
}

uint64_t sub_1C0443EFC(char *a1, unsigned __int8 *a2)
{
  return sub_1C148CE58(*a1, *a2);
}

uint64_t sub_1C0443F08()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0443FA0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0444024()
{
  return sub_1C1520E0C();
}

void sub_1C04440B8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 0x656C6464696DLL;
  if (v2 != 1) {
    uint64_t v4 = 0x72657474756FLL;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x72656E6E69;
  }
  if (!v5) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

BOOL _s8NewsFeed12FormatBorderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 25);
  uint64_t v7 = *(void *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  unint64_t v9 = *(void *)(a2 + 16);
  int v10 = *(unsigned __int8 *)(a2 + 24);
  int v28 = *(unsigned __int8 *)(a2 + 25);
  uint64_t v26 = *(void *)(a2 + 32);
  uint64_t v27 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_1BFDF73D8(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 0;
  }
  unint64_t v29 = v8;
  uint64_t v30 = v2;
  if ((static FormatColor.== infix(_:_:)(&v30, &v29) & 1) == 0) {
    return 0;
  }
  unint64_t v29 = v9;
  uint64_t v30 = v4;
  if ((static FormatFloat.== infix(_:_:)(&v30, &v29) & 1) == 0) {
    return 0;
  }
  uint64_t v12 = 0x656C6464696DLL;
  if (v5 != 1) {
    uint64_t v12 = 0x72657474756FLL;
  }
  if (v5) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0x72656E6E69;
  }
  if (v5) {
    unint64_t v14 = 0xE600000000000000;
  }
  else {
    unint64_t v14 = 0xE500000000000000;
  }
  uint64_t v15 = 0x656C6464696DLL;
  if (v10 != 1) {
    uint64_t v15 = 0x72657474756FLL;
  }
  if (v10) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0x72656E6E69;
  }
  if (v10) {
    unint64_t v17 = 0xE600000000000000;
  }
  else {
    unint64_t v17 = 0xE500000000000000;
  }
  if (v13 == v16 && v14 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v19 = 1953789282;
  if (!v6)
  {
    unint64_t v21 = 0xE400000000000000;
    uint64_t v22 = 1953789282;
    int v20 = v28;
    if (v28) {
      goto LABEL_29;
    }
    goto LABEL_32;
  }
  int v20 = v28;
  if (v6 != 1)
  {
    unint64_t v21 = 0xE600000000000000;
    uint64_t v22 = 0x657261757173;
    if (v28) {
      goto LABEL_29;
    }
LABEL_32:
    unint64_t v23 = 0xE400000000000000;
    goto LABEL_34;
  }
  unint64_t v21 = 0xE500000000000000;
  uint64_t v22 = 0x646E756F72;
  if (!v28) {
    goto LABEL_32;
  }
LABEL_29:
  if (v20 == 1)
  {
    unint64_t v23 = 0xE500000000000000;
    uint64_t v19 = 0x646E756F72;
  }
  else
  {
    unint64_t v23 = 0xE600000000000000;
    uint64_t v19 = 0x657261757173;
  }
LABEL_34:
  if (v22 != v19 || v21 != v23)
  {
    char v24 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_38;
    }
    return 0;
  }
  swift_bridgeObjectRelease_n();
LABEL_38:
  return sub_1C00F0AA8(v27, v26);
}

unint64_t sub_1C04443A0(uint64_t a1)
{
  unint64_t result = sub_1C04443C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04443C8()
{
  unint64_t result = qword_1EA19B598;
  if (!qword_1EA19B598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B598);
  }
  return result;
}

uint64_t sub_1C044441C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0444648(a1, a2, a3, (uint64_t (*)(void))sub_1C0083358, (uint64_t (*)(void))sub_1C00833AC, (uint64_t (*)(void))sub_1C044445C);
}

unint64_t sub_1C044445C()
{
  unint64_t result = qword_1EA19B5A0;
  if (!qword_1EA19B5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B5A0);
  }
  return result;
}

unint64_t sub_1C04444B4()
{
  unint64_t result = qword_1EA19B5A8;
  if (!qword_1EA19B5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B5A8);
  }
  return result;
}

unint64_t sub_1C0444508(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0444538();
  unint64_t result = sub_1BFCC0284();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0444538()
{
  unint64_t result = qword_1EA19B5B0;
  if (!qword_1EA19B5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B5B0);
  }
  return result;
}

unint64_t sub_1C044458C(uint64_t a1)
{
  unint64_t result = sub_1C04445B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04445B4()
{
  unint64_t result = qword_1EA19B5B8;
  if (!qword_1EA19B5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B5B8);
  }
  return result;
}

uint64_t sub_1C0444608(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0444648(a1, a2, a3, (uint64_t (*)(void))sub_1BFDFBEE8, (uint64_t (*)(void))sub_1BFDF77C4, (uint64_t (*)(void))sub_1C04444B4);
}

uint64_t sub_1C0444648(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

uint64_t sub_1C044469C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C04446A8(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1C04446EC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 24);
  return result;
}

unsigned char *sub_1C04446F8(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 24) = *result;
  return result;
}

uint64_t sub_1C0444704@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 25);
  return result;
}

unsigned char *sub_1C0444710(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 25) = *result;
  return result;
}

uint64_t sub_1C044471C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0444728(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t assignWithCopy for FormatBorder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatBorder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBorder()
{
  return &type metadata for FormatBorder;
}

ValueMetadata *type metadata accessor for FormatBorderInset()
{
  return &type metadata for FormatBorderInset;
}

void *sub_1C04448D4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v18 = a1[4];
  sub_1C01B2D70();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0445DB0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C15445C0;
  uint64_t v19 = v8;
  unint64_t v9 = (void *)(v8 + v7);
  if (v1) {
    swift_bridgeObjectRetain();
  }
  sub_1C043820C(0x7365676445, 0xE500000000000000, v1, v9);
  uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
  char v11 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 0, 1, v10);
  if (v1)
  {
    swift_retain();
    sub_1C0433BC8(0x726F6C6F43, 0xE500000000000000, v2, (void *)((char *)v9 + v6));
    v11((void *)((char *)v9 + v6), 0, 1, v10);
    swift_retain();
  }
  else
  {
    uint64_t v4 = 0xF000000000000007;
    sub_1C0433BC8(0x726F6C6F43, 0xE500000000000000, 0xF000000000000007, (void *)((char *)v9 + v6));
    v11((void *)((char *)v9 + v6), 0, 1, v10);
  }
  sub_1C043854C(0x6874646957, 0xE500000000000000, v4, (void *)((char *)v9 + 2 * v6));
  v11((void *)((char *)v9 + 2 * v6), 0, 1, v10);
  if (v1) {
    unsigned __int8 v12 = v3;
  }
  else {
    unsigned __int8 v12 = 3;
  }
  sub_1C0438848(0x7465736E49, 0xE500000000000000, v12, (void *)((char *)v9 + 3 * v6));
  v11((void *)((char *)v9 + 3 * v6), 0, 1, v10);
  if (v1)
  {
    sub_1C0438848(0x70614320656E694CLL, 0xE800000000000000, BYTE1(v3), (void *)((char *)v9 + 4 * v6));
    v11((void *)((char *)v9 + 4 * v6), 0, 1, v10);
    uint64_t v13 = v18;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1C0438848(0x70614320656E694CLL, 0xE800000000000000, 3u, (void *)((char *)v9 + 4 * v6));
    v11((void *)((char *)v9 + 4 * v6), 0, 1, v10);
    uint64_t v13 = 0;
  }
  sub_1C043AA00(0x74615020656E694CLL, 0xEC0000006E726574, v13, &qword_1EB879F68, MEMORY[0x1E4FBB470], &qword_1EA19B5C0, (void *)((char *)v9 + 5 * v6));
  v11((void *)((char *)v9 + 5 * v6), 0, 1, v10);
  sub_1C09BCFA4(0x726564726F42, 0xE600000000000000, 0, 0, v19, v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v14 = swift_allocObject();
  *(void *)(inited + 32) = v14;
  *(void *)(v14 + 48) = v22;
  long long v15 = v21[1];
  *(_OWORD *)(v14 + 16) = v21[0];
  *(_OWORD *)(v14 + 32) = v15;
  uint64_t v16 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  return v16;
}

uint64_t sub_1C0444D8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0444DD4(uint64_t a1)
{
}

unint64_t sub_1C0444E08()
{
  unint64_t result = qword_1EA19B5C8;
  if (!qword_1EA19B5C8)
  {
    sub_1C044594C(255, (unint64_t *)&qword_1EB87A000, (uint64_t (*)(void))sub_1BFDFD140, (uint64_t)&type metadata for FormatBorderEdge, MEMORY[0x1E4FBB510]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B5C8);
  }
  return result;
}

unint64_t sub_1C0444E98()
{
  unint64_t result = qword_1EB8941F0;
  if (!qword_1EB8941F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8941F0);
  }
  return result;
}

uint64_t sub_1C0444EEC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C0445AFC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0444F6C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1C0445AFC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0444FE0(void *a1)
{
  return sub_1C0AF60E8(a1);
}

uint64_t sub_1C0444FE8(uint64_t a1)
{
  return *(void *)(a1 + 104) >> 62;
}

uint64_t sub_1C0445004(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0445038(uint64_t result)
{
  *(void *)(result + 104) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1C0445048(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 72);
  long long v13 = *(_OWORD *)(a1 + 104);
  long long v14 = *(_OWORD *)(a1 + 88);
  long long v12 = *(_OWORD *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 136);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 144);
  swift_retain();
  sub_1BFC5BF4C(v16, v2, v3, v4, v5, v6, v7, v8, v15, BYTE8(v15), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1C0445120(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  char v8 = *(unsigned char *)(a1 + 80);
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 144);
  uint64_t v14 = *(void *)(a1 + 136);
  char v9 = *(unsigned char *)(a1 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C03A98B4(v12, v11, v2, v3, v4, v5, v6, v7, v8);
  sub_1C03A98B4(v20, v19, v18, v17, v16, v15, v14, v13, v9);
  return a1;
}

unint64_t sub_1C0445208()
{
  unint64_t result = qword_1EA19B5D8;
  if (!qword_1EA19B5D8)
  {
    sub_1C044594C(255, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B5D8);
  }
  return result;
}

unint64_t sub_1C0445298()
{
  unint64_t result = qword_1EA19B5E0;
  if (!qword_1EA19B5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B5E0);
  }
  return result;
}

uint64_t sub_1C04452EC(uint64_t a1, unint64_t a2)
{
  if (a2 != 4) {
    return sub_1C0257108(a1, a2);
  }
  return a1;
}

void sub_1C04452FC(uint64_t a1)
{
}

uint64_t sub_1C0445330(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C044538C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C04453F4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C0445AFC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1C0445474()
{
  if (!qword_1EA19B600)
  {
    unint64_t v0 = type metadata accessor for FormatRange();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B600);
    }
  }
}

uint64_t sub_1C04454EC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0445AFC(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0445550()
{
  unint64_t result = qword_1EA19B618;
  if (!qword_1EA19B618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B618);
  }
  return result;
}

uint64_t sub_1C04455A4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1C04455BC()
{
  unint64_t result = qword_1EA19B628;
  if (!qword_1EA19B628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B628);
  }
  return result;
}

uint64_t sub_1C0445610(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C044564C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    sub_1BFEEFC20(a4, a5);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C04456A0(uint64_t a1)
{
}

unint64_t sub_1C04456D8()
{
  unint64_t result = qword_1EA19B650;
  if (!qword_1EA19B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B650);
  }
  return result;
}

unint64_t sub_1C044572C()
{
  unint64_t result = qword_1EA19B658;
  if (!qword_1EA19B658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B658);
  }
  return result;
}

unint64_t sub_1C0445780()
{
  unint64_t result = qword_1EA19B660;
  if (!qword_1EA19B660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B660);
  }
  return result;
}

unint64_t sub_1C04457D4()
{
  unint64_t result = qword_1EA19B668;
  if (!qword_1EA19B668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B668);
  }
  return result;
}

unint64_t sub_1C0445828()
{
  unint64_t result = qword_1EA19B670;
  if (!qword_1EA19B670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B670);
  }
  return result;
}

uint64_t sub_1C044587C(uint64_t a1)
{
  if ((*(void *)(a1 + 104) >> 1) > 0x80000000) {
    return -(*(void *)(a1 + 104) >> 1);
  }
  else {
    return 0;
  }
}

void *sub_1C0445894(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_1C04458F8()
{
  unint64_t result = qword_1EA19B678;
  if (!qword_1EA19B678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B678);
  }
  return result;
}

void sub_1C044594C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C04459B4()
{
  unint64_t result = qword_1EA19B680;
  if (!qword_1EA19B680)
  {
    sub_1C044594C(255, &qword_1EB879FF8, (uint64_t (*)(void))sub_1C0080600, (uint64_t)&type metadata for FormatFontTrait, MEMORY[0x1E4FBB510]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B680);
  }
  return result;
}

unint64_t sub_1C0445A44()
{
  unint64_t result = qword_1EA19B690;
  if (!qword_1EA19B690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B690);
  }
  return result;
}

unint64_t sub_1C0445A98()
{
  unint64_t result = qword_1EA19B6A0;
  if (!qword_1EA19B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B6A0);
  }
  return result;
}

uint64_t sub_1C0445AEC()
{
  return swift_deallocObject();
}

void sub_1C0445AFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C0445B48(uint64_t a1)
{
}

uint64_t sub_1C0445B7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0445BE4(uint64_t a1)
{
}

void sub_1C0445C18(uint64_t a1)
{
}

void sub_1C0445C4C(uint64_t a1)
{
}

void sub_1C0445C80(uint64_t a1)
{
}

uint64_t sub_1C0445CB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0445D1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0445D7C(uint64_t a1)
{
}

void sub_1C0445DB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0445E14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0445E60()
{
  sub_1C02317E4(*(id *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_timestamp;
  uint64_t v2 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0445F38()
{
  return type metadata accessor for DebugFormatLogEntry();
}

uint64_t type metadata accessor for DebugFormatLogEntry()
{
  uint64_t result = qword_1EA19B700;
  if (!qword_1EA19B700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0445F8C()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0446040(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_timestamp;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  uint64_t v12 = (void *)(v4 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_message);
  *uint64_t v12 = a2;
  v12[1] = a3;
  *(void *)(v4 + 24) = a4;
  uint64_t v13 = sub_1C151E6BC();
  uint64_t v14 = (uint64_t *)(v4 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_normalizedMessage);
  *uint64_t v14 = v13;
  v14[1] = v15;
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  uint64_t v17 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v18 = *v17;
  *(void *)(inited + 32) = *v17;
  uint64_t v19 = self;
  double v20 = *MEMORY[0x1E4FB09D0];
  swift_bridgeObjectRetain();
  sub_1C0231470(a4);
  id v21 = v18;
  id v22 = objc_msgSend(v19, sel_monospacedSystemFontOfSize_weight_, 14.0, v20);
  uint64_t v23 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v22;
  char v24 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v23;
  *(void *)(inited + 72) = v24;
  uint64_t v25 = self;
  id v26 = v24;
  id v27 = objc_msgSend(v25, sel_labelColor);
  *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v27;
  sub_1BFF991DC(inited);
  id v28 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  unint64_t v29 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  uint64_t v30 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  *(void *)(v4 + 16) = v31;
  return v4;
}

uint64_t static FormatSelectorValue.== infix(_:_:)()
{
  if (sub_1C151E5CC())
  {
    type metadata accessor for FormatSelectorValue();
    type metadata accessor for FormatSelectorValueSelector();
    swift_getWitnessTable();
    swift_getWitnessTable();
    type metadata accessor for FormatCodingEmptyArrayStrategy();
    swift_getWitnessTable();
    sub_1C151ED5C();
    swift_getWitnessTable();
    swift_getWitnessTable();
    char v0 = static FormatCodingDefault<>.== infix(_:_:)();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t FormatSelectorValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FormatSelectorValue.selectors.getter(uint64_t a1)
{
  sub_1BFE3177C(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C04464B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatSelectorValue();
  *a1 = sub_1BFE3177C(v2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0446504()
{
  uint64_t v0 = type metadata accessor for FormatSelectorValue();
  uint64_t v1 = swift_bridgeObjectRetain();
  return FormatSelectorValue.selectors.setter(v1, v0);
}

uint64_t FormatSelectorValue.selectors.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FormatSelectorValue.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C04465B0()
{
  return static FormatSelectorValue.== infix(_:_:)();
}

uint64_t FormatSelectorValueSelector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatSelectorValueSelector.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t static FormatSelectorValueSelector.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FormatSelectorValueSelector();
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C044668C(void *a1, void *a2)
{
  return static FormatSelectorValueSelector.== infix(_:_:)(a1, a2);
}

uint64_t sub_1C0446698(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C04466D4(void *a1)
{
  return sub_1BFC3CD6C(a1);
}

uint64_t sub_1C0446714(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0446750(void *a1)
{
  return sub_1BFC3CD6C(a1);
}

uint64_t sub_1C0446798()
{
  return 16;
}

__n128 sub_1C04467A4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *sub_1C04467B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C04468AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0446938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for AnyFormatSelectorValueSelector(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AnyFormatSelectorValueSelector(void *a1, void *a2)
{
  uint64_t v4 = a2[3];
  a1[3] = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for AnyFormatSelectorValueSelector(uint64_t *a1, uint64_t *a2)
{
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        __n128 result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *__n128 result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AnyFormatSelectorValueSelector(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyFormatSelectorValueSelector(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyFormatSelectorValueSelector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyFormatSelectorValueSelector()
{
  return &type metadata for AnyFormatSelectorValueSelector;
}

uint64_t destroy for AnyFormatSelectorValue(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnyFormatSelectorValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for AnyFormatSelectorValue(uint64_t *a1, uint64_t *a2)
{
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnyFormatSelectorValue(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyFormatSelectorValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyFormatSelectorValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyFormatSelectorValue()
{
  return &type metadata for AnyFormatSelectorValue;
}

uint64_t sub_1C0446FEC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447144()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04471D8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04472E4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447414()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044754C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447698()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04477E4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044790C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447A8C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447BD8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447D00()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447E4C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0447F74()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04480C4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0448200()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04483AC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0448498()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04485F4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044874C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04488AC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04489AC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0448B34()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0448C20()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0448D4C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0448E4C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0448F5C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04490A4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04491B8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044930C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449448()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04494DC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449650()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449750()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449854()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449948()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449AA8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449BF0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449D0C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449E00()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449E90()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0449FCC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A114()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A250()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A3C4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A4D4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A600()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A730()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A888()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044A990()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044AAC8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044AC18()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044ACA4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044ADE4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044AF18()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B048()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B170()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B310()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B47C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B5E0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B6F0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B7E0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B910()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044B9F8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044BB38()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044BC54()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044BDA0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C044BEAC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044BF54()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C04C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C188()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C2FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C384()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C4D8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C634()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C790()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C8A4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044C9DC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044CB38()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044CC4C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044CDA8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044CE54()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044CF8C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D074()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D0F8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D244()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D340()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D47C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D560()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D674()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D79C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D8AC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044D998()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044DA94()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044DB48()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044DC84()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044DDC0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044DED0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044DFF0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E114()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E200()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E27C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E3C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E4D4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E57C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E68C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E7A0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E8A4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044E9BC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044EAB8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044EC10()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044ED0C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044EE38()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044EF48()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044EFEC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F138()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F284()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F398()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F4B8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F5F4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F708()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F848()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044F968()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044FAB0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044FBB0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044FCB4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044FDBC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044FEE0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C044FF80()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450098()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C04501DC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C04502D8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450410()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450550()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450664()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450764()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C04508D8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C04509F8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450B18()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450C18()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450D10()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450E00()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0450ECC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0451004()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C04510F0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0451200()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C045132C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C045140C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C045151C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0451638(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C1520E0C();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE300000000000000;
        uint64_t v10 = 7368564;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x676E696461656CLL;
            break;
          case 2:
            unint64_t v9 = 0xE800000000000000;
            uint64_t v10 = 0x676E696C69617274;
            break;
          case 3:
            unint64_t v9 = 0xE600000000000000;
            uint64_t v10 = 0x6D6F74746F62;
            break;
          case 4:
            uint64_t v10 = 7105633;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7368564;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE700000000000000;
            if (v10 == 0x676E696461656CLL) {
              goto LABEL_16;
            }
            goto LABEL_17;
          case 2:
            unint64_t v11 = 0xE800000000000000;
            if (v10 != 0x676E696C69617274) {
              goto LABEL_17;
            }
            goto LABEL_16;
          case 3:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x6D6F74746F62;
            goto LABEL_15;
          case 4:
            if (v10 != 7105633) {
              goto LABEL_17;
            }
            goto LABEL_16;
          default:
LABEL_15:
            if (v10 != v12) {
              goto LABEL_17;
            }
LABEL_16:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_17:
            char v13 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1C0451920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1C1520DBC();
  if (a2 == 1 || a2 == 2 || a2 == 3)
  {
    sub_1C1520DCC();
  }
  else
  {
    sub_1C1520DCC();
    sub_1C1520DDC();
    if (a2)
    {
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      sub_1BFEE653C(a1, a2);
    }
  }
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    switch(v12)
    {
      case 1:
        if (a2 == 1)
        {
          uint64_t v18 = *v10;
          uint64_t v19 = 1;
          goto LABEL_39;
        }
        goto LABEL_22;
      case 2:
        if (a2 == 2)
        {
          uint64_t v18 = *v10;
          uint64_t v19 = 2;
          goto LABEL_39;
        }
        goto LABEL_22;
      case 3:
        if (a2 == 3)
        {
          uint64_t v18 = *v10;
          uint64_t v19 = 3;
          goto LABEL_39;
        }
LABEL_22:
        sub_1BFE40340(a1, a2);
        sub_1BFE40340(v11, v12);
        sub_1BFEE653C(v11, v12);
        uint64_t v13 = a1;
        uint64_t v14 = a2;
        goto LABEL_23;
    }
    if ((unint64_t)(a2 - 1) < 3) {
      goto LABEL_22;
    }
    if (!v12)
    {
      sub_1BFE40340(a1, a2);
      sub_1BFE40340(v11, 0);
      sub_1BFE40340(a1, a2);
      sub_1BFE40340(v11, 0);
      sub_1BFEE653C(v11, 0);
      sub_1BFEE653C(a1, a2);
      sub_1BFEE653C(v11, 0);
      if (!a2) {
        return 1;
      }
      sub_1BFEE653C(a1, a2);
      uint64_t v13 = v11;
LABEL_37:
      uint64_t v14 = 0;
LABEL_23:
      sub_1BFEE653C(v13, v14);
      goto LABEL_24;
    }
    if (!a2)
    {
      sub_1BFE40340(a1, 0);
      sub_1BFE40340(v11, v12);
      sub_1BFEE653C(v11, v12);
      uint64_t v13 = a1;
      goto LABEL_37;
    }
    if (v11 == a1 && v12 == a2) {
      break;
    }
    char v16 = sub_1C1520A9C();
    sub_1BFE40340(a1, a2);
    sub_1BFE40340(v11, v12);
    sub_1BFEE653C(v11, v12);
    sub_1BFEE653C(a1, a2);
    if (v16) {
      return 1;
    }
LABEL_24:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  sub_1BFE40340(a1, a2);
  sub_1BFE40340(a1, a2);
  uint64_t v18 = a1;
  uint64_t v19 = a2;
LABEL_39:
  sub_1BFEE653C(v18, v19);
  sub_1BFEE653C(a1, a2);
  return 1;
}

uint64_t sub_1C0451CA4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1C1520DBC();
  FormatItemKind.hash(into:)();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    uint64_t v10 = *(void *)(a3 + 48) + 16 * v8;
    uint64_t v11 = *(void *)v10;
    unint64_t v12 = *(void *)(v10 + 8);
    switch(v12)
    {
      case 0uLL:
        if (a2) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 0;
        goto LABEL_47;
      case 1uLL:
        if (a2 != 1) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 1;
        goto LABEL_47;
      case 2uLL:
        if (a2 != 2) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 2;
        goto LABEL_47;
      case 3uLL:
        if (a2 != 3) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 3;
        goto LABEL_47;
      case 4uLL:
        if (a2 != 4) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 4;
        goto LABEL_47;
      case 5uLL:
        if (a2 != 5) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 5;
        goto LABEL_47;
      case 6uLL:
        if (a2 != 6) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 6;
        goto LABEL_47;
      case 7uLL:
        if (a2 != 7) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 7;
        goto LABEL_47;
      case 8uLL:
        if (a2 != 8) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 8;
        goto LABEL_47;
      case 9uLL:
        if (a2 != 9) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 9;
        goto LABEL_47;
      case 0xAuLL:
        if (a2 != 10) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 10;
        goto LABEL_47;
      case 0xBuLL:
        if (a2 != 11) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 11;
        goto LABEL_47;
      case 0xCuLL:
        if (a2 != 12) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 12;
        goto LABEL_47;
      case 0xDuLL:
        if (a2 != 13) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 13;
        goto LABEL_47;
      case 0xEuLL:
        if (a2 != 14) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 14;
        goto LABEL_47;
      default:
        if (a2 < 0xF)
        {
LABEL_41:
          sub_1BFE74E64(*(void *)v10, *(void *)(v10 + 8));
          sub_1BFE74E64(a1, a2);
          sub_1BFF8F648(v11, v12);
          sub_1BFF8F648(a1, a2);
LABEL_42:
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            return 0;
          }
          continue;
        }
        if (v11 != a1 || v12 != a2)
        {
          char v14 = sub_1C1520A9C();
          sub_1BFE74E64(v11, v12);
          sub_1BFE74E64(a1, a2);
          sub_1BFF8F648(v11, v12);
          sub_1BFF8F648(a1, a2);
          if (v14) {
            return 1;
          }
          goto LABEL_42;
        }
        sub_1BFE74E64(a1, a2);
        sub_1BFE74E64(a1, a2);
        uint64_t v16 = a1;
        unint64_t v17 = a2;
LABEL_47:
        sub_1BFF8F648(v16, v17);
        sub_1BFF8F648(a1, a2);
        return 1;
    }
  }
}

uint64_t sub_1C0452010(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = sub_1C04510F0();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      while (1)
      {
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x657669746361;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v8 = 0xE400000000000000;
            uint64_t v9 = 1852138867;
            break;
          case 2:
            uint64_t v9 = 0x6E657A6F7266;
            break;
          case 3:
            uint64_t v9 = 0x656546664F646E65;
            unint64_t v8 = 0xE900000000000064;
            break;
          case 4:
            uint64_t v9 = 0x646568636163;
            break;
          case 5:
            unint64_t v8 = 0xE800000000000000;
            uint64_t v10 = 0x6C6F6F706572;
            goto LABEL_11;
          case 6:
            unint64_t v8 = 0xE800000000000000;
            uint64_t v10 = 0x646E61707865;
LABEL_11:
            uint64_t v9 = v10 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x657669746361;
        switch(a1)
        {
          case 1:
            unint64_t v11 = 0xE400000000000000;
            if (v9 == 1852138867) {
              goto LABEL_23;
            }
            goto LABEL_24;
          case 2:
            if (v9 != 0x6E657A6F7266) {
              goto LABEL_24;
            }
            goto LABEL_23;
          case 3:
            unint64_t v11 = 0xE900000000000064;
            if (v9 != 0x656546664F646E65) {
              goto LABEL_24;
            }
            goto LABEL_23;
          case 4:
            if (v9 != 0x646568636163) {
              goto LABEL_24;
            }
            goto LABEL_23;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x64656C6F6F706572;
            goto LABEL_22;
          case 6:
            unint64_t v11 = 0xE800000000000000;
            if (v9 != 0x6465646E61707865) {
              goto LABEL_24;
            }
            goto LABEL_23;
          default:
LABEL_22:
            if (v9 != v12) {
              goto LABEL_24;
            }
LABEL_23:
            if (v8 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_24:
            char v13 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1C04522BC(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && ((sub_1C1520DBC(), (a1 & 1) != 0) ? (uint64_t v4 = 0x656E696C66666FLL) : (uint64_t v4 = 0x746C7561666564),
        sub_1C151E77C(),
        swift_bridgeObjectRelease(),
        uint64_t v5 = sub_1C1520E0C(),
        uint64_t v6 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v7 = v5 & ~v6,
        ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      uint64_t v9 = *(unsigned char *)(*(void *)(a2 + 48) + v7) ? 0x656E696C66666FLL : 0x746C7561666564;
      if (v9 == v4) {
        break;
      }
      char v10 = sub_1C1520A9C();
      swift_bridgeObjectRelease_n();
      if ((v10 & 1) == 0)
      {
        unint64_t v7 = (v7 + 1) & v8;
        if ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7)) {
          continue;
        }
      }
      return v10 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1C0452404(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C1520E0C();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      while (1)
      {
        if (*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          if (*(unsigned char *)(*(void *)(a2 + 48) + v6) == 1)
          {
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x64657269707865;
            int v10 = a1;
            if (!a1) {
              goto LABEL_18;
            }
          }
          else
          {
            unint64_t v8 = 0xE800000000000000;
            uint64_t v9 = 0x64656C6261736964;
            int v10 = a1;
            if (!a1)
            {
LABEL_18:
              unint64_t v12 = 0xE600000000000000;
              if (v9 != 0x657669746361) {
                goto LABEL_20;
              }
              goto LABEL_19;
            }
          }
        }
        else
        {
          unint64_t v8 = 0xE600000000000000;
          uint64_t v9 = 0x657669746361;
          int v10 = a1;
          if (!a1) {
            goto LABEL_18;
          }
        }
        if (v10 == 1) {
          uint64_t v11 = 0x64657269707865;
        }
        else {
          uint64_t v11 = 0x64656C6261736964;
        }
        if (v10 == 1) {
          unint64_t v12 = 0xE700000000000000;
        }
        else {
          unint64_t v12 = 0xE800000000000000;
        }
        if (v9 != v11) {
          goto LABEL_20;
        }
LABEL_19:
        if (v8 == v12)
        {
          swift_bridgeObjectRelease_n();
          char v13 = 1;
          return v13 & 1;
        }
LABEL_20:
        char v13 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v6 = (v6 + 1) & v7;
          if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
            continue;
          }
        }
        return v13 & 1;
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

BOOL sub_1C045262C(int a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1C1520DBC();
  sub_1C1520DEC();
  uint64_t v4 = sub_1C1520E0C();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1C045271C(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1520DBC();
    sub_1C04489AC();
    uint64_t v4 = sub_1C1520E0C();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x657571696E75;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x74696D696CLL;
            break;
          case 2:
            uint64_t v10 = 0x6C616E6F73726570;
            unint64_t v9 = 0xEB00000000657A69;
            break;
          case 3:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x65726975716572;
            break;
          case 4:
            uint64_t v10 = 0x6F43657269707865;
            unint64_t v9 = 0xED0000746E65746ELL;
            break;
          case 5:
            unint64_t v9 = 0xE300000000000000;
            uint64_t v10 = 6775156;
            break;
          case 6:
            uint64_t v10 = 0x7453656C7A7A7570;
            unint64_t v9 = 0xEF63697473697461;
            break;
          case 7:
            unint64_t v9 = 0xE800000000000000;
            uint64_t v10 = 0x726F7463656C6573;
            break;
          case 8:
            uint64_t v10 = 0x7265746C6966;
            break;
          case 9:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1953656691;
            break;
          case 0xA:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x7974706D65;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x657571696E75;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE500000000000000;
            if (v10 == 0x74696D696CLL) {
              goto LABEL_34;
            }
            goto LABEL_35;
          case 2:
            unint64_t v11 = 0xEB00000000657A69;
            if (v10 != 0x6C616E6F73726570) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 3:
            unint64_t v11 = 0xE700000000000000;
            if (v10 != 0x65726975716572) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 4:
            unint64_t v11 = 0xED0000746E65746ELL;
            if (v10 != 0x6F43657269707865) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 5:
            unint64_t v11 = 0xE300000000000000;
            if (v10 != 6775156) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 6:
            unint64_t v11 = 0xEF63697473697461;
            if (v10 != 0x7453656C7A7A7570) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 7:
            unint64_t v11 = 0xE800000000000000;
            if (v10 != 0x726F7463656C6573) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 8:
            if (v10 != 0x7265746C6966) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 9:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1953656691;
            goto LABEL_33;
          case 10:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x7974706D65) {
              goto LABEL_35;
            }
            goto LABEL_34;
          default:
LABEL_33:
            if (v10 != v12) {
              goto LABEL_35;
            }
LABEL_34:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_35:
            char v13 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

BOOL sub_1C0452B10(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1C1520DBC();
  sub_1C1520DCC();
  uint64_t v4 = sub_1C1520E0C();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1C0452C00(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1C1520DBC();
  FeedItem.Kind.hash(into:)();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    uint64_t v10 = *(void *)(a3 + 48) + 16 * v8;
    uint64_t v11 = *(void *)v10;
    unint64_t v12 = *(void *)(v10 + 8);
    switch(v12)
    {
      case 0uLL:
        if (a2) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 0;
        goto LABEL_51;
      case 1uLL:
        if (a2 != 1) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 1;
        goto LABEL_51;
      case 2uLL:
        if (a2 != 2) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 2;
        goto LABEL_51;
      case 3uLL:
        if (a2 != 3) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 3;
        goto LABEL_51;
      case 4uLL:
        if (a2 != 4) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 4;
        goto LABEL_51;
      case 5uLL:
        if (a2 != 5) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 5;
        goto LABEL_51;
      case 6uLL:
        if (a2 != 6) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 6;
        goto LABEL_51;
      case 7uLL:
        if (a2 != 7) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 7;
        goto LABEL_51;
      case 8uLL:
        if (a2 != 8) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 8;
        goto LABEL_51;
      case 9uLL:
        if (a2 != 9) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 9;
        goto LABEL_51;
      case 0xAuLL:
        if (a2 != 10) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 10;
        goto LABEL_51;
      case 0xBuLL:
        if (a2 != 11) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 11;
        goto LABEL_51;
      case 0xCuLL:
        if (a2 != 12) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 12;
        goto LABEL_51;
      case 0xDuLL:
        if (a2 != 13) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 13;
        goto LABEL_51;
      case 0xEuLL:
        if (a2 != 14) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 14;
        goto LABEL_51;
      case 0xFuLL:
        if (a2 != 15) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 15;
        goto LABEL_51;
      case 0x10uLL:
        if (a2 != 16) {
          goto LABEL_45;
        }
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = 16;
        goto LABEL_51;
      default:
        if (a2 < 0x11)
        {
LABEL_45:
          sub_1BFF7FF04(*(void *)v10, *(void *)(v10 + 8));
          sub_1BFF7FF04(a1, a2);
          sub_1BFEEFC20(v11, v12);
          sub_1BFEEFC20(a1, a2);
LABEL_46:
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            return 0;
          }
          continue;
        }
        if (v11 != a1 || v12 != a2)
        {
          char v14 = sub_1C1520A9C();
          sub_1BFF7FF04(v11, v12);
          sub_1BFF7FF04(a1, a2);
          sub_1BFEEFC20(v11, v12);
          sub_1BFEEFC20(a1, a2);
          if (v14) {
            return 1;
          }
          goto LABEL_46;
        }
        sub_1BFF7FF04(a1, a2);
        sub_1BFF7FF04(a1, a2);
        uint64_t v16 = a1;
        unint64_t v17 = a2;
LABEL_51:
        sub_1BFEEFC20(v16, v17);
        sub_1BFEEFC20(a1, a2);
        return 1;
    }
  }
}

uint64_t sub_1C0452FA4(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C1520E0C();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      char v16 = a1;
      uint64_t v15 = ~v5;
      while (1)
      {
        unint64_t v7 = 0xD00000000000001CLL;
        if (*(unsigned char *)(*(void *)(a2 + 48) + v6) == 1)
        {
          unint64_t v8 = 0x80000001C15FCF90;
        }
        else
        {
          unint64_t v7 = 0xD000000000000028;
          unint64_t v8 = 0x80000001C15FCFB0;
        }
        if (*(unsigned char *)(*(void *)(a2 + 48) + v6)) {
          unint64_t v9 = v7;
        }
        else {
          unint64_t v9 = 0xD000000000000010;
        }
        if (*(unsigned char *)(*(void *)(a2 + 48) + v6)) {
          unint64_t v10 = v8;
        }
        else {
          unint64_t v10 = 0x80000001C15FCF70;
        }
        if (v16)
        {
          if (v16 == 1) {
            unint64_t v11 = 0xD00000000000001CLL;
          }
          else {
            unint64_t v11 = 0xD000000000000028;
          }
          if (v16 == 1) {
            unint64_t v12 = 0x80000001C15FCF90;
          }
          else {
            unint64_t v12 = 0x80000001C15FCFB0;
          }
          if (v9 != v11) {
            goto LABEL_24;
          }
        }
        else
        {
          unint64_t v12 = 0x80000001C15FCF70;
          if (v9 != 0xD000000000000010) {
            goto LABEL_24;
          }
        }
        if (v10 == v12)
        {
          swift_bridgeObjectRelease_n();
          char v13 = 1;
          return v13 & 1;
        }
LABEL_24:
        char v13 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v6 = (v6 + 1) & v15;
          if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
            continue;
          }
        }
        return v13 & 1;
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1C04531C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  char v13 = (uint64_t *)((char *)&v30 - v12);
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v30 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v30 - v18);
  if (*(void *)(a2 + 16))
  {
    sub_1C1520DBC();
    sub_1C0454DC8(a1, (uint64_t)v19);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v35 = v7;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C0454E2C((uint64_t)v19, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      sub_1C151E77C();
      sub_1BFEFDA60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      uint64_t v36 = *v19;
      SportsDataVisualization.identifier.getter();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v21 = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    uint64_t v32 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
    {
      uint64_t v30 = ~v22;
      uint64_t v31 = a2;
      uint64_t v33 = *(void *)(v8 + 72);
      uint64_t v34 = a1;
      while (1)
      {
        sub_1C0454DC8(*(void *)(a2 + 48) + v33 * v23, (uint64_t)v16);
        sub_1C0454DC8((uint64_t)v16, (uint64_t)v13);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C0454E2C((uint64_t)v13, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
          uint64_t v37 = 0x3A636972656E6567;
          unint64_t v38 = 0xE90000000000003ALL;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v25 = v37;
          unint64_t v24 = v38;
          sub_1BFEFDA60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
        }
        else
        {
          uint64_t v36 = *v13;
          uint64_t v37 = 0x3A3A7374726F7073;
          unint64_t v38 = 0xE800000000000000;
          SportsDataVisualization.identifier.getter();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v25 = v37;
          unint64_t v24 = v38;
        }
        sub_1C0454DC8(v34, (uint64_t)v10);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C0454E2C((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
          uint64_t v37 = 0x3A636972656E6567;
          unint64_t v38 = 0xE90000000000003ALL;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v27 = v37;
          unint64_t v26 = v38;
          sub_1BFEFDA60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
          if (v25 != v27) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v36 = *v10;
          uint64_t v37 = 0x3A3A7374726F7073;
          unint64_t v38 = 0xE800000000000000;
          SportsDataVisualization.identifier.getter();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v26 = v38;
          if (v25 != v37) {
            goto LABEL_15;
          }
        }
        if (v24 == v26)
        {
          swift_bridgeObjectRelease_n();
          sub_1BFEFDA60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          char v28 = 1;
          return v28 & 1;
        }
LABEL_15:
        char v28 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEFDA60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if ((v28 & 1) == 0)
        {
          a2 = v31;
          unint64_t v23 = (v23 + 1) & v30;
          if ((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23)) {
            continue;
          }
        }
        return v28 & 1;
      }
    }
  }
  char v28 = 0;
  return v28 & 1;
}

uint64_t sub_1C04536EC(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  uint64_t v4 = 1685217635;
  sub_1C1520DBC();
  if (a1)
  {
    uint64_t v4 = 0x746C7561666564;
    unint64_t v5 = 0xE700000000000000;
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
  }
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = *(unsigned char *)(*(void *)(a2 + 48) + v8) ? 0x746C7561666564 : 1685217635;
      unint64_t v11 = *(unsigned char *)(*(void *)(a2 + 48) + v8) ? 0xE700000000000000 : 0xE400000000000000;
      if (v10 == v4 && v11 == v5) {
        break;
      }
      char v13 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v8 = (v8 + 1) & v9;
        if ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8)) {
          continue;
        }
      }
      return v13 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v13 = 1;
  }
  else
  {
LABEL_20:
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1C0453864(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = sub_1C044FF80();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      while (1)
      {
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x74756F79616CLL;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            uint64_t v9 = 0x726564616568;
            break;
          case 2:
            uint64_t v9 = 0x7265746F6F66;
            break;
          case 3:
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x6C6C6177796170;
            break;
          case 4:
            unint64_t v8 = 0xE500000000000000;
            uint64_t v9 = 0x656D656874;
            break;
          case 5:
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x7972617262696CLL;
            break;
          case 6:
            uint64_t v9 = 0x756F72676B636162;
            unint64_t v8 = 0xEA0000000000646ELL;
            break;
          default:
            break;
        }
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x74756F79616CLL;
        switch(a1)
        {
          case 1:
            uint64_t v12 = 1684104552;
            goto LABEL_14;
          case 2:
            uint64_t v12 = 1953460070;
LABEL_14:
            if (v9 != (v12 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 3:
            unint64_t v10 = 0xE700000000000000;
            if (v9 != 0x6C6C6177796170) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 4:
            unint64_t v10 = 0xE500000000000000;
            if (v9 != 0x656D656874) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 5:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x7972617262696CLL;
            goto LABEL_21;
          case 6:
            unint64_t v10 = 0xEA0000000000646ELL;
            if (v9 != 0x756F72676B636162) {
              goto LABEL_23;
            }
            goto LABEL_22;
          default:
LABEL_21:
            if (v9 != v11) {
              goto LABEL_23;
            }
LABEL_22:
            if (v8 == v10)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_23:
            char v13 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1C0453B10(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1520DBC();
    sub_1C0EA29AC(a1);
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C1520E0C();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x656D6167657270;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0xE800000000000000;
            uint64_t v10 = 0x6576694C7261656ELL;
            break;
          case 2:
            uint64_t v10 = 0x6572676F72506E69;
            unint64_t v9 = 0xEA00000000007373;
            break;
          case 3:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x6B61657262;
            break;
          case 4:
            uint64_t v10 = 0x656E6F7074736F70;
            goto LABEL_11;
          case 5:
            uint64_t v10 = 0x65646E6570737573;
            goto LABEL_11;
          case 6:
            uint64_t v10 = 0x656C6C65636E6163;
LABEL_11:
            unint64_t v9 = 0xE900000000000064;
            break;
          case 7:
            uint64_t v10 = 0x646579616C6564;
            break;
          case 8:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x6C616E6966;
            break;
          case 9:
            uint64_t v10 = 0x74696566726F66;
            break;
          case 0xA:
            uint64_t v10 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x656D6167657270;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE800000000000000;
            if (v10 == 0x6576694C7261656ELL) {
              goto LABEL_34;
            }
            goto LABEL_35;
          case 2:
            unint64_t v11 = 0xEA00000000007373;
            if (v10 != 0x6572676F72506E69) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x6B61657262) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 4:
            uint64_t v13 = 0x656E6F7074736F70;
            goto LABEL_26;
          case 5:
            uint64_t v13 = 0x65646E6570737573;
            goto LABEL_26;
          case 6:
            uint64_t v13 = 0x656C6C65636E6163;
LABEL_26:
            unint64_t v11 = 0xE900000000000064;
            if (v10 != v13) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 7:
            if (v10 != 0x646579616C6564) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 8:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x6C616E6966) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 9:
            uint64_t v12 = 0x74696566726F66;
            goto LABEL_33;
          case 10:
            if (v10 != 0x6E776F6E6B6E75) {
              goto LABEL_35;
            }
            goto LABEL_34;
          default:
LABEL_33:
            if (v10 != v12) {
              goto LABEL_35;
            }
LABEL_34:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v14 = 1;
              return v14 & 1;
            }
LABEL_35:
            char v14 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v14) {
              return v14 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v14 & 1;
            }
            break;
        }
      }
    }
  }
  char v14 = 0;
  return v14 & 1;
}

uint64_t sub_1C0453EF0(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  unint64_t v4 = 0xE900000000000065;
  uint64_t v5 = 0x7469617274726F70;
  sub_1C1520DBC();
  if (a1) {
    uint64_t v5 = 0x70616373646E616CLL;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = *(unsigned char *)(*(void *)(a2 + 48) + v8) ? 0x70616373646E616CLL : 0x7469617274726F70;
      unint64_t v11 = *(unsigned char *)(*(void *)(a2 + 48) + v8) ? 0xE900000000000065 : 0xE800000000000000;
      if (v10 == v5 && v11 == v4) {
        break;
      }
      char v13 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v8 = (v8 + 1) & v9;
        if ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8)) {
          continue;
        }
      }
      return v13 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v13 = 1;
  }
  else
  {
LABEL_20:
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1C0454074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 0;
  }
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DCC();
  sub_1C1520DCC();
  uint64_t v10 = sub_1C1520E0C();
  uint64_t v11 = -1 << *(unsigned char *)(a5 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = a5 + 56;
  if (((*(void *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  uint64_t v14 = ~v11;
  uint64_t v15 = *(void *)(a5 + 48);
  while (1)
  {
    uint64_t v17 = (void *)(v15 + 32 * v12);
    uint64_t v19 = v17[2];
    uint64_t v18 = v17[3];
    BOOL v20 = *v17 == a1 && v17[1] == a2;
    if (v20 || (sub_1C1520A9C()) && v19 == a3 && v18 == a4) {
      break;
    }
    unint64_t v12 = (v12 + 1) & v14;
    if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1C04541A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (*(void *)(a4 + 16))
  {
    sub_1C1520DBC();
    sub_1C0EB9574();
    uint64_t v8 = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v10 = v8 & ~v9;
    uint64_t v11 = a4 + 56;
    if ((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
    {
      uint64_t v12 = ~v9;
      uint64_t v13 = *(void *)(a4 + 48);
      while (1)
      {
        uint64_t v14 = v13 + 24 * v10;
        switch(*(unsigned char *)(v14 + 16))
        {
          case 1:
            if (a3 != 1) {
              goto LABEL_5;
            }
            goto LABEL_28;
          case 2:
            if (a3 == 2) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 3:
            if (a3 == 3) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 4:
            if (a3 == 4) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 5:
            if (a3 == 5) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 6:
            if (a3 == 6) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 7:
            if (a3 == 7) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 8:
            if (a3 == 8) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 9:
            if (a3 == 9) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 0xA:
            if (a3 == 10) {
              goto LABEL_28;
            }
            goto LABEL_5;
          case 0xB:
            if (a3 == 11) {
              goto LABEL_28;
            }
            goto LABEL_5;
          default:
            if (a3) {
              goto LABEL_5;
            }
LABEL_28:
            BOOL v15 = *(void *)v14 == a1 && *(void *)(v14 + 8) == a2;
            if (v15 || (sub_1C1520A9C() & 1) != 0) {
              return 1;
            }
LABEL_5:
            unint64_t v10 = (v10 + 1) & v12;
            if (((*(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
              return 0;
            }
            break;
        }
      }
    }
  }
  return 0;
}

uint64_t FeedSubscriptionPaidAccess.init(paidAccessChecker:tag:)@<X0>(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    id v7 = objc_msgSend(a2, sel_asSection);
    if (!v7
      || (id v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
  }
  else
  {
    id v8 = objc_msgSend(a2, sel_identifier);
  }
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  id v12 = objc_msgSend(v6, sel_purchasedTagIDs);
  uint64_t v13 = sub_1C151EFBC();

  LOBYTE(v12) = sub_1BFF896B4(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_30;
  }
LABEL_7:
  uint64_t v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  sub_1C0454E2C((uint64_t)&v34, (uint64_t)v36, (uint64_t (*)(void))sub_1BFEFE510);
  if (!v37)
  {
    sub_1BFEFDA60((uint64_t)v36, (uint64_t (*)(void))sub_1BFEFE510);
    goto LABEL_15;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    BOOL v15 = 0;
    unint64_t v17 = 0;
    goto LABEL_16;
  }
  BOOL v15 = v33;
  id v16 = objc_msgSend(v33, sel_integerValue);
  if (v16 == (id)-1)
  {

LABEL_27:
    id v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    id v21 = objc_msgSend(a2, sel_identifier);
    if (!v21)
    {
      sub_1C151E62C();
      id v21 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    unsigned __int8 v22 = objc_msgSend(v20, sel_containsTagID_, v21);

    if ((v22 & 1) == 0) {
      goto LABEL_34;
    }
LABEL_30:
    id v23 = objc_msgSend(a1, sel_purchaseProvider);
    if (objc_msgSend((id)swift_unknownObjectRetain_n(), sel_tagType) == (id)3)
    {
      id v24 = objc_msgSend(a2, sel_asSection);
      if (!v24
        || (id v25 = objc_msgSend(v24, sel_parentID), swift_unknownObjectRelease(),
                                                                                       !v25))
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
        uint64_t result = swift_unknownObjectRelease();
        goto LABEL_38;
      }
    }
    else
    {
      id v25 = objc_msgSend(a2, sel_identifier);
    }
    uint64_t v28 = sub_1C151E62C();
    uint64_t v30 = v29;

    id v31 = objc_msgSend(v23, sel_purchasedTagIDs);
    uint64_t v32 = sub_1C151EFBC();

    LOBYTE(v31) = sub_1BFF896B4(v28, v30, v32);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v31)
    {
      char v27 = 1;
      goto LABEL_39;
    }
LABEL_38:
    char v27 = 2;
    goto LABEL_39;
  }
  unint64_t v17 = (unint64_t)v16;
LABEL_16:
  if (objc_getAssociatedObject(v14, (const void *)~v17))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  sub_1C0454E2C((uint64_t)&v34, (uint64_t)v36, (uint64_t (*)(void))sub_1BFEFE510);
  if (!v37)
  {
    sub_1BFEFDA60((uint64_t)v36, (uint64_t (*)(void))sub_1BFEFE510);
LABEL_24:

    if ((v17 & 1) == 0) {
      goto LABEL_34;
    }
    goto LABEL_27;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  id v18 = v33;
  unsigned int v19 = objc_msgSend(v18, sel_integerValue);

  if ((v19 ^ v17)) {
    goto LABEL_27;
  }
LABEL_34:
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  char v27 = 0;
LABEL_39:
  *a3 = v27;
  return result;
}

NewsFeed::FeedSubscriptionPaidAccess_optional __swiftcall FeedSubscriptionPaidAccess.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FeedSubscriptionPaidAccess.rawValue.getter()
{
  uint64_t v1 = 0x6574726143614C61;
  if (*v0 != 1) {
    uint64_t v1 = 0x646E754264696170;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6373627553746F6ELL;
  }
}

uint64_t sub_1C04549FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14931B8(*a1, *a2);
}

uint64_t sub_1C0454A08()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0454ABC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0454B5C()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedSubscriptionPaidAccess_optional sub_1C0454C0C(Swift::String *a1)
{
  return FeedSubscriptionPaidAccess.init(rawValue:)(*a1);
}

void sub_1C0454C18(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED00006465626972;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6574726143614C61;
  if (v2 != 1)
  {
    uint64_t v5 = 0x646E754264696170;
    unint64_t v4 = 0xEA0000000000656CLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6373627553746F6ELL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0454C88()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0454CE8()
{
  return sub_1C151EAEC();
}

unint64_t sub_1C0454D3C()
{
  unint64_t result = qword_1EA19B710;
  if (!qword_1EA19B710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B710);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedSubscriptionPaidAccess()
{
  return &type metadata for FeedSubscriptionPaidAccess;
}

uint64_t sub_1C0454DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0454E2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C0454E94()
{
  unint64_t result = qword_1EB865468;
  if (!qword_1EB865468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865468);
  }
  return result;
}

uint64_t FormatSlotDefinitionCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 8);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(a1, a2);
    if (v9)
    {
      unint64_t v10 = v8;
      uint64_t v11 = *(void *)(v5 + 56);
      uint64_t v12 = type metadata accessor for FormatSlotDefinition();
      uint64_t v13 = *(void *)(v12 - 8);
      sub_1BFFE3E9C(v11 + *(void *)(v13 + 72) * v10, a3);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
    }
    else
    {
      uint64_t v17 = type metadata accessor for FormatSlotDefinition();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = type metadata accessor for FormatSlotDefinition();
    BOOL v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a3, 1, 1, v14);
  }
}

uint64_t FormatSlotDefinitionCollection.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFFE4394(0, &qword_1EB879E50, MEMORY[0x1E4FBB320]);
  sub_1BFCCF840((unint64_t *)&qword_1EB86B0F8, &qword_1EB866AF0);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatSlotDefinitionCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

NewsFeed::FormatSlotDefinitionCollection __swiftcall FormatSlotDefinitionCollection.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = (void *)sub_1BFD8C424(MEMORY[0x1E4FBC860]);
  *uint64_t v1 = v2;
  v1[1] = v3;
  result.slotsByIdentifier._rawValue = v4;
  result.slots._rawValue = v3;
  return result;
}

unint64_t sub_1C04551CC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1BFD8C424(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotDefinitionCollection()
{
  return &type metadata for FormatSlotDefinitionCollection;
}

uint64_t sub_1C0455210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C0455274()
{
  if (!qword_1EA19B718)
  {
    type metadata accessor for FormatSlotDefinition();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19B718);
    }
  }
}

uint64_t sub_1C04552E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMediaTimingFunction.init(from:)(a1, a2);
}

uint64_t sub_1C04552F8(void *a1)
{
  return FormatMediaTimingFunction.encode(to:)(a1);
}

uint64_t _s8NewsFeed25FormatMediaTimingFunctionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  if ((v6 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0)
    {
      char v12 = sub_1C147C13C(*(void *)a1, *(void *)a2);
      sub_1C00F670C(v3, v2, v5, v4, 0);
      sub_1C00F670C(v8, v7, v10, v9, 0);
      return v12 & 1;
    }
LABEL_7:
    sub_1C00F65A8(v8, v7, v10, v9, v11);
    sub_1C00F670C(v3, v2, v5, v4, v6);
    sub_1C00F670C(v8, v7, v10, v9, v11);
    char v12 = 0;
    return v12 & 1;
  }
  if ((*(unsigned char *)(a2 + 32) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  v15[0] = *(void *)a1;
  v15[1] = v2;
  unint64_t v15[2] = v5;
  void v15[3] = v4;
  v14[0] = v8;
  v14[1] = v7;
  void v14[2] = v10;
  void v14[3] = v9;
  sub_1C00F65A8(v8, v7, v10, v9, 1);
  sub_1C00F65A8(v3, v2, v5, v4, 1);
  sub_1C00F65A8(v8, v7, v10, v9, 1);
  sub_1C00F65A8(v3, v2, v5, v4, 1);
  char v12 = _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0(v15, v14);
  sub_1C00F670C(v3, v2, v5, v4, 1);
  sub_1C00F670C(v8, v7, v10, v9, 1);
  sub_1C00F670C(v8, v7, v10, v9, 1);
  sub_1C00F670C(v3, v2, v5, v4, 1);
  return v12 & 1;
}

unint64_t sub_1C0455514(uint64_t a1)
{
  unint64_t result = sub_1C045553C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C045553C()
{
  unint64_t result = qword_1EA19B720;
  if (!qword_1EA19B720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B720);
  }
  return result;
}

unint64_t sub_1C0455590(void *a1)
{
  a1[1] = sub_1BFCAF048();
  a1[2] = sub_1C04555C8();
  unint64_t result = sub_1C045561C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C04555C8()
{
  unint64_t result = qword_1EB860858;
  if (!qword_1EB860858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860858);
  }
  return result;
}

unint64_t sub_1C045561C()
{
  unint64_t result = qword_1EA19B728;
  if (!qword_1EA19B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B728);
  }
  return result;
}

uint64_t destroy for FormatMediaTimingFunction(uint64_t a1)
{
  return sub_1C00F670C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatMediaTimingFunction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C00F65A8(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatMediaTimingFunction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C00F65A8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C00F670C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatMediaTimingFunction(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C00F670C(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t sub_1C04557A8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1C04557B0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFunction()
{
  return &type metadata for FormatMediaTimingFunction;
}

void *sub_1C04557CC(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 == 255)
  {
    uint64_t v2 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v2);
  }
  else
  {
    uint64_t v4 = *(void *)a1;
    if (v1)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 16);
      uint64_t v29 = *(void *)(a1 + 24);
      BOOL v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v15);
      sub_1C0181BEC(0);
      uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 72);
      unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C152C7E0;
      unint64_t v20 = v19 + v18;
      sub_1C0433600(1701869908, 0xE400000000000000, 0x206C6F72746E6F43, 0xEE0073746E696F50, (void *)(v19 + v18));
      uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
      unsigned __int8 v22 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
      v22(v20, 0, 1, v21);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x3120746E696F50, 0xE700000000000000, v4, (void *)(v20 + v17));
      v22(v20 + v17, 0, 1, v21);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x3220746E696F50, 0xE700000000000000, v14, (void *)(v20 + 2 * v17));
      v22(v20 + 2 * v17, 0, 1, v21);
      id v23 = (void *)(v20 + 3 * v17);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x3320746E696F50, 0xE700000000000000, v28, v23);
      v22((unint64_t)v23, 0, 1, v21);
      id v24 = (void *)(v20 + 4 * v17);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x3420746E696F50, 0xE700000000000000, v29, v24);
      v22((unint64_t)v24, 0, 1, v21);
      sub_1C09BCFA4(0x4620676E696D6954, 0xEF6E6F6974636E75, 0, 0, v19, v30);
    }
    else
    {
      uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v5);
      sub_1C0181BEC(0);
      uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 72);
      unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C1527210;
      uint64_t v11 = (void *)(v10 + v9);
      sub_1C0433600(1701869908, 0xE400000000000000, 1701667150, 0xE400000000000000, v11);
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
      v13(v11, 0, 1, v12);
      sub_1C0433600(1701667150, 0xE400000000000000, *(void *)&aLinear_3[8 * (char)v4], qword_1C1549930[(char)v4], (void *)((char *)v11 + v8));
      v13((void *)((char *)v11 + v8), 0, 1, v12);
      sub_1C09BCFA4(0x4620676E696D6954, 0xEF6E6F6974636E75, 0, 0, v10, v30);
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(inited + 64) = &off_1F1BDEC90;
    uint64_t v25 = swift_allocObject();
    *(void *)(inited + 32) = v25;
    *(void *)(v25 + 48) = v31;
    long long v26 = v30[1];
    *(_OWORD *)(v25 + 16) = v30[0];
    *(_OWORD *)(v25 + 32) = v26;
    char v27 = sub_1C131B79C(inited);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    return v27;
  }
}

uint64_t sub_1C0455DFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

NewsFeed::NotificationsCommandState_optional __swiftcall NotificationsCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t NotificationsCommandState.rawValue.getter()
{
  uint64_t v1 = 0x6465696E6564;
  if (*v0 != 1) {
    uint64_t v1 = 0x7A69726F68747561;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265746544746F6ELL;
  }
}

uint64_t sub_1C0455F08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1479D3C(*a1, *a2);
}

unint64_t sub_1C0455F18()
{
  unint64_t result = qword_1EA19B730;
  if (!qword_1EA19B730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B730);
  }
  return result;
}

uint64_t sub_1C0455F6C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C045601C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C04560B8()
{
  return sub_1C1520E0C();
}

NewsFeed::NotificationsCommandState_optional sub_1C0456164(Swift::String *a1)
{
  return NotificationsCommandState.init(rawValue:)(*a1);
}

void sub_1C0456170(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED000064656E696DLL;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x6465696E6564;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7A69726F68747561;
    unint64_t v4 = 0xEA00000000006465;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7265746544746F6ELL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1C04561E0()
{
  unint64_t result = qword_1EB86FC98;
  if (!qword_1EB86FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FC98);
  }
  return result;
}

uint64_t sub_1C0456234(uint64_t a1)
{
  unint64_t v2 = sub_1C0456384();
  return MEMORY[0x1F4163458](a1, v2);
}

unsigned char *storeEnumTagSinglePayload for NotificationsCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C045634CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsCommandState()
{
  return &type metadata for NotificationsCommandState;
}

unint64_t sub_1C0456384()
{
  unint64_t result = qword_1EA19B738;
  if (!qword_1EA19B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B738);
  }
  return result;
}

void FormatVideoProperties.videoGravity.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatVideoProperties.looping.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

void FormatVideoProperties.playback.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

uint64_t FormatVideoProperties.preventDisplaySleep.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatVideoProperties.muted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 72);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

void FormatVideoProperties.imageGravity.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 73);
}

void FormatVideoProperties.endAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 74);
}

uint64_t FormatVideoProperties.shouldPlayInBackground.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

id sub_1C0456458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = a1;
  int v4 = v1[24];
  char v23 = v1[25];
  uint64_t v27 = *((void *)v1 + 5);
  uint64_t v28 = *((void *)v1 + 4);
  int v5 = v1[48];
  uint64_t v25 = *((void *)v1 + 8);
  uint64_t v26 = *((void *)v1 + 7);
  int v6 = v1[72];
  int v22 = v1[73];
  uint64_t v24 = v1[74];
  uint64_t v7 = (void *)**((void **)&unk_1E6416680 + *v1);
  if (v4 == 255)
  {
    uint64_t v21 = (void *)**((void **)&unk_1E6416680 + *v1);
    id v11 = v7;
    char v10 = 1;
  }
  else
  {
    uint64_t v8 = *((void *)v1 + 2);
    uint64_t v29 = *((void *)v1 + 1);
    uint64_t v30 = v8;
    char v31 = v4 & 1;
    id v9 = v7;
    sub_1BFFC8784(v29, v8, v4);
    sub_1C1517EFC();
    char v10 = FormatBoolean.value(contextLayoutOptions:)(v32);
    sub_1BFFC879C(v29, v8, v4);
    if (v2)
    {

      return (id)swift_release();
    }
    uint64_t v21 = v7;
    swift_release();
    uint64_t v3 = a1;
  }
  char v20 = v10;
  if (v5 == 255)
  {
    char v13 = 1;
    if (v6 == 255) {
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  uint64_t v29 = v28;
  uint64_t v30 = v27;
  char v31 = v5 & 1;
  sub_1BFE94AB4(v28, v27, v5 & 1);
  sub_1C1517EFC();
  char v12 = FormatBoolean.value(contextLayoutOptions:)(v32);
  sub_1BFFC879C(v28, v27, v5);
  if (v2) {
    goto LABEL_12;
  }
  swift_release();
  char v13 = v12;
  if (v6 != 255)
  {
LABEL_11:
    uint64_t v29 = v26;
    uint64_t v30 = v25;
    char v31 = v6 & 1;
    sub_1BFE94AB4(v26, v25, v6 & 1);
    sub_1C1517EFC();
    char v14 = FormatBoolean.value(contextLayoutOptions:)(v32);
    sub_1BFFC879C(v26, v25, v6);
    if (!v2)
    {
      swift_release();
      goto LABEL_15;
    }
LABEL_12:

    return (id)swift_release();
  }
LABEL_9:
  char v14 = 1;
LABEL_15:
  if (v22 == 12) {
    char v16 = 11;
  }
  else {
    char v16 = v22;
  }
  LOBYTE(v29) = v16;
  uint64_t v17 = (void *)sub_1C0E03CC4((char *)&v29);
  uint64_t v18 = qword_1C1549B78[v24];
  *(void *)uint64_t v3 = v21;
  *(unsigned char *)(v3 + 8) = v20 & 1;
  *(void *)(v3 + 16) = v23 & 1;
  *(unsigned char *)(v3 + 24) = v13 & 1;
  *(unsigned char *)(v3 + 25) = v14 & 1;
  *(void *)(v3 + 32) = v17;
  *(void *)(v3 + 40) = v18;
  return v17;
}

uint64_t sub_1C0456728@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatVideoProperties.init(from:)(a1, a2);
}

uint64_t sub_1C0456740(void *a1)
{
  return FormatVideoProperties.encode(to:)(a1);
}

BOOL _s8NewsFeed21FormatVideoPropertiesV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v162 = *((void *)a1 + 1);
  int v4 = a1[24];
  int v161 = a1[25];
  uint64_t v5 = *((void *)a1 + 4);
  uint64_t v6 = *((void *)a1 + 5);
  int v7 = a1[48];
  uint64_t v9 = *((void *)a1 + 7);
  uint64_t v8 = *((void *)a1 + 8);
  int v10 = a1[72];
  int v11 = a1[73];
  int v12 = a1[74];
  uint64_t v14 = *((void *)a1 + 10);
  uint64_t v13 = *((void *)a1 + 11);
  int v15 = a1[96];
  int v16 = *a2;
  uint64_t v17 = *((void *)a2 + 1);
  uint64_t v163 = *((void *)a2 + 2);
  int v18 = a2[24];
  int v160 = a2[25];
  uint64_t v20 = *((void *)a2 + 4);
  uint64_t v19 = *((void *)a2 + 5);
  int v21 = a2[48];
  uint64_t v22 = *((void *)a2 + 7);
  uint64_t v23 = *((void *)a2 + 8);
  int v24 = a2[72];
  int v25 = a2[73];
  if (v2 == 3)
  {
    int v159 = v7;
    uint64_t v157 = v8;
    uint64_t v158 = v5;
    uint64_t v156 = v9;
    int v154 = v12;
    int v155 = a2[74];
    int v151 = a2[96];
    int v152 = v15;
    uint64_t v150 = *((void *)a2 + 11);
    uint64_t v153 = *((void *)a2 + 10);
    if (v16 != 3) {
      return 0;
    }
  }
  else
  {
    if (v16 == 3) {
      return 0;
    }
    int v146 = a2[48];
    int v159 = v7;
    uint64_t v156 = v9;
    uint64_t v157 = v8;
    int v151 = a2[96];
    int v152 = v15;
    uint64_t v122 = v14;
    int v131 = v11;
    int v143 = a2[73];
    uint64_t v129 = *((void *)a2 + 7);
    uint64_t v133 = v13;
    if (v2)
    {
      if (v2 == 1) {
        unint64_t v26 = 0x7341657A69736572;
      }
      else {
        unint64_t v26 = 0xD000000000000010;
      }
      if (v2 == 1) {
        unint64_t v27 = 0xEC00000074636570;
      }
      else {
        unint64_t v27 = 0x80000001C15FF890;
      }
    }
    else
    {
      unint64_t v27 = 0xE600000000000000;
      unint64_t v26 = 0x657A69736572;
    }
    uint64_t v126 = v6;
    int v140 = v10;
    unint64_t v28 = 0x7341657A69736572;
    unint64_t v29 = 0x80000001C15FF890;
    if (v16 == 1) {
      unint64_t v29 = 0xEC00000074636570;
    }
    else {
      unint64_t v28 = 0xD000000000000010;
    }
    if (*a2) {
      uint64_t v30 = v28;
    }
    else {
      uint64_t v30 = 0x657A69736572;
    }
    if (*a2) {
      unint64_t v31 = v29;
    }
    else {
      unint64_t v31 = 0xE600000000000000;
    }
    uint64_t v158 = v5;
    int v32 = a2[72];
    uint64_t v33 = *((void *)a2 + 8);
    int v154 = v12;
    int v155 = a2[74];
    uint64_t v150 = *((void *)a2 + 11);
    uint64_t v153 = *((void *)a2 + 10);
    if (v26 == v30 && v27 == v31)
    {
      swift_bridgeObjectRelease_n();
      int v11 = v131;
      uint64_t v22 = v129;
      uint64_t v23 = v33;
      int v10 = v140;
      int v25 = v143;
      int v24 = v32;
      uint64_t v14 = v122;
      uint64_t v6 = v126;
      uint64_t v13 = v133;
      int v21 = v146;
    }
    else
    {
      char v34 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = 0;
      int v11 = v131;
      uint64_t v22 = v129;
      uint64_t v23 = v33;
      int v10 = v140;
      int v25 = v143;
      int v24 = v32;
      uint64_t v14 = v122;
      uint64_t v6 = v126;
      uint64_t v13 = v133;
      int v21 = v146;
      if ((v34 & 1) == 0) {
        return v35;
      }
    }
  }
  if (v4 == 255)
  {
    if (v18 == 255) {
      goto LABEL_45;
    }
LABEL_34:
    uint64_t v38 = v17;
    uint64_t v39 = v17;
    uint64_t v40 = v163;
    sub_1BFFC8784(v39, v163, v18);
    sub_1BFFC8784(v162, v3, v4);
    sub_1BFFC879C(v162, v3, v4);
    uint64_t v41 = v38;
LABEL_35:
    uint64_t v42 = v40;
LABEL_36:
    unsigned __int8 v43 = v18;
LABEL_37:
    sub_1BFFC879C(v41, v42, v43);
    return 0;
  }
  if (v18 == 255) {
    goto LABEL_34;
  }
  uint64_t v36 = v3;
  if ((v4 & 1) == 0)
  {
    uint64_t v44 = v162;
    if ((v18 & 1) == 0)
    {
      int v145 = v25;
      int v148 = v21;
      uint64_t v45 = v36;
      int v132 = v11;
      uint64_t v46 = v22;
      uint64_t v137 = v19;
      int v47 = v10;
      uint64_t v48 = v23;
      uint64_t v49 = v6;
      uint64_t v50 = v13;
      uint64_t v51 = v14;
      int v52 = v24;
      sub_1BFE94AD4(v162, v45, 0);
      sub_1BFE94AD4(v17, v163, 0);
      int v25 = v145;
      int v21 = v148;
      int v24 = v52;
      uint64_t v14 = v51;
      uint64_t v13 = v50;
      uint64_t v6 = v49;
      uint64_t v23 = v48;
      int v10 = v47;
      uint64_t v19 = v137;
      uint64_t v22 = v46;
      int v11 = v132;
      uint64_t v35 = 0;
      if (((((v162 & 1) == 0) ^ v17) & 1) == 0) {
        return v35;
      }
      goto LABEL_45;
    }
LABEL_42:
    sub_1BFE94AB4(v17, v163, v18 & 1);
    sub_1BFE94AD4(v44, v36, v4 & 1);
    uint64_t v53 = v17;
    uint64_t v54 = v163;
    char v55 = v18 & 1;
LABEL_43:
    sub_1BFE94AD4(v53, v54, v55);
    return 0;
  }
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = v162;
    goto LABEL_42;
  }
  int v144 = v25;
  int v147 = v21;
  int v123 = v24;
  uint64_t v134 = v13;
  uint64_t v136 = v23;
  uint64_t v130 = v22;
  int v37 = v11;
  if (v162 == v17 && v3 == v163)
  {
    sub_1BFFC8784(v162, v3, v18);
    sub_1BFFC8784(v162, v3, v4);
    sub_1BFE94AD4(v162, v3, 1);
    sub_1BFE94AD4(v162, v3, 1);
    int v11 = v37;
    int v25 = v144;
    uint64_t v22 = v130;
    uint64_t v13 = v134;
    uint64_t v23 = v136;
    int v24 = v123;
    int v21 = v147;
    goto LABEL_45;
  }
  char v127 = sub_1C1520A9C();
  sub_1BFFC8784(v17, v163, v18);
  sub_1BFFC8784(v162, v3, v4);
  sub_1BFE94AD4(v162, v3, 1);
  sub_1BFE94AD4(v17, v163, 1);
  uint64_t v35 = 0;
  int v11 = v37;
  int v25 = v144;
  uint64_t v22 = v130;
  uint64_t v13 = v134;
  uint64_t v23 = v136;
  int v24 = v123;
  int v21 = v147;
  if (v127)
  {
LABEL_45:
    if (v161 == 2)
    {
      if (v160 != 2) {
        return 0;
      }
    }
    else
    {
      if (v160 == 2) {
        return 0;
      }
      int v149 = v21;
      uint64_t v138 = v19;
      uint64_t v128 = v6;
      int v124 = v24;
      int v141 = v10;
      uint64_t v57 = v13;
      uint64_t v58 = v23;
      uint64_t v59 = v22;
      int v60 = v25;
      int v61 = v11;
      if (v161) {
        uint64_t v62 = 0x74696E4972657375;
      }
      else {
        uint64_t v62 = 1869903201;
      }
      if (v161) {
        unint64_t v63 = 0xED00006465746169;
      }
      else {
        unint64_t v63 = 0xE400000000000000;
      }
      if (v160) {
        uint64_t v64 = 0x74696E4972657375;
      }
      else {
        uint64_t v64 = 1869903201;
      }
      if (v160) {
        unint64_t v65 = 0xED00006465746169;
      }
      else {
        unint64_t v65 = 0xE400000000000000;
      }
      if (v62 == v64 && v63 == v65)
      {
        swift_bridgeObjectRelease_n();
        int v11 = v61;
        int v25 = v60;
        uint64_t v22 = v59;
        uint64_t v23 = v58;
        uint64_t v13 = v57;
        int v10 = v141;
        int v24 = v124;
        uint64_t v6 = v128;
        uint64_t v19 = v138;
        int v21 = v149;
      }
      else
      {
        char v66 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = 0;
        int v11 = v61;
        int v25 = v60;
        uint64_t v22 = v59;
        uint64_t v23 = v58;
        uint64_t v13 = v57;
        int v10 = v141;
        int v24 = v124;
        uint64_t v6 = v128;
        uint64_t v19 = v138;
        int v21 = v149;
        if ((v66 & 1) == 0) {
          return v35;
        }
      }
    }
    if (v159 == 255)
    {
      if (v21 == 255) {
        goto LABEL_82;
      }
    }
    else if (v21 != 255)
    {
      if (v159)
      {
        if (v21)
        {
          unsigned __int8 v67 = v21;
          int v125 = v24;
          int v142 = v10;
          uint64_t v135 = v13;
          uint64_t v139 = v23;
          uint64_t v68 = v22;
          int v69 = v25;
          int v70 = v11;
          if (v158 == v20 && v6 == v19)
          {
            sub_1BFFC8784(v158, v6, v21);
            sub_1BFFC8784(v158, v6, v159);
            sub_1BFE94AD4(v158, v6, 1);
            sub_1BFE94AD4(v158, v6, 1);
            int v11 = v70;
            int v25 = v69;
            uint64_t v22 = v68;
            uint64_t v13 = v135;
            uint64_t v23 = v139;
            int v10 = v142;
            int v24 = v125;
          }
          else
          {
            char v164 = sub_1C1520A9C();
            sub_1BFFC8784(v20, v19, v67);
            sub_1BFFC8784(v158, v6, v159);
            sub_1BFE94AD4(v158, v6, 1);
            sub_1BFE94AD4(v20, v19, 1);
            uint64_t v35 = 0;
            int v11 = v70;
            int v25 = v69;
            uint64_t v22 = v68;
            uint64_t v13 = v135;
            uint64_t v23 = v139;
            int v10 = v142;
            int v24 = v125;
            if ((v164 & 1) == 0) {
              return v35;
            }
          }
LABEL_82:
          if (v10 == 255)
          {
            if (v24 == 255)
            {
LABEL_98:
              if (v11 == 12)
              {
                if (v25 != 12) {
                  return 0;
                }
              }
              else
              {
                if (v25 == 12) {
                  return 0;
                }
                uint64_t v104 = v13;
                unint64_t v105 = FormatImageGravity.rawValue.getter();
                uint64_t v107 = v106;
                if (v105 == FormatImageGravity.rawValue.getter() && v107 == v108)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v13 = v104;
                }
                else
                {
                  char v109 = sub_1C1520A9C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v35 = 0;
                  uint64_t v13 = v104;
                  if ((v109 & 1) == 0) {
                    return v35;
                  }
                }
              }
              if (v154 == 3)
              {
                if (v155 != 3) {
                  return 0;
                }
              }
              else
              {
                if (v155 == 3) {
                  return 0;
                }
                uint64_t v110 = 0x65636E61766461;
                if (v154)
                {
                  if (v154 == 1)
                  {
                    unint64_t v111 = 0xE500000000000000;
                    uint64_t v112 = 0x6573756170;
                  }
                  else
                  {
                    unint64_t v111 = 0xE400000000000000;
                    uint64_t v112 = 1701736302;
                  }
                }
                else
                {
                  unint64_t v111 = 0xE700000000000000;
                  uint64_t v112 = 0x65636E61766461;
                }
                if (v155)
                {
                  if (v155 == 1)
                  {
                    unint64_t v113 = 0xE500000000000000;
                    uint64_t v110 = 0x6573756170;
                  }
                  else
                  {
                    unint64_t v113 = 0xE400000000000000;
                    uint64_t v110 = 1701736302;
                  }
                }
                else
                {
                  unint64_t v113 = 0xE700000000000000;
                }
                uint64_t v114 = v13;
                if (v112 == v110 && v111 == v113)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v13 = v114;
                }
                else
                {
                  char v115 = sub_1C1520A9C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v35 = 0;
                  uint64_t v13 = v114;
                  if ((v115 & 1) == 0) {
                    return v35;
                  }
                }
              }
              if (v152 == 255)
              {
                LOBYTE(v18) = v151;
                uint64_t v116 = v153;
                if (v151 == 255) {
                  return 1;
                }
              }
              else
              {
                LOBYTE(v18) = v151;
                uint64_t v116 = v153;
                if (v151 != 255)
                {
                  if (v152)
                  {
                    if (v151)
                    {
                      if (v14 == v153 && v13 == v150)
                      {
                        uint64_t v117 = v13;
                        sub_1BFFC8784(v14, v13, v151);
                        sub_1BFFC8784(v14, v117, v152);
                        uint64_t v35 = 1;
                        sub_1BFE94AD4(v14, v117, 1);
                        sub_1BFE94AD4(v14, v117, 1);
                        return v35;
                      }
                      uint64_t v120 = v13;
                      char v121 = sub_1C1520A9C();
                      sub_1BFFC8784(v153, v150, v151);
                      sub_1BFFC8784(v14, v120, v152);
                      uint64_t v35 = 1;
                      sub_1BFE94AD4(v14, v120, 1);
                      sub_1BFE94AD4(v153, v150, 1);
                      if (v121) {
                        return v35;
                      }
                      return 0;
                    }
                    uint64_t v119 = v13;
                    swift_bridgeObjectRetain();
                    goto LABEL_137;
                  }
                  uint64_t v119 = v13;
                  if (v151)
                  {
LABEL_137:
                    char v82 = v151 & 1;
                    sub_1BFE94AB4(v153, v150, v151 & 1);
                    sub_1BFE94AD4(v14, v119, v152 & 1);
                    uint64_t v53 = v153;
                    uint64_t v54 = v150;
                    goto LABEL_96;
                  }
                  sub_1BFE94AD4(v14, v13, 0);
                  sub_1BFE94AD4(v153, v150, 0);
                  return ((((v14 & 1) == 0) ^ v153) & 1) != 0;
                }
              }
              uint64_t v40 = v150;
              uint64_t v118 = v13;
              sub_1BFFC8784(v116, v150, v18);
              sub_1BFFC8784(v14, v118, v152);
              sub_1BFFC879C(v14, v118, v152);
              uint64_t v41 = v116;
              goto LABEL_35;
            }
          }
          else if (v24 != 255)
          {
            if (v10)
            {
              uint64_t v84 = v156;
              uint64_t v83 = v157;
              if (v24)
              {
                unsigned __int8 v85 = v10;
                uint64_t v86 = v13;
                int v87 = v25;
                int v88 = v11;
                if (v156 == v22 && v157 == v23)
                {
                  sub_1BFFC8784(v156, v157, v24);
                  sub_1BFFC8784(v156, v157, v85);
                  sub_1BFE94AD4(v156, v157, 1);
                  sub_1BFE94AD4(v156, v157, 1);
                  int v11 = v88;
                  int v25 = v87;
                  uint64_t v13 = v86;
                }
                else
                {
                  uint64_t v101 = v22;
                  uint64_t v102 = v23;
                  unsigned __int8 v103 = v24;
                  char v165 = sub_1C1520A9C();
                  sub_1BFFC8784(v101, v102, v103);
                  sub_1BFFC8784(v156, v157, v85);
                  sub_1BFE94AD4(v156, v157, 1);
                  sub_1BFE94AD4(v101, v102, 1);
                  uint64_t v35 = 0;
                  int v11 = v88;
                  int v25 = v87;
                  uint64_t v13 = v86;
                  if ((v165 & 1) == 0) {
                    return v35;
                  }
                }
                goto LABEL_98;
              }
              uint64_t v96 = v22;
              uint64_t v97 = v23;
              char v98 = v24;
              swift_bridgeObjectRetain();
              LOBYTE(v24) = v98;
              uint64_t v23 = v97;
              uint64_t v22 = v96;
            }
            else
            {
              uint64_t v84 = v156;
              uint64_t v83 = v157;
              if ((v24 & 1) == 0)
              {
                int v91 = v11;
                int v92 = v25;
                uint64_t v93 = v22;
                uint64_t v94 = v23;
                uint64_t v95 = v13;
                sub_1BFE94AD4(v156, v157, 0);
                sub_1BFE94AD4(v93, v94, 0);
                uint64_t v13 = v95;
                int v25 = v92;
                int v11 = v91;
                uint64_t v35 = 0;
                if (((((v156 & 1) == 0) ^ v93) & 1) == 0) {
                  return v35;
                }
                goto LABEL_98;
              }
            }
            char v82 = v24 & 1;
            uint64_t v99 = v22;
            uint64_t v100 = v23;
            sub_1BFE94AB4(v22, v23, v24 & 1);
            sub_1BFE94AD4(v84, v83, v10 & 1);
            uint64_t v53 = v99;
            uint64_t v54 = v100;
LABEL_96:
            char v55 = v82;
            goto LABEL_43;
          }
          uint64_t v89 = v22;
          uint64_t v90 = v23;
          LOBYTE(v18) = v24;
          sub_1BFFC8784(v22, v23, v24);
          sub_1BFFC8784(v156, v157, v10);
          sub_1BFFC879C(v156, v157, v10);
          uint64_t v41 = v89;
          uint64_t v42 = v90;
          goto LABEL_36;
        }
        char v81 = v21;
        swift_bridgeObjectRetain();
        LOBYTE(v21) = v81;
        uint64_t v72 = v158;
      }
      else
      {
        uint64_t v72 = v158;
        if ((v21 & 1) == 0)
        {
          uint64_t v73 = v6;
          int v74 = v11;
          int v75 = v25;
          uint64_t v76 = v22;
          uint64_t v77 = v23;
          uint64_t v78 = v13;
          uint64_t v79 = v14;
          int v80 = v24;
          sub_1BFE94AD4(v158, v73, 0);
          sub_1BFE94AD4(v20, v19, 0);
          int v24 = v80;
          uint64_t v14 = v79;
          uint64_t v13 = v78;
          uint64_t v23 = v77;
          uint64_t v22 = v76;
          int v25 = v75;
          int v11 = v74;
          uint64_t v35 = 0;
          if (((((v158 & 1) == 0) ^ v20) & 1) == 0) {
            return v35;
          }
          goto LABEL_82;
        }
      }
      char v82 = v21 & 1;
      sub_1BFE94AB4(v20, v19, v21 & 1);
      sub_1BFE94AD4(v72, v6, v159 & 1);
      uint64_t v53 = v20;
      uint64_t v54 = v19;
      goto LABEL_96;
    }
    unsigned __int8 v71 = v21;
    sub_1BFFC8784(v20, v19, v21);
    sub_1BFFC8784(v158, v6, v159);
    sub_1BFFC879C(v158, v6, v159);
    uint64_t v41 = v20;
    uint64_t v42 = v19;
    unsigned __int8 v43 = v71;
    goto LABEL_37;
  }
  return v35;
}

unint64_t sub_1C0457588(uint64_t a1)
{
  unint64_t result = sub_1C04575B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04575B0()
{
  unint64_t result = qword_1EA19B740;
  if (!qword_1EA19B740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B740);
  }
  return result;
}

unint64_t sub_1C0457604(void *a1)
{
  a1[1] = sub_1C045763C();
  a1[2] = sub_1C0457690();
  unint64_t result = sub_1C04576E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C045763C()
{
  unint64_t result = qword_1EB860608;
  if (!qword_1EB860608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860608);
  }
  return result;
}

unint64_t sub_1C0457690()
{
  unint64_t result = qword_1EA19B748;
  if (!qword_1EA19B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B748);
  }
  return result;
}

unint64_t sub_1C04576E4()
{
  unint64_t result = qword_1EA19B750;
  if (!qword_1EA19B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B750);
  }
  return result;
}

uint64_t destroy for FormatVideoProperties(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(unsigned __int8 *)(result + 24);
  if (v2 != 255) {
    unint64_t result = sub_1BFE94AD4(*(void *)(result + 8), *(void *)(result + 16), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(v1 + 48);
  if (v3 != 255) {
    unint64_t result = sub_1BFE94AD4(*(void *)(v1 + 32), *(void *)(v1 + 40), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(v1 + 72);
  if (v4 != 255) {
    unint64_t result = sub_1BFE94AD4(*(void *)(v1 + 56), *(void *)(v1 + 64), v4 & 1);
  }
  int v5 = *(unsigned __int8 *)(v1 + 96);
  if (v5 != 255)
  {
    uint64_t v6 = *(void *)(v1 + 80);
    uint64_t v7 = *(void *)(v1 + 88);
    return sub_1BFE94AD4(v6, v7, v5 & 1);
  }
  return result;
}

uint64_t initializeWithCopy for FormatVideoProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 == 255)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  }
  else
  {
    char v5 = v4 & 1;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_1BFE94AB4(v6, v7, v4 & 1);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v5;
  }
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  int v8 = *(unsigned __int8 *)(a2 + 48);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  else
  {
    char v9 = v8 & 1;
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    sub_1BFE94AB4(v10, v11, v8 & 1);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(unsigned char *)(a1 + 48) = v9;
  }
  int v12 = *(unsigned __int8 *)(a2 + 72);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  }
  else
  {
    char v13 = v12 & 1;
    uint64_t v14 = *(void *)(a2 + 56);
    uint64_t v15 = *(void *)(a2 + 64);
    sub_1BFE94AB4(v14, v15, v12 & 1);
    *(void *)(a1 + 56) = v14;
    *(void *)(a1 + 64) = v15;
    *(unsigned char *)(a1 + 72) = v13;
  }
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  int v16 = *(unsigned __int8 *)(a2 + 96);
  if (v16 == 255)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    char v17 = v16 & 1;
    uint64_t v19 = *(void *)(a2 + 80);
    uint64_t v18 = *(void *)(a2 + 88);
    sub_1BFE94AB4(v19, v18, v16 & 1);
    *(void *)(a1 + 80) = v19;
    *(void *)(a1 + 88) = v18;
    *(unsigned char *)(a1 + 96) = v17;
  }
  return a1;
}

uint64_t assignWithCopy for FormatVideoProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  char v5 = (long long *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(_OWORD *)uint64_t v4 = v8;
    }
    else
    {
      char v15 = v6 & 1;
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 16);
      sub_1BFE94AB4(v16, v17, v6 & 1);
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v17;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v6 == 255)
  {
    sub_1C0457C38(a1 + 8);
    char v7 = *((unsigned char *)v5 + 16);
    *(_OWORD *)uint64_t v4 = *v5;
    *(unsigned char *)(v4 + 16) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 16);
    sub_1BFE94AB4(v10, v11, v6 & 1);
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v11;
    *(unsigned char *)(a1 + 24) = v9;
    sub_1BFE94AD4(v12, v13, v14);
  }
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v18 = (long long *)(a1 + 32);
  uint64_t v19 = (long long *)(a2 + 32);
  int v20 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v20 == 255)
    {
      long long v22 = *v19;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *uint64_t v18 = v22;
    }
    else
    {
      char v29 = v20 & 1;
      uint64_t v30 = *(void *)(a2 + 32);
      uint64_t v31 = *(void *)(a2 + 40);
      sub_1BFE94AB4(v30, v31, v20 & 1);
      *(void *)(a1 + 32) = v30;
      *(void *)(a1 + 40) = v31;
      *(unsigned char *)(a1 + 48) = v29;
    }
  }
  else if (v20 == 255)
  {
    sub_1C0457C38(a1 + 32);
    char v21 = *(unsigned char *)(a2 + 48);
    *uint64_t v18 = *v19;
    *(unsigned char *)(a1 + 48) = v21;
  }
  else
  {
    char v23 = v20 & 1;
    uint64_t v24 = *(void *)(a2 + 32);
    uint64_t v25 = *(void *)(a2 + 40);
    sub_1BFE94AB4(v24, v25, v20 & 1);
    uint64_t v26 = *(void *)(a1 + 32);
    uint64_t v27 = *(void *)(a1 + 40);
    char v28 = *(unsigned char *)(a1 + 48);
    *(void *)(a1 + 32) = v24;
    *(void *)(a1 + 40) = v25;
    *(unsigned char *)(a1 + 48) = v23;
    sub_1BFE94AD4(v26, v27, v28);
  }
  int v32 = (long long *)(a1 + 56);
  uint64_t v33 = (long long *)(a2 + 56);
  int v34 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v34 == 255)
    {
      long long v36 = *v33;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *int v32 = v36;
    }
    else
    {
      char v43 = v34 & 1;
      uint64_t v44 = *(void *)(a2 + 56);
      uint64_t v45 = *(void *)(a2 + 64);
      sub_1BFE94AB4(v44, v45, v34 & 1);
      *(void *)(a1 + 56) = v44;
      *(void *)(a1 + 64) = v45;
      *(unsigned char *)(a1 + 72) = v43;
    }
  }
  else if (v34 == 255)
  {
    sub_1C0457C38(a1 + 56);
    char v35 = *(unsigned char *)(a2 + 72);
    *int v32 = *v33;
    *(unsigned char *)(a1 + 72) = v35;
  }
  else
  {
    char v37 = v34 & 1;
    uint64_t v38 = *(void *)(a2 + 56);
    uint64_t v39 = *(void *)(a2 + 64);
    sub_1BFE94AB4(v38, v39, v34 & 1);
    uint64_t v40 = *(void *)(a1 + 56);
    uint64_t v41 = *(void *)(a1 + 64);
    char v42 = *(unsigned char *)(a1 + 72);
    *(void *)(a1 + 56) = v38;
    *(void *)(a1 + 64) = v39;
    *(unsigned char *)(a1 + 72) = v37;
    sub_1BFE94AD4(v40, v41, v42);
  }
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  uint64_t v46 = (long long *)(a1 + 80);
  int v47 = (long long *)(a2 + 80);
  int v48 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v48 == 255)
    {
      long long v50 = *v47;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *uint64_t v46 = v50;
    }
    else
    {
      char v57 = v48 & 1;
      uint64_t v59 = *(void *)(a2 + 80);
      uint64_t v58 = *(void *)(a2 + 88);
      sub_1BFE94AB4(v59, v58, v48 & 1);
      *(void *)(a1 + 80) = v59;
      *(void *)(a1 + 88) = v58;
      *(unsigned char *)(a1 + 96) = v57;
    }
  }
  else if (v48 == 255)
  {
    sub_1C0457C38(a1 + 80);
    char v49 = *(unsigned char *)(a2 + 96);
    *uint64_t v46 = *v47;
    *(unsigned char *)(a1 + 96) = v49;
  }
  else
  {
    char v51 = v48 & 1;
    uint64_t v53 = *(void *)(a2 + 80);
    uint64_t v52 = *(void *)(a2 + 88);
    sub_1BFE94AB4(v53, v52, v48 & 1);
    uint64_t v54 = *(void *)(a1 + 80);
    uint64_t v55 = *(void *)(a1 + 88);
    char v56 = *(unsigned char *)(a1 + 96);
    *(void *)(a1 + 80) = v53;
    *(void *)(a1 + 88) = v52;
    *(unsigned char *)(a1 + 96) = v51;
    sub_1BFE94AD4(v54, v55, v56);
  }
  return a1;
}

uint64_t sub_1C0457C38(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FormatVideoProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  int v6 = *(unsigned __int8 *)(a1 + 24);
  if (v6 == 255) {
    goto LABEL_4;
  }
  int v7 = *(unsigned __int8 *)(a2 + 24);
  if (v7 == 255)
  {
    sub_1C0457C38(a1 + 8);
LABEL_4:
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(unsigned char *)(v4 + 16) = *(unsigned char *)(v5 + 16);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v5;
  *(unsigned char *)(a1 + 24) = v7 & 1;
  sub_1BFE94AD4(v8, v9, v6 & 1);
LABEL_6:
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v10 = (_OWORD *)(a2 + 32);
  int v11 = *(unsigned __int8 *)(a1 + 48);
  if (v11 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v10;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    goto LABEL_11;
  }
  int v12 = *(unsigned __int8 *)(a2 + 48);
  if (v12 == 255)
  {
    sub_1C0457C38(a1 + 32);
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v10;
  *(unsigned char *)(a1 + 48) = v12 & 1;
  sub_1BFE94AD4(v13, v14, v11 & 1);
LABEL_11:
  char v15 = (_OWORD *)(a2 + 56);
  int v16 = *(unsigned __int8 *)(a1 + 72);
  if (v16 == 255)
  {
LABEL_14:
    *(_OWORD *)(a1 + 56) = *v15;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    goto LABEL_16;
  }
  int v17 = *(unsigned __int8 *)(a2 + 72);
  if (v17 == 255)
  {
    sub_1C0457C38(a1 + 56);
    goto LABEL_14;
  }
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *v15;
  *(unsigned char *)(a1 + 72) = v17 & 1;
  sub_1BFE94AD4(v18, v19, v16 & 1);
LABEL_16:
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  int v20 = (_OWORD *)(a2 + 80);
  int v21 = *(unsigned __int8 *)(a1 + 96);
  if (v21 != 255)
  {
    int v22 = *(unsigned __int8 *)(a2 + 96);
    if (v22 != 255)
    {
      uint64_t v23 = *(void *)(a1 + 80);
      uint64_t v24 = *(void *)(a1 + 88);
      *(_OWORD *)(a1 + 80) = *v20;
      *(unsigned char *)(a1 + 96) = v22 & 1;
      sub_1BFE94AD4(v23, v24, v21 & 1);
      return a1;
    }
    sub_1C0457C38(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *v20;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoProperties(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatVideoProperties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoProperties()
{
  return &type metadata for FormatVideoProperties;
}

uint64_t FeedRefreshTrigger.hash(into:)()
{
  return sub_1C1520DCC();
}

BOOL static FeedRefreshTrigger.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedRefreshTrigger.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0457FAC()
{
  unint64_t result = qword_1EA19B758;
  if (!qword_1EA19B758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B758);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedRefreshTrigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C04580CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshTrigger()
{
  return &type metadata for FeedRefreshTrigger;
}

uint64_t static FormatCodingClearColorStrategy.defaultValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 2;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t sub_1C0458150()
{
  return swift_deallocObject();
}

uint64_t sub_1C0458164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 2;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t static FormatCodingBlackColorStrategy.defaultValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 2;
  *(void *)(result + 24) = 0x3FF0000000000000;
  *(unsigned char *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t sub_1C0458208@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 2;
  *(void *)(result + 24) = 0x3FF0000000000000;
  *(unsigned char *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t static FormatCodingLabelColorStrategy.defaultValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 21;
  *(void *)(result + 24) = 0x3FF0000000000000;
  *(unsigned char *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t sub_1C04582B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 21;
  *(void *)(result + 24) = 0x3FF0000000000000;
  *(unsigned char *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

BOOL _s8NewsFeed30FormatCodingBlackColorStrategyV12shouldEncode12wrappedValueSbAA0cF0O_tFZ_0(unint64_t *a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 2;
  *(void *)(v2 + 24) = 0x3FF0000000000000;
  *(unsigned char *)(v2 + 32) = 0;
  unint64_t v4 = v1;
  uint64_t v5 = v2 | 0x1000000000000000;
  LOBYTE(v1) = static FormatColor.== infix(_:_:)(&v5, &v4);
  swift_release();
  return (v1 & 1) == 0;
}

BOOL _s8NewsFeed30FormatCodingClearColorStrategyV12shouldEncode12wrappedValueSbAA0cF0O_tFZ_0(unint64_t *a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 2;
  *(void *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 32) = 0;
  unint64_t v4 = v1;
  uint64_t v5 = v2 | 0x1000000000000000;
  LOBYTE(v1) = static FormatColor.== infix(_:_:)(&v5, &v4);
  swift_release();
  return (v1 & 1) == 0;
}

BOOL _s8NewsFeed30FormatCodingLabelColorStrategyV12shouldEncode12wrappedValueSbAA0cF0O_tFZ_0(unint64_t *a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 21;
  *(void *)(v2 + 24) = 0x3FF0000000000000;
  *(unsigned char *)(v2 + 32) = 0;
  unint64_t v4 = v1;
  uint64_t v5 = v2 | 0x1000000000000000;
  LOBYTE(v1) = static FormatColor.== infix(_:_:)(&v5, &v4);
  swift_release();
  return (v1 & 1) == 0;
}

unint64_t sub_1C0458474(uint64_t a1)
{
  unint64_t result = sub_1C045849C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C045849C()
{
  unint64_t result = qword_1EA19B760;
  if (!qword_1EA19B760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B760);
  }
  return result;
}

unint64_t sub_1C04584F8(uint64_t a1)
{
  unint64_t result = sub_1C0458520();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0458520()
{
  unint64_t result = qword_1EA19B768;
  if (!qword_1EA19B768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B768);
  }
  return result;
}

unint64_t sub_1C0458574(uint64_t a1)
{
  unint64_t result = sub_1C045859C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C045859C()
{
  unint64_t result = qword_1EA19B770;
  if (!qword_1EA19B770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B770);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingClearColorStrategy()
{
  return &type metadata for FormatCodingClearColorStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingBlackColorStrategy()
{
  return &type metadata for FormatCodingBlackColorStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingLabelColorStrategy()
{
  return &type metadata for FormatCodingLabelColorStrategy;
}

uint64_t sub_1C0458620()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t static FeedLocation.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v51[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v51[-1] - v12;
  uint64_t v14 = *v10;
  unint64_t v16 = *v15;
  switch((unint64_t)*v10 >> 60)
  {
    case 1uLL:
      if (v16 >> 60 != 1) {
        goto LABEL_29;
      }
      uint64_t v18 = swift_projectBox();
      uint64_t v19 = swift_projectBox();
      int v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v20(v13, v18, a3);
      v20(v8, v19, a3);
      int v21 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 80);
      uint64_t v22 = v21(a3, a4);
      uint64_t v24 = v23;
      if (v22 == v21(a3, a4) && v24 == v25) {
        char v17 = 1;
      }
      else {
        char v17 = sub_1C1520A9C();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v49 = *(void (**)(char *, uint64_t))(v6 + 8);
      v49(v8, a3);
      v49(v13, a3);
      return v17 & 1;
    case 2uLL:
      if (v16 >> 60 != 2) {
        goto LABEL_29;
      }
      goto LABEL_18;
    case 3uLL:
      if (v16 >> 60 != 3) {
        goto LABEL_29;
      }
      goto LABEL_20;
    case 4uLL:
      MEMORY[0x1F4188790](v10);
      strcpy((char *)&v50 - 48, "cursor serviceConfig strategy trigger ");
      v51[0] = type metadata accessor for FeedCursor();
      v51[1] = a3;
      _OWORD v51[2] = &type metadata for FeedRefreshStrategy;
      v51[3] = &type metadata for FeedRefreshTrigger;
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      char v28 = (uint64_t *)swift_projectBox();
      char v17 = 0;
      if (v16 >> 60 != 4) {
        return v17 & 1;
      }
      uint64_t v29 = *v28;
      uint64_t v30 = *(int *)(TupleTypeMetadata + 64);
      unsigned __int8 v31 = *((unsigned char *)v28 + v30);
      uint64_t v32 = *(int *)(TupleTypeMetadata + 80);
      char v33 = *((unsigned char *)v28 + v32);
      int v34 = (uint64_t *)swift_projectBox();
      uint64_t v35 = *v34;
      char v36 = *((unsigned char *)v34 + v30);
      char v37 = *((unsigned char *)v34 + v32);
      type metadata accessor for FeedCursor();
      swift_retain();
      swift_retain();
      if (static FeedCursor.== infix(_:_:)(v29, v35))
      {
        char v38 = sub_1C1492888(v31, v36);
        swift_release();
        swift_release();
        if (v38)
        {
          char v17 = v33 ^ v37 ^ 1;
          return v17 & 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
      }
LABEL_29:
      char v17 = 0;
      return v17 & 1;
    case 5uLL:
      if (v16 >> 60 != 5) {
        goto LABEL_29;
      }
LABEL_18:
      uint64_t v39 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      type metadata accessor for FeedCursor();
      swift_retain();
      swift_retain();
      char v41 = static FeedCursor.== infix(_:_:)(v39, v40);
      goto LABEL_23;
    case 6uLL:
      if (v16 >> 60 != 6) {
        goto LABEL_29;
      }
LABEL_20:
      uint64_t v42 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v43 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      type metadata accessor for FeedCursorReference();
      swift_retain();
      swift_retain();
      char v41 = static FeedCursorReference.== infix(_:_:)(v42, v43);
      goto LABEL_23;
    case 7uLL:
      if (v16 >> 60 != 7) {
        goto LABEL_29;
      }
      uint64_t v44 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v45 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      type metadata accessor for FeedDeferredCursor();
      swift_retain();
      swift_retain();
      char v41 = static FeedDeferredCursor.== infix(_:_:)(v44, v45);
LABEL_23:
      char v46 = v41;
      swift_release();
      swift_release();
      return v46 & 1;
    case 8uLL:
      if (v16 >> 60 != 8) {
        goto LABEL_29;
      }
      uint64_t v48 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v51[0] = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v52 = v48;
      char v17 = static FeedLocation.== infix(_:_:)(v51, &v52, a3, a4, v11);
      return v17 & 1;
    default:
      char v17 = v16 >> 60 == 0;
      return v17 & 1;
  }
}

uint64_t sub_1C0458B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FeedLocation.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t FeedLocation.feedMode.getter@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1C0458C50(*v2, *(void *)(a1 + 16), *(void *)(a1 + 24), (uint64_t)v11);
  sub_1C0459348((uint64_t)v11, (uint64_t)v8);
  uint64_t v4 = v9;
  if (v9)
  {
    uint64_t v5 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    FeedServiceContextType.feedMode.getter(v4, v5, &v7);
    sub_1C045945C((uint64_t)v11);
    LOBYTE(v4) = v7;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    sub_1C045945C((uint64_t)v11);
    uint64_t result = sub_1C045945C((uint64_t)v8);
  }
  *a2 = v4;
  return result;
}

double sub_1C0458C50@<D0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  __n128 v11 = (uint64_t *)((char *)&v21 - v10);
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 60)
  {
    case 1uLL:
      goto LABEL_4;
    case 2uLL:
    case 5uLL:
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(a3 + 48);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      *(void *)(a4 + 24) = swift_getAssociatedTypeWitness();
      *(void *)(a4 + 32) = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
      swift_retain();
      v22(a2, a3);
      goto LABEL_6;
    case 3uLL:
      swift_retain();
      FeedCursorReference.serviceContext.getter(a4);
LABEL_6:
      swift_release();
      return result;
    case 4uLL:
      MEMORY[0x1F4188790](v14);
      strcpy((char *)&v21 - 48, "cursor serviceConfig strategy trigger ");
      uint64_t v23 = type metadata accessor for FeedCursor();
      uint64_t v24 = a2;
      uint64_t v25 = &type metadata for FeedRefreshStrategy;
      uint64_t v26 = &type metadata for FeedRefreshTrigger;
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v17 = swift_projectBox() + *(int *)(TupleTypeMetadata + 48);
      goto LABEL_10;
    case 6uLL:
    case 7uLL:
      goto LABEL_14;
    case 8uLL:
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = type metadata accessor for FeedLocation();
      swift_retain();
      FeedLocation.serviceConfig.getter(v20, v11);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a2) == 1)
      {
        swift_release();
        (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
LABEL_14:
        *(void *)(a4 + 32) = 0;
        double result = 0.0;
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
      else
      {
        uint64_t v22 = *(void (**)(uint64_t, uint64_t))(a3 + 48);
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        *(void *)(a4 + 24) = swift_getAssociatedTypeWitness();
        *(void *)(a4 + 32) = swift_getAssociatedConformanceWitness();
        __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
        v22(a2, a3);
        swift_release();
        (*(void (**)(void *, uint64_t))(v12 + 8))(v11, a2);
      }
      break;
    default:
      type metadata accessor for FeedCursorTracker();
LABEL_4:
      uint64_t v17 = swift_projectBox();
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v16, v17, a2);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(a3 + 48);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      *(void *)(a4 + 24) = swift_getAssociatedTypeWitness();
      *(void *)(a4 + 32) = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
      v22(a2, a3);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, a2);
      break;
  }
  return result;
}

uint64_t sub_1C0459348(uint64_t a1, uint64_t a2)
{
  sub_1C04593AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C04593AC()
{
  if (!qword_1EA19B778)
  {
    sub_1C0459404();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19B778);
    }
  }
}

unint64_t sub_1C0459404()
{
  unint64_t result = qword_1EA19B780;
  if (!qword_1EA19B780)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA19B780);
  }
  return result;
}

uint64_t sub_1C045945C(uint64_t a1)
{
  sub_1C04593AC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *FeedLocation.serviceConfig.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *v2;
  switch(v3 >> 60)
  {
    case 1uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = swift_projectBox();
      goto LABEL_6;
    case 2uLL:
    case 5uLL:
      uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
         + *(void *)(**(void **)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10) + 256);
      uint64_t v9 = *(void *)(a1 + 16);
LABEL_6:
      uint64_t v19 = *(void *)(v9 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v19 + 16))(a2, v8, v9);
      uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 56);
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      goto LABEL_7;
    case 3uLL:
    case 6uLL:
    case 7uLL:
      uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56);
      uint64_t v6 = a2;
      uint64_t v7 = 1;
      goto LABEL_7;
    case 4uLL:
      MEMORY[0x1F4188790](a1);
      uint64_t v14 = *(void *)(v13 + 16);
      type metadata accessor for FeedCursor();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v16 = swift_projectBox() + *(int *)(TupleTypeMetadata + 48);
      uint64_t v17 = *(void *)(v14 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v17 + 16))(a2, v16, v14);
      return (void *)(*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v14);
    case 8uLL:
      return FeedLocation.serviceConfig.getter(a2);
    default:
      uint64_t v10 = *(void *)(a1 + 16);
      type metadata accessor for FeedCursorTracker();
      uint64_t v11 = swift_projectBox();
      uint64_t v18 = *(void *)(v10 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v18 + 16))(a2, v11, v10);
      uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 56);
      uint64_t v6 = a2;
      uint64_t v7 = 0;
LABEL_7:
      return (void *)v5(v6, v7, 1);
  }
}

uint64_t FeedLocation.name.getter(uint64_t a1)
{
  uint64_t result = 0x656546664F706F74;
  switch(*v1 >> 60)
  {
    case 1:
      return 0x646568636163;
    case 2:
      uint64_t v4 = 0x726F73727563;
      goto LABEL_7;
    case 3:
      unint64_t v6 = 0x636E657265666572;
      sub_1C0EFA07C();
      goto LABEL_11;
    case 4:
      MEMORY[0x1F4188790](0x656546664F706F74);
      type metadata accessor for FeedCursor();
      swift_getTupleTypeMetadata();
      swift_projectBox();
      unint64_t v6 = 0;
      swift_retain();
      sub_1C15200FC();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C152036C();
      sub_1C151E80C();
      goto LABEL_13;
    case 5:
      uint64_t v4 = 0x646E61707865;
LABEL_7:
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL | 0x28000000000000;
      goto LABEL_10;
    case 6:
      swift_retain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000010;
      sub_1C0EFA07C();
      goto LABEL_12;
    case 7:
      uint64_t v5 = 0x6465727265666564;
LABEL_10:
      unint64_t v6 = v5;
LABEL_11:
      swift_retain();
LABEL_12:
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
LABEL_13:
      swift_release();
      goto LABEL_14;
    case 8:
      unint64_t v6 = 0x28796669646F6DLL;
      swift_retain();
      FeedLocation.name.getter(a1);
      sub_1C151E80C();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_14:
      uint64_t result = v6;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceNode()
{
  return &type metadata for SportsTaxonomyGraphResourceNode;
}

uint64_t sub_1C0459C14(void *a1, unint64_t a2)
{
  sub_1C045A724(0, &qword_1EA19B788, (uint64_t (*)(void))sub_1C045A1CC, (uint64_t)&type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v14 - v7;
  switch(a2 >> 62)
  {
    case 1uLL:
      long long v13 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      long long v15 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      long long v16 = v13;
      char v17 = *(unsigned char *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t result = sub_1C0A17708(a1);
      break;
    case 2uLL:
      long long v11 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      long long v18 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v19[0] = v11;
      *(_OWORD *)((char *)v19 + 10) = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x2A);
      uint64_t result = sub_1C1279724(a1);
      break;
    case 3uLL:
      if (*(unsigned char *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x19)) {
        int v12 = 256;
      }
      else {
        int v12 = 0;
      }
      uint64_t result = sub_1C109F2E4(a1, *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10), v12 | (*(unsigned __int8 *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x1A) << 16) | *(unsigned __int8 *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18));
      break;
    default:
      uint64_t v9 = *(void *)(a2 + 16);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1C045A1CC();
      sub_1C1520F0C();
      v14[1] = v9;
      sub_1C045A220();
      sub_1C045A278();
      sub_1C152080C();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      break;
  }
  return result;
}

uint64_t sub_1C0459E5C(uint64_t a1)
{
  unint64_t v2 = sub_1C045A78C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0459E98(uint64_t a1)
{
  unint64_t v2 = sub_1C045A78C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0459ED4(char *a1, char *a2)
{
  return sub_1C1479D40(*a1, *a2);
}

uint64_t sub_1C0459EE0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0459F5C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0459FC4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C045A03C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C045A09C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1953460082;
  if (!*v1) {
    uint64_t v2 = 0x6E6F6974636573;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C045A0D4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C045A134()
{
  return sub_1C151EAEC();
}

unint64_t sub_1C045A184@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1C045A33C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C045A1B0(void *a1)
{
  return sub_1C0459C14(a1, *v1);
}

unint64_t sub_1C045A1CC()
{
  unint64_t result = qword_1EB86A4B8;
  if (!qword_1EB86A4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A4B8);
  }
  return result;
}

void sub_1C045A220()
{
  if (!qword_1EB86B290)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B290);
    }
  }
}

unint64_t sub_1C045A278()
{
  unint64_t result = qword_1EA19B790;
  if (!qword_1EA19B790)
  {
    sub_1C045A220();
    sub_1C045A2E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B790);
  }
  return result;
}

unint64_t sub_1C045A2E8()
{
  unint64_t result = qword_1EA19B798;
  if (!qword_1EA19B798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B798);
  }
  return result;
}

unint64_t sub_1C045A33C(void *a1)
{
  sub_1C045A724(0, &qword_1EB86B740, (uint64_t (*)(void))sub_1C045A78C, (uint64_t)&type metadata for SportsTaxonomyGraphResourceNode.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v18 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C045A78C();
  unint64_t v9 = (unint64_t)v8;
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C045A7E0();
    sub_1C152065C();
    if (LOBYTE(v18[0]) == 2)
    {
      sub_1BFC66384((uint64_t)a1, (uint64_t)v18);
      sub_1C1279B54(v18, (uint64_t)&v19);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v12 = swift_allocObject();
      long long v13 = v20[0];
      *(_OWORD *)(v12 + 16) = v19;
      *(_OWORD *)(v12 + 32) = v13;
      *(_OWORD *)(v12 + 42) = *(_OWORD *)((char *)v20 + 10);
      unint64_t v9 = v12 | 0x8000000000000000;
    }
    else if (v18[0])
    {
      unint64_t v9 = swift_allocObject();
      sub_1BFC66384((uint64_t)a1, (uint64_t)v18);
      char v17 = sub_1C0DF0B9C(v18);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(void *)(v9 + 16) = v17;
    }
    else
    {
      uint64_t v10 = swift_allocObject();
      sub_1BFC66384((uint64_t)a1, (uint64_t)v18);
      uint64_t v14 = sub_1C109F774(v18);
      int v16 = v15;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(void *)(v10 + 16) = v14;
      *(unsigned char *)(v10 + 24) = v16 & 1;
      *(unsigned char *)(v10 + 25) = BYTE1(v16) & 1;
      *(unsigned char *)(v10 + 26) = BYTE2(v16) & 1;
      unint64_t v9 = v10 | 0xC000000000000000;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

void sub_1C045A724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C045A78C()
{
  unint64_t result = qword_1EB869740;
  if (!qword_1EB869740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869740);
  }
  return result;
}

unint64_t sub_1C045A7E0()
{
  unint64_t result = qword_1EB869758;
  if (!qword_1EB869758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869758);
  }
  return result;
}

uint64_t sub_1C045A834()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C045A86C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C045A8A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C045A8E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for SportsTaxonomyGraphResourceNode.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C045A9F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceNode.CodingType()
{
  return &type metadata for SportsTaxonomyGraphResourceNode.CodingType;
}

unsigned char *storeEnumTagSinglePayload for SportsTaxonomyGraphResourceNode.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C045AACCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceNode.CodingKeys;
}

unint64_t sub_1C045AB08()
{
  unint64_t result = qword_1EA19B7A0;
  if (!qword_1EA19B7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7A0);
  }
  return result;
}

unint64_t sub_1C045AB60()
{
  unint64_t result = qword_1EA19B7A8;
  if (!qword_1EA19B7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7A8);
  }
  return result;
}

unint64_t sub_1C045ABB8()
{
  unint64_t result = qword_1EB869750;
  if (!qword_1EB869750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869750);
  }
  return result;
}

unint64_t sub_1C045AC10()
{
  unint64_t result = qword_1EB869748;
  if (!qword_1EB869748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869748);
  }
  return result;
}

unint64_t sub_1C045AC64()
{
  unint64_t result = qword_1EB86F3F0;
  if (!qword_1EB86F3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F3F0);
  }
  return result;
}

uint64_t *sub_1C045ACB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  swift_retain();
  if (v7 != 1) {
    swift_bridgeObjectRetain();
  }
  v4[1] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)v4 + v8;
  unint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v19 = sub_1C151928C();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v20(v9, v10, v19);
      sub_1BFF05D18();
      uint64_t v22 = v21;
      v20(&v9[*(int *)(v21 + 48)], &v10[*(int *)(v21 + 48)], v19);
      uint64_t v18 = *(int *)(v22 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v26 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v9, v10, v26);
        goto LABEL_13;
      }
      uint64_t v16 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      sub_1C015F8A0();
      uint64_t v18 = *(int *)(v17 + 48);
    }
    uint64_t v23 = &v9[v18];
    uint64_t v24 = &v10[v18];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    return v4;
  }
  sub_1C0178190();
  memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  return v4;
}

uint64_t sub_1C045AF84(uint64_t a1, uint64_t a2)
{
  swift_release();
  if (*(void *)(a1 + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        uint64_t v9 = sub_1C151928C();
        unint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
        v10(v4, v9);
        sub_1BFF05D18();
        v10(v4 + *(int *)(v11 + 48), v9);
        break;
      case 1:
        uint64_t v12 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v4, v12);
        sub_1C015F8A0();
        break;
      case 0:
        uint64_t v7 = sub_1C151928C();
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        return v8(v4, v7);
      default:
        return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1C045B174(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_retain();
  if (v6 != 1) {
    swift_bridgeObjectRetain();
  }
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = sub_1C151928C();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      v18(v8, v9, v17);
      sub_1BFF05D18();
      uint64_t v20 = v19;
      v18(&v8[*(int *)(v19 + 48)], &v9[*(int *)(v19 + 48)], v17);
      uint64_t v16 = *(int *)(v20 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v24 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v9, v24);
        goto LABEL_11;
      }
      uint64_t v14 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      sub_1C015F8A0();
      uint64_t v16 = *(int *)(v15 + 48);
    }
    uint64_t v21 = &v8[v16];
    uint64_t v22 = &v9[v16];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    return a1;
  }
  sub_1C0178190();
  memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  return a1;
}

void *sub_1C045B3F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a2[1];
  if (a1[1] == 1)
  {
    if (v7 == 1)
    {
      uint64_t v8 = 1;
LABEL_6:
      *uint64_t v6 = v8;
      goto LABEL_9;
    }
    *uint64_t v6 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v7 == 1)
    {
      sub_1C045B8D0((uint64_t)(a1 + 1));
      uint64_t v8 = a2[1];
      goto LABEL_6;
    }
    *uint64_t v6 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v28 = sub_1C151928C();
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        v29(v10, v11, v28);
        sub_1BFF05D18();
        uint64_t v31 = v30;
        v29(&v10[*(int *)(v30 + 48)], &v11[*(int *)(v30 + 48)], v28);
        uint64_t v20 = *(int *)(v31 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v34 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v10, v11, v34);
          goto LABEL_25;
        }
        uint64_t v18 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v11, v18);
        sub_1C015F8A0();
        uint64_t v20 = *(int *)(v19 + 48);
      }
      uint64_t v32 = &v10[v20];
      char v33 = &v11[v20];
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = *((void *)v33 + 1);
      swift_bridgeObjectRetain();
LABEL_25:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
    goto LABEL_16;
  }
  if (v16)
  {
    sub_1C045B924((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
LABEL_16:
    sub_1C0178190();
    memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1C045B924((uint64_t)v10, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      uint64_t v36 = sub_1C151928C();
      char v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      v37(v10, v11, v36);
      sub_1BFF05D18();
      uint64_t v39 = v38;
      v37(&v10[*(int *)(v38 + 48)], &v11[*(int *)(v38 + 48)], v36);
      uint64_t v40 = *(int *)(v39 + 64);
      char v41 = &v10[v40];
      uint64_t v42 = &v11[v40];
      *(void *)char v41 = *(void *)v42;
      *((void *)v41 + 1) = *((void *)v42 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v22 == 1)
      {
        uint64_t v23 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v10, v11, v23);
        sub_1C015F8A0();
        uint64_t v25 = *(int *)(v24 + 48);
        uint64_t v26 = &v10[v25];
        uint64_t v27 = &v11[v25];
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = *((void *)v27 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v43 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v10, v11, v43);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C045B8D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C045B924(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1C045B984(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = sub_1C151928C();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v19(v5, v6, v14);
      sub_1BFF05D18();
      uint64_t v16 = v15;
      v19(&v5[*(int *)(v15 + 48)], &v6[*(int *)(v15 + 48)], v14);
      uint64_t v13 = *(int *)(v16 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v17 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v5, v6, v17);
        goto LABEL_9;
      }
      uint64_t v11 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v5, v6, v11);
      sub_1C015F8A0();
      uint64_t v13 = *(int *)(v12 + 48);
    }
    *(_OWORD *)&v5[v13] = *(_OWORD *)&v6[v13];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    return a1;
  }
  sub_1C0178190();
  memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  return a1;
}

void *sub_1C045BBD0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a2[1];
  if (a1[1] == 1) {
    goto LABEL_4;
  }
  if (v7 == 1)
  {
    sub_1C045B8D0((uint64_t)(a1 + 1));
    uint64_t v7 = 1;
LABEL_4:
    *uint64_t v6 = v7;
    goto LABEL_6;
  }
  *uint64_t v6 = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v24 = sub_1C151928C();
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
        v34(v9, v10, v24);
        sub_1BFF05D18();
        uint64_t v26 = v25;
        v34(&v9[*(int *)(v25 + 48)], &v10[*(int *)(v25 + 48)], v24);
        uint64_t v19 = *(int *)(v26 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v27 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v9, v10, v27);
          goto LABEL_22;
        }
        uint64_t v17 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v9, v10, v17);
        sub_1C015F8A0();
        uint64_t v19 = *(int *)(v18 + 48);
      }
      *(_OWORD *)&v9[v19] = *(_OWORD *)&v10[v19];
LABEL_22:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      return a1;
    }
    goto LABEL_13;
  }
  if (v15)
  {
    sub_1C045B924((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
LABEL_13:
    sub_1C0178190();
    memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1C045B924((uint64_t)v9, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      uint64_t v29 = sub_1C151928C();
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
      v30(v9, v10, v29);
      sub_1BFF05D18();
      uint64_t v32 = v31;
      v30(&v9[*(int *)(v31 + 48)], &v10[*(int *)(v31 + 48)], v29);
      *(_OWORD *)&v9[*(int *)(v32 + 64)] = *(_OWORD *)&v10[*(int *)(v32 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v21 == 1)
      {
        uint64_t v22 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v9, v10, v22);
        sub_1C015F8A0();
        *(_OWORD *)&v9[*(int *)(v23 + 48)] = *(_OWORD *)&v10[*(int *)(v23 + 48)];
      }
      else
      {
        uint64_t v33 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v9, v10, v33);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C045C04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C045C060);
}

uint64_t sub_1C045C060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    sub_1C0178190();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C045C118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C045C12C);
}

uint64_t sub_1C045C12C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 8) = (a2 + 1);
  }
  else
  {
    sub_1C0178190();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FormatOptionsNodeStatementResult()
{
  uint64_t result = qword_1EB8929E0;
  if (!qword_1EB8929E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C045C224()
{
  sub_1C0178190();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for FormatGroupBinding()
{
  return &type metadata for FormatGroupBinding;
}

uint64_t dispatch thunk of CategoryViewStylerType.titleFont.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CategoryViewStylerType.scalingRatio.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CategoryViewStylerType.selectedCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CategoryViewStylerType.styled(title:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CategoryViewStylerType.styled(title:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(titleLabel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(iconImageView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(iconImageView:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(contentView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(checkmarkImageView:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(contentView:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

id sub_1C045C3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  uint64_t v44 = a1;
  uint64_t v42 = sub_1C151A2CC();
  uint64_t v4 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v2 + 3;
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v8);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v9 + 48))(&v45, v8, v9);
  uint64_t v10 = v46;
  char v41 = v45;
  uint64_t v11 = v47;
  uint64_t v12 = v48;
  int v14 = v49;
  uint64_t v13 = v50;
  int v15 = v51;

  uint64_t v16 = v3[6];
  uint64_t v17 = v3[7];
  __swift_project_boxed_opaque_existential_1(v7, v16);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v17 + 48))(&v45, v16, v17);
  uint64_t v18 = v45;
  uint64_t v19 = v46;
  uint64_t v20 = v47;
  int v21 = v48;
  uint64_t v22 = v49;
  uint64_t v23 = v50;
  uint64_t v24 = v51;

  uint64_t v25 = v42;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FABD18], v42);
  uint64_t v26 = v41;
  uint64_t v27 = (void *)sub_1C151A2BC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v29 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v30 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  swift_bridgeObjectRetain();
  id v31 = v29;
  *(void *)(inited + 40) = sub_1C151F87C();
  uint64_t v32 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v30;
  *(void *)(inited + 72) = v32;
  *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v27;
  id v33 = v32;
  id v34 = v27;
  sub_1BFF991DC(inited);
  id v35 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v36 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  char v37 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v38 = objc_msgSend(v35, sel_initWithString_attributes_, v36, v37);

  return v38;
}

id sub_1C045C73C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = v3 + 3;
  uint64_t v7 = v3[6];
  uint64_t v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v8 + 48))(&v38, v7, v8);
  uint64_t v9 = v38;
  uint64_t v10 = v39;
  uint64_t v11 = v40;
  uint64_t v12 = v41;
  int v14 = v42;
  uint64_t v13 = v43;
  int v15 = v44;

  if (a3)
  {
    uint64_t v16 = v4[6];
    uint64_t v17 = v4[7];
    __swift_project_boxed_opaque_existential_1(v6, v16);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v17 + 48))(&v38, v16, v17);
    uint64_t v18 = v38;
    uint64_t v19 = v39;
    id v20 = v40;
    int v21 = v41;
    uint64_t v22 = v42;
    uint64_t v23 = v43;
    uint64_t v24 = v44;
  }
  else
  {
    id v20 = v9;
  }
  uint64_t v25 = v9;
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v27 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v28 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  swift_bridgeObjectRetain();
  id v29 = v27;
  *(void *)(inited + 40) = sub_1C151F87C();
  uint64_t v30 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v28;
  *(void *)(inited + 72) = v30;
  *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v20;
  id v31 = v30;
  id v32 = v20;
  sub_1BFF991DC(inited);
  id v33 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v34 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  id v35 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(v33, sel_initWithString_attributes_, v34, v35);

  return v36;
}

void sub_1C045C9DC(void *a1, char a2)
{
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v6 + 48))(&v14, v5, v6);
  if (a2)
  {
    uint64_t v7 = v14;
    uint64_t v8 = v15;
    uint64_t v9 = v16;
  }
  else
  {
    uint64_t v9 = v14;
    uint64_t v7 = v15;
    uint64_t v8 = v16;
  }
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  uint64_t v13 = v20;

  objc_msgSend(a1, sel_setTintColor_, v9);
}

void sub_1C045CACC(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + 48);
  uint64_t v7 = *(void *)(v3 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 24), v6);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v7 + 48))(&v28, v6, v7);
  if (a2)
  {
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    uint64_t v11 = v30;
    uint64_t v10 = v31;
    uint64_t v12 = v32;
    uint64_t v13 = v33;
    int v14 = v34;

    objc_msgSend(a1, sel_setBackgroundColor_, v10);
    id v15 = objc_msgSend(a1, sel_layer);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    double v16 = *(double *)(v3 + 16);
    swift_retain();
    uint64_t v17 = (void *)sub_1C151F87C();
    objc_msgSend(v17, sel_pointSize);
    double v19 = v18;
    swift_release();

    objc_msgSend(v15, sel_setCornerRadius_, v19 / v16 * 8.0);
    id v27 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v27, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);
  }
  else
  {
    id v21 = v28;
    id v20 = v29;
    uint64_t v22 = v30;
    uint64_t v23 = v31;
    uint64_t v24 = v32;
    uint64_t v25 = v33;
    uint64_t v26 = v34;

    objc_msgSend(a1, sel_setBackgroundColor_, v20);
    id v27 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v27, sel_setCornerRadius_, 0.0);
  }
}

id sub_1C045CD30(void *a1, char a2)
{
  uint64_t v3 = v2;
  objc_msgSend(a1, sel_setContentMode_, 4);
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C151E5EC();
    id v7 = objc_msgSend(self, sel_systemImageNamed_, v6);

    if (v7)
    {
      id v8 = objc_msgSend(self, sel_configurationWithPointSize_weight_, 7, 13.0);
      id v9 = objc_msgSend(v7, sel_imageWithConfiguration_, v8);

      id v10 = objc_msgSend(v9, sel_imageWithRenderingMode_, 2);
    }
    sub_1C151CD6C();
    uint64_t v11 = v3 + 3;
    uint64_t v13 = v3[6];
    uint64_t v12 = v3[7];
    __swift_project_boxed_opaque_existential_1(v11, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 48))(v22, v13, v12);
    int v14 = (void *)v22[0];
    id v15 = (void *)v22[1];
    double v16 = (void *)v22[2];
    uint64_t v17 = (void *)v22[3];
    double v18 = (void *)v22[4];
    double v19 = (void *)v22[5];
    id v20 = (void *)v22[6];

    objc_msgSend(a1, sel_setTintColor_, v16);
  }
  else
  {
    sub_1C151CD6C();
  }
  return objc_msgSend(a1, sel_setHidden_, (a2 & 1) == 0);
}

uint64_t sub_1C045CF14()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1C045CF4C()
{
  return sub_1C151F87C();
}

double sub_1C045CFB4()
{
  uint64_t v1 = *v0;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  double v2 = *(double *)(v1 + 16);
  uint64_t v3 = (void *)sub_1C151F87C();
  objc_msgSend(v3, sel_pointSize);
  double v5 = v4;

  return v5 / v2;
}

id sub_1C045D048(uint64_t a1, uint64_t a2)
{
  return sub_1C045C3B0(a1, a2);
}

id sub_1C045D06C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1C045C73C(a1, a2, a3);
}

id sub_1C045D090(void *a1)
{
  return objc_msgSend(a1, sel_setNumberOfLines_, 0);
}

void sub_1C045D0A0(void *a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 24), v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v12, v3, v4);
  double v5 = (void *)v12[1];
  id v11 = (id)v12[0];
  uint64_t v6 = (void *)v12[2];
  id v7 = (void *)v12[3];
  id v8 = (void *)v12[4];
  id v9 = (void *)v12[5];
  id v10 = (void *)v12[6];

  objc_msgSend(a1, sel_setTintColor_, v11);
}

void sub_1C045D170(void *a1, char a2)
{
}

id sub_1C045D194(void *a1)
{
  id v2 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v2, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  return objc_msgSend(a1, sel_setBackgroundColor_, 0);
}

id sub_1C045D208(void *a1, char a2)
{
  return sub_1C045CD30(a1, a2);
}

void sub_1C045D22C(void *a1, char a2)
{
}

double sub_1C045D250()
{
  uint64_t v1 = *v0;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  double v2 = *(double *)(v1 + 16);
  uint64_t v3 = (void *)sub_1C151F87C();
  objc_msgSend(v3, sel_pointSize);
  double v5 = v4;

  return v5 / v2 * 8.0;
}

uint64_t FormatType.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatType.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatType.description.modify())(void)
{
  return nullsub_1;
}

void FormatType.definition.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  unsigned __int8 v8 = *(unsigned char *)(v1 + 80);
  *(unsigned char *)(a1 + 48) = v8;
  sub_1BFF1DB64(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatType.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL _s8NewsFeed10FormatTypeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  long long v4 = *(_OWORD *)(a1 + 32);
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 80);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  long long v10 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 48);
  long long v12 = *(_OWORD *)(a2 + 64);
  char v13 = *(unsigned char *)(a2 + 80);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_4;
  }
  long long v28 = *(_OWORD *)(a1 + 48);
  long long v30 = *(_OWORD *)(a1 + 32);
  long long v24 = *(_OWORD *)(a2 + 32);
  long long v26 = *(_OWORD *)(a1 + 64);
  long long v20 = *(_OWORD *)(a2 + 64);
  long long v22 = *(_OWORD *)(a2 + 48);
  char v14 = sub_1C1520A9C();
  long long v12 = v20;
  long long v11 = v22;
  long long v10 = v24;
  long long v6 = v26;
  long long v5 = v28;
  long long v4 = v30;
  char v15 = v14;
  BOOL v16 = 0;
  if (v15)
  {
LABEL_4:
    if (v3)
    {
      if (v8)
      {
        if (v2 != v9 || v3 != v8)
        {
          long long v29 = v5;
          long long v31 = v4;
          long long v25 = v10;
          long long v27 = v6;
          long long v21 = v12;
          long long v23 = v11;
          char v17 = sub_1C1520A9C();
          long long v12 = v21;
          long long v11 = v23;
          long long v10 = v25;
          long long v6 = v27;
          long long v5 = v29;
          long long v4 = v31;
          char v18 = v17;
          BOOL v16 = 0;
          if ((v18 & 1) == 0) {
            return v16;
          }
        }
LABEL_12:
        v34[0] = v4;
        v34[1] = v5;
        v34[2] = v6;
        char v35 = v7;
        v32[0] = v10;
        v32[1] = v11;
        v32[2] = v12;
        char v33 = v13;
        return _s8NewsFeed20FormatTypeDefinitionO2eeoiySbAC_ACtFZ_0((uint64_t)v34, (uint64_t)v32);
      }
    }
    else if (!v8)
    {
      goto LABEL_12;
    }
    return 0;
  }
  return v16;
}

unint64_t sub_1C045D504(uint64_t a1)
{
  unint64_t result = sub_1C00F6B20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C045D52C(void *a1)
{
  a1[1] = sub_1C0084750();
  a1[2] = sub_1C00847A4();
  unint64_t result = sub_1C045D564();
  a1[3] = result;
  return result;
}

unint64_t sub_1C045D564()
{
  unint64_t result = qword_1EB890F00;
  if (!qword_1EB890F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F00);
  }
  return result;
}

uint64_t sub_1C045D5B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C045D5C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t assignWithCopy for FormatType(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  uint64_t v9 = v2[9];
  LOBYTE(v2) = *((unsigned char *)v2 + 80);
  sub_1BFF1DB64(v4, v5, v6, v7, v8, v9, v2);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = (_BYTE)v2;
  sub_1BFEC28BC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatType()
{
  return &type metadata for FormatType;
}

uint64_t _s8NewsFeed16FormatAdjustmentO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1)
  {
    case 1uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) == 1) {
        goto LABEL_29;
      }
      goto LABEL_103;
    case 2uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 2) {
        goto LABEL_103;
      }
      uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      sub_1BFF32264(*a2);
      sub_1BFF32264(v2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v11 = sub_1C00DE998(v8, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        goto LABEL_104;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = sub_1C00DE998(v7, v9);
      swift_bridgeObjectRelease();
      goto LABEL_81;
    case 3uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 3) {
        goto LABEL_103;
      }
      goto LABEL_26;
    case 4uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 4) {
        goto LABEL_103;
      }
      goto LABEL_26;
    case 5uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 5) {
        goto LABEL_103;
      }
      goto LABEL_26;
    case 6uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 6) {
        goto LABEL_103;
      }
      goto LABEL_26;
    case 7uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 7) {
        goto LABEL_103;
      }
      goto LABEL_26;
    case 8uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 8) {
        goto LABEL_103;
      }
      goto LABEL_26;
    case 9uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 9) {
        goto LABEL_103;
      }
      char v13 = *(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v14 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v15 = *(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      *(void *)&long long v62 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      BYTE8(v62) = v13;
      *(void *)&long long v60 = v14;
      BYTE8(v60) = v15;
      sub_1BFF32264(v3);
      sub_1BFF32264(v2);
      char v6 = _s8NewsFeed11FormatRatioO2eeoiySbAC_ACtFZ_0((uint64_t)&v62, (uint64_t)&v60);
      goto LABEL_27;
    case 0xAuLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0xA) {
        goto LABEL_103;
      }
      goto LABEL_26;
    case 0xBuLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0xB) {
        goto LABEL_103;
      }
LABEL_26:
      uint64_t v16 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v17 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1BFF32264(*a2);
      sub_1BFF32264(v2);
      char v6 = sub_1C00DE998(v16, v17);
      goto LABEL_27;
    case 0xCuLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0xC) {
        goto LABEL_103;
      }
LABEL_29:
      char v19 = *(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      unsigned __int8 v20 = *(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1BFF32264(*a2);
      sub_1BFF32264(v2);
      char v6 = sub_1C148EB80(v20, v19);
      goto LABEL_27;
    case 0xDuLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0xD) {
        goto LABEL_103;
      }
      uint64_t v21 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v22 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v23 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v24 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      if (*(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10)) {
        uint64_t v25 = 0x746867696568;
      }
      else {
        uint64_t v25 = 0x6874646977;
      }
      if (*(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10)) {
        unint64_t v26 = 0xE600000000000000;
      }
      else {
        unint64_t v26 = 0xE500000000000000;
      }
      if (*(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10)) {
        uint64_t v27 = 0x746867696568;
      }
      else {
        uint64_t v27 = 0x6874646977;
      }
      if (*(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10)) {
        unint64_t v28 = 0xE600000000000000;
      }
      else {
        unint64_t v28 = 0xE500000000000000;
      }
      if (v25 == v27 && v26 == v28)
      {
        sub_1BFF32264(*a2);
        sub_1BFF32264(v2);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v30 = sub_1C1520A9C();
        sub_1BFF32264(v3);
        sub_1BFF32264(v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0) {
          goto LABEL_104;
        }
      }
      if (v21 == v23 && v22 == v24) {
        goto LABEL_95;
      }
      char v59 = sub_1C1520A9C();
      sub_1BFF31E90(v2);
      sub_1BFF31E90(v3);
      if ((v59 & 1) == 0) {
        goto LABEL_105;
      }
      goto LABEL_66;
    case 0xEuLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0xE) {
        goto LABEL_103;
      }
      goto LABEL_52;
    case 0xFuLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0xF) {
        goto LABEL_103;
      }
LABEL_52:
      uint64_t v31 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v32 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1BFF32264(*a2);
      sub_1BFF32264(v2);
      swift_retain();
      swift_retain();
      char v33 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v31, v32);
      swift_release();
      swift_release();
      sub_1BFF31E90(v2);
      sub_1BFF31E90(v3);
      return v33 & 1;
    case 0x10uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) == 0x10) {
        goto LABEL_60;
      }
      goto LABEL_103;
    case 0x11uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x11) {
        goto LABEL_103;
      }
      goto LABEL_60;
    case 0x12uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x12) {
        goto LABEL_103;
      }
      goto LABEL_60;
    case 0x13uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x13) {
        goto LABEL_103;
      }
LABEL_60:
      uint64_t v35 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v36 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      BOOL v37 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10) == *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10)
         && *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x18) == *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (!v37 && (sub_1C1520A9C() & 1) == 0) {
        goto LABEL_103;
      }
      sub_1BFF32264(v3);
      sub_1BFF32264(v2);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      char v38 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v35, v36);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BFF31E90(v2);
      sub_1BFF31E90(v3);
      if (v38) {
        goto LABEL_66;
      }
      goto LABEL_105;
    case 0x14uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x14) {
        goto LABEL_103;
      }
      goto LABEL_70;
    case 0x15uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x15) {
        goto LABEL_103;
      }
LABEL_70:
      uint64_t v39 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v40 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1BFF32264(*a2);
      sub_1BFF32264(v2);
      char v6 = sub_1C00E0258(v39, v40);
      goto LABEL_27;
    case 0x16uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x16) {
        goto LABEL_103;
      }
      uint64_t v41 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      int v42 = *(unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v43 = *(unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      int v44 = *(unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v45 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      int v46 = *(unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      sub_1BFF32264(*a2);
      sub_1BFF32264(v2);
      if (v43 != v44) {
        goto LABEL_104;
      }
      swift_retain();
      swift_retain();
      char v47 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v41, v45);
      swift_release();
      swift_release();
      sub_1BFF31E90(v2);
      sub_1BFF31E90(v3);
      if (v47 & 1) == 0 || ((v42 ^ v46)) {
        goto LABEL_105;
      }
      goto LABEL_66;
    case 0x17uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x17) {
        goto LABEL_103;
      }
      uint64_t v49 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v48 = *(void *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v51 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v50 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      sub_1BFF32264(*a2);
      sub_1BFF32264(v2);
      if ((sub_1C00ECD7C(v49, v51) & 1) == 0) {
        goto LABEL_104;
      }
      if (v48)
      {
        if (!v50) {
          goto LABEL_104;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v12 = sub_1C00E0048(v48, v50);
        swift_bridgeObjectRelease();
LABEL_81:
        swift_bridgeObjectRelease();
        sub_1BFF31E90(v2);
        sub_1BFF31E90(v3);
        if (v12)
        {
LABEL_66:
          char v18 = 1;
          return v18 & 1;
        }
        goto LABEL_105;
      }
      if (v50) {
        goto LABEL_104;
      }
LABEL_95:
      sub_1BFF31E90(v2);
      unint64_t v55 = v3;
LABEL_108:
      sub_1BFF31E90(v55);
      char v18 = 1;
      break;
    case 0x18uLL:
      if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x18) {
        goto LABEL_103;
      }
      long long v52 = *(_OWORD *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      long long v62 = *(_OWORD *)((v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      long long v63 = v52;
      long long v53 = *(_OWORD *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      long long v60 = *(_OWORD *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      long long v61 = v53;
      sub_1BFF32264(v3);
      sub_1BFF32264(v2);
      char v6 = _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0((uint64_t *)&v62, (uint64_t *)&v60);
      goto LABEL_27;
    case 0x19uLL:
      switch(__ROR8__(v2 + 0x3FFFFFFFFFFFFFFCLL, 3))
      {
        case 1:
          int v56 = (v3 >> 59) & 0x1E | (v3 >> 2) & 1;
          unint64_t v57 = 0xC00000000000000CLL;
          break;
        case 2:
          int v56 = (v3 >> 59) & 0x1E | (v3 >> 2) & 1;
          unint64_t v57 = 0xC000000000000014;
          break;
        case 3:
          int v56 = (v3 >> 59) & 0x1E | (v3 >> 2) & 1;
          unint64_t v57 = 0xC00000000000001CLL;
          break;
        default:
          if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) != 0x19 || v3 != 0xC000000000000004) {
            goto LABEL_103;
          }
          sub_1BFF31E90(*a1);
          unint64_t v55 = 0xC000000000000004;
          goto LABEL_108;
      }
      if (v56 != 25 || v3 != v57) {
        goto LABEL_103;
      }
      sub_1BFF31E90(*a1);
      unint64_t v55 = v57;
      goto LABEL_108;
    default:
      if ((v3 >> 59) & 0x1E | (v3 >> 2) & 1)
      {
LABEL_103:
        sub_1BFF32264(v3);
        sub_1BFF32264(v2);
LABEL_104:
        sub_1BFF31E90(v2);
        sub_1BFF31E90(v3);
LABEL_105:
        char v18 = 0;
      }
      else
      {
        long long v4 = *(_OWORD *)(v2 + 32);
        long long v62 = *(_OWORD *)(v2 + 16);
        long long v63 = v4;
        long long v5 = *(_OWORD *)(v3 + 32);
        long long v60 = *(_OWORD *)(v3 + 16);
        long long v61 = v5;
        sub_1BFF32264(v3);
        sub_1BFF32264(v2);
        char v6 = _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0((uint64_t *)&v62, (uint64_t *)&v60);
LABEL_27:
        char v18 = v6;
        sub_1BFF31E90(v2);
        sub_1BFF31E90(v3);
      }
      break;
  }
  return v18 & 1;
}

unint64_t sub_1C045E104(uint64_t a1)
{
  unint64_t result = sub_1C007F3D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C045E12C()
{
  unint64_t result = qword_1EB891280[0];
  if (!qword_1EB891280[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB891280);
  }
  return result;
}

unint64_t *assignWithCopy for FormatAdjustment(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF32264(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1BFF31E90(v4);
  return a1;
}

unint64_t *assignWithTake for FormatAdjustment(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1BFF31E90(v3);
  return a1;
}

uint64_t sub_1C045E2B8(void *a1)
{
  unsigned int v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x18) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 25;
  }
}

void *sub_1C045E2DC(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1C045E2F0(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x19) {
    *unint64_t result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    *unint64_t result = (8 * (a2 - 25)) | 0xC000000000000004;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAdjustment()
{
  return &type metadata for FormatAdjustment;
}

uint64_t sub_1C045E33C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

CGFloat sub_1C045E394(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  return sub_1C1476290(*(void *)(v8 + 48), a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C045E3E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C045E428(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  sub_1BFF35434(0, &qword_1EB8712A0, MEMORY[0x1E4FAB678]);
  uint64_t v17 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF31ED4(0, v8, 0);
    uint64_t v9 = v20;
    uint64_t v10 = (unint64_t *)(a1 + 32);
    uint64_t v16 = v5 + 32;
    while (1)
    {
      unint64_t v11 = *v10++;
      unint64_t v19 = v11;
      sub_1BFF32264(v11);
      sub_1BFF34310(v18);
      unint64_t v12 = v11;
      if (v2) {
        break;
      }
      sub_1BFF31E90(v12);
      uint64_t v20 = v9;
      unint64_t v14 = *(void *)(v9 + 16);
      unint64_t v13 = *(void *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BFF31ED4(v13 > 1, v14 + 1, 1);
        uint64_t v9 = v20;
      }
      *(void *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v7, v17);
      if (!--v8) {
        return v9;
      }
    }
    sub_1BFF31E90(v12);
    swift_release();
  }
  return v9;
}

uint64_t static FormatOptionBindingModifier.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (!v2)
  {
    if (!v3)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v3) {
    return 0;
  }
  return sub_1BFD81AE8(v2, v3);
}

unint64_t sub_1C045E658(uint64_t a1)
{
  unint64_t result = sub_1C045E680();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C045E680()
{
  unint64_t result = qword_1EA19B7B0;
  if (!qword_1EA19B7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7B0);
  }
  return result;
}

uint64_t sub_1C045E6D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (!v2)
  {
    if (!v3)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v3) {
    return 0;
  }
  return sub_1BFD81AE8(v2, v3);
}

unint64_t sub_1C045E730(void *a1)
{
  a1[1] = sub_1C006C6F4();
  a1[2] = sub_1C006C748();
  unint64_t result = sub_1C045E768();
  a1[3] = result;
  return result;
}

unint64_t sub_1C045E768()
{
  unint64_t result = qword_1EA19B7B8;
  if (!qword_1EA19B7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7B8);
  }
  return result;
}

void *assignWithCopy for FormatOptionBindingModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatOptionBindingModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatOptionBindingModifier()
{
  return &type metadata for FormatOptionBindingModifier;
}

uint64_t FormatWebEmbedNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatWebEmbedNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.errorCornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t FormatWebEmbedNodeStyle.showsLoadingSpinner.getter()
{
  return *(unsigned __int8 *)(v0 + 90);
}

uint64_t FormatWebEmbedNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C045E9D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 96) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatWebEmbedNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNodeStyle.__allocating_init(identifier:class:cornerRadius:errorCornerRadius:ignoresSmartInvertColors:showsLoadingSpinner:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, char a7, char a8, uint64_t a9)
{
  uint64_t v14 = swift_allocObject();
  uint64_t v16 = *a5;
  uint64_t v15 = a5[1];
  LOBYTE(a5) = *((unsigned char *)a5 + 16);
  uint64_t v17 = *a6;
  uint64_t v18 = a6[1];
  LOBYTE(a6) = *((unsigned char *)a6 + 16);
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  *(void *)(v14 + 48) = v16;
  *(void *)(v14 + 56) = v15;
  *(unsigned char *)(v14 + 64) = (_BYTE)a5;
  *(void *)(v14 + 72) = v17;
  *(void *)(v14 + 80) = v18;
  *(unsigned char *)(v14 + 88) = (_BYTE)a6;
  *(unsigned char *)(v14 + 89) = a7;
  *(unsigned char *)(v14 + 90) = a8;
  swift_beginAccess();
  *(void *)(v14 + 96) = a9;
  return v14;
}

uint64_t FormatWebEmbedNodeStyle.init(identifier:class:cornerRadius:errorCornerRadius:ignoresSmartInvertColors:showsLoadingSpinner:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, char a7, char a8, uint64_t a9)
{
  uint64_t v13 = *a5;
  uint64_t v14 = a5[1];
  char v15 = *((unsigned char *)a5 + 16);
  uint64_t v16 = *a6;
  uint64_t v17 = a6[1];
  char v18 = *((unsigned char *)a6 + 16);
  swift_beginAccess();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 48) = v13;
  *(void *)(v9 + 56) = v14;
  *(unsigned char *)(v9 + 64) = v15;
  *(void *)(v9 + 72) = v16;
  *(void *)(v9 + 80) = v17;
  *(unsigned char *)(v9 + 88) = v18;
  *(unsigned char *)(v9 + 89) = a7;
  *(unsigned char *)(v9 + 90) = a8;
  swift_beginAccess();
  *(void *)(v9 + 96) = a9;
  return v9;
}

uint64_t sub_1C045EC88(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v150 = *(void *)(v1 + 32);
  uint64_t v151 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v158 = *(void *)(v1 + 40);
  uint64_t v159 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 56);
  unsigned int v5 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v156 = v4;
  uint64_t v157 = v3;
  char v155 = *(unsigned char *)(v1 + 64);
  if (v5 >= 0xFE)
  {
    uint64_t v156 = *(void *)(a1 + 56);
    uint64_t v157 = *(void *)(a1 + 48);
    char v155 = *(unsigned char *)(a1 + 64);
    sub_1BFEF6828(v157, v156, v155);
  }
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 80);
  unsigned int v8 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v153 = v7;
  uint64_t v154 = v6;
  char v152 = *(unsigned char *)(v1 + 88);
  if (v8 >= 0xFE)
  {
    uint64_t v153 = *(void *)(a1 + 80);
    uint64_t v154 = *(void *)(a1 + 72);
    char v152 = *(unsigned char *)(a1 + 88);
    sub_1BFEF6828(v154, v153, v152);
  }
  int v9 = *(unsigned __int8 *)(v1 + 89);
  if (v9 == 2) {
    LOBYTE(v9) = *(unsigned char *)(a1 + 89);
  }
  char v149 = v9;
  int v10 = *(unsigned __int8 *)(v1 + 90);
  if (v10 == 2) {
    LOBYTE(v10) = *(unsigned char *)(a1 + 90);
  }
  char v148 = v10;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v1 + 96);
  swift_beginAccess();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(a1 + 96);
  unint64_t v207 = (void *)MEMORY[0x1E4FBC868];
  int64_t v14 = *(void *)(v12 + 16);
  int64_t v15 = *(void *)(v13 + 16);
  if (__OFADD__(v14, v15)) {
    goto LABEL_86;
  }
  uint64_t v161 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v3, v4, v5);
  sub_1BFEF6828(v6, v7, v8);
  sub_1C0461148();
  swift_bridgeObjectRetain();
  uint64_t v160 = v13;
  swift_bridgeObjectRetain();
  sub_1C151E3AC();
  uint64_t v195 = sub_1BFEF692C(0, v14, 0, MEMORY[0x1E4FBC860]);
  uint64_t v16 = *(void *)(v161 + 16);
  if (!v16) {
    goto LABEL_26;
  }
  int64_t v176 = v15;
  uint64_t v17 = (char *)(swift_bridgeObjectRetain() + 90);
  do
  {
    uint64_t v18 = *(void *)(v17 - 58);
    uint64_t v19 = *(void *)(v17 - 50);
    uint64_t v20 = *(void *)(v17 - 42);
    uint64_t v21 = *(void *)(v17 - 34);
    char v22 = *(v17 - 26);
    uint64_t v23 = *(void *)(v17 - 18);
    uint64_t v24 = *(void *)(v17 - 10);
    char v25 = *(v17 - 2);
    char v188 = *(v17 - 1);
    char v192 = *v17;
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v20, v21, v22);
    sub_1BFEF6828(v23, v24, v25);
    swift_bridgeObjectRetain();
    uint64_t v196 = v20;
    sub_1BFEF6828(v20, v21, v22);
    uint64_t v201 = v24;
    uint64_t v204 = v23;
    char v198 = v25;
    sub_1BFEF6828(v23, v24, v25);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1BFEF2D8C(v18, v19);
    uint64_t v29 = v207[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v32 = v27;
    if (v207[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C106F57C();
      }
    }
    else
    {
      sub_1C105BA24(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_1BFEF2D8C(v18, v19);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_87;
      }
      unint64_t v28 = v33;
    }
    uint64_t v185 = v16;
    if (v32)
    {
      unint64_t v35 = v207[7] + (v28 << 6);
      uint64_t v36 = *(void *)(v35 + 16);
      uint64_t v37 = *(void *)(v35 + 24);
      uint64_t v181 = *(void *)(v35 + 48);
      uint64_t v183 = *(void *)(v35 + 40);
      char v38 = *(unsigned char *)(v35 + 32);
      char v179 = *(unsigned char *)(v35 + 56);
      swift_bridgeObjectRelease();
      sub_1BFEF68AC(v36, v37, v38);
      sub_1BFEF68AC(v183, v181, v179);
      *(void *)unint64_t v35 = v18;
      *(void *)(v35 + 8) = v19;
      *(void *)(v35 + 16) = v196;
      *(void *)(v35 + 24) = v21;
      *(unsigned char *)(v35 + 32) = v22;
      *(void *)(v35 + 40) = v204;
      *(void *)(v35 + 48) = v201;
      *(unsigned char *)(v35 + 56) = v198;
      *(unsigned char *)(v35 + 57) = v188;
      *(unsigned char *)(v35 + 58) = v192;
    }
    else
    {
      v207[(v28 >> 6) + 8] |= 1 << v28;
      uint64_t v39 = (uint64_t *)(v207[6] + 16 * v28);
      *uint64_t v39 = v18;
      v39[1] = v19;
      unint64_t v40 = v207[7] + (v28 << 6);
      *(void *)unint64_t v40 = v18;
      *(void *)(v40 + 8) = v19;
      *(void *)(v40 + 16) = v196;
      *(void *)(v40 + 24) = v21;
      *(unsigned char *)(v40 + 32) = v22;
      *(void *)(v40 + 40) = v204;
      *(void *)(v40 + 48) = v24;
      *(unsigned char *)(v40 + 56) = v198;
      *(unsigned char *)(v40 + 57) = v188;
      *(unsigned char *)(v40 + 58) = v192;
      uint64_t v41 = v207[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_82;
      }
      v207[2] = v43;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v44 = v195[2];
    unint64_t v45 = v195[3];
    swift_bridgeObjectRetain();
    if (v44 >= v45 >> 1) {
      uint64_t v195 = sub_1BFEF692C((void *)(v45 > 1), v44 + 1, 1, v195);
    }
    v17 += 64;
    v195[2] = v44 + 1;
    int v46 = &v195[2 * v44];
    v46[4] = v18;
    v46[5] = v19;
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(v196, v21, v22);
    sub_1BFEF68AC(v204, v201, v198);
    uint64_t v16 = v185 - 1;
  }
  while (v185 != 1);
  swift_bridgeObjectRelease();
  int64_t v15 = v176;
LABEL_26:
  char v47 = sub_1BFEF692C(0, v15, 0, MEMORY[0x1E4FBC860]);
  uint64_t v48 = *(void *)(v160 + 16);
  if (!v48) {
    goto LABEL_66;
  }
  uint64_t v49 = (unsigned char *)(swift_bridgeObjectRetain() + 90);
  while (2)
  {
    uint64_t v182 = v48;
    long long v197 = v47;
    uint64_t v58 = *(void *)(v49 - 58);
    uint64_t v59 = *(void *)(v49 - 50);
    uint64_t v60 = *(void *)(v49 - 42);
    uint64_t v61 = *(void *)(v49 - 34);
    char v62 = *(v49 - 26);
    uint64_t v63 = *(void *)(v49 - 18);
    uint64_t v64 = *(void *)(v49 - 10);
    char v65 = *(v49 - 2);
    char v186 = *(v49 - 1);
    long long v180 = v49;
    char v189 = *v49;
    uint64_t v66 = v207[2];
    swift_bridgeObjectRetain();
    uint64_t v199 = v60;
    uint64_t v67 = v60;
    uint64_t v68 = v59;
    uint64_t v205 = v61;
    char v202 = v62;
    sub_1BFEF6828(v67, v61, v62);
    sub_1BFEF6828(v63, v64, v65);
    uint64_t v193 = v63;
    uint64_t v184 = v64;
    if (!v66) {
      goto LABEL_46;
    }
    swift_bridgeObjectRetain();
    unint64_t v69 = sub_1BFEF2D8C(v58, v59);
    if ((v70 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRetain();
      sub_1BFEF6828(v199, v61, v62);
      char v97 = v65;
      sub_1BFEF6828(v63, v64, v65);
      swift_bridgeObjectRetain();
      char v98 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v100 = sub_1BFEF2D8C(v58, v59);
      uint64_t v101 = v207[2];
      BOOL v102 = (v99 & 1) == 0;
      uint64_t v103 = v101 + v102;
      if (__OFADD__(v101, v102)) {
        goto LABEL_81;
      }
      char v104 = v99;
      if (v207[3] >= v103)
      {
        if ((v98 & 1) == 0) {
          sub_1C106F57C();
        }
      }
      else
      {
        sub_1C105BA24(v103, v98);
        unint64_t v105 = sub_1BFEF2D8C(v58, v59);
        if ((v104 & 1) != (v106 & 1)) {
          goto LABEL_87;
        }
        unint64_t v100 = v105;
      }
      uint64_t v178 = v58;
      if (v104)
      {
        uint64_t v107 = v58;
        unint64_t v108 = v207[7] + (v100 << 6);
        uint64_t v109 = *(void *)(v108 + 16);
        uint64_t v110 = *(void *)(v108 + 24);
        uint64_t v111 = *(void *)(v108 + 40);
        uint64_t v175 = *(void *)(v108 + 48);
        char v112 = *(unsigned char *)(v108 + 32);
        char v173 = *(unsigned char *)(v108 + 56);
        swift_bridgeObjectRelease();
        sub_1BFEF68AC(v109, v110, v112);
        sub_1BFEF68AC(v111, v175, v173);
        *(void *)unint64_t v108 = v107;
        *(void *)(v108 + 8) = v68;
        *(void *)(v108 + 16) = v199;
        *(void *)(v108 + 24) = v205;
        *(unsigned char *)(v108 + 32) = v62;
        uint64_t v113 = v63;
        uint64_t v114 = v184;
        *(void *)(v108 + 40) = v63;
        *(void *)(v108 + 48) = v184;
        char v115 = v97;
        *(unsigned char *)(v108 + 56) = v97;
        *(unsigned char *)(v108 + 57) = v186;
        *(unsigned char *)(v108 + 58) = v189;
      }
      else
      {
        v207[(v100 >> 6) + 8] |= 1 << v100;
        uint64_t v116 = (uint64_t *)(v207[6] + 16 * v100);
        *uint64_t v116 = v58;
        v116[1] = v59;
        unint64_t v117 = v207[7] + (v100 << 6);
        *(void *)unint64_t v117 = v58;
        *(void *)(v117 + 8) = v59;
        *(void *)(v117 + 16) = v199;
        *(void *)(v117 + 24) = v205;
        *(unsigned char *)(v117 + 32) = v62;
        uint64_t v113 = v63;
        uint64_t v114 = v184;
        *(void *)(v117 + 40) = v63;
        *(void *)(v117 + 48) = v184;
        *(unsigned char *)(v117 + 56) = v97;
        *(unsigned char *)(v117 + 57) = v186;
        *(unsigned char *)(v117 + 58) = v189;
        uint64_t v118 = v207[2];
        BOOL v42 = __OFADD__(v118, 1);
        uint64_t v119 = v118 + 1;
        if (v42) {
          goto LABEL_83;
        }
        char v115 = v97;
        v207[2] = v119;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v47 = v197;
      unint64_t v120 = v197[2];
      unint64_t v121 = v197[3];
      swift_bridgeObjectRetain();
      if (v120 >= v121 >> 1) {
        char v47 = sub_1BFEF692C((void *)(v121 > 1), v120 + 1, 1, v197);
      }
      uint64_t v57 = v182;
      v47[2] = v120 + 1;
      uint64_t v122 = &v47[2 * v120];
      v122[4] = v178;
      v122[5] = v68;
      swift_bridgeObjectRelease();
      sub_1BFEF68AC(v199, v205, v202);
      sub_1BFEF68AC(v113, v114, v115);
      goto LABEL_30;
    }
    char v170 = v65;
    unint64_t v71 = v207[7] + (v69 << 6);
    uint64_t v174 = *(void *)v71;
    uint64_t v177 = *(void *)(v71 + 8);
    uint64_t v73 = *(void *)(v71 + 16);
    uint64_t v72 = *(void *)(v71 + 24);
    unsigned int v74 = *(unsigned __int8 *)(v71 + 32);
    uint64_t v75 = *(void *)(v71 + 40);
    uint64_t v76 = *(void *)(v71 + 48);
    unsigned int v77 = *(unsigned __int8 *)(v71 + 56);
    int v78 = *(unsigned __int8 *)(v71 + 57);
    int v167 = *(unsigned __int8 *)(v71 + 58);
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v73, v72, v74);
    sub_1BFEF6828(v75, v76, v77);
    swift_bridgeObjectRelease();
    uint64_t v79 = v73;
    uint64_t v172 = v72;
    char v80 = v74;
    char v171 = v74;
    char v169 = v77;
    if (v74 > 0xFD)
    {
      uint64_t v79 = v199;
      uint64_t v72 = v205;
      sub_1BFEF6828(v199, v205, v202);
      char v80 = v202;
    }
    char v164 = v80;
    uint64_t v165 = v72;
    uint64_t v166 = v79;
    uint64_t v81 = v75;
    uint64_t v82 = v76;
    char v83 = v77;
    if (v77 >= 0xFE)
    {
      uint64_t v81 = v193;
      char v83 = v170;
      sub_1BFEF6828(v193, v64, v170);
      uint64_t v82 = v64;
    }
    uint64_t v162 = v82;
    uint64_t v163 = v81;
    char v84 = v186;
    if (v78 != 2) {
      char v84 = v78;
    }
    char v187 = v84;
    char v85 = v189;
    if (v167 != 2) {
      char v85 = v167;
    }
    char v190 = v85;
    swift_bridgeObjectRetain_n();
    uint64_t v86 = v73;
    sub_1BFEF6828(v73, v172, v74);
    sub_1BFEF6828(v75, v76, v77);
    char v87 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v89 = sub_1BFEF2D8C(v174, v177);
    uint64_t v90 = v207[2];
    BOOL v91 = (v88 & 1) == 0;
    uint64_t v92 = v90 + v91;
    if (__OFADD__(v90, v91)) {
      goto LABEL_84;
    }
    char v93 = v88;
    if (v207[3] >= v92)
    {
      if ((v87 & 1) == 0) {
        sub_1C106F57C();
      }
      uint64_t v94 = v177;
    }
    else
    {
      sub_1C105BA24(v92, v87);
      uint64_t v94 = v177;
      unint64_t v95 = sub_1BFEF2D8C(v174, v177);
      if ((v93 & 1) != (v96 & 1)) {
        goto LABEL_87;
      }
      unint64_t v89 = v95;
    }
    uint64_t v168 = v76;
    if (v93)
    {
      unint64_t v50 = v207[7] + (v89 << 6);
      uint64_t v51 = *(void *)(v50 + 16);
      uint64_t v52 = *(void *)(v50 + 24);
      uint64_t v54 = *(void *)(v50 + 40);
      uint64_t v53 = *(void *)(v50 + 48);
      char v55 = *(unsigned char *)(v50 + 32);
      char v56 = *(unsigned char *)(v50 + 56);
      swift_bridgeObjectRelease();
      sub_1BFEF68AC(v51, v52, v55);
      sub_1BFEF68AC(v54, v53, v56);
      *(void *)unint64_t v50 = v174;
      *(void *)(v50 + 8) = v177;
      *(void *)(v50 + 16) = v166;
      *(void *)(v50 + 24) = v165;
      *(unsigned char *)(v50 + 32) = v164;
      *(void *)(v50 + 40) = v163;
      *(void *)(v50 + 48) = v162;
      *(unsigned char *)(v50 + 56) = v83;
      *(unsigned char *)(v50 + 57) = v187;
      *(unsigned char *)(v50 + 58) = v190;
    }
    else
    {
      v207[(v89 >> 6) + 8] |= 1 << v89;
      int v123 = (uint64_t *)(v207[6] + 16 * v89);
      *int v123 = v174;
      v123[1] = v94;
      unint64_t v124 = v207[7] + (v89 << 6);
      *(void *)unint64_t v124 = v174;
      *(void *)(v124 + 8) = v94;
      *(void *)(v124 + 16) = v166;
      *(void *)(v124 + 24) = v165;
      *(unsigned char *)(v124 + 32) = v164;
      *(void *)(v124 + 40) = v163;
      *(void *)(v124 + 48) = v162;
      *(unsigned char *)(v124 + 56) = v83;
      *(unsigned char *)(v124 + 57) = v187;
      *(unsigned char *)(v124 + 58) = v190;
      uint64_t v125 = v207[2];
      BOOL v42 = __OFADD__(v125, 1);
      uint64_t v126 = v125 + 1;
      if (v42) {
        goto LABEL_85;
      }
      v207[2] = v126;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(v86, v172, v171);
    sub_1BFEF68AC(v75, v168, v169);
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(v199, v205, v202);
    sub_1BFEF68AC(v193, v184, v170);
    char v47 = v197;
    uint64_t v57 = v182;
LABEL_30:
    uint64_t v49 = v180 + 64;
    uint64_t v48 = v57 - 1;
    if (v48) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_66:
  swift_bridgeObjectRetain();
  uint64_t v127 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v127);
  uint64_t v128 = v47[2];
  if (v128)
  {
    swift_bridgeObjectRetain();
    uint64_t v129 = v47 + 5;
    uint64_t v130 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (v207[2])
      {
        uint64_t v131 = *(v129 - 1);
        uint64_t v132 = *v129;
        swift_bridgeObjectRetain_n();
        unint64_t v133 = sub_1BFEF2D8C(v131, v132);
        if (v134)
        {
          unint64_t v135 = v207[7] + (v133 << 6);
          uint64_t v206 = *(void *)v135;
          uint64_t v136 = *(void *)(v135 + 16);
          uint64_t v137 = *(void *)(v135 + 24);
          char v138 = *(unsigned char *)(v135 + 32);
          uint64_t v139 = *(void *)(v135 + 40);
          uint64_t v140 = *(void *)(v135 + 48);
          char v141 = *(unsigned char *)(v135 + 56);
          char v194 = *(unsigned char *)(v135 + 57);
          char v191 = *(unsigned char *)(v135 + 58);
          uint64_t v203 = *(void *)(v135 + 8);
          swift_bridgeObjectRetain();
          char v200 = v138;
          sub_1BFEF6828(v136, v137, v138);
          sub_1BFEF6828(v139, v140, v141);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v130 = sub_1C0EE0AF4(0, v130[2] + 1, 1, v130);
          }
          unint64_t v143 = v130[2];
          unint64_t v142 = v130[3];
          int v144 = v130;
          if (v143 >= v142 >> 1) {
            int v144 = sub_1C0EE0AF4((void *)(v142 > 1), v143 + 1, 1, v130);
          }
          uint64_t v130 = v144;
          v144[2] = v143 + 1;
          int v145 = &v144[8 * v143];
          v145[4] = v206;
          v145[5] = v203;
          v145[6] = v136;
          v145[7] = v137;
          *((unsigned char *)v145 + 64) = v200;
          v145[9] = v139;
          v145[10] = v140;
          *((unsigned char *)v145 + 88) = v141;
          *((unsigned char *)v145 + 89) = v194;
          *((unsigned char *)v145 + 90) = v191;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v129 += 2;
      --v128;
    }
    while (v128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v130 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v146 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v146 + 16) = v151;
  *(void *)(v146 + 24) = v159;
  *(void *)(v146 + 32) = v150;
  *(void *)(v146 + 40) = v158;
  *(void *)(v146 + 48) = v157;
  *(void *)(v146 + 56) = v156;
  *(unsigned char *)(v146 + 64) = v155;
  *(void *)(v146 + 72) = v154;
  *(void *)(v146 + 80) = v153;
  *(unsigned char *)(v146 + 88) = v152;
  *(unsigned char *)(v146 + 89) = v149;
  *(unsigned char *)(v146 + 90) = v148;
  swift_beginAccess();
  *(void *)(v146 + 96) = v130;
  return v146;
}

uint64_t sub_1C045FAD8(uint64_t a1)
{
  uint64_t v105 = a1;
  char v106 = 0;
  v107[6] = *MEMORY[0x1E4F143B8];
  uint64_t v91 = *v1;
  swift_beginAccess();
  uint64_t v2 = v1[12];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  char v87 = sub_1C0EE0AF4(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v86 = sub_1C0EE09CC(0, v3, 0, v4);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v90 = v2;
  uint64_t v89 = v5;
  if (!v5)
  {
LABEL_29:
    sub_1C04611AC();
    uint64_t v48 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(v48 + 16);
    uint64_t v101 = v48;
    if (v49)
    {
      unint64_t v50 = (unsigned __int8 *)(v48 + 90);
      uint64_t v51 = v87;
      do
      {
        uint64_t v104 = *(void *)(v50 - 58);
        uint64_t v52 = *(void *)(v50 - 50);
        uint64_t v53 = *(void *)(v50 - 42);
        uint64_t v54 = *(void *)(v50 - 34);
        char v55 = *(v50 - 26);
        uint64_t v56 = *(void *)(v50 - 18);
        uint64_t v57 = *(void *)(v50 - 10);
        char v58 = *(v50 - 2);
        LODWORD(v103) = *(v50 - 1);
        LODWORD(v102) = *v50;
        char v106 = (void *)v52;
        swift_bridgeObjectRetain();
        uint64_t v105 = v53;
        sub_1BFEF6828(v53, v54, v55);
        sub_1BFEF6828(v56, v57, v58);
        unint64_t v60 = v51[2];
        unint64_t v59 = v51[3];
        if (v60 >= v59 >> 1) {
          uint64_t v51 = sub_1C0EE0AF4((void *)(v59 > 1), v60 + 1, 1, v51);
        }
        v50 += 72;
        _OWORD v51[2] = v60 + 1;
        uint64_t v61 = &v51[8 * v60];
        uint64_t v62 = (uint64_t)v106;
        v61[4] = v104;
        v61[5] = v62;
        v61[6] = v105;
        v61[7] = v54;
        *((unsigned char *)v61 + 64) = v55;
        v61[9] = v56;
        v61[10] = v57;
        *((unsigned char *)v61 + 88) = v58;
        *((unsigned char *)v61 + 89) = v103;
        *((unsigned char *)v61 + 90) = v102;
        --v49;
      }
      while (v49);
    }
    else
    {
      uint64_t v51 = v87;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = v51[2];
    if (v63)
    {
      uint64_t v64 = v85;
      swift_retain();
      swift_bridgeObjectRetain();
      char v87 = v51;
      char v65 = (unsigned __int8 *)v51 + 90;
      do
      {
        uint64_t v67 = *(void *)(v65 - 42);
        uint64_t v68 = *(void *)(v65 - 34);
        unsigned int v69 = *(v65 - 26);
        uint64_t v70 = *(void *)(v65 - 18);
        uint64_t v105 = *(void *)(v65 - 10);
        char v106 = (void *)v70;
        LODWORD(v104) = *(v65 - 2);
        int v71 = *(v65 - 1);
        int v100 = *v65;
        uint64_t v72 = swift_allocObject();
        swift_beginAccess();
        uint64_t v74 = v64[2];
        uint64_t v73 = v64[3];
        swift_beginAccess();
        *(void *)(v72 + 16) = v74;
        *(void *)(v72 + 24) = v73;
        uint64_t v99 = v73;
        uint64_t v75 = v64[5];
        uint64_t v76 = v64;
        *(void *)(v72 + 32) = v64[4];
        *(void *)(v72 + 40) = v75;
        uint64_t v98 = v75;
        uint64_t v103 = v67;
        uint64_t v102 = v68;
        uint64_t v77 = v68;
        char v78 = v69;
        LODWORD(v101) = v69;
        if (v69 >= 0xFE)
        {
          uint64_t v67 = v76[6];
          uint64_t v77 = v76[7];
          char v78 = *((unsigned char *)v76 + 64);
          sub_1BFEF6828(v67, v77, v78);
        }
        *(void *)(v72 + 48) = v67;
        *(void *)(v72 + 56) = v77;
        uint64_t v80 = v105;
        uint64_t v79 = (uint64_t)v106;
        unsigned int v81 = v104;
        *(unsigned char *)(v72 + 64) = v78;
        if (v81 >= 0xFE)
        {
          uint64_t v79 = v76[9];
          uint64_t v80 = v76[10];
          LOBYTE(v81) = *((unsigned char *)v76 + 88);
          sub_1BFEF6828(v79, v80, v81);
        }
        *(void *)(v72 + 72) = v79;
        *(void *)(v72 + 80) = v80;
        *(unsigned char *)(v72 + 88) = v81;
        if (v71 == 2) {
          LOBYTE(v71) = *((unsigned char *)v76 + 89);
        }
        *(unsigned char *)(v72 + 89) = v71;
        char v82 = v100;
        if (v100 == 2) {
          char v82 = *((unsigned char *)v76 + 90);
        }
        v65 += 64;
        *(unsigned char *)(v72 + 90) = v82;
        swift_beginAccess();
        uint64_t v66 = v76[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v103, v102, v101);
        sub_1BFEF6828((uint64_t)v106, v105, v104);
        swift_bridgeObjectRetain();
        swift_release();
        swift_beginAccess();
        *(void *)(v72 + 96) = v66;
        uint64_t v64 = (void *)v72;
        --v63;
      }
      while (v63);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v72 = (uint64_t)v85;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v72;
  }
  uint64_t v88 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
LABEL_5:
  if (v6 >= *(void *)(v2 + 16)) {
    goto LABEL_51;
  }
  uint64_t v11 = v88 + (v6 << 6);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  uint64_t v14 = *(void *)(v11 + 16);
  uint64_t v15 = *(void *)(v11 + 24);
  int v16 = *(unsigned __int8 *)(v11 + 32);
  uint64_t v7 = *(void *)(v11 + 40);
  uint64_t v8 = *(void *)(v11 + 48);
  int v17 = *(unsigned __int8 *)(v11 + 56);
  int v93 = *(unsigned __int8 *)(v11 + 57);
  int v94 = *(unsigned __int8 *)(v11 + 58);
  swift_bridgeObjectRetain();
  uint64_t v99 = v14;
  uint64_t v102 = v15;
  LODWORD(v101) = v16;
  sub_1BFEF6828(v14, v15, v16);
  int v100 = v17;
  sub_1BFEF6828(v7, v8, v17);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  uint64_t v92 = v12;
  v107[0] = v12;
  v107[1] = v13;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1BFEF53C0(v107);
  swift_bridgeObjectRelease();
  uint64_t v104 = *(void *)(v18 + 16);
  if (!v104)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = v100;
    uint64_t v10 = v99;
    uint64_t v2 = v90;
    goto LABEL_4;
  }
  uint64_t v98 = v13;
  uint64_t v95 = v8;
  uint64_t v96 = v7;
  unint64_t v97 = v6;
  unint64_t v19 = 0;
  uint64_t v20 = (uint64_t *)(v18 + 64);
  while (1)
  {
    if (v19 >= *(void *)(v18 + 16))
    {
      __break(1u);
LABEL_51:
      __break(1u);
    }
    uint64_t v103 = *(v20 - 2);
    uint64_t v21 = *(v20 - 1);
    uint64_t v22 = *v20;
    char v23 = *(unsigned char *)(v21 + 32);
    unsigned int v24 = v23 & 0x3F;
    unint64_t v25 = (unint64_t)((1 << v23) + 63) >> 6;
    size_t v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    unint64_t v28 = (uint64_t *)swift_slowAlloc();
    bzero(v28, v26);
    uint64_t v32 = v25;
    BOOL v30 = v106;
    uint64_t v31 = sub_1BFEFB09C((uint64_t)v28, v32, v21, v105);
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_53;
    }
    char v106 = 0;
    MEMORY[0x1C18C9B00](v28, -1, -1);
LABEL_18:
    char v33 = sub_1BFEFAE14(v31, v21);
    swift_release();
    if (v33 & 1) != 0 && (sub_1BFEFB810(v105, v22))
    {
      swift_bridgeObjectRelease();
      if (v103 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v99, v102, v101);
        uint64_t v7 = v96;
        uint64_t v8 = v95;
        sub_1BFEF6828(v96, v95, v100);
        uint64_t v41 = v87;
        unint64_t v43 = v87[2];
        unint64_t v42 = v87[3];
        uint64_t v2 = v90;
        unint64_t v6 = v97;
        if (v43 >= v42 >> 1) {
          uint64_t v41 = sub_1C0EE0AF4((void *)(v42 > 1), v43 + 1, 1, v87);
        }
        char v44 = v94;
        char v45 = v93;
        uint64_t v46 = v92;
        _OWORD v41[2] = v43 + 1;
        char v87 = v41;
        char v47 = &v41[8 * v43];
        v47[4] = v46;
        uint64_t v10 = v99;
        v47[5] = v98;
        uint64_t v47[6] = v10;
        v47[7] = v102;
        *((unsigned char *)v47 + 64) = v101;
        v47[9] = v7;
        v47[10] = v8;
        char v9 = v100;
        *((unsigned char *)v47 + 88) = v100;
        *((unsigned char *)v47 + 89) = v45;
        *((unsigned char *)v47 + 90) = v44;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v99, v102, v101);
        uint64_t v7 = v96;
        uint64_t v8 = v95;
        sub_1BFEF6828(v96, v95, v100);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v34 = v86;
        unint64_t v36 = v86[2];
        unint64_t v35 = v86[3];
        uint64_t v2 = v90;
        unint64_t v6 = v97;
        if (v36 >= v35 >> 1) {
          char v34 = sub_1C0EE09CC((void *)(v35 > 1), v36 + 1, 1, v86);
        }
        char v37 = v94;
        char v38 = v93;
        uint64_t v39 = v92;
        v34[2] = v36 + 1;
        uint64_t v86 = v34;
        unint64_t v40 = &v34[9 * v36];
        uint64_t v40[4] = v39;
        uint64_t v10 = v99;
        v40[5] = v98;
        v40[6] = v10;
        v40[7] = v102;
        *((unsigned char *)v40 + 64) = v101;
        v40[9] = v7;
        v40[10] = v8;
        char v9 = v100;
        *((unsigned char *)v40 + 88) = v100;
        *((unsigned char *)v40 + 89) = v38;
        *((unsigned char *)v40 + 90) = v37;
        v40[12] = v103;
        swift_bridgeObjectRelease();
      }
LABEL_4:
      ++v6;
      sub_1BFEF68AC(v10, v102, v101);
      sub_1BFEF68AC(v7, v8, v9);
      if (v6 == v89)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      goto LABEL_5;
    }
    ++v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 5;
    if (v104 == v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v90;
      unint64_t v6 = v97;
      uint64_t v7 = v96;
      uint64_t v8 = v95;
      char v9 = v100;
      uint64_t v10 = v99;
      goto LABEL_4;
    }
  }
  unint64_t v28 = &v84;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  bzero((char *)&v84 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v26);
  uint64_t v29 = v25;
  BOOL v30 = v106;
  uint64_t v31 = sub_1BFEFB09C((uint64_t)&v84 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v29, v21, v105);
  swift_bridgeObjectRelease();
  if (!v30)
  {
    char v106 = 0;
    goto LABEL_18;
  }
  swift_willThrow();

  __break(1u);
LABEL_53:

  uint64_t result = MEMORY[0x1C18C9B00](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C0460594()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 72);
  __int16 v14 = *(_WORD *)(v0 + 89);
  char v6 = *(unsigned char *)(v0 + 64);
  char v7 = *(unsigned char *)(v0 + 88);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v9 + 16) = v12;
  *(void *)(v9 + 24) = v1;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v2;
  *(void *)(v9 + 48) = v3;
  *(void *)(v9 + 56) = v4;
  *(unsigned char *)(v9 + 64) = v6;
  *(void *)(v9 + 72) = v13;
  *(void *)(v9 + 80) = v5;
  *(unsigned char *)(v9 + 88) = v7;
  *(_WORD *)(v9 + 89) = v14;
  swift_beginAccess();
  *(void *)(v9 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v3, v4, v6);
  sub_1BFEF6828(v13, v5, v7);
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t FormatWebEmbedNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_1BFEF68AC(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatWebEmbedNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_1BFEF68AC(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C04607A0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed23FormatWebEmbedNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatWebEmbedNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbedNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.Selector.errorCornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t FormatWebEmbedNodeStyle.Selector.showsLoadingSpinner.getter()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_1C04607F8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 64);
  return result;
}

uint64_t _s8NewsFeed23FormatWebEmbedNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unsigned int v7 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  unsigned int v10 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v23 = *(void *)(a2 + 40);
  uint64_t v24 = *(void *)(a2 + 48);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 56);
  int v21 = *(unsigned __int8 *)(a2 + 57);
  int v22 = *(unsigned __int8 *)(a1 + 57);
  int v19 = *(unsigned __int8 *)(a2 + 58);
  int v20 = *(unsigned __int8 *)(a1 + 58);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v12 = sub_1C1520A9C();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (v4 > 0xFD)
  {
    if (v10 > 0xFD) {
      goto LABEL_11;
    }
LABEL_9:
    sub_1BFEF6828(v9, v8, v10);
    sub_1BFEF68AC(v2, v3, v4);
    uint64_t v14 = v9;
    uint64_t v15 = v8;
    char v16 = v10;
LABEL_17:
    sub_1BFEF68AC(v14, v15, v16);
    return 0;
  }
  uint64_t v28 = v2;
  uint64_t v29 = v3;
  char v30 = v4;
  if (v10 > 0xFD)
  {
    sub_1BFF046A0(v2, v3, v4);
    sub_1BFF046A0(v2, v3, v4);
    sub_1BFF04738(v2, v3, v4);
    goto LABEL_9;
  }
  uint64_t v25 = v9;
  uint64_t v26 = v8;
  char v27 = v10;
  sub_1BFEF6828(v2, v3, v4);
  sub_1BFF046A0(v2, v3, v4);
  char v17 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v28, (uint64_t)&v25);
  sub_1BFF04738(v28, v29, v30);
  sub_1BFEF68AC(v2, v3, v4);
  if ((v17 & 1) == 0) {
    return 0;
  }
LABEL_11:
  if (v7 <= 0xFD)
  {
    uint64_t v28 = v6;
    uint64_t v29 = v5;
    char v30 = v7;
    if (v11 <= 0xFD)
    {
      uint64_t v25 = v23;
      uint64_t v26 = v24;
      char v27 = v11;
      sub_1BFEF6828(v6, v5, v7);
      sub_1BFF046A0(v6, v5, v7);
      char v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v28, (uint64_t)&v25);
      sub_1BFF04738(v28, v29, v30);
      sub_1BFEF68AC(v6, v5, v7);
      if ((v18 & 1) == 0) {
        return 0;
      }
      goto LABEL_21;
    }
    sub_1BFF046A0(v6, v5, v7);
    sub_1BFF046A0(v6, v5, v7);
    sub_1BFF04738(v6, v5, v7);
    goto LABEL_16;
  }
  if (v11 <= 0xFD)
  {
LABEL_16:
    sub_1BFEF6828(v23, v24, v11);
    sub_1BFEF68AC(v6, v5, v7);
    uint64_t v14 = v23;
    uint64_t v15 = v24;
    char v16 = v11;
    goto LABEL_17;
  }
LABEL_21:
  if (v22 == 2)
  {
    if (v21 == 2) {
      goto LABEL_26;
    }
    return 0;
  }
  uint64_t result = 0;
  if (v21 != 2 && ((((v22 & 1) == 0) ^ v21) & 1) != 0)
  {
LABEL_26:
    if (v20 == 2)
    {
      if (v19 == 2) {
        return 1;
      }
    }
    else if (v19 != 2 && ((((v20 & 1) == 0) ^ v19) & 1) != 0)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C0460B08(uint64_t a1)
{
  uint64_t result = sub_1C0460C40(&qword_1EA19B7C0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0460B4C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C0460C40(&qword_1EB88AFE0);
  uint64_t result = sub_1C0460C40(&qword_1EB867550);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0460BB4(void *a1)
{
  a1[1] = sub_1C0460C40(&qword_1EB88AFE0);
  a1[2] = sub_1C0460C40(&qword_1EB867550);
  uint64_t result = sub_1C0460C40(&qword_1EA19B7C8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0460C40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatWebEmbedNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0460C80(uint64_t a1)
{
  unint64_t result = sub_1C0460CA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0460CA8()
{
  unint64_t result = qword_1EA19B7D0;
  if (!qword_1EA19B7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7D0);
  }
  return result;
}

unint64_t sub_1C0460CFC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C00722A0();
  unint64_t result = sub_1C00722F4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0460D2C(void *a1)
{
  a1[1] = sub_1C00722A0();
  a1[2] = sub_1C00722F4();
  unint64_t result = sub_1C0460D64();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0460D64()
{
  unint64_t result = qword_1EA19B7D8;
  if (!qword_1EA19B7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7D8);
  }
  return result;
}

uint64_t sub_1C0460DB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0460E08@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatWebEmbedNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatWebEmbedNodeStyle);
}

uint64_t dispatch thunk of FormatWebEmbedNodeStyle.__allocating_init(identifier:class:cornerRadius:errorCornerRadius:ignoresSmartInvertColors:showsLoadingSpinner:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t assignWithCopy for FormatWebEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a2 + 24);
      sub_1BFF046A0(v11, v12, *(unsigned char *)(a2 + 32));
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v12;
      char v15 = *(unsigned char *)(a1 + 32);
      *(unsigned char *)(a1 + 32) = v6;
      sub_1BFF04738(v13, v14, v15);
    }
    else
    {
      sub_1C02D0F84(a1 + 16);
      char v8 = *(unsigned char *)(a2 + 32);
      *uint64_t v4 = *v5;
      *(unsigned char *)(a1 + 32) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    sub_1BFF046A0(v9, v10, *(unsigned char *)(a2 + 32));
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *uint64_t v4 = v7;
  }
  char v16 = (_OWORD *)(a1 + 40);
  char v17 = (_OWORD *)(a2 + 40);
  unsigned int v18 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v18 <= 0xFD)
    {
      uint64_t v23 = *(void *)(a2 + 40);
      uint64_t v24 = *(void *)(a2 + 48);
      sub_1BFF046A0(v23, v24, *(unsigned char *)(a2 + 56));
      uint64_t v25 = *(void *)(a1 + 40);
      uint64_t v26 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v23;
      *(void *)(a1 + 48) = v24;
      char v27 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v18;
      sub_1BFF04738(v25, v26, v27);
    }
    else
    {
      sub_1C02D0F84(a1 + 40);
      char v20 = *(unsigned char *)(a2 + 56);
      _OWORD *v16 = *v17;
      *(unsigned char *)(a1 + 56) = v20;
    }
  }
  else if (v18 <= 0xFD)
  {
    uint64_t v21 = *(void *)(a2 + 40);
    uint64_t v22 = *(void *)(a2 + 48);
    sub_1BFF046A0(v21, v22, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 40) = v21;
    *(void *)(a1 + 48) = v22;
    *(unsigned char *)(a1 + 56) = v18;
  }
  else
  {
    long long v19 = *v17;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    _OWORD *v16 = v19;
  }
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  return a1;
}

__n128 __swift_memcpy59_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 43) = *(_OWORD *)(a2 + 43);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormatWebEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a2 + 16);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + 32);
  if (v7 > 0xFD)
  {
    sub_1C02D0F84(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *v5;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1BFF04738(v8, v9, v6);
LABEL_6:
  uint64_t v10 = (_OWORD *)(a2 + 40);
  unsigned int v11 = *(unsigned __int8 *)(a1 + 56);
  if (v11 <= 0xFD)
  {
    unsigned int v12 = *(unsigned __int8 *)(a2 + 56);
    if (v12 <= 0xFD)
    {
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 40) = *v10;
      *(unsigned char *)(a1 + 56) = v12;
      sub_1BFF04738(v13, v14, v11);
      goto LABEL_11;
    }
    sub_1C02D0F84(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v10;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_11:
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  return a1;
}

ValueMetadata *type metadata accessor for FormatWebEmbedNodeStyle.Selector()
{
  return &type metadata for FormatWebEmbedNodeStyle.Selector;
}

void sub_1C0461148()
{
  if (!qword_1EB86AE70)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86AE70);
    }
  }
}

void sub_1C04611AC()
{
  if (!qword_1EB868680)
  {
    sub_1C0461208();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB868680);
    }
  }
}

unint64_t sub_1C0461208()
{
  unint64_t result = qword_1EB867548;
  if (!qword_1EB867548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867548);
  }
  return result;
}

void *sub_1C046125C(double *a1, uint64_t a2)
{
  long long v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
  sub_1C0181BEC(0);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v36 = *(void *)(*(void *)(v5 - 8) + 72);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  uint64_t v9 = (void *)(v8 + v7);
  uint64_t v34 = a2;
  if (a2)
  {
    uint64_t v11 = *(void *)(a2 + 32);
    unint64_t v10 = *(void *)(a2 + 40);
    *(void *)char v37 = sub_1C0460594();
    memset(&v37[8], 0, 32);
    uint64_t v38 = 0;
    long long v39 = xmmword_1C154A460;
    a2 = v11;
    uint64_t v12 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)v37, v12 + 16);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v13 = sub_1C139486C;
    uint64_t v12 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
  char v15 = (uint64_t (**)())((char *)v9 + *(int *)(v14 + 24));
  *char v15 = v13;
  v15[1] = (uint64_t (*)())v12;
  uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  *(void *)(v8 + v7) = a2;
  v9[2] = 0;
  void v9[3] = 0;
  v9[1] = v10;
  char v17 = (char *)v9 + *(int *)(v14 + 28);
  *(void *)char v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = -1;
  unsigned int v18 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v18(v9, 0, 1, v14);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v8, v42);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v19 = swift_allocObject();
  *(void *)(inited + 32) = v19;
  *(void *)(v19 + 48) = v43;
  long long v20 = v42[1];
  *(_OWORD *)(v19 + 16) = v42[0];
  *(_OWORD *)(v19 + 32) = v20;
  uint64_t v21 = v36;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152C7F0;
  uint64_t v23 = (void *)(v22 + v7);
  sub_1C0433600(1701869908, 0xE400000000000000, 0x65626D4520626557, 0xE900000000000064, v23);
  v18(v23, 0, 1, v14);
  if (v34)
  {
    sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, *(unsigned char *)(v34 + 89), (void *)((char *)v23 + v36));
    v18((void *)((char *)v23 + v36), 0, 1, v14);
    char v24 = *(unsigned char *)(v34 + 90);
  }
  else
  {
    char v24 = 2;
    sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, 2, (void *)((char *)v23 + v36));
    uint64_t v21 = v36;
    v18((void *)((char *)v23 + v36), 0, 1, v14);
  }
  uint64_t v25 = (void *)((char *)v23 + 2 * v21);
  sub_1C0432B74(0xD000000000000015, 0x80000001C1610300, v24, v25);
  v18(v25, 0, 1, v14);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v22, v37);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v26 = swift_allocObject();
  *(void *)(inited + 72) = v26;
  *(void *)(v26 + 48) = *(void *)&v37[32];
  long long v27 = *(_OWORD *)&v37[16];
  *(_OWORD *)(v26 + 16) = *(_OWORD *)v37;
  *(_OWORD *)(v26 + 32) = v27;
  if (v34)
  {
    uint64_t v28 = *(void *)(v34 + 48);
    uint64_t v29 = *(void *)(v34 + 56);
    char v30 = *(unsigned char *)(v34 + 64);
    sub_1BFEF6828(v28, v29, v30);
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    char v30 = -2;
  }
  v40[0] = v28;
  v40[1] = v29;
  char v41 = v30;
  uint64_t v31 = sub_1C108626C(a1, (uint64_t)v40);
  sub_1BFEF68AC(v28, v29, v30);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  *(void *)(inited + 112) = v31;
  uint64_t v32 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v32;
}

uint64_t sub_1C046181C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0461864()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

void *sub_1C04618A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = MEMORY[0x1E4FBC868];
  *(void *)((char *)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders) = MEMORY[0x1E4FBC868];
  void v5[2] = a3;
  sub_1BFF771CC(a1, (uint64_t)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext);
  if (a4)
  {
    type metadata accessor for FormatSlot();
    swift_allocObject();
    swift_retain();
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v20 = a5;
    uint64_t v13 = sub_1C150FB14(v12);
    uint64_t v14 = v13[2];
    uint64_t v15 = v13[3];
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C1067E40((uint64_t)v13, v14, v15, isUniquelyReferenced_nonNull_native);
    a5 = v20;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(void *)((char *)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots) = a2;
  *((unsigned char *)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) = a4 & 1;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF7712C(a1);
  v6[3] = v11;
  v6[4] = v11;
  v6[5] = v17;
  void v6[6] = a2;
  v6[7] = v11;
  v6[8] = v11;
  v6[9] = v11;
  v6[10] = v18;
  *(void *)((char *)v6 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy) = a5;
  return v6;
}

uint64_t sub_1C0461A24(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v12 = a1[3];
  uint64_t v15 = a1[4];
  uint64_t v14 = a1[5];
  uint64_t v16 = v2 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
  swift_beginAccess();
  sub_1BFF771CC(v16, (uint64_t)v6);
  sub_1BFC66384((uint64_t)(v6 + 8), (uint64_t)v30);
  uint64_t v24 = v11;
  uint64_t v25 = v10;
  uint64_t v26 = v13;
  uint64_t v27 = v12;
  uint64_t v28 = v15;
  uint64_t v29 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0627620((uint64_t)v30, &v24, (uint64_t)v9);
  sub_1BFF7712C((uint64_t)v6);
  sub_1BFE4DBE0();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C15320E0;
  uint64_t v24 = v11;
  uint64_t v25 = v10;
  uint64_t v26 = v13;
  uint64_t v27 = v12;
  uint64_t v28 = v15;
  uint64_t v29 = v14;
  type metadata accessor for FormatSlot();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v17 + 32) = sub_1C150FD98(&v24);
  uint64_t v24 = v17;
  sub_1C151EBEC();
  uint64_t v18 = v24;
  sub_1BFF771CC((uint64_t)v9, (uint64_t)v6);
  uint64_t v24 = v18;
  sub_1BFF772A4(0, &qword_1EB8632D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlot, MEMORY[0x1E4FBB320]);
  sub_1C0462120();
  sub_1BFFBA7B4(&qword_1EB862D50, (void (*)(uint64_t))type metadata accessor for FormatSlot);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatNodeAuxiliaryBinder(0);
  uint64_t v20 = swift_allocObject();
  sub_1C04621A8((uint64_t)v6, v20 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext);
  *(void *)(v20 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_slots) = v19;
  uint64_t v21 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = *v21;
  *uint64_t v21 = 0x8000000000000000;
  sub_1C1066C0C(v20, v11, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v21 = v30[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_1BFF7712C((uint64_t)v9);
}

Swift::Int sub_1C0461D48(Swift::String_optional *a1)
{
  uint64_t v3 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)((char *)&a1->value._countAndFlagsBits + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  int v7 = *((unsigned __int8 *)&a1[3].value._countAndFlagsBits
       + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  if (v7 != 255)
  {
    if (v7)
    {
      uint64_t v11 = *v6;
      uint64_t v10 = v6[1];
      uint64_t v12 = v6[4];
      uint64_t v13 = (void *)v6[5];
      uint64_t v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
      swift_beginAccess();
      uint64_t v15 = *v14;
      if (*(void *)(v15 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v16 = sub_1BFEF2D8C(v11, v10);
        if (v17)
        {
          uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v19 = v18
              + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
          swift_beginAccess();
          sub_1BFF771CC(v19, (uint64_t)v5);
          v20.value._uint64_t countAndFlagsBits = v12;
          v20.value._object = v13;
          Swift::Int v9 = GroupLayoutBindingContext.count(forSlotIdentifier:)(v20);
          swift_release();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
    }
    return 0;
  }
  uint64_t v8 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
  swift_beginAccess();
  sub_1BFF771CC(v8, (uint64_t)v5);
  Swift::Int v9 = GroupLayoutBindingContext.count(forSlotIdentifier:)(a1[2]);
LABEL_3:
  sub_1BFF7712C((uint64_t)v5);
  return v9;
}

uint64_t FormatNodeBinder.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF7712C(v0 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0461FC8()
{
  return type metadata accessor for FormatNodeBinder(0);
}

uint64_t method lookup function for FormatNodeBinder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatNodeBinder);
}

uint64_t sub_1C0461FE8()
{
  sub_1BFF7712C(v0 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C046205C()
{
  return type metadata accessor for FormatNodeAuxiliaryBinder(0);
}

uint64_t type metadata accessor for FormatNodeAuxiliaryBinder(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB862FA8);
}

uint64_t sub_1C0462084()
{
  uint64_t result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C0462120()
{
  unint64_t result = qword_1EB8632E0;
  if (!qword_1EB8632E0)
  {
    sub_1BFF772A4(255, &qword_1EB8632D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlot, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8632E0);
  }
  return result;
}

uint64_t sub_1C04621A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C046220C()
{
  return swift_deallocObject();
}

uint64_t sub_1C046221C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0462254()
{
  return swift_deallocObject();
}

uint64_t sub_1C0462264()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for FormatInspectionString()
{
  return &type metadata for FormatInspectionString;
}

BOOL static FormatGroupBinding.URL.== infix(_:_:)(char *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((*a1 & 0x80000000) == 0) {
    return (v3 & 0x80u) == 0 && v2 == v3;
  }
  return (v3 & 0x80) != 0 && ((v3 ^ v2) & 1) == 0;
}

unint64_t sub_1C04622D0(uint64_t a1)
{
  unint64_t result = sub_1C04622F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04622F8()
{
  unint64_t result = qword_1EA19B7E0;
  if (!qword_1EA19B7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7E0);
  }
  return result;
}

BOOL sub_1C046234C(char *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((*a1 & 0x80000000) == 0) {
    return (v3 & 0x80u) == 0 && v2 == v3;
  }
  return (v3 & 0x80) != 0 && ((v3 ^ v2) & 1) == 0;
}

unint64_t sub_1C046238C(void *a1)
{
  a1[1] = sub_1C04623C4();
  a1[2] = sub_1C0462418();
  unint64_t result = sub_1C046246C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C04623C4()
{
  unint64_t result = qword_1EA19B7E8;
  if (!qword_1EA19B7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7E8);
  }
  return result;
}

unint64_t sub_1C0462418()
{
  unint64_t result = qword_1EA19B7F0;
  if (!qword_1EA19B7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B7F0);
  }
  return result;
}

unint64_t sub_1C046246C()
{
  unint64_t result = qword_1EA19B7F8[0];
  if (!qword_1EA19B7F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA19B7F8);
  }
  return result;
}

uint64_t sub_1C04624C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatGroupBinding.URL.init(from:)(a1, a2);
}

uint64_t sub_1C04624D8(void *a1)
{
  return FormatGroupBinding.URL.encode(to:)(a1);
}

uint64_t _s3URLOwet_1(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3F) {
    goto LABEL_17;
  }
  if (a2 + 193 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 193) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 193;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 193;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 193;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
  if (v6 >= 0x3E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *_s3URLOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 193 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 193) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3E)
  {
    unsigned int v6 = ((a2 - 63) >> 8) + 1;
    *unint64_t result = a2 - 63;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0462668);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

unsigned char *sub_1C0462690(unsigned char *result, char a2)
{
  *unint64_t result = *result & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.URL()
{
  return &type metadata for FormatGroupBinding.URL;
}

uint64_t SharingIntent.activityProvider.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SharingIntent.onPerformBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_retain();
  return v1;
}

uint64_t SharingIntent.init(activityProvider:onPerformBlock:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t destroy for SharingIntent()
{
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t _s8NewsFeed13SharingIntentVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SharingIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SharingIntent(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SharingIntent()
{
  return &type metadata for SharingIntent;
}

uint64_t sub_1C0462834()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C04628D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = v7 + 7;
  unint64_t v11 = ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = ~v8;
    unint64_t v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v16(a1, a2, v5);
    unint64_t v17 = ((unint64_t)a2 + v9) & v15;
    v16((uint64_t *)(((unint64_t)v4 + v9) & v15), (uint64_t *)v17, v5);
    *(void *)((v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v10 + v17) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C0462A20(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v5((*(void *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0462AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0462B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0462C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0462D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0462DE4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = v6 + 7;
  if (v7 < a2)
  {
    unint64_t v11 = ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v12 = a2 - v7;
    uint64_t v13 = v11 & 0xFFFFFFF8;
    if ((v11 & 0xFFFFFFF8) != 0) {
      unsigned int v14 = 2;
    }
    else {
      unsigned int v14 = v12 + 1;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v11);
        if (!v17) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v11);
        if (v17) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0462F48);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v11);
        if (!v17) {
          break;
        }
LABEL_22:
        int v19 = v17 - 1;
        if (v13)
        {
          int v19 = 0;
          LODWORD(v13) = *a1;
        }
        return v7 + (v13 | v19) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v20 = *(void *)((v10 + (((unint64_t)a1 + v9) & ~v8)) & 0xFFFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v20) = -1;
  }
  return (v20 + 1);
}

void sub_1C0462F5C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = v9 + v10;
  uint64_t v12 = (v9 + v10) & ~v10;
  uint64_t v13 = v9 + 7;
  size_t v14 = ((v13 + v12) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v18)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v23 = (void *)((v13 + ((unint64_t)&a1[v11] & ~v10)) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v24 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v24 = a2 - 1;
              }
              *uint64_t v23 = v24;
            }
            else
            {
              uint64_t v22 = *(void (**)(void))(v6 + 56);
              v22();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v15 = a3 - v8;
    if (((v13 + v12) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (v14) {
    int v20 = 1;
  }
  else {
    int v20 = v19;
  }
  if (v14)
  {
    int v21 = ~v8 + a2;
    bzero(a1, v14);
    *(_DWORD *)a1 = v21;
  }
  switch(v18)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C046315CLL);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for DebugNewsroomContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C046319C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C04632F8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C0463510);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for DebugNewsroomWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0463550@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v24 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v28 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugNewsroomWrapper.DynamicKey();
  swift_getWitnessTable();
  uint64_t v29 = sub_1C152072C();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  BOOL v9 = (char *)&v20 - v8;
  uint64_t v27 = a3;
  uint64_t v10 = type metadata accessor for DebugNewsroomWrapper();
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unsigned int v12 = (char *)&v20 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  int v13 = v34;
  sub_1C1520EBC();
  if (v13)
  {
    uint64_t v19 = (uint64_t)a1;
  }
  else
  {
    uint64_t v34 = a1;
    int v21 = v12;
    uint64_t v22 = v10;
    uint64_t v14 = v26;
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(a2, v27);
    uint64_t v31 = v15;
    uint64_t v32 = 0;
    char v33 = 1;
    unsigned int v16 = v28;
    sub_1C15206EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v29);
    int v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v16, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v25, v18, v22);
    uint64_t v19 = (uint64_t)v34;
  }
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

uint64_t sub_1C046388C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  type metadata accessor for DebugNewsroomWrapper.DynamicKey();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152083C();
  v10[0] = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  void v10[2] = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v10[3] = v8;
  v10[4] = 0;
  char v11 = 1;
  sub_1C152080C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v10[0] + 8))(v7, v5);
}

uint64_t sub_1C0463A40()
{
  return sub_1C152088C();
}

void sub_1C0463A8C(uint64_t a1@<X8>)
{
  sub_1C0463880();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v4 & 1;
}

uint64_t sub_1C0463AC8()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1C0463AD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C0463A40();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v4 & 1;
  return result;
}

uint64_t sub_1C0463B10(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0463B64(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C0463BB8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0463550(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C0463BD8(void *a1, uint64_t a2)
{
  return sub_1C046388C(a1, a2);
}

uint64_t type metadata accessor for DebugNewsroomWrapper.DynamicKey()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t initializeWithCopy for DebugFormatFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TraversalOnlyEncoder.AnyCodingKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for TraversalOnlyEncoder.AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatFile(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatFile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C0463D7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0463D98()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0463DB4()
{
  *(void *)(swift_allocObject() + 16) = 0x7FFFFFFFFFFFFFFFLL;
  sub_1BFCA06D8();
  swift_allocObject();
  uint64_t result = sub_1C151936C();
  qword_1EA19B980 = result;
  return result;
}

uint64_t FeedRebuildPolicy.init(groupLimit:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1BFCA06D8();
  swift_allocObject();
  uint64_t result = sub_1C151936C();
  *a2 = result;
  return result;
}

uint64_t static FeedRebuildPolicy.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA194460 != -1) {
    swift_once();
  }
  *a1 = qword_1EA19B980;
  return swift_retain();
}

uint64_t sub_1C0463F1C()
{
  return swift_deallocObject();
}

void sub_1C0463F2C(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

uint64_t FeedRebuildPolicy.init(groupLimitAccessor:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C0463F40()
{
  return swift_deallocObject();
}

uint64_t _s8NewsFeed23FormatGroupNodeMaskPathO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v12 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  int v19 = *(unsigned __int8 *)(a2 + 64);
  v75[0] = *(void *)a1;
  v75[1] = v2;
  v75[2] = v4;
  v75[3] = v5;
  v75[4] = v6;
  v75[5] = v7;
  v75[6] = v8;
  v75[7] = v9;
  char v76 = v10;
  uint64_t v77 = v12;
  uint64_t v78 = v11;
  uint64_t v79 = v14;
  uint64_t v80 = v13;
  uint64_t v81 = v16;
  uint64_t v82 = v15;
  uint64_t v83 = v18;
  uint64_t v84 = v17;
  char v85 = v19;
  switch(v10)
  {
    case 1:
      if (v19 != 1) {
        goto LABEL_11;
      }
      uint64_t v22 = v13;
      uint64_t v37 = v16;
      uint64_t v38 = v13;
      char v23 = v4;
      uint64_t v24 = v16;
      uint64_t v25 = v5;
      uint64_t v36 = v15;
      uint64_t v54 = v6;
      uint64_t v57 = v9;
      uint64_t v26 = v7;
      uint64_t v42 = v7;
      uint64_t v27 = v15;
      uint64_t v48 = v8;
      uint64_t v51 = v2;
      uint64_t v28 = v2;
      sub_1BFFE54D0(v12, v11, v14, v22, v24, v27, v18, v17, 1);
      sub_1BFFE54D0(v3, v28, v23, v25, v54, v26, v48, v57, 1);
      sub_1BFFE54D0(v3, v51, v23, v25, v54, v42, v48, v57, 1);
      sub_1BFFE54D0(v12, v11, v14, v38, v37, v36, v18, v17, 1);
      char v35 = sub_1C00ECCC0(v3, v12);
      sub_1C0465408((uint64_t)v75);
      sub_1BFD1EFFC(v12, v11, v14, v38, v37, v36, v18, v17, 1);
      sub_1BFD1EFFC(v3, v51, v23, v25, v54, v42, v48, v57, 1);
      return v35 & 1;
    case 2:
      if (v19 != 2) {
        goto LABEL_11;
      }
      uint64_t v67 = v3;
      uint64_t v68 = v2;
      uint64_t v69 = v4;
      uint64_t v70 = v5;
      uint64_t v71 = v6;
      uint64_t v72 = v7;
      uint64_t v73 = v8;
      uint64_t v74 = v9;
      uint64_t v59 = v12;
      uint64_t v60 = v11;
      uint64_t v61 = v14;
      uint64_t v62 = v13;
      uint64_t v63 = v16;
      uint64_t v64 = v15;
      uint64_t v65 = v18;
      uint64_t v66 = v17;
      uint64_t v30 = v18;
      uint64_t v39 = v18;
      uint64_t v40 = v17;
      char v31 = v4;
      uint64_t v46 = v5;
      uint64_t v49 = v8;
      uint64_t v43 = v7;
      uint64_t v55 = v6;
      uint64_t v58 = v9;
      uint64_t v32 = v7;
      uint64_t v33 = v17;
      uint64_t v34 = v2;
      uint64_t v52 = v2;
      sub_1BFFE54D0(v12, v11, v14, v13, v16, v15, v30, v33, 2);
      sub_1BFFE54D0(v3, v34, v31, v46, v55, v32, v49, v58, 2);
      sub_1BFFE54D0(v3, v52, v31, v46, v55, v43, v49, v58, 2);
      sub_1BFFE54D0(v12, v11, v14, v13, v16, v15, v39, v40, 2);
      char v21 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)&v59);
      sub_1C0465408((uint64_t)v75);
      sub_1BFD1EFFC(v12, v11, v14, v13, v16, v15, v39, v40, 2);
      sub_1BFD1EFFC(v3, v52, v31, v46, v55, v43, v49, v58, 2);
      return v21 & 1;
    case 3:
      if (v19 != 3 || v11 | v12 | v14 | v13 | v16 | v15 | v18 | v17) {
        goto LABEL_11;
      }
      sub_1C0465408((uint64_t)v75);
      char v21 = 1;
      break;
    default:
      if (v19)
      {
LABEL_11:
        sub_1BFFE54D0(v3, v2, v4, v5, v6, v7, v8, v9, v10);
        sub_1BFFE54D0(v12, v11, v14, v13, v16, v15, v18, v17, v19);
        sub_1C0465408((uint64_t)v75);
        char v21 = 0;
      }
      else
      {
        uint64_t v67 = v3;
        uint64_t v68 = v2;
        LOBYTE(v69) = v4;
        uint64_t v59 = v12;
        uint64_t v60 = v11;
        LOBYTE(v61) = v14;
        char v44 = v4;
        uint64_t v45 = v5;
        uint64_t v53 = v6;
        uint64_t v56 = v9;
        uint64_t v41 = v7;
        uint64_t v47 = v8;
        uint64_t v50 = v2;
        uint64_t v20 = v2;
        sub_1BFFE54D0(v12, v11, v14, v13, v16, v15, v18, v17, 0);
        sub_1BFFE54D0(v3, v20, v44, v45, v53, v41, v47, v56, 0);
        sub_1BFFE54D0(v3, v50, v44, v45, v53, v41, v47, v56, 0);
        sub_1BFFE54D0(v12, v11, v14, v13, v16, v15, v18, v17, 0);
        char v21 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)&v59);
        sub_1C0465408((uint64_t)v75);
        sub_1BFD1EFFC(v12, v11, v14, v13, v16, v15, v18, v17, 0);
        sub_1BFD1EFFC(v3, v50, v44, v45, v53, v41, v47, v56, 0);
      }
      break;
  }
  return v21 & 1;
}

unint64_t sub_1C046449C(uint64_t a1)
{
  unint64_t result = sub_1C04644C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C04644C4()
{
  unint64_t result = qword_1EA19B988;
  if (!qword_1EA19B988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B988);
  }
  return result;
}

unint64_t sub_1C0464518(void *a1)
{
  a1[1] = sub_1BFD296D4();
  a1[2] = sub_1C00731E4();
  unint64_t result = sub_1C0464550();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0464550()
{
  unint64_t result = qword_1EA19B990;
  if (!qword_1EA19B990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B990);
  }
  return result;
}

uint64_t destroy for FormatGroupNodeMaskPath(uint64_t a1)
{
  return sub_1BFD1EFFC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatGroupNodeMaskPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1BFFE54D0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for FormatGroupNodeMaskPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1BFFE54D0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1BFD1EFFC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeMaskPath(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1BFD1EFFC(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1C046479C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 2u) {
    return *(unsigned __int8 *)(a1 + 64);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1C04647B4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(void *)(result + 56) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupNodeMaskPath()
{
  return &type metadata for FormatGroupNodeMaskPath;
}

void *sub_1C04647F0(double *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  switch(*(unsigned char *)(a2 + 64))
  {
    case 0:
      uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      uint64_t v60 = *(void *)(a2 + 48);
      uint64_t v62 = *(void *)(a2 + 56);
      uint64_t v58 = *(void *)(a2 + 40);
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v8);
      sub_1C0181BEC(0);
      unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v55 = (void *)(v11 + v10);
      uint64_t v56 = v11;
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v8);
      uint64_t v12 = swift_initStackObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v64 = v2;
      *((void *)&v64 + 1) = v3;
      LOBYTE(v65) = v5;
      sub_1BFFE54D0(v2, v3, v5, v4, v6, v58, v60, v62, 0);
      long long v13 = sub_1C108626C(a1, (uint64_t)&v64);
      uint64_t v14 = v2;
      uint64_t v15 = inited;
      sub_1BFFE54B8(v14, v3, v5, v4, v6, v58, v60, v62, 0);
      *(void *)(v12 + 56) = &type metadata for FormatInspection;
      *(void *)(v12 + 64) = &off_1F1C29D30;
      *(void *)(v12 + 32) = v13;
      uint64_t v16 = sub_1C0233FC8(v12);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v17 = sub_1C131B79C(v16);
      swift_bridgeObjectRelease();
      sub_1C042F458(1701869908, 0xE400000000000000, (uint64_t)v17, 0x522072656E726F43, 0xED00007375696461, v55);
      uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v55, 0, 1, v18);
      sub_1C09BCFA4(1752457552, 0xE400000000000000, 0, 0, v56, &v64);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
    case 1:
      uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      uint64_t v27 = *(void *)a2;
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v26);
      sub_1C0181BEC(0);
      unint64_t v29 = (*(unsigned __int8 *)(*(void *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v26);
      uint64_t v31 = swift_initStackObject();
      *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v64 = v27;
      uint64_t v32 = sub_1C0EB45F4((uint64_t *)&v64);
      *(void *)(v31 + 56) = &type metadata for FormatInspection;
      *(void *)(v31 + 64) = &off_1F1C29D30;
      *(void *)(v31 + 32) = v32;
      uint64_t v33 = sub_1C0233FC8(v31);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v34 = sub_1C131B79C(v33);
      swift_bridgeObjectRelease();
      sub_1C042F458(1701869908, 0xE400000000000000, (uint64_t)v34, 0x50207265697A6542, 0xEB00000000687461, (void *)(v30 + v29));
      uint64_t v35 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v30 + v29, 0, 1, v35);
      sub_1C09BCFA4(1752457552, 0xE400000000000000, 0, 0, v30, &v64);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
    case 2:
      uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      uint64_t v37 = *(void *)a2;
      uint64_t v61 = *(void *)(a2 + 48);
      uint64_t v63 = *(void *)(a2 + 56);
      uint64_t v59 = *(void *)(a2 + 40);
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v36);
      sub_1C0181BEC(0);
      unint64_t v39 = (*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
      uint64_t v57 = (void *)(v40 + v39);
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v36);
      uint64_t v41 = swift_initStackObject();
      *(_OWORD *)(v41 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v64 = v37;
      *((void *)&v64 + 1) = v3;
      *(void *)&long long v65 = v5;
      *((void *)&v65 + 1) = v4;
      uint64_t v66 = v6;
      uint64_t v67 = v59;
      uint64_t v68 = v61;
      uint64_t v69 = v63;
      uint64_t v42 = sub_1C0E83D40((uint64_t *)&v64);
      *(void *)(v41 + 56) = &type metadata for FormatInspection;
      *(void *)(v41 + 64) = &off_1F1C29D30;
      *(void *)(v41 + 32) = v42;
      uint64_t v43 = sub_1C0233FC8(v41);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      char v44 = sub_1C131B79C(v43);
      swift_bridgeObjectRelease();
      sub_1C042F458(1701869908, 0xE400000000000000, (uint64_t)v44, 0x746E656964617247, 0xE800000000000000, v57);
      uint64_t v45 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v57, 0, 1, v45);
      sub_1C09BCFA4(1752457552, 0xE400000000000000, 0, 0, v40, &v64);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
    case 3:
      uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v46);
      sub_1C0181BEC(0);
      unint64_t v48 = (*(unsigned __int8 *)(*(void *)(v47 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v47 - 8) + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
      char v23 = (void *)(v22 + v48);
      uint64_t v24 = v23;
      uint64_t v25 = 1818326607;
      goto LABEL_8;
    default:
      uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v19);
      sub_1C0181BEC(0);
      unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
      char v23 = (void *)(v22 + v21);
      uint64_t v24 = v23;
      uint64_t v25 = 1701736270;
LABEL_8:
      sub_1C0433600(1701869908, 0xE400000000000000, v25, 0xE400000000000000, v24);
      uint64_t v49 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v23, 0, 1, v49);
      sub_1C09BCFA4(1752457552, 0xE400000000000000, 0, 0, v22, &v64);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
  }
  swift_deallocClassInstance();
  *(void *)(v15 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v15 + 64) = &off_1F1BDEC90;
  uint64_t v50 = swift_allocObject();
  *(void *)(v15 + 32) = v50;
  *(void *)(v50 + 48) = v66;
  long long v51 = v65;
  *(_OWORD *)(v50 + 16) = v64;
  *(_OWORD *)(v50 + 32) = v51;
  uint64_t v52 = sub_1C131B79C(v15);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v52;
}

uint64_t sub_1C04653C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0465408(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_1BFD1EFFC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  sub_1BFD1EFFC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1C04654B0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v38 - v19;
  switch(*v1)
  {
    case 1:
      uint64_t v32 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v33 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4(v32 + *(int *)(v33 + 20), (uint64_t)v17, type metadata accessor for PuzzleStatisticCategory);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) < 2 || !EnumCaseMultiPayload)
      {
        uint64_t v28 = (uint64_t)v17;
        goto LABEL_12;
      }
      sub_1C046696C((uint64_t)v17, (uint64_t)v5, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      goto LABEL_19;
    case 2:
      uint64_t v25 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v26 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4(v25 + *(int *)(v26 + 20), (uint64_t)v14, type metadata accessor for PuzzleStatisticCategory);
      int v27 = swift_getEnumCaseMultiPayload();
      if ((v27 - 2) >= 2 && v27)
      {
        sub_1C046696C((uint64_t)v14, (uint64_t)v5, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        goto LABEL_19;
      }
      uint64_t v28 = (uint64_t)v14;
LABEL_12:
      sub_1C0466A3C(v28, type metadata accessor for PuzzleStatisticCategory);
LABEL_13:
      char v31 = 0;
      break;
    case 3:
      uint64_t v29 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v30 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4(v29 + *(int *)(v30 + 20), (uint64_t)v11, type metadata accessor for PuzzleStatisticCategory);
      LODWORD(v29) = swift_getEnumCaseMultiPayload();
      sub_1C0466A3C((uint64_t)v11, type metadata accessor for PuzzleStatisticCategory);
      if (v29 != 2) {
        goto LABEL_13;
      }
      char v31 = PuzzleStatisticCategory.hasValue.getter();
      return v31 & 1;
    default:
      uint64_t v21 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v22 = type metadata accessor for PuzzleStatistic();
      sub_1C04669D4(v21 + *(int *)(v22 + 20), (uint64_t)v20, type metadata accessor for PuzzleStatisticCategory);
      int v23 = swift_getEnumCaseMultiPayload();
      if ((v23 - 2) >= 2)
      {
        if (v23)
        {
          sub_1C046696C((uint64_t)v20, (uint64_t)v5, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
LABEL_19:
          double v24 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v35 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
          uint64_t v36 = (uint64_t)v5;
        }
        else
        {
          sub_1C046696C((uint64_t)v20, (uint64_t)v8, type metadata accessor for PuzzleStatisticValue);
          double v24 = PuzzleStatisticValue.primaryValue.getter();
          uint64_t v35 = type metadata accessor for PuzzleStatisticValue;
          uint64_t v36 = (uint64_t)v8;
        }
        sub_1C0466A3C(v36, v35);
      }
      else
      {
        sub_1C0466A3C((uint64_t)v20, type metadata accessor for PuzzleStatisticCategory);
        double v24 = -1.0;
      }
      char v31 = v24 >= 0.0;
      break;
  }
  return v31 & 1;
}

uint64_t sub_1C0465948(unsigned __int8 *a1, char *a2)
{
  return sub_1C147CF88(*a1, *a2);
}

uint64_t sub_1C0465954()
{
  return sub_1C015CDE4();
}

uint64_t sub_1C046595C()
{
  return sub_1C04483AC();
}

uint64_t sub_1C0465964()
{
  return sub_1C044D244();
}

uint64_t sub_1C046596C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0466920();
  *a1 = result;
  return result;
}

void sub_1C046599C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEF65756C61567972;
  unint64_t v3 = 0x616D697250736168;
  switch(*v1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000011;
      unint64_t v2 = 0x80000001C16018E0;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0xD000000000000010;
      *(void *)(a1 + 8) = 0x80000001C1601900;
      break;
    case 3:
      strcpy((char *)a1, "hasLeaderboard");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0465A5C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0465ABC()
{
  return sub_1C151EAEC();
}

void sub_1C0465B0C(void *a1@<X8>)
{
  *a1 = &unk_1F1B6BFC8;
}

BOOL static FormatPuzzleStatisticBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPuzzleStatisticBinding.Bool.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleStatisticBinding.Bool.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0465BA8()
{
  unint64_t result = qword_1EA19B998;
  if (!qword_1EA19B998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B998);
  }
  return result;
}

unint64_t sub_1C0465BFC(uint64_t a1)
{
  unint64_t result = sub_1C0465C24();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0465C24()
{
  unint64_t result = qword_1EA19B9A0;
  if (!qword_1EA19B9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B9A0);
  }
  return result;
}

unint64_t sub_1C0465C78(void *a1)
{
  a1[1] = sub_1C0465CB0();
  a1[2] = sub_1C0465D04();
  unint64_t result = sub_1C0465BA8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0465CB0()
{
  unint64_t result = qword_1EA19B9A8;
  if (!qword_1EA19B9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B9A8);
  }
  return result;
}