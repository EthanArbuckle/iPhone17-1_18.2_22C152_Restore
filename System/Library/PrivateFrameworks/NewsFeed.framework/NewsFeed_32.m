uint64_t sub_1C10612AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  int64_t v40;
  void *v41;
  uint64_t i;
  char v43;
  int64_t v44;
  uint64_t v45;
  char v46;

  v3 = v2;
  v5 = *v2;
  sub_1C1079D34(0, (unint64_t *)&unk_1EA1AA868, (void (*)(void))sub_1C008192C);
  v43 = a2;
  v6 = sub_1C15204EC();
  v7 = v6;
  if (*(void *)(v5 + 16))
  {
    v8 = 1 << *(unsigned char *)(v5 + 32);
    v41 = (void *)(v5 + 64);
    if (v8 < 64) {
      v9 = ~(-1 << v8);
    }
    else {
      v9 = -1;
    }
    v10 = v9 & *(void *)(v5 + 64);
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v44 = v13;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v40) {
          goto LABEL_33;
        }
        v23 = v41[v22];
        v24 = v13 + 1;
        if (!v23)
        {
          v24 = v13 + 2;
          if (v13 + 2 >= v40) {
            goto LABEL_33;
          }
          v23 = v41[v24];
          if (!v23)
          {
            v25 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if (v43)
              {
                v39 = 1 << *(unsigned char *)(v5 + 32);
                if (v39 >= 64) {
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *v41 = -1 << v39;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v24 >= v40) {
                  goto LABEL_33;
                }
                v23 = v41[v24];
                ++v25;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            v24 = v13 + 3;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v44 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v30 = *(void *)(v5 + 56);
      v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      v33 = *v31;
      v32 = v31[1];
      v34 = (uint64_t *)(v30 + 40 * v21);
      v35 = v34[1];
      v45 = *v34;
      v36 = v34[2];
      v37 = v34[3];
      v38 = *((unsigned char *)v34 + 32);
      v46 = *((unsigned char *)v34 + 33);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v36, v37, v38);
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      result = sub_1C1520E0C();
      v14 = -1 << *(unsigned char *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27) {
            v16 = 0;
          }
          v26 |= v28;
          v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *v18 = v33;
      v18[1] = v32;
      v19 = *(void *)(v7 + 56) + 40 * v17;
      v13 = v44;
      *(void *)v19 = v45;
      *(void *)(v19 + 8) = v35;
      *(void *)(v19 + 16) = v36;
      *(void *)(v19 + 24) = v37;
      *(unsigned char *)(v19 + 32) = v38;
      *(unsigned char *)(v19 + 33) = v46;
      ++*(void *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C1061630(uint64_t a1, char a2)
{
  return sub_1BFFFD03C(a1, a2, (void (*)(void))sub_1C1077B34);
}

uint64_t sub_1C1061648(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1078C44();
  char v38 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C1061954(uint64_t a1, char a2)
{
  return sub_1BFF01C3C(a1, a2, (void (*)(void))sub_1C107766C);
}

uint64_t sub_1C106196C(uint64_t a1, char a2)
{
  return sub_1BFF01C3C(a1, a2, (void (*)(void))sub_1C10776D4);
}

uint64_t sub_1C1061984(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v44 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1C10779D4(0, &qword_1EA1AA768, MEMORY[0x1E4F276F0], (void (*)(void))sub_1C1077618);
  int v42 = a2;
  uint64_t v8 = sub_1C15204EC();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    char v38 = v2;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 64);
    v40 = (void *)(v7 + 64);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v39 = (unint64_t)(v10 + 63) >> 6;
    v41 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              v3 = v38;
              if (v42)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v7 + 32);
                if (v37 >= 64) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v40 = -1 << v37;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v7 + 56);
      uint64_t v25 = v7;
      char v26 = *(unsigned char *)(*(void *)(v7 + 48) + v20);
      uint64_t v27 = v5;
      uint64_t v28 = *(void *)(v5 + 72);
      uint64_t v29 = v24 + v28 * v20;
      if (v42) {
        (*v14)(v43, v29, v44);
      }
      else {
        (*v41)(v43, v29, v44);
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1520E0C();
      uint64_t v30 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v15 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(unsigned char *)(*(void *)(v9 + 48) + v18) = v26;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v28 * v18, v43, v44);
      ++*(void *)(v9 + 16);
      uint64_t v5 = v27;
      uint64_t v7 = v25;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_1C1061DB0(uint64_t a1, int a2)
{
  return sub_1BFF5F250(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsRoster, (void (*)(void, __n128))sub_1C10777A4, (void (*)(unint64_t, char *))sub_1C0FAE738, (void (*)(unint64_t, char *))sub_1C107780C);
}

uint64_t sub_1C1061E04(uint64_t a1, int a2)
{
  return sub_1BFF5F250(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed, (void (*)(void, __n128))sub_1C107789C, (void (*)(unint64_t, char *))sub_1C1077904, (void (*)(unint64_t, char *))sub_1C0FAC8D0);
}

uint64_t sub_1C1061E58(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C107773C();
  char v36 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C106216C(uint64_t a1, char a2)
{
  return sub_1C10550C0(a1, a2, (void (*)(void))sub_1C1077824);
}

uint64_t sub_1C1062184(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1BFF9913C();
  char v35 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1BFF993A8(v22, v36);
    }
    else
    {
      sub_1BFF6A008((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1C151E62C();
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t v24 = sub_1C1520E0C();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1BFF993A8(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C10624BC(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1079204();
  char v40 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v21);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      uint64_t v35 = v32[3];
      uint64_t v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + 32 * v17);
      *unint64_t v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      v19[3] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C10627E4(uint64_t a1, char a2)
{
  return sub_1C1064DFC(a1, a2, (void (*)(void))sub_1C1078E68);
}

uint64_t sub_1C10627FC(uint64_t a1, char a2)
{
  return sub_1BFE68408(a1, a2, (void (*)(void))sub_1C10780EC);
}

uint64_t sub_1C1062814(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C10774EC();
  char v6 = a2;
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v37 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v24 = v37[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if (v6)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v24 = v37[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v38 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v34 = (id)v38;
        swift_unknownObjectRetain();
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v38;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_1C1062B28(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1079D34(0, &qword_1EA1AA758, (void (*)(void))sub_1C02CDFDC);
  char v43 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v22 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v23 = v22 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = (void *)(v5 + 64);
    unint64_t v26 = *(void *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v42 + 8 * v13);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v13 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v41) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v42 + 8 * v13);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v27;
      }
    }
LABEL_30:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_31:
    uint64_t v32 = 32 * v23;
    uint64_t v33 = *(void *)(v5 + 48) + v32;
    uint64_t v35 = *(void *)v33;
    uint64_t v34 = *(void *)(v33 + 8);
    uint64_t v36 = *(void *)(v5 + 56) + v32;
    uint64_t v37 = *(void *)v36;
    uint64_t v38 = *(void *)(v36 + 8);
    long long v44 = *(_OWORD *)(v36 + 16);
    long long v45 = *(_OWORD *)(v33 + 16);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    sub_1C1520DCC();
    sub_1C1520DCC();
    uint64_t result = sub_1C1520E0C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      long long v18 = v45;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v14) >> 6;
      long long v18 = v45;
      do
      {
        if (++v16 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v16 == v29;
        if (v16 == v29) {
          unint64_t v16 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v16);
      }
      while (v31 == -1);
      unint64_t v17 = __clz(__rbit64(~v31)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v19 = 32 * v17;
    uint64_t v20 = *(void *)(v7 + 48) + v19;
    *(void *)uint64_t v20 = v35;
    *(void *)(v20 + 8) = v34;
    *(_OWORD *)(v20 + 16) = v18;
    uint64_t v21 = *(void *)(v7 + 56) + v19;
    *(void *)uint64_t v21 = v37;
    *(void *)(v21 + 8) = v38;
    *(_OWORD *)(v21 + 16) = v44;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  v3 = v40;
  int64_t v25 = (void *)(v5 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C1062EB8(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C10788F0();
  char v49 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    v47 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v46 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v18 = v17 | (v13 << 6);
        if (v49) {
          goto LABEL_10;
        }
      }
      else
      {
        int64_t v27 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v27 >= v46) {
          goto LABEL_33;
        }
        unint64_t v28 = v47[v27];
        ++v13;
        if (!v28)
        {
          int64_t v13 = v27 + 1;
          if (v27 + 1 >= v46) {
            goto LABEL_33;
          }
          unint64_t v28 = v47[v13];
          if (!v28)
          {
            int64_t v29 = v27 + 2;
            if (v29 >= v46)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if (v49)
              {
                uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
                if (v45 >= 64) {
                  bzero(v47, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v47 = -1 << v45;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v28 = v47[v29];
            if (!v28)
            {
              while (1)
              {
                int64_t v13 = v29 + 1;
                if (__OFADD__(v29, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v46) {
                  goto LABEL_33;
                }
                unint64_t v28 = v47[v13];
                ++v29;
                if (v28) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v13 = v29;
          }
        }
LABEL_22:
        unint64_t v10 = (v28 - 1) & v28;
        unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
        if (v49)
        {
LABEL_10:
          uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
          uint64_t v20 = *v19;
          uint64_t v21 = v19[1];
          unint64_t v22 = *(void *)(v5 + 56) + (v18 << 7);
          uint64_t v23 = *(void *)(v22 + 8);
          uint64_t v24 = *(void *)(v22 + 16);
          char v25 = *(unsigned char *)(v22 + 24);
          uint64_t v50 = *(void *)(v22 + 40);
          uint64_t v51 = *(void *)v22;
          uint64_t v55 = *(void *)(v22 + 56);
          uint64_t v26 = *(void *)(v22 + 72);
          uint64_t v52 = *(void *)(v22 + 64);
          uint64_t v53 = *(void *)(v22 + 32);
          long long v57 = *(_OWORD *)(v22 + 80);
          uint64_t v58 = *(void *)(v22 + 48);
          uint64_t v59 = *(void *)(v22 + 104);
          uint64_t v60 = *(void *)(v22 + 96);
          uint64_t v56 = *(void *)(v22 + 112);
          uint64_t v54 = *(void *)(v22 + 120);
          goto LABEL_24;
        }
      }
      BOOL v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v30;
      uint64_t v21 = v30[1];
      uint64_t v31 = (long long *)(*(void *)(v5 + 56) + (v18 << 7));
      long long v33 = v31[2];
      long long v32 = v31[3];
      long long v34 = *v31;
      long long v62 = v31[1];
      long long v63 = v33;
      long long v61 = v34;
      long long v35 = v31[7];
      long long v37 = v31[4];
      long long v36 = v31[5];
      long long v67 = v31[6];
      long long v68 = v35;
      long long v65 = v37;
      long long v66 = v36;
      long long v64 = v32;
      uint64_t v59 = *((void *)&v67 + 1);
      uint64_t v60 = v67;
      uint64_t v26 = *((void *)&v37 + 1);
      uint64_t v56 = v35;
      long long v57 = v36;
      uint64_t v58 = v32;
      uint64_t v54 = *((void *)&v35 + 1);
      uint64_t v55 = *((void *)&v32 + 1);
      uint64_t v52 = v37;
      uint64_t v53 = v33;
      uint64_t v23 = *((void *)&v61 + 1);
      uint64_t v50 = *((void *)&v33 + 1);
      uint64_t v51 = v61;
      uint64_t v24 = v62;
      char v25 = BYTE8(v62);
      swift_bridgeObjectRetain();
      sub_1C0B8CEF4(&v61);
LABEL_24:
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v38 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v39 = result & ~v38;
      unint64_t v40 = v39 >> 6;
      if (((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v41 = 0;
        unint64_t v42 = (unint64_t)(63 - v38) >> 6;
        do
        {
          if (++v40 == v42 && (v41 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v43 = v40 == v42;
          if (v40 == v42) {
            unint64_t v40 = 0;
          }
          v41 |= v43;
          uint64_t v44 = *(void *)(v11 + 8 * v40);
        }
        while (v44 == -1);
        unint64_t v14 = __clz(__rbit64(~v44)) + (v40 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v20;
      v15[1] = v21;
      unint64_t v16 = *(void *)(v7 + 56) + (v14 << 7);
      *(void *)unint64_t v16 = v51;
      *(void *)(v16 + 8) = v23;
      *(void *)(v16 + 16) = v24;
      *(unsigned char *)(v16 + 24) = v25;
      *(void *)(v16 + 32) = v53;
      *(void *)(v16 + 40) = v50;
      *(void *)(v16 + 48) = v58;
      *(void *)(v16 + 56) = v55;
      *(void *)(v16 + 64) = v52;
      *(void *)(v16 + 72) = v26;
      *(_OWORD *)(v16 + 80) = v57;
      *(void *)(v16 + 96) = v60;
      *(void *)(v16 + 104) = v59;
      *(void *)(v16 + 112) = v56;
      *(void *)(v16 + 120) = v54;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C10632F8(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v5 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v45 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v47 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1C10779D4(0, &qword_1EA1AA958, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (void (*)(void))sub_1C02CDCF8);
  int v46 = a2;
  uint64_t v8 = sub_1C15204EC();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  unint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v43) {
      break;
    }
    unint64_t v22 = v44;
    unint64_t v23 = v44[v21];
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v23 = v44[v16];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v44[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v43) {
              goto LABEL_34;
            }
            unint64_t v23 = v44[v16];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v7 + 56);
    uint64_t v26 = v7;
    uint64_t v27 = *(void *)(v7 + 48) + 24 * v20;
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *(void *)(v27 + 8);
    unsigned __int8 v30 = *(unsigned char *)(v27 + 16);
    uint64_t v31 = *(void *)(v45 + 72);
    uint64_t v32 = v25 + v31 * v20;
    if (v46)
    {
      sub_1C10782E4(v32, v47);
    }
    else
    {
      sub_1C0C7A164(v32, v47);
      sub_1C02CDCC8(v28, v29, v30);
    }
    sub_1C1520DBC();
    sub_1C1520DCC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v14 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v17 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v9 + 48) + 24 * v17;
    *(void *)uint64_t v18 = v28;
    *(void *)(v18 + 8) = v29;
    *(unsigned char *)(v18 + 16) = v30;
    uint64_t result = sub_1C10782E4(v47, *(void *)(v9 + 56) + v31 * v17);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v26;
  }
  swift_release();
  v3 = v42;
  unint64_t v22 = v44;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_1C10636FC(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1079D34(0, &qword_1EB86B508, (void (*)(void))sub_1C1078098);
  char v36 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v35 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v34) {
          goto LABEL_34;
        }
        unint64_t v19 = v35[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v19 = v35[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if (v36)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v35[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v19 = v35[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 48) + 24 * v17;
      uint64_t v23 = *(void *)v21;
      uint64_t v22 = *(void *)(v21 + 8);
      char v24 = *(unsigned char *)(v21 + 16);
      uint64_t v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (v36)
      {
        sub_1BFF993A8(v25, v37);
      }
      else
      {
        sub_1BFF6A008((uint64_t)v25, (uint64_t)v37);
        sub_1C09C8BD8();
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v11 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = *(void *)(v7 + 48) + 24 * v14;
      *(void *)uint64_t v15 = v23;
      *(void *)(v15 + 8) = v22;
      *(unsigned char *)(v15 + 16) = v24;
      uint64_t result = (uint64_t)sub_1BFF993A8(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C1063A5C(uint64_t a1, int a2, uint64_t (*a3)(void), void (*a4)(void, __n128))
{
  uint64_t v6 = v4;
  uint64_t v53 = a3(0);
  uint64_t v8 = *(void *)(v53 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v45 - v10;
  uint64_t v11 = *v4;
  a4(0, v9);
  int v51 = a2;
  uint64_t v12 = sub_1C15204EC();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  v48 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int v46 = v4;
  int64_t v47 = (unint64_t)(v14 + 63) >> 6;
  char v49 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v50 = v8;
  int64_t v18 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v24 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v47) {
      break;
    }
    unint64_t v27 = v48;
    unint64_t v28 = v48[v26];
    ++v21;
    if (!v28)
    {
      int64_t v21 = v26 + 1;
      if (v26 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v28 = v48[v21];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v46;
          if ((v51 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v48[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v21 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v47) {
              goto LABEL_34;
            }
            unint64_t v28 = v48[v21];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v29;
      }
    }
LABEL_21:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v11 + 56);
    uint64_t v31 = v11;
    uint64_t v32 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v25);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v35 = *(void *)(v50 + 72);
    uint64_t v36 = v30 + v35 * v25;
    if (v51)
    {
      (*v18)(v52, v36, v53);
    }
    else
    {
      (*v49)(v52, v36, v53);
      swift_bridgeObjectRetain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v37 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v19 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v38) & ~*(void *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v19 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v22 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t v23 = (void *)(*(void *)(v13 + 48) + 16 * v22);
    *uint64_t v23 = v33;
    v23[1] = v34;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v18)(*(void *)(v13 + 56) + v35 * v22, v52, v53);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v31;
  }
  swift_release();
  uint64_t v6 = v46;
  unint64_t v27 = v48;
  if ((v51 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v11 + 32);
  if (v44 >= 64) {
    bzero(v27, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v44;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v13;
  return result;
}

uint64_t sub_1C1063E4C(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C10787C4();
  uint64_t result = sub_1C15204EC();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    uint64_t v32 = v3;
    int64_t v8 = 0;
    __n128 v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *__n128 v9 = v30;
              }
              v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      uint64_t result = sub_1C1520DAC();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C10640E8(uint64_t a1, char a2)
{
  return sub_1C106512C(a1, a2, (void (*)(void))sub_1C1078D10);
}

uint64_t sub_1C1064100(uint64_t a1, char a2)
{
  return sub_1C1064118(a1, a2, (void (*)(void))sub_1C0191F20);
}

uint64_t sub_1C1064118(uint64_t a1, char a2, void (*a3)(void))
{
  v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v3;
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1C151FB5C();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  unint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_1C10643F0(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1078B74();
  char v6 = a2;
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v24 = v37[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if (v6)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v24 = v37[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v38 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v34 = *((id *)&v38 + 1);
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      uint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *uint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v38;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_1C1064704(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1078B0C();
  char v41 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v40 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v40 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v40 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 24 * v21;
    long long v42 = *(_OWORD *)v33;
    id v34 = *(void **)(v33 + 16);
    if ((v41 & 1) == 0)
    {
      id v35 = v34;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v36 = *((id *)&v42 + 1);
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
    *(_OWORD *)uint64_t v19 = v42;
    *(void *)(v19 + 16) = v34;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  int64_t v23 = (void *)(v5 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C1064A48(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C107926C(0, &qword_1EA1AA938, type metadata accessor for CGRect, (void (*)(void))sub_1C1078790);
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v37 = a2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v15 << 6);
      }
      else
      {
        int64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v12) {
          goto LABEL_31;
        }
        unint64_t v21 = v9[v20];
        ++v15;
        if (!v21)
        {
          int64_t v15 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v21 = v9[v15];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_31:
              swift_release();
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v36;
              }
              v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v9[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v15 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_40;
                }
                if (v15 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v21 = v9[v15];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v22;
          }
        }
LABEL_21:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      uint64_t v23 = *(void *)(v5 + 48) + 32 * v19;
      CGFloat v25 = *(double *)(v23 + 16);
      CGFloat v24 = *(double *)(v23 + 24);
      CGFloat v27 = *(double *)v23;
      CGFloat v26 = *(double *)(v23 + 8);
      uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      sub_1C1520DBC();
      v38.origin.x = v27;
      v38.origin.y = v26;
      v38.size.width = v25;
      v38.size.height = v24;
      CGRectStandardize(v38);
      sub_1C1520DFC();
      sub_1C1520DFC();
      sub_1C1520DFC();
      sub_1C1520DFC();
      uint64_t result = sub_1C1520E0C();
      uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v13 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v30) & ~*(void *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v13 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v16 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      unint64_t v17 = (CGFloat *)(*(void *)(v7 + 48) + 32 * v16);
      *unint64_t v17 = v27;
      v17[1] = v26;
      v17[2] = v25;
      v17[3] = v24;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v28;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C1064DE4(uint64_t a1, char a2)
{
  return sub_1C1064DFC(a1, a2, (void (*)(void))sub_1C1078A3C);
}

uint64_t sub_1C1064DFC(uint64_t a1, char a2, void (*a3)(void))
{
  v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v37 = a2;
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_1C1065114(uint64_t a1, char a2)
{
  return sub_1C106512C(a1, a2, (void (*)(void))sub_1C10789C4);
}

uint64_t sub_1C106512C(uint64_t a1, char a2, void (*a3)(void))
{
  v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v39 = a2;
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  uint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

void sub_1C106543C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1C1065454(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void))
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1BFEF2D8C(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1C10756D8(a5);
LABEL_7:
    unint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C106512C(v17, a4 & 1, a5);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    sub_1C1520CFC();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  unint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v24 = (uint64_t *)(v20[6] + 16 * v14);
  *unint64_t v24 = a2;
  v24[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v27;
  swift_bridgeObjectRetain();
}

uint64_t sub_1C10655DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C106A860();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C10545E4(v15, a4 & 1);
  unint64_t v21 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

_OWORD *sub_1C1065750(_OWORD *a1, void *a2, char a3)
{
  return sub_1C1069410(a1, a2, a3, (uint64_t (*)(void *))sub_1BFF98F30, (void (*)(void))sub_1C106ABFC, (void (*)(void))sub_1C10548F4, type metadata accessor for AttributeName);
}

_OWORD *sub_1C10657A4(_OWORD *a1, uint64_t a2, char a3)
{
  v4 = (void **)v3;
  uint64_t v8 = sub_1C152039C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1BFEFE43C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1C106AC14();
      goto LABEL_7;
    }
    sub_1C1054C2C(v17, a3 & 1);
    unint64_t v23 = sub_1BFEFE43C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      unint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1C106A020(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1BFF993A8(a1, v21);
}

uint64_t sub_1C106597C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10659D4(a1, a2, a3, a4, (void (*)(void))sub_1C107A180, (void (*)(void))sub_1C107A180);
}

uint64_t sub_1C10659A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10659D4(a1, a2, a3, a4, (void (*)(void))sub_1C107A108, (void (*)(void))sub_1C107A108);
}

uint64_t sub_1C10659D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1BFEF2D8C(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    sub_1C107319C(a5);
LABEL_7:
    char v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C10550C0(v19, a4 & 1, a6);
  unint64_t v25 = sub_1BFEF2D8C(a2, a3);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  char v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a2;
  v27[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v30;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1065B60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10659D4(a1, a2, a3, a4, (void (*)(void))sub_1C107A090, (void (*)(void))sub_1C107A090);
}

uint64_t sub_1C1065B8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10659D4(a1, a2, a3, a4, (void (*)(void))sub_1C1079FA0, (void (*)(void))sub_1C1079FA0);
}

uint64_t sub_1C1065BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1BFEF2D8C(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1C106AFB0();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C105548C(v17, a5 & 1);
  unint64_t v23 = sub_1BFEF2D8C(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *unint64_t v25 = a3;
  v25[1] = a4;
  char v26 = (void *)(v20[7] + 16 * v14);
  *char v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1065D40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C1069E18(a1, a2, a3, a4, MEMORY[0x1E4F27928], (void (*)(void, __n128))sub_1C1077200, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
}

uint64_t sub_1C1065D84(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C1065DBC(a1, a2, a3, a4, &qword_1EB85F210, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1C1065DA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C1065DBC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1AA7B8, &qword_1EA1A3BC0, (uint64_t)&type metadata for FormatSourceMap);
}

uint64_t sub_1C1065DBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v11 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1BFEF2D8C(a2, a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_1C1070C0C(a5, a6, a7);
LABEL_7:
    unint64_t v23 = (void *)*v11;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v24 + 8 * v17) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C105D8B0(v20, a4 & 1, a5, a6, a7);
  unint64_t v26 = sub_1BFEF2D8C(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  unint64_t v23 = (void *)*v11;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  BOOL v28 = (uint64_t *)(v23[6] + 16 * v17);
  *BOOL v28 = a2;
  v28[1] = a3;
  *(void *)(v23[7] + 8 * v17) = a1;
  uint64_t v29 = v23[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v31;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1065F70(_OWORD *a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C10520A4(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C106BE28();
      goto LABEL_7;
    }
    sub_1C105614C(v15, a4 & 1);
    unint64_t v21 = sub_1C10520A4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + (v12 << 7);
    return sub_1C1079868((uint64_t)a1, v19);
  }
LABEL_13:
  sub_1C106A1D8(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_1C10660B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1C10660D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1BFEF2D8C(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1C106C0BC();
LABEL_7:
    char v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      unint64_t v23 = (void *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C1056818(v19, a6 & 1);
  unint64_t v25 = sub_1BFEF2D8C(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  char v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  char v27 = (uint64_t *)(v22[6] + 16 * v16);
  *char v27 = a4;
  v27[1] = a5;
  BOOL v28 = (void *)(v22[7] + 24 * v16);
  *BOOL v28 = a1;
  v28[1] = a2;
  v28[2] = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v31;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1066270(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C106C53C();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 88 * v12;
      return sub_1C10796D0(a1, v19);
    }
    goto LABEL_13;
  }
  sub_1C1056C2C(v15, a4 & 1);
  unint64_t v21 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 88 * v12;
  long long v25 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)a1;
  *(_OWORD *)(v24 + 16) = v25;
  long long v26 = *(_OWORD *)(a1 + 32);
  long long v27 = *(_OWORD *)(a1 + 48);
  long long v28 = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(v24 + 80) = *(unsigned char *)(a1 + 80);
  *(_OWORD *)(v24 + 48) = v27;
  *(_OWORD *)(v24 + 64) = v28;
  *(_OWORD *)(v24 + 32) = v26;
  uint64_t v29 = v18[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v31;
  return swift_bridgeObjectRetain();
}

id sub_1C1066410(uint64_t a1, void *a2, char a3)
{
  v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1C10521F0((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C1074DB4((void (*)(void))sub_1C1079E14);
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C1064118(v12, a3 & 1, (void (*)(void))sub_1C1079E14);
  unint64_t v18 = sub_1C10521F0((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A300);
    id result = (id)sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;
  return a2;
}

void sub_1C10665AC(uint64_t a1, void *a2, char a3)
{
  v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1C1052240((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C106CBD8();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C10579AC(v12, a3 & 1);
  unint64_t v17 = sub_1C1052240((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    sub_1C1520CFC();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;
  id v23 = a2;
}

uint64_t sub_1C1066720(uint64_t a1, uint64_t a2, char a3)
{
  v4 = (void **)v3;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C10526C4(a2, MEMORY[0x1E4F276F0], (void (*)(void))sub_1BFD2C630, (uint64_t (*)(uint64_t, uint64_t))sub_1C1053374);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C106CD98();
    goto LABEL_7;
  }
  sub_1C1057C98(v17, a3 & 1);
  uint64_t v23 = sub_1C10526C4(a2, MEMORY[0x1E4F276F0], (void (*)(void))sub_1BFD2C630, (uint64_t (*)(uint64_t, uint64_t))sub_1C1053374);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C106A340(v14, (uint64_t)v11, a1, v20);
}

void sub_1C1066940(uint64_t a1, uint64_t a2, char a3)
{
  v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1C1052290(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1C106D028();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C1058088(v13, a3 & 1);
  unint64_t v18 = sub_1C1052290(a2);
  if ((v14 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for GroupLayoutKey();
    sub_1C1520CFC();
    __break(1u);
    return;
  }
  unint64_t v10 = v18;
  BOOL v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v20 = 8 * v10;
  *(void *)(v16[6] + v20) = a2;
  *(void *)(v16[7] + v20) = a1;
  uint64_t v21 = v16[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16[2] = v23;
  swift_retain();
}

uint64_t sub_1C1066AA4(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BFEF2D8C(a1, a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C106D1CC();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C10583AC(result, a3 & 1);
  uint64_t result = sub_1BFEF2D8C(a1, a2);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a1;
  v20[1] = a2;
  *(double *)(v18[7] + 8 * v12) = a4;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1066C0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFEF2C04(a1, a2, a3, a4, (void (*)(void))sub_1C1079668);
}

uint64_t sub_1C1066C24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16) {
      return sub_1C1077C90(a1, v18[7] + 112 * v12, &qword_1EA1AA980, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C106D7A0();
    goto LABEL_7;
  }
  sub_1C10586E0(v15, a4 & 1);
  unint64_t v20 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v20;
  unint64_t v18 = *v5;
  if (v16) {
    return sub_1C1077C90(a1, v18[7] + 112 * v12, &qword_1EA1AA980, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue);
  }
LABEL_11:
  sub_1C106A3F8(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1066D74(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1C1052424(a3, a4);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C106D9B0();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    char v21 = (double *)(v18[6] + 16 * v12);
    *char v21 = a3;
    v21[1] = a4;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C1058A78(result, a2 & 1);
  uint64_t result = sub_1C1052424(a3, a4);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CGSize(0);
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C1066EB4(uint64_t a1, uint64_t a2, char a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1BFEF2D8C(a1, a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C106DB54();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (double *)(v20[7] + 16 * v14);
      *char v21 = a4;
      v21[1] = a5;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C1058D70(result, a3 & 1);
  uint64_t result = sub_1BFEF2D8C(a1, a2);
  if ((v18 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v23 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v23 = a1;
  v23[1] = a2;
  uint64_t v24 = (double *)(v20[7] + 16 * v14);
  *uint64_t v24 = a4;
  v24[1] = a5;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v27;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C106702C(uint64_t a1, char a2, double a3)
{
  v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1BFC44E98(a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C106DF4C();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(void *)(v16[6] + v18) = a1;
    *(double *)(v16[7] + v18) = a3;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C1059574(result, a2 & 1);
  uint64_t result = sub_1BFC44E98(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C1067158(uint64_t a1, uint64_t a2, char a3)
{
  v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1BFC44E98(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C106E0D8();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(void *)(v16[6] + v18) = a2;
    *(void *)(v16[7] + v18) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C105981C(result, a3 & 1);
  uint64_t result = sub_1BFC44E98(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C1067288(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1C10682C0(a1, a2, a3, sub_1C107A920, (void (*)(void))sub_1C10772C4);
}

uint64_t sub_1C10672BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10659D4(a1, a2, a3, a4, (void (*)(void))sub_1C1078958, (void (*)(void))sub_1C1078958);
}

uint64_t sub_1C10672E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for FormatDerivedDataOption();
      return sub_1BFF3DFEC(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption, (void (*)(void, __n128))sub_1C1078628, (void (*)(unint64_t, char *))sub_1C0387C7C, (void (*)(char *, unint64_t))sub_1C017807C);
    goto LABEL_7;
  }
  sub_1BFF5F250(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption, (void (*)(void, __n128))sub_1C1078628, (void (*)(unint64_t, char *))sub_1C017807C, (void (*)(unint64_t, char *))sub_1C0387C7C);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C106A24C(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption, (uint64_t (*)(uint64_t, unint64_t))sub_1C017807C);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C106751C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C106E994();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + (v12 << 7);
      return sub_1C1078564((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_1C105A5C4(v15, a4 & 1);
  unint64_t v21 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (_OWORD *)(v18[7] + (v12 << 7));
  long long v25 = *a1;
  long long v26 = a1[1];
  long long v27 = a1[3];
  v24[2] = a1[2];
  v24[3] = v27;
  *uint64_t v24 = v25;
  v24[1] = v26;
  long long v28 = a1[4];
  long long v29 = a1[5];
  long long v30 = a1[7];
  v24[6] = a1[6];
  v24[7] = v30;
  v24[4] = v28;
  v24[5] = v29;
  uint64_t v31 = v18[2];
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v33;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10676B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C1065DBC(a1, a2, a3, a4, &qword_1EA1AA900, &qword_1EA1AA908, (uint64_t)&type metadata for FormatDerivedDataResultBlock);
}

uint64_t sub_1C10676D0(_OWORD *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1C1052498(a2, a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1C106EB90();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (_OWORD *)(v20[7] + 48 * v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v23 = a1[1];
      *unint64_t v21 = *a1;
      v21[1] = v23;
      v21[2] = a1[2];
      return result;
    }
    goto LABEL_11;
  }
  sub_1C105A9DC(v17, a5 & 1);
  unint64_t v24 = sub_1C1052498(a2, a3, a4);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v26 = v20[6] + 24 * v14;
  *(void *)uint64_t v26 = a2;
  *(void *)(v26 + 8) = a3;
  *(unsigned char *)(v26 + 16) = a4;
  long long v27 = (_OWORD *)(v20[7] + 48 * v14);
  long long v28 = a1[1];
  *long long v27 = *a1;
  v27[1] = v28;
  v27[2] = a1[2];
  uint64_t v29 = v20[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v31;
  return sub_1C024FAC0(a2, a3, a4);
}

uint64_t sub_1C10678BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10678D4(a1, a2, a3, a4, (void (*)(void))sub_1C10782FC);
}

uint64_t sub_1C10678D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void))
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1BFEF2D8C(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1C1075504(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C1064DFC(v17, a4 & 1, a5);
  unint64_t v23 = sub_1BFEF2D8C(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  *char v25 = a2;
  v25[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v28;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1067A5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for FormatDerivedDataBindingSlotResult();
      return sub_1BFF3DFEC(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(void, __n128))sub_1C1078690, (void (*)(unint64_t, char *))sub_1C10786F8, (void (*)(char *, unint64_t))sub_1C1078710);
    goto LABEL_7;
  }
  sub_1BFF5F250(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(void, __n128))sub_1C1078690, (void (*)(unint64_t, char *))sub_1C1078710, (void (*)(unint64_t, char *))sub_1C10786F8);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C106A24C(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult, (uint64_t (*)(uint64_t, unint64_t))sub_1C1078710);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1067C90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10678D4(a1, a2, a3, a4, (void (*)(void))sub_1C1078434);
}

uint64_t sub_1C1067CA8(uint64_t a1, uint64_t a2, char a3)
{
  v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_1C1052524(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1C106EE78();
    goto LABEL_7;
  }
  sub_1C105AE48(v16, a3 & 1);
  unint64_t v22 = sub_1C1052524(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1BFFD588C(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  return sub_1C106A47C(v13, (uint64_t)v10, a1, v19);
}

void sub_1C1067E28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1C1067E40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFEF2C04(a1, a2, a3, a4, (void (*)(void))sub_1C1078030);
}

_OWORD *sub_1C1067E58(_OWORD *a1, uint64_t a2, char a3)
{
  v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C105216C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C106FA04();
      goto LABEL_7;
    }
    sub_1C105C1B8(v13, a3 & 1);
    unint64_t v19 = sub_1C105216C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1C0934724(a2, (uint64_t)v21);
      return sub_1C106A530(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  char v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_1BFF993A8(a1, v17);
}

void sub_1C1067FA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1C1052590(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C106FBE8();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C105C4CC(v15, a4 & 1);
  unint64_t v20 = sub_1C1052590(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1C1520CFC();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_1C1068114(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFEF2C04(a1, a2, a3, a4, (void (*)(void))sub_1C1078D88);
}

void sub_1C106812C(uint64_t a1, char a2, unsigned __int8 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1C1051F60(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C107016C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 16 * v12;

      *(void *)uint64_t v19 = a1;
      *(unsigned char *)(v19 + 8) = a2;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    uint64_t v22 = v18[7] + 16 * v12;
    *(void *)uint64_t v22 = a1;
    *(unsigned char *)(v22 + 8) = a2;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1C105C838(v15, a4 & 1);
  unint64_t v20 = sub_1C1051F60(a3);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_1C1520CFC();
  __break(1u);
}

uint64_t sub_1C1068274(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10678D4(a1, a2, a3, a4, (void (*)(void))sub_1C1079BCC);
}

uint64_t sub_1C106828C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1C10682C0(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1C107A920, (void (*)(void))sub_1C1079424);
}

uint64_t sub_1C10682C0(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = a4(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C107053C(a5);
LABEL_7:
    unint64_t v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v23 = 8 * v14;
    *(void *)(v20[6] + v23) = a2;
    *(void *)(v20[7] + v23) = a1;
    uint64_t v24 = v20[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C105CCFC(result, a3 & 1, a5);
  uint64_t result = a4(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    unint64_t v20 = (void *)*v8;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C106841C(uint64_t a1, uint64_t a2, char a3)
{
  v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1BFC44E98(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C10706E4();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C105CFB4(result, a3 & 1);
  uint64_t result = sub_1BFC44E98(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C1068558(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for SharedItem();
      return sub_1BFF3DFEC(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for SharedItem);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C00310C8((uint64_t (*)(void))type metadata accessor for SharedItem, (void (*)(void, __n128))sub_1C1079534, (void (*)(unint64_t, char *))sub_1C0977524, (void (*)(char *, unint64_t))sub_1C097768C);
    goto LABEL_7;
  }
  sub_1BFF5F250(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for SharedItem, (void (*)(void, __n128))sub_1C1079534, (void (*)(unint64_t, char *))sub_1C097768C, (void (*)(unint64_t, char *))sub_1C0977524);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C106A24C(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for SharedItem, (uint64_t (*)(uint64_t, unint64_t))sub_1C097768C);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C106878C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C1065DBC(a1, a2, a3, a4, (unint64_t *)&unk_1EA1AA9B0, &qword_1EA1A15A0, (uint64_t)&type metadata for SharedItemManager.ShareAttributionViewContext);
}

uint64_t sub_1C10687A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for DebugFormatCompilingPackage();
      return sub_1BFF3DFEC(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C00310C8((uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (void (*)(void, __n128))sub_1C10781A8, (void (*)(unint64_t, char *))sub_1C1078210, (void (*)(char *, unint64_t))sub_1C097D460);
    goto LABEL_7;
  }
  sub_1BFF5F250(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (void (*)(void, __n128))sub_1C10781A8, (void (*)(unint64_t, char *))sub_1C097D460, (void (*)(unint64_t, char *))sub_1C1078210);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C106A24C(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (uint64_t (*)(uint64_t, unint64_t))sub_1C097D460);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10689DC(uint64_t a1, unsigned __int8 a2, char a3)
{
  v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1C1052618(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C1070E34(&qword_1EA1AA7A0, (void (*)(void))sub_1C1077BD0);
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C105DBE4(result, a3 & 1);
  uint64_t result = sub_1C1052618(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C1068B2C(uint64_t a1, unsigned __int8 a2, char a3)
{
  v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1BFFFC644(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C1070E34(&qword_1EA1AA7B0, (void (*)(void))sub_1C0078B20);
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C105DED4(result, a3 & 1);
  uint64_t result = sub_1BFFFC644(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C1068C7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for DebugFormatCacheFile();
      return sub_1BFF3DFEC(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C00310C8((uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (void (*)(void, __n128))sub_1C107827C, (void (*)(unint64_t, char *))sub_1C0C7A164, (void (*)(char *, unint64_t))sub_1C10782E4);
    goto LABEL_7;
  }
  sub_1BFF5F250(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (void (*)(void, __n128))sub_1C107827C, (void (*)(unint64_t, char *))sub_1C10782E4, (void (*)(unint64_t, char *))sub_1C0C7A164);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C106A24C(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, unint64_t))sub_1C10782E4);
  return swift_bridgeObjectRetain();
}

void sub_1C1068EB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C1072A8C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C1061648(v15, a4 & 1);
  unint64_t v20 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1C1520CFC();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_1C1069020(uint64_t a1, char a2, char a3)
{
  v4 = (void **)v3;
  char v7 = a2 & 1;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C1052754(a2 & 1);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C1072C6C();
      goto LABEL_7;
    }
    sub_1C1061984(v13, a3 & 1);
    unint64_t v24 = sub_1C1052754(v7);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_1C1515FDC();
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  return sub_1C106A5AC(v10, v7, a1, v16);
}

uint64_t sub_1C1069188(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for SportsRoster();
      return sub_1BFF3DFEC(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for SportsRoster);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C00310C8((uint64_t (*)(void))type metadata accessor for SportsRoster, (void (*)(void, __n128))sub_1C10777A4, (void (*)(unint64_t, char *))sub_1C107780C, (void (*)(char *, unint64_t))sub_1C0FAE738);
    goto LABEL_7;
  }
  sub_1BFF5F250(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for SportsRoster, (void (*)(void, __n128))sub_1C10777A4, (void (*)(unint64_t, char *))sub_1C0FAE738, (void (*)(unint64_t, char *))sub_1C107780C);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C106A24C(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for SportsRoster, (uint64_t (*)(uint64_t, unint64_t))sub_1C0FAE738);
  return swift_bridgeObjectRetain();
}

_OWORD *sub_1C10693BC(_OWORD *a1, void *a2, char a3)
{
  return sub_1C1069410(a1, a2, a3, (uint64_t (*)(void *))sub_1BFF98F30, (void (*)(void))sub_1C1073358, (void (*)(void))sub_1C1062184, type metadata accessor for Key);
}

_OWORD *sub_1C1069410(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), void (*a6)(void), void (*a7)(void))
{
  unint64_t v12 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = a4(a2);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a3 & 1) == 0)
  {
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    uint64_t v26 = a4(a2);
    if ((v21 & 1) == (v27 & 1))
    {
      unint64_t v17 = v26;
      char v23 = *v12;
      if (v21) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    a7(0);
    uint64_t result = (_OWORD *)sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  char v23 = *v12;
  if (v21)
  {
LABEL_8:
    unint64_t v24 = (_OWORD *)(v23[7] + 32 * v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    return sub_1BFF993A8(a1, v24);
  }
LABEL_13:
  sub_1C106A65C(v17, (uint64_t)a2, a1, v23);
  return a2;
}

uint64_t sub_1C1069590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1BFEF2D8C(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1C107353C();
LABEL_7:
    char v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      unint64_t v24 = (void *)(v23[7] + 32 * v17);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C10624BC(v20, a7 & 1);
  unint64_t v26 = sub_1BFEF2D8C(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  char v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  uint64_t v28 = (uint64_t *)(v23[6] + 16 * v17);
  *uint64_t v28 = a5;
  v28[1] = a6;
  uint64_t v29 = (void *)(v23[7] + 32 * v17);
  void *v29 = a1;
  v29[1] = a2;
  v29[2] = a3;
  v29[3] = a4;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v32;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1069744(char a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFE67E90(a1, a2, a3, a4, (void (*)(void))sub_1C10780EC);
}

void sub_1C106975C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1C1069774(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1C106978C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C106F7E0();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 48 * v12;
      return sub_1C10775BC((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_1C105BE2C(v15, a4 & 1);
  unint64_t v21 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  unint64_t v24 = (_OWORD *)(v18[7] + 48 * v12);
  long long v25 = *a1;
  long long v26 = a1[2];
  v24[1] = a1[1];
  v24[2] = v26;
  *unint64_t v24 = v25;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C106991C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C1073E70();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + (v12 << 7);
      return sub_1C1078894((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_1C1062EB8(v15, a4 & 1);
  unint64_t v21 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  unint64_t v24 = (_OWORD *)(v18[7] + (v12 << 7));
  long long v25 = *a1;
  long long v26 = a1[1];
  long long v27 = a1[3];
  v24[2] = a1[2];
  v24[3] = v27;
  *unint64_t v24 = v25;
  v24[1] = v26;
  long long v28 = a1[4];
  long long v29 = a1[5];
  long long v30 = a1[7];
  v24[6] = a1[6];
  v24[7] = v30;
  v24[4] = v28;
  v24[5] = v29;
  uint64_t v31 = v18[2];
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v33;
  return swift_bridgeObjectRetain();
}

_OWORD *sub_1C1069AB4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = (void **)v5;
  char v11 = a4 & 1;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1C10528C0(a2, a3, a4 & 1);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1C1074318();
      goto LABEL_7;
    }
    sub_1C10636FC(v17, a5 & 1);
    unint64_t v23 = sub_1C10528C0(a2, a3, v11);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    unint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return sub_1BFF993A8(a1, v21);
  }
LABEL_13:
  sub_1C106A6C4(v14, a2, a3, v11, a1, v20);
  return (_OWORD *)sub_1C09C8BD8();
}

uint64_t sub_1C1069C2C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C1074574((void (*)(void))sub_1C1078DF0, (void (*)(unsigned char *, uint64_t))sub_1BFC773DC);
      goto LABEL_7;
    }
    sub_1BFED6EFC(v15, a4 & 1, (void (*)(void))sub_1C1078DF0, (void (*)(uint64_t, unsigned char *))sub_1BFC773DC);
    unint64_t v21 = sub_1BFEF2D8C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_1(v19);
    return sub_1BFC773DC(a1, v19);
  }
LABEL_13:
  sub_1C106A73C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1069DD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C1069E18(a1, a2, a3, a4, MEMORY[0x1E4FB7858], (void (*)(void, __n128))sub_1C1078BDC, MEMORY[0x1E4FB7858], MEMORY[0x1E4FB7858]);
}

uint64_t sub_1C1069E18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(void), void (*a6)(void, __n128), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  char v11 = (void **)v8;
  char v16 = (void *)*v8;
  unint64_t v18 = sub_1BFEF2D8C(a2, a3);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v22 = v17;
  uint64_t v23 = v16[3];
  if (v23 < v21 || (a4 & 1) == 0)
  {
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      sub_1C1074930(a5, a6);
      goto LABEL_7;
    }
    sub_1C1063A5C(v21, a4 & 1, a5, a6);
    unint64_t v32 = sub_1BFEF2D8C(a2, a3);
    if ((v22 & 1) == (v33 & 1))
    {
      unint64_t v18 = v32;
      char v24 = *v11;
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  char v24 = *v11;
  if (v22)
  {
LABEL_8:
    uint64_t v25 = v24[7];
    uint64_t v26 = a7(0);
    uint64_t v27 = *(void *)(v26 - 8);
    long long v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
    uint64_t v29 = v26;
    uint64_t v30 = v25 + *(void *)(v27 + 72) * v18;
    return v28(v30, a1, v29);
  }
LABEL_13:
  sub_1C106A7AC(v18, a2, a3, a1, v24, a8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1069FD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFEF2C04(a1, a2, a3, a4, (void (*)(void))sub_1C1077F60);
}

void sub_1C1069FF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1C106A008(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C10678D4(a1, a2, a3, a4, (void (*)(void))sub_1C1078A3C);
}

_OWORD *sub_1C106A020(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C152039C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_1BFF993A8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1C106A0E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  sub_1C1079980(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t result = sub_1C10790A0(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_1C106A1D8(unint64_t result, char a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(unsigned char *)uint64_t v5 = a2;
  *(void *)(v5 + 8) = a3;
  uint64_t v6 = (_OWORD *)(a5[7] + (result << 7));
  long long v7 = a4[1];
  *uint64_t v6 = *a4;
  v6[1] = v7;
  long long v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  *(_OWORD *)((char *)v6 + 105) = *(_OWORD *)((char *)a4 + 105);
  long long v9 = a4[6];
  long long v10 = a4[4];
  v6[5] = a4[5];
  v6[6] = v9;
  v6[4] = v10;
  uint64_t v11 = a5[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a5[2] = v13;
  }
  return result;
}

uint64_t sub_1C106A24C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, unint64_t))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v11 = (void *)(a5[6] + 16 * a1);
  *uint64_t v11 = a2;
  v11[1] = a3;
  uint64_t v12 = a5[7];
  uint64_t v13 = a6(0);
  uint64_t result = a7(a4, v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1);
  uint64_t v15 = a5[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a5[2] = v17;
  }
  return result;
}

unint64_t sub_1C106A2F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1C106A340(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C1515FDC();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1C106A3F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1C1077C90(a4, a5[7] + 112 * a1, &qword_1EA1AA980, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1C106A47C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t result = sub_1BFF3DBF0(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_1C106A530(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1BFF993A8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1C106A5AC(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2 & 1;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1C1515FDC();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_1C106A65C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1BFF993A8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_1C106A6C4(unint64_t a1, uint64_t a2, uint64_t a3, char a4, _OWORD *a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a6[6] + 24 * a1;
  *(void *)uint64_t v7 = a2;
  *(void *)(v7 + 8) = a3;
  *(unsigned char *)(v7 + 16) = a4 & 1;
  uint64_t result = sub_1BFF993A8(a5, (_OWORD *)(a6[7] + 32 * a1));
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

uint64_t sub_1C106A73C(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1BFC773DC(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1C106A7AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v9 = (void *)(a5[6] + 16 * a1);
  *BOOL v9 = a2;
  v9[1] = a3;
  uint64_t v10 = a5[7];
  uint64_t v11 = a6(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a4, v11);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

void *sub_1C106A860()
{
  v1 = v0;
  sub_1C107A8B8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    char v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106AA18()
{
  v1 = v0;
  sub_1BFFB4EE0();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1BFF6A008(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1BFF993A8(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C106ABFC()
{
  return sub_1C1073370((void (*)(void))sub_1BFFB45B0);
}

void *sub_1C106AC14()
{
  v1 = v0;
  uint64_t v2 = sub_1C152039C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0191CD0();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C15204DC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v8;
    return result;
  }
  unint64_t v23 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    uint64_t v19 = 32 * v17;
    sub_1BFF6A008(*(void *)(v6 + 56) + v19, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
    uint64_t result = sub_1BFF993A8(v27, (_OWORD *)(*(void *)(v8 + 56) + v19));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    v1 = v23;
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C106AEB4()
{
  return sub_1C1075504((void (*)(void))sub_1C107A820);
}

void *sub_1C106AECC()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for PuzzleStatistic, (void (*)(void, __n128))sub_1C107A1F8, (void (*)(unint64_t, char *))sub_1C1075D4C, (void (*)(char *, unint64_t))sub_1C1075D64);
}

void *sub_1C106AF20()
{
  return sub_1C107319C((void (*)(void))sub_1C107A180);
}

void *sub_1C106AF38()
{
  return sub_1C107319C((void (*)(void))sub_1C107A108);
}

void *sub_1C106AF50()
{
  return sub_1C107319C((void (*)(void))sub_1C107A090);
}

id sub_1C106AF68()
{
  return sub_1C10756D8((void (*)(void))sub_1C107A018);
}

void *sub_1C106AF80()
{
  return sub_1C107319C((void (*)(void))sub_1C1079FA0);
}

void *sub_1C106AF98()
{
  return sub_1C1075504(sub_1C0191EF0);
}

void *sub_1C106AFB0()
{
  v1 = v0;
  sub_1C1078CAC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106B168()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C107A7B8);
}

void *sub_1C106B180()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C107A750);
}

void *sub_1C106B198()
{
  v1 = v0;
  sub_1C107A6E8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 32);
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    long long v26 = *(_OWORD *)(v21 + 16);
    *int64_t v25 = v19;
    v25[1] = v18;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v27 = v23;
    *(void *)(v27 + 8) = v22;
    *(_OWORD *)(v27 + 16) = v26;
    *(void *)(v27 + 32) = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106B39C()
{
  v1 = v0;
  sub_1C1079D34(0, (unint64_t *)&unk_1EB880DF0, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v24 = *(_OWORD *)(v21 + 8);
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106B5AC()
{
  return sub_1C1074930(MEMORY[0x1E4F27928], (void (*)(void, __n128))sub_1C1077200);
}

void *sub_1C106B5D8()
{
  return sub_1C1070C0C(&qword_1EB85F210, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0]);
}

void *sub_1C106B5F4()
{
  return sub_1C107053C((void (*)(void))sub_1C1079124);
}

uint64_t sub_1C106B60C()
{
  return sub_1C106B72C((unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (unint64_t *)&unk_1EB85E040);
}

void *sub_1C106B63C()
{
  return sub_1C00310C8((uint64_t (*)(void))sub_1BFF1D9F4, (void (*)(void, __n128))sub_1C10792EC, (void (*)(unint64_t, char *))sub_1BFF1D72C, (void (*)(char *, unint64_t))sub_1BFF19F58);
}

void *sub_1C106B690()
{
  return sub_1C1075504(sub_1BFF95698);
}

void *sub_1C106B6A8()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatSlotDefinition, (void (*)(void, __n128))sub_1C1079918, (void (*)(unint64_t, char *))sub_1BFFE3E9C, (void (*)(char *, unint64_t))sub_1BFFE42B8);
}

uint64_t sub_1C106B6FC()
{
  return sub_1C106B72C((unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, &qword_1EB85E038);
}

uint64_t sub_1C106B72C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, unint64_t *a4)
{
  sub_1C1079980(0, a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v44 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v43 = (char *)&v40 - v10;
  uint64_t v45 = a1;
  int v46 = a2;
  uint64_t v47 = a3;
  sub_1C1078F9C(0, a4, a1, a2, a3);
  uint64_t v40 = v4;
  uint64_t v11 = *v4;
  uint64_t v12 = sub_1C15204DC();
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v49 = v12;
  if (!v13)
  {
    uint64_t result = swift_release();
    uint64_t v39 = v49;
    uint64_t v38 = v40;
LABEL_25:
    *uint64_t v38 = v39;
    return result;
  }
  uint64_t v14 = v12;
  unint64_t v15 = (void *)(v12 + 64);
  unint64_t v16 = (unint64_t)((1 << *(unsigned char *)(v14 + 32)) + 63) >> 6;
  if (v14 != v11 || (unint64_t)v15 >= v11 + 64 + 8 * v16)
  {
    memmove(v15, (const void *)(v11 + 64), 8 * v16);
    uint64_t v14 = v49;
  }
  int64_t v17 = 0;
  *(void *)(v14 + 16) = *(void *)(v11 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v48 = v11;
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v11 + 64);
  uint64_t v41 = v11 + 64;
  int64_t v42 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v21 = (uint64_t)v43;
  uint64_t v22 = v45;
  uint64_t v23 = v46;
  uint64_t v24 = v47;
  while (1)
  {
    if (v20)
    {
      unint64_t v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v26 = v25 | (v17 << 6);
      uint64_t result = v48;
      goto LABEL_9;
    }
    int64_t v35 = v17 + 1;
    uint64_t result = v48;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v35 >= v42) {
      goto LABEL_23;
    }
    unint64_t v36 = *(void *)(v41 + 8 * v35);
    ++v17;
    if (!v36)
    {
      int64_t v17 = v35 + 1;
      if (v35 + 1 >= v42) {
        goto LABEL_23;
      }
      unint64_t v36 = *(void *)(v41 + 8 * v17);
      if (!v36) {
        break;
      }
    }
LABEL_22:
    unint64_t v20 = (v36 - 1) & v36;
    unint64_t v26 = __clz(__rbit64(v36)) + (v17 << 6);
LABEL_9:
    uint64_t v28 = 16 * v26;
    unint64_t v29 = (uint64_t *)(*(void *)(result + 48) + 16 * v26);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    unint64_t v32 = *(void *)(v44 + 72) * v26;
    sub_1C107901C(*(void *)(result + 56) + v32, v21, v22, v23, v24);
    uint64_t v33 = v49;
    id v34 = (void *)(*(void *)(v49 + 48) + v28);
    *id v34 = v30;
    v34[1] = v31;
    sub_1C10790A0(v21, *(void *)(v33 + 56) + v32, v22, v23, v24);
    swift_bridgeObjectRetain();
  }
  int64_t v37 = v35 + 2;
  if (v37 >= v42)
  {
LABEL_23:
    uint64_t result = swift_release();
    uint64_t v38 = v40;
    uint64_t v39 = v49;
    goto LABEL_25;
  }
  unint64_t v36 = *(void *)(v41 + 8 * v37);
  if (v36)
  {
    int64_t v17 = v37;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v17 >= v42) {
      goto LABEL_23;
    }
    unint64_t v36 = *(void *)(v41 + 8 * v17);
    ++v37;
    if (v36) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C106BA24()
{
  v1 = v0;
  sub_1BFDDCC60();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 40 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v25 = v21[2];
    uint64_t v24 = v21[3];
    uint64_t v26 = v21[4];
    unint64_t v27 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v27 = v18;
    v27[1] = v19;
    uint64_t v28 = (void *)(*(void *)(v4 + 56) + v20);
    *uint64_t v28 = v22;
    v28[1] = v23;
    v28[2] = v25;
    v28[3] = v24;
    v28[4] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106BC0C()
{
  return sub_1C1070C0C((unint64_t *)&unk_1EA1AA7B8, &qword_1EA1A3BC0, (uint64_t)&type metadata for FormatSourceMap);
}

void *sub_1C106BC28()
{
  sub_1BFF9B120();
  unint64_t v30 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C15204DC();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v30 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v31 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v11) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v27);
    ++v7;
    if (!v28)
    {
      int64_t v7 = v27 + 1;
      if (v27 + 1 >= v11) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v31 + 8 * v7);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v13 = __clz(__rbit64(v28)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 16 * v13;
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = 40 * v13;
    uint64_t v19 = *(void *)(v1 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    unint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = (void *)(*(void *)(v3 + 48) + v14);
    char v25 = *(unsigned char *)(v19 + 32);
    *uint64_t v24 = v17;
    v24[1] = v16;
    uint64_t v26 = *(void *)(v3 + 56) + v18;
    *(void *)uint64_t v26 = v20;
    *(void *)(v26 + 8) = v21;
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v23;
    *(unsigned char *)(v26 + 32) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1BFF6DB28(v20, v21, v22, v23, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v11) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    int64_t v7 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v7);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106BE28()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, (unint64_t *)&unk_1EB863430, (void (*)(void))sub_1C10798C4);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v15;
    char v19 = *(unsigned char *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    unint64_t v21 = v15 << 7;
    long long v23 = *(_OWORD *)(v17 + v21 + 80);
    long long v22 = *(_OWORD *)(v17 + v21 + 96);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    *(_OWORD *)&v45[9] = *(_OWORD *)(v17 + v21 + 105);
    long long v44 = v23;
    *(_OWORD *)uint64_t v45 = v22;
    long long v43 = v24;
    long long v26 = *(_OWORD *)(v17 + v21);
    long long v25 = *(_OWORD *)(v17 + v21 + 16);
    long long v27 = *(_OWORD *)(v17 + v21 + 48);
    long long v41 = *(_OWORD *)(v17 + v21 + 32);
    long long v42 = v27;
    long long v39 = v26;
    long long v40 = v25;
    uint64_t v28 = *(void *)(v4 + 48) + v16;
    *(unsigned char *)uint64_t v28 = v19;
    *(void *)(v28 + 8) = v20;
    int64_t v29 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    long long v30 = v39;
    long long v31 = v40;
    long long v32 = v42;
    v29[2] = v41;
    v29[3] = v32;
    _OWORD *v29 = v30;
    v29[1] = v31;
    long long v33 = v43;
    long long v34 = v44;
    long long v35 = *(_OWORD *)v45;
    *(_OWORD *)((char *)v29 + 105) = *(_OWORD *)&v45[9];
    v29[5] = v34;
    v29[6] = v35;
    v29[4] = v33;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1BFF6364C((uint64_t)&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106C068()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data, (void (*)(void, __n128))sub_1BFF6DB3C, (void (*)(unint64_t, char *))sub_1C0079BF0, (void (*)(char *, unint64_t))sub_1BFF5F618);
}

void *sub_1C106C0BC()
{
  uint64_t v1 = v0;
  sub_1C1077D78();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    long long v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v24 = *(_OWORD *)(v21 + 8);
    *long long v23 = v19;
    v23[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106C2A0()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EB87A3B0, (void (*)(void))sub_1C006F53C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106C494()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatScopedOption, (void (*)(void, __n128))sub_1C1077EC8, (void (*)(unint64_t, char *))sub_1C1077F30, (void (*)(char *, unint64_t))sub_1C1077F48);
}

void *sub_1C106C4E8()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatJson, (void (*)(void, __n128))sub_1C1077E48, (void (*)(unint64_t, char *))sub_1C1077EB0, (void (*)(char *, unint64_t))sub_1C02953C4);
}

void *sub_1C106C53C()
{
  sub_1C107972C();
  int64_t v38 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C15204DC();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v37 = v3;
    uint64_t result = (void *)swift_release();
    *int64_t v38 = v37;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v42 = v3;
  if (v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v42;
  }
  uint64_t v40 = v1 + 64;
  uint64_t v41 = v1;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v43 = v7;
      unint64_t v12 = v11 | (v7 << 6);
      uint64_t v13 = v41;
      uint64_t v3 = v42;
      goto LABEL_12;
    }
    int64_t v33 = v7 + 1;
    uint64_t v13 = v41;
    uint64_t v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v39) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v40 + 8 * v33);
    int64_t v35 = v7 + 1;
    if (!v34)
    {
      int64_t v35 = v7 + 2;
      if (v7 + 2 >= v39) {
        goto LABEL_26;
      }
      unint64_t v34 = *(void *)(v40 + 8 * v35);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v34 - 1) & v34;
    int64_t v43 = v35;
    unint64_t v12 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_12:
    uint64_t v14 = 16 * v12;
    unint64_t v15 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v12);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = 88 * v12;
    uint64_t v19 = *(void *)(v13 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 48);
    uint64_t v27 = *(void *)(v19 + 56);
    uint64_t v28 = *(void *)(v19 + 64);
    uint64_t v29 = *(void *)(v19 + 72);
    char v30 = *(unsigned char *)(v19 + 80);
    long long v31 = (void *)(*(void *)(v3 + 48) + v14);
    *long long v31 = v17;
    v31[1] = v16;
    uint64_t v32 = *(void *)(v3 + 56) + v18;
    *(void *)uint64_t v32 = v20;
    *(void *)(v32 + 8) = v21;
    *(void *)(v32 + 16) = v22;
    *(void *)(v32 + 24) = v23;
    *(void *)(v32 + 32) = v24;
    *(void *)(v32 + 40) = v25;
    *(void *)(v32 + 48) = v26;
    *(void *)(v32 + 56) = v27;
    *(void *)(v32 + 64) = v28;
    *(void *)(v32 + 72) = v29;
    *(unsigned char *)(v32 + 80) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1BFF429DC(v26, v27, v28, v29, v30);
    int64_t v7 = v43;
  }
  uint64_t v36 = v7 + 3;
  if (v7 + 3 >= v39) {
    goto LABEL_26;
  }
  unint64_t v34 = *(void *)(v40 + 8 * v36);
  if (v34)
  {
    int64_t v35 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v39) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v40 + 8 * v35);
    ++v36;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106C798()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA830, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v26 = v18;
    v26[1] = v19;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v27 = v22;
    *(void *)(v27 + 8) = v23;
    *(unsigned char *)(v27 + 16) = v24;
    *(void *)(v27 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106C9A0()
{
  uint64_t v1 = v0;
  sub_1C1077FC8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = (long long *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    long long v23 = *v21;
    long long v24 = v21[1];
    void *v22 = v19;
    v22[1] = v18;
    uint64_t v25 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    *uint64_t v25 = v23;
    v25[1] = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106CB54()
{
  return sub_1C1075504((void (*)(void))sub_1BFF956E0);
}

void *sub_1C106CB6C()
{
  return sub_1BFEA21B0((void (*)(void))sub_1BFEB1454);
}

void *sub_1C106CB84()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatOption, (void (*)(void, __n128))sub_1BFFC2A0C, (void (*)(unint64_t, char *))sub_1C019FFF0, (void (*)(char *, unint64_t))sub_1C00AB068);
}

id sub_1C106CBD8()
{
  uint64_t v1 = v0;
  sub_1C1079EDC(0, (unint64_t *)&qword_1EB85EFB0, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106CD98()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1077080();
  long long v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C15204DC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *long long v24 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v25 = v5 + 64;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C106D028()
{
  uint64_t v1 = v0;
  sub_1C0224E0C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106D1CC()
{
  uint64_t v1 = v0;
  sub_1C1077130();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106D378()
{
  return sub_1C1074930(MEMORY[0x1E4FAAFC8], (void (*)(void, __n128))sub_1C1077DE0);
}

void *sub_1C106D3A4()
{
  uint64_t v1 = v0;
  sub_1BFFE0788();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  long long v31 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 104 * v15;
    sub_1BFFD588C(*(void *)(v2 + 56) + 104 * v15, (uint64_t)v32, (uint64_t (*)(void))sub_1BFFB49BC);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v18;
    v21[1] = v19;
    uint64_t v22 = *(void *)(v4 + 56) + v20;
    long long v23 = v32[2];
    long long v24 = v32[1];
    *(_OWORD *)uint64_t v22 = v32[0];
    long long v25 = v32[3];
    long long v26 = v32[4];
    long long v27 = v32[5];
    *(void *)(v22 + 96) = v33;
    *(_OWORD *)(v22 + 64) = v26;
    *(_OWORD *)(v22 + 80) = v27;
    *(_OWORD *)(v22 + 32) = v23;
    *(_OWORD *)(v22 + 48) = v25;
    *(_OWORD *)(v22 + 16) = v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v31;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C106D5C8()
{
  uint64_t v1 = v0;
  sub_1C0042B1C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106D770()
{
  return sub_1C1075504(sub_1BFEC6764);
}

void *sub_1C106D788()
{
  return sub_1C1075504(sub_1BFEC6574);
}

void *sub_1C106D7A0()
{
  uint64_t v1 = v0;
  sub_1C1077C24(0, &qword_1EA1AA988, &qword_1EA1AA980, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue, MEMORY[0x1E4FBB718]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    int64_t v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v32 >= v12) {
      goto LABEL_23;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v32);
    ++v8;
    if (!v33)
    {
      int64_t v8 = v32 + 1;
      if (v32 + 1 >= v12) {
        goto LABEL_23;
      }
      unint64_t v33 = *(void *)(v6 + 8 * v8);
      if (!v33) {
        break;
      }
    }
LABEL_22:
    unint64_t v11 = (v33 - 1) & v33;
    unint64_t v14 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_9:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = 112 * v14;
    uint64_t v20 = *(void *)(v2 + 56) + v19;
    uint64_t v21 = *(void *)(v20 + 96);
    char v22 = *(unsigned char *)(v20 + 104);
    char v23 = *(unsigned char *)(v20 + 105);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v15);
    long long v25 = *(_OWORD *)v20;
    long long v26 = *(_OWORD *)(v20 + 16);
    long long v27 = *(_OWORD *)(v20 + 32);
    long long v28 = *(_OWORD *)(v20 + 48);
    long long v29 = *(_OWORD *)(v20 + 64);
    long long v30 = *(_OWORD *)(v20 + 80);
    *int64_t v24 = v18;
    v24[1] = v17;
    uint64_t v31 = *(void *)(v4 + 56) + v19;
    *(_OWORD *)uint64_t v31 = v25;
    *(_OWORD *)(v31 + 16) = v26;
    *(_OWORD *)(v31 + 32) = v27;
    *(_OWORD *)(v31 + 48) = v28;
    *(_OWORD *)(v31 + 64) = v29;
    *(_OWORD *)(v31 + 80) = v30;
    *(void *)(v31 + 96) = v21;
    *(unsigned char *)(v31 + 104) = v22;
    *(unsigned char *)(v31 + 105) = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v12) {
    goto LABEL_23;
  }
  unint64_t v33 = *(void *)(v6 + 8 * v34);
  if (v33)
  {
    int64_t v8 = v34;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_23;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v8);
    ++v34;
    if (v33) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1C106D9B0()
{
  uint64_t v1 = v0;
  sub_1C10799E8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106DB54()
{
  uint64_t v1 = v0;
  sub_1C1079AFC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106DCFC()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, (unint64_t *)&unk_1EA1AA810, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v38 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v38);
    ++v9;
    if (!v39)
    {
      int64_t v9 = v38 + 1;
      if (v38 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v39 = *(void *)(v6 + 8 * v9);
      if (!v39) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v39 - 1) & v39;
    unint64_t v15 = __clz(__rbit64(v39)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 152 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v22 = *(_OWORD *)(v21 + 32);
    long long v23 = *(_OWORD *)(v21 + 48);
    long long v24 = *(_OWORD *)(v21 + 80);
    long long v45 = *(_OWORD *)(v21 + 64);
    long long v46 = v24;
    long long v44 = v23;
    long long v26 = *(_OWORD *)(v21 + 112);
    long long v25 = *(_OWORD *)(v21 + 128);
    long long v27 = *(_OWORD *)(v21 + 96);
    __int16 v50 = *(_WORD *)(v21 + 144);
    long long v48 = v26;
    long long v49 = v25;
    long long v47 = v27;
    long long v28 = *(_OWORD *)(v21 + 16);
    long long v41 = *(_OWORD *)v21;
    long long v42 = v28;
    long long v43 = v22;
    long long v29 = (void *)(*(void *)(v4 + 48) + v16);
    void *v29 = v19;
    v29[1] = v18;
    uint64_t v30 = *(void *)(v4 + 56) + v20;
    long long v31 = v42;
    *(_OWORD *)uint64_t v30 = v41;
    *(_OWORD *)(v30 + 16) = v31;
    long long v32 = v43;
    long long v33 = v44;
    long long v34 = v46;
    *(_OWORD *)(v30 + 64) = v45;
    *(_OWORD *)(v30 + 80) = v34;
    *(_OWORD *)(v30 + 32) = v32;
    *(_OWORD *)(v30 + 48) = v33;
    long long v35 = v47;
    long long v36 = v48;
    long long v37 = v49;
    *(_WORD *)(v30 + 144) = v50;
    *(_OWORD *)(v30 + 112) = v36;
    *(_OWORD *)(v30 + 128) = v37;
    *(_OWORD *)(v30 + 96) = v35;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C02D1450((uint64_t)&v41);
  }
  int64_t v40 = v38 + 2;
  if (v40 >= v13) {
    goto LABEL_26;
  }
  unint64_t v39 = *(void *)(v6 + 8 * v40);
  if (v39)
  {
    int64_t v9 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v9);
    ++v40;
    if (v39) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106DF4C()
{
  uint64_t v1 = v0;
  sub_1C0191834();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106E0D8()
{
  uint64_t v1 = v0;
  sub_1C019189C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106E264()
{
  return sub_1C107053C((void (*)(void))sub_1C10772C4);
}

void *sub_1C106E27C()
{
  return sub_1C106E294((void (*)(void))sub_1C1077198);
}

void *sub_1C106E294(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v14) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v7 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v7 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    int64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 48 * v16;
    long long v22 = (long long *)(*(void *)(v3 + 56) + v21);
    long long v23 = (void *)(*(void *)(v5 + 48) + v17);
    long long v24 = *v22;
    long long v30 = v22[1];
    long long v25 = v22[2];
    *long long v23 = v20;
    v23[1] = v19;
    long long v26 = (_OWORD *)(*(void *)(v5 + 56) + v21);
    *long long v26 = v24;
    v26[1] = v30;
    _OWORD v26[2] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v14) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v7 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v7 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106E4B4()
{
  return sub_1C107319C((void (*)(void))sub_1C1078958);
}

void *sub_1C106E4CC()
{
  uint64_t v1 = v0;
  sub_1C10793BC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v25 = v21[2];
    uint64_t v24 = v21[3];
    long long v26 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v26 = v18;
    v26[1] = v19;
    int64_t v27 = (void *)(*(void *)(v4 + 56) + v20);
    *int64_t v27 = v22;
    v27[1] = v23;
    _OWORD v27[2] = v25;
    v27[3] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106E6A0()
{
  return sub_1C1070C0C(&qword_1EB86B5D0, (unint64_t *)&qword_1EB86B1A0, (uint64_t)&type metadata for SportsConfigResourceEmbed);
}

void *sub_1C106E6BC()
{
  sub_1C1079354();
  int64_t v38 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C15204DC();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v37 = v3;
    id result = (void *)swift_release();
    *int64_t v38 = v37;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v42 = v3;
  if (v6)
  {
    id result = memmove(result, __src, 8 * v5);
    uint64_t v3 = v42;
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v41 = v1;
  while (1)
  {
    if (v10)
    {
      uint64_t v43 = (v10 - 1) & v10;
      int64_t v44 = v7;
      unint64_t v11 = __clz(__rbit64(v10)) | (v7 << 6);
      uint64_t v12 = v41;
      uint64_t v3 = v42;
      goto LABEL_12;
    }
    int64_t v33 = v7 + 1;
    uint64_t v12 = v41;
    uint64_t v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v40) {
      goto LABEL_26;
    }
    unint64_t v34 = *((void *)__src + v33);
    int64_t v35 = v7 + 1;
    if (!v34)
    {
      int64_t v35 = v7 + 2;
      if (v7 + 2 >= v40) {
        goto LABEL_26;
      }
      unint64_t v34 = *((void *)__src + v35);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    uint64_t v43 = (v34 - 1) & v34;
    int64_t v44 = v35;
    unint64_t v11 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_12:
    uint64_t v13 = 16 * v11;
    unint64_t v14 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v11);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = 112 * v11;
    uint64_t v18 = (uint64_t *)(*(void *)(v12 + 56) + v17);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    uint64_t v23 = v18[4];
    uint64_t v24 = v18[5];
    uint64_t v25 = v18[6];
    uint64_t v26 = v18[7];
    uint64_t v27 = v18[8];
    uint64_t v28 = v18[9];
    uint64_t v29 = v18[11];
    uint64_t v46 = v18[10];
    uint64_t v30 = v18[13];
    uint64_t v45 = v18[12];
    long long v31 = (void *)(*(void *)(v3 + 48) + v13);
    *long long v31 = v16;
    v31[1] = v15;
    long long v32 = (void *)(*(void *)(v3 + 56) + v17);
    void *v32 = v19;
    v32[1] = v20;
    v32[2] = v21;
    v32[3] = v22;
    v32[4] = v23;
    v32[5] = v24;
    _OWORD v32[6] = v25;
    v32[7] = v26;
    v32[8] = v27;
    v32[9] = v28;
    v32[10] = v46;
    v32[11] = v29;
    v32[12] = v45;
    v32[13] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C033ACB8(v21, v22);
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C033ADE4(v26, v27, v28, v46);
    unint64_t v10 = v43;
    int64_t v7 = v44;
  }
  uint64_t v36 = v7 + 3;
  if (v7 + 3 >= v40) {
    goto LABEL_26;
  }
  unint64_t v34 = *((void *)__src + v36);
  if (v34)
  {
    int64_t v35 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v40) {
      goto LABEL_26;
    }
    unint64_t v34 = *((void *)__src + v35);
    ++v36;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106E940()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption, (void (*)(void, __n128))sub_1C1078628, (void (*)(unint64_t, char *))sub_1C0387C7C, (void (*)(char *, unint64_t))sub_1C017807C);
}

void *sub_1C106E994()
{
  uint64_t v1 = v0;
  sub_1C10785C0();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = v15 << 7;
    long long v22 = *(_OWORD *)(v17 + v21 + 112);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    long long v23 = *(_OWORD *)(v17 + v21 + 80);
    long long v45 = *(_OWORD *)(v17 + v21 + 96);
    long long v46 = v22;
    long long v43 = v24;
    long long v44 = v23;
    long long v26 = *(_OWORD *)(v17 + v21);
    long long v25 = *(_OWORD *)(v17 + v21 + 16);
    long long v27 = *(_OWORD *)(v17 + v21 + 48);
    long long v41 = *(_OWORD *)(v17 + v21 + 32);
    long long v42 = v27;
    long long v39 = v26;
    long long v40 = v25;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v28 = v20;
    v28[1] = v19;
    uint64_t v29 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    long long v30 = v39;
    long long v31 = v40;
    long long v32 = v42;
    v29[2] = v41;
    v29[3] = v32;
    _OWORD *v29 = v30;
    v29[1] = v31;
    long long v33 = v43;
    long long v34 = v44;
    long long v35 = v46;
    v29[6] = v45;
    v29[7] = v35;
    v29[4] = v33;
    v29[5] = v34;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C090FEBC((uint64_t)&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106EB90()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA920, (void (*)(void))sub_1C1078228);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 3 * v15;
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(v2 + 48) + 8 * v16;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    v16 *= 16;
    unint64_t v21 = (long long *)(*(void *)(v2 + 56) + v16);
    uint64_t v22 = *(void *)(v4 + 48) + v17;
    long long v23 = *v21;
    long long v30 = v21[1];
    long long v24 = v21[2];
    unsigned __int8 v25 = *(unsigned char *)(v18 + 16);
    *(void *)uint64_t v22 = *(void *)v18;
    *(void *)(v22 + 8) = v20;
    *(unsigned char *)(v22 + 16) = v25;
    long long v26 = (_OWORD *)(*(void *)(v4 + 56) + v16);
    *long long v26 = v23;
    v26[1] = v30;
    _OWORD v26[2] = v24;
    sub_1C024FAC0(v19, v20, v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106EDDC()
{
  return sub_1C1075504((void (*)(void))sub_1C107839C);
}

void *sub_1C106EDF4()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C1078728);
}

void *sub_1C106EE0C()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(void, __n128))sub_1C1078690, (void (*)(unint64_t, char *))sub_1C10786F8, (void (*)(char *, unint64_t))sub_1C1078710);
}

void *sub_1C106EE60()
{
  return sub_1C107053C((void (*)(void))sub_1C10784CC);
}

void *sub_1C106EE78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0191688();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C15204DC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v7;
    return result;
  }
  unsigned __int8 v25 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1BFFD588C(*(void *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    sub_1BFF3DBF0((uint64_t)v4, *(void *)(v7 + 48) + v19, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    *(void *)(*(void *)(v7 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v9 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C106F0F8()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA850, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v38 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v38);
    ++v9;
    if (!v39)
    {
      int64_t v9 = v38 + 1;
      if (v38 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v39 = *(void *)(v6 + 8 * v9);
      if (!v39) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v39 - 1) & v39;
    unint64_t v15 = __clz(__rbit64(v39)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 152 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v22 = *(_OWORD *)(v21 + 32);
    long long v23 = *(_OWORD *)(v21 + 48);
    long long v24 = *(_OWORD *)(v21 + 80);
    long long v45 = *(_OWORD *)(v21 + 64);
    long long v46 = v24;
    long long v44 = v23;
    long long v26 = *(_OWORD *)(v21 + 112);
    long long v25 = *(_OWORD *)(v21 + 128);
    long long v27 = *(_OWORD *)(v21 + 96);
    uint64_t v50 = *(void *)(v21 + 144);
    long long v48 = v26;
    long long v49 = v25;
    long long v47 = v27;
    long long v28 = *(_OWORD *)(v21 + 16);
    long long v41 = *(_OWORD *)v21;
    long long v42 = v28;
    long long v43 = v22;
    int64_t v29 = (void *)(*(void *)(v4 + 48) + v16);
    void *v29 = v19;
    v29[1] = v18;
    uint64_t v30 = *(void *)(v4 + 56) + v20;
    long long v31 = v42;
    *(_OWORD *)uint64_t v30 = v41;
    *(_OWORD *)(v30 + 16) = v31;
    long long v32 = v43;
    long long v33 = v44;
    long long v34 = v46;
    *(_OWORD *)(v30 + 64) = v45;
    *(_OWORD *)(v30 + 80) = v34;
    *(_OWORD *)(v30 + 32) = v32;
    *(_OWORD *)(v30 + 48) = v33;
    long long v35 = v47;
    long long v36 = v48;
    long long v37 = v49;
    *(void *)(v30 + 144) = v50;
    *(_OWORD *)(v30 + 112) = v36;
    *(_OWORD *)(v30 + 128) = v37;
    *(_OWORD *)(v30 + 96) = v35;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C040B90C((uint64_t)&v41);
  }
  int64_t v40 = v38 + 2;
  if (v40 >= v13) {
    goto LABEL_26;
  }
  unint64_t v39 = *(void *)(v6 + 8 * v40);
  if (v39)
  {
    int64_t v9 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v9);
    ++v40;
    if (v39) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106F348()
{
  sub_1C1079D34(0, &qword_1EA1AA860, (void (*)(void))sub_1C008192C);
  long long v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C15204DC();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *long long v31 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v12) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v28);
    ++v8;
    if (!v29)
    {
      int64_t v8 = v28 + 1;
      if (v28 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v5 + 8 * v8);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v29 - 1) & v29;
    unint64_t v14 = __clz(__rbit64(v29)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 48 * v14;
    uint64_t v20 = *(void *)(v1 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    LOBYTE(v20) = *(unsigned char *)(v20 + 40);
    long long v26 = (void *)(*(void *)(v3 + 48) + v15);
    *long long v26 = v17;
    v26[1] = v18;
    uint64_t v27 = *(void *)(v3 + 56) + v19;
    *(void *)uint64_t v27 = v21;
    *(void *)(v27 + 8) = v22;
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v24;
    *(void *)(v27 + 32) = v25;
    *(unsigned char *)(v27 + 40) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v24);
    id result = (void *)sub_1BFDC11A4(v25);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v12) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v5 + 8 * v30);
  if (v29)
  {
    int64_t v8 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v8);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106F57C()
{
  sub_1C1079D34(0, (unint64_t *)&unk_1EA1AA820, (void (*)(void))sub_1C008192C);
  long long v34 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C15204DC();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v33 = v3;
    id result = (void *)swift_release();
    *long long v34 = v33;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v37 = v3;
  if (v6)
  {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v37;
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v36 = v1 + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      uint64_t v3 = v37;
      goto LABEL_12;
    }
    int64_t v30 = v7 + 1;
    uint64_t v3 = v37;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v35) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v30);
    ++v7;
    if (!v31)
    {
      int64_t v7 = v30 + 1;
      if (v30 + 1 >= v35) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v36 + 8 * v7);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v31 - 1) & v31;
    unint64_t v12 = __clz(__rbit64(v31)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 16 * v12;
    unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    unint64_t v17 = v12 << 6;
    unint64_t v18 = *(void *)(v1 + 56) + v17;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v24 = *(void *)(v18 + 48);
    __int16 v25 = *(_WORD *)(v18 + 57);
    long long v26 = (void *)(*(void *)(v3 + 48) + v13);
    char v27 = *(unsigned char *)(v18 + 32);
    char v28 = *(unsigned char *)(v18 + 56);
    *long long v26 = v16;
    v26[1] = v15;
    unint64_t v29 = *(void *)(v3 + 56) + v17;
    *(void *)unint64_t v29 = v19;
    *(void *)(v29 + 8) = v20;
    *(void *)(v29 + 16) = v21;
    *(void *)(v29 + 24) = v22;
    *(unsigned char *)(v29 + 32) = v27;
    *(void *)(v29 + 40) = v23;
    *(void *)(v29 + 48) = v24;
    *(unsigned char *)(v29 + 56) = v28;
    *(_WORD *)(v29 + 57) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v21, v22, v27);
    id result = (void *)sub_1BFEF6828(v23, v24, v28);
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v35) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v36 + 8 * v32);
  if (v31)
  {
    int64_t v7 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v7 >= v35) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v7);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106F7E0()
{
  uint64_t v1 = v0;
  sub_1C1077554();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v24 = *(void *)(v21 + 24);
    uint64_t v23 = *(void *)(v21 + 32);
    uint64_t v25 = *(void *)(v21 + 40);
    long long v26 = (void *)(*(void *)(v4 + 48) + v16);
    long long v27 = *(_OWORD *)(v21 + 8);
    *long long v26 = v19;
    v26[1] = v18;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v22;
    *(_OWORD *)(v28 + 8) = v27;
    *(void *)(v28 + 24) = v24;
    *(void *)(v28 + 32) = v23;
    *(void *)(v28 + 40) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106F9EC()
{
  return sub_1C1075504((void (*)(void))sub_1C107732C);
}

void *sub_1C106FA04()
{
  uint64_t v1 = v0;
  sub_1C0191B08();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1C0934724(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1BFF6A008(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_1BFF993A8(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C106FBE8()
{
  uint64_t v1 = v0;
  sub_1C10779D4(0, &qword_1EA1AA880, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerManager, (void (*)(void))sub_1C1078154);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    long long v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C106FDD0()
{
  uint64_t v1 = v0;
  sub_1C0062B54();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C106FF70()
{
  uint64_t v1 = v0;
  sub_1C0062BCC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1070110()
{
  return sub_1C1074574((void (*)(void))sub_1BFED7220, (void (*)(unsigned char *, uint64_t))sub_1BFC773DC);
}

void *sub_1C107013C()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C1078D88);
}

void *sub_1C1070154()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C1079B64);
}

id sub_1C107016C()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, (unint64_t *)&unk_1EB87A3C0, (void (*)(void))sub_1C006A604);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 16 * v15;
    uint64_t v17 = *(void **)v16;
    LOBYTE(v16) = *(unsigned char *)(v16 + 8);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v18 = *(void *)(v4 + 56) + 16 * v15;
    *(void *)uint64_t v18 = v17;
    *(unsigned char *)(v18 + 8) = v16;
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C1070348()
{
  uint64_t v1 = v0;
  sub_1C10779D4(0, (unint64_t *)&qword_1EB87A3A0, (void (*)(uint64_t))type metadata accessor for FormatLayoutView, (void (*)(void))sub_1C006F53C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain();
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1070524()
{
  return sub_1C107053C((void (*)(void))sub_1C1079424);
}

void *sub_1C107053C(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C10706E4()
{
  uint64_t v1 = v0;
  sub_1C1079C9C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C1070884()
{
  return sub_1C10756D8(sub_1C0191E48);
}

void *sub_1C107089C()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for SharedItem, (void (*)(void, __n128))sub_1C1079534, (void (*)(unint64_t, char *))sub_1C0977524, (void (*)(char *, unint64_t))sub_1C097768C);
}

void *sub_1C10708F0()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C107882C);
}

id sub_1C1070908()
{
  return sub_1C10756D8((void (*)(void))sub_1C107918C);
}

void *sub_1C1070920()
{
  return sub_1C00310C8(type metadata accessor for FeedClusteringOptions, (void (*)(void, __n128))sub_1C10795E8, (void (*)(unint64_t, char *))sub_1C1079650, (void (*)(char *, unint64_t))sub_1C0934DEC);
}

id sub_1C1070974()
{
  return sub_1C10756D8((void (*)(void))sub_1C0191E78);
}

void *sub_1C107098C()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA808, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      int64_t v9 = v42 + 1;
      if (v42 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v43 = *(void *)(v6 + 8 * v9);
      if (!v43) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v43 - 1) & v43;
    unint64_t v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 184 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v22 = *(_OWORD *)(v21 + 112);
    long long v24 = *(_OWORD *)(v21 + 64);
    long long v23 = *(_OWORD *)(v21 + 80);
    long long v51 = *(_OWORD *)(v21 + 96);
    long long v52 = v22;
    long long v49 = v24;
    long long v50 = v23;
    long long v26 = *(_OWORD *)(v21 + 144);
    long long v25 = *(_OWORD *)(v21 + 160);
    long long v27 = *(_OWORD *)(v21 + 128);
    char v56 = *(unsigned char *)(v21 + 176);
    long long v54 = v26;
    long long v55 = v25;
    long long v53 = v27;
    long long v29 = *(_OWORD *)v21;
    long long v28 = *(_OWORD *)(v21 + 16);
    long long v30 = *(_OWORD *)(v21 + 48);
    long long v47 = *(_OWORD *)(v21 + 32);
    long long v48 = v30;
    long long v45 = v29;
    long long v46 = v28;
    int64_t v31 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v31 = v19;
    v31[1] = v18;
    uint64_t v32 = *(void *)(v4 + 56) + v20;
    long long v33 = v45;
    long long v34 = v46;
    long long v35 = v48;
    *(_OWORD *)(v32 + 32) = v47;
    *(_OWORD *)(v32 + 48) = v35;
    *(_OWORD *)uint64_t v32 = v33;
    *(_OWORD *)(v32 + 16) = v34;
    long long v36 = v49;
    long long v37 = v50;
    long long v38 = v52;
    *(_OWORD *)(v32 + 96) = v51;
    *(_OWORD *)(v32 + 112) = v38;
    *(_OWORD *)(v32 + 64) = v36;
    *(_OWORD *)(v32 + 80) = v37;
    long long v39 = v53;
    long long v40 = v54;
    long long v41 = v55;
    *(unsigned char *)(v32 + 176) = v56;
    *(_OWORD *)(v32 + 144) = v40;
    *(_OWORD *)(v32 + 160) = v41;
    *(_OWORD *)(v32 + 128) = v39;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C05DC6FC((uint64_t)&v45);
  }
  int64_t v44 = v42 + 2;
  if (v44 >= v13) {
    goto LABEL_26;
  }
  unint64_t v43 = *(void *)(v6 + 8 * v44);
  if (v43)
  {
    int64_t v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v9);
    ++v44;
    if (v43) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1070BF0()
{
  return sub_1C1070C0C((unint64_t *)&unk_1EA1AA9B0, &qword_1EA1A15A0, (uint64_t)&type metadata for SharedItemManager.ShareAttributionViewContext);
}

void *sub_1C1070C0C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C1077C24(0, a1, a2, a3, MEMORY[0x1E4FBB320]);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1C15204DC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v4 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      int64_t v12 = v25 + 1;
      if (v25 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v9 + 8 * v12);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    uint64_t v20 = (void *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v21 = v20[1];
    uint64_t v22 = 8 * v18;
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v22);
    long long v24 = (void *)(*(void *)(v7 + 48) + v19);
    *long long v24 = *v20;
    v24[1] = v21;
    *(void *)(*(void *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v16) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    int64_t v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1070DE0()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (void (*)(void, __n128))sub_1C10781A8, (void (*)(unint64_t, char *))sub_1C1078210, (void (*)(char *, unint64_t))sub_1C097D460);
}

void *sub_1C1070E34(unint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  sub_1C1079D34(0, a1, a2);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C15204DC();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v3 = v6;
    return result;
  }
  id result = (void *)(v5 + 64);
  uint64_t v8 = v4 + 64;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v15) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v8 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v22 = __clz(__rbit64(v20));
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v17 = v22 + (v11 << 6);
LABEL_12:
    uint64_t v18 = *(void *)(*(void *)(v4 + 56) + 8 * v17);
    *(unsigned char *)(*(void *)(v6 + 48) + v17) = *(unsigned char *)(*(void *)(v4 + 48) + v17);
    *(void *)(*(void *)(v6 + 56) + 8 * v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v15) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v8 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1070FD4()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, (unint64_t *)&unk_1EA1AA7E0, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v38 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v38);
    ++v9;
    if (!v39)
    {
      int64_t v9 = v38 + 1;
      if (v38 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v39 = *(void *)(v6 + 8 * v9);
      if (!v39) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v39 - 1) & v39;
    unint64_t v15 = __clz(__rbit64(v39)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 160 * v15;
    long long v22 = *(_OWORD *)(v17 + v21 + 32);
    long long v23 = *(_OWORD *)(v17 + v21 + 48);
    long long v24 = *(_OWORD *)(v17 + v21 + 80);
    long long v45 = *(_OWORD *)(v17 + v21 + 64);
    long long v46 = v24;
    long long v44 = v23;
    long long v26 = *(_OWORD *)(v17 + v21 + 112);
    long long v25 = *(_OWORD *)(v17 + v21 + 128);
    long long v27 = *(_OWORD *)(v17 + v21 + 96);
    *(_OWORD *)((char *)v49 + 9) = *(_OWORD *)(v17 + v21 + 137);
    long long v48 = v26;
    v49[0] = v25;
    long long v47 = v27;
    long long v28 = *(_OWORD *)(v17 + v21 + 16);
    long long v41 = *(_OWORD *)(v17 + v21);
    long long v42 = v28;
    long long v43 = v22;
    long long v29 = (void *)(*(void *)(v4 + 48) + v16);
    void *v29 = v20;
    v29[1] = v19;
    long long v30 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    long long v31 = v42;
    *long long v30 = v41;
    v30[1] = v31;
    long long v32 = v43;
    long long v33 = v44;
    long long v34 = v46;
    v30[4] = v45;
    v30[5] = v34;
    v30[2] = v32;
    v30[3] = v33;
    long long v35 = v47;
    long long v36 = v48;
    long long v37 = v49[0];
    *(_OWORD *)((char *)v30 + 137) = *(_OWORD *)((char *)v49 + 9);
    v30[7] = v36;
    v30[8] = v37;
    v30[6] = v35;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C05DD5B8((uint64_t)&v41);
  }
  int64_t v40 = v38 + 2;
  if (v40 >= v13) {
    goto LABEL_26;
  }
  unint64_t v39 = *(void *)(v6 + 8 * v40);
  if (v39)
  {
    int64_t v9 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v39 = *(void *)(v6 + 8 * v9);
    ++v40;
    if (v39) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1071228()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA840, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      int64_t v9 = v42 + 1;
      if (v42 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v43 = *(void *)(v6 + 8 * v9);
      if (!v43) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v43 - 1) & v43;
    unint64_t v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 208 * v15;
    long long v23 = *(_OWORD *)(v17 + v21 + 16);
    long long v22 = *(_OWORD *)(v17 + v21 + 32);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    long long v48 = *(_OWORD *)(v17 + v21 + 48);
    long long v49 = v24;
    long long v25 = *(_OWORD *)(v17 + v21 + 128);
    long long v27 = *(_OWORD *)(v17 + v21 + 80);
    long long v26 = *(_OWORD *)(v17 + v21 + 96);
    long long v52 = *(_OWORD *)(v17 + v21 + 112);
    long long v53 = v25;
    long long v50 = v27;
    long long v51 = v26;
    long long v28 = *(_OWORD *)(v17 + v21 + 192);
    long long v30 = *(_OWORD *)(v17 + v21 + 144);
    long long v29 = *(_OWORD *)(v17 + v21 + 160);
    long long v56 = *(_OWORD *)(v17 + v21 + 176);
    long long v57 = v28;
    long long v54 = v30;
    long long v55 = v29;
    long long v45 = *(_OWORD *)(v17 + v21);
    long long v46 = v23;
    long long v47 = v22;
    long long v31 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v31 = v20;
    v31[1] = v19;
    long long v32 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    _OWORD *v32 = v45;
    long long v33 = v46;
    long long v34 = v47;
    long long v35 = v49;
    v32[3] = v48;
    v32[4] = v35;
    v32[1] = v33;
    v32[2] = v34;
    long long v36 = v50;
    long long v37 = v51;
    long long v38 = v53;
    v32[7] = v52;
    v32[8] = v38;
    v32[5] = v36;
    _OWORD v32[6] = v37;
    long long v39 = v54;
    long long v40 = v55;
    long long v41 = v57;
    v32[11] = v56;
    v32[12] = v41;
    v32[9] = v39;
    v32[10] = v40;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C05DCC88((uint64_t)&v45);
  }
  int64_t v44 = v42 + 2;
  if (v44 >= v13) {
    goto LABEL_26;
  }
  unint64_t v43 = *(void *)(v6 + 8 * v44);
  if (v43)
  {
    int64_t v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v9);
    ++v44;
    if (v43) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C107148C()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (void (*)(void, __n128))sub_1C107827C, (void (*)(unint64_t, char *))sub_1C0C7A164, (void (*)(char *, unint64_t))sub_1C10782E4);
}

void *sub_1C10714E0()
{
  uint64_t v1 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10779D4(0, &qword_1EA1AA898, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, (void (*)(void))sub_1C1078228);
  long long v26 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1C15204DC();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *long long v26 = v6;
    return result;
  }
  id result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v27 = v4 + 64;
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    unint64_t v20 = *(void *)(v29 + 72) * v15;
    unsigned __int8 v21 = *(unsigned char *)(v17 + 16);
    sub_1BFFD588C(*(void *)(v4 + 56) + v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    uint64_t v22 = *(void *)(v6 + 48) + v16;
    *(void *)uint64_t v22 = v18;
    *(void *)(v22 + 8) = v19;
    *(unsigned char *)(v22 + 16) = v21;
    sub_1BFF3DBF0((uint64_t)v3, *(void *)(v6 + 56) + v20, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    id result = (void *)sub_1C024FAC0(v18, v19, v21);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C10717B4()
{
  return sub_1C10756D8((void (*)(void))sub_1C10794BC);
}

void *sub_1C10717CC()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA7D0, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 528 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 528 * v15), 0x210uLL);
    unsigned __int8 v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unsigned __int8 v21 = v19;
    v21[1] = v18;
    memcpy((void *)(*(void *)(v4 + 56) + v20), __dst, 0x210uLL);
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C05DC340((uint64_t)__dst);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C10719F0()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA7C8, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      int64_t v9 = v42 + 1;
      if (v42 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v43 = *(void *)(v6 + 8 * v9);
      if (!v43) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v43 - 1) & v43;
    unint64_t v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 200 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v23 = *(_OWORD *)(v21 + 16);
    long long v22 = *(_OWORD *)(v21 + 32);
    long long v24 = *(_OWORD *)(v21 + 64);
    long long v48 = *(_OWORD *)(v21 + 48);
    long long v49 = v24;
    long long v25 = *(_OWORD *)(v21 + 128);
    long long v27 = *(_OWORD *)(v21 + 80);
    long long v26 = *(_OWORD *)(v21 + 96);
    long long v52 = *(_OWORD *)(v21 + 112);
    long long v53 = v25;
    long long v50 = v27;
    long long v51 = v26;
    long long v29 = *(_OWORD *)(v21 + 160);
    long long v28 = *(_OWORD *)(v21 + 176);
    long long v30 = *(_OWORD *)(v21 + 144);
    uint64_t v57 = *(void *)(v21 + 192);
    long long v55 = v29;
    long long v56 = v28;
    long long v54 = v30;
    long long v45 = *(_OWORD *)v21;
    long long v46 = v23;
    long long v47 = v22;
    long long v31 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v31 = v19;
    v31[1] = v18;
    uint64_t v32 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v32 = v45;
    long long v33 = v46;
    long long v34 = v47;
    long long v35 = v49;
    *(_OWORD *)(v32 + 48) = v48;
    *(_OWORD *)(v32 + 64) = v35;
    *(_OWORD *)(v32 + 16) = v33;
    *(_OWORD *)(v32 + 32) = v34;
    long long v36 = v50;
    long long v37 = v51;
    long long v38 = v53;
    *(_OWORD *)(v32 + 112) = v52;
    *(_OWORD *)(v32 + 128) = v38;
    *(_OWORD *)(v32 + 80) = v36;
    *(_OWORD *)(v32 + 96) = v37;
    long long v39 = v54;
    long long v40 = v55;
    long long v41 = v56;
    *(void *)(v32 + 192) = v57;
    *(_OWORD *)(v32 + 160) = v40;
    *(_OWORD *)(v32 + 176) = v41;
    *(_OWORD *)(v32 + 144) = v39;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C05DC8FC((uint64_t)&v45);
  }
  int64_t v44 = v42 + 2;
  if (v44 >= v13) {
    goto LABEL_26;
  }
  unint64_t v43 = *(void *)(v6 + 8 * v44);
  if (v43)
  {
    int64_t v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v9);
    ++v44;
    if (v43) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1071C64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10779D4(0, (unint64_t *)&unk_1EA1AA7F0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle.Selector, (void (*)(void))sub_1C008192C);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C15204DC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v7;
    return result;
  }
  long long v28 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v29 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v30 + 72) * v17;
    sub_1BFFD588C(*(void *)(v5 + 56) + v22, (uint64_t)v4, type metadata accessor for FormatItemNodeStyle.Selector);
    long long v23 = (void *)(*(void *)(v7 + 48) + v18);
    *long long v23 = v20;
    v23[1] = v21;
    sub_1BFF3DBF0((uint64_t)v4, *(void *)(v7 + 56) + v22, type metadata accessor for FormatItemNodeStyle.Selector);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1071F28()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA800, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      int64_t v9 = v31 + 1;
      if (v31 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v6 + 8 * v9);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v32 - 1) & v32;
    unint64_t v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    int v26 = *(unsigned __int8 *)(v21 + 34);
    int v27 = *(unsigned __int16 *)(v21 + 32);
    uint64_t v28 = v27 | (v26 << 16);
    LOBYTE(v21) = *(unsigned char *)(v21 + 35);
    uint64_t v29 = (void *)(*(void *)(v4 + 48) + v16);
    void *v29 = v19;
    v29[1] = v18;
    uint64_t v30 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v30 = v22;
    *(void *)(v30 + 8) = v23;
    *(unsigned char *)(v30 + 16) = v24;
    *(void *)(v30 + 24) = v25;
    *(unsigned char *)(v30 + 34) = v26;
    *(_WORD *)(v30 + 32) = v27;
    *(unsigned char *)(v30 + 35) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)sub_1BFF9C7FC(v25, v28);
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v13) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v6 + 8 * v33);
  if (v32)
  {
    int64_t v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v9);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1072154()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA838, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 144 * v15;
    long long v23 = *(_OWORD *)(v17 + v21 + 16);
    long long v22 = *(_OWORD *)(v17 + v21 + 32);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    long long v42 = *(_OWORD *)(v17 + v21 + 48);
    long long v43 = v24;
    long long v26 = *(_OWORD *)(v17 + v21 + 96);
    long long v25 = *(_OWORD *)(v17 + v21 + 112);
    long long v27 = *(_OWORD *)(v17 + v21 + 80);
    *(_OWORD *)&v46[10] = *(_OWORD *)(v17 + v21 + 122);
    long long v45 = v26;
    *(_OWORD *)long long v46 = v25;
    long long v44 = v27;
    long long v39 = *(_OWORD *)(v17 + v21);
    long long v40 = v23;
    long long v41 = v22;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v28 = v20;
    v28[1] = v19;
    uint64_t v29 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    _OWORD *v29 = v39;
    long long v30 = v40;
    long long v31 = v41;
    long long v32 = v43;
    v29[3] = v42;
    v29[4] = v32;
    v29[1] = v30;
    v29[2] = v31;
    long long v33 = v44;
    long long v34 = v45;
    long long v35 = *(_OWORD *)v46;
    *(_OWORD *)((char *)v29 + 122) = *(_OWORD *)&v46[10];
    v29[6] = v34;
    v29[7] = v35;
    v29[5] = v33;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C05DD7E4((uint64_t)&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C10723A0()
{
  return sub_1C10725EC(&qword_1EA1AA848);
}

void *sub_1C10723B4()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA7D8, (void (*)(void))sub_1C008192C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      int64_t v9 = v31 + 1;
      if (v31 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v6 + 8 * v9);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v32 - 1) & v32;
    unint64_t v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 56 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 32);
    uint64_t v25 = *(void *)(v21 + 40);
    int v26 = *(_DWORD *)(v21 + 48);
    char v27 = *(unsigned char *)(v21 + 52);
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    long long v29 = *(_OWORD *)(v21 + 16);
    *uint64_t v28 = v18;
    v28[1] = v19;
    uint64_t v30 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v30 = v22;
    *(void *)(v30 + 8) = v23;
    *(_OWORD *)(v30 + 16) = v29;
    *(unsigned char *)(v30 + 32) = v24;
    *(void *)(v30 + 40) = v25;
    *(unsigned char *)(v30 + 52) = v27;
    *(_DWORD *)(v30 + 48) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v13) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v6 + 8 * v33);
  if (v32)
  {
    int64_t v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v9);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C10725D8()
{
  return sub_1C10725EC(&qword_1EA1AA858);
}

void *sub_1C10725EC(unint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1C1079D34(0, a1, (void (*)(void))sub_1C008192C);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v41 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v41 >= v14) {
      goto LABEL_26;
    }
    unint64_t v42 = *(void *)(v7 + 8 * v41);
    ++v10;
    if (!v42)
    {
      int64_t v10 = v41 + 1;
      if (v41 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v42 = *(void *)(v7 + 8 * v10);
      if (!v42) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v42 - 1) & v42;
    unint64_t v16 = __clz(__rbit64(v42)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 168 * v16;
    uint64_t v22 = *(void *)(v3 + 56) + v21;
    long long v23 = *(_OWORD *)(v22 + 96);
    long long v25 = *(_OWORD *)(v22 + 48);
    long long v24 = *(_OWORD *)(v22 + 64);
    long long v49 = *(_OWORD *)(v22 + 80);
    long long v50 = v23;
    long long v47 = v25;
    long long v48 = v24;
    long long v27 = *(_OWORD *)(v22 + 128);
    long long v26 = *(_OWORD *)(v22 + 144);
    long long v28 = *(_OWORD *)(v22 + 112);
    char v54 = *(unsigned char *)(v22 + 160);
    long long v52 = v27;
    long long v53 = v26;
    long long v51 = v28;
    long long v30 = *(_OWORD *)(v22 + 16);
    long long v29 = *(_OWORD *)(v22 + 32);
    long long v44 = *(_OWORD *)v22;
    long long v45 = v30;
    long long v46 = v29;
    int64_t v31 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v31 = v20;
    v31[1] = v19;
    uint64_t v32 = *(void *)(v5 + 56) + v21;
    long long v33 = v44;
    long long v34 = v46;
    *(_OWORD *)(v32 + 16) = v45;
    *(_OWORD *)(v32 + 32) = v34;
    *(_OWORD *)uint64_t v32 = v33;
    long long v35 = v47;
    long long v36 = v48;
    long long v37 = v50;
    *(_OWORD *)(v32 + 80) = v49;
    *(_OWORD *)(v32 + 96) = v37;
    *(_OWORD *)(v32 + 48) = v35;
    *(_OWORD *)(v32 + 64) = v36;
    long long v38 = v51;
    long long v39 = v52;
    long long v40 = v53;
    *(unsigned char *)(v32 + 160) = v54;
    *(_OWORD *)(v32 + 128) = v39;
    *(_OWORD *)(v32 + 144) = v40;
    *(_OWORD *)(v32 + 112) = v38;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C05DD98C((uint64_t)&v44);
  }
  int64_t v43 = v41 + 2;
  if (v43 >= v14) {
    goto LABEL_26;
  }
  unint64_t v42 = *(void *)(v7 + 8 * v43);
  if (v42)
  {
    int64_t v10 = v43;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v42 = *(void *)(v7 + 8 * v10);
    ++v43;
    if (v42) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1072848()
{
  sub_1C1079D34(0, (unint64_t *)&unk_1EA1AA868, (void (*)(void))sub_1C008192C);
  uint64_t v32 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C15204DC();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v32 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v12) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v5 + 8 * v29);
    ++v8;
    if (!v30)
    {
      int64_t v8 = v29 + 1;
      if (v29 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v5 + 8 * v8);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v30 - 1) & v30;
    unint64_t v14 = __clz(__rbit64(v30)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    unint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = 40 * v14;
    uint64_t v20 = *(void *)(v1 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    char v25 = *(unsigned char *)(v20 + 33);
    long long v26 = (void *)(*(void *)(v3 + 48) + v15);
    char v27 = *(unsigned char *)(v20 + 32);
    *long long v26 = v18;
    v26[1] = v17;
    uint64_t v28 = *(void *)(v3 + 56) + v19;
    *(void *)uint64_t v28 = v21;
    *(void *)(v28 + 8) = v22;
    *(void *)(v28 + 16) = v23;
    *(void *)(v28 + 24) = v24;
    *(unsigned char *)(v28 + 32) = v27;
    *(unsigned char *)(v28 + 33) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)sub_1BFEF6828(v23, v24, v27);
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v12) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v5 + 8 * v31);
  if (v30)
  {
    int64_t v8 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v5 + 8 * v8);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1072A74()
{
  return sub_1C1073AD4((void (*)(void))sub_1C1077B34);
}

id sub_1C1072A8C()
{
  uint64_t v1 = v0;
  sub_1C1078C44();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1072C3C()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C107766C);
}

void *sub_1C1072C54()
{
  return sub_1BFEF2F54((void (*)(void))sub_1C10776D4);
}

void *sub_1C1072C6C()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10779D4(0, &qword_1EA1AA768, MEMORY[0x1E4F276F0], (void (*)(void))sub_1C1077618);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C15204DC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    char v17 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    unint64_t v18 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1072F28()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for SportsRoster, (void (*)(void, __n128))sub_1C10777A4, (void (*)(unint64_t, char *))sub_1C107780C, (void (*)(char *, unint64_t))sub_1C0FAE738);
}

void *sub_1C1072F7C()
{
  return sub_1C00310C8((uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed, (void (*)(void, __n128))sub_1C107789C, (void (*)(unint64_t, char *))sub_1C0FAC8D0, (void (*)(char *, unint64_t))sub_1C1077904);
}

void *sub_1C1072FD0()
{
  uint64_t v1 = v0;
  sub_1C107773C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1073184()
{
  return sub_1C107319C((void (*)(void))sub_1C1077824);
}

void *sub_1C107319C(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C1073358()
{
  return sub_1C1073370((void (*)(void))sub_1BFF9913C);
}

id sub_1C1073370(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 32 * v16;
    sub_1BFF6A008(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    sub_1BFF993A8(v23, (_OWORD *)(*(void *)(v5 + 56) + v19));
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C107353C()
{
  uint64_t v1 = v0;
  sub_1C1079204();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    unint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    uint64_t v25 = v21[3];
    uint64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v26 = v19;
    v26[1] = v18;
    uint64_t v27 = (void *)(*(void *)(v4 + 56) + v20);
    *uint64_t v27 = v22;
    v27[1] = v23;
    _OWORD v27[2] = v24;
    v27[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1073710()
{
  return sub_1C1075504((void (*)(void))sub_1C1078E68);
}

void *sub_1C1073728()
{
  return sub_1C1073740((void (*)(void))sub_1C10780EC);
}

void *sub_1C1073740(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    LOBYTE(v17) = *(unsigned char *)(*(void *)(v3 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v5 + 48) + 16 * v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(unsigned char *)(*(void *)(v5 + 56) + v16) = (_BYTE)v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C10738F0()
{
  uint64_t v1 = v0;
  sub_1C10774EC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v25 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v25;
    swift_bridgeObjectRetain();
    id v21 = (id)v25;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1073ABC()
{
  return sub_1C1073AD4(sub_1BFFFD310);
}

void *sub_1C1073AD4(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1073C7C()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EA1AA758, (void (*)(void))sub_1C02CDFDC);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = *(void *)(v2 + 56) + v16;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    long long v23 = *(_OWORD *)(v17 + 16);
    long long v24 = *(_OWORD *)(v19 + 16);
    *(void *)uint64_t v22 = *(void *)v17;
    *(void *)(v22 + 8) = v18;
    *(_OWORD *)(v22 + 16) = v23;
    uint64_t v25 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v25 = v20;
    *(void *)(v25 + 8) = v21;
    *(_OWORD *)(v25 + 16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1073E70()
{
  uint64_t v1 = v0;
  sub_1C10788F0();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = v15 << 7;
    long long v22 = *(_OWORD *)(v17 + v21 + 112);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    long long v23 = *(_OWORD *)(v17 + v21 + 80);
    long long v45 = *(_OWORD *)(v17 + v21 + 96);
    long long v46 = v22;
    long long v43 = v24;
    long long v44 = v23;
    long long v26 = *(_OWORD *)(v17 + v21);
    long long v25 = *(_OWORD *)(v17 + v21 + 16);
    long long v27 = *(_OWORD *)(v17 + v21 + 48);
    long long v41 = *(_OWORD *)(v17 + v21 + 32);
    long long v42 = v27;
    long long v39 = v26;
    long long v40 = v25;
    int64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v28 = v20;
    v28[1] = v19;
    unint64_t v29 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    long long v30 = v39;
    long long v31 = v40;
    long long v32 = v42;
    v29[2] = v41;
    v29[3] = v32;
    _OWORD *v29 = v30;
    v29[1] = v31;
    long long v33 = v43;
    long long v34 = v44;
    long long v35 = v46;
    v29[6] = v45;
    v29[7] = v35;
    v29[4] = v33;
    v29[5] = v34;
    swift_bridgeObjectRetain();
    id result = sub_1C0B8CEF4(&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C107406C()
{
  uint64_t v1 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10779D4(0, &qword_1EA1AA958, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (void (*)(void))sub_1C02CDCF8);
  long long v26 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1C15204DC();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *long long v26 = v6;
    return result;
  }
  id result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v27 = v4 + 64;
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    unint64_t v20 = *(void *)(v29 + 72) * v15;
    unsigned __int8 v21 = *(unsigned char *)(v17 + 16);
    sub_1C0C7A164(*(void *)(v4 + 56) + v20, (uint64_t)v3);
    uint64_t v22 = *(void *)(v6 + 48) + v16;
    *(void *)uint64_t v22 = v18;
    *(void *)(v22 + 8) = v19;
    *(unsigned char *)(v22 + 16) = v21;
    sub_1C10782E4((uint64_t)v3, *(void *)(v6 + 56) + v20);
    id result = (void *)sub_1C02CDCC8(v18, v19, v21);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1074318()
{
  uint64_t v1 = v0;
  sub_1C1079D34(0, &qword_1EB86B508, (void (*)(void))sub_1C1078098);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  }
  uint64_t v26 = v2 + 64;
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v12) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v8;
    if (!v23)
    {
      int64_t v8 = v22 + 1;
      if (v22 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v8);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 24 * v14;
    uint64_t v16 = *(void *)(v2 + 48) + 24 * v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    char v19 = *(unsigned char *)(v16 + 16);
    uint64_t v20 = 32 * v14;
    sub_1BFF6A008(*(void *)(v2 + 56) + 32 * v14, (uint64_t)v27);
    uint64_t v21 = *(void *)(v4 + 48) + v15;
    *(void *)uint64_t v21 = v17;
    *(void *)(v21 + 8) = v18;
    *(unsigned char *)(v21 + 16) = v19;
    sub_1BFF993A8(v27, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)sub_1C09C8BD8();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v12)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v8 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v8);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1074548()
{
  return sub_1C1074574((void (*)(void))sub_1C1078DF0, (void (*)(unsigned char *, uint64_t))sub_1BFC773DC);
}

void *sub_1C1074574(void (*a1)(void), void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v3 = v2;
  a1(0);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C15204DC();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v3 = v6;
    return result;
  }
  uint64_t v27 = v3;
  id result = (void *)(v5 + 64);
  uint64_t v8 = v4 + 64;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v8 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    char v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 40 * v17;
    sub_1BFC66384(*(void *)(v4 + 56) + 40 * v17, (uint64_t)v29);
    unint64_t v23 = (void *)(*(void *)(v6 + 48) + v18);
    *unint64_t v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v6 + 56) + v22);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v3 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v8 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1074770()
{
  uint64_t v1 = v0;
  sub_1C0062CCC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    sub_1C107791C(*(void *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_1BFC372E8((uint64_t)v22, *(void *)(v4 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1074930(uint64_t (*a1)(void), void (*a2)(void, __n128))
{
  uint64_t v40 = a1(0);
  uint64_t v4 = *(void *)(v40 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v40);
  unint64_t v7 = (char *)&v34 - v6;
  a2(0, v5);
  long long v35 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = sub_1C15204DC();
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v41 = v9;
  if (!v10)
  {
    id result = (void *)swift_release();
    uint64_t v33 = v41;
    long long v32 = v35;
LABEL_28:
    uint64_t *v32 = v33;
    return result;
  }
  uint64_t v11 = v9;
  id result = (void *)(v9 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    uint64_t v11 = v41;
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v8 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v8 + 64);
  uint64_t v36 = v8 + 64;
  int64_t v37 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v38 = v4 + 32;
  uint64_t v39 = v4 + 16;
  uint64_t v19 = v40;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v37) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v29);
    ++v15;
    if (!v30)
    {
      int64_t v15 = v29 + 1;
      if (v29 + 1 >= v37) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v36 + 8 * v15);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v18 = (v30 - 1) & v30;
    unint64_t v21 = __clz(__rbit64(v30)) + (v15 << 6);
LABEL_12:
    uint64_t v22 = 16 * v21;
    unint64_t v23 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    unint64_t v26 = *(void *)(v4 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v7, *(void *)(v8 + 56) + v26, v19);
    uint64_t v27 = v41;
    int64_t v28 = (void *)(*(void *)(v41 + 48) + v22);
    *int64_t v28 = v24;
    v28[1] = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v27 + 56) + v26, v7, v19);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v37)
  {
LABEL_26:
    id result = (void *)swift_release();
    long long v32 = v35;
    uint64_t v33 = v41;
    goto LABEL_28;
  }
  unint64_t v30 = *(void *)(v36 + 8 * v31);
  if (v30)
  {
    int64_t v15 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v15);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1074BF8()
{
  uint64_t v1 = v0;
  sub_1C10787C4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C1074D84()
{
  return sub_1C10756D8((void (*)(void))sub_1C1078D10);
}

void *sub_1C1074D9C()
{
  return sub_1C1074DB4((void (*)(void))sub_1C0191F20);
}

void *sub_1C1074DB4(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C1074F64()
{
  uint64_t v1 = v0;
  sub_1C1078B74();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    id v20 = (void *)(*(void *)(v4 + 48) + v16);
    *id v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id result = *((id *)&v24 + 1);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C1075130()
{
  uint64_t v1 = v0;
  sub_1C1078B0C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    unint64_t v22 = *(void **)(v21 + 16);
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v30 = *(_OWORD *)v21;
    long long v24 = *(_OWORD *)v21;
    *int64_t v23 = v18;
    v23[1] = v19;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v25 = v24;
    *(void *)(v25 + 16) = v22;
    id v26 = v22;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id result = *((id *)&v30 + 1);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C107531C()
{
  uint64_t v1 = v0;
  sub_1C107926C(0, &qword_1EA1AA938, type metadata accessor for CGRect, (void (*)(void))sub_1C1078790);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v25 = __clz(__rbit64(v23));
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = v25 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (_OWORD *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v21 = v17[1];
    *uint64_t v20 = *v17;
    v20[1] = v21;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C10754EC()
{
  return sub_1C1075504((void (*)(void))sub_1C1078A3C);
}

void *sub_1C1075504(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C10756C0()
{
  return sub_1C10756D8((void (*)(void))sub_1C10789C4);
}

id sub_1C10756D8(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t (*sub_1C1075890(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1075B4C(v6, a2, a3);
  return sub_1C10758F8;
}

uint64_t (*sub_1C10758FC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1075BCC(v6, a2, a3);
  return sub_1C10758F8;
}

uint64_t (*sub_1C1075964(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1075C4C(v6, a2, a3);
  return sub_1C10758F8;
}

uint64_t (*sub_1C10759CC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1075CCC(v6, a2, a3);
  return sub_1C10758F8;
}

uint64_t (*sub_1C1075A34(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1076F00(v6, a2, a3);
  return sub_1C10758F8;
}

uint64_t (*sub_1C1075A9C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1076F80(v6, a2, a3);
  return sub_1C10758F8;
}

void sub_1C1075B04(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1C1075B4C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C18C7CB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return destroy for FollowingNotificationContext;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C1075BCC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C18C7CB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return j__s8NewsFeed18PuzzleStatsServiceC13UpdatingStateOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1C1075C4C(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C18C7CB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s8NewsFeed9FeedIssueV9OverridesV5ImageVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C1075CCC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C18C7CB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return destroy for SportsStandingDataVisualizationMetadata;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1075D4C(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1C1075D64(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
}

unint64_t sub_1C1075D7C()
{
  unint64_t result = qword_1EB878C50;
  if (!qword_1EB878C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878C50);
  }
  return result;
}

uint64_t sub_1C1075DD0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C107959C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1075E34()
{
  unint64_t result = qword_1EB88E528;
  if (!qword_1EB88E528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E528);
  }
  return result;
}

uint64_t type metadata accessor for FormatContentPool()
{
  uint64_t result = qword_1EB8813C8;
  if (!qword_1EB8813C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatContentPool(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = a2[6];
    a1[5] = a2[5];
    a1[6] = v8;
    uint64_t v9 = a2[8];
    a1[7] = a2[7];
    a1[8] = v9;
    uint64_t v10 = a2[10];
    a1[9] = a2[9];
    a1[10] = v10;
    uint64_t v11 = a2[12];
    a1[11] = a2[11];
    a1[12] = v11;
    uint64_t v12 = a2[14];
    a1[13] = a2[13];
    a1[14] = v12;
    uint64_t v13 = a2[16];
    a1[15] = a2[15];
    a1[16] = v13;
    uint64_t v14 = a2[19];
    uint64_t v23 = a2[18];
    a1[17] = a2[17];
    a1[18] = v23;
    uint64_t v22 = a2[20];
    uint64_t v15 = *(int *)(a3 + 100);
    unint64_t v24 = (char *)a1 + v15;
    unint64_t v16 = (char *)a2 + v15;
    a1[19] = v14;
    a1[20] = v22;
    uint64_t v17 = sub_1C151D6DC();
    uint64_t v20 = *(void *)(v17 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v16, 1, v17))
    {
      sub_1BFEE3854(0);
      memcpy(v24, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v17);
    }
  }
  return v5;
}

uint64_t destroy for FormatContentPool(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 100);
  uint64_t v5 = sub_1C151D6DC();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for FormatContentPool(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v14 = a2[7];
  a1[6] = a2[6];
  a1[7] = v14;
  uint64_t v15 = a2[9];
  a1[8] = a2[8];
  a1[9] = v15;
  uint64_t v16 = a2[11];
  a1[10] = a2[10];
  a1[11] = v16;
  uint64_t v17 = a2[13];
  a1[12] = a2[12];
  a1[13] = v17;
  uint64_t v18 = a2[15];
  a1[14] = a2[14];
  a1[15] = v18;
  uint64_t v20 = a2[17];
  a1[16] = a2[16];
  a1[17] = v20;
  uint64_t v7 = a2[19];
  a1[18] = a2[18];
  a1[19] = v7;
  uint64_t v8 = *(int *)(a3 + 100);
  uint64_t v21 = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[20] = a2[20];
  uint64_t v10 = sub_1C151D6DC();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v9, 1, v10))
  {
    sub_1BFEE3854(0);
    memcpy(v21, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v21, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v10);
  }
  return a1;
}

void *assignWithCopy for FormatContentPool(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 100);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151D6DC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFEE3854(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatContentPool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  uint64_t v9 = *(int *)(a3 + 100);
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = (void *)(a1 + v9);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v12 = sub_1C151D6DC();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
  {
    sub_1BFEE3854(0);
    memcpy(v11, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v11, v10, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  return a1;
}

void *assignWithTake for FormatContentPool(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 100);
  long long v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151D6DC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFEE3854(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentPool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1076CD0);
}

uint64_t sub_1C1076CD0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFEE3854(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 100);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatContentPool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1076D94);
}

void *sub_1C1076D94(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1BFEE3854(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 100);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C1076E3C()
{
  sub_1BFEE3854(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void (*sub_1C1076F00(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  int v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C18C7CB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)int v3 = v4;
    return destroy for FeedIssue.Overrides.Image;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C1076F80(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  int v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C18C7CB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return destroy for PuzzleStatsService.UpdatingState;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1077000(double a1, double a2, double a3, double a4)
{
  return sub_1C1520DFC();
}

void sub_1C1077080()
{
  if (!qword_1EA1AA710)
  {
    sub_1C1515FDC();
    type metadata accessor for WebEmbedDataVisualizationDataServiceFailure();
    sub_1BFD2C630();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA710);
    }
  }
}

uint64_t sub_1C10770FC()
{
  return sub_1BFEBC424((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
}

void sub_1C1077130()
{
  if (!qword_1EB85E058)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E058);
    }
  }
}

void sub_1C1077198()
{
  if (!qword_1EA1AA718)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA718);
    }
  }
}

void sub_1C1077200()
{
  if (!qword_1EB85EFA0)
  {
    sub_1C151631C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85EFA0);
    }
  }
}

uint64_t sub_1C1077268(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C10772C4()
{
  if (!qword_1EA197770)
  {
    sub_1BFEBC4B4();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197770);
    }
  }
}

void sub_1C107732C()
{
  if (!qword_1EB86B5B0)
  {
    sub_1BFFB4FA4();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B5B0);
    }
  }
}

uint64_t sub_1C1077394()
{
  return sub_1BFEBC424((unint64_t *)&unk_1EA1AA720, MEMORY[0x1E4F81D40]);
}

uint64_t sub_1C10773C8()
{
  return sub_1BFEBC424(&qword_1EA196BD0, MEMORY[0x1E4F81D40]);
}

void sub_1C10773FC()
{
  if (!qword_1EA1AA730)
  {
    sub_1BFC39268(255, &qword_1EA1AA738);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA730);
    }
  }
}

void sub_1C1077474()
{
  if (!qword_1EA1AA740)
  {
    sub_1BFC39268(255, &qword_1EA1AA748);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA740);
    }
  }
}

void sub_1C10774EC()
{
  if (!qword_1EA1AA750)
  {
    sub_1C0F7810C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA750);
    }
  }
}

void sub_1C1077554()
{
  if (!qword_1EB861480)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861480);
    }
  }
}

uint64_t sub_1C10775BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C1077618()
{
  unint64_t result = qword_1EA1AA770;
  if (!qword_1EA1AA770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AA770);
  }
  return result;
}

void sub_1C107766C()
{
  if (!qword_1EA1AA778)
  {
    type metadata accessor for FormatPackageInventory();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA778);
    }
  }
}

void sub_1C10776D4()
{
  if (!qword_1EA1AA780)
  {
    type metadata accessor for DebugFormatPackageInventory();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA780);
    }
  }
}

void sub_1C107773C()
{
  if (!qword_1EB86B558)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B558);
    }
  }
}

void sub_1C10777A4()
{
  if (!qword_1EB86B550)
  {
    type metadata accessor for SportsRoster();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B550);
    }
  }
}

uint64_t sub_1C107780C(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsRoster);
}

void sub_1C1077824()
{
  if (!qword_1EB86B5E8)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB86B430);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B5E8);
    }
  }
}

void sub_1C107789C()
{
  if (!qword_1EB86B598)
  {
    type metadata accessor for SportsEventStatusResponseEmbed();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B598);
    }
  }
}

uint64_t sub_1C1077904(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
}

uint64_t sub_1C107791C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C1077978(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C10779D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C152051C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C1077A54()
{
  if (!qword_1EB863460)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863460);
    }
  }
}

void sub_1C1077ABC()
{
  if (!qword_1EA1AA788)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A300);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA788);
    }
  }
}

void sub_1C1077B34()
{
  if (!qword_1EA1AA790)
  {
    sub_1BFEC0C84(255, &qword_1EA1AA798, type metadata accessor for DebugFormatTestCaseResult, MEMORY[0x1E4FBB320]);
    sub_1C0078B20();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA790);
    }
  }
}

unint64_t sub_1C1077BD0()
{
  unint64_t result = qword_1EA1AA7A8;
  if (!qword_1EA1AA7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AA7A8);
  }
  return result;
}

void sub_1C1077C24(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  if (!*a2)
  {
    sub_1C107959C(255, a3, a4, a5);
    unint64_t v6 = sub_1C152051C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C1077C90(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C107959C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1077D10()
{
  return sub_1BFEBC424(&qword_1EB87C698, MEMORY[0x1E4FAB888]);
}

uint64_t sub_1C1077D44()
{
  return sub_1BFEBC424(&qword_1EB87C6A0, MEMORY[0x1E4FAB888]);
}

void sub_1C1077D78()
{
  if (!qword_1EB892C68)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892C68);
    }
  }
}

void sub_1C1077DE0()
{
  if (!qword_1EB8704C8)
  {
    sub_1C1518CDC();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8704C8);
    }
  }
}

void sub_1C1077E48()
{
  if (!qword_1EB8704D0)
  {
    type metadata accessor for FormatJson();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8704D0);
    }
  }
}

uint64_t sub_1C1077EB0(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatJson);
}

void sub_1C1077EC8()
{
  if (!qword_1EB8704D8)
  {
    type metadata accessor for FormatScopedOption();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8704D8);
    }
  }
}

uint64_t sub_1C1077F30(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
}

uint64_t sub_1C1077F48(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
}

void sub_1C1077F60()
{
  if (!qword_1EB8902F8)
  {
    type metadata accessor for FormatStateViewNodeStateLayoutAttributes();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8902F8);
    }
  }
}

void sub_1C1077FC8()
{
  if (!qword_1EB890360)
  {
    type metadata accessor for CGRect(255);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890360);
    }
  }
}

void sub_1C1078030()
{
  if (!qword_1EB890320)
  {
    type metadata accessor for FormatSlot();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890320);
    }
  }
}

unint64_t sub_1C1078098()
{
  unint64_t result = qword_1EB867420;
  if (!qword_1EB867420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867420);
  }
  return result;
}

void sub_1C10780EC()
{
  if (!qword_1EA1AA878)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA878);
    }
  }
}

unint64_t sub_1C1078154()
{
  unint64_t result = qword_1EA1AA888;
  if (!qword_1EA1AA888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AA888);
  }
  return result;
}

void sub_1C10781A8()
{
  if (!qword_1EA1AA890)
  {
    type metadata accessor for DebugFormatCompilingPackage();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA890);
    }
  }
}

uint64_t sub_1C1078210(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage);
}

unint64_t sub_1C1078228()
{
  unint64_t result = qword_1EA1AA8A0;
  if (!qword_1EA1AA8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AA8A0);
  }
  return result;
}

void sub_1C107827C()
{
  if (!qword_1EA1AA8A8)
  {
    type metadata accessor for DebugFormatCacheFile();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA8A8);
    }
  }
}

uint64_t sub_1C10782E4(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
}

void sub_1C10782FC()
{
  if (!qword_1EA1AA8B0)
  {
    sub_1C1079980(255, &qword_1EA1AA8B8, (uint64_t (*)(void))sub_1C00BB348, (uint64_t)&type metadata for FormatDerivedDataOptionScope, MEMORY[0x1E4FBB510]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA8B0);
    }
  }
}

void sub_1C107839C()
{
  if (!qword_1EA1AA8C8)
  {
    sub_1BFEC0C84(255, &qword_1EB879E50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA8C8);
    }
  }
}

void sub_1C1078434()
{
  if (!qword_1EA1AA8D8)
  {
    sub_1BFEC0C84(255, (unint64_t *)&unk_1EA1AA8E0, (uint64_t (*)(uint64_t))sub_1C06066AC, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA8D8);
    }
  }
}

void sub_1C10784CC()
{
  if (!qword_1EA1AA8F0)
  {
    sub_1BFEC0C84(255, &qword_1EA1AA8F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBinderResult, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA8F0);
    }
  }
}

uint64_t sub_1C1078564(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C10785C0()
{
  if (!qword_1EA1AA910)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA910);
    }
  }
}

void sub_1C1078628()
{
  if (!qword_1EA1AA918)
  {
    type metadata accessor for FormatDerivedDataOption();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA918);
    }
  }
}

void sub_1C1078690()
{
  if (!qword_1EA1AA928)
  {
    type metadata accessor for FormatDerivedDataBindingSlotResult();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA928);
    }
  }
}

uint64_t sub_1C10786F8(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

uint64_t sub_1C1078710(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

void sub_1C1078728()
{
  if (!qword_1EA1AA930)
  {
    type metadata accessor for FormatDerivedDataBindingNode();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA930);
    }
  }
}

uint64_t sub_1C1078790()
{
  return sub_1BFEBC424(&qword_1EA1AA940, type metadata accessor for CGRect);
}

void sub_1C10787C4()
{
  if (!qword_1EA1AA948)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA948);
    }
  }
}

void sub_1C107882C()
{
  if (!qword_1EB890340)
  {
    type metadata accessor for FormatFrameNodeLayoutAttributes();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890340);
    }
  }
}

uint64_t sub_1C1078894(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C10788F0()
{
  if (!qword_1EA1AA968)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA968);
    }
  }
}

void sub_1C1078958()
{
  if (!qword_1EA1AA970)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA970);
    }
  }
}

void sub_1C10789C4()
{
  if (!qword_1EB85C598)
  {
    sub_1BFC39268(255, &qword_1EB87A0C0);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C598);
    }
  }
}

void sub_1C1078A3C()
{
  if (!qword_1EB85C588)
  {
    sub_1C1078AA4();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C588);
    }
  }
}

void sub_1C1078AA4()
{
  if (!qword_1EB871030)
  {
    sub_1BFC39268(255, &qword_1EB87A0C0);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871030);
    }
  }
}

void sub_1C1078B0C()
{
  if (!qword_1EB86B528)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B528);
    }
  }
}

void sub_1C1078B74()
{
  if (!qword_1EB86B530)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B530);
    }
  }
}

void sub_1C1078BDC()
{
  if (!qword_1EB86B518)
  {
    sub_1C1516E3C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B518);
    }
  }
}

void sub_1C1078C44()
{
  if (!qword_1EA197748)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197748);
    }
  }
}

void sub_1C1078CAC()
{
  if (!qword_1EB87A3D0)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A3D0);
    }
  }
}

void sub_1C1078D10()
{
  if (!qword_1EB86B5D8)
  {
    sub_1BFC39268(255, &qword_1EB85DFA0);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B5D8);
    }
  }
}

void sub_1C1078D88()
{
  if (!qword_1EB86B578)
  {
    type metadata accessor for FormatDisplayLinkAnimation();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B578);
    }
  }
}

void sub_1C1078DF0()
{
  if (!qword_1EB87A3E0)
  {
    sub_1BFC845BC(255, &qword_1EB871750);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A3E0);
    }
  }
}

void sub_1C1078E68()
{
  if (!qword_1EB86B5C0)
  {
    sub_1BFEC0C84(255, &qword_1EB86B038, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B5C0);
    }
  }
}

uint64_t sub_1C1078F00(uint64_t a1, uint64_t a2)
{
  sub_1C1079980(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C1078F9C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  if (!*a2)
  {
    sub_1C1079980(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v6 = sub_1C152051C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C107901C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  sub_1C1079980(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C10790A0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  sub_1C1079980(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1C1079124()
{
  if (!qword_1EB85E068)
  {
    sub_1C01543E0();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E068);
    }
  }
}

void sub_1C107918C()
{
  if (!qword_1EB890350)
  {
    sub_1BFC39268(255, &qword_1EB890268);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890350);
    }
  }
}

void sub_1C1079204()
{
  if (!qword_1EA1AA990)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA990);
    }
  }
}

void sub_1C107926C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C152051C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C10792EC()
{
  if (!qword_1EA197858)
  {
    sub_1BFF1D9F4(255);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197858);
    }
  }
}

void sub_1C1079354()
{
  if (!qword_1EB86B588)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B588);
    }
  }
}

void sub_1C10793BC()
{
  if (!qword_1EA1AA9A0)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA9A0);
    }
  }
}

void sub_1C1079424()
{
  if (!qword_1EB86DEA8)
  {
    sub_1BFEC0C84(255, &qword_1EB86DE10, type metadata accessor for WebEmbedViewController, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DEA8);
    }
  }
}

void sub_1C10794BC()
{
  if (!qword_1EB87A470)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A0B0);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A470);
    }
  }
}

void sub_1C1079534()
{
  if (!qword_1EA19C468)
  {
    type metadata accessor for SharedItem();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C468);
    }
  }
}

void sub_1C107959C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C10795E8()
{
  if (!qword_1EA1AA9C0)
  {
    type metadata accessor for FeedClusteringOptions(255);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA9C0);
    }
  }
}

uint64_t sub_1C1079650(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, type metadata accessor for FeedClusteringOptions);
}

void sub_1C1079668()
{
  if (!qword_1EB863458)
  {
    type metadata accessor for FormatNodeAuxiliaryBinder(255);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863458);
    }
  }
}

uint64_t sub_1C10796D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C107972C()
{
  if (!qword_1EB87A440)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A440);
    }
  }
}

uint64_t sub_1C1079794(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C10797F0()
{
  if (!qword_1EA1AA9D0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A1C0);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA9D0);
    }
  }
}

uint64_t sub_1C1079868(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C10798C4()
{
  unint64_t result = qword_1EB862F28;
  if (!qword_1EB862F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F28);
  }
  return result;
}

void sub_1C1079918()
{
  if (!qword_1EA197888)
  {
    type metadata accessor for FormatSlotDefinition();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197888);
    }
  }
}

void sub_1C1079980(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1C10799E8()
{
  if (!qword_1EA1AA9D8)
  {
    type metadata accessor for CGSize(255);
    sub_1C1079A94();
    sub_1BFEBC424(&qword_1EA1AA9E8, type metadata accessor for CGSize);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA9D8);
    }
  }
}

void sub_1C1079A94()
{
  if (!qword_1EA1AA9E0)
  {
    type metadata accessor for CGSize(255);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA9E0);
    }
  }
}

void sub_1C1079AFC()
{
  if (!qword_1EA1AA9F0)
  {
    type metadata accessor for CGSize(255);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA9F0);
    }
  }
}

void sub_1C1079B64()
{
  if (!qword_1EB890338)
  {
    type metadata accessor for FormatAccessibilityRenderer();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890338);
    }
  }
}

void sub_1C1079BCC()
{
  if (!qword_1EB860D78)
  {
    sub_1C1079C34();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860D78);
    }
  }
}

void sub_1C1079C34()
{
  if (!qword_1EB85F1F0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A2C0);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F1F0);
    }
  }
}

void sub_1C1079C9C()
{
  if (!qword_1EB86DE98)
  {
    sub_1BFEC0C84(255, &qword_1EB86C260, type metadata accessor for WebEmbedViewController, MEMORY[0x1E4FAB000]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DE98);
    }
  }
}

void sub_1C1079D34(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C152051C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1079D9C()
{
  if (!qword_1EB86B5F0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A2F0);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B5F0);
    }
  }
}

void sub_1C1079E14()
{
  if (!qword_1EB85EFC0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A300);
    sub_1C1079EDC(255, &qword_1EB85EF18, MEMORY[0x1E4FBAEA0]);
    sub_1C00BC034(&qword_1EB85EF88, (unint64_t *)&qword_1EB87A300);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85EFC0);
    }
  }
}

void sub_1C1079EDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1BFC39268(255, (unint64_t *)&qword_1EB87A2F0);
    uint64_t v7 = sub_1BFC39268(255, (unint64_t *)&qword_1EB87A300);
    uint64_t v8 = sub_1C00BC034((unint64_t *)&qword_1EB85EF80, (unint64_t *)&qword_1EB87A2F0);
    unint64_t v9 = a3(a1, v6, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1079FA0()
{
  if (!qword_1EB87A490)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB895E90);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A490);
    }
  }
}

void sub_1C107A018()
{
  if (!qword_1EB860D80)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87B090);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860D80);
    }
  }
}

void sub_1C107A090()
{
  if (!qword_1EB87A480)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB87A160);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A480);
    }
  }
}

void sub_1C107A108()
{
  if (!qword_1EB861AF0)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB8901B0);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861AF0);
    }
  }
}

void sub_1C107A180()
{
  if (!qword_1EA197890)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB890220);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197890);
    }
  }
}

void sub_1C107A1F8()
{
  if (!qword_1EB86DE80)
  {
    type metadata accessor for PuzzleStatistic();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DE80);
    }
  }
}

void sub_1C107A260()
{
  if (!qword_1EB86BEB8)
  {
    type metadata accessor for SportsScoreDataVisualization();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BEB8);
    }
  }
}

void sub_1C107A2C8()
{
  if (!qword_1EB86BEC0)
  {
    type metadata accessor for SportsStandingDataVisualization();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BEC0);
    }
  }
}

void sub_1C107A330()
{
  if (!qword_1EA1AA9F8)
  {
    type metadata accessor for SportsBracketGroupDataVisualization();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA9F8);
    }
  }
}

void sub_1C107A398()
{
  if (!qword_1EA1AAA00)
  {
    type metadata accessor for SportsBoxScoreDataVisualization();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AAA00);
    }
  }
}

void sub_1C107A400()
{
  if (!qword_1EA1AAA08)
  {
    type metadata accessor for SportsLineScoreDataVisualization();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AAA08);
    }
  }
}

void sub_1C107A468()
{
  if (!qword_1EA1AAA10)
  {
    type metadata accessor for SportsInjuryReportDataVisualization();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AAA10);
    }
  }
}

void sub_1C107A4D0()
{
  if (!qword_1EA1AAA18)
  {
    type metadata accessor for SportsKeyPlayerDataVisualization();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AAA18);
    }
  }
}

void sub_1C107A538()
{
  if (!qword_1EB894580)
  {
    type metadata accessor for FormatService.ThemePackage(255);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894580);
    }
  }
}

uint64_t sub_1C107A5A0(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, type metadata accessor for FormatService.ThemePackage);
}

uint64_t sub_1C107A5B8(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, type metadata accessor for FormatService.ThemePackage);
}

void sub_1C107A5D0()
{
  if (!qword_1EA1AAA28)
  {
    type metadata accessor for FormatContentResource.Resolved();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AAA28);
    }
  }
}

uint64_t sub_1C107A638(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatContentResource.Resolved);
}

void sub_1C107A650()
{
  if (!qword_1EB85C580)
  {
    type metadata accessor for FormatWebArchiveResource.Resolved();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C580);
    }
  }
}

uint64_t sub_1C107A6B8(uint64_t a1, uint64_t a2)
{
  return sub_1BFFD588C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatWebArchiveResource.Resolved);
}

uint64_t sub_1C107A6D0(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatWebArchiveResource.Resolved);
}

void sub_1C107A6E8()
{
  if (!qword_1EB86DE88)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DE88);
    }
  }
}

void sub_1C107A750()
{
  if (!qword_1EA1978A0)
  {
    type metadata accessor for FormatPuzzleType(255);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1978A0);
    }
  }
}

void sub_1C107A7B8()
{
  if (!qword_1EB861AE8)
  {
    type metadata accessor for FormatPuzzle();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861AE8);
    }
  }
}

void sub_1C107A820()
{
  if (!qword_1EB880E30)
  {
    sub_1BFEC0C84(255, &qword_1EB87C328, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880E30);
    }
  }
}

void sub_1C107A8B8()
{
  if (!qword_1EB86B560[0])
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, qword_1EB86B560);
    }
  }
}

void *FormatSolidFill.init(foreground:background:)@<X0>(void *result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

unint64_t sub_1C107A940(uint64_t a1)
{
  unint64_t result = sub_1C107A968();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C107A968()
{
  unint64_t result = qword_1EA1AAA30;
  if (!qword_1EA1AAA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA30);
  }
  return result;
}

unint64_t sub_1C107A9BC(void *a1)
{
  a1[1] = sub_1BFE10C70();
  a1[2] = sub_1BFDEED40();
  unint64_t result = sub_1C107A9F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C107A9F4()
{
  unint64_t result = qword_1EA1AAA38;
  if (!qword_1EA1AAA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA38);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSolidFill()
{
  return &type metadata for FormatSolidFill;
}

uint64_t FormatMicaNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C107AADC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  swift_beginAccess();
  v211 = v1;
  uint64_t v7 = v1[6];
  swift_beginAccess();
  uint64_t v212 = a1;
  uint64_t v8 = *(void *)(a1 + 48);
  unint64_t v283 = MEMORY[0x1E4FBC868];
  int64_t v9 = *(void *)(v7 + 16);
  int64_t v10 = *(void *)(v8 + 16);
  if (__OFADD__(v9, v10)) {
    goto LABEL_94;
  }
  uint64_t v208 = v5;
  uint64_t v210 = v4;
  sub_1C107DA54();
  uint64_t v209 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = (_OWORD *)v7;
  sub_1C151E3AC();
  v262 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v207 = v6;
  uint64_t v213 = v8;
  if (!v12) {
    goto LABEL_20;
  }
  int64_t v259 = v10;
  swift_bridgeObjectRetain();
  long long v13 = v11[8];
  long long v280 = v11[7];
  long long v281 = v13;
  *(_OWORD *)v282 = v11[9];
  *(_OWORD *)&v282[10] = *(_OWORD *)((char *)v11 + 154);
  long long v14 = v11[3];
  long long v15 = v11[5];
  long long v16 = v11[6];
  long long v277 = v11[4];
  long long v278 = v15;
  long long v279 = v16;
  long long v275 = v11[2];
  long long v276 = v14;
  uint64_t v17 = *((void *)&v275 + 1);
  uint64_t v18 = v12 - 1;
  for (uint64_t i = 11; ; i += 9)
  {
    uint64_t v20 = v275;
    sub_1C05DD7E4((uint64_t)&v275);
    sub_1C05DD7E4((uint64_t)&v275);
    swift_bridgeObjectRetain();
    unint64_t v21 = v283;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v264[0] = v21;
    unint64_t v24 = sub_1BFEF2D8C(v20, v17);
    uint64_t v25 = *(void *)(v21 + 16);
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v28 = v23;
    if (*(void *)(v21 + 24) >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C1072154();
        if (v28) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C10604EC(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_1BFEF2D8C(v20, v17);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_95;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_11:
        int64_t v31 = *(void **)&v264[0];
        long long v32 = (long long *)(*(void *)(*(void *)&v264[0] + 56) + 144 * v24);
        long long v267 = *v32;
        long long v33 = v32[4];
        long long v35 = v32[1];
        long long v34 = v32[2];
        long long v270 = v32[3];
        long long v271 = v33;
        long long v268 = v35;
        long long v269 = v34;
        long long v37 = v32[6];
        long long v36 = v32[7];
        long long v38 = v32[5];
        *(_OWORD *)&v274[10] = *(long long *)((char *)v32 + 122);
        long long v273 = v37;
        *(_OWORD *)v274 = v36;
        long long v272 = v38;
        sub_1C05DD8B8((uint64_t)&v267);
        long long *v32 = v275;
        long long v39 = v279;
        long long v41 = v276;
        long long v40 = v277;
        v32[3] = v278;
        v32[4] = v39;
        v32[1] = v41;
        v32[2] = v40;
        long long v43 = v281;
        long long v42 = *(_OWORD *)v282;
        long long v44 = v280;
        *(long long *)((char *)v32 + 122) = *(_OWORD *)&v282[10];
        _OWORD v32[6] = v43;
        v32[7] = v42;
        v32[5] = v44;
        goto LABEL_15;
      }
    }
    int64_t v31 = *(void **)&v264[0];
    *(void *)(*(void *)&v264[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    long long v45 = (uint64_t *)(v31[6] + 16 * v24);
    *long long v45 = v20;
    v45[1] = v17;
    long long v46 = (_OWORD *)(v31[7] + 144 * v24);
    long long v47 = *(_OWORD *)&v282[10];
    long long v49 = v281;
    long long v48 = *(_OWORD *)v282;
    v46[5] = v280;
    v46[6] = v49;
    v46[7] = v48;
    *(_OWORD *)((char *)v46 + 122) = v47;
    long long v51 = v278;
    long long v50 = v279;
    long long v52 = v277;
    v46[1] = v276;
    v46[2] = v52;
    v46[3] = v51;
    v46[4] = v50;
    *long long v46 = v275;
    uint64_t v53 = v31[2];
    BOOL v54 = __OFADD__(v53, 1);
    uint64_t v55 = v53 + 1;
    if (v54) {
      goto LABEL_90;
    }
    v31[2] = v55;
    swift_bridgeObjectRetain();
LABEL_15:
    unint64_t v283 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v56 = v262[2];
    unint64_t v57 = v262[3];
    swift_bridgeObjectRetain();
    if (v56 >= v57 >> 1) {
      v262 = sub_1BFEF692C((void *)(v57 > 1), v56 + 1, 1, v262);
    }
    v262[2] = v56 + 1;
    uint64_t v58 = &v262[2 * v56];
    v58[4] = v20;
    v58[5] = v17;
    sub_1C05DD8B8((uint64_t)&v275);
    if (!v18) {
      break;
    }
    long long v275 = v11[i];
    long long v59 = v11[i + 1];
    long long v60 = v11[i + 2];
    long long v61 = v11[i + 4];
    long long v278 = v11[i + 3];
    long long v279 = v61;
    long long v276 = v59;
    long long v277 = v60;
    long long v62 = v11[i + 5];
    long long v63 = v11[i + 6];
    long long v64 = v11[i + 7];
    *(_OWORD *)&v282[10] = *(_OWORD *)((char *)&v11[i + 7] + 10);
    long long v281 = v63;
    *(_OWORD *)v282 = v64;
    long long v280 = v62;
    uint64_t v17 = *((void *)&v275 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v213;
  int64_t v10 = v259;
LABEL_20:
  long long v65 = sub_1BFEF692C(0, v10, 0, MEMORY[0x1E4FBC860]);
  uint64_t v66 = *(void *)(v8 + 16);
  if (!v66) {
    goto LABEL_64;
  }
  swift_bridgeObjectRetain();
  long long v67 = *(_OWORD *)(v8 + 128);
  long long v280 = *(_OWORD *)(v8 + 112);
  long long v281 = v67;
  *(_OWORD *)v282 = *(_OWORD *)(v8 + 144);
  *(_OWORD *)&v282[10] = *(_OWORD *)(v8 + 154);
  long long v68 = *(_OWORD *)(v8 + 48);
  long long v69 = *(_OWORD *)(v8 + 80);
  long long v70 = *(_OWORD *)(v8 + 96);
  long long v277 = *(_OWORD *)(v8 + 64);
  long long v278 = v69;
  long long v279 = v70;
  long long v275 = *(_OWORD *)(v8 + 32);
  long long v276 = v68;
  uint64_t v71 = v66 - 1;
  uint64_t v72 = *((void *)&v275 + 1);
  uint64_t v260 = 176;
  while (2)
  {
    uint64_t v73 = v275;
    v74 = (void *)v283;
    uint64_t v75 = *(void *)(v283 + 16);
    sub_1C05DD7E4((uint64_t)&v275);
    if (v75)
    {
      swift_bridgeObjectRetain();
      unint64_t v76 = sub_1BFEF2D8C(v73, v72);
      if (v77)
      {
        v78 = (long long *)(v74[7] + 144 * v76);
        long long v267 = *v78;
        long long v79 = v78[3];
        long long v80 = v78[4];
        long long v81 = v78[2];
        long long v268 = v78[1];
        long long v269 = v81;
        long long v270 = v79;
        long long v271 = v80;
        long long v82 = v78[5];
        long long v83 = v78[6];
        long long v84 = v78[7];
        *(_OWORD *)&v274[10] = *(long long *)((char *)v78 + 122);
        long long v273 = v83;
        *(_OWORD *)v274 = v84;
        long long v272 = v82;
        sub_1C05DD7E4((uint64_t)&v267);
        swift_bridgeObjectRelease();
        uint64_t v85 = v268;
        if (!(void)v268) {
          uint64_t v85 = swift_bridgeObjectRetain();
        }
        uint64_t v214 = v85;
        uint64_t v86 = *((void *)&v268 + 1);
        if (!*((void *)&v268 + 1)) {
          uint64_t v86 = swift_bridgeObjectRetain();
        }
        uint64_t v221 = v86;
        v241 = v65;
        uint64_t v88 = *((void *)&v269 + 1);
        uint64_t v87 = v269;
        char v89 = v270;
        uint64_t v236 = *((void *)&v269 + 1);
        uint64_t v238 = v269;
        char v90 = v270;
        if (v270 >= 0xFEu)
        {
          uint64_t v88 = *((void *)&v277 + 1);
          uint64_t v87 = v277;
          char v90 = v278;
          sub_1BFEF6828(v277, *((uint64_t *)&v277 + 1), v278);
        }
        char v216 = v90;
        uint64_t v217 = v88;
        uint64_t v219 = v87;
        uint64_t v91 = *((void *)&v270 + 1);
        uint64_t v92 = v271;
        uint64_t v93 = *((void *)&v273 + 1);
        long long v94 = *(_OWORD *)v274;
        uint64_t v95 = *(void *)&v274[16];
        uint64_t v232 = v271;
        uint64_t v234 = *((void *)&v270 + 1);
        uint64_t v228 = v272;
        uint64_t v230 = *((void *)&v271 + 1);
        uint64_t v256 = v272;
        uint64_t v257 = *((void *)&v271 + 1);
        uint64_t v224 = v273;
        uint64_t v226 = *((void *)&v272 + 1);
        uint64_t v253 = v273;
        uint64_t v255 = *((void *)&v272 + 1);
        uint64_t v249 = *(void *)v274;
        uint64_t v251 = *((void *)&v273 + 1);
        uint64_t v245 = *(void *)&v274[16];
        uint64_t v247 = *(void *)&v274[8];
        unsigned __int8 v96 = v274[24];
        char v243 = v274[24];
        if (v274[24] == 254)
        {
          uint64_t v91 = *((void *)&v278 + 1);
          uint64_t v92 = v279;
          char v243 = v282[24];
          uint64_t v245 = *(void *)&v282[16];
          uint64_t v247 = *(void *)&v282[8];
          uint64_t v256 = v280;
          uint64_t v257 = *((void *)&v279 + 1);
          uint64_t v253 = v281;
          uint64_t v255 = *((void *)&v280 + 1);
          uint64_t v249 = *(void *)v282;
          uint64_t v251 = *((void *)&v281 + 1);
          sub_1BFEF8708(*((uint64_t *)&v278 + 1), v279, *((uint64_t *)&v279 + 1), v280, *((uint64_t *)&v280 + 1), v281, *((uint64_t *)&v281 + 1), *(uint64_t *)v282, *(uint64_t *)&v282[8], *(uint64_t *)&v282[16], v282[24]);
        }
        char v97 = v274[25];
        if (v274[25] == 2) {
          char v97 = v282[25];
        }
        char v215 = v97;
        long long v98 = v267;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v238, v236, v89);
        sub_1BFEF8708(v234, v232, v230, v228, v226, v224, v93, v94, *((uint64_t *)&v94 + 1), v95, v96);
        char v99 = swift_isUniquelyReferenced_nonNull_native();
        v266 = v74;
        unint64_t v283 = 0x8000000000000000;
        unint64_t v101 = sub_1BFEF2D8C(v98, *((uint64_t *)&v98 + 1));
        uint64_t v102 = v74[2];
        BOOL v103 = (v100 & 1) == 0;
        uint64_t v104 = v102 + v103;
        if (__OFADD__(v102, v103)) {
          goto LABEL_92;
        }
        char v105 = v100;
        if (v74[3] >= v104)
        {
          long long v65 = v241;
          if (v99)
          {
            uint64_t v108 = v214;
            if ((v100 & 1) == 0) {
              goto LABEL_59;
            }
          }
          else
          {
            sub_1C1072154();
            uint64_t v108 = v214;
            if ((v105 & 1) == 0) {
              goto LABEL_59;
            }
          }
        }
        else
        {
          sub_1C10604EC(v104, v99);
          unint64_t v106 = sub_1BFEF2D8C(v98, *((uint64_t *)&v98 + 1));
          long long v65 = v241;
          if ((v105 & 1) != (v107 & 1)) {
            goto LABEL_95;
          }
          unint64_t v101 = v106;
          uint64_t v108 = v214;
          if ((v105 & 1) == 0)
          {
LABEL_59:
            v132 = v266;
            v266[(v101 >> 6) + 8] |= 1 << v101;
            *(_OWORD *)(v132[6] + 16 * v101) = v98;
            uint64_t v153 = v132[7] + 144 * v101;
            *(_OWORD *)uint64_t v153 = v98;
            *(void *)(v153 + 16) = v108;
            *(void *)(v153 + 24) = v221;
            *(void *)(v153 + 32) = v219;
            *(void *)(v153 + 40) = v217;
            *(unsigned char *)(v153 + 48) = v216;
            *(void *)(v153 + 56) = v91;
            *(void *)(v153 + 64) = v92;
            *(void *)(v153 + 72) = v257;
            *(void *)(v153 + 80) = v256;
            *(void *)(v153 + 88) = v255;
            *(void *)(v153 + 96) = v253;
            *(void *)(v153 + 104) = v251;
            *(void *)(v153 + 112) = v249;
            *(void *)(v153 + 120) = v247;
            *(void *)(v153 + 128) = v245;
            *(unsigned char *)(v153 + 136) = v243;
            *(unsigned char *)(v153 + 137) = v215;
            uint64_t v154 = v132[2];
            BOOL v54 = __OFADD__(v154, 1);
            uint64_t v155 = v154 + 1;
            if (v54) {
              goto LABEL_93;
            }
            v132[2] = v155;
            swift_bridgeObjectRetain();
            goto LABEL_61;
          }
        }
        v132 = v266;
        uint64_t v133 = v266[7] + 144 * v101;
        v264[0] = *(_OWORD *)v133;
        long long v134 = *(_OWORD *)(v133 + 64);
        long long v136 = *(_OWORD *)(v133 + 16);
        long long v135 = *(_OWORD *)(v133 + 32);
        v264[3] = *(_OWORD *)(v133 + 48);
        v264[4] = v134;
        v264[1] = v136;
        v264[2] = v135;
        long long v138 = *(_OWORD *)(v133 + 96);
        long long v137 = *(_OWORD *)(v133 + 112);
        long long v139 = *(_OWORD *)(v133 + 80);
        *(_OWORD *)((char *)v265 + 10) = *(_OWORD *)(v133 + 122);
        v264[6] = v138;
        v265[0] = v137;
        v264[5] = v139;
        sub_1C05DD8B8((uint64_t)v264);
        *(_OWORD *)uint64_t v133 = v98;
        *(void *)(v133 + 16) = v108;
        *(void *)(v133 + 24) = v221;
        *(void *)(v133 + 32) = v219;
        *(void *)(v133 + 40) = v217;
        *(unsigned char *)(v133 + 48) = v216;
        *(void *)(v133 + 56) = v91;
        *(void *)(v133 + 64) = v92;
        *(void *)(v133 + 72) = v257;
        *(void *)(v133 + 80) = v256;
        *(void *)(v133 + 88) = v255;
        *(void *)(v133 + 96) = v253;
        *(void *)(v133 + 104) = v251;
        *(void *)(v133 + 112) = v249;
        *(void *)(v133 + 120) = v247;
        *(void *)(v133 + 128) = v245;
        *(unsigned char *)(v133 + 136) = v243;
        *(unsigned char *)(v133 + 137) = v215;
LABEL_61:
        unint64_t v283 = (unint64_t)v132;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DD8B8((uint64_t)&v267);
        sub_1C05DD8B8((uint64_t)&v275);
        uint64_t v8 = v213;
        if (!v71) {
          goto LABEL_63;
        }
LABEL_62:
        long long v275 = *(_OWORD *)(v8 + v260);
        long long v156 = *(_OWORD *)(v8 + v260 + 16);
        long long v157 = *(_OWORD *)(v8 + v260 + 32);
        long long v158 = *(_OWORD *)(v8 + v260 + 64);
        long long v278 = *(_OWORD *)(v8 + v260 + 48);
        long long v279 = v158;
        long long v276 = v156;
        long long v277 = v157;
        long long v159 = *(_OWORD *)(v8 + v260 + 80);
        long long v160 = *(_OWORD *)(v8 + v260 + 96);
        long long v161 = *(_OWORD *)(v8 + v260 + 112);
        *(_OWORD *)&v282[10] = *(_OWORD *)(v8 + v260 + 122);
        long long v281 = v160;
        *(_OWORD *)v282 = v161;
        long long v280 = v159;
        uint64_t v72 = *((void *)&v275 + 1);
        v260 += 144;
        --v71;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1C05DD7E4((uint64_t)&v275);
  swift_bridgeObjectRetain();
  char v109 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v264[0] = v74;
  unint64_t v111 = sub_1BFEF2D8C(v73, v72);
  uint64_t v112 = v74[2];
  BOOL v113 = (v110 & 1) == 0;
  uint64_t v114 = v112 + v113;
  if (__OFADD__(v112, v113)) {
    goto LABEL_89;
  }
  char v115 = v110;
  if (v74[3] >= v114)
  {
    if (v109)
    {
      if ((v110 & 1) == 0) {
        goto LABEL_52;
      }
    }
    else
    {
      sub_1C1072154();
      if ((v115 & 1) == 0) {
        goto LABEL_52;
      }
    }
    goto LABEL_47;
  }
  sub_1C10604EC(v114, v109);
  unint64_t v116 = sub_1BFEF2D8C(v73, v72);
  if ((v115 & 1) != (v117 & 1)) {
    goto LABEL_95;
  }
  unint64_t v111 = v116;
  if (v115)
  {
LABEL_47:
    v118 = *(void **)&v264[0];
    v119 = (long long *)(*(void *)(*(void *)&v264[0] + 56) + 144 * v111);
    long long v267 = *v119;
    long long v120 = v119[4];
    long long v122 = v119[1];
    long long v121 = v119[2];
    long long v270 = v119[3];
    long long v271 = v120;
    long long v268 = v122;
    long long v269 = v121;
    long long v124 = v119[6];
    long long v123 = v119[7];
    long long v125 = v119[5];
    *(_OWORD *)&v274[10] = *(long long *)((char *)v119 + 122);
    long long v273 = v124;
    *(_OWORD *)v274 = v123;
    long long v272 = v125;
    sub_1C05DD8B8((uint64_t)&v267);
    long long *v119 = v275;
    long long v126 = v279;
    long long v128 = v276;
    long long v127 = v277;
    v119[3] = v278;
    v119[4] = v126;
    v119[1] = v128;
    v119[2] = v127;
    long long v130 = v281;
    long long v129 = *(_OWORD *)v282;
    long long v131 = v280;
    *(long long *)((char *)v119 + 122) = *(_OWORD *)&v282[10];
    v119[6] = v130;
    v119[7] = v129;
    v119[5] = v131;
    goto LABEL_54;
  }
LABEL_52:
  v118 = *(void **)&v264[0];
  *(void *)(*(void *)&v264[0] + 8 * (v111 >> 6) + 64) |= 1 << v111;
  v140 = (uint64_t *)(v118[6] + 16 * v111);
  uint64_t *v140 = v73;
  v140[1] = v72;
  v141 = (_OWORD *)(v118[7] + 144 * v111);
  long long v142 = *(_OWORD *)&v282[10];
  long long v144 = v281;
  long long v143 = *(_OWORD *)v282;
  v141[5] = v280;
  v141[6] = v144;
  v141[7] = v143;
  *(_OWORD *)((char *)v141 + 122) = v142;
  long long v146 = v278;
  long long v145 = v279;
  long long v147 = v277;
  v141[1] = v276;
  v141[2] = v147;
  v141[3] = v146;
  v141[4] = v145;
  _OWORD *v141 = v275;
  uint64_t v148 = v118[2];
  BOOL v54 = __OFADD__(v148, 1);
  uint64_t v149 = v148 + 1;
  if (v54) {
    goto LABEL_91;
  }
  v118[2] = v149;
  swift_bridgeObjectRetain();
LABEL_54:
  unint64_t v283 = (unint64_t)v118;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v150 = v65[2];
  unint64_t v151 = v65[3];
  swift_bridgeObjectRetain();
  if (v150 >= v151 >> 1) {
    long long v65 = sub_1BFEF692C((void *)(v151 > 1), v150 + 1, 1, v65);
  }
  v65[2] = v150 + 1;
  v152 = &v65[2 * v150];
  v152[4] = v73;
  v152[5] = v72;
  sub_1C05DD8B8((uint64_t)&v275);
  if (v71) {
    goto LABEL_62;
  }
LABEL_63:
  swift_bridgeObjectRelease();
LABEL_64:
  *(void *)&long long v275 = v65;
  swift_bridgeObjectRetain();
  uint64_t v162 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v162);
  uint64_t v163 = v275;
  uint64_t v164 = *(void *)(v275 + 16);
  if (v164)
  {
    swift_bridgeObjectRetain();
    v165 = (uint64_t *)(v163 + 40);
    v166 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v167 = v283;
      if (*(void *)(v283 + 16))
      {
        uint64_t v169 = *(v165 - 1);
        uint64_t v168 = *v165;
        swift_bridgeObjectRetain_n();
        unint64_t v170 = sub_1BFEF2D8C(v169, v168);
        if (v171)
        {
          v172 = (long long *)(*(void *)(v167 + 56) + 144 * v170);
          long long v275 = *v172;
          long long v173 = v172[3];
          long long v174 = v172[4];
          long long v175 = v172[2];
          long long v276 = v172[1];
          long long v277 = v175;
          long long v278 = v173;
          long long v279 = v174;
          long long v176 = v172[5];
          long long v177 = v172[6];
          long long v178 = v172[7];
          *(_OWORD *)&v282[10] = *(long long *)((char *)v172 + 122);
          long long v281 = v177;
          *(_OWORD *)v282 = v178;
          long long v280 = v176;
          sub_1C05DD7E4((uint64_t)&v275);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v166 = sub_1C0EE0E80(0, v166[2] + 1, 1, v166);
          }
          unint64_t v180 = v166[2];
          unint64_t v179 = v166[3];
          if (v180 >= v179 >> 1) {
            v166 = sub_1C0EE0E80((void *)(v179 > 1), v180 + 1, 1, v166);
          }
          v166[2] = v180 + 1;
          v181 = &v166[18 * v180];
          v181[2] = v275;
          long long v182 = v276;
          long long v183 = v277;
          long long v184 = v279;
          v181[5] = v278;
          v181[6] = v184;
          v181[3] = v182;
          v181[4] = v183;
          long long v185 = v280;
          long long v186 = v281;
          long long v187 = *(_OWORD *)v282;
          *(_OWORD *)((char *)v181 + 154) = *(_OWORD *)&v282[10];
          v181[8] = v186;
          v181[9] = v187;
          v181[7] = v185;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v165 += 2;
      --v164;
    }
    while (v164);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v166 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v188 = v211[7];
  if (!v188)
  {
    uint64_t v188 = *(void *)(v212 + 56);
    swift_bridgeObjectRetain();
  }
  uint64_t v189 = v211[8];
  if (!v189) {
    uint64_t v189 = swift_bridgeObjectRetain();
  }
  uint64_t v246 = v189;
  uint64_t v254 = v188;
  uint64_t v190 = v211[9];
  uint64_t v191 = v211[10];
  uint64_t v250 = v191;
  uint64_t v252 = v190;
  unsigned int v192 = *((unsigned __int8 *)v211 + 88);
  char v248 = *((unsigned char *)v211 + 88);
  if (v192 >= 0xFE)
  {
    uint64_t v190 = *(void *)(v212 + 72);
    uint64_t v191 = *(void *)(v212 + 80);
    LOBYTE(v192) = *(unsigned char *)(v212 + 88);
    sub_1BFEF6828(v190, v191, v192);
  }
  char v225 = v192;
  uint64_t v227 = v191;
  uint64_t v229 = v190;
  uint64_t v193 = v211[12];
  uint64_t v194 = v211[13];
  uint64_t v195 = v211[17];
  uint64_t v196 = v211[18];
  uint64_t v197 = v211[19];
  uint64_t v198 = v211[20];
  uint64_t v199 = v211[21];
  uint64_t v242 = v194;
  uint64_t v244 = v193;
  uint64_t v239 = v211[15];
  uint64_t v240 = v211[14];
  uint64_t v261 = v239;
  uint64_t v263 = v240;
  uint64_t v235 = v195;
  uint64_t v237 = v211[16];
  uint64_t v258 = v237;
  uint64_t v231 = v197;
  uint64_t v233 = v196;
  uint64_t v222 = v199;
  uint64_t v223 = v198;
  unsigned __int8 v201 = *((unsigned char *)v211 + 176);
  unsigned __int8 v200 = v201;
  if (v201 == 254)
  {
    uint64_t v193 = *(void *)(v212 + 96);
    uint64_t v194 = *(void *)(v212 + 104);
    uint64_t v195 = *(void *)(v212 + 136);
    uint64_t v196 = *(void *)(v212 + 144);
    uint64_t v197 = *(void *)(v212 + 152);
    uint64_t v198 = *(void *)(v212 + 160);
    uint64_t v199 = *(void *)(v212 + 168);
    unsigned __int8 v201 = *(unsigned char *)(v212 + 176);
    uint64_t v261 = *(void *)(v212 + 120);
    uint64_t v263 = *(void *)(v212 + 112);
    uint64_t v258 = *(void *)(v212 + 128);
    sub_1BFEF8708(v193, v194, v263, v261, v258, v195, v196, v197, v198, v199, v201);
  }
  uint64_t v218 = v196;
  uint64_t v220 = v195;
  uint64_t v202 = v194;
  uint64_t v203 = v193;
  int v204 = *((unsigned __int8 *)v211 + 177);
  if (v204 == 2) {
    LOBYTE(v204) = *(unsigned char *)(v212 + 177);
  }
  uint64_t v205 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v205 + 16) = v210;
  *(void *)(v205 + 24) = v209;
  *(void *)(v205 + 32) = v208;
  *(void *)(v205 + 40) = v207;
  swift_beginAccess();
  *(void *)(v205 + 48) = v166;
  *(void *)(v205 + 56) = v254;
  *(void *)(v205 + 64) = v246;
  *(void *)(v205 + 72) = v229;
  *(void *)(v205 + 80) = v227;
  *(unsigned char *)(v205 + 88) = v225;
  *(void *)(v205 + 96) = v203;
  *(void *)(v205 + 104) = v202;
  *(void *)(v205 + 112) = v263;
  *(void *)(v205 + 120) = v261;
  *(void *)(v205 + 128) = v258;
  *(void *)(v205 + 136) = v220;
  *(void *)(v205 + 144) = v218;
  *(void *)(v205 + 152) = v197;
  *(void *)(v205 + 160) = v198;
  *(void *)(v205 + 168) = v199;
  *(unsigned char *)(v205 + 176) = v201;
  *(unsigned char *)(v205 + 177) = v204;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v252, v250, v248);
  sub_1BFEF8708(v244, v242, v240, v239, v237, v235, v233, v231, v223, v222, v200);
  return v205;
}

uint64_t sub_1C107BA44(uint64_t a1)
{
  uint64_t v139 = a1;
  v140 = 0;
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t v117 = *v1;
  swift_beginAccess();
  uint64_t v2 = v1;
  uint64_t v3 = v1[6];
  int64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  long long v126 = sub_1C0EE0E80(0, v4, 0, MEMORY[0x1E4FBC860]);
  long long v130 = sub_1C0EE0D58(0, v4, 0, v5);
  uint64_t v132 = *(void *)(v3 + 16);
  uint64_t v133 = v3;
  if (!v132)
  {
LABEL_31:
    sub_1C107DAB8();
    uint64_t v54 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      uint64_t v56 = v55 - 1;
      for (uint64_t i = 32; ; i += 152)
      {
        long long v58 = *(_OWORD *)(v54 + i + 16);
        long long v141 = *(_OWORD *)(v54 + i);
        long long v142 = v58;
        long long v59 = *(_OWORD *)(v54 + i + 32);
        long long v60 = *(_OWORD *)(v54 + i + 48);
        long long v61 = *(_OWORD *)(v54 + i + 64);
        long long v146 = *(_OWORD *)(v54 + i + 80);
        long long v144 = v60;
        long long v145 = v61;
        long long v143 = v59;
        long long v62 = *(_OWORD *)(v54 + i + 96);
        long long v63 = *(_OWORD *)(v54 + i + 112);
        long long v64 = *(_OWORD *)(v54 + i + 128);
        uint64_t v149 = *(void *)(v54 + i + 144);
        v148[0] = v63;
        v148[1] = v64;
        long long v147 = v62;
        sub_1C05DD7E4((uint64_t)&v141);
        long long v65 = v126;
        unint64_t v67 = v126[2];
        unint64_t v66 = v126[3];
        if (v67 >= v66 >> 1) {
          long long v65 = sub_1C0EE0E80((void *)(v66 > 1), v67 + 1, 1, v126);
        }
        v65[2] = v67 + 1;
        long long v126 = v65;
        long long v68 = &v65[18 * v67];
        v68[2] = v141;
        long long v69 = v142;
        long long v70 = v143;
        long long v71 = v145;
        v68[5] = v144;
        v68[6] = v71;
        v68[3] = v69;
        v68[4] = v70;
        long long v72 = v146;
        long long v73 = v147;
        long long v74 = v148[0];
        *(_OWORD *)((char *)v68 + 154) = *(_OWORD *)((char *)v148 + 10);
        v68[8] = v73;
        v68[9] = v74;
        v68[7] = v72;
        if (!v56) {
          break;
        }
        --v56;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v75 = v126;
    uint64_t v76 = v126[2];
    if (v76)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      char v77 = v75 + 11;
      uint64_t v78 = (uint64_t)v2;
      do
      {
        uint64_t v80 = *(v77 - 5);
        uint64_t v79 = *(v77 - 4);
        uint64_t v81 = *(v77 - 3);
        long long v130 = (void *)*(v77 - 2);
        uint64_t v131 = v81;
        unsigned int v82 = *((unsigned __int8 *)v77 - 8);
        uint64_t v83 = *v77;
        uint64_t v84 = v77[1];
        uint64_t v85 = v77[2];
        uint64_t v133 = v77[3];
        uint64_t v134 = v85;
        uint64_t v132 = v77[4];
        long long v138 = (uint64_t *)v77[5];
        uint64_t v139 = v83;
        uint64_t v86 = v77[6];
        uint64_t v136 = v84;
        uint64_t v137 = v86;
        v140 = (void *)v77[7];
        uint64_t v87 = v77[8];
        uint64_t v128 = v77[9];
        uint64_t v129 = v87;
        int v127 = *((unsigned __int8 *)v77 + 80);
        int v124 = *((unsigned __int8 *)v77 + 81);
        uint64_t v88 = swift_allocObject();
        swift_beginAccess();
        uint64_t v89 = *(void *)(v78 + 16);
        uint64_t v90 = *(void *)(v78 + 24);
        swift_beginAccess();
        *(void *)(v88 + 16) = v89;
        *(void *)(v88 + 24) = v90;
        uint64_t v91 = *(void *)(v78 + 40);
        *(void *)(v88 + 32) = *(void *)(v78 + 32);
        *(void *)(v88 + 40) = v91;
        uint64_t v119 = v91;
        uint64_t v120 = v90;
        swift_beginAccess();
        uint64_t v92 = *(void *)(v78 + 48);
        swift_beginAccess();
        uint64_t v118 = v92;
        *(void *)(v88 + 48) = v92;
        uint64_t v93 = v80;
        uint64_t v122 = v80;
        if (!v80) {
          uint64_t v93 = swift_bridgeObjectRetain();
        }
        uint64_t v125 = v76;
        *(void *)(v88 + 56) = v93;
        uint64_t v94 = v79;
        if (!v79) {
          uint64_t v94 = swift_bridgeObjectRetain();
        }
        uint64_t v121 = v79;
        *(void *)(v88 + 64) = v94;
        unsigned __int8 v96 = v130;
        uint64_t v95 = v131;
        char v97 = v82;
        unsigned int v123 = v82;
        if (v82 >= 0xFE)
        {
          uint64_t v95 = *(void *)(v78 + 72);
          unsigned __int8 v96 = *(void **)(v78 + 80);
          char v97 = *(unsigned char *)(v78 + 88);
          sub_1BFEF6828(v95, (uint64_t)v96, v97);
        }
        long long v135 = (void *)v78;
        uint64_t v98 = v136;
        uint64_t v99 = v137;
        uint64_t v101 = v133;
        uint64_t v100 = v134;
        *(void *)(v88 + 72) = v95;
        *(void *)(v88 + 80) = v96;
        uint64_t v102 = v132;
        *(unsigned char *)(v88 + 88) = v97;
        uint64_t v104 = (uint64_t)v138;
        uint64_t v103 = v139;
        uint64_t v105 = (uint64_t)v140;
        uint64_t v107 = v128;
        uint64_t v106 = v129;
        unsigned __int8 v108 = v127;
        if (v127 == 254)
        {
          uint64_t v109 = v135[12];
          uint64_t v115 = v135[13];
          uint64_t v116 = v109;
          uint64_t v110 = v135[14];
          uint64_t v113 = v135[15];
          uint64_t v114 = v110;
          uint64_t v102 = v135[16];
          uint64_t v104 = v135[17];
          uint64_t v99 = v135[18];
          uint64_t v105 = v135[19];
          uint64_t v106 = v135[20];
          uint64_t v107 = v135[21];
          unsigned __int8 v108 = *((unsigned char *)v135 + 176);
          sub_1BFEF8708(v109, v115, v110, v113, v102, v104, v99, v105, v106, v107, v108);
          uint64_t v101 = v113;
          uint64_t v100 = v114;
          uint64_t v98 = v115;
          uint64_t v103 = v116;
        }
        *(void *)(v88 + 96) = v103;
        *(void *)(v88 + 104) = v98;
        *(void *)(v88 + 112) = v100;
        *(void *)(v88 + 120) = v101;
        *(void *)(v88 + 128) = v102;
        *(void *)(v88 + 136) = v104;
        *(void *)(v88 + 144) = v99;
        *(void *)(v88 + 152) = v105;
        *(void *)(v88 + 160) = v106;
        *(void *)(v88 + 168) = v107;
        *(unsigned char *)(v88 + 176) = v108;
        char v111 = v124;
        if (v124 == 2) {
          char v111 = *((unsigned char *)v135 + 177);
        }
        v77 += 18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v131, (uint64_t)v130, v123);
        sub_1BFEF8708(v139, v136, v134, v133, v132, (uint64_t)v138, v137, (uint64_t)v140, v129, v128, v127);
        swift_release();
        *(unsigned char *)(v88 + 177) = v111;
        uint64_t v78 = v88;
        uint64_t v76 = v125 - 1;
      }
      while (v125 != 1);
      swift_bridgeObjectRelease();
      uint64_t v2 = (void *)v88;
    }
    else
    {
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  uint64_t v131 = v3 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  long long v135 = v2;
LABEL_3:
  uint64_t v134 = v6;
  uint64_t v7 = (long long *)(v131 + 144 * v6);
  long long v150 = *v7;
  long long v8 = v7[1];
  long long v9 = v7[2];
  long long v10 = v7[4];
  long long v153 = v7[3];
  long long v154 = v10;
  long long v151 = v8;
  long long v152 = v9;
  long long v11 = v7[5];
  long long v12 = v7[6];
  long long v13 = v7[7];
  *(_OWORD *)((char *)v157 + 10) = *(long long *)((char *)v7 + 122);
  long long v156 = v12;
  v157[0] = v13;
  long long v155 = v11;
  long long v14 = v150;
  sub_1C05DD7E4((uint64_t)&v150);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  long long v141 = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1BFEF53C0((uint64_t *)&v141);
  swift_bridgeObjectRelease();
  uint64_t v137 = *(void *)(v15 + 16);
  if (!v137)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    sub_1C05DD8B8((uint64_t)&v150);
    goto LABEL_27;
  }
  unint64_t v16 = 0;
  uint64_t v17 = (uint64_t *)(v15 + 64);
  uint64_t v18 = v15;
  while (1)
  {
    if (v16 >= *(void *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_54;
    }
    uint64_t v136 = *(v17 - 2);
    uint64_t v19 = *(v17 - 1);
    uint64_t v20 = *v17;
    char v21 = *(unsigned char *)(v19 + 32);
    unsigned int v22 = v21 & 0x3F;
    unint64_t v23 = (unint64_t)((1 << v21) + 63) >> 6;
    size_t v24 = 8 * v23;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v22 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    BOOL v26 = (char *)swift_slowAlloc();
    bzero(v26, v24);
    uint64_t v30 = v23;
    char v28 = v140;
    uint64_t v29 = sub_1BFEFB09C((uint64_t)v26, v30, v19, v139);
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_56;
    }
    v140 = 0;
    MEMORY[0x1C18C9B00](v26, -1, -1);
LABEL_15:
    char v31 = sub_1BFEFAE14(v29, v19);
    swift_release();
    if (v31 & 1) != 0 && (sub_1BFEFB810(v139, v20))
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v136;
      if (v136 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DD7E4((uint64_t)&v150);
        long long v44 = v126;
        unint64_t v46 = v126[2];
        unint64_t v45 = v126[3];
        uint64_t v2 = v135;
        if (v46 >= v45 >> 1) {
          long long v44 = sub_1C0EE0E80((void *)(v45 > 1), v46 + 1, 1, v126);
        }
        v44[2] = v46 + 1;
        long long v126 = v44;
        long long v47 = &v44[18 * v46];
        v47[2] = v150;
        long long v48 = v151;
        long long v49 = v152;
        long long v50 = v154;
        v47[5] = v153;
        v47[6] = v50;
        v47[3] = v48;
        v47[4] = v49;
        long long v51 = v155;
        long long v52 = v156;
        long long v53 = v157[0];
        *(_OWORD *)((char *)v47 + 154) = *(_OWORD *)((char *)v157 + 10);
        v47[8] = v52;
        v47[9] = v53;
        v47[7] = v51;
        goto LABEL_26;
      }
      sub_1C05DD7E4((uint64_t)&v150);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v33 = v130;
      unint64_t v35 = v130[2];
      unint64_t v34 = v130[3];
      long long v36 = v135;
      if (v35 >= v34 >> 1) {
        long long v33 = sub_1C0EE0D58((void *)(v34 > 1), v35 + 1, 1, v130);
      }
      long long v144 = v153;
      long long v145 = v154;
      *(_OWORD *)((char *)v148 + 10) = *(_OWORD *)((char *)v157 + 10);
      long long v147 = v156;
      v148[0] = v157[0];
      long long v146 = v155;
      long long v142 = v151;
      long long v143 = v152;
      long long v141 = v150;
      v33[2] = v35 + 1;
      long long v130 = v33;
      long long v37 = &v33[19 * v35];
      *((_OWORD *)v37 + 2) = v141;
      long long v38 = v142;
      long long v39 = v143;
      long long v40 = v145;
      *((_OWORD *)v37 + 5) = v144;
      *((_OWORD *)v37 + 6) = v40;
      *((_OWORD *)v37 + 3) = v38;
      *((_OWORD *)v37 + 4) = v39;
      long long v41 = v146;
      long long v42 = v147;
      long long v43 = v148[1];
      *((_OWORD *)v37 + 9) = v148[0];
      *((_OWORD *)v37 + 10) = v43;
      *((_OWORD *)v37 + 7) = v41;
      *((_OWORD *)v37 + 8) = v42;
      v37[22] = v32;
      sub_1C05DD8B8((uint64_t)&v150);
      uint64_t v2 = v36;
LABEL_27:
      unint64_t v6 = v134 + 1;
      if (v134 + 1 == v132)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(void *)(v133 + 16)) {
LABEL_54:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 += 5;
    if (v137 == v16)
    {
      swift_bridgeObjectRelease();
      sub_1C05DD8B8((uint64_t)&v150);
      uint64_t v2 = v135;
      goto LABEL_27;
    }
  }
  long long v138 = &v113;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  BOOL v26 = (char *)&v113 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v26, v24);
  uint64_t v27 = v23;
  char v28 = v140;
  uint64_t v29 = sub_1BFEFB09C((uint64_t)v26, v27, v19, v139);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v140 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_56:

  uint64_t result = MEMORY[0x1C18C9B00](v26, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C107C3C8()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = v0[3];
  uint64_t v29 = v0[2];
  uint64_t v3 = v0[5];
  uint64_t v27 = v0[4];
  swift_beginAccess();
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v28 = v2;
  uint64_t v26 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6) {
    uint64_t v7 = sub_1C096BB70(v6);
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = v1[9];
  uint64_t v9 = v1[10];
  char v10 = *((unsigned char *)v1 + 88);
  uint64_t v11 = v1[13];
  uint64_t v12 = v1[16];
  int v13 = *((unsigned __int8 *)v1 + 176);
  uint64_t v24 = v1[12];
  uint64_t v25 = v7;
  uint64_t v22 = v1[15];
  uint64_t v23 = v1[14];
  uint64_t v20 = v1[18];
  uint64_t v21 = v1[17];
  uint64_t v18 = v1[20];
  uint64_t v19 = v1[19];
  uint64_t v17 = v1[21];
  sub_1BFEF6828(v8, v9, v10);
  if (v13 != 254)
  {
    sub_1C10E55EC(v30);
    uint64_t v12 = v30[0];
    uint64_t v11 = v11;
  }
  char v14 = *((unsigned char *)v1 + 177);
  uint64_t v15 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v15 + 16) = v29;
  *(void *)(v15 + 24) = v28;
  *(void *)(v15 + 32) = v27;
  *(void *)(v15 + 40) = v26;
  swift_beginAccess();
  *(void *)(v15 + 48) = v4;
  *(void *)(v15 + 56) = v5;
  *(void *)(v15 + 64) = v25;
  *(void *)(v15 + 72) = v8;
  *(void *)(v15 + 80) = v9;
  *(unsigned char *)(v15 + 88) = v10;
  *(void *)(v15 + 96) = v24;
  *(void *)(v15 + 104) = v11;
  *(void *)(v15 + 112) = v23;
  *(void *)(v15 + 120) = v22;
  *(void *)(v15 + 128) = v12;
  *(void *)(v15 + 136) = v21;
  *(void *)(v15 + 144) = v20;
  *(void *)(v15 + 152) = v19;
  *(void *)(v15 + 160) = v18;
  *(void *)(v15 + 168) = v17;
  *(unsigned char *)(v15 + 176) = v13;
  *(unsigned char *)(v15 + 177) = v14;
  return v15;
}

uint64_t FormatMicaNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatMicaNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatMicaNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  uint64_t v9 = *(void *)(v1 + 152);
  uint64_t v10 = *(void *)(v1 + 160);
  uint64_t v11 = *(void *)(v1 + 168);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 176);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatMicaNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t FormatMicaNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, long long *a9, char a10)
{
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = *a6;
  uint64_t v16 = *a8;
  uint64_t v17 = a8[1];
  LOBYTE(a8) = *((unsigned char *)a8 + 16);
  long long v24 = a9[1];
  long long v25 = *a9;
  long long v22 = a9[3];
  long long v23 = a9[2];
  uint64_t v18 = *((void *)a9 + 8);
  uint64_t v19 = *((void *)a9 + 9);
  char v20 = *((unsigned char *)a9 + 80);
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = a7;
  *(void *)(v14 + 72) = v16;
  *(void *)(v14 + 80) = v17;
  *(unsigned char *)(v14 + 88) = (_BYTE)a8;
  *(_OWORD *)(v14 + 96) = v25;
  *(_OWORD *)(v14 + 112) = v24;
  *(_OWORD *)(v14 + 128) = v23;
  *(_OWORD *)(v14 + 144) = v22;
  *(void *)(v14 + 160) = v18;
  *(void *)(v14 + 168) = v19;
  *(unsigned char *)(v14 + 176) = v20;
  *(unsigned char *)(v14 + 177) = a10;
  return v14;
}

uint64_t FormatMicaNodeStyle.init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, long long *a9, char a10)
{
  uint64_t v15 = *a6;
  uint64_t v17 = *a8;
  uint64_t v16 = a8[1];
  char v26 = *((unsigned char *)a8 + 16);
  long long v24 = a9[1];
  long long v25 = *a9;
  long long v22 = a9[3];
  long long v23 = a9[2];
  uint64_t v18 = *((void *)a9 + 8);
  uint64_t v21 = *((void *)a9 + 9);
  char v19 = *((unsigned char *)a9 + 80);
  swift_beginAccess();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  swift_beginAccess();
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = v15;
  *(void *)(v10 + 64) = a7;
  *(void *)(v10 + 72) = v17;
  *(void *)(v10 + 80) = v16;
  *(unsigned char *)(v10 + 88) = v26;
  *(_OWORD *)(v10 + 96) = v25;
  *(_OWORD *)(v10 + 112) = v24;
  *(_OWORD *)(v10 + 128) = v23;
  *(_OWORD *)(v10 + 144) = v22;
  *(void *)(v10 + 160) = v18;
  *(void *)(v10 + 168) = v21;
  *(unsigned char *)(v10 + 176) = v19;
  *(unsigned char *)(v10 + 177) = a10;
  return v10;
}

uint64_t FormatMicaNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  sub_1BFEF8738(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  return v0;
}

uint64_t FormatMicaNodeStyle.__deallocating_deinit()
{
  FormatMicaNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C107CAD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C089C734(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C107CB00(void *a1)
{
  return FormatMicaNodeStyle.encode(to:)(a1);
}

uint64_t sub_1C107CB24(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatMicaNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatMicaNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatMicaNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  uint64_t v10 = *(void *)(v1 + 120);
  uint64_t v11 = *(void *)(v1 + 128);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatMicaNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t sub_1C107CBC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMicaNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1C107CBE0(void *a1)
{
  return FormatMicaNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatMicaNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C107CC08@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 144);
  return result;
}

uint64_t _s8NewsFeed19FormatMicaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v47 = *(void *)(a1 + 56);
  uint64_t v48 = *(void *)(a1 + 64);
  uint64_t v49 = *(void *)(a1 + 72);
  uint64_t v50 = *(void *)(a1 + 80);
  uint64_t v51 = *(void *)(a1 + 88);
  uint64_t v52 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v53 = *(void *)(a1 + 104);
  uint64_t v45 = *(void *)(a1 + 128);
  uint64_t v46 = *(void *)(a1 + 120);
  int v54 = *(unsigned __int8 *)(a1 + 136);
  int v33 = *(unsigned __int8 *)(a1 + 137);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v55 = *(void *)(a2 + 40);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v36 = *(void *)(a2 + 56);
  uint64_t v37 = *(void *)(a2 + 64);
  uint64_t v38 = *(void *)(a2 + 72);
  uint64_t v39 = *(void *)(a2 + 80);
  uint64_t v40 = *(void *)(a2 + 88);
  uint64_t v41 = *(void *)(a2 + 96);
  uint64_t v42 = *(void *)(a2 + 104);
  uint64_t v43 = *(void *)(a2 + 112);
  uint64_t v34 = *(void *)(a2 + 128);
  uint64_t v35 = *(void *)(a2 + 120);
  int v44 = *(unsigned __int8 *)(a2 + 136);
  int v32 = *(unsigned __int8 *)(a2 + 137);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1C1520A9C(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2)
    {
      if (!v9) {
        return 0;
      }
      uint64_t v31 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = sub_1C00DE998(v2, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v31 = v7;
      if (v9) {
        return 0;
      }
    }
    if (v3)
    {
      if (!v8) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = swift_bridgeObjectRetain();
      BOOL v16 = sub_1C00DFB58(v15, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v16) {
        return 0;
      }
    }
    else if (v8)
    {
      return 0;
    }
    char v17 = v6;
    if (v6 <= 0xFD)
    {
      uint64_t v68 = v4;
      uint64_t v69 = v5;
      LOBYTE(v70) = v6;
      if (v11 <= 0xFD)
      {
        uint64_t v57 = v10;
        uint64_t v58 = v55;
        LOBYTE(v59) = v11;
        sub_1BFEF6828(v4, v5, v6);
        sub_1BFF046A0(v4, v5, v6);
        char v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v68, (uint64_t)&v57);
        sub_1BFF04738(v68, v69, v70);
        sub_1BFEF68AC(v4, v5, v17);
        if ((v18 & 1) == 0) {
          return 0;
        }
        goto LABEL_21;
      }
      sub_1BFF046A0(v4, v5, v6);
      sub_1BFF046A0(v4, v5, v6);
      sub_1BFF04738(v4, v5, v6);
    }
    else if (v11 > 0xFD)
    {
LABEL_21:
      char v19 = v54;
      if (v54 == 254)
      {
        unsigned __int8 v20 = v44;
        uint64_t v21 = v31;
        uint64_t v23 = v52;
        uint64_t v22 = v53;
        uint64_t v25 = v50;
        uint64_t v24 = v51;
        uint64_t v27 = v48;
        uint64_t v26 = v49;
        uint64_t v29 = v46;
        uint64_t v28 = v47;
        uint64_t v30 = v45;
        if (v44 == 254)
        {
LABEL_28:
          if (v33 == 2)
          {
            if (v32 != 2) {
              return 0;
            }
          }
          else if (v32 == 2 || ((((v33 & 1) == 0) ^ v32) & 1) == 0)
          {
            return 0;
          }
          return 1;
        }
        goto LABEL_26;
      }
      uint64_t v28 = v47;
      uint64_t v27 = v48;
      uint64_t v68 = v47;
      uint64_t v69 = v48;
      uint64_t v26 = v49;
      uint64_t v25 = v50;
      uint64_t v70 = v49;
      uint64_t v71 = v50;
      uint64_t v24 = v51;
      uint64_t v23 = v52;
      uint64_t v72 = v51;
      uint64_t v73 = v52;
      uint64_t v22 = v53;
      uint64_t v74 = v53;
      uint64_t v75 = v31;
      uint64_t v30 = v45;
      uint64_t v29 = v46;
      uint64_t v76 = v46;
      uint64_t v77 = v45;
      char v78 = v54;
      unsigned __int8 v20 = v44;
      if (v44 == 254)
      {
        swift_retain();
        uint64_t v21 = v31;
        char v19 = v54;
LABEL_26:
        uint64_t v68 = v28;
        uint64_t v69 = v27;
        uint64_t v70 = v26;
        uint64_t v71 = v25;
        uint64_t v72 = v24;
        uint64_t v73 = v23;
        uint64_t v74 = v22;
        uint64_t v75 = v21;
        uint64_t v76 = v29;
        uint64_t v77 = v30;
        char v78 = v19;
        uint64_t v79 = v36;
        uint64_t v80 = v37;
        uint64_t v81 = v38;
        uint64_t v82 = v39;
        uint64_t v83 = v40;
        uint64_t v84 = v41;
        uint64_t v85 = v42;
        uint64_t v86 = v43;
        uint64_t v87 = v35;
        uint64_t v88 = v34;
        unsigned __int8 v89 = v20;
        sub_1BFEF8708(v36, v37, v38, v39, v40, v41, v42, v43, v35, v34, v20);
        sub_1C02D2004((uint64_t)&v68);
        return 0;
      }
      uint64_t v57 = v36;
      LODWORD(v58) = v37;
      uint64_t v59 = v38;
      uint64_t v60 = v39;
      uint64_t v61 = v40;
      uint64_t v62 = v41;
      uint64_t v63 = v42;
      uint64_t v64 = v43;
      uint64_t v65 = v35;
      uint64_t v66 = v34;
      char v67 = v44;
      sub_1BFEF8708(v47, v48, v49, v50, v51, v52, v53, v31, v46, v45, v54);
      swift_retain();
      char v56 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v68, (uint64_t)&v57);
      swift_release();
      sub_1BFEF8738(v47, v48, v49, v50, v51, v52, v53, v31, v46, v45, v54);
      if (v56) {
        goto LABEL_28;
      }
      return 0;
    }
    sub_1BFEF6828(v10, v55, v11);
    sub_1BFEF68AC(v4, v5, v6);
    sub_1BFEF68AC(v10, v55, v11);
    return 0;
  }
  return result;
}

uint64_t sub_1C107D0AC(uint64_t a1)
{
  uint64_t result = sub_1C107D208(&qword_1EA1AAA40);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatMicaNodeStyle()
{
  return self;
}

uint64_t sub_1C107D114(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C107D208(&qword_1EA19DF60);
  uint64_t result = sub_1C107D208(&qword_1EA1A0A98);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C107D17C(void *a1)
{
  a1[1] = sub_1C107D208(&qword_1EA19DF60);
  a1[2] = sub_1C107D208(&qword_1EA1A0A98);
  uint64_t result = sub_1C107D208(&qword_1EA1AAA48);
  a1[3] = result;
  return result;
}

uint64_t sub_1C107D208(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatMicaNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C107D248(uint64_t a1)
{
  unint64_t result = sub_1C107D270();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C107D270()
{
  unint64_t result = qword_1EA1AAA50;
  if (!qword_1EA1AAA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA50);
  }
  return result;
}

unint64_t sub_1C107D2C4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C08F5724();
  unint64_t result = sub_1C08F5688();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C107D2F4(void *a1)
{
  a1[1] = sub_1C08F5724();
  a1[2] = sub_1C08F5688();
  unint64_t result = sub_1C107D32C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C107D32C()
{
  unint64_t result = qword_1EA1AAA58;
  if (!qword_1EA1AAA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA58);
  }
  return result;
}

uint64_t sub_1C107D380@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C107D3D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatMicaNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatMicaNodeStyle);
}

uint64_t dispatch thunk of FormatMicaNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t destroy for FormatMicaNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 0xFD) {
    uint64_t result = sub_1BFF04738(*(void *)(a1 + 32), *(void *)(a1 + 40), v3);
  }
  if (*(unsigned __int8 *)(a1 + 136) != 254)
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for FormatMicaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 <= 0xFD)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    sub_1BFF046A0(v7, v8, v6);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    long long v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    long long v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  return a1;
}

uint64_t assignWithCopy for FormatMicaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v11 = *(void *)(a2 + 32);
      uint64_t v12 = *(void *)(a2 + 40);
      sub_1BFF046A0(v11, v12, *(unsigned char *)(a2 + 48));
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v11;
      *(void *)(a1 + 40) = v12;
      char v15 = *(unsigned char *)(a1 + 48);
      *(unsigned char *)(a1 + 48) = v6;
      sub_1BFF04738(v13, v14, v15);
    }
    else
    {
      sub_1C02D0F84(a1 + 32);
      char v8 = *(unsigned char *)(a2 + 48);
      _OWORD *v4 = *v5;
      *(unsigned char *)(a1 + 48) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    sub_1BFF046A0(v9, v10, *(unsigned char *)(a2 + 48));
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(unsigned char *)(a1 + 48) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    _OWORD *v4 = v7;
  }
  BOOL v16 = (_OWORD *)(a1 + 56);
  char v17 = (_OWORD *)(a2 + 56);
  int v18 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v18 == 254)
    {
      long long v19 = *(_OWORD *)(a2 + 72);
      *BOOL v16 = *v17;
      *(_OWORD *)(a1 + 72) = v19;
      long long v20 = *(_OWORD *)(a2 + 88);
      long long v21 = *(_OWORD *)(a2 + 104);
      long long v22 = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v21;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 88) = v20;
    }
    else
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v27 = *(_OWORD *)(a2 + 96);
      long long v28 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v27;
      *(_OWORD *)(a1 + 112) = v28;
      swift_retain();
    }
  }
  else if (v18 == 254)
  {
    sub_1C02D0FD8(a1 + 56);
    long long v23 = *(_OWORD *)(a2 + 72);
    *BOOL v16 = *v17;
    *(_OWORD *)(a1 + 72) = v23;
    long long v25 = *(_OWORD *)(a2 + 104);
    long long v24 = *(_OWORD *)(a2 + 120);
    long long v26 = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v25;
    *(_OWORD *)(a1 + 120) = v24;
    *(_OWORD *)(a1 + 88) = v26;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_retain();
    swift_release();
    long long v29 = *(_OWORD *)(a2 + 96);
    long long v30 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v29;
    *(_OWORD *)(a1 + 112) = v30;
  }
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  return a1;
}

__n128 __swift_memcpy138_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 122) = *(_OWORD *)(a2 + 122);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for FormatMicaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a2 + 32);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 48);
  if (v6 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + 48);
  if (v7 > 0xFD)
  {
    sub_1C02D0F84(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v5;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v5;
  *(unsigned char *)(a1 + 48) = v7;
  sub_1BFF04738(v8, v9, v6);
LABEL_6:
  if (*(unsigned __int8 *)(a1 + 136) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 136) != 254)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_release();
      long long v12 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      goto LABEL_11;
    }
    sub_1C02D0FD8(a1 + 56);
  }
  long long v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  long long v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v11;
LABEL_11:
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMicaNodeStyle.Selector(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 138)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMicaNodeStyle.Selector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 138) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 138) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaNodeStyle.Selector()
{
  return &type metadata for FormatMicaNodeStyle.Selector;
}

void sub_1C107DA54()
{
  if (!qword_1EA1AAA60)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AAA60);
    }
  }
}

void sub_1C107DAB8()
{
  if (!qword_1EA1A8780)
  {
    sub_1C0EF295C();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8780);
    }
  }
}

void *sub_1C107DB14(double *a1, uint64_t a2)
{
  long long v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
  sub_1C0181BEC(0);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v50 = *(void *)(*(void *)(v5 - 8) + 72);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  uint64_t v45 = v7;
  uint64_t v9 = (void *)(v8 + v7);
  if (a2)
  {
    uint64_t v11 = *(void *)(a2 + 32);
    unint64_t v10 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1C107C3C8();
    long long v53 = 0u;
    long long v54 = 0u;
    uint64_t v55 = 0;
    long long v56 = xmmword_1C15C2CA0;
    uint64_t v12 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v52, v12 + 16);
    uint64_t v13 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v13 = sub_1C139486C;
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
  char v15 = (uint64_t (**)())((char *)v9 + *(int *)(v14 + 24));
  *char v15 = v13;
  v15[1] = (uint64_t (*)())v12;
  uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  *(void *)(v8 + v45) = v11;
  v9[2] = 0;
  v9[3] = 0;
  v9[1] = v10;
  char v17 = (char *)v9 + *(int *)(v14 + 28);
  *(void *)char v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = -1;
  int v18 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v18(v9, 0, 1, v14);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v8, v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v19 = swift_allocObject();
  *(void *)(inited + 32) = v19;
  *(void *)(v19 + 48) = v61;
  long long v20 = v60[1];
  *(_OWORD *)(v19 + 16) = v60[0];
  *(_OWORD *)(v19 + 32) = v20;
  uint64_t v21 = v50;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152C7F0;
  uint64_t v23 = v22 + v45;
  sub_1C0433600(1701869908, 0xE400000000000000, 1633904973, 0xE400000000000000, (void *)(v22 + v45));
  v18((void *)(v22 + v45), 0, 1, v14);
  if (a2)
  {
    uint64_t v24 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v24, (void *)(v23 + v50));
    uint64_t v21 = v50;
    v18((void *)(v23 + v50), 0, 1, v14);
    char v25 = *(unsigned char *)(a2 + 177);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v23 + v50));
    v18((void *)(v23 + v50), 0, 1, v14);
    char v25 = 2;
  }
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v25, (void *)(v23 + 2 * v21));
  v18((void *)(v23 + 2 * v21), 0, 1, v14);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v22, v62);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v26 = swift_allocObject();
  *(void *)(inited + 72) = v26;
  *(void *)(v26 + 48) = v63;
  long long v27 = v62[1];
  *(_OWORD *)(v26 + 16) = v62[0];
  *(_OWORD *)(v26 + 32) = v27;
  if (a2)
  {
    uint64_t v28 = *(void *)(a2 + 72);
    uint64_t v29 = *(void *)(a2 + 80);
    char v30 = *(unsigned char *)(a2 + 88);
    sub_1BFEF6828(v28, v29, v30);
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    char v30 = -2;
  }
  uint64_t v52 = v28;
  *(void *)&long long v53 = v29;
  BYTE8(v53) = v30;
  uint64_t v31 = sub_1C108626C(a1, (uint64_t)&v52);
  sub_1BFEF68AC(v28, v29, v30);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  uint64_t v51 = (void *)inited;
  *(void *)(inited + 112) = v31;
  if (a2)
  {
    unsigned __int8 v46 = *(unsigned char *)(a2 + 176);
    uint64_t v48 = *(void *)(a2 + 168);
    uint64_t v49 = *(void *)(a2 + 160);
    uint64_t v32 = *(void *)(a2 + 96);
    uint64_t v33 = *(void *)(a2 + 104);
    uint64_t v34 = *(void *)(a2 + 112);
    uint64_t v35 = *(void *)(a2 + 120);
    uint64_t v36 = *(void *)(a2 + 128);
    uint64_t v37 = *(void *)(a2 + 136);
    uint64_t v38 = *(void *)(a2 + 144);
    uint64_t v39 = *(void *)(a2 + 152);
    sub_1BFEF8708(v32, v33, v34, v35, v36, v37, v38, v39, v49, v48, v46);
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    unsigned __int8 v46 = -2;
  }
  uint64_t v52 = v32;
  *(void *)&long long v53 = v33;
  *((void *)&v53 + 1) = v34;
  *(void *)&long long v54 = v35;
  *((void *)&v54 + 1) = v36;
  uint64_t v55 = v37;
  *(void *)&long long v56 = v38;
  *((void *)&v56 + 1) = v39;
  uint64_t v57 = v49;
  uint64_t v58 = v48;
  unsigned __int8 v59 = v46;
  uint64_t v40 = sub_1C0AD49A4((uint64_t)&v52);
  uint64_t v41 = v32;
  uint64_t v42 = v40;
  sub_1BFEF8738(v41, v33, v34, v35, v36, v37, v38, v39, v49, v48, v46);
  v51[22] = &type metadata for FormatInspection;
  v51[23] = &off_1F1C29D30;
  v51[19] = v42;
  uint64_t v43 = sub_1C131B79C((uint64_t)v51);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v43;
}

uint64_t sub_1C107E1CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C107E214()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

unsigned char *FormatUnderline.init(style:color:)@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a2;
  *(unsigned char *)a3 = *result;
  *(void *)(a3 + 8) = v3;
  return result;
}

void FormatUnderline.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatUnderline.color.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

BOOL _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4 = *a1;
  uint64_t v5 = *((void *)a1 + 1);
  int v6 = *a2;
  uint64_t v7 = *((void *)a2 + 1);
  if (v4 == 8)
  {
    if (v6 != 8) {
      return 0;
    }
  }
  else if (v6 == 8 || (sub_1C148F23C(v4, v6) & 1) == 0)
  {
    return 0;
  }
  if ((~v5 & 0xF000000000000007) == 0)
  {
    if ((~v7 & 0xF000000000000007) == 0) {
      return 1;
    }
    goto LABEL_11;
  }
  uint64_t v11 = v5;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_11:
    sub_1BFDC11A4(v7);
    sub_1BFDC11BC(v5);
    sub_1BFDC11BC(v7);
    return 0;
  }
  uint64_t v10 = v7;
  swift_retain_n();
  char v8 = static FormatColor.== infix(_:_:)(&v11, (unint64_t *)&v10);
  swift_release();
  sub_1BFDC11BC(v5);
  return (v8 & 1) != 0;
}

unint64_t sub_1C107E378(uint64_t a1)
{
  unint64_t result = sub_1C107E3A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C107E3A0()
{
  unint64_t result = qword_1EA1AAA68;
  if (!qword_1EA1AAA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA68);
  }
  return result;
}

unint64_t sub_1C107E3F4(void *a1)
{
  a1[1] = sub_1BFE94348();
  a1[2] = sub_1BFE79904();
  unint64_t result = sub_1C107E42C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C107E42C()
{
  unint64_t result = qword_1EA1AAA70;
  if (!qword_1EA1AAA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA70);
  }
  return result;
}

uint64_t destroy for FormatUnderline(uint64_t result)
{
  if ((~*(void *)(result + 8) & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t _s8NewsFeed15FormatUnderlineVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  if ((~v3 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 8) = v3;
  return a1;
}

uint64_t assignWithCopy for FormatUnderline(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = v4 & 0xF000000000000007;
  if ((~*(void *)(a1 + 8) & 0xF000000000000007) != 0)
  {
    if (v5 != 0xF000000000000007)
    {
      void *v3 = v4;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1C036EDB0(a1 + 8);
    uint64_t v4 = *(void *)(a2 + 8);
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
LABEL_6:
    void *v3 = v4;
    return a1;
  }
  void *v3 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithTake for FormatUnderline(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if ((~*(void *)(a1 + 8) & 0xF000000000000007) != 0)
  {
    if ((~v4 & 0xF000000000000007) != 0)
    {
      void *v3 = v4;
      swift_release();
      return a1;
    }
    sub_1C036EDB0(a1 + 8);
  }
  void *v3 = v4;
  return a1;
}

ValueMetadata *type metadata accessor for FormatUnderline()
{
  return &type metadata for FormatUnderline;
}

uint64_t static FormatCodingIdentifierStrategy.defaultValue.getter()
{
  uint64_t v0 = sub_1C151635C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v4 = sub_1C151633C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

BOOL static FormatCodingIdentifierStrategy.shouldEncode(wrappedValue:)()
{
  sub_1C107E7B8();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151632C();
  uint64_t v3 = sub_1C151635C();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1;
  sub_1C107E810((uint64_t)v2);
  return v4;
}

void sub_1C107E7B8()
{
  if (!qword_1EB85F240)
  {
    sub_1C151635C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F240);
    }
  }
}

uint64_t sub_1C107E810(uint64_t a1)
{
  sub_1C107E7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C107E86C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C151635C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v6 = sub_1C151633C();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  a1[1] = v8;
  return result;
}

BOOL sub_1C107E948()
{
  sub_1C107E7B8();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151632C();
  uint64_t v3 = sub_1C151635C();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1;
  sub_1C107E810((uint64_t)v2);
  return v4;
}

ValueMetadata *type metadata accessor for FormatCodingIdentifierStrategy()
{
  return &type metadata for FormatCodingIdentifierStrategy;
}

uint64_t FormatButtonNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeDataLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatButtonNodeDataLayoutAttributes.stateMaskLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNodeDataLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatButtonNodeDataLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 40);
}

unint64_t FormatButtonNodeDataLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 48);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatButtonNodeDataLayoutAttributes.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatButtonNodeDataLayoutAttributes.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatButtonNodeDataLayoutAttributes.isUserInteractionEnabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatButtonNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatButtonNodeDataLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
}

double FormatButtonNodeDataLayoutAttributes.frame.getter()
{
  return *(double *)(*(void *)(v0 + 16) + 16);
}

uint64_t FormatButtonNodeDataLayoutAttributes.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeDataLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = swift_allocObject();
  uint64_t v18 = *a3;
  uint64_t v19 = *a5;
  uint64_t v20 = *a8;
  char v21 = *((unsigned char *)a8 + 8);
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = v18;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = v19;
  *(unsigned char *)(result + 56) = a6;
  *(void *)(result + 64) = a7;
  *(void *)(result + 72) = v20;
  *(unsigned char *)(result + 80) = v21;
  *(void *)(result + 88) = a9;
  *(void *)(result + 96) = a10;
  return result;
}

uint64_t FormatButtonNodeDataLayoutAttributes.init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *a3;
  uint64_t v12 = *a5;
  uint64_t v13 = *a8;
  char v14 = *((unsigned char *)a8 + 8);
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = v12;
  *(unsigned char *)(v10 + 56) = a6;
  *(void *)(v10 + 64) = a7;
  *(void *)(v10 + 72) = v13;
  *(unsigned char *)(v10 + 80) = v14;
  *(void *)(v10 + 88) = a9;
  *(void *)(v10 + 96) = a10;
  return v10;
}

uint64_t FormatButtonNodeDataLayoutAttributes.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatButtonNodeDataLayoutAttributes.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatButtonNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t method lookup function for FormatButtonNodeDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatButtonNodeDataLayoutAttributes);
}

uint64_t dispatch thunk of FormatButtonNodeDataLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

BOOL static WebEmbedDataSourceServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WebEmbedDataSourceServiceError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t WebEmbedDataSourceServiceError.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t WebEmbedDataSourceServiceError.description.getter()
{
  if (*v0) {
    return 0xD000000000000052;
  }
  else {
    return 0xD00000000000006ELL;
  }
}

unint64_t sub_1C107EE98()
{
  unint64_t result = qword_1EA1AAA78;
  if (!qword_1EA1AAA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA78);
  }
  return result;
}

unint64_t sub_1C107EEEC()
{
  if (*v0) {
    return 0xD000000000000052;
  }
  else {
    return 0xD00000000000006ELL;
  }
}

unsigned char *storeEnumTagSinglePayload for WebEmbedDataSourceServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C107EFF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataSourceServiceError()
{
  return &type metadata for WebEmbedDataSourceServiceError;
}

uint64_t OpenChannelCommandContext.init(channel:destination:sourceArticle:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a2;
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v4;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t static ContextMenuItem.openChannel(channel:destination:feedDescriptor:sourceArticle:)(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151B03C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  char v12 = *a2;
  if (a3)
  {
    swift_unknownObjectRetain();
    if (objc_msgSend(a3, sel_feedType) != (id)11)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_unknownObjectRetain();
  }
  sub_1C107F538(v12);
  v19[0] = v14;
  if (qword_1EB87C910 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1EB86FF68;
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_1EB86FF58;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAC3E0], v8);
  v19[1] = a1;
  char v20 = v12;
  uint64_t v21 = a4;
  swift_allocObject();
  id v17 = v16;
  uint64_t v13 = sub_1C151A7FC();
  swift_unknownObjectRelease();
  return v13;
}

uint64_t static SharingActivity.openChannel(tag:destination:sourceArticle:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  if (!a1 || !swift_dynamicCastObjCProtocolConditional()) {
    return 0;
  }
  uint64_t v3 = qword_1EB87C910;
  swift_unknownObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151E5EC();
  sub_1C107F6E0();
  if (qword_1EB86FF68 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EB86FF58;
  sub_1C151B39C();
  swift_allocObject();
  uint64_t v5 = sub_1C151A9EC();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t static UIActivityType.openChannel.getter()
{
  return sub_1C151E5EC();
}

BOOL static OpenChannelDestination.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t OpenChannelDestination.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t OpenChannelDestination.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t OpenChannelCommandContext.channel.getter()
{
  return swift_unknownObjectRetain();
}

void OpenChannelCommandContext.destination.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t OpenChannelCommandContext.sourceArticle.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C107F538(char a1)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  if (a1)
  {
    uint64_t v10 = sub_1C1515B8C();

    return v10;
  }
  else
  {
    sub_1C1515B8C();

    sub_1BFFDEB20();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
    swift_getObjectType();
    uint64_t v5 = FCTagProviding.localizedTagType.getter();
    uint64_t v7 = v6;
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 64) = sub_1BFE9C558();
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = sub_1C151E66C();
    swift_bridgeObjectRelease();
    return v8;
  }
}

uint64_t sub_1C107F6E0()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

unint64_t sub_1C107F7EC()
{
  unint64_t result = qword_1EA1AAA88;
  if (!qword_1EA1AAA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OpenChannelDestination(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C107F90CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenChannelDestination()
{
  return &type metadata for OpenChannelDestination;
}

uint64_t destroy for OpenChannelCommandContext()
{
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t _s8NewsFeed25OpenChannelCommandContextVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OpenChannelCommandContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for OpenChannelCommandContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenChannelCommandContext(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenChannelCommandContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t FormatLineBreakStrategy.lineBreakStrategy.getter()
{
  return qword_1C15C3498[*v0];
}

unint64_t FormatLineBreakStrategy.rawValue.getter()
{
  uint64_t v1 = 0x74754F68737570;
  if (*v0 != 1) {
    uint64_t v1 = 0x647261646E617473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

NewsFeed::FormatLineBreakStrategy_optional __swiftcall FormatLineBreakStrategy.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C107FC04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1488EA0(*a1, *a2);
}

unint64_t sub_1C107FC14()
{
  unint64_t result = qword_1EA1AAA90;
  if (!qword_1EA1AAA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA90);
  }
  return result;
}

uint64_t sub_1C107FC68()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C107FD10()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C107FDA4()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatLineBreakStrategy_optional sub_1C107FE48(Swift::String *a1)
{
  return FormatLineBreakStrategy.init(rawValue:)(*a1);
}

void sub_1C107FE54(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0x80000001C1600D50;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x74754F68737570;
  if (v2 != 1)
  {
    uint64_t v5 = 0x647261646E617473;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = 0xD000000000000012;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1C107FEB8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C107FEE8();
  unint64_t result = sub_1C107FF3C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C107FEE8()
{
  unint64_t result = qword_1EA1AAA98;
  if (!qword_1EA1AAA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAA98);
  }
  return result;
}

unint64_t sub_1C107FF3C()
{
  unint64_t result = qword_1EB884AC8;
  if (!qword_1EB884AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884AC8);
  }
  return result;
}

unint64_t sub_1C107FF90(uint64_t a1)
{
  unint64_t result = sub_1C107FFB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C107FFB8()
{
  unint64_t result = qword_1EA1AAAA0;
  if (!qword_1EA1AAAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAAA0);
  }
  return result;
}

unint64_t sub_1C108000C(void *a1)
{
  a1[1] = sub_1BFDAD91C();
  a1[2] = sub_1C0908170();
  unint64_t result = sub_1C107FC14();
  a1[3] = result;
  return result;
}

uint64_t sub_1C1080044()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C10800A4(void *a1)
{
  return FormatLineBreakStrategy.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatLineBreakStrategy()
{
  return &type metadata for FormatLineBreakStrategy;
}

uint64_t sub_1C10800F4(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 4;
  }
}

unint64_t *sub_1C1080110(unint64_t *result, uint64_t a2)
{
  if (a2 < 4)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 4);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuGroupableData()
{
  return &type metadata for FormatMenuGroupableData;
}

uint64_t sub_1C108014C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = 0;
  sub_1C1080798();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v39 - v12;
  uint64_t v14 = *v3;
  switch((unint64_t)*v3 >> 61)
  {
    case 1uLL:
      uint64_t v24 = v14 & 0x1FFFFFFFFFFFFFFFLL;
      char v25 = *(uint64_t (**)(void, void, void))(v24 + 16);
      uint64_t v26 = *(void *)(v24 + 24);
      int v27 = *(unsigned __int8 *)(v24 + 32);
      uint64_t v28 = *(void **)(v24 + 40);
      int v29 = *(unsigned __int8 *)(v24 + 48);
      uint64_t v44 = *(void *)(v24 + 56);
      uint64_t v45 = v26;
      int v43 = *(unsigned __int8 *)(v24 + 64);
      if (v27 == 255)
      {
        sub_1C05DCF14((uint64_t)v25, v26, 0xFFu);
        sub_1C05DCF2C(v28, v29);
        swift_bridgeObjectRetain();
        uint64_t v41 = (uint64_t (*)(void, void, void))0xE000000000000000;
        *(void *)uint64_t v42 = 0;
      }
      else
      {
        sub_1C05DCF14((uint64_t)v25, v26, v27);
        sub_1C05DCF2C(v28, v29);
        swift_bridgeObjectRetain();
        sub_1C05DCF14((uint64_t)v25, v26, v27);
        if (v27)
        {
          uint64_t v32 = sub_1C0D48D34(a1, a2);
          uint64_t v41 = (uint64_t (*)(void, void, void))v33;
          *(void *)uint64_t v42 = v32;
          sub_1C05DCEFC((uint64_t)v25, v26, v27);
        }
        else
        {
          uint64_t v41 = (uint64_t (*)(void, void, void))v26;
          *(void *)uint64_t v42 = v25;
        }
      }
      unsigned __int8 v46 = v25;
      if (v29 == 255)
      {
        id v40 = 0;
      }
      else if (v29)
      {
        sub_1C01DCFFC(v28, 1);
        id v40 = sub_1C0D489E0(a1, a2);
        sub_1C05DCEE4(v28, v29);
      }
      else
      {
        sub_1C01DCFFC(v28, 0);
        id v40 = v28;
      }
      sub_1BFC39268(0, &qword_1EA1A2120);
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v34 = swift_bridgeObjectRetain();
      sub_1C10808B4(v34, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      uint64_t v7 = sub_1C151F8BC();
      sub_1C05DCEFC((uint64_t)v46, v45, v27);
      sub_1C05DCEE4(v28, v29);
      swift_bridgeObjectRelease();
      return v7;
    case 2uLL:
      swift_retain();
      sub_1C0D48FEC(a1, a2, &v48);
      uint64_t v47 = v48;
      uint64_t v7 = sub_1C108014C(a1, a2, a3);
      swift_release();
      swift_release();
      return v7;
    case 3uLL:
      uint64_t v30 = swift_projectBox();
      sub_1C10807F0(v30, (uint64_t)v13);
      sub_1C10807F0((uint64_t)v13, (uint64_t)v10);
      uint64_t v31 = type metadata accessor for FormatSharedItemData();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v10, 1, v31) == 1)
      {
        sub_1C1080854((uint64_t)v13, (uint64_t (*)(void))sub_1C1080798);
        sub_1C1080854((uint64_t)v10, (uint64_t (*)(void))sub_1C1080798);
        return 0;
      }
      uint64_t v7 = sub_1C01EE05C();
      sub_1C1080854((uint64_t)v13, (uint64_t (*)(void))sub_1C1080798);
      sub_1C1080854((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatSharedItemData);
      return v7;
    case 4uLL:
      return v7;
    default:
      uint64_t v15 = *(void *)(v14 + 56);
      if (!v15) {
        return 0;
      }
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v16 = *(uint64_t (**)(void, void, void))(v14 + 24);
      int v18 = *(unsigned __int8 *)(v14 + 32);
      uint64_t v19 = *(void **)(v14 + 40);
      int v20 = *(unsigned __int8 *)(v14 + 48);
      unsigned __int8 v46 = *(uint64_t (**)(void, void, void))(v15 + 40);
      sub_1C04B5340(v17, (uint64_t)v16, v18);
      sub_1C01DCFFC(v19, v20);
      swift_retain_n();
      if (v46(a1, a2, a3))
      {
        uint64_t v44 = a3;
        if (v18)
        {
          swift_retain();
          uint64_t v21 = sub_1C0D48D34(a1, a2);
          unsigned __int8 v46 = v22;
          sub_1C04B5360(v17, (uint64_t)v16, 1);
          uint64_t v45 = v21;
          if ((v20 & 1) == 0)
          {
LABEL_6:
            id v23 = v19;
LABEL_27:
            v39[1] = sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
            int v43 = v20;
            v42[0] = v18;
            uint64_t v41 = v16;
            id v40 = v23;
            swift_bridgeObjectRetain();
            sub_1C151E5EC();
            swift_bridgeObjectRelease();
            uint64_t v36 = (void *)swift_allocObject();
            _OWORD v36[2] = v15;
            v36[3] = a1;
            uint64_t v37 = v44;
            v36[4] = a2;
            v36[5] = v37;
            uint64_t v38 = v46;
            v36[6] = v45;
            v36[7] = v38;
            swift_retain();
            swift_unknownObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v7 = sub_1C151FBBC();
            swift_release();

            sub_1C04B5360(v17, (uint64_t)v41, v42[0]);
            sub_1C01DD018(v19, v43);
            swift_release();
            return v7;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          unsigned __int8 v46 = v16;
          uint64_t v45 = v17;
          if ((v20 & 1) == 0) {
            goto LABEL_6;
          }
        }
        swift_retain();
        id v23 = sub_1C0D489E0(a1, a2);
        sub_1C01DD018(v19, 1);
        goto LABEL_27;
      }
      swift_release();
      sub_1C04B5360(v17, (uint64_t)v16, v18);
      sub_1C01DD018(v19, v20);
      swift_release();
      return 0;
  }
}

void sub_1C1080798()
{
  if (!qword_1EB860508)
  {
    type metadata accessor for FormatSharedItemData();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860508);
    }
  }
}

uint64_t sub_1C10807F0(uint64_t a1, uint64_t a2)
{
  sub_1C1080798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1080854(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C10808B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v65 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v56 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v51 = v5;
    do
    {
      uint64_t v8 = v56 + 48 * v7;
      uint64_t v9 = *(void *)(v8 + 40);
      if (v9)
      {
        uint64_t v11 = *(void **)v8;
        uint64_t v10 = *(void *)(v8 + 8);
        char v12 = *(unsigned char *)(v8 + 16);
        uint64_t v13 = *(void **)(v8 + 24);
        char v14 = *(unsigned char *)(v8 + 32);
        uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
        sub_1C04B5340(*(void *)v8, v10, v12);
        sub_1C01DCFFC(v13, v14);
        swift_retain_n();
        if (v15(a2, a3, a4))
        {
          uint64_t v16 = v13;
          uint64_t v57 = v10;
          uint64_t v50 = v7;
          long long v54 = v13;
          char v53 = v14;
          uint64_t v52 = (uint64_t)v11;
          if (v12)
          {
            uint64_t v17 = v11[3];
            uint64_t v18 = *(void *)(v17 + 16);
            if (v18)
            {
              char v44 = v12;
              uint64_t v46 = v9;
              uint64_t v58 = v11[2];
              sub_1C04B5340((uint64_t)v11, v57, 1);
              swift_bridgeObjectRetain();
              uint64_t v19 = (void *)(v17 + 64);
              while (1)
              {
                uint64_t v20 = *(v19 - 4);
                uint64_t v21 = *(v19 - 3);
                char v22 = *((unsigned char *)v19 - 16);
                id v23 = (void *)*(v19 - 1);
                uint64_t v24 = *v19;
                char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v58 + 104);
                uint64_t v62 = v20;
                uint64_t v63 = v21;
                char v64 = v22;
                sub_1BFF5B7E0(v20, v21, v22);
                swift_bridgeObjectRetain();
                sub_1BFF5B7E0(v20, v21, v22);
                char v26 = v25(a2, a3, &v62);
                sub_1BFF5B7CC(v20, v21, v22);
                if (v26) {
                  break;
                }
                v19 += 5;
                sub_1BFF5B7CC(v20, v21, v22);
                swift_bridgeObjectRelease();
                if (!--v18)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v9 = v46;
                  int v27 = v54;
                  char v14 = v53;
                  uint64_t v11 = (void *)v52;
                  uint64_t v28 = v57;
                  char v12 = v44;
                  goto LABEL_15;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_1BFF5B7CC(v20, v21, v22);
              swift_bridgeObjectRelease();
              sub_1C04B5360(v52, v57, 1);
              uint64_t v9 = v46;
              int v27 = v54;
              char v14 = v53;
              char v12 = v44;
              int v29 = v23;
            }
            else
            {
              swift_retain();
              uint64_t v28 = v57;
              int v27 = v13;
LABEL_15:
              int v29 = (void *)v11[4];
              uint64_t v24 = v11[5];
              swift_bridgeObjectRetain();
              sub_1C04B5360((uint64_t)v11, v28, 1);
            }
          }
          else
          {
            uint64_t v24 = v10;
            swift_bridgeObjectRetain();
            int v29 = v11;
            int v27 = v16;
          }
          uint64_t v59 = v24;
          uint64_t v49 = v29;
          if (v14)
          {
            uint64_t v30 = *(void *)(*((void *)v27 + 3) + 16);
            if (v30)
            {
              char v45 = v12;
              uint64_t v47 = v9;
              uint64_t v31 = *((void *)v27 + 2);
              uint64_t v32 = *((void *)v27 + 3);
              sub_1C01DCFFC(v27, 1);
              swift_bridgeObjectRetain();
              uint64_t v33 = (void **)(v32 + 56);
              while (1)
              {
                uint64_t v34 = (uint64_t)*(v33 - 3);
                uint64_t v35 = (uint64_t)*(v33 - 2);
                char v36 = *((unsigned char *)v33 - 8);
                uint64_t v37 = *v33;
                uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v31 + 104);
                uint64_t v62 = v34;
                uint64_t v63 = v35;
                char v64 = v36;
                sub_1BFF5B7E0(v34, v35, v36);
                id v39 = v37;
                sub_1BFF5B7E0(v34, v35, v36);
                char v40 = v38(a2, a3, &v62);
                sub_1BFF5B7CC(v34, v35, v36);
                if (v40) {
                  break;
                }
                sub_1BFF5B7CC(v34, v35, v36);

                v33 += 4;
                if (!--v30)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v9 = v47;
                  int v27 = v54;
                  char v12 = v45;
                  goto LABEL_25;
                }
              }
              swift_bridgeObjectRelease();
              id v41 = v39;
              sub_1BFF5B7CC(v34, v35, v36);

              sub_1C01DD018(v54, 1);
              uint64_t v9 = v47;
              char v12 = v45;
            }
            else
            {
              swift_retain();
LABEL_25:
              id v41 = *((id *)v27 + 4);
              sub_1C01DD018(v27, 1);
            }
          }
          else
          {
            id v41 = v27;
          }
          sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
          id v48 = v41;
          swift_bridgeObjectRetain();
          sub_1C151E5EC();
          swift_bridgeObjectRelease();
          uint64_t v42 = (void *)swift_allocObject();
          v42[2] = v9;
          _DWORD v42[3] = a2;
          v42[4] = a3;
          v42[5] = a4;
          v42[6] = v49;
          v42[7] = v59;
          swift_retain();
          swift_unknownObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C151FBBC();
          swift_release();

          sub_1C04B5360(v52, v57, v12);
          sub_1C01DD018(v54, v53);
          uint64_t v43 = swift_release();
          MEMORY[0x1C18C66D0](v43);
          if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          uint64_t v7 = v50;
          uint64_t v5 = v51;
        }
        else
        {
          swift_release();
          sub_1C04B5360((uint64_t)v11, v10, v12);
          sub_1C01DD018(v13, v14);
          swift_release();
          uint64_t v5 = v51;
        }
      }
      ++v7;
    }
    while (v7 != v5);
    swift_bridgeObjectRelease();
    return v65;
  }
  return result;
}

uint64_t sub_1C1080E48(uint64_t a1)
{
  return sub_1C0E0794C(a1, v1[2], v1[3], v1[4], v1[5]);
}

void *sub_1C1080E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151811C();
  LOBYTE(a1) = sub_1BFF896B4(v6, v7, a1);
  swift_bridgeObjectRelease();
  if (a1)
  {
    uint64_t v8 = sub_1C151811C();
    uint64_t v10 = v9;
    sub_1C1080FFC();
    swift_allocError();
    *uint64_t v11 = v8;
    v11[1] = v10;
  }
  else
  {
    uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 88))(&v14, a2, a3);
    if ((v14 & 0xFE) == 2) {
      return result;
    }
    sub_1C1080FFC();
    swift_allocError();
    *uint64_t v13 = 0;
    v13[1] = 0;
  }
  return (void *)swift_willThrow();
}

uint64_t FeedGroupType.kindIdentifier.getter()
{
  return 0;
}

void sub_1C1080F74(unsigned char *a1@<X8>)
{
}

void FeedGroupType.repooling.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t dispatch thunk of FeedGroupType.kindIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedGroupType.paidVisibility.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedGroupType.repooling.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FeedGroupType.scoringContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeedGroupType.tag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

unint64_t sub_1C1080FFC()
{
  unint64_t result = qword_1EA1AAAA8;
  if (!qword_1EA1AAAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAAA8);
  }
  return result;
}

uint64_t sub_1C1081050(void *a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed23FormatDisplayLinkObject_storage);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v24 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  int64_t v25 = (unint64_t)(v5 + 63) >> 6;
  int64_t v23 = v25 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_10;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v15 = v14 | (v9 << 6);
  while (2)
  {
    uint64_t v16 = *(void *)(v4 + 56);
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v15;
    uint64_t v18 = *(void *)(v17 + 8);
    char v19 = *(unsigned char *)(v17 + 16);
    *(void *)&v26[0] = *(void *)v17;
    *((void *)&v26[0] + 1) = v18;
    LOBYTE(v26[1]) = v19;
    sub_1BFF6A008(v16 + 32 * v15, (uint64_t)&v26[1] + 8);
    sub_1C09C8BD8();
    while (1)
    {
      sub_1C1081874((uint64_t)v26, (uint64_t)&v28);
      if (!v31) {
        return swift_release();
      }
      int v10 = v29;
      sub_1BFF993A8(&v30, v26);
      __swift_project_boxed_opaque_existential_1(v26, *((uint64_t *)&v26[1] + 1));
      uint64_t v11 = sub_1C1520A7C();
      char v12 = (void *)sub_1C151E5EC();
      uint64_t v13 = &selRef_setValue_forKeyPath_;
      if (!v10) {
        uint64_t v13 = &selRef_setValue_forKey_;
      }
      objc_msgSend(a1, *v13, v11, v12, v23);
      swift_unknownObjectRelease();

      sub_1C02F6038();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      if (v7) {
        goto LABEL_8;
      }
LABEL_10:
      int64_t v20 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v20 < v25)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v20);
        if (v21) {
          goto LABEL_13;
        }
        int64_t v22 = v9 + 2;
        ++v9;
        if (v20 + 1 < v25)
        {
          unint64_t v21 = *(void *)(v24 + 8 * v22);
          if (v21) {
            goto LABEL_16;
          }
          int64_t v9 = v20 + 1;
          if (v20 + 2 < v25)
          {
            unint64_t v21 = *(void *)(v24 + 8 * (v20 + 2));
            if (v21)
            {
              v20 += 2;
              goto LABEL_13;
            }
            int64_t v22 = v20 + 3;
            int64_t v9 = v20 + 2;
            if (v20 + 3 < v25) {
              break;
            }
          }
        }
      }
LABEL_27:
      unint64_t v7 = 0;
      uint64_t v27 = 0;
      memset(v26, 0, sizeof(v26));
    }
    unint64_t v21 = *(void *)(v24 + 8 * v22);
    if (v21)
    {
LABEL_16:
      int64_t v20 = v22;
LABEL_13:
      unint64_t v7 = (v21 - 1) & v21;
      unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
      int64_t v9 = v20;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v25)
    {
      int64_t v9 = v23;
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_13;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C108131C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BFC816B4(a1, (uint64_t)&v8);
  if (v9)
  {
    sub_1BFF993A8(&v8, v10);
    sub_1BFF6A008((uint64_t)v10, (uint64_t)&v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C02E8B20((uint64_t)&v8, a2, a3, a4);
    swift_endAccess();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)&v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C03544BC(a2, a3, a4, v10);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_1BFEFE4A0((uint64_t)v10);
  }
}

uint64_t sub_1C1081430(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  if (a3)
  {
    id v8 = a4;
    id v9 = a1;
    swift_unknownObjectRetain();
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
    id v10 = a4;
    id v11 = a1;
  }
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  sub_1C108131C((uint64_t)v16, v12, v14, a5);
  swift_bridgeObjectRelease();
  return sub_1BFEFE4A0((uint64_t)v16);
}

uint64_t sub_1C10814F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  id v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC8NewsFeed23FormatDisplayLinkObject_storage);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1C10528C0(a1, a2, a3);
    if (v12)
    {
      sub_1BFF6A008(*(void *)(v10 + 56) + 32 * v11, (uint64_t)a4);
    }
    else
    {
      *a4 = 0u;
      a4[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a4 = 0u;
    a4[1] = 0u;
  }
  return swift_endAccess();
}

id sub_1C10815BC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;
  id v9 = a1;
  sub_1C10814F0(v6, v8, a4, &v18);

  swift_bridgeObjectRelease();
  uint64_t v10 = v19;
  if (v19)
  {
    unint64_t v11 = __swift_project_boxed_opaque_existential_1(&v18, v19);
    uint64_t v12 = *(void *)(v10 - 8);
    __n128 v13 = MEMORY[0x1F4188790](v11);
    unint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v12 + 16))(v15, v13);
    uint64_t v16 = (void *)sub_1C1520A7C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  }
  else
  {
    uint64_t v16 = 0;
  }
  return v16;
}

uint64_t sub_1C1081724(uint64_t a1, uint64_t a2)
{
  return sub_1C1081830(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t type metadata accessor for FormatDisplayLinkObject()
{
  return self;
}

ValueMetadata *type metadata accessor for FormatDisplayLinkObject.Key()
{
  return &type metadata for FormatDisplayLinkObject.Key;
}

unint64_t sub_1C10817DC()
{
  unint64_t result = qword_1EB867428;
  if (!qword_1EB867428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867428);
  }
  return result;
}

uint64_t sub_1C1081830(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C1081874(uint64_t a1, uint64_t a2)
{
  sub_1C10818D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C10818D8()
{
  if (!qword_1EB867418)
  {
    sub_1C1081930();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB867418);
    }
  }
}

void sub_1C1081930()
{
  if (!qword_1EB867410)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB867410);
    }
  }
}

uint64_t UIImageRenderingMode.description.getter(uint64_t a1)
{
  uint64_t v1 = 0x724F737961776C61;
  uint64_t v2 = 0x6E776F6E6B6E75;
  if (a1 == 2) {
    uint64_t v2 = 0x6554737961776C61;
  }
  if (a1 != 1) {
    uint64_t v1 = v2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0x6974616D6F747561;
  }
}

uint64_t FormatMicaNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatMicaNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatMicaNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatMicaNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatMicaNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 112);
}

unint64_t FormatMicaNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 120);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatMicaNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatMicaNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatMicaNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 152);
  *(void *)a1 = *(void *)(v1 + 144);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatMicaNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t result = swift_allocObject();
  uint64_t v27 = *a8;
  uint64_t v28 = *a14;
  uint64_t v29 = *a17;
  char v30 = *((unsigned char *)a17 + 8);
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  *(double *)(result + 64) = a9;
  *(double *)(result + 72) = a10;
  *(double *)(result + 80) = a11;
  *(double *)(result + 88) = a12;
  *(void *)(result + 96) = a7;
  *(void *)(result + 104) = v27;
  *(void *)(result + 112) = a13;
  *(void *)(result + 120) = v28;
  *(unsigned char *)(result + 128) = a15;
  *(void *)(result + 136) = a16;
  *(void *)(result + 144) = v29;
  *(unsigned char *)(result + 152) = v30;
  *(void *)(result + 160) = MEMORY[0x1E4FBC870];
  return result;
}

uint64_t FormatMicaNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v18 = *a8;
  uint64_t v19 = *a14;
  uint64_t v20 = *a17;
  char v21 = *((unsigned char *)a17 + 8);
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(void *)(v17 + 96) = a7;
  *(void *)(v17 + 104) = v18;
  *(void *)(v17 + 112) = a13;
  *(void *)(v17 + 120) = v19;
  *(unsigned char *)(v17 + 128) = a15;
  *(void *)(v17 + 136) = a16;
  *(void *)(v17 + 144) = v20;
  *(unsigned char *)(v17 + 152) = v21;
  *(void *)(v17 + 160) = MEMORY[0x1E4FBC870];
  return v17;
}

unint64_t sub_1C1081C74(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x656C797473;
      break;
    case 5:
      unint64_t result = 0x676E697A69736572;
      break;
    case 6:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 7:
      unint64_t result = 0x696C696269736976;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1081DF8()
{
  return sub_1C1081C74(*v0);
}

uint64_t sub_1C1081E00(uint64_t a1)
{
  unint64_t v2 = sub_1C1082400();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1081E3C(uint64_t a1)
{
  unint64_t v2 = sub_1C1082400();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatMicaNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatMicaNodeLayoutAttributes.__deallocating_deinit()
{
  FormatMicaNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatMicaNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1082BE4(0, &qword_1EA1AAAB8, (uint64_t (*)(void))sub_1C1082400, (uint64_t)&type metadata for FormatMicaNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1082400();
  sub_1C1520F0C();
  LOBYTE(v13[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    char v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C5C8(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 96);
    char v14 = 4;
    type metadata accessor for FormatMicaNodeStyle();
    sub_1BFE4C5C8(&qword_1EA1A0A98, 255, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle);
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 104);
    char v14 = 5;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v13[0]) = 6;
    sub_1C15207FC();
    *(void *)&v13[0] = *(void *)(v3 + 120);
    char v14 = 7;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v13[0]) = 8;
    sub_1C15207DC();
    *(void *)&v13[0] = *(void *)(v3 + 136);
    char v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C5C8(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    char v11 = *(unsigned char *)(v3 + 152);
    *(void *)&v13[0] = *(void *)(v3 + 144);
    BYTE8(v13[0]) = v11;
    char v14 = 10;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 160);
    char v14 = 11;
    sub_1C1082BE4(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C1082C4C(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C1082400()
{
  unint64_t result = qword_1EA1AAAC0;
  if (!qword_1EA1AAAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAAC0);
  }
  return result;
}

uint64_t FormatMicaNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatMicaNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatMicaNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C1082BE4(0, &qword_1EA1AAAC8, (uint64_t (*)(void))sub_1C1082400, (uint64_t)&type metadata for FormatMicaNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1082400();
  uint64_t v17 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v15;
    LOBYTE(v18) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v18) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v18) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v20 = 3;
    sub_1BFE4C5C8(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v19;
    *(_OWORD *)(v1 + 64) = v18;
    *(_OWORD *)(v1 + 80) = v12;
    type metadata accessor for FormatMicaNodeStyle();
    char v20 = 4;
    sub_1BFE4C5C8(&qword_1EA19DF60, 255, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 96) = v18;
    char v20 = 5;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 104) = v18;
    LOBYTE(v18) = 6;
    *(void *)(v1 + 112) = sub_1C15206DC();
    char v20 = 7;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 120) = v18;
    LOBYTE(v18) = 8;
    *(unsigned char *)(v1 + 128) = sub_1C15206AC() & 1;
    type metadata accessor for FormatContextLayoutOptions();
    char v20 = 9;
    sub_1BFE4C5C8(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 136) = v18;
    char v20 = 10;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v13 = BYTE8(v18);
    *(void *)(v1 + 144) = v18;
    *(unsigned char *)(v1 + 152) = v13;
    sub_1C1082BE4(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v20 = 11;
    sub_1C1082C4C(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v16);
    *(void *)(v1 + 160) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C1082BE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C1082C4C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1082BE4(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1082CF0(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C5C8(&qword_1EA1AAAD0, a2, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatMicaNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C1082D5C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C5C8(&qword_1EA1A9358, a2, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
}

uint64_t sub_1C1082DA4(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C5C8(&qword_1EA1A93B0, a2, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
}

uint64_t sub_1C1082DEC(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C5C8(&qword_1EA1AAAD8, a2, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
}

uint64_t sub_1C1082E34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatMicaNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C1082E8C(void *a1)
{
  return FormatMicaNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C1082EB0(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C5C8(&qword_1EA1A9400, a2, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatMicaNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatMicaNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatMicaNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatMicaNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for FormatMicaNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1083094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatMicaNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C10830D0()
{
  unint64_t result = qword_1EA1AAAE0;
  if (!qword_1EA1AAAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAAE0);
  }
  return result;
}

unint64_t sub_1C1083128()
{
  unint64_t result = qword_1EA1AAAE8;
  if (!qword_1EA1AAAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAAE8);
  }
  return result;
}

unint64_t sub_1C1083180()
{
  unint64_t result = qword_1EA1AAAF0[0];
  if (!qword_1EA1AAAF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1AAAF0);
  }
  return result;
}

uint64_t FeedItemFilterWrapperMatcher.init(matcher:translator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for FeedItemFilterWrapperMatcher();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 44));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for FeedItemFilterWrapperMatcher()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FeedItemFilterWrapperMatcher.createApplicator()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = *(void *)(v8 + 24);
  uint64_t v9 = *(void *)(v8 + 32);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, __n128))(v9 + 24))(&v15, v10, v9, v7);
  long long v14 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = *(void *)(a1 + 16);
  *(void *)(v12 + 24) = v10;
  *(void *)(v12 + 32) = v9;
  *(_OWORD *)(v12 + 40) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1C11A85EC((uint64_t)sub_1C108365C, v12, a2);
}

uint64_t sub_1C1083400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v11 = (char *)v15 - v10;
  v15[0] = a2;
  v15[1] = a3;
  uint64_t v12 = type metadata accessor for FeedItemFilterWrapperMatcher();
  (*(void (**)(uint64_t))(a4 + *(int *)(v12 + 44)))(a1);
  type metadata accessor for FeedItemFilterMatcherApplicator();
  char v13 = FeedItemFilterMatcherApplicator.matches(_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  return v13 & 1;
}

uint64_t sub_1C108355C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FeedItemFilterWrapperMatcher() - 8) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C108365C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FeedItemFilterWrapperMatcher() - 8);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1C1083400(a1, v4, v5, v6);
}

uint64_t FeedItemFilterWrapperMatcher.debugName(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(uint64_t, __n128))(v3 + *(int *)(a2 + 44)))(a1, v10);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 32))(v12, v7, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
  return v13;
}

uint64_t FeedItemFilterWrapperMatcher.description.getter()
{
  return sub_1C152088C();
}

uint64_t sub_1C1083854(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1083894()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C1083930(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    __n128 v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C1083A28(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1C1083A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_1C1083B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C1083BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C1083C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C1083CA4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C1083DF0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C1083E04(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C1083FE4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          long long v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          void *v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

id CoverViewActionButton.onTap.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap);
}

id CoverViewActionButton.onMenuPresentation.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation);
}

uint64_t type metadata accessor for CoverViewActionButton()
{
  return self;
}

void sub_1C10840E4(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for CoverViewActionButton();
  objc_msgSendSuper2(&v12, sel_setHighlighted_, a1 & 1);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  id v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState], sel_colorWithAlphaComponent_, 0.85);
  unsigned int v5 = v4;
  if ((objc_msgSend(v1, sel_isHighlighted) & 1) == 0) {
    unsigned int v5 = *(void **)&v1[v3];
  }
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v5;
  v11[4] = sub_1C1084534;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1BFC9FC68;
  v11[3] = &block_descriptor_82;
  unsigned int v8 = _Block_copy(v11);
  id v9 = v5;
  unint64_t v10 = v1;
  swift_release();
  objc_msgSend(v6, sel_animateWithDuration_animations_, v8, 0.2);
  _Block_release(v8);
}

char *sub_1C1084258(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap;
  sub_1BFD22278();
  unsigned int v11 = v10;
  id v12 = objc_allocWithZone(v10);
  unsigned int v13 = v4;
  *(void *)&v4[v9] = objc_msgSend(v12, sel_init);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation;
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(v11), sel_init);
  int v15 = &v13[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_touchInsets];
  __asm { FMOV            V0.2D, #-30.0 }
  *(_OWORD *)int v15 = _Q0;
  *((_OWORD *)v15 + 1) = _Q0;
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  *(void *)&v13[v21] = objc_msgSend(self, sel_blackColor);

  v30.receiver = v13;
  v30.super_class = (Class)type metadata accessor for CoverViewActionButton();
  int64_t v22 = (char *)objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  int64_t v23 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap];
  uint64_t v24 = v22;
  id v25 = v23;
  sub_1C151C87C();

  char v26 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation];
  uint64_t v27 = v24;
  id v28 = v26;
  sub_1C151C87C();

  return v27;
}

id CoverViewActionButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1C10844F4()
{
  return swift_deallocObject();
}

id sub_1C1084534()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setTintColor_, *(void *)(v0 + 24));
}

id CoverViewActionButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverViewActionButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _s8NewsFeed21CoverViewActionButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap;
  sub_1BFD22278();
  id v3 = v2;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  unsigned int v5 = &v0[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_touchInsets];
  __asm { FMOV            V0.2D, #-30.0 }
  *(_OWORD *)unsigned int v5 = _Q0;
  *((_OWORD *)v5 + 1) = _Q0;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  *(void *)&v0[v11] = objc_msgSend(self, sel_blackColor);

  sub_1C152040C();
  __break(1u);
}

uint64_t method lookup function for CoverViewActionButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoverViewActionButton);
}

uint64_t FormatSourceItemContextMenuData.tipManager.getter()
{
  return swift_retain();
}

uint64_t FormatSourceItemContextMenuData.sourceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatSourceItemContextMenuData.sourceViewController.getter()
{
}

void FormatSourceItemContextMenuData.sourceViewController.setter(void *a1)
{
  swift_unknownObjectWeakAssign();
}

void (*FormatSourceItemContextMenuData.sourceViewController.modify(void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = MEMORY[0x1C18C9C60](v1 + 24);
  return sub_1C10847A4;
}

void sub_1C10847A4(id *a1)
{
  id v1 = *a1;
  swift_unknownObjectWeakAssign();
}

void FormatSourceItemContextMenuData.sourceItem.getter()
{
}

void FormatSourceItemContextMenuData.sourceItem.setter(void *a1)
{
  swift_unknownObjectWeakAssign();
}

void (*FormatSourceItemContextMenuData.sourceItem.modify(void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = MEMORY[0x1C18C9C60](v1 + 32);
  return sub_1C1084878;
}

void sub_1C1084878(id *a1)
{
  id v1 = *a1;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1C10848B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1084B70(a1, v5);
  uint64_t v3 = MEMORY[0x1C18C9C60](&v6);
  uint64_t result = sub_1C0E694B0((uint64_t)v5);
  *a2 = v3;
  return result;
}

uint64_t sub_1C1084904()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C1084914@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1084B70(a1, v5);
  uint64_t v3 = MEMORY[0x1C18C9C60](&v6);
  uint64_t result = sub_1C0E694B0((uint64_t)v5);
  *a2 = v3;
  return result;
}

uint64_t sub_1C1084960()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t destroy for FormatSourceItemContextMenuData()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return swift_unknownObjectWeakDestroy();
}

void *initializeWithCopy for FormatSourceItemContextMenuData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  swift_unknownObjectWeakCopyInit();
  return a1;
}

void *assignWithCopy for FormatSourceItemContextMenuData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

uint64_t initializeWithTake for FormatSourceItemContextMenuData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit();
  swift_unknownObjectWeakTakeInit();
  return a1;
}

void *assignWithTake for FormatSourceItemContextMenuData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

ValueMetadata *type metadata accessor for FormatSourceItemContextMenuData()
{
  return &type metadata for FormatSourceItemContextMenuData;
}

void *sub_1C1084B70(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1C1084BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void *)v16;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a6;
  *(void *)(v16 + 48) = a4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v17 + 88) - 8) + 32))(v16 + *(void *)(v17 + 168), a5);
  *(unsigned char *)(v16 + 56) = a7;
  *(void *)(v16 + 64) = a8;
  return v16;
}

uint64_t *sub_1C1084C8C()
{
  uint64_t v1 = *v0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 168));
  return v0;
}

uint64_t sub_1C1084D2C()
{
  sub_1C1084C8C();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1084D84()
{
  return sub_1BFC8BD54();
}

uint64_t sub_1C1084DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = *(void *)v10;
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a1;
  *(void *)(v10 + 32) = a2;
  *(void *)(v10 + 40) = 0;
  *(void *)(v10 + 48) = a4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v11 + 88) - 8) + 16))(v10 + *(void *)(v11 + 168), a5);
  *(unsigned char *)(v10 + 56) = 0;
  *(void *)(v10 + 64) = MEMORY[0x1E4FBC870];
  return v10;
}

unsigned char *storeEnumTagSinglePayload for WebEmbedDatastoreError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1084F44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDatastoreError()
{
  return &type metadata for WebEmbedDatastoreError;
}

unint64_t sub_1C1084F80()
{
  unint64_t result = qword_1EA1AAB98;
  if (!qword_1EA1AAB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAB98);
  }
  return result;
}

uint64_t static FormatShareAttributionNodeBinding.== infix(_:_:)()
{
  return 1;
}

unint64_t sub_1C1084FDC(uint64_t a1)
{
  unint64_t result = sub_1C1085004();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1085004()
{
  unint64_t result = qword_1EA1AABA0;
  if (!qword_1EA1AABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABA0);
  }
  return result;
}

unint64_t sub_1C1085058(void *a1)
{
  a1[1] = sub_1BFC89094();
  a1[2] = sub_1C08FF21C();
  unint64_t result = sub_1C1085090();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1085090()
{
  unint64_t result = qword_1EA1AABA8;
  if (!qword_1EA1AABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABA8);
  }
  return result;
}

uint64_t sub_1C10850E4(void *a1)
{
  return FormatShareAttributionNodeBinding.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatShareAttributionNodeBinding()
{
  return &type metadata for FormatShareAttributionNodeBinding;
}

void *FormatCornerRadius.from(bounds:)@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double v7 = *(double *)v5;
  int v8 = *(char *)(v5 + 16);
  if (v8 < 0)
  {
    double Height = CGRectGetHeight(*(CGRect *)&a2);
    v17.origin.x = a2;
    v17.origin.y = a3;
    v17.size.width = a4;
    v17.size.height = a5;
    double Width = CGRectGetWidth(v17);
    if (Width >= Height) {
      double Width = Height;
    }
    double v9 = Width * 0.5;
    unint64_t result = &unk_1F1B68D88;
    LOBYTE(v8) = LOBYTE(v7);
  }
  else
  {
    double v9 = *(double *)v5;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  *(double *)a1 = v9;
  *(void *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  return result;
}

double FormatCornerRadius.Value.radius.getter()
{
  return *(double *)v0;
}

uint64_t FormatCornerRadius.Value.uiRectCorner.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = (char *)(v1 + 32);
  do
  {
    uint64_t v5 = *v4++;
    uint64_t v6 = qword_1C15C4058[v5];
    if ((v6 & ~result) == 0) {
      uint64_t v6 = 0;
    }
    result |= v6;
    --v2;
  }
  while (v2);
  return result;
}

uint64_t FormatCorner.rawValue.getter()
{
  uint64_t result = 7105633;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7466654C706F74;
      break;
    case 2:
      uint64_t result = 0x7468676952706F74;
      break;
    case 3:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 4:
      uint64_t result = 0x69526D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatCornerRadius.Value.init(radius:corners:continuous:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = result;
  *(unsigned char *)(a3 + 16) = a2;
  return result;
}

uint64_t FormatCornerRadius.Value.corners.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCornerRadius.Value.continuous.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

BOOL static FormatCornerRadius.RoundedValue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatCornerRadius.description.getter()
{
  if (*(char *)(v0 + 16) < 0) {
    return 0x6465646E756F72;
  }
  else {
    return FormatCornerRadius.Value.description.getter();
  }
}

void FormatCornerRadius.Value.radius.setter(double a1)
{
  double *v1 = a1;
}

uint64_t (*FormatCornerRadius.Value.radius.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCornerRadius.Value.corners.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FormatCornerRadius.Value.corners.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCornerRadius.Value.continuous.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*FormatCornerRadius.Value.continuous.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCornerRadius.RoundedValue.continuous.getter()
{
  return *v0;
}

void static FormatCornerRadius.RoundedValue.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FormatCorner.description.getter()
{
  uint64_t result = 7105633;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7466654C706F74;
      break;
    case 2:
      uint64_t result = 0x7468676952706F74;
      break;
    case 3:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 4:
      uint64_t result = 0x69526D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C10854F4(unsigned __int8 *a1, char *a2)
{
  return sub_1C148F4D0(*a1, *a2);
}

uint64_t sub_1C1085500()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10855FC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10856E0()
{
  return sub_1C1520E0C();
}

void sub_1C10857D8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7105633;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x7466654C706F74;
      goto LABEL_3;
    case 2:
      *a1 = 0x7468676952706F74;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x654C6D6F74746F62;
      a1[1] = 0xEA00000000007466;
      break;
    case 4:
      *a1 = 0x69526D6F74746F62;
      a1[1] = 0xEB00000000746867;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(char *)(a1 + 16);
  uint64_t v5 = *(uint64_t *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(char *)(a2 + 16);
  if (v4 < 0)
  {
    if (v7 < 0)
    {
      sub_1BFF04738(*(void *)a1, v2, v4);
      sub_1BFF04738(v5, v6, v7);
      char v9 = ((v3 & 1) == 0) ^ v5;
      return v9 & 1;
    }
    goto LABEL_11;
  }
  if (v7 < 0)
  {
    swift_bridgeObjectRetain();
LABEL_11:
    sub_1BFF046A0(v5, v6, v7);
    sub_1BFF04738(v3, v2, v4);
    sub_1BFF04738(v5, v6, v7);
LABEL_12:
    char v9 = 0;
    return v9 & 1;
  }
  if (*(double *)&v3 != *(double *)&v5)
  {
    sub_1BFF046A0(*(void *)a1, v2, v4);
    goto LABEL_11;
  }
  sub_1BFF046A0(*(void *)a2, *(void *)(a2 + 8), v7);
  sub_1BFF046A0(v3, v2, v4);
  sub_1BFF046A0(v3, v2, v4);
  sub_1BFF046A0(v5, v6, v7);
  char v8 = sub_1BFE00F10(v2, v6);
  sub_1BFF04738(v3, v2, v4);
  sub_1BFF04738(v5, v6, v7);
  sub_1BFF04738(v5, v6, v7);
  sub_1BFF04738(v3, v2, v4);
  if ((v8 & 1) == 0 || ((((v4 & 1) == 0) ^ v7) & 1) == 0) {
    goto LABEL_12;
  }
  char v9 = 1;
  return v9 & 1;
}

uint64_t _s8NewsFeed18FormatCornerRadiusO5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1BFE00F10(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6) {
    return v2 ^ v3 ^ 1u;
  }
  else {
    return 0;
  }
}

unint64_t sub_1C1085AD0(uint64_t a1)
{
  unint64_t result = sub_1C1085AF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1085AF8()
{
  unint64_t result = qword_1EA1AABB0;
  if (!qword_1EA1AABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABB0);
  }
  return result;
}

uint64_t sub_1C1085B4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1085F98(a1, a2, a3, (uint64_t (*)(void))sub_1BFE9224C, (uint64_t (*)(void))sub_1BFE39C70, (uint64_t (*)(void))sub_1C1085B8C);
}

unint64_t sub_1C1085B8C()
{
  unint64_t result = qword_1EA1AABB8;
  if (!qword_1EA1AABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABB8);
  }
  return result;
}

unint64_t sub_1C1085BE0(uint64_t a1)
{
  unint64_t result = sub_1C1085C08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1085C08()
{
  unint64_t result = qword_1EA1AABC0;
  if (!qword_1EA1AABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABC0);
  }
  return result;
}

uint64_t sub_1C1085C5C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1085F98(a1, a2, a3, (uint64_t (*)(void))sub_1BFDE4CE0, (uint64_t (*)(void))sub_1BFDC0238, (uint64_t (*)(void))sub_1C1085C9C);
}

unint64_t sub_1C1085C9C()
{
  unint64_t result = qword_1EA1AABC8;
  if (!qword_1EA1AABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABC8);
  }
  return result;
}

unint64_t sub_1C1085CF0(uint64_t a1)
{
  unint64_t result = sub_1C1085D18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1085D18()
{
  unint64_t result = qword_1EA1AABD0;
  if (!qword_1EA1AABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABD0);
  }
  return result;
}

uint64_t sub_1C1085D6C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1085F98(a1, a2, a3, (uint64_t (*)(void))sub_1BFDE4D34, (uint64_t (*)(void))sub_1BFDC0428, (uint64_t (*)(void))sub_1C1085DAC);
}

unint64_t sub_1C1085DAC()
{
  unint64_t result = qword_1EA1AABD8;
  if (!qword_1EA1AABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABD8);
  }
  return result;
}

unint64_t sub_1C1085E04()
{
  unint64_t result = qword_1EA1AABE0;
  if (!qword_1EA1AABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABE0);
  }
  return result;
}

unint64_t sub_1C1085E58(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C1085E88();
  unint64_t result = sub_1BFD08D48();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C1085E88()
{
  unint64_t result = qword_1EA1AABE8;
  if (!qword_1EA1AABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABE8);
  }
  return result;
}

unint64_t sub_1C1085EDC(uint64_t a1)
{
  unint64_t result = sub_1C1085F04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1085F04()
{
  unint64_t result = qword_1EA1AABF0;
  if (!qword_1EA1AABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABF0);
  }
  return result;
}

uint64_t sub_1C1085F58(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1085F98(a1, a2, a3, (uint64_t (*)(void))sub_1C0083124, (uint64_t (*)(void))sub_1C0083178, (uint64_t (*)(void))sub_1C1085E04);
}

uint64_t sub_1C1085F98(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

double sub_1C1085FEC@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

double sub_1C1085FF8(double *a1, void *a2)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1C1086004@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1086010(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1C1086054@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 16);
  return result;
}

unsigned char *sub_1C1086060(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = *result;
  return result;
}

uint64_t assignWithCopy for FormatCornerRadius(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1BFF046A0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1BFF04738(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatCornerRadius(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1BFF04738(v4, v5, v6);
  return a1;
}

uint64_t sub_1C108610C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1C1086118(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1C1086128(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for FormatCornerRadius()
{
  return &type metadata for FormatCornerRadius;
}

uint64_t assignWithCopy for FormatCornerRadius.Value(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatCornerRadius.Value(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatCornerRadius.Value()
{
  return &type metadata for FormatCornerRadius.Value;
}

ValueMetadata *type metadata accessor for FormatCornerRadius.RoundedValue()
{
  return &type metadata for FormatCornerRadius.RoundedValue;
}

ValueMetadata *type metadata accessor for FormatCorner()
{
  return &type metadata for FormatCorner;
}

void *sub_1C108626C(double *a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = *(void *)a2;
    uint64_t v4 = *(void **)(a2 + 8);
    if ((v2 & 0x80) != 0)
    {
      CGFloat v6 = a1[4];
      CGFloat v5 = a1[5];
      char v28 = v3 & 1;
      CGFloat v8 = a1[2];
      CGFloat v7 = a1[3];
      v31.origin.x = v8;
      v31.origin.y = v7;
      v31.size.width = v6;
      v31.size.height = v5;
      double Height = CGRectGetHeight(v31);
      v32.origin.x = v8;
      v32.origin.y = v7;
      v32.size.width = v6;
      v32.size.height = v5;
      double Width = CGRectGetWidth(v32);
      if (Width >= Height) {
        double Width = Height;
      }
      *(double *)&uint64_t v11 = Width * 0.5;
      sub_1BFEF68AC(v3, (uint64_t)v4, v2);
      uint64_t v3 = v11;
      uint64_t v4 = &unk_1F1B6DB68;
    }
    else
    {
      char v28 = v2 & 1;
      sub_1BFF046A0(v3, (uint64_t)v4, v2);
    }
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    char v28 = 0;
  }
  id v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v12);
  sub_1C0181BEC(0);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1C152C7F0;
  unint64_t v19 = v17 + v16;
  if (v4) {
    uint64_t v20 = v3;
  }
  else {
    uint64_t v20 = 0;
  }
  sub_1C042F1BC(0x737569646152, 0xE600000000000000, v20, v4 == 0, (void *)(v17 + v16));
  uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
  int64_t v22 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v19, 0, 1, v21);
  swift_bridgeObjectRetain();
  sub_1C0436C14(0x7372656E726F43, 0xE700000000000000, (uint64_t)v4, (void *)(v19 + v15));
  v22(v19 + v15, 0, 1, v21);
  if (v4)
  {
    swift_bridgeObjectRelease();
    char v23 = v28;
  }
  else
  {
    char v23 = 2;
  }
  sub_1C0432B74(0x6F756E69746E6F43, 0xEA00000000007375, v23, (void *)(v19 + 2 * v15));
  v22(v19 + 2 * v15, 0, 1, v21);
  sub_1C09BCFA4(0x522072656E726F43, 0xED00007375696461, 0, 0, v18, v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v24 = swift_allocObject();
  *(void *)(inited + 32) = v24;
  *(void *)(v24 + 48) = v30;
  long long v25 = v29[1];
  *(_OWORD *)(v24 + 16) = v29[0];
  *(_OWORD *)(v24 + 32) = v25;
  char v26 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v26;
}

uint64_t sub_1C108664C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void FormatDateTimeBinding.bind(binder:context:)()
{
}

uint64_t sub_1C10866B4(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 24))
  {
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v5 = *(void *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    char v7 = 1;
    sub_1BFE86E48(v5, v4, v3, 0);
    uint64_t result = sub_1C12ECBDC(v8, &v7);
    if (!v2)
    {
      uint64_t v6 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C1086778(void *a1)
{
  return FormatDateTimeBinding.encode(to:)(a1);
}

uint64_t sub_1C1086794(uint64_t a1)
{
  return sub_1C10866B4(a1);
}

void sub_1C10867AC()
{
}

uint64_t _s8NewsFeed21FormatDateTimeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_19;
      }
      uint64_t v10 = 1;
      sub_1BFD7418C(*(void *)a1, v3, v4, 1);
      sub_1BFD7418C(v6, v7, v8, 1);
      return v10;
    case 2:
      if (v9 != 2) {
        goto LABEL_19;
      }
      sub_1BFD7418C(*(void *)a1, v3, v4, 2);
      uint64_t v11 = v6;
      uint64_t v12 = v7;
      uint64_t v13 = v8;
      char v14 = 2;
      goto LABEL_12;
    case 3:
      if (v9 != 3) {
        goto LABEL_19;
      }
      sub_1BFD7418C(*(void *)a1, v3, v4, 3);
      sub_1BFD7418C(v6, v7, v8, 3);
      return ((v6 ^ v2) & 1) == 0;
    case 4:
      if (v9 != 4) {
        goto LABEL_19;
      }
      sub_1BFD7418C(*(void *)a1, v3, v4, 4);
      uint64_t v11 = v6;
      uint64_t v12 = v7;
      uint64_t v13 = v8;
      char v14 = 4;
LABEL_12:
      sub_1BFD7418C(v11, v12, v13, v14);
      return v6 == v2;
    case 5:
      if (v9 == 5)
      {
        unsigned int v15 = *(void *)a2;
        sub_1BFD7418C(*(void *)a1, v3, v4, 5);
        sub_1BFD7418C(v6, v7, v8, 5);
        switch(v2 >> 5)
        {
          case 1:
            return (v15 & 0xE0) == 0x20 && ((v6 ^ v2) & 0x1F) == 0;
          case 2:
            return (v15 & 0xE0) == 0x40 && ((v6 ^ v2) & 1) == 0;
          case 3:
            return (v15 & 0xE0) == 0x60 && ((v6 ^ v2) & 0x1F) == 0;
          case 4:
            return (v15 & 0xE0) == 0x80 && ((v6 ^ v2) & 0x1F) == 0;
          default:
            return v15 < 0x20;
        }
      }
      goto LABEL_19;
    case 6:
      if (v9 != 6) {
        goto LABEL_19;
      }
      sub_1BFD7418C(*(void *)a1, v3, v4, 6);
      sub_1BFD7418C(v6, v7, v8, 6);
      return 1;
    default:
      if (*(unsigned char *)(a2 + 24))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_19:
        sub_1BFE86E48(v6, v7, v8, v9);
        sub_1BFD7418C(v2, v3, v4, v5);
        uint64_t v16 = v6;
        uint64_t v17 = v7;
        uint64_t v18 = v8;
        char v19 = v9;
        goto LABEL_20;
      }
      BOOL v21 = v2 == v6 && v3 == v7;
      if (!v21 && (sub_1C1520A9C() & 1) == 0)
      {
        sub_1BFE86E48(v2, v3, v4, 0);
        sub_1BFE86E48(v6, v7, v8, 0);
        sub_1BFD7418C(v2, v3, v4, 0);
        uint64_t v16 = v6;
        uint64_t v17 = v7;
        uint64_t v18 = v8;
        char v19 = 0;
LABEL_20:
        sub_1BFD7418C(v16, v17, v18, v19);
        return 0;
      }
      sub_1BFE86E48(v6, v7, v8, 0);
      sub_1BFE86E48(v2, v3, v4, 0);
      sub_1BFE86E48(v2, v3, v4, 0);
      sub_1BFE86E48(v6, v7, v8, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v22 = sub_1C00E3FD8(v4, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD7418C(v2, v3, v4, 0);
      sub_1BFD7418C(v6, v7, v8, 0);
      sub_1BFD7418C(v6, v7, v8, 0);
      sub_1BFD7418C(v2, v3, v4, 0);
      return (v22 & 1) != 0;
  }
}

void sub_1C1086C08()
{
  uint64_t v2 = v1;
  sub_1C00AB000();
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(unsigned char *)(v0 + 24))
  {
    uint64_t v7 = *(void *)(v0 + 8);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v8 = *(void *)v0;
    v11[0] = *(void *)v0;
    v11[1] = v7;
    v11[2] = v6;
    char v12 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C12ECBDC(v11, &v12);
    if (!v2)
    {
      sub_1C0EC63F8(v8, v7, v9, 1, (uint64_t)v5);
      sub_1C0257E00((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1C1086D18(uint64_t a1)
{
  unint64_t result = sub_1C1086D40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1086D40()
{
  unint64_t result = qword_1EA1AABF8;
  if (!qword_1EA1AABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AABF8);
  }
  return result;
}

unint64_t sub_1C1086D94(void *a1)
{
  a1[1] = sub_1BFD01954();
  a1[2] = sub_1C08F4754();
  unint64_t result = sub_1C1086DCC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1086DCC()
{
  unint64_t result = qword_1EA1AAC00;
  if (!qword_1EA1AAC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC00);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateTimeBinding()
{
  return &type metadata for FormatDateTimeBinding;
}

uint64_t sub_1C1086E30(char a1)
{
  char v34 = a1 & 1;
  uint64_t v2 = (void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v32 = v3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v7 << 6);
    }
    else
    {
      int64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_40;
      }
      if (v10 >= v33) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v32 + 8 * v10);
      ++v7;
      if (!v11)
      {
        int64_t v7 = v10 + 1;
        if (v10 + 1 >= v33) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v32 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 2;
          if (v10 + 2 >= v33) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v32 + 8 * v7);
          if (!v11)
          {
            int64_t v7 = v10 + 3;
            if (v10 + 3 >= v33) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v32 + 8 * v7);
            if (!v11)
            {
              int64_t v7 = v10 + 4;
              if (v10 + 4 >= v33) {
                return swift_release();
              }
              unint64_t v11 = *(void *)(v32 + 8 * v7);
              if (!v11)
              {
                int64_t v12 = v10 + 5;
                if (v12 >= v33) {
                  return swift_release();
                }
                unint64_t v11 = *(void *)(v32 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    int64_t v7 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      goto LABEL_41;
                    }
                    if (v7 >= v33) {
                      return swift_release();
                    }
                    unint64_t v11 = *(void *)(v32 + 8 * v7);
                    ++v12;
                    if (v11) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v7 = v12;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v6 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    }
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = (void *)*v2;
    uint64_t v35 = (void *)*v2;
    void *v2 = 0x8000000000000000;
    unint64_t v19 = sub_1BFEF2D8C(v15, v14);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v17[3] >= v22)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v26 = v35;
        if (v18) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C1073728();
        char v26 = v35;
        if (v23) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C10627FC(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_1BFEF2D8C(v15, v14);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_42;
      }
      unint64_t v19 = v24;
      char v26 = v35;
      if (v23)
      {
LABEL_4:
        *(unsigned char *)(v26[7] + v19) = v34;
        goto LABEL_5;
      }
    }
    v26[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v27 = (uint64_t *)(v26[6] + 16 * v19);
    *uint64_t v27 = v15;
    v27[1] = v14;
    *(unsigned char *)(v26[7] + v19) = v34;
    uint64_t v28 = v26[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_39;
    }
    _OWORD v26[2] = v30;
    swift_bridgeObjectRetain();
LABEL_5:
    void *v2 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DebugJournalSectionStateManager()
{
  return self;
}

uint64_t sub_1C1087188@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v6 = result;
  uint64_t v7 = a3;
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 32);
  uint64_t v11 = *(void *)(v3 + 40);
  uint64_t v12 = *(void *)(v3 + 48);
  uint64_t v13 = (void *)*(char *)(v3 + 56);
  uint64_t v42 = *(void *)(v3 + 64);
  if ((~v8 & 0xF000000000000007) == 0 && (v9 & 7) == 7)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    unsigned __int8 v20 = -1;
  }
  else
  {
    uint64_t v32 = v10;
    uint64_t v33 = v11;
    char v34 = v13;
    uint64_t v35 = a3;
    uint64_t v15 = *(void *)(v3 + 16);
    uint64_t v36 = *(void *)v3;
    uint64_t v37 = v8;
    uint64_t v38 = v15;
    uint64_t v39 = v9;
    uint64_t v16 = (uint64_t *)result;
    uint64_t v17 = a2;
    sub_1C0007DB4(v36, v8, v15, v9);
    sub_1C065E460(v16, v17, v40);
    uint64_t result = sub_1C05DD214(v36, v8, v15, v9);
    if (v5) {
      return result;
    }
    uint64_t v18 = v40[0];
    uint64_t v19 = v40[1];
    unsigned __int8 v20 = v41;
    uint64_t v13 = v34;
    uint64_t v7 = v35;
    a2 = v17;
    uint64_t v6 = (uint64_t)v16;
    uint64_t v10 = v32;
    uint64_t v11 = v33;
  }
  uint64_t v35 = v18;
  if ((~(v10 & v12) & 0x3000000000000007) != 0)
  {
    uint64_t v32 = a2;
    if ((v12 & 0x2000000000000000) != 0)
    {
      uint64_t v31 = v19;
      uint64_t v36 = v10;
      sub_1C0007EEC(v10, v11, v12);
      BOOL v29 = sub_1BFF99B18(v6);
      uint64_t result = sub_1C05DD1F8(v10, v11, v12);
      if (!v5)
      {
        char v34 = v29;
        LODWORD(v33) = 0;
        uint64_t v19 = v31;
        goto LABEL_10;
      }
      uint64_t v23 = v35;
      uint64_t v24 = v31;
    }
    else
    {
      swift_retain();
      sub_1C05DD254(v10, v11, v12);
      char v34 = sub_1C0D573F0(v6, v10, v11, v12, v6);
      uint64_t result = sub_1C05DD1F8(v10, v11, v12);
      if (!v5)
      {
        LODWORD(v33) = 1;
        goto LABEL_10;
      }
      uint64_t v23 = v35;
      uint64_t v24 = v19;
    }
    return sub_1C05DCEFC(v23, v24, v20);
  }
  char v34 = 0;
  LODWORD(v33) = 255;
LABEL_10:
  if (v13 == 3)
  {
    int v21 = 3;
    uint64_t v22 = 0;
  }
  else
  {
    int v21 = (int)v13;
    uint64_t v22 = qword_1C15C4298[(void)v13];
  }
  MEMORY[0x1F4188790](result);
  v30[2] = v26;
  void v30[3] = v25;
  uint64_t v27 = v42;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C02837C0((void (*)(long long *__return_ptr, void *))sub_1C1087998, (uint64_t)v30, v27);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    sub_1C05DCEE4(v34, v33);
    return sub_1C05DCEFC(v35, v19, v20);
  }
  else
  {
    *(void *)uint64_t v7 = v35;
    *(void *)(v7 + 8) = v19;
    *(unsigned char *)(v7 + 16) = v20;
    *(void *)(v7 + 24) = v34;
    *(unsigned char *)(v7 + 32) = v33;
    *(void *)(v7 + 40) = v22;
    *(unsigned char *)(v7 + 48) = v21 == 3;
    *(void *)(v7 + 56) = v28;
  }
  return result;
}

uint64_t sub_1C108749C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1C0D0DE68(a1, a2, a3);
}

uint64_t sub_1C10874E4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C078A4E8(a1, a2);
}

uint64_t sub_1C10874FC(void *a1)
{
  return sub_1C078AA48(a1);
}

uint64_t sub_1C1087518(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  int v9 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v17 = *(void *)(a2 + 48);
  int v18 = *(unsigned __int8 *)(a2 + 56);
  uint64_t v19 = *(void *)(a2 + 64);
  if ((~v3 & 0xF000000000000007) != 0 || (v5 & 7) != 7)
  {
    uint64_t v55 = v2;
    uint64_t v56 = v3;
    uint64_t v57 = v4;
    uint64_t v58 = v5;
    if ((~v11 & 0xF000000000000007) == 0 && (v14 & 7) == 7)
    {
      sub_1C0007DB4(v2, v3, v4, v5);
      sub_1C0007DB4(v2, v3, v4, v5);
      sub_1C0007E38(v2, v3, v4, v5);
LABEL_9:
      sub_1C05DD234(v12, v11, v13, v14);
      sub_1C05DD214(v2, v3, v4, v5);
      sub_1C05DD214(v12, v11, v13, v14);
      return 0;
    }
    uint64_t v51 = v12;
    uint64_t v52 = v11;
    uint64_t v53 = v13;
    uint64_t v54 = v14;
    uint64_t v49 = v19;
    uint64_t v50 = v10;
    uint64_t v48 = v17;
    int v47 = v18;
    uint64_t v46 = v6;
    int v20 = v9;
    uint64_t v21 = v15;
    uint64_t v22 = v16;
    sub_1C0007DB4(v2, v3, v4, v5);
    sub_1C0007DB4(v2, v3, v4, v5);
    char v23 = static FormatMenuTitle.== infix(_:_:)(&v55, &v51);
    sub_1C0007E38(v55, v56, v57, v58);
    sub_1C05DD214(v2, v3, v4, v5);
    uint64_t v16 = v22;
    uint64_t v15 = v21;
    uint64_t v17 = v48;
    uint64_t v19 = v49;
    int v9 = v20;
    uint64_t v6 = v46;
    int v18 = v47;
    uint64_t v10 = v50;
    if ((v23 & 1) == 0) {
      return 0;
    }
  }
  else if ((~v11 & 0xF000000000000007) != 0 || (v14 & 7) != 7)
  {
    goto LABEL_9;
  }
  if ((~(v7 & v8) & 0x3000000000000007) == 0)
  {
    if ((v16 & 0x3000000000000007 & v17) == 0x3000000000000007) {
      goto LABEL_18;
    }
LABEL_16:
    uint64_t v28 = v17;
    uint64_t v29 = v6;
    uint64_t v30 = v15;
    uint64_t v31 = v16;
    sub_1C05DD254(v16, v15, v17);
    sub_1C05DD1F8(v7, v29, v8);
    sub_1C05DD1F8(v31, v30, v28);
    return 0;
  }
  uint64_t v55 = v7;
  uint64_t v56 = v6;
  uint64_t v57 = v8;
  if ((v16 & 0x3000000000000007 & v17) == 0x3000000000000007)
  {
    uint64_t v24 = v17;
    uint64_t v25 = v6;
    uint64_t v26 = v15;
    uint64_t v27 = v16;
    sub_1C0007EEC(v7, v6, v8);
    sub_1C0007EEC(v7, v25, v8);
    sub_1C0007E9C(v7, v25, v8);
    uint64_t v16 = v27;
    uint64_t v15 = v26;
    uint64_t v17 = v24;
    uint64_t v6 = v25;
    goto LABEL_16;
  }
  uint64_t v51 = v16;
  uint64_t v52 = v15;
  uint64_t v53 = v17;
  uint64_t v32 = v10;
  uint64_t v33 = v19;
  int v34 = v18;
  uint64_t v35 = v6;
  int v36 = v9;
  sub_1C0007EEC(v7, v6, v8);
  sub_1C0007EEC(v7, v35, v8);
  char v37 = static FormatMenuImage.== infix(_:_:)(&v55, &v51);
  sub_1C0007E9C(v55, v56, v57);
  sub_1C05DD1F8(v7, v35, v8);
  int v9 = v36;
  int v18 = v34;
  uint64_t v19 = v33;
  uint64_t v10 = v32;
  if ((v37 & 1) == 0) {
    return 0;
  }
LABEL_18:
  if (v9 == 3)
  {
    if (v18 != 3) {
      return 0;
    }
  }
  else
  {
    if (v18 == 3) {
      return 0;
    }
    uint64_t v38 = 0x746C7561666564;
    uint64_t v39 = v10;
    if (v9)
    {
      if (v9 == 1)
      {
        uint64_t v40 = 0x7463757274736564;
        unint64_t v41 = 0xEB00000000657669;
      }
      else
      {
        unint64_t v41 = 0xE600000000000000;
        uint64_t v40 = 0x656E696C6E69;
      }
    }
    else
    {
      unint64_t v41 = 0xE700000000000000;
      uint64_t v40 = 0x746C7561666564;
    }
    if (v18)
    {
      if (v18 == 1)
      {
        uint64_t v38 = 0x7463757274736564;
        unint64_t v42 = 0xEB00000000657669;
      }
      else
      {
        unint64_t v42 = 0xE600000000000000;
        uint64_t v38 = 0x656E696C6E69;
      }
    }
    else
    {
      unint64_t v42 = 0xE700000000000000;
    }
    uint64_t v43 = v19;
    if (v40 == v38 && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v10 = v39;
      uint64_t v19 = v43;
    }
    else
    {
      char v44 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v39;
      uint64_t v19 = v43;
      if ((v44 & 1) == 0) {
        return 0;
      }
    }
  }
  return sub_1C00EE6A0(v10, v19);
}

uint64_t sub_1C1087998@<X0>(uint64_t a1@<X8>)
{
  return sub_1C108749C(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t destroy for FormatMenuGroup(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  if ((~v2 & 0xF000000000000007) != 0 || (a1[3] & 7) != 7) {
    sub_1C0007E38(*a1, v2, a1[2], a1[3]);
  }
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[6];
  if ((~(v4 & v5) & 0x3000000000000007) != 0) {
    sub_1C0007E9C(v4, a1[5], v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatMenuGroup(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[3];
  if ((~v4 & 0xF000000000000007) == 0 && (a2[3] & 7) == 7)
  {
    long long v9 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[2];
    sub_1C0007DB4(*a2, a2[1], v8, v5);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v5;
  }
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[6];
  if ((~(v10 & v11) & 0x3000000000000007) != 0)
  {
    uint64_t v12 = a2[5];
    sub_1C0007EEC(a2[4], v12, a2[6]);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v11;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(void *)(a1 + 48) = a2[6];
  }
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatMenuGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  if ((~*(void *)(a1 + 8) & 0xF000000000000007) == 0 && (*(void *)(a1 + 24) & 7) == 7)
  {
    if (~v4 & 0xF000000000000007 | ~(_BYTE)v5 & 7)
    {
      uint64_t v15 = *(void *)a2;
      uint64_t v16 = *(void *)(a2 + 16);
      sub_1C0007DB4(*(void *)a2, *(void *)(a2 + 8), v16, v5);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = v5;
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
  }
  else if (~v4 & 0xF000000000000007 | ~(_BYTE)v5 & 7)
  {
    uint64_t v9 = *(void *)a2;
    uint64_t v10 = *(void *)(a2 + 16);
    sub_1C0007DB4(*(void *)a2, *(void *)(a2 + 8), v10, v5);
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    uint64_t v14 = *(void *)(a1 + 24);
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v5;
    sub_1C0007E38(v11, v12, v13, v14);
  }
  else
  {
    sub_1C1087CFC(a1);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  uint64_t v17 = (_OWORD *)(a1 + 32);
  uint64_t v19 = (_OWORD *)(a2 + 32);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v20 = *(void *)(a2 + 48);
  uint64_t v21 = v18 & 0x3000000000000007 & v20;
  if ((~(*(void *)(a1 + 32) & *(void *)(a1 + 48)) & 0x3000000000000007) != 0)
  {
    if (v21 == 0x3000000000000007)
    {
      sub_1C1087D50(a1 + 32);
      uint64_t v23 = *(void *)(a2 + 48);
      *uint64_t v17 = *v19;
      *(void *)(a1 + 48) = v23;
    }
    else
    {
      uint64_t v25 = *(void *)(a2 + 40);
      sub_1C0007EEC(*(void *)(a2 + 32), v25, *(void *)(a2 + 48));
      uint64_t v26 = *(void *)(a1 + 32);
      uint64_t v27 = *(void *)(a1 + 40);
      uint64_t v28 = *(void *)(a1 + 48);
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v25;
      *(void *)(a1 + 48) = v20;
      sub_1C0007E9C(v26, v27, v28);
    }
  }
  else if (v21 == 0x3000000000000007)
  {
    long long v22 = *v19;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *uint64_t v17 = v22;
  }
  else
  {
    uint64_t v24 = *(void *)(a2 + 40);
    sub_1C0007EEC(*(void *)(a2 + 32), v24, *(void *)(a2 + 48));
    *(void *)(a1 + 32) = v18;
    *(void *)(a1 + 40) = v24;
    *(void *)(a1 + 48) = v20;
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1087CFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1087D50(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatMenuGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 24);
  if ((~v4 & 0xF000000000000007) != 0 || (*(void *)(a1 + 24) & 7) != 7)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 24);
    if ((~v7 & 0xF000000000000007) != 0 || (*(void *)(a2 + 24) & 7) != 7)
    {
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v11 = *(void *)a1;
      uint64_t v12 = *(void *)(a1 + 16);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v10;
      *(void *)(a1 + 24) = v8;
      sub_1C0007E38(v11, v4, v12, v5);
      goto LABEL_12;
    }
    sub_1C1087CFC(a1);
  }
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
LABEL_12:
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v16 = *(void *)(a1 + 48);
  if ((~(v14 & v16) & 0x3000000000000007) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 48);
    if ((v15 & 0x3000000000000007 & v17) != 0x3000000000000007)
    {
      uint64_t v18 = *(void *)(a2 + 40);
      uint64_t v19 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v18;
      *(void *)(a1 + 48) = v17;
      sub_1C0007E9C(v14, v19, v16);
      goto LABEL_17;
    }
    sub_1C1087D50(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
LABEL_17:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMenuGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMenuGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuGroup()
{
  return &type metadata for FormatMenuGroup;
}

unint64_t sub_1C1087F6C(void *a1)
{
  a1[1] = sub_1C08E47EC();
  a1[2] = sub_1C08E4FA8();
  unint64_t result = sub_1C1087FA4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1087FA4()
{
  unint64_t result = qword_1EA1AAC08;
  if (!qword_1EA1AAC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC08);
  }
  return result;
}

unint64_t sub_1C1087FF8(uint64_t a1)
{
  unint64_t result = sub_1C1088020();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1088020()
{
  unint64_t result = qword_1EA1AAC10;
  if (!qword_1EA1AAC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC10);
  }
  return result;
}

id sub_1C1088074(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  return a1;
}

uint64_t sub_1C10880C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1C108819C()
{
  sub_1C10880C8();
  return swift_deallocClassInstance();
}

uint64_t sub_1C10881D0()
{
  return swift_deallocObject();
}

uint64_t sub_1C1088208()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1C1088240(void *a1)
{
  return sub_1C1088074(a1, v1);
}

uint64_t sub_1C1088248()
{
  return swift_deallocObject();
}

uint64_t sub_1C1088280()
{
  swift_release();
  return swift_deallocObject();
}

void static FormatCodingFillStrategy.defaultValue.getter(void *a1@<X8>)
{
  *a1 = 0xB000000000000000;
}

BOOL static FormatCodingFillStrategy.shouldEncode(wrappedValue:)(void *a1)
{
  return *a1 != 0xB000000000000000 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

unint64_t sub_1C10882E8(uint64_t a1)
{
  unint64_t result = sub_1C1088310();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1088310()
{
  unint64_t result = qword_1EA1AAC18;
  if (!qword_1EA1AAC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC18);
  }
  return result;
}

void sub_1C1088364(void *a1@<X8>)
{
  *a1 = 0xB000000000000000;
}

BOOL sub_1C1088370(void *a1)
{
  return *a1 != 0xB000000000000000 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

ValueMetadata *type metadata accessor for FormatCodingFillStrategy()
{
  return &type metadata for FormatCodingFillStrategy;
}

uint64_t FormatDecoration.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDecoration.init(identifier:name:description:content:columns:zIndex:options:selectors:pin:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v14 = *a7;
  uint64_t v15 = *a14;
  __int16 v16 = *((_WORD *)a14 + 4);
  char v17 = *((unsigned char *)a14 + 10);
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = v14;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(void *)(a9 + 80) = a12;
  *(void *)(a9 + 88) = a13;
  *(void *)(a9 + 96) = v15;
  *(unsigned char *)(a9 + 106) = v17;
  *(_WORD *)(a9 + 104) = v16;
  return result;
}

uint64_t FormatDecoration.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecoration.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecoration.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecoration.columns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDecoration.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDecoration.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatDecoration.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatDecoration.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatDecoration.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatDecoration.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatDecoration.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatDecoration.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
  return swift_retain();
}

uint64_t FormatDecoration.columns.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatDecoration.columns.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatDecoration.zIndex.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t FormatDecoration.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatDecoration.options.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatDecoration.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatDecoration.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatDecoration.pin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  int v3 = *(unsigned __int8 *)(v1 + 106);
  int v4 = *(unsigned __int16 *)(v1 + 104);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 10) = v3;
  *(_WORD *)(a1 + 8) = v4;
  return sub_1BFF9C7FC(v2, v4 | (v3 << 16));
}

BOOL _s8NewsFeed16FormatDecorationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v37 = *(void *)(a1 + 56);
  uint64_t v31 = *(void *)(a1 + 64);
  char v35 = *(unsigned char *)(a1 + 72);
  uint64_t v33 = *(void *)(a1 + 80);
  uint64_t v23 = *(void *)(a1 + 96);
  int v26 = *(unsigned __int16 *)(a1 + 104);
  int v27 = *(unsigned __int8 *)(a1 + 106);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v11 = *(void *)(a2 + 48);
  uint64_t v36 = *(void *)(a2 + 56);
  uint64_t v29 = *(void *)(a1 + 88);
  uint64_t v30 = *(void *)(a2 + 64);
  int v34 = *(unsigned __int8 *)(a2 + 72);
  uint64_t v32 = *(void *)(a2 + 80);
  uint64_t v28 = *(void *)(a2 + 88);
  uint64_t v22 = *(void *)(a2 + 96);
  int v24 = *(unsigned __int16 *)(a2 + 104);
  int v25 = *(unsigned __int8 *)(a2 + 106);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1C1520A9C(), BOOL result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v7) {
        return 0;
      }
      if (v2 != v8 || v3 != v7)
      {
        char v14 = sub_1C1520A9C();
        BOOL result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v6)
    {
      if (!v9) {
        return 0;
      }
      if (v4 != v10 || v6 != v9)
      {
        char v15 = sub_1C1520A9C();
        BOOL result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v9)
    {
      return 0;
    }
    uint64_t v41 = v5;
    unint64_t v38 = v11;
    if ((static FormatDecorationContent.== infix(_:_:)(&v41, &v38) & 1) == 0 || (sub_1BFD3C000(v37, v36) & 1) == 0) {
      return 0;
    }
    if (v35)
    {
      if (!v34) {
        return 0;
      }
    }
    else
    {
      char v16 = v34;
      if (v31 != v30) {
        char v16 = 1;
      }
      if (v16) {
        return 0;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_1C00E0650(v33, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v18 = sub_1BFEFAE14(v29, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      return 0;
    }
    uint64_t v19 = v26 | (v27 << 16);
    uint64_t v20 = v24 | (v25 << 16);
    if (BYTE2(v19) == 255)
    {
      if (BYTE2(v20) == 255) {
        return 1;
      }
      goto LABEL_33;
    }
    uint64_t v41 = v23;
    unsigned __int16 v42 = v26;
    char v43 = (v26 | (v27 << 16)) >> 16;
    if (BYTE2(v20) == 255)
    {
      sub_1BFFA742C(v23, v19, SBYTE2(v19), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
      sub_1BFFA742C(v23, v19, SBYTE2(v19), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
      sub_1BFFA742C(v23, v19, SBYTE2(v19), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
LABEL_33:
      sub_1BFF9C7FC(v22, v20);
      sub_1BFF9C84C(v23, v19);
      sub_1BFF9C84C(v22, v20);
      return 0;
    }
    unint64_t v38 = v22;
    __int16 v39 = v24;
    char v40 = (v24 | (v25 << 16)) >> 16;
    sub_1BFF9C7FC(v23, v19);
    sub_1BFFA742C(v23, v19, SBYTE2(v19), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
    char v21 = _s8NewsFeed31FormatSupplementaryNodePinTraitO2eeoiySbAC_ACtFZ_0((uint64_t)&v41, (uint64_t)&v38);
    sub_1BFFA742C(v41, v42, v43, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    sub_1BFF9C84C(v23, v19);
    return (v21 & 1) != 0;
  }
  return result;
}

unint64_t sub_1C1088AD8(uint64_t a1)
{
  unint64_t result = sub_1C00F6ACC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1088B00(void *a1)
{
  a1[1] = sub_1C007EB9C();
  a1[2] = sub_1C007EBF0();
  unint64_t result = sub_1C1088B38();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1088B38()
{
  unint64_t result = qword_1EB8913F0;
  if (!qword_1EB8913F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8913F0);
  }
  return result;
}

uint64_t sub_1C1088B8C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1088B98(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C1088BDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1088BE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C1088C2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1088C38(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1C1088C7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1088C88(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1C1088CCC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1088CD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 80) = v3;
  return result;
}

uint64_t sub_1C1088D1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1088D28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 88) = v3;
  return result;
}

uint64_t assignWithCopy for FormatDecoration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t *)(a1 + 96);
  uint64_t v6 = a2 + 96;
  uint64_t v7 = *(unsigned __int16 *)(a2 + 104) | (*(unsigned __int8 *)(a2 + 106) << 16);
  if (*(unsigned __int8 *)(a1 + 106) == 255)
  {
    if (BYTE2(v7) == 255)
    {
      uint64_t v8 = *(void *)v6;
      *(_DWORD *)(a1 + 103) = *(_DWORD *)(v6 + 7);
      *uint64_t v5 = v8;
    }
    else
    {
      uint64_t v10 = *(void *)v6;
      sub_1BFFA742C(*(void *)v6, v7, SBYTE2(v7), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
      *(void *)(a1 + 96) = v10;
      *(_WORD *)(a1 + 104) = v7;
      *(unsigned char *)(a1 + 106) = BYTE2(v7);
    }
  }
  else if (BYTE2(v7) == 255)
  {
    sub_1C1088FAC(a1 + 96);
    int v9 = *(_DWORD *)(v6 + 7);
    *uint64_t v5 = *(void *)v6;
    *(_DWORD *)(a1 + 103) = v9;
  }
  else
  {
    uint64_t v11 = *(void *)v6;
    sub_1BFFA742C(*(void *)v6, v7, SBYTE2(v7), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
    uint64_t v12 = *(void *)(a1 + 96);
    *(void *)(a1 + 96) = v11;
    uint64_t v13 = *(unsigned __int16 *)(a1 + 104);
    *(_WORD *)(a1 + 104) = v7;
    char v14 = *(unsigned char *)(a1 + 106);
    *(unsigned char *)(a1 + 106) = BYTE2(v7);
    sub_1BFFA742C(v12, v13, v14, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  }
  return a1;
}

uint64_t sub_1C1088FAC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatDecoration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 106) != 255)
  {
    unsigned int v8 = *(unsigned __int16 *)(a2 + 104) | (*(unsigned __int8 *)(a2 + 106) << 16);
    if (HIWORD(v8) <= 0xFEu)
    {
      uint64_t v9 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
      uint64_t v10 = *(void *)(a1 + 96);
      *(void *)(a1 + 96) = *v7;
      *(_WORD *)(a1 + 104) = v8;
      *(unsigned char *)(a1 + 106) = BYTE2(v8);
      sub_1BFFA742C(v10, v9, SBYTE2(v9), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      return a1;
    }
    sub_1C1088FAC(a1 + 96);
  }
  *(void *)(a1 + 96) = *v7;
  *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDecoration()
{
  return &type metadata for FormatDecoration;
}

uint64_t FormatItemBindingsNode.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.bind(binder:context:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for FormatOption();
  unint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatNodeBinderContext();
  v82[4] = &protocol witness table for FormatNodeBinderContext;
  v82[3] = v11;
  v82[0] = a2;
  swift_retain();
  sub_1C108A484(v82, v83);
  if (v3) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  }
  unint64_t v49 = v8;
  uint64_t v85 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  long long v79 = v83[4];
  long long v80 = v83[5];
  v81[0] = v84[0];
  *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)((char *)v84 + 9);
  long long v75 = v83[0];
  long long v76 = v83[1];
  long long v77 = v83[2];
  long long v78 = v83[3];
  swift_beginAccess();
  uint64_t v13 = *(void *)(v2 + 16);
  uint64_t v14 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1BFF303E0(v13, v14);
  uint64_t v45 = v4;
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  long long v68 = 0u;
  long long v67 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v62 = v79;
  long long v63 = v80;
  v64[0] = v81[0];
  *(_OWORD *)((char *)v64 + 9) = *(_OWORD *)((char *)v81 + 9);
  long long v58 = v75;
  long long v59 = v76;
  long long v60 = v77;
  uint64_t v69 = 0;
  uint64_t v70 = MEMORY[0x1E4FBC860];
  uint64_t v71 = MEMORY[0x1E4FBC870];
  v57[0] = 1;
  long long v61 = v78;
  uint64_t v65 = v15;
  uint64_t v66 = v17;
  sub_1C025AE48((uint64_t)&v75);
  uint64_t v18 = v85;
  sub_1BFFBC13C(a1, a2);
  if (v18)
  {
    sub_1BFFBC004((uint64_t)v57);
    return sub_1C08845BC((uint64_t)&v75);
  }
  else
  {
    uint64_t v46 = a1;
    uint64_t v19 = v45;
    uint64_t v50 = sub_1C108A834((uint64_t)v57, (uint64_t)a2);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v19 + 56);
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v22 = v20 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
      uint64_t v23 = *(void *)(v49 + 72);
      uint64_t v85 = *(void *)(v19 + 56);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = v46;
      do
      {
        sub_1C108B500(v22, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
        *(void *)&long long v51 = *((void *)v10 + 2);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(v24, v50);
        swift_release();
        sub_1C108B4A0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v22 += v23;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
    }
    uint64_t v25 = v45;
    swift_beginAccess();
    uint64_t v26 = *(void *)(v25 + 64);
    uint64_t v27 = *(void *)(v26 + 16);
    uint64_t v85 = 0;
    if (v27)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v44 = v26;
      uint64_t v28 = (uint64_t *)(v26 + 48);
      while (1)
      {
        uint64_t v47 = v27;
        uint64_t v29 = *(v28 - 2);
        uint64_t v30 = *(v28 - 1);
        uint64_t v32 = *v28;
        uint64_t v31 = v28[1];
        uint64_t v33 = v28[2];
        uint64_t v34 = v28[3];
        unint64_t v35 = v28[4];
        uint64_t v36 = v28[5];
        *(void *)&long long v51 = v29;
        *((void *)&v51 + 1) = v30;
        *(void *)&long long v52 = v32;
        *((void *)&v52 + 1) = v31;
        uint64_t v53 = v33;
        uint64_t v54 = v34;
        unint64_t v55 = v35;
        uint64_t v56 = v36;
        uint64_t v48 = v36;
        unint64_t v49 = v35;
        sub_1BFF95098(v29, v30, v32, v31, v33, v34, v35);
        uint64_t v37 = v85;
        FormatNodeStyle.bind(binder:context:)(v46, v50);
        uint64_t v85 = v37;
        if (v37) {
          break;
        }
        v28 += 8;
        sub_1BFF94FE4(v29, v30, v32, v31, v33, v34, v49);
        uint64_t v27 = v47 - 1;
        if (v47 == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v25 = v45;
          goto LABEL_14;
        }
      }
      sub_1BFF94FE4(v29, v30, v32, v31, v33, v34, v49);
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_14:
      swift_beginAccess();
      uint64_t v38 = *(void *)(v25 + 72);
      uint64_t v39 = *(void *)(v38 + 16);
      if (v39)
      {
        swift_bridgeObjectRetain_n();
        char v40 = (uint64_t *)(v38 + 64);
        while (1)
        {
          uint64_t v41 = *v40;
          long long v42 = *((_OWORD *)v40 - 1);
          long long v51 = *((_OWORD *)v40 - 2);
          long long v52 = v42;
          uint64_t v53 = v41;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v43 = v85;
          FormatSourceMapNode.bind(binder:context:)(v46, v50);
          uint64_t v85 = v43;
          if (v43) {
            break;
          }
          v40 += 5;
          swift_bridgeObjectRelease();
          swift_release();
          if (!--v39)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
LABEL_22:
    sub_1BFFBC004((uint64_t)v57);
    sub_1C08845BC((uint64_t)&v75);
    return swift_release();
  }
}

uint64_t FormatItemBindingsNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemBindingsNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.itemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemBindingsNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.styles.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.styles.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.children.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatItemBindingsNode.__allocating_init(identifier:itemIdentifier:selectors:options:styles:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  swift_beginAccess();
  _OWORD v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  swift_beginAccess();
  v16[6] = a5;
  swift_beginAccess();
  v16[7] = a6;
  swift_beginAccess();
  v16[8] = a7;
  swift_beginAccess();
  v16[9] = a8;
  return v16;
}

void *FormatItemBindingsNode.init(identifier:itemIdentifier:selectors:options:styles:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  v8[2] = a1;
  uint64_t v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_beginAccess();
  v8[6] = a5;
  swift_beginAccess();
  v8[7] = a6;
  swift_beginAccess();
  v8[8] = a7;
  swift_beginAccess();
  v8[9] = a8;
  return v8;
}

uint64_t FormatItemBindingsNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatItemBindingsNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1C1089DD0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C08935E4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C1089DFC(void *a1)
{
  return FormatItemBindingsNode.encode(to:)(a1);
}

uint64_t sub_1C1089E20(void **a1, void **a2)
{
  return _s8NewsFeed22FormatItemBindingsNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C1089E2C(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FormatOption();
  uint64_t v76 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[6];
  unint64_t v12 = a1[7];
  v85[0] = v11;
  v85[1] = v12;
  sub_1BFE74E64(v11, v12);
  uint64_t v13 = sub_1BFEAA3BC((uint64_t)v85, a3, a4);
  sub_1BFF8F648(v11, v12);
  if (!v4)
  {
    uint64_t v74 = v13;
    uint64_t v80 = v8;
    v72[1] = 0;
    uint64_t v14 = a1[11];
    int64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t v82 = v10;
    uint64_t v17 = v76;
    long long v73 = a1;
    if (v15)
    {
      v85[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C05F672C(0, v15, 0);
      uint64_t v16 = v85[0];
      uint64_t v77 = v14;
      uint64_t v18 = (uint64_t *)(v14 + 48);
      do
      {
        uint64_t v81 = v16;
        uint64_t v19 = *(v18 - 2);
        uint64_t v20 = *(v18 - 1);
        uint64_t v21 = *v18;
        uint64_t v22 = v18[1];
        uint64_t v23 = v18[3];
        uint64_t v78 = v18[2];
        int64_t v79 = v15;
        unint64_t v25 = v18[4];
        uint64_t v24 = v18[5];
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v19;
        *(void *)(v26 + 24) = v20;
        *(void *)(v26 + 32) = v21;
        *(void *)(v26 + 40) = v22;
        uint64_t v27 = v78;
        *(void *)(v26 + 48) = v78;
        *(void *)(v26 + 56) = v23;
        *(void *)(v26 + 64) = v25;
        *(void *)(v26 + 72) = v24;
        uint64_t v28 = v19;
        uint64_t v16 = v81;
        sub_1BFF95098(v28, v20, v21, v22, v27, v23, v25);
        v85[0] = v16;
        unint64_t v30 = *(void *)(v16 + 16);
        unint64_t v29 = *(void *)(v16 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1C05F672C(v29 > 1, v30 + 1, 1);
          uint64_t v16 = v85[0];
        }
        v18 += 8;
        *(void *)(v16 + 16) = v30 + 1;
        *(void *)(v16 + 8 * v30 + 32) = v26 | 0x9000000000000004;
        int64_t v15 = v79 - 1;
      }
      while (v79 != 1);
      swift_bridgeObjectRelease();
      uint64_t v10 = v82;
      uint64_t v17 = v76;
      uint64_t v31 = v73;
    }
    else
    {
      uint64_t v31 = a1;
    }
    uint64_t v32 = v75;
    swift_beginAccess();
    uint64_t v33 = *(void *)(v32 + 64);
    int64_t v34 = *(void *)(v33 + 16);
    uint64_t v35 = MEMORY[0x1E4FBC860];
    if (v34)
    {
      uint64_t v81 = v16;
      uint64_t v84 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C05F672C(0, v34, 0);
      uint64_t v35 = v84;
      v72[0] = v33;
      uint64_t v36 = (uint64_t *)(v33 + 48);
      do
      {
        uint64_t v78 = v35;
        int64_t v79 = v34;
        uint64_t v37 = *(v36 - 2);
        uint64_t v38 = *(v36 - 1);
        uint64_t v39 = *v36;
        uint64_t v40 = v36[1];
        uint64_t v41 = v36[2];
        uint64_t v77 = v36[3];
        unint64_t v43 = v36[4];
        uint64_t v42 = v36[5];
        uint64_t v44 = swift_allocObject();
        *(void *)(v44 + 16) = v37;
        *(void *)(v44 + 24) = v38;
        *(void *)(v44 + 32) = v39;
        *(void *)(v44 + 40) = v40;
        uint64_t v45 = v77;
        *(void *)(v44 + 48) = v41;
        *(void *)(v44 + 56) = v45;
        *(void *)(v44 + 64) = v43;
        *(void *)(v44 + 72) = v42;
        unint64_t v46 = v43;
        uint64_t v35 = v78;
        sub_1BFF95098(v37, v38, v39, v40, v41, v45, v46);
        uint64_t v84 = v35;
        unint64_t v48 = *(void *)(v35 + 16);
        unint64_t v47 = *(void *)(v35 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_1C05F672C(v47 > 1, v48 + 1, 1);
          uint64_t v35 = v84;
        }
        v36 += 8;
        *(void *)(v35 + 16) = v48 + 1;
        *(void *)(v35 + 8 * v48 + 32) = v44 | 0x4000000000000004;
        int64_t v34 = v79 - 1;
      }
      while (v79 != 1);
      swift_bridgeObjectRelease();
      uint64_t v16 = v81;
      uint64_t v10 = v82;
      uint64_t v32 = v75;
      uint64_t v17 = v76;
      uint64_t v31 = v73;
    }
    uint64_t v84 = v16;
    sub_1BFFF6F28(v35);
    sub_1BFFF6AE8(v84);
    swift_bridgeObjectRelease();
    uint64_t v49 = v31[12];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v50 = swift_bridgeObjectRetain();
    uint64_t v51 = sub_1BFEF3988(v50, v49);
    uint64_t v81 = sub_1BFF1B2E4(v51, 0);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v52 = v31[13];
    int64_t v53 = *(void *)(v52 + 16);
    uint64_t v54 = MEMORY[0x1E4FBC860];
    if (v53)
    {
      uint64_t v83 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1BFF9524C(0, v53, 0);
      uint64_t v54 = v83;
      uint64_t v55 = v52 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v56 = *(void *)(v17 + 72);
      do
      {
        sub_1C108B500(v55, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v57 = swift_allocBox();
        sub_1C108B438((uint64_t)v10, v58, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v83 = v54;
        unint64_t v60 = *(void *)(v54 + 16);
        unint64_t v59 = *(void *)(v54 + 24);
        if (v60 >= v59 >> 1)
        {
          sub_1BFF9524C(v59 > 1, v60 + 1, 1);
          uint64_t v54 = v83;
        }
        *(void *)(v54 + 16) = v60 + 1;
        *(void *)(v54 + 8 * v60 + 32) = v57 | 0x9000000000000004;
        v55 += v56;
        --v53;
        uint64_t v10 = v82;
      }
      while (v53);
      swift_bridgeObjectRelease();
      uint64_t v32 = v75;
      uint64_t v17 = v76;
    }
    swift_beginAccess();
    int64_t v61 = *(void *)(v32 + 56);
    int64_t v62 = *(void *)(v61 + 16);
    uint64_t v63 = MEMORY[0x1E4FBC860];
    if (v62)
    {
      uint64_t v86 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1BFF9524C(0, v62, 0);
      uint64_t v63 = v86;
      uint64_t v64 = *(unsigned __int8 *)(v17 + 80);
      int64_t v79 = v61;
      uint64_t v65 = v61 + ((v64 + 32) & ~v64);
      uint64_t v66 = *(void *)(v17 + 72);
      do
      {
        sub_1C108B500(v65, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v67 = swift_allocBox();
        sub_1C108B438((uint64_t)v10, v68, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v86 = v63;
        unint64_t v70 = *(void *)(v63 + 16);
        unint64_t v69 = *(void *)(v63 + 24);
        if (v70 >= v69 >> 1)
        {
          sub_1BFF9524C(v69 > 1, v70 + 1, 1);
          uint64_t v63 = v86;
        }
        *(void *)(v63 + 16) = v70 + 1;
        *(void *)(v63 + 8 * v70 + 32) = v67 | 0x4000000000000004;
        v65 += v66;
        --v62;
        uint64_t v10 = v82;
      }
      while (v62);
      swift_bridgeObjectRelease();
    }
    uint64_t v86 = v54;
    sub_1BFF1B81C(v63);
    uint64_t v13 = sub_1BFF20000(v86);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v13;
}

double sub_1C108A484@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1BFFF4D3C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0037C88();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (long long *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items;
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v17 + 16))
  {
    uint64_t v18 = *(void *)(v3 + 32);
    uint64_t v19 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1BFEF2D8C(v18, v19);
    if (v21)
    {
      sub_1C108B500(*(void *)(v17 + 56) + *(void *)(v11 + 72) * v20, (uint64_t)v8, (uint64_t (*)(void))sub_1C0037C88);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_1C108B4A0((uint64_t)v8, (uint64_t (*)(void))sub_1BFFF4D3C);
    type metadata accessor for FormatLayoutError();
    sub_1C108B3F0((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    void *v22 = v3;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_willThrow();
  }
  else
  {
    sub_1C108B438((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(void))sub_1C0037C88);
    long long v24 = v13[5];
    long long v34 = v13[4];
    long long v35 = v24;
    v36[0] = v13[6];
    *(_OWORD *)((char *)v36 + 9) = *(long long *)((char *)v13 + 105);
    long long v25 = v13[1];
    long long v30 = *v13;
    long long v31 = v25;
    long long v26 = v13[3];
    long long v32 = v13[2];
    long long v33 = v26;
    sub_1C025AE48((uint64_t)&v30);
    sub_1C108B4A0((uint64_t)v13, (uint64_t (*)(void))sub_1C0037C88);
    long long v27 = v35;
    a2[4] = v34;
    a2[5] = v27;
    a2[6] = v36[0];
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v36 + 9);
    long long v28 = v31;
    *a2 = v30;
    a2[1] = v28;
    double result = *(double *)&v32;
    long long v29 = v33;
    a2[2] = v32;
    a2[3] = v29;
  }
  return result;
}

uint64_t sub_1C108A834(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v42 = type metadata accessor for FormatOption();
  uint64_t v4 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a1;
  uint64_t v7 = *(void *)(a1 + 112);
  int64_t v8 = *(void *)(v7 + 16);
  unint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v43[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v8, 0);
    unint64_t v9 = v43[0];
    unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v38 = v7;
    uint64_t v11 = v7 + v10;
    uint64_t v39 = v4;
    uint64_t v12 = *(void *)(v4 + 72);
    do
    {
      sub_1C108B500(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v13 = swift_allocBox();
      sub_1C108B438((uint64_t)v6, v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v43[0] = v9;
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BFF9524C(v15 > 1, v16 + 1, 1);
        unint64_t v9 = v43[0];
      }
      *(void *)(v9 + 16) = v16 + 1;
      *(void *)(v9 + 8 * v16 + 32) = v13 | 0x9000000000000004;
      v11 += v12;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v4 = v39;
  }
  swift_beginAccess();
  uint64_t v39 = v2;
  uint64_t v17 = *(void *)(v2 + 56);
  int64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (v18)
  {
    v43[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v18, 0);
    uint64_t v19 = v43[0];
    unint64_t v20 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v38 = v17;
    uint64_t v21 = v17 + v20;
    uint64_t v22 = *(void *)(v4 + 72);
    do
    {
      sub_1C108B500(v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v23 = swift_allocBox();
      sub_1C108B438((uint64_t)v6, v24, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v43[0] = v19;
      unint64_t v26 = *(void *)(v19 + 16);
      unint64_t v25 = *(void *)(v19 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BFF9524C(v25 > 1, v26 + 1, 1);
        uint64_t v19 = v43[0];
      }
      *(void *)(v19 + 16) = v26 + 1;
      *(void *)(v19 + 8 * v26 + 32) = v23 | 0x4000000000000004;
      v21 += v22;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  v43[0] = v9;
  sub_1BFF1B81C(v19);
  uint64_t v27 = v40;
  uint64_t v28 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v28);
  uint64_t v29 = v43[0];
  uint64_t v30 = *(void *)(v27 + 104);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_1BFEF3988(v31, v30);
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_1BFEF3988(v33, v32);
  memset(v49, 0, sizeof(v49));
  memset(v48, 0, sizeof(v48));
  v43[1] = 0;
  v43[0] = 0;
  v43[2] = 1;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v47 = 0;
  uint64_t v35 = sub_1C0EC66B4(0, 0, v29, v34, 0, 0, 0, MEMORY[0x1E4FBC860], (uint64_t *)v49, v27 + 152, (uint64_t *)v48, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1C108AC90(uint64_t a1, void *a2)
{
  return FormatItemBindingsNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C108ACB4(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  int64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 56;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1C0F494D0(v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v30 = a2;
    unint64_t v31 = a1;
    uint64_t v12 = *(void *)(*(void *)v9 + 16);
    if (v12)
    {
      uint64_t v13 = *(void *)v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v14 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain_n();
      unint64_t v15 = v31;
      do
      {
        sub_1C108B500(v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v34 = *((void *)v8 + 2);
        swift_retain();
        sub_1C05B8C90(v15);
        swift_release();
        sub_1C108B4A0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v13 += v14;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      a2 = v30;
    }
    else
    {
      unint64_t v15 = v31;
    }
    swift_beginAccess();
    uint64_t v16 = *(void *)(a2 + 64);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v42 = 0;
      swift_bridgeObjectRetain_n();
      v29[1] = v16;
      int64_t v18 = (uint64_t *)(v16 + 48);
      while (1)
      {
        uint64_t v32 = v17;
        uint64_t v19 = *(v18 - 2);
        uint64_t v20 = *(v18 - 1);
        uint64_t v21 = *v18;
        uint64_t v22 = v18[1];
        uint64_t v24 = v18[2];
        uint64_t v23 = v18[3];
        unint64_t v26 = v18[4];
        uint64_t v25 = v18[5];
        uint64_t v34 = v19;
        uint64_t v35 = v20;
        uint64_t v36 = v21;
        uint64_t v37 = v22;
        uint64_t v38 = v24;
        uint64_t v39 = v23;
        unint64_t v40 = v26;
        uint64_t v41 = v25;
        uint64_t v33 = v25;
        sub_1BFF95098(v19, v20, v21, v22, v24, v23, v26);
        uint64_t v27 = v42;
        sub_1C05B7D38(v31);
        uint64_t v42 = v27;
        if (v27) {
          break;
        }
        v18 += 8;
        sub_1BFF94FE4(v19, v20, v21, v22, v24, v23, v26);
        uint64_t v17 = v32 - 1;
        if (v32 == 1)
        {
          swift_bridgeObjectRelease_n();
          a2 = v30;
          unint64_t v15 = v31;
          goto LABEL_12;
        }
      }
      sub_1BFF94FE4(v19, v20, v21, v22, v24, v23, v26);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_12:
      swift_beginAccess();
      uint64_t v28 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      sub_1C05550B8(v15, v28);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C108B000(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 40);
  v6[0] = *(void *)(v3 + 32);
  v6[1] = v4;
  memset(&v6[2], 0, 24);
  int v7 = 0;
  __int16 v8 = -24576;
  swift_retain();
  sub_1C0F4B3EC((uint64_t)v6, a1, v3);
  return swift_release();
}

uint64_t sub_1C108B070(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C108B3F0(&qword_1EA1AAC20, a2, (void (*)(uint64_t))type metadata accessor for FormatItemBindingsNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatItemBindingsNode()
{
  return self;
}

uint64_t sub_1C108B0EC(void *a1, uint64_t a2)
{
  a1[1] = sub_1C108B3F0(&qword_1EB867060, a2, (void (*)(uint64_t))type metadata accessor for FormatItemBindingsNode);
  a1[2] = sub_1C108B3F0(&qword_1EB867058, v3, (void (*)(uint64_t))type metadata accessor for FormatItemBindingsNode);
  uint64_t result = sub_1C108B3F0(&qword_1EA1AAC28, v4, (void (*)(uint64_t))type metadata accessor for FormatItemBindingsNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C108B198(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C108B3F0(&qword_1EA1AAC30, a2, (void (*)(uint64_t))type metadata accessor for FormatItemBindingsNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C108B1F0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C108B240@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C108B290@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C108B2E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C108B330@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatItemBindingsNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatItemBindingsNode);
}

uint64_t dispatch thunk of FormatItemBindingsNode.__allocating_init(identifier:itemIdentifier:selectors:options:styles:children:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C108B3AC()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C108B3F0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C108B438(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C108B4A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C108B500(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t static Commands.copyIssue.getter()
{
  if (qword_1EB87BDF8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE9copyIssue5issueACSo7FCIssueC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87BDF8 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  int v7 = self;
  swift_retain();
  id v8 = a1;
  id v9 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v10 = objc_msgSend(self, sel_ts_link);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v12[1] = v8;
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

id AudioColorPalette.backgroundColor.getter()
{
  return *v0;
}

id AudioColorPalette.secondaryBackgroundColor.getter()
{
  return *(id *)(v0 + 8);
}

id AudioColorPalette.primaryColor.getter()
{
  return *(id *)(v0 + 16);
}

id AudioColorPalette.secondaryColor.getter()
{
  return *(id *)(v0 + 24);
}

id AudioColorPalette.accentColor.getter()
{
  return *(id *)(v0 + 32);
}

id AudioColorPalette.iconColor.getter()
{
  return *(id *)(v0 + 40);
}

id AudioColorPalette.thumbnailPlaceholderColor.getter()
{
  return *(id *)(v0 + 48);
}

id AudioColorPalette.headphoneImageColor.getter()
{
  return *(id *)(v0 + 56);
}

id AudioColorPalette.ellipsisImageColor.getter()
{
  return *(id *)(v0 + 64);
}

id AudioColorPalette.separatorColor.getter()
{
  return *(id *)(v0 + 72);
}

uint64_t AudioColorPalette.theme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioColorPalette() + 56);
  sub_1C108B900();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioColorPalette()
{
  uint64_t result = qword_1EB85D1B8;
  if (!qword_1EB85D1B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C108B900()
{
  if (!qword_1EB85C8F0)
  {
    unint64_t v0 = sub_1C151A1DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C8F0);
    }
  }
}

BOOL static AudioColorPalette.Theme.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AudioColorPalette.Theme.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t AudioColorPalette.Theme.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C108B9E4()
{
  uint64_t v0 = type metadata accessor for AudioColorPalette();
  __swift_allocate_value_buffer(v0, qword_1EB85D1A0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EB85D1A0);
  uint64_t v2 = self;
  id v17 = objc_msgSend(v2, sel_secondarySystemBackgroundColor);
  id v3 = objc_msgSend(v2, sel_whiteColor);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.17254902, 0.17254902, 0.180392157, 1.0);
  id v16 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v4);

  id v15 = objc_msgSend(v2, sel_whiteColor);
  id v5 = objc_msgSend(v2, sel_secondaryLabelColor);
  id v6 = objc_msgSend(v2, sel_systemPinkColor);
  id v7 = objc_msgSend(v2, sel_quaternaryLabelColor);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.9, 1.0);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.1, 1.0);
  id v10 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v8, v9);

  id v11 = objc_msgSend(v2, sel_secondaryLabelColor);
  id v12 = objc_msgSend(v2, sel_labelColor);
  id v13 = objc_msgSend(v2, sel_separatorColor);
  void *v1 = v17;
  v1[1] = v16;
  v1[2] = v15;
  v1[3] = v5;
  v1[4] = v6;
  v1[5] = v7;
  v1[6] = v10;
  uint64_t result = sub_1C151A1BC();
  v1[7] = v11;
  v1[8] = v12;
  v1[9] = v13;
  return result;
}

uint64_t AudioColorPalette.init(backgroundColor:secondaryBackgroundColor:primaryColor:secondaryColor:accentColor:iconColor:thumbnailPlaceholderColor:headphoneImageColor:ellipsisImageColor:separatorColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  type metadata accessor for AudioColorPalette();
  uint64_t result = sub_1C151A1BC();
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t static AudioColorPalette.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB85E5E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for AudioColorPalette();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85D1A0);
  return sub_1C108BD64(v3, a1);
}

uint64_t sub_1C108BD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioColorPalette();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C108BDCC()
{
  unint64_t result = qword_1EA1AAC38;
  if (!qword_1EA1AAC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC38);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AudioColorPalette(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v5 = a1;
    id v6 = a2[1];
    id v7 = a2[2];
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v7;
    id v8 = a2[3];
    id v9 = a2[4];
    *((void *)a1 + 3) = v8;
    *((void *)a1 + 4) = v9;
    id v10 = a2[5];
    id v11 = a2[6];
    *((void *)a1 + 5) = v10;
    *((void *)a1 + 6) = v11;
    id v13 = a2[7];
    id v12 = a2[8];
    *((void *)a1 + 7) = v13;
    *((void *)a1 + 8) = v12;
    uint64_t v29 = a2[9];
    uint64_t v30 = v12;
    uint64_t v14 = *(int *)(a3 + 56);
    uint64_t v31 = (uint64_t)a2 + v14;
    uint64_t v32 = &a1[v14];
    *((void *)a1 + 9) = v29;
    sub_1C108B900();
    uint64_t v16 = v15;
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    id v17 = v4;
    int64_t v18 = v6;
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v9;
    uint64_t v22 = v10;
    uint64_t v23 = v11;
    uint64_t v24 = v13;
    uint64_t v25 = v30;
    unint64_t v26 = v29;
    v28(v32, v31, v16);
  }
  return v5;
}

uint64_t destroy for AudioColorPalette(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 56);
  sub_1C108B900();
  id v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for AudioColorPalette(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  id v6 = *(void **)(a2 + 16);
  id v7 = *(void **)(a2 + 24);
  a1[2] = v6;
  a1[3] = v7;
  id v9 = *(void **)(a2 + 32);
  id v8 = *(void **)(a2 + 40);
  a1[4] = v9;
  a1[5] = v8;
  id v10 = *(void **)(a2 + 48);
  id v11 = *(void **)(a2 + 56);
  a1[6] = v10;
  a1[7] = v11;
  unint64_t v26 = *(void **)(a2 + 64);
  uint64_t v12 = *(int *)(a3 + 56);
  uint64_t v30 = (char *)a1 + v12;
  uint64_t v28 = *(void **)(a2 + 72);
  uint64_t v29 = a2 + v12;
  a1[8] = v26;
  a1[9] = v28;
  sub_1C108B900();
  uint64_t v14 = v13;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  id v15 = v4;
  id v16 = v5;
  id v17 = v6;
  id v18 = v7;
  id v19 = v9;
  id v20 = v8;
  id v21 = v10;
  id v22 = v11;
  id v23 = v26;
  id v24 = v28;
  v27(v30, v29, v14);
  return a1;
}

uint64_t assignWithCopy for AudioColorPalette(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(void **)a2;
  id v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  id v9 = *(void **)(a2 + 8);
  id v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(void **)(a2 + 16);
  uint64_t v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 24);
  id v16 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v15;
  id v17 = v15;

  id v18 = *(void **)(a2 + 32);
  id v19 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v18;
  id v20 = v18;

  id v21 = *(void **)(a2 + 40);
  id v22 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v21;
  id v23 = v21;

  id v24 = *(void **)(a2 + 48);
  uint64_t v25 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v24;
  id v26 = v24;

  uint64_t v27 = *(void **)(a2 + 56);
  uint64_t v28 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v27;
  id v29 = v27;

  uint64_t v30 = *(void **)(a2 + 64);
  uint64_t v31 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v30;
  id v32 = v30;

  uint64_t v33 = *(void **)(a2 + 72);
  uint64_t v34 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v33;
  id v35 = v33;

  uint64_t v36 = *(int *)(a3 + 56);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  sub_1C108B900();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

_OWORD *initializeWithTake for AudioColorPalette(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 56);
  id v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  sub_1C108B900();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for AudioColorPalette(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  id v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2[3];

  id v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = a2[4];

  id v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = a2[5];

  uint64_t v12 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = a2[6];

  uint64_t v13 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = a2[7];

  id v14 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = a2[8];

  id v15 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = a2[9];

  uint64_t v16 = *(int *)(a3 + 56);
  uint64_t v17 = a1 + v16;
  id v18 = (char *)a2 + v16;
  sub_1C108B900();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioColorPalette(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C108C428);
}

uint64_t sub_1C108C428(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C108B900();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AudioColorPalette(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C108C4EC);
}

void *sub_1C108C4EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C108B900();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 56);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C108C594()
{
  sub_1C108B900();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for AudioColorPalette.Theme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C108C70CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioColorPalette.Theme()
{
  return &type metadata for AudioColorPalette.Theme;
}

uint64_t sub_1C108C744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C10911E4((uint64_t)v1);
  uint64_t v4 = v3;
  uint64_t v5 = sub_1C10914FC((uint64_t)v1);
  uint64_t v198 = v6;
  uint64_t v202 = v5;
  sub_1C10917E8(0, &qword_1EA1A2778, (uint64_t (*)(uint64_t))sub_1C03A1444, MEMORY[0x1E4FBBE00]);
  uint64_t v193 = swift_allocObject();
  *(_OWORD *)(v193 + 16) = xmmword_1C15C4710;
  sub_1C1098B60(0, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1531C20;
  *(void *)(v7 + 32) = 0x696669746E656449;
  *(void *)(v7 + 40) = 0xEA00000000007265;
  uint64_t v8 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v9 = (void *)((char *)v1 + v8[15]);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = MEMORY[0x1E4FBB208];
  *(void *)(v7 + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 80) = v12;
  *(void *)(v7 + 48) = v10;
  *(void *)(v7 + 56) = v11;
  *(unsigned char *)(v7 + 88) = 0;
  *(void *)(v7 + 96) = 0x656C746954;
  *(void *)(v7 + 104) = 0xE500000000000000;
  uint64_t v13 = (void *)((char *)v1 + v8[30]);
  uint64_t v14 = v13[1];
  if (v14)
  {
    *(void *)(v7 + 112) = *v13;
    *(void *)(v7 + 120) = v14;
    uint64_t v15 = MEMORY[0x1E4FBB208];
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v15 = 0;
    *(void *)(v7 + 112) = 0;
    *(void *)(v7 + 120) = 0;
    *(void *)(v7 + 128) = 0;
  }
  *(void *)(v7 + 136) = v14;
  *(void *)(v7 + 144) = v15;
  *(unsigned char *)(v7 + 152) = 0;
  uint64_t v16 = (void *)(v7 + 176);
  *(void *)(v7 + 160) = 0x65726F6353;
  *(void *)(v7 + 168) = 0xE500000000000000;
  uint64_t v194 = v1;
  unsigned int v192 = (void *)((char *)v1 + *(int *)(type metadata accessor for DebugInspectionHeadline(0) + 20));
  uint64_t v17 = MEMORY[0x1E4FBB718];
  sub_1C10954AC((uint64_t)(v192 + 7), (uint64_t)v217, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  sub_1C10954AC((uint64_t)v217, (uint64_t)v218, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, v17, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  if (sub_1C0BB0840((uint64_t)v218) == 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    *uint64_t v16 = 0;
    *(void *)(v7 + 184) = 0;
    *(void *)(v7 + 192) = 0;
  }
  else
  {
    *uint64_t v16 = v219;
    uint64_t v19 = MEMORY[0x1E4FBB440];
    uint64_t v18 = MEMORY[0x1E4FBB3D0];
  }
  *(void *)(v7 + 200) = v18;
  *(void *)(v7 + 208) = v19;
  *(unsigned char *)(v7 + 216) = 0;
  id v20 = (void *)(v7 + 240);
  *(void *)(v7 + 224) = 0x20676E69726F6353;
  *(void *)(v7 + 232) = 0xEF6E6F6973726556;
  sub_1C10954AC((uint64_t)v217, (uint64_t)v215, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  if (sub_1C0BB0840((uint64_t)v215) == 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    *id v20 = 0;
    *(void *)(v7 + 248) = 0;
    *(void *)(v7 + 256) = 0;
  }
  else
  {
    *id v20 = v216;
    uint64_t v22 = MEMORY[0x1E4FBC580];
    uint64_t v21 = MEMORY[0x1E4FBC538];
  }
  *(void *)(v7 + 264) = v21;
  *(void *)(v7 + 272) = v22;
  *(unsigned char *)(v7 + 280) = 0;
  *(void *)(v7 + 288) = 0x656372756F53;
  *(void *)(v7 + 296) = 0xE600000000000000;
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 328) = MEMORY[0x1E4FBB1A0];
  uint64_t v24 = MEMORY[0x1E4FBB208];
  *(void *)(v7 + 336) = MEMORY[0x1E4FBB208];
  *(void *)(v7 + 304) = v2;
  *(void *)(v7 + 312) = v4;
  *(unsigned char *)(v7 + 344) = 0;
  strcpy((char *)(v7 + 352), "Publisher Name");
  *(unsigned char *)(v7 + 367) = -18;
  uint64_t v25 = (char *)v1 + v8[27];
  uint64_t v26 = *((void *)v25 + 2);
  uint64_t v27 = *((void *)v25 + 3);
  *(void *)(v7 + 392) = v23;
  *(void *)(v7 + 400) = v24;
  *(void *)(v7 + 368) = v26;
  *(void *)(v7 + 376) = v27;
  *(unsigned char *)(v7 + 408) = 0;
  *(void *)(v7 + 416) = 0x72657473756C43;
  *(void *)(v7 + 424) = 0xE700000000000000;
  uint64_t v28 = v1[5];
  uint64_t v29 = v1[6];
  *(void *)(v7 + 456) = v23;
  *(void *)(v7 + 464) = v24;
  *(void *)(v7 + 432) = v28;
  *(void *)(v7 + 440) = v29;
  *(unsigned char *)(v7 + 472) = 0;
  *(void *)(v7 + 480) = 0x6565726772657645;
  *(void *)(v7 + 488) = 0xE90000000000006ELL;
  LOBYTE(v28) = *((unsigned char *)v1 + v8[20]);
  uint64_t v30 = MEMORY[0x1E4FBB390];
  *(void *)(v7 + 520) = MEMORY[0x1E4FBB390];
  uint64_t v31 = MEMORY[0x1E4FBB3B8];
  *(void *)(v7 + 528) = MEMORY[0x1E4FBB3B8];
  *(unsigned char *)(v7 + 496) = v28;
  *(unsigned char *)(v7 + 536) = 0;
  *(void *)(v7 + 544) = 0x646165722D6F43;
  *(void *)(v7 + 552) = 0xE700000000000000;
  LOBYTE(v28) = *((unsigned char *)v1 + v8[21]);
  *(void *)(v7 + 584) = v30;
  *(void *)(v7 + 592) = v31;
  *(unsigned char *)(v7 + 560) = v28;
  *(unsigned char *)(v7 + 600) = 0;
  strcpy((char *)(v7 + 608), "Issue Article");
  *(_WORD *)(v7 + 622) = -4864;
  LOBYTE(v28) = *((unsigned char *)v1 + v8[24]);
  *(void *)(v7 + 648) = v30;
  *(void *)(v7 + 656) = v31;
  *(unsigned char *)(v7 + 624) = v28;
  *(unsigned char *)(v7 + 664) = 0;
  strcpy((char *)(v7 + 672), "Scoring Type");
  *(unsigned char *)(v7 + 685) = 0;
  *(_WORD *)(v7 + 686) = -5120;
  uint64_t v32 = v192[62];
  uint64_t v33 = v192[63];
  *(void *)(v7 + 712) = v23;
  *(void *)(v7 + 720) = v24;
  *(void *)(v7 + 688) = v32;
  *(void *)(v7 + 696) = v33;
  *(unsigned char *)(v7 + 728) = 0;
  *(void *)(v7 + 736) = 0x20676E69726F6353;
  *(void *)(v7 + 744) = 0xEF747865746E6F43;
  uint64_t v34 = v192[64];
  uint64_t v35 = v192[65];
  *(void *)(v7 + 776) = v23;
  *(void *)(v7 + 784) = v24;
  *(void *)(v7 + 752) = v34;
  *(void *)(v7 + 760) = v35;
  *(unsigned char *)(v7 + 792) = 0;
  *(void *)(v7 + 800) = 0x676E6970756F7247;
  *(void *)(v7 + 808) = 0xEF6E6F7361655220;
  uint64_t v36 = v192[3];
  uint64_t v37 = v192[4];
  *(void *)(v7 + 840) = v23;
  *(void *)(v7 + 848) = v24;
  *(void *)(v7 + 816) = v36;
  *(void *)(v7 + 824) = v37;
  *(unsigned char *)(v7 + 856) = 0;
  uint64_t v38 = (void *)(v7 + 880);
  *(void *)(v7 + 864) = 0xD000000000000019;
  *(void *)(v7 + 872) = 0x80000001C1633540;
  uint64_t v39 = (char *)v1 + v8[25];
  if (v39[8])
  {
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    *uint64_t v38 = 0;
    *(void *)(v7 + 888) = 0;
    *(void *)(v7 + 896) = 0;
  }
  else
  {
    *uint64_t v38 = *(void *)v39;
    uint64_t v41 = MEMORY[0x1E4FBC220];
    uint64_t v40 = MEMORY[0x1E4FBC1C8];
  }
  *(void *)(v7 + 904) = v40;
  *(void *)(v7 + 912) = v41;
  *(unsigned char *)(v7 + 920) = 0;
  *(void *)(v7 + 928) = 0x79654B20464E41;
  *(void *)(v7 + 936) = 0xE700000000000000;
  uint64_t v42 = v1[1];
  if (v42)
  {
    *(void *)(v7 + 944) = *v194;
    *(void *)(v7 + 952) = v42;
    uint64_t v43 = MEMORY[0x1E4FBB208];
    uint64_t v44 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v43 = 0;
    *(void *)(v7 + 944) = 0;
    *(void *)(v7 + 952) = 0;
    *(void *)(v7 + 960) = 0;
  }
  *(void *)(v7 + 968) = v44;
  *(void *)(v7 + 976) = v43;
  *(unsigned char *)(v7 + 984) = 0;
  *(void *)(v7 + 992) = 0x6144206863746546;
  *(void *)(v7 + 1000) = 0xEA00000000006574;
  *(void *)(v7 + 1032) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 1040) = MEMORY[0x1E4FBB208];
  *(void *)(v7 + 1008) = v202;
  *(void *)(v7 + 1016) = v198;
  *(unsigned char *)(v7 + 1048) = 0;
  *(void *)(v193 + 56) = &type metadata for DebugInspectionDataSection;
  *(void *)(v193 + 64) = &off_1F1B9F170;
  *(void *)(v193 + 32) = 0x656E696C64616548;
  *(void *)(v193 + 40) = 0xE800000000000000;
  long long v45 = (_OWORD *)(v193 + 72);
  *(void *)(v193 + 48) = v7;
  sub_1C10954AC((uint64_t)v217, (uint64_t)__src, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  if (sub_1C0BB0840((uint64_t)__src) == 1)
  {
    *(_OWORD *)(v193 + 200) = 0u;
    *(_OWORD *)(v193 + 216) = 0u;
    *(_OWORD *)(v193 + 168) = 0u;
    *(_OWORD *)(v193 + 184) = 0u;
    *(_OWORD *)(v193 + 136) = 0u;
    *(_OWORD *)(v193 + 152) = 0u;
    *(_OWORD *)(v193 + 104) = 0u;
    *(_OWORD *)(v193 + 120) = 0u;
    *long long v45 = 0u;
    *(_OWORD *)(v193 + 88) = 0u;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C020B680((uint64_t)v45);
    sub_1C10954AC((uint64_t)v217, (uint64_t)v209, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
    memcpy(v220, v209, sizeof(v220));
    sub_1C020BAEC(v193 + 112);
    sub_1C020BC14((void *)(v193 + 152));
    sub_1C020BE70((void *)(v193 + 192));
  }
  long long v46 = v194;
  uint64_t v47 = *(void *)((char *)v194 + v8[32]);
  int64_t v48 = *(void *)(v47 + 16);
  uint64_t v49 = MEMORY[0x1E4FBC860];
  if (v48)
  {
    uint64_t v211 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v48, 0);
    uint64_t v49 = v211;
    uint64_t v50 = (uint64_t *)(v47 + 56);
    do
    {
      uint64_t v52 = *(v50 - 3);
      uint64_t v51 = *(v50 - 2);
      uint64_t v53 = *v50;
      v209[0] = *(v50 - 1);
      v209[1] = v53;
      v209[5] = MEMORY[0x1E4FBB1A0];
      v209[6] = MEMORY[0x1E4FBB208];
      v209[2] = v52;
      v209[3] = v51;
      LOBYTE(v209[7]) = 0;
      uint64_t v211 = v49;
      unint64_t v54 = *(void *)(v49 + 16);
      unint64_t v55 = *(void *)(v49 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54 >= v55 >> 1)
      {
        sub_1C05F7B68(v55 > 1, v54 + 1, 1);
        uint64_t v49 = v211;
      }
      v50 += 4;
      *(void *)(v49 + 16) = v54 + 1;
      sub_1C0A1B3F4((uint64_t)v209, v49 + (v54 << 6) + 32);
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    long long v46 = v194;
  }
  uint64_t v56 = v193;
  *(void *)(v193 + 264) = &off_1F1B9F170;
  *(void *)(v193 + 232) = 0x736369706F54;
  *(void *)(v193 + 240) = 0xE600000000000000;
  *(void *)(v193 + 248) = v49;
  *(void *)(v193 + 256) = &type metadata for DebugInspectionDataSection;
  uint64_t v57 = v192[2];
  int64_t v58 = *(void *)(v57 + 16);
  unint64_t v59 = (void *)MEMORY[0x1E4FBC860];
  if (v58)
  {
    uint64_t v213 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v58, 0);
    uint64_t v195 = v57 + 32;
    sub_1C0BB0858();
    uint64_t v60 = 0;
    int64_t v199 = v58;
    do
    {
      uint64_t v203 = v60;
      uint64_t v61 = v195 + 96 * v60;
      uint64_t v62 = *(void *)(v61 + 8);
      uint64_t v63 = *(void *)(v61 + 16);
      char v64 = *(unsigned char *)(v61 + 56);
      v209[0] = *(void *)v61;
      v209[1] = v62;
      uint64_t v65 = (void *)swift_allocObject();
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1C151E80C();
      sub_1C151EF6C();
      uint64_t v66 = 0;
      unint64_t v67 = 0;
      unint64_t v68 = v212;
      v65[4] = v211;
      v65[5] = v68;
      if ((v64 & 1) == 0)
      {
        uint64_t v211 = 0;
        unint64_t v212 = 0xE000000000000000;
        sub_1C151E80C();
        sub_1C151EF6C();
        uint64_t v66 = v211;
        unint64_t v67 = v212;
      }
      v65[6] = v66;
      v65[7] = v67;
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      unint64_t v69 = v212;
      v65[8] = v211;
      v65[9] = v69;
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      unint64_t v70 = v212;
      v65[10] = v211;
      v65[11] = v70;
      if (v63)
      {
        uint64_t v211 = 0x203A73676154;
        unint64_t v212 = 0xE600000000000000;
        uint64_t v210 = v63;
        sub_1C1098B60(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1BFE99E40();
        sub_1C151E55C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v71 = v211;
        unint64_t v72 = v212;
      }
      else
      {
        uint64_t v71 = 0;
        unint64_t v72 = 0;
      }
      uint64_t v73 = 0;
      uint64_t v204 = v203 + 1;
      v65[12] = v71;
      v65[13] = v72;
      do
      {
        uint64_t v75 = v65[v73 + 5];
        if (v75)
        {
          uint64_t v76 = v65[v73 + 4];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v59 = sub_1BFEF9B68(0, v59[2] + 1, 1, v59);
          }
          unint64_t v78 = v59[2];
          unint64_t v77 = v59[3];
          if (v78 >= v77 >> 1) {
            unint64_t v59 = sub_1BFEF9B68((void *)(v77 > 1), v78 + 1, 1, v59);
          }
          v59[2] = v78 + 1;
          uint64_t v74 = &v59[2 * v78];
          v74[4] = v76;
          v74[5] = v75;
        }
        v73 += 2;
      }
      while (v73 != 10);
      swift_setDeallocating();
      uint64_t v79 = MEMORY[0x1E4FBB1A0];
      sub_1C1098B60(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v211 = (uint64_t)v59;
      sub_1C1098B60(0, (unint64_t *)&qword_1EB879F20, v79, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      uint64_t v80 = sub_1C151E55C();
      uint64_t v82 = v81;
      swift_bridgeObjectRelease();
      v209[5] = v79;
      v209[6] = MEMORY[0x1E4FBB208];
      v209[2] = v80;
      v209[3] = v82;
      LOBYTE(v209[7]) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v83 = v213;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7B68(0, v83[2] + 1, 1);
        uint64_t v83 = v213;
      }
      unint64_t v59 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v85 = v83[2];
      unint64_t v84 = v83[3];
      if (v85 >= v84 >> 1)
      {
        sub_1C05F7B68(v84 > 1, v85 + 1, 1);
        uint64_t v83 = v213;
      }
      v83[2] = v85 + 1;
      sub_1C0A1B3F4((uint64_t)v209, (uint64_t)&v83[8 * v85 + 4]);
      uint64_t v60 = v204;
    }
    while (v204 != v199);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
    long long v46 = v194;
  }
  else
  {
    uint64_t v83 = (void *)MEMORY[0x1E4FBC860];
  }
  *(void *)(v56 + 304) = &off_1F1B9F170;
  *(void *)(v56 + 272) = 0x7365727574616546;
  *(void *)(v56 + 280) = 0xE800000000000000;
  *(void *)(v56 + 288) = v83;
  *(void *)(v56 + 296) = &type metadata for DebugInspectionDataSection;
  uint64_t v86 = v46[2];
  int64_t v87 = *(void *)(v86 + 16);
  if (v87)
  {
    uint64_t v213 = v59;
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v87, 0);
    uint64_t v196 = v86 + 32;
    sub_1C0BB0858();
    uint64_t v88 = 0;
    int64_t v200 = v87;
    do
    {
      uint64_t v205 = v88;
      uint64_t v89 = v196 + 96 * v88;
      uint64_t v90 = *(void *)(v89 + 8);
      uint64_t v91 = *(void *)(v89 + 16);
      char v92 = *(unsigned char *)(v89 + 56);
      v209[0] = *(void *)v89;
      v209[1] = v90;
      uint64_t v93 = (void *)swift_allocObject();
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1C151E80C();
      sub_1C151EF6C();
      uint64_t v94 = 0;
      unint64_t v95 = 0;
      unint64_t v96 = v212;
      v93[4] = v211;
      v93[5] = v96;
      if ((v92 & 1) == 0)
      {
        uint64_t v211 = 0;
        unint64_t v212 = 0xE000000000000000;
        sub_1C151E80C();
        sub_1C151EF6C();
        uint64_t v94 = v211;
        unint64_t v95 = v212;
      }
      v93[6] = v94;
      v93[7] = v95;
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      unint64_t v97 = v212;
      v93[8] = v211;
      v93[9] = v97;
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      unint64_t v98 = v212;
      v93[10] = v211;
      v93[11] = v98;
      if (v91)
      {
        uint64_t v211 = 0x203A73676154;
        unint64_t v212 = 0xE600000000000000;
        uint64_t v210 = v91;
        sub_1C1098B60(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1BFE99E40();
        sub_1C151E55C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v99 = v211;
        unint64_t v100 = v212;
      }
      else
      {
        uint64_t v99 = 0;
        unint64_t v100 = 0;
      }
      uint64_t v101 = 0;
      uint64_t v206 = v205 + 1;
      v93[12] = v99;
      v93[13] = v100;
      do
      {
        uint64_t v103 = v93[v101 + 5];
        if (v103)
        {
          uint64_t v104 = v93[v101 + 4];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v59 = sub_1BFEF9B68(0, v59[2] + 1, 1, v59);
          }
          unint64_t v106 = v59[2];
          unint64_t v105 = v59[3];
          if (v106 >= v105 >> 1) {
            unint64_t v59 = sub_1BFEF9B68((void *)(v105 > 1), v106 + 1, 1, v59);
          }
          v59[2] = v106 + 1;
          uint64_t v102 = &v59[2 * v106];
          v102[4] = v104;
          v102[5] = v103;
        }
        v101 += 2;
      }
      while (v101 != 10);
      swift_setDeallocating();
      uint64_t v107 = MEMORY[0x1E4FBB1A0];
      sub_1C1098B60(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v211 = (uint64_t)v59;
      sub_1C1098B60(0, (unint64_t *)&qword_1EB879F20, v107, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      uint64_t v108 = sub_1C151E55C();
      uint64_t v110 = v109;
      swift_bridgeObjectRelease();
      v209[5] = v107;
      v209[6] = MEMORY[0x1E4FBB208];
      v209[2] = v108;
      v209[3] = v110;
      LOBYTE(v209[7]) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v111 = v213;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7B68(0, v111[2] + 1, 1);
        char v111 = v213;
      }
      unint64_t v59 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v113 = v111[2];
      unint64_t v112 = v111[3];
      if (v113 >= v112 >> 1)
      {
        sub_1C05F7B68(v112 > 1, v113 + 1, 1);
        char v111 = v213;
      }
      v111[2] = v113 + 1;
      sub_1C0A1B3F4((uint64_t)v209, (uint64_t)&v111[8 * v113 + 4]);
      uint64_t v88 = v206;
    }
    while (v206 != v200);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
  }
  else
  {
    char v111 = v59;
  }
  uint64_t v114 = MEMORY[0x1E4FBB3D0];
  *(void *)(v56 + 344) = &off_1F1B9F170;
  *(void *)(v56 + 312) = 0x20656C6369747241;
  *(void *)(v56 + 320) = 0xEF7374726F686F43;
  *(void *)(v56 + 328) = v111;
  *(void *)(v56 + 336) = &type metadata for DebugInspectionDataSection;
  uint64_t v115 = v192[67];
  int64_t v116 = *(void *)(v115 + 16);
  uint64_t v117 = MEMORY[0x1E4FBC860];
  if (v116)
  {
    uint64_t v211 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v116, 0);
    uint64_t v117 = v211;
    uint64_t v118 = (unsigned char *)(v115 + 72);
    do
    {
      uint64_t v119 = *((void *)v118 - 2);
      uint64_t v120 = *((void *)v118 - 1);
      char v121 = *v118;
      v209[0] = *((void *)v118 - 3);
      v209[1] = v119;
      if (v121)
      {
        memset(&v209[2], 0, 40);
      }
      else
      {
        v209[5] = v114;
        v209[6] = MEMORY[0x1E4FBB440];
        v209[2] = v120;
      }
      LOBYTE(v209[7]) = 0;
      uint64_t v211 = v117;
      unint64_t v122 = *(void *)(v117 + 16);
      unint64_t v123 = *(void *)(v117 + 24);
      swift_bridgeObjectRetain();
      if (v122 >= v123 >> 1)
      {
        sub_1C05F7B68(v123 > 1, v122 + 1, 1);
        uint64_t v117 = v211;
      }
      *(void *)(v117 + 16) = v122 + 1;
      sub_1C0A1B3F4((uint64_t)v209, v117 + (v122 << 6) + 32);
      v118 += 48;
      --v116;
    }
    while (v116);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
  }
  *(void *)(v56 + 384) = &off_1F1B9F170;
  strcpy((char *)(v56 + 352), "User Cohorts");
  *(unsigned char *)(v56 + 365) = 0;
  *(_WORD *)(v56 + 366) = -5120;
  *(void *)(v56 + 368) = v117;
  *(void *)(v56 + 376) = &type metadata for DebugInspectionDataSection;
  uint64_t v124 = v194[7];
  int64_t v125 = *(void *)(v124 + 16);
  long long v126 = (void *)MEMORY[0x1E4FBC860];
  if (v125)
  {
    uint64_t v213 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v125, 0);
    uint64_t v197 = v124 + 32;
    sub_1C0BB0858();
    uint64_t v127 = 0;
    int64_t v201 = v125;
    do
    {
      uint64_t v207 = v127;
      uint64_t v128 = v197 + 96 * v127;
      uint64_t v129 = *(void *)(v128 + 8);
      uint64_t v130 = *(void *)(v128 + 16);
      char v131 = *(unsigned char *)(v128 + 56);
      v209[0] = *(void *)v128;
      v209[1] = v129;
      uint64_t v132 = swift_allocObject();
      *(_OWORD *)(v132 + 16) = xmmword_1C152C7E0;
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1C151E80C();
      sub_1C151EF6C();
      uint64_t v133 = 0;
      unint64_t v134 = 0;
      unint64_t v135 = v212;
      *(void *)(v132 + 32) = v211;
      *(void *)(v132 + 40) = v135;
      if ((v131 & 1) == 0)
      {
        uint64_t v211 = 0;
        unint64_t v212 = 0xE000000000000000;
        sub_1C151E80C();
        sub_1C151EF6C();
        uint64_t v133 = v211;
        unint64_t v134 = v212;
      }
      *(void *)(v132 + 48) = v133;
      *(void *)(v132 + 56) = v134;
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      unint64_t v136 = v212;
      *(void *)(v132 + 64) = v211;
      *(void *)(v132 + 72) = v136;
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      unint64_t v137 = v212;
      *(void *)(v132 + 80) = v211;
      *(void *)(v132 + 88) = v137;
      if (v130)
      {
        uint64_t v211 = 0x203A73676154;
        unint64_t v212 = 0xE600000000000000;
        uint64_t v210 = v130;
        sub_1C1098B60(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1BFE99E40();
        sub_1C151E55C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v138 = v211;
        unint64_t v139 = v212;
      }
      else
      {
        uint64_t v138 = 0;
        unint64_t v139 = 0;
      }
      uint64_t v140 = 0;
      uint64_t v208 = v207 + 1;
      *(void *)(v132 + 96) = v138;
      *(void *)(v132 + 104) = v139;
      do
      {
        uint64_t v142 = *(void *)(v132 + v140 + 40);
        if (v142)
        {
          uint64_t v143 = *(void *)(v132 + v140 + 32);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v126 = sub_1BFEF9B68(0, v126[2] + 1, 1, v126);
          }
          unint64_t v145 = v126[2];
          unint64_t v144 = v126[3];
          if (v145 >= v144 >> 1) {
            long long v126 = sub_1BFEF9B68((void *)(v144 > 1), v145 + 1, 1, v126);
          }
          v126[2] = v145 + 1;
          long long v141 = &v126[2 * v145];
          v141[4] = v143;
          v141[5] = v142;
        }
        v140 += 16;
      }
      while (v140 != 80);
      swift_setDeallocating();
      uint64_t v146 = MEMORY[0x1E4FBB1A0];
      sub_1C1098B60(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v211 = (uint64_t)v126;
      sub_1C1098B60(0, (unint64_t *)&qword_1EB879F20, v146, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      uint64_t v147 = sub_1C151E55C();
      uint64_t v149 = v148;
      swift_bridgeObjectRelease();
      v209[5] = v146;
      v209[6] = MEMORY[0x1E4FBB208];
      v209[2] = v147;
      v209[3] = v149;
      LOBYTE(v209[7]) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v150 = v213;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v114 = MEMORY[0x1E4FBB3D0];
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C05F7B68(0, v150[2] + 1, 1);
        long long v150 = v213;
      }
      long long v126 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v153 = v150[2];
      unint64_t v152 = v150[3];
      if (v153 >= v152 >> 1)
      {
        sub_1C05F7B68(v152 > 1, v153 + 1, 1);
        long long v150 = v213;
      }
      v150[2] = v153 + 1;
      sub_1C0A1B3F4((uint64_t)v209, (uint64_t)&v150[8 * v153 + 4]);
      uint64_t v127 = v208;
    }
    while (v208 != v201);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
  }
  else
  {
    long long v150 = (void *)MEMORY[0x1E4FBC860];
  }
  *(void *)(v56 + 424) = &off_1F1B9F170;
  *(void *)(v56 + 392) = 0xD000000000000012;
  *(void *)(v56 + 400) = 0x80000001C1633560;
  *(void *)(v56 + 408) = v150;
  *(void *)(v56 + 416) = &type metadata for DebugInspectionDataSection;
  uint64_t v154 = v192[5];
  int64_t v155 = *(void *)(v154 + 16);
  uint64_t v156 = MEMORY[0x1E4FBC860];
  if (v155)
  {
    uint64_t v211 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v155, 0);
    uint64_t v156 = v211;
    long long v157 = (unsigned char *)(v154 + 72);
    do
    {
      uint64_t v158 = *((void *)v157 - 2);
      uint64_t v159 = *((void *)v157 - 1);
      char v160 = *v157;
      v209[0] = *((void *)v157 - 3);
      v209[1] = v158;
      if (v160)
      {
        memset(&v209[2], 0, 40);
      }
      else
      {
        v209[5] = v114;
        v209[6] = MEMORY[0x1E4FBB440];
        v209[2] = v159;
      }
      LOBYTE(v209[7]) = 0;
      uint64_t v211 = v156;
      unint64_t v161 = *(void *)(v156 + 16);
      unint64_t v162 = *(void *)(v156 + 24);
      swift_bridgeObjectRetain();
      if (v161 >= v162 >> 1)
      {
        sub_1C05F7B68(v162 > 1, v161 + 1, 1);
        uint64_t v156 = v211;
      }
      *(void *)(v156 + 16) = v161 + 1;
      sub_1C0A1B3F4((uint64_t)v209, v156 + (v161 << 6) + 32);
      v157 += 48;
      --v155;
    }
    while (v155);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
  }
  *(void *)(v56 + 464) = &off_1F1B9F170;
  *(void *)(v56 + 432) = 0xD000000000000014;
  *(void *)(v56 + 440) = 0x80000001C1633580;
  *(void *)(v56 + 448) = v156;
  *(void *)(v56 + 456) = &type metadata for DebugInspectionDataSection;
  uint64_t v163 = v192[1];
  int64_t v164 = *(void *)(v163 + 16);
  uint64_t v165 = MEMORY[0x1E4FBC860];
  if (v164)
  {
    uint64_t v211 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v164, 0);
    uint64_t v165 = v211;
    v166 = (unsigned char *)(v163 + 72);
    do
    {
      uint64_t v167 = *((void *)v166 - 2);
      uint64_t v168 = *((void *)v166 - 1);
      char v169 = *v166;
      v209[0] = *((void *)v166 - 3);
      v209[1] = v167;
      if (v169)
      {
        memset(&v209[2], 0, 40);
      }
      else
      {
        v209[5] = v114;
        v209[6] = MEMORY[0x1E4FBB440];
        v209[2] = v168;
      }
      LOBYTE(v209[7]) = 0;
      uint64_t v211 = v165;
      unint64_t v170 = *(void *)(v165 + 16);
      unint64_t v171 = *(void *)(v165 + 24);
      swift_bridgeObjectRetain();
      if (v170 >= v171 >> 1)
      {
        sub_1C05F7B68(v171 > 1, v170 + 1, 1);
        uint64_t v165 = v211;
      }
      *(void *)(v165 + 16) = v170 + 1;
      sub_1C0A1B3F4((uint64_t)v209, v165 + (v170 << 6) + 32);
      v166 += 48;
      --v164;
    }
    while (v164);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
  }
  *(void *)(v56 + 504) = &off_1F1B9F170;
  *(void *)(v56 + 472) = 0xD000000000000016;
  *(void *)(v56 + 480) = 0x80000001C16335A0;
  *(void *)(v56 + 488) = v165;
  *(void *)(v56 + 496) = &type metadata for DebugInspectionDataSection;
  uint64_t v172 = v192[68];
  int64_t v173 = *(void *)(v172 + 16);
  uint64_t v174 = MEMORY[0x1E4FBC860];
  if (v173)
  {
    uint64_t v211 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v173, 0);
    uint64_t v174 = v211;
    long long v175 = (unsigned char *)(v172 + 72);
    do
    {
      uint64_t v176 = *((void *)v175 - 2);
      uint64_t v177 = *((void *)v175 - 1);
      char v178 = *v175;
      v209[0] = *((void *)v175 - 3);
      v209[1] = v176;
      if (v178)
      {
        memset(&v209[2], 0, 40);
      }
      else
      {
        v209[5] = v114;
        v209[6] = MEMORY[0x1E4FBB440];
        v209[2] = v177;
      }
      LOBYTE(v209[7]) = 0;
      uint64_t v211 = v174;
      unint64_t v179 = *(void *)(v174 + 16);
      unint64_t v180 = *(void *)(v174 + 24);
      swift_bridgeObjectRetain();
      if (v179 >= v180 >> 1)
      {
        sub_1C05F7B68(v180 > 1, v179 + 1, 1);
        uint64_t v174 = v211;
      }
      *(void *)(v174 + 16) = v179 + 1;
      sub_1C0A1B3F4((uint64_t)v209, v174 + (v179 << 6) + 32);
      v175 += 48;
      --v173;
    }
    while (v173);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
  }
  *(void *)(v56 + 536) = &type metadata for DebugInspectionDataSection;
  *(void *)(v56 + 544) = &off_1F1B9F170;
  *(void *)(v56 + 512) = 0x6769655720676154;
  *(void *)(v56 + 520) = 0xEB00000000737468;
  *(void *)(v56 + 528) = v174;
  uint64_t v181 = v192[69];
  int64_t v182 = *(void *)(v181 + 16);
  uint64_t v183 = MEMORY[0x1E4FBC860];
  if (v182)
  {
    uint64_t v211 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v182, 0);
    uint64_t v183 = v211;
    long long v184 = (unsigned char *)(v181 + 72);
    do
    {
      uint64_t v185 = *((void *)v184 - 2);
      uint64_t v186 = *((void *)v184 - 1);
      char v187 = *v184;
      v209[0] = *((void *)v184 - 3);
      v209[1] = v185;
      if (v187)
      {
        memset(&v209[2], 0, 40);
      }
      else
      {
        v209[5] = v114;
        v209[6] = MEMORY[0x1E4FBB440];
        v209[2] = v186;
      }
      LOBYTE(v209[7]) = 0;
      uint64_t v211 = v183;
      unint64_t v188 = *(void *)(v183 + 16);
      unint64_t v189 = *(void *)(v183 + 24);
      swift_bridgeObjectRetain();
      if (v188 >= v189 >> 1)
      {
        sub_1C05F7B68(v189 > 1, v188 + 1, 1);
        uint64_t v183 = v211;
      }
      *(void *)(v183 + 16) = v188 + 1;
      sub_1C0A1B3F4((uint64_t)v209, v183 + (v188 << 6) + 32);
      v184 += 48;
      --v182;
    }
    while (v182);
    swift_bridgeObjectRelease();
    uint64_t v56 = v193;
  }
  *(void *)(v56 + 576) = &type metadata for DebugInspectionDataSection;
  *(void *)(v56 + 584) = &off_1F1B9F170;
  *(void *)(v56 + 552) = 0x2065727574616546;
  *(void *)(v56 + 560) = 0xEF73746867696557;
  *(void *)(v56 + 568) = v183;
  uint64_t result = sub_1C03A101C(v56);
  a1[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a1[4] = (uint64_t)&off_1F1B9F238;
  *a1 = result;
  return result;
}

uint64_t sub_1C108E580(void *a1)
{
  uint64_t v2 = v1;
  sub_1C1099004(0, &qword_1EA1AACD0, (uint64_t (*)(void))sub_1C1095974, (uint64_t)&type metadata for DebugInspectionHeadline.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v15[-v7 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1095974();
  sub_1C1520F0C();
  char v17 = 0;
  type metadata accessor for DebugInspectionArticleData(0);
  sub_1C1095464(&qword_1EA1AACD8, (void (*)(uint64_t))type metadata accessor for DebugInspectionArticleData);
  uint64_t v9 = v14;
  sub_1C152080C();
  if (!v9)
  {
    uint64_t v10 = type metadata accessor for DebugInspectionHeadline(0);
    memcpy(v15, (const void *)(v2 + *(int *)(v10 + 20)), sizeof(v15));
    char v16 = 1;
    sub_1C1095D04();
    sub_1C152080C();
    uint64_t v11 = (char *)(v2 + *(int *)(v10 + 24));
    char v12 = *v11;
    LOBYTE(v11) = v11[1];
    v15[0] = v12;
    v15[1] = (_BYTE)v11;
    char v16 = 2;
    sub_1C1095D58();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C108E7E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v22 = type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1099004(0, &qword_1EA1AACA8, (uint64_t (*)(void))sub_1C1095974, (uint64_t)&type metadata for DebugInspectionHeadline.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = v5;
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = type metadata accessor for DebugInspectionHeadline(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1C1095974();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  uint64_t v12 = v21;
  uint64_t v13 = (uint64_t)v10;
  v26[0] = 0;
  sub_1C1095464(&qword_1EA1AACB8, (void (*)(uint64_t))type metadata accessor for DebugInspectionArticleData);
  uint64_t v14 = (uint64_t)v23;
  uint64_t v15 = v24;
  sub_1C15206EC();
  sub_1C10959C8(v14, v13);
  v26[599] = 1;
  sub_1C1095A2C();
  sub_1C15206EC();
  memcpy((void *)(v13 + *(int *)(v8 + 20)), v26, 0x240uLL);
  v26[596] = 2;
  sub_1C1095CB0();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v15);
  char v16 = v26[598];
  char v17 = (unsigned char *)(v13 + *(int *)(v8 + 24));
  *char v17 = v26[597];
  v17[1] = v16;
  sub_1C109569C(v13, v20, type metadata accessor for DebugInspectionHeadline);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_1C1095704(v13, type metadata accessor for DebugInspectionHeadline);
}

unint64_t sub_1C108EBE4(char a1)
{
  unint64_t result = 0x6D75636F44666E61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x43656C6369747261;
      break;
    case 2:
      unint64_t result = 0x4C656C6369747261;
      break;
    case 3:
      unint64_t result = 0x4972657473756C63;
      break;
    case 4:
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x7461446863746566;
      break;
    case 7:
      unint64_t result = 0x6566694C666C6168;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x6F69647541736168;
      break;
    case 10:
      unint64_t result = 0x6F65646956736168;
      break;
    case 11:
      unint64_t result = 0x696669746E656469;
      break;
    case 12:
      unint64_t result = 0x656E654749417369;
      break;
    case 13:
      unint64_t result = 0x726143614C416E69;
      break;
    case 14:
      unint64_t result = 0x656C646E75426E69;
      break;
    case 15:
      unint64_t result = 0x464E417369;
      break;
    case 16:
      unint64_t result = 0x7267726576457369;
      break;
    case 17:
      unint64_t result = 0x646165726F437369;
      break;
    case 18:
      unint64_t result = 0x7275746165467369;
      break;
    case 19:
      unint64_t result = 0x646961507369;
      break;
    case 20:
      unint64_t result = 0x4165757373497369;
      break;
    case 21:
      unint64_t result = 0xD000000000000017;
      break;
    case 22:
      unint64_t result = 0x446873696C627570;
      break;
    case 23:
      unint64_t result = 0x656873696C627570;
      break;
    case 24:
      unint64_t result = 0xD000000000000014;
      break;
    case 25:
      unint64_t result = 0x646174654D676174;
      break;
    case 26:
      unint64_t result = 0x656C746974;
      break;
    case 27:
      unint64_t result = 0x626D45656C746974;
      break;
    case 28:
      unint64_t result = 0x736369706F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C108EFB4(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1099004(0, &qword_1EA1AAC90, (uint64_t (*)(void))sub_1C109537C, (uint64_t)&type metadata for DebugInspectionArticleData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C109537C();
  sub_1C1520F0C();
  LOBYTE(v16) = 0;
  sub_1C152074C();
  if (!v2)
  {
    *(void *)&long long v16 = *(void *)(v3 + 16);
    char v19 = 1;
    sub_1C1098B60(0, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
    sub_1C1095764();
    sub_1C152080C();
    LOBYTE(v16) = 2;
    sub_1C15207AC();
    LOBYTE(v16) = 3;
    sub_1C15207CC();
    *(void *)&long long v16 = *(void *)(v3 + 56);
    char v19 = 4;
    sub_1C152080C();
    uint64_t v10 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    LOBYTE(v16) = 5;
    sub_1C151631C();
    sub_1C1095464((unint64_t *)&unk_1EB871150, MEMORY[0x1E4F27928]);
    sub_1C152078C();
    long long v16 = *(_OWORD *)(v3 + v10[10]);
    char v19 = 6;
    sub_1C01D8810();
    sub_1C152078C();
    LOBYTE(v16) = 7;
    sub_1C152082C();
    LOBYTE(v16) = 8;
    sub_1C152076C();
    LOBYTE(v16) = 9;
    sub_1C15207DC();
    LOBYTE(v16) = 10;
    sub_1C15207DC();
    LOBYTE(v16) = 11;
    sub_1C15207CC();
    LOBYTE(v16) = 12;
    sub_1C15207DC();
    LOBYTE(v16) = 13;
    sub_1C15207DC();
    LOBYTE(v16) = 14;
    sub_1C15207DC();
    LOBYTE(v16) = 15;
    sub_1C15207DC();
    LOBYTE(v16) = 16;
    sub_1C15207DC();
    LOBYTE(v16) = 17;
    sub_1C15207DC();
    LOBYTE(v16) = 18;
    sub_1C15207DC();
    LOBYTE(v16) = 19;
    sub_1C15207DC();
    LOBYTE(v16) = 20;
    sub_1C15207DC();
    LOBYTE(v16) = 21;
    sub_1C15207AC();
    LOBYTE(v16) = 22;
    sub_1C152076C();
    uint64_t v11 = (long long *)(v3 + v10[27]);
    long long v12 = *v11;
    uint64_t v14 = *((void *)v11 + 2);
    uint64_t v13 = *((void *)v11 + 3);
    long long v16 = v12;
    uint64_t v17 = v14;
    uint64_t v18 = v13;
    char v19 = 23;
    sub_1C0BB2524();
    sub_1C152080C();
    LOBYTE(v16) = 24;
    sub_1C152074C();
    *(void *)&long long v16 = *(void *)(v3 + v10[29]);
    char v19 = 25;
    sub_1C1098B60(0, &qword_1EA1AAC78, (uint64_t)&type metadata for DebugInspectionTagMetadata, MEMORY[0x1E4FBB320]);
    sub_1C10957F8();
    sub_1C152080C();
    LOBYTE(v16) = 26;
    sub_1C152074C();
    long long v16 = *(_OWORD *)(v3 + v10[31]);
    char v19 = 27;
    sub_1C152078C();
    *(void *)&long long v16 = *(void *)(v3 + v10[32]);
    char v19 = 28;
    sub_1C1098B60(0, &qword_1EA1A4638, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBB320]);
    sub_1C10958E0();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C108F798@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v82 - v6;
  sub_1C1099004(0, &qword_1EA1AAC68, (uint64_t (*)(void))sub_1C109537C, (uint64_t)&type metadata for DebugInspectionArticleData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v85 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v82 - v10;
  uint64_t v89 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1F4188790](v89);
  uint64_t v88 = (uint64_t *)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C109537C();
  unint64_t v84 = v11;
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v87 = v2;
    int v16 = 0;
    unsigned int v17 = 0;
  }
  else
  {
    uint64_t v83 = a2;
    uint64_t v14 = v9;
    LOBYTE(v90) = 0;
    uint64_t v15 = sub_1C152060C();
    uint64_t v26 = v88;
    *uint64_t v88 = v15;
    v26[1] = v27;
    sub_1C1098B60(0, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
    char v93 = 1;
    sub_1C10953D0();
    sub_1C15206EC();
    uint64_t v28 = v89;
    _OWORD v26[2] = v90;
    LOBYTE(v90) = 2;
    _OWORD v26[3] = sub_1C152067C();
    *((unsigned char *)v26 + 32) = v29 & 1;
    LOBYTE(v90) = 3;
    v26[5] = sub_1C152069C();
    v26[6] = v30;
    char v93 = 4;
    sub_1C15206EC();
    v26[7] = v90;
    sub_1C151631C();
    LOBYTE(v90) = 5;
    sub_1C1095464(&qword_1EB871168, MEMORY[0x1E4F27928]);
    sub_1C152065C();
    sub_1C10954AC((uint64_t)v7, (uint64_t)v26 + v28[9], (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C10917E8);
    char v93 = 6;
    sub_1C01D8CB4();
    sub_1C152065C();
    *(_OWORD *)((char *)v26 + v28[10]) = v90;
    LOBYTE(v90) = 7;
    *(uint64_t *)((char *)v26 + v28[11]) = sub_1C15206FC();
    LOBYTE(v90) = 8;
    uint64_t v31 = sub_1C152062C();
    uint64_t v32 = (char *)v26 + v28[12];
    *(void *)uint64_t v32 = v31;
    v32[8] = v33 & 1;
    LOBYTE(v90) = 9;
    char v34 = sub_1C15206AC();
    uint64_t v87 = 0;
    *((unsigned char *)v88 + v89[13]) = v34 & 1;
    LOBYTE(v90) = 10;
    uint64_t v35 = v87;
    char v36 = sub_1C15206AC();
    uint64_t v87 = v35;
    if (v35
      || (*((unsigned char *)v88 + v89[14]) = v36 & 1, LOBYTE(v90) = 11, uint64_t v37 = v87, v38 = sub_1C152069C(), (v87 = v37) != 0))
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
      int v16 = 0;
      unsigned int v17 = 123;
    }
    else
    {
      uint64_t v40 = (uint64_t *)((char *)v88 + v89[15]);
      uint64_t *v40 = v38;
      v40[1] = v39;
      LOBYTE(v90) = 12;
      uint64_t v41 = v87;
      char v42 = sub_1C15206AC();
      uint64_t v87 = v41;
      if (v41) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[16]) = v42 & 1;
      LOBYTE(v90) = 13;
      uint64_t v43 = v87;
      char v44 = sub_1C15206AC();
      uint64_t v87 = v43;
      if (v43) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[17]) = v44 & 1;
      LOBYTE(v90) = 14;
      uint64_t v45 = v87;
      char v46 = sub_1C15206AC();
      uint64_t v87 = v45;
      if (v45) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[18]) = v46 & 1;
      LOBYTE(v90) = 15;
      uint64_t v47 = v87;
      char v48 = sub_1C15206AC();
      uint64_t v87 = v47;
      if (v47) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[19]) = v48 & 1;
      LOBYTE(v90) = 16;
      uint64_t v49 = v87;
      char v50 = sub_1C15206AC();
      uint64_t v87 = v49;
      if (v49) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[20]) = v50 & 1;
      LOBYTE(v90) = 17;
      uint64_t v51 = v87;
      char v52 = sub_1C15206AC();
      uint64_t v87 = v51;
      if (v51) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[21]) = v52 & 1;
      LOBYTE(v90) = 18;
      uint64_t v53 = v87;
      char v54 = sub_1C15206AC();
      uint64_t v87 = v53;
      if (v53) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[22]) = v54 & 1;
      LOBYTE(v90) = 19;
      uint64_t v55 = v87;
      char v56 = sub_1C15206AC();
      uint64_t v87 = v55;
      if (v55) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[23]) = v56 & 1;
      LOBYTE(v90) = 20;
      uint64_t v57 = v87;
      char v58 = sub_1C15206AC();
      uint64_t v87 = v57;
      if (v57) {
        goto LABEL_46;
      }
      *((unsigned char *)v88 + v89[24]) = v58 & 1;
      LOBYTE(v90) = 21;
      uint64_t v59 = v87;
      uint64_t v60 = sub_1C152067C();
      uint64_t v87 = v59;
      if (v59) {
        goto LABEL_46;
      }
      uint64_t v62 = (char *)v88 + v89[25];
      *(void *)uint64_t v62 = v60;
      v62[8] = v61 & 1;
      LOBYTE(v90) = 22;
      uint64_t v63 = v87;
      uint64_t v64 = sub_1C152062C();
      uint64_t v87 = v63;
      if (v63) {
        goto LABEL_46;
      }
      uint64_t v66 = (char *)v88 + v89[26];
      *(void *)uint64_t v66 = v64;
      v66[8] = v65 & 1;
      char v93 = 23;
      sub_1C0BB1EE0();
      uint64_t v67 = v87;
      sub_1C15206EC();
      uint64_t v87 = v67;
      if (v67)
      {
LABEL_46:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
        int v16 = 0;
        unsigned int v17 = 2171;
      }
      else
      {
        uint64_t v68 = v91;
        uint64_t v69 = v92;
        unint64_t v70 = (char *)v88 + v89[27];
        *(_OWORD *)unint64_t v70 = v90;
        *((void *)v70 + 2) = v68;
        *((void *)v70 + 3) = v69;
        LOBYTE(v90) = 24;
        uint64_t v71 = v87;
        uint64_t v72 = sub_1C152060C();
        uint64_t v87 = v71;
        if (!v71)
        {
          uint64_t v74 = (uint64_t *)((char *)v88 + v89[28]);
          uint64_t *v74 = v72;
          v74[1] = v73;
          sub_1C1098B60(0, &qword_1EA1AAC78, (uint64_t)&type metadata for DebugInspectionTagMetadata, MEMORY[0x1E4FBB320]);
          char v93 = 25;
          sub_1C1095520();
          uint64_t v75 = v87;
          sub_1C15206EC();
          BOOL v24 = v75 == 0;
          uint64_t v87 = v75;
          if (v75)
          {
            (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
            int v23 = 0;
            int v22 = 0;
          }
          else
          {
            *(uint64_t *)((char *)v88 + v89[29]) = v90;
            LOBYTE(v90) = 26;
            uint64_t v76 = sub_1C152060C();
            uint64_t v87 = 0;
            unint64_t v78 = (uint64_t *)((char *)v88 + v89[30]);
            uint64_t *v78 = v76;
            v78[1] = v77;
            char v93 = 27;
            uint64_t v79 = v87;
            sub_1C152065C();
            uint64_t v87 = v79;
            if (v79)
            {
              (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
              int v22 = 0;
              int v23 = 1;
            }
            else
            {
              *(_OWORD *)((char *)v88 + v89[31]) = v90;
              sub_1C1098B60(0, &qword_1EA1A4638, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBB320]);
              char v93 = 28;
              sub_1C1095608();
              uint64_t v80 = v87;
              sub_1C15206EC();
              uint64_t v87 = v80;
              if (!v80)
              {
                (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
                uint64_t v81 = (uint64_t)v88;
                *(uint64_t *)((char *)v88 + v89[32]) = v90;
                sub_1C109569C(v81, v83, type metadata accessor for DebugInspectionArticleData);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
                return sub_1C1095704(v81, type metadata accessor for DebugInspectionArticleData);
              }
              (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
              int v23 = 1;
              int v22 = 1;
            }
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
          uint64_t v18 = v88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v19 = v89;
          sub_1BFF97BE4((uint64_t)v18 + v89[9]);
          int v25 = 1;
          int v16 = 1;
          LOBYTE(v21) = 1;
LABEL_11:
          uint64_t result = sub_1BFE95878(*(uint64_t *)((char *)v18 + v19[10]), *(uint64_t *)((char *)v18 + v19[10] + 8));
          if (v21) {
            goto LABEL_12;
          }
          goto LABEL_24;
        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
        unsigned int v17 = 8390779;
        int v16 = 1;
      }
    }
  }
  uint64_t v18 = v88;
  char v19 = v89;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  int v21 = (v17 >> 11) & 1;
  if (v17)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if ((v17 & 2) == 0)
    {
LABEL_6:
      if ((v17 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 8) == 0)
  {
LABEL_7:
    if ((v17 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 0x10) == 0)
  {
LABEL_8:
    if ((v17 & 0x20) == 0) {
      goto LABEL_9;
    }
LABEL_22:
    uint64_t result = sub_1BFF97BE4((uint64_t)v18 + v19[9]);
    if ((v17 & 0x40) != 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_9:
  if ((v17 & 0x40) != 0)
  {
LABEL_10:
    int v22 = 0;
    int v23 = 0;
    BOOL v24 = 0;
    int v25 = 0;
    goto LABEL_11;
  }
LABEL_23:
  int v25 = 0;
  BOOL v24 = 0;
  int v23 = 0;
  int v22 = 0;
  if ((v17 & 0x800) != 0)
  {
LABEL_12:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  if (!v16)
  {
LABEL_13:
    if (v25) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    if (!v24) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  if (!v24)
  {
LABEL_15:
    if (v23) {
      goto LABEL_16;
    }
LABEL_28:
    if (!v22) {
      return result;
    }
    return sub_1BFE95878(*(uint64_t *)((char *)v18 + v19[31]), *(uint64_t *)((char *)v18 + v19[31] + 8));
  }
LABEL_27:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_16:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v22 & 1) == 0) {
    return result;
  }
  return sub_1BFE95878(*(uint64_t *)((char *)v18 + v19[31]), *(uint64_t *)((char *)v18 + v19[31] + 8));
}

uint64_t sub_1C1090458(void *a1)
{
  sub_1C1099004(0, &qword_1EA1AAD70, (uint64_t (*)(void))sub_1C1098EC8, (uint64_t)&type metadata for DebugInspectionUserData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1098EC8();
  sub_1C1520F0C();
  char v11 = 0;
  uint64_t v7 = v9[1];
  sub_1C15207DC();
  if (!v7)
  {
    char v10 = 1;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C10905F8(char a1)
{
  unint64_t result = 0x6269737365636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x7365727574616566;
      break;
    case 3:
      unint64_t result = 0x676E6970756F7267;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 1684104562;
      break;
    case 6:
      unint64_t result = 0x6F725065726F6373;
      break;
    case 7:
      unint64_t result = 0x54676E69726F6373;
      break;
    case 8:
      unint64_t result = 0x43676E69726F6373;
      break;
    case 9:
      unint64_t result = 1852138867;
      break;
    case 10:
      unint64_t result = 0x6F686F4372657375;
      break;
    case 11:
      unint64_t result = 0x6867696557676174;
      break;
    case 12:
      unint64_t result = 0x5765727574616566;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C10907E0(void *a1)
{
  uint64_t v2 = v1;
  sub_1C1099004(0, &qword_1EA1AAD58, (uint64_t (*)(void))sub_1C1098B0C, (uint64_t)&type metadata for DebugInspectionContextData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1098B0C();
  sub_1C1520F0C();
  LOBYTE(v17[0]) = 0;
  uint64_t v9 = v16;
  sub_1C15207DC();
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v11 = *(void *)(v2 + 8);
  uint64_t v16 = v6;
  v17[0] = v11;
  char v19 = 1;
  sub_1C1098B60(0, &qword_1EA1AAD30, (uint64_t)&type metadata for DebugInspectionCohort, MEMORY[0x1E4FBB320]);
  sub_1C1098F1C();
  sub_1C152080C();
  v17[0] = *(void *)(v2 + 16);
  char v19 = 2;
  sub_1C1098B60(0, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
  sub_1C1095764();
  sub_1C152080C();
  LOBYTE(v17[0]) = 3;
  sub_1C15207CC();
  v17[0] = MEMORY[0x28];
  char v19 = 4;
  sub_1C152080C();
  LOBYTE(v17[0]) = 5;
  sub_1C15207DC();
  uint64_t v15 = 0;
  uint64_t v12 = MEMORY[0x1E4FBB718];
  sub_1C10954AC(56, (uint64_t)v18, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  sub_1C10954AC((uint64_t)v18, (uint64_t)v17, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, v12, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  char v19 = 6;
  sub_1C0BB2440();
  sub_1C152078C();
  uint64_t v13 = v15;
  LOBYTE(v17[0]) = 7;
  sub_1C15207CC();
  LOBYTE(v17[0]) = 8;
  sub_1C15207CC();
  LOBYTE(v17[0]) = 9;
  sub_1C15207DC();
  v17[0] = *(void *)(v13 + 536);
  char v19 = 10;
  sub_1C152080C();
  v17[0] = *(void *)(v15 + 544);
  char v19 = 11;
  sub_1C152080C();
  v17[0] = *(void *)(v15 + 552);
  char v19 = 12;
  sub_1C152080C();
  LOBYTE(v17[0]) = 13;
  sub_1C152074C();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v8, v5);
}

uint64_t sub_1C1090D28()
{
  uint64_t v1 = 0x44747865746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x6174614472657375;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44656C6369747261;
  }
}

uint64_t sub_1C1090D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1097C14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1090DB0(uint64_t a1)
{
  unint64_t v2 = sub_1C1095974();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1090DEC(uint64_t a1)
{
  unint64_t v2 = sub_1C1095974();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1090E28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C108E7E8(a1, a2);
}

uint64_t sub_1C1090E40(void *a1)
{
  return sub_1C108E580(a1);
}

unint64_t sub_1C1090E58()
{
  return sub_1C108EBE4(*v0);
}

uint64_t sub_1C1090E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1097EC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C1090E88(unsigned char *a1@<X8>)
{
  *a1 = 29;
}

uint64_t sub_1C1090E94(uint64_t a1)
{
  unint64_t v2 = sub_1C109537C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1090ED0(uint64_t a1)
{
  unint64_t v2 = sub_1C109537C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1090F0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C108F798(a1, a2);
}

uint64_t sub_1C1090F24(void *a1)
{
  return sub_1C108EFB4(a1);
}

uint64_t sub_1C1090F3C()
{
  if (*v0) {
    return 0x7263736275537369;
  }
  else {
    return 0x61466F7475417369;
  }
}

uint64_t sub_1C1090F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1097D98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1090FB4(uint64_t a1)
{
  unint64_t v2 = sub_1C1098EC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1090FF0(uint64_t a1)
{
  unint64_t v2 = sub_1C1098EC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C109102C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C1096DBC(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1C1091064(void *a1)
{
  return sub_1C1090458(a1);
}

unint64_t sub_1C1091094()
{
  return sub_1C10905F8(*v0);
}

uint64_t sub_1C109109C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1099484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C10910C4(uint64_t a1)
{
  unint64_t v2 = sub_1C1098B0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1091100(uint64_t a1)
{
  unint64_t v2 = sub_1C1098B0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C109113C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C1096F9C(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x240uLL);
  }
  return result;
}

uint64_t sub_1C1091190(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_1C10907E0(a1);
}

uint64_t sub_1C10911E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugInspectionArticleData(0);
  if (*(unsigned char *)(a1 + *(int *)(v2 + 84)) == 1)
  {
    uint64_t v3 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_1BFEF9B68((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    v3[2] = v5 + 1;
    uint64_t v6 = &v3[2 * v5];
    v6[4] = 0xD000000000000010;
    void v6[5] = 0x80000001C16335E0;
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = (unsigned char *)(a1 + *(int *)(type metadata accessor for DebugInspectionHeadline(0) + 24));
  if (v7[1] == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1BFEF9B68(0, v3[2] + 1, 1, v3);
    }
    unint64_t v9 = v3[2];
    unint64_t v8 = v3[3];
    if (v9 >= v8 >> 1) {
      uint64_t v3 = sub_1BFEF9B68((void *)(v8 > 1), v9 + 1, 1, v3);
    }
    v3[2] = v9 + 1;
    char v10 = &v3[2 * v9];
    v10[4] = 0x6C6F462064726148;
    v10[5] = 0xEB00000000776F6CLL;
  }
  if (*v7 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1BFEF9B68(0, v3[2] + 1, 1, v3);
    }
    unint64_t v12 = v3[2];
    unint64_t v11 = v3[3];
    if (v12 >= v11 >> 1) {
      uint64_t v3 = sub_1BFEF9B68((void *)(v11 > 1), v12 + 1, 1, v3);
    }
    v3[2] = v12 + 1;
    uint64_t v13 = &v3[2 * v12];
    v13[4] = 0x6C6F46206F747541;
    v13[5] = 0xEB00000000776F6CLL;
  }
  if (*(unsigned char *)(a1 + *(int *)(v2 + 80)) == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1BFEF9B68(0, v3[2] + 1, 1, v3);
    }
    unint64_t v15 = v3[2];
    unint64_t v14 = v3[3];
    if (v15 >= v14 >> 1) {
      uint64_t v3 = sub_1BFEF9B68((void *)(v14 > 1), v15 + 1, 1, v3);
    }
    v3[2] = v15 + 1;
    uint64_t v16 = &v3[2 * v15];
    v16[4] = 5002053;
    v16[5] = 0xE300000000000000;
  }
  else if (!v3[2])
  {
    swift_bridgeObjectRelease();
    return 0x6E776F6E6B6E55;
  }
  sub_1C1098B60(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v17 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C10914FC(uint64_t a1)
{
  sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DebugInspectionArticleData(0);
  sub_1BFF97B80(a1 + *(int *)(v9 + 36), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BFF97BE4((uint64_t)v4);
    return 0x6E776F6E6B6E55;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (qword_1EA194AE8 != -1) {
      swift_once();
    }
    unint64_t v11 = (void *)qword_1EA1AAC40;
    unint64_t v12 = (void *)sub_1C151621C();
    id v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

    uint64_t v10 = sub_1C151E62C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v10;
}

void sub_1C1091730()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v1 = (void *)sub_1C151E5EC();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  qword_1EA1AAC40 = (uint64_t)v0;
}

uint64_t type metadata accessor for DebugInspectionArticleData(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1AAC48);
}

uint64_t type metadata accessor for DebugInspectionHeadline(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1AAC58);
}

void sub_1C10917E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_1C109184C(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a3[9];
    __dst = (void *)(a1 + v10);
    unint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 56) = a2[7];
    uint64_t v12 = sub_1C151631C();
    uint64_t v57 = *(void *)(v12 - 8);
    char v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v58(v11, 1, v12))
    {
      sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v57 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v15 = a3[10];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    unint64_t v18 = v17[1];
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
    else
    {
      uint64_t v19 = *v17;
      sub_1BFE95820(*v17, v17[1]);
      *(void *)uint64_t v16 = v19;
      *((void *)v16 + 1) = v18;
    }
    uint64_t v20 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    int v21 = (char *)v4 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    *(void *)int v21 = *(void *)v22;
    v21[8] = *(unsigned char *)(v22 + 8);
    uint64_t v23 = a3[14];
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
    uint64_t v24 = a3[15];
    uint64_t v25 = a3[16];
    uint64_t v26 = (void *)((char *)v4 + v24);
    uint64_t v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    *((unsigned char *)v4 + v25) = *((unsigned char *)a2 + v25);
    uint64_t v29 = a3[18];
    *((unsigned char *)v4 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    *((unsigned char *)v4 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v30 = a3[20];
    *((unsigned char *)v4 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    uint64_t v31 = a3[22];
    *((unsigned char *)v4 + a3[21]) = *((unsigned char *)a2 + a3[21]);
    *((unsigned char *)v4 + v31) = *((unsigned char *)a2 + v31);
    uint64_t v32 = a3[24];
    *((unsigned char *)v4 + a3[23]) = *((unsigned char *)a2 + a3[23]);
    *((unsigned char *)v4 + v32) = *((unsigned char *)a2 + v32);
    uint64_t v33 = a3[25];
    uint64_t v34 = a3[26];
    uint64_t v35 = (char *)v4 + v33;
    uint64_t v36 = (uint64_t)a2 + v33;
    *(void *)uint64_t v35 = *(void *)v36;
    v35[8] = *(unsigned char *)(v36 + 8);
    uint64_t v37 = (char *)v4 + v34;
    uint64_t v38 = (uint64_t)a2 + v34;
    *(void *)uint64_t v37 = *(void *)v38;
    v37[8] = *(unsigned char *)(v38 + 8);
    uint64_t v39 = a3[27];
    uint64_t v40 = a3[28];
    uint64_t v41 = (void *)((char *)v4 + v39);
    char v42 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = v42[3];
    v41[2] = v42[2];
    v41[3] = v44;
    uint64_t v45 = (void *)((char *)v4 + v40);
    char v46 = (uint64_t *)((char *)a2 + v40);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = a3[30];
    *(void *)((char *)v4 + a3[29]) = *(uint64_t *)((char *)a2 + a3[29]);
    uint64_t v49 = (void *)((char *)v4 + v48);
    char v50 = (uint64_t *)((char *)a2 + v48);
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = a3[31];
    __dsta = (void *)((char *)v4 + v52);
    uint64_t v53 = (uint64_t *)((char *)a2 + v52);
    unint64_t v54 = *(uint64_t *)((char *)a2 + v52 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v54 >> 60 == 15)
    {
      *(_OWORD *)__dsta = *(_OWORD *)v53;
    }
    else
    {
      uint64_t v55 = *v53;
      sub_1BFE95820(*v53, v54);
      uint64_t *__dsta = v55;
      __dsta[1] = v54;
    }
    *(void *)((char *)v4 + a3[32]) = *(uint64_t *)((char *)a2 + a3[32]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C1091C30(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (uint64_t *)(a1 + a2[10]);
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_1BFE95664(*v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(a1 + a2[31]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_1BFE95664(*v9, v10);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1091DAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = a3[9];
  __dst = (void *)(a1 + v9);
  unint64_t v10 = (const void *)(a2 + v9);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v11 = sub_1C151631C();
  uint64_t v55 = *(void *)(v11 - 8);
  char v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56(v10, 1, v11))
  {
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t *)(a2 + v13);
  unint64_t v16 = v15[1];
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *v15;
    sub_1BFE95820(*v15, v15[1]);
    *(void *)uint64_t v14 = v17;
    *(void *)(v14 + 8) = v16;
  }
  uint64_t v18 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v22 = a3[15];
  uint64_t v23 = a3[16];
  uint64_t v24 = (void *)(a1 + v22);
  uint64_t v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v27 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v31 = a3[25];
  uint64_t v32 = a3[26];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = a3[27];
  uint64_t v38 = a3[28];
  uint64_t v39 = (void *)(a1 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v40[3];
  void v39[2] = v40[2];
  v39[3] = v42;
  uint64_t v43 = (void *)(a1 + v38);
  uint64_t v44 = (void *)(a2 + v38);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = a3[31];
  __dsta = (uint64_t *)(a1 + v50);
  uint64_t v51 = (uint64_t *)(a2 + v50);
  unint64_t v52 = *(void *)(a2 + v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v52 >> 60 == 15)
  {
    *(_OWORD *)__dsta = *(_OWORD *)v51;
  }
  else
  {
    uint64_t v53 = *v51;
    sub_1BFE95820(*v51, v52);
    uint64_t *__dsta = v53;
    __dsta[1] = v52;
  }
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1092140(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[10];
  uint64_t v17 = (uint64_t *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  unint64_t v19 = *(void *)(a2 + v16 + 8);
  if (*(void *)(a1 + v16 + 8) >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *v18;
      sub_1BFE95820(v20, v19);
      *uint64_t v17 = v20;
      v17[1] = v19;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v19 >> 60 == 15)
  {
    sub_1C01D91B8((uint64_t)v17);
LABEL_12:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    goto LABEL_14;
  }
  uint64_t v21 = *v18;
  sub_1BFE95820(v21, v19);
  uint64_t v22 = *v17;
  unint64_t v23 = v17[1];
  *uint64_t v17 = v21;
  v17[1] = v19;
  sub_1BFE95664(v22, v23);
LABEL_14:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v24 = a3[12];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v28 = a3[15];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  uint64_t v31 = a3[25];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  *(unsigned char *)(v32 + 8) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[26];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  *(unsigned char *)(v36 + 8) = *((unsigned char *)v37 + 8);
  *(void *)uint64_t v36 = v38;
  uint64_t v39 = a3[27];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = a2 + v39;
  void *v40 = *(void *)(a2 + v39);
  v40[1] = *(void *)(a2 + v39 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40[2] = *(void *)(v41 + 16);
  v40[3] = *(void *)(v41 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[28];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  void *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[30];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[31];
  uint64_t v49 = (uint64_t *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(a2 + v48);
  unint64_t v51 = *(void *)(a2 + v48 + 8);
  if (*(void *)(a1 + v48 + 8) >> 60 != 15)
  {
    if (v51 >> 60 != 15)
    {
      uint64_t v53 = *v50;
      sub_1BFE95820(v53, v51);
      uint64_t v54 = *v49;
      unint64_t v55 = v49[1];
      *uint64_t v49 = v53;
      v49[1] = v51;
      sub_1BFE95664(v54, v55);
      goto LABEL_21;
    }
    sub_1C01D91B8((uint64_t)v49);
    goto LABEL_19;
  }
  if (v51 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    goto LABEL_21;
  }
  uint64_t v52 = *v50;
  sub_1BFE95820(v52, v51);
  *uint64_t v49 = v52;
  v49[1] = v51;
LABEL_21:
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1092658(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 40) = v7;
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[12];
  uint64_t v16 = a3[13];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v19 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  uint64_t v20 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v22 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a3[26];
  uint64_t v28 = a3[27];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = (_OWORD *)(a1 + v28);
  uint64_t v32 = (_OWORD *)(a2 + v28);
  long long v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = a3[29];
  *(_OWORD *)(a1 + a3[28]) = *(_OWORD *)(a2 + a3[28]);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  uint64_t v35 = a3[31];
  *(_OWORD *)(a1 + a3[30]) = *(_OWORD *)(a2 + a3[30]);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  return a1;
}

uint64_t sub_1C10928E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  unint64_t v20 = *(void *)(a1 + v17 + 8);
  if (v20 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    goto LABEL_12;
  }
  unint64_t v21 = *(void *)(v19 + 8);
  if (v21 >> 60 == 15)
  {
    sub_1C01D91B8(v18);
    goto LABEL_10;
  }
  uint64_t v22 = *(void *)v18;
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v21;
  sub_1BFE95664(v22, v20);
LABEL_12:
  uint64_t v23 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  uint64_t v27 = a3[15];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  uint64_t v33 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  uint64_t v35 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  uint64_t v36 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = a3[26];
  uint64_t v40 = a3[27];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = (void *)(a1 + v40);
  uint64_t v44 = a2 + v40;
  uint64_t v45 = *(void *)(a2 + v40);
  uint64_t v46 = *(void *)(a2 + v40 + 8);
  void *v43 = v45;
  v43[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v44 + 24);
  v43[2] = *(void *)(v44 + 16);
  unint64_t v43[3] = v47;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[28];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(a2 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *uint64_t v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[30];
  uint64_t v54 = (void *)(a1 + v53);
  unint64_t v55 = (uint64_t *)(a2 + v53);
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *uint64_t v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[31];
  uint64_t v59 = (uint64_t *)(a1 + v58);
  uint64_t v60 = (uint64_t *)(a2 + v58);
  unint64_t v61 = *(void *)(a1 + v58 + 8);
  if (v61 >> 60 != 15)
  {
    unint64_t v62 = v60[1];
    if (v62 >> 60 != 15)
    {
      uint64_t v63 = *v59;
      *uint64_t v59 = *v60;
      v59[1] = v62;
      sub_1BFE95664(v63, v61);
      goto LABEL_17;
    }
    sub_1C01D91B8((uint64_t)v59);
  }
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
LABEL_17:
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1092CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1092D04);
}

uint64_t sub_1C1092D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C1092DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1092DF8);
}

uint64_t sub_1C1092DF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C1092ED0()
{
  sub_1C10917E8(319, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1C109301C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = a2[7];
    uint64_t v9 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    uint64_t v10 = v9[9];
    __dst = (char *)v4 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_1C151631C();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v71(v11, 1, v12))
    {
      sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = v9[10];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    unint64_t v19 = v18[1];
    if (v19 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    else
    {
      uint64_t v20 = *v18;
      sub_1BFE95820(*v18, v18[1]);
      *(void *)uint64_t v17 = v20;
      *((void *)v17 + 1) = v19;
    }
    *(void *)((char *)v4 + v9[11]) = *(uint64_t *)((char *)a2 + v9[11]);
    uint64_t v21 = v9[12];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (uint64_t)a2 + v21;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    *((unsigned char *)v4 + v9[13]) = *((unsigned char *)a2 + v9[13]);
    *((unsigned char *)v4 + v9[14]) = *((unsigned char *)a2 + v9[14]);
    uint64_t v24 = v9[15];
    uint64_t v25 = (void *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    *((unsigned char *)v4 + v9[16]) = *((unsigned char *)a2 + v9[16]);
    *((unsigned char *)v4 + v9[17]) = *((unsigned char *)a2 + v9[17]);
    *((unsigned char *)v4 + v9[18]) = *((unsigned char *)a2 + v9[18]);
    *((unsigned char *)v4 + v9[19]) = *((unsigned char *)a2 + v9[19]);
    *((unsigned char *)v4 + v9[20]) = *((unsigned char *)a2 + v9[20]);
    *((unsigned char *)v4 + v9[21]) = *((unsigned char *)a2 + v9[21]);
    *((unsigned char *)v4 + v9[22]) = *((unsigned char *)a2 + v9[22]);
    *((unsigned char *)v4 + v9[23]) = *((unsigned char *)a2 + v9[23]);
    *((unsigned char *)v4 + v9[24]) = *((unsigned char *)a2 + v9[24]);
    uint64_t v28 = v9[25];
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    v29[8] = *(unsigned char *)(v30 + 8);
    *(void *)uint64_t v29 = *(void *)v30;
    uint64_t v31 = v9[26];
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (uint64_t)a2 + v31;
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = *(unsigned char *)(v33 + 8);
    uint64_t v34 = v9[27];
    uint64_t v35 = (void *)((char *)v4 + v34);
    uint64_t v36 = (uint64_t *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    void *v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = v36[3];
    v35[2] = v36[2];
    v35[3] = v38;
    uint64_t v39 = v9[28];
    uint64_t v40 = (void *)((char *)v4 + v39);
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    uint64_t v42 = v41[1];
    void *v40 = *v41;
    v40[1] = v42;
    *(void *)((char *)v4 + v9[29]) = *(uint64_t *)((char *)a2 + v9[29]);
    uint64_t v43 = v9[30];
    uint64_t v44 = (void *)((char *)v4 + v43);
    uint64_t v45 = (uint64_t *)((char *)a2 + v43);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = v9[31];
    __dsta = (void *)((char *)v4 + v47);
    uint64_t v48 = (uint64_t *)((char *)a2 + v47);
    unint64_t v49 = *(uint64_t *)((char *)a2 + v47 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v49 >> 60 == 15)
    {
      *(_OWORD *)__dsta = *(_OWORD *)v48;
    }
    else
    {
      uint64_t v50 = *v48;
      sub_1BFE95820(*v48, v49);
      uint64_t *__dsta = v50;
      __dsta[1] = v49;
    }
    *(void *)((char *)v4 + v9[32]) = *(uint64_t *)((char *)a2 + v9[32]);
    uint64_t v51 = *(int *)(a3 + 20);
    uint64_t v52 = (char *)v4 + v51;
    uint64_t v53 = (uint64_t)a2 + v51;
    *uint64_t v52 = *((unsigned char *)a2 + v51);
    uint64_t v54 = *(uint64_t *)((char *)a2 + v51 + 16);
    *((void *)v52 + 1) = *(uint64_t *)((char *)a2 + v51 + 8);
    *((void *)v52 + 2) = v54;
    uint64_t v55 = *(uint64_t *)((char *)a2 + v51 + 32);
    *((void *)v52 + 3) = *(uint64_t *)((char *)a2 + v51 + 24);
    *((void *)v52 + 4) = v55;
    *((void *)v52 + 5) = *(uint64_t *)((char *)a2 + v51 + 40);
    v52[48] = *((unsigned char *)a2 + v51 + 48);
    uint64_t v56 = *(uint64_t *)((char *)a2 + v51 + 360);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v56)
    {
      *(_OWORD *)(v52 + 56) = *(_OWORD *)(v53 + 56);
      long long v57 = *(_OWORD *)(v53 + 88);
      *(_OWORD *)(v52 + 72) = *(_OWORD *)(v53 + 72);
      *(_OWORD *)(v52 + 88) = v57;
      long long v58 = *(_OWORD *)(v53 + 120);
      *(_OWORD *)(v52 + 104) = *(_OWORD *)(v53 + 104);
      *(_OWORD *)(v52 + 120) = v58;
      long long v59 = *(_OWORD *)(v53 + 152);
      *(_OWORD *)(v52 + 136) = *(_OWORD *)(v53 + 136);
      *(_OWORD *)(v52 + 152) = v59;
      long long v60 = *(_OWORD *)(v53 + 184);
      *(_OWORD *)(v52 + 168) = *(_OWORD *)(v53 + 168);
      *(_OWORD *)(v52 + 184) = v60;
      long long v61 = *(_OWORD *)(v53 + 216);
      *(_OWORD *)(v52 + 200) = *(_OWORD *)(v53 + 200);
      *(_OWORD *)(v52 + 216) = v61;
      long long v62 = *(_OWORD *)(v53 + 248);
      *(_OWORD *)(v52 + 232) = *(_OWORD *)(v53 + 232);
      *(_OWORD *)(v52 + 248) = v62;
      *((void *)v52 + 33) = *(void *)(v53 + 264);
      *((_OWORD *)v52 + 17) = *(_OWORD *)(v53 + 272);
      *((_OWORD *)v52 + 18) = *(_OWORD *)(v53 + 288);
      *((_OWORD *)v52 + 19) = *(_OWORD *)(v53 + 304);
      *((_OWORD *)v52 + 20) = *(_OWORD *)(v53 + 320);
      *((_OWORD *)v52 + 21) = *(_OWORD *)(v53 + 336);
      uint64_t v63 = *(void *)(v53 + 360);
      *((void *)v52 + 44) = *(void *)(v53 + 352);
      *((void *)v52 + 45) = v63;
      *((_OWORD *)v52 + 23) = *(_OWORD *)(v53 + 368);
      *((void *)v52 + 48) = *(void *)(v53 + 384);
      long long v64 = *(_OWORD *)(v53 + 392);
      long long v65 = *(_OWORD *)(v53 + 408);
      long long v66 = *(_OWORD *)(v53 + 440);
      *(_OWORD *)(v52 + 424) = *(_OWORD *)(v53 + 424);
      *(_OWORD *)(v52 + 440) = v66;
      *(_OWORD *)(v52 + 392) = v64;
      *(_OWORD *)(v52 + 408) = v65;
      uint64_t v67 = *(void *)(v53 + 464);
      *((void *)v52 + 57) = *(void *)(v53 + 456);
      *((void *)v52 + 58) = v67;
      *((void *)v52 + 59) = *(void *)(v53 + 472);
      *((_OWORD *)v52 + 30) = *(_OWORD *)(v53 + 480);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v52 + 56, (const void *)(v53 + 56), 0x1B8uLL);
    }
    uint64_t v68 = *(void *)(v53 + 504);
    *((void *)v52 + 62) = *(void *)(v53 + 496);
    *((void *)v52 + 63) = v68;
    *((void *)v52 + 64) = *(void *)(v53 + 512);
    *((void *)v52 + 65) = *(void *)(v53 + 520);
    v52[528] = *(unsigned char *)(v53 + 528);
    *((void *)v52 + 67) = *(void *)(v53 + 536);
    *((void *)v52 + 68) = *(void *)(v53 + 544);
    *((void *)v52 + 69) = *(void *)(v53 + 552);
    *((void *)v52 + 70) = *(void *)(v53 + 560);
    *((void *)v52 + 71) = *(void *)(v53 + 568);
    *(_WORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_WORD *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C1093604(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v5 = a1 + v4[9];
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = (uint64_t *)(a1 + v4[10]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_1BFE95664(*v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(a1 + v4[31]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_1BFE95664(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 360))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10937F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v9 = v8[9];
  __dst = (void *)(a1 + v9);
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v69(v10, 1, v11))
  {
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v14 = v8[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  unint64_t v17 = v16[1];
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v18 = *v16;
    sub_1BFE95820(*v16, v16[1]);
    *(void *)uint64_t v15 = v18;
    *(void *)(v15 + 8) = v17;
  }
  *(void *)(a1 + v8[11]) = *(void *)(a2 + v8[11]);
  uint64_t v19 = v8[12];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v22 = v8[15];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  *(unsigned char *)(a1 + v8[19]) = *(unsigned char *)(a2 + v8[19]);
  *(unsigned char *)(a1 + v8[20]) = *(unsigned char *)(a2 + v8[20]);
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(unsigned char *)(a1 + v8[22]) = *(unsigned char *)(a2 + v8[22]);
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  *(unsigned char *)(a1 + v8[24]) = *(unsigned char *)(a2 + v8[24]);
  uint64_t v26 = v8[25];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(void *)uint64_t v27 = *(void *)v28;
  uint64_t v29 = v8[26];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = v8[27];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = v34[3];
  v33[2] = v34[2];
  v33[3] = v36;
  uint64_t v37 = v8[28];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  *(void *)(a1 + v8[29]) = *(void *)(a2 + v8[29]);
  uint64_t v41 = v8[30];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = v8[31];
  __dsta = (uint64_t *)(a1 + v45);
  uint64_t v46 = (uint64_t *)(a2 + v45);
  unint64_t v47 = *(void *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47 >> 60 == 15)
  {
    *(_OWORD *)__dsta = *(_OWORD *)v46;
  }
  else
  {
    uint64_t v48 = *v46;
    sub_1BFE95820(*v46, v47);
    uint64_t *__dsta = v48;
    __dsta[1] = v47;
  }
  *(void *)(a1 + v8[32]) = *(void *)(a2 + v8[32]);
  uint64_t v49 = *(int *)(a3 + 20);
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(unsigned char *)uint64_t v50 = *(unsigned char *)(a2 + v49);
  uint64_t v52 = *(void *)(a2 + v49 + 16);
  *(void *)(v50 + 8) = *(void *)(a2 + v49 + 8);
  *(void *)(v50 + 16) = v52;
  uint64_t v53 = *(void *)(a2 + v49 + 32);
  *(void *)(v50 + 24) = *(void *)(a2 + v49 + 24);
  *(void *)(v50 + 32) = v53;
  *(void *)(v50 + 40) = *(void *)(a2 + v49 + 40);
  *(unsigned char *)(v50 + 48) = *(unsigned char *)(a2 + v49 + 48);
  uint64_t v54 = *(void *)(a2 + v49 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54)
  {
    *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
    long long v55 = *(_OWORD *)(v51 + 88);
    *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
    *(_OWORD *)(v50 + 88) = v55;
    long long v56 = *(_OWORD *)(v51 + 120);
    *(_OWORD *)(v50 + 104) = *(_OWORD *)(v51 + 104);
    *(_OWORD *)(v50 + 120) = v56;
    long long v57 = *(_OWORD *)(v51 + 152);
    *(_OWORD *)(v50 + 136) = *(_OWORD *)(v51 + 136);
    *(_OWORD *)(v50 + 152) = v57;
    long long v58 = *(_OWORD *)(v51 + 184);
    *(_OWORD *)(v50 + 168) = *(_OWORD *)(v51 + 168);
    *(_OWORD *)(v50 + 184) = v58;
    long long v59 = *(_OWORD *)(v51 + 216);
    *(_OWORD *)(v50 + 200) = *(_OWORD *)(v51 + 200);
    *(_OWORD *)(v50 + 216) = v59;
    long long v60 = *(_OWORD *)(v51 + 248);
    *(_OWORD *)(v50 + 232) = *(_OWORD *)(v51 + 232);
    *(_OWORD *)(v50 + 248) = v60;
    *(void *)(v50 + 264) = *(void *)(v51 + 264);
    *(_OWORD *)(v50 + 272) = *(_OWORD *)(v51 + 272);
    *(_OWORD *)(v50 + 288) = *(_OWORD *)(v51 + 288);
    *(_OWORD *)(v50 + 304) = *(_OWORD *)(v51 + 304);
    *(_OWORD *)(v50 + 320) = *(_OWORD *)(v51 + 320);
    *(_OWORD *)(v50 + 336) = *(_OWORD *)(v51 + 336);
    uint64_t v61 = *(void *)(v51 + 360);
    *(void *)(v50 + 352) = *(void *)(v51 + 352);
    *(void *)(v50 + 360) = v61;
    *(_OWORD *)(v50 + 368) = *(_OWORD *)(v51 + 368);
    *(void *)(v50 + 384) = *(void *)(v51 + 384);
    long long v62 = *(_OWORD *)(v51 + 392);
    long long v63 = *(_OWORD *)(v51 + 408);
    long long v64 = *(_OWORD *)(v51 + 440);
    *(_OWORD *)(v50 + 424) = *(_OWORD *)(v51 + 424);
    *(_OWORD *)(v50 + 440) = v64;
    *(_OWORD *)(v50 + 392) = v62;
    *(_OWORD *)(v50 + 408) = v63;
    uint64_t v65 = *(void *)(v51 + 464);
    *(void *)(v50 + 456) = *(void *)(v51 + 456);
    *(void *)(v50 + 464) = v65;
    *(void *)(v50 + 472) = *(void *)(v51 + 472);
    *(_OWORD *)(v50 + 480) = *(_OWORD *)(v51 + 480);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(v50 + 56), (const void *)(v51 + 56), 0x1B8uLL);
  }
  uint64_t v66 = *(void *)(v51 + 504);
  *(void *)(v50 + 496) = *(void *)(v51 + 496);
  *(void *)(v50 + 504) = v66;
  *(void *)(v50 + 512) = *(void *)(v51 + 512);
  *(void *)(v50 + 520) = *(void *)(v51 + 520);
  *(unsigned char *)(v50 + 528) = *(unsigned char *)(v51 + 528);
  *(void *)(v50 + 536) = *(void *)(v51 + 536);
  *(void *)(v50 + 544) = *(void *)(v51 + 544);
  *(void *)(v50 + 552) = *(void *)(v51 + 552);
  *(void *)(v50 + 560) = *(void *)(v51 + 560);
  *(void *)(v50 + 568) = *(void *)(v51 + 568);
  *(_WORD *)(a1 + *(int *)(a3 + 24)) = *(_WORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1093D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = v6[10];
  unint64_t v17 = (uint64_t *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  unint64_t v19 = *(void *)(a2 + v16 + 8);
  if (*(void *)(a1 + v16 + 8) >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *v18;
      sub_1BFE95820(v20, v19);
      *unint64_t v17 = v20;
      v17[1] = v19;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v19 >> 60 == 15)
  {
    sub_1C01D91B8((uint64_t)v17);
LABEL_12:
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
    goto LABEL_14;
  }
  uint64_t v21 = *v18;
  sub_1BFE95820(v21, v19);
  uint64_t v22 = *v17;
  unint64_t v23 = v17[1];
  *unint64_t v17 = v21;
  v17[1] = v19;
  sub_1BFE95664(v22, v23);
LABEL_14:
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  uint64_t v24 = v6[12];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
  uint64_t v28 = v6[15];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
  *(unsigned char *)(a1 + v6[17]) = *(unsigned char *)(a2 + v6[17]);
  *(unsigned char *)(a1 + v6[18]) = *(unsigned char *)(a2 + v6[18]);
  *(unsigned char *)(a1 + v6[19]) = *(unsigned char *)(a2 + v6[19]);
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  *(unsigned char *)(a1 + v6[21]) = *(unsigned char *)(a2 + v6[21]);
  *(unsigned char *)(a1 + v6[22]) = *(unsigned char *)(a2 + v6[22]);
  *(unsigned char *)(a1 + v6[23]) = *(unsigned char *)(a2 + v6[23]);
  *(unsigned char *)(a1 + v6[24]) = *(unsigned char *)(a2 + v6[24]);
  uint64_t v31 = v6[25];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  *(unsigned char *)(v32 + 8) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = v6[26];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  *(unsigned char *)(v36 + 8) = *((unsigned char *)v37 + 8);
  *(void *)uint64_t v36 = v38;
  uint64_t v39 = v6[27];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = a2 + v39;
  void *v40 = *(void *)(a2 + v39);
  v40[1] = *(void *)(a2 + v39 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40[2] = *(void *)(v41 + 16);
  v40[3] = *(void *)(v41 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = v6[28];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  void *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[29]) = *(void *)(a2 + v6[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = v6[30];
  uint64_t v46 = (void *)(a1 + v45);
  unint64_t v47 = (void *)(a2 + v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = v6[31];
  uint64_t v49 = (uint64_t *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(a2 + v48);
  unint64_t v51 = *(void *)(a2 + v48 + 8);
  if (*(void *)(a1 + v48 + 8) >> 60 == 15)
  {
    uint64_t v52 = a3;
    if (v51 >> 60 != 15)
    {
      uint64_t v53 = *v50;
      sub_1BFE95820(v53, v51);
      *uint64_t v49 = v53;
      v49[1] = v51;
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v52 = a3;
  if (v51 >> 60 == 15)
  {
    sub_1C01D91B8((uint64_t)v49);
LABEL_19:
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    goto LABEL_21;
  }
  uint64_t v54 = *v50;
  sub_1BFE95820(v54, v51);
  uint64_t v55 = *v49;
  unint64_t v56 = v49[1];
  *uint64_t v49 = v54;
  v49[1] = v51;
  sub_1BFE95664(v55, v56);
LABEL_21:
  *(void *)(a1 + v6[32]) = *(void *)(a2 + v6[32]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(int *)(v52 + 20);
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(unsigned char *)uint64_t v58 = *(unsigned char *)(a2 + v57);
  *(void *)(v58 + 8) = *(void *)(a2 + v57 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 24) = *(void *)(v59 + 24);
  *(void *)(v58 + 32) = *(void *)(v59 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 40) = *(void *)(v59 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v58 + 48) = *(unsigned char *)(v59 + 48);
  uint64_t v60 = *(void *)(v59 + 360);
  if (!*(void *)(v58 + 360))
  {
    if (v60)
    {
      *(void *)(v58 + 56) = *(void *)(v59 + 56);
      *(void *)(v58 + 64) = *(void *)(v59 + 64);
      *(void *)(v58 + 72) = *(void *)(v59 + 72);
      *(void *)(v58 + 80) = *(void *)(v59 + 80);
      *(void *)(v58 + 88) = *(void *)(v59 + 88);
      *(void *)(v58 + 96) = *(void *)(v59 + 96);
      *(void *)(v58 + 104) = *(void *)(v59 + 104);
      *(void *)(v58 + 112) = *(void *)(v59 + 112);
      *(void *)(v58 + 120) = *(void *)(v59 + 120);
      *(void *)(v58 + 128) = *(void *)(v59 + 128);
      *(void *)(v58 + 136) = *(void *)(v59 + 136);
      *(void *)(v58 + 144) = *(void *)(v59 + 144);
      *(void *)(v58 + 152) = *(void *)(v59 + 152);
      *(void *)(v58 + 160) = *(void *)(v59 + 160);
      *(void *)(v58 + 168) = *(void *)(v59 + 168);
      *(void *)(v58 + 176) = *(void *)(v59 + 176);
      *(void *)(v58 + 184) = *(void *)(v59 + 184);
      *(void *)(v58 + 192) = *(void *)(v59 + 192);
      *(void *)(v58 + 200) = *(void *)(v59 + 200);
      *(void *)(v58 + 208) = *(void *)(v59 + 208);
      *(void *)(v58 + 216) = *(void *)(v59 + 216);
      *(void *)(v58 + 224) = *(void *)(v59 + 224);
      *(void *)(v58 + 232) = *(void *)(v59 + 232);
      *(void *)(v58 + 240) = *(void *)(v59 + 240);
      *(void *)(v58 + 248) = *(void *)(v59 + 248);
      *(void *)(v58 + 256) = *(void *)(v59 + 256);
      *(void *)(v58 + 264) = *(void *)(v59 + 264);
      *(void *)(v58 + 272) = *(void *)(v59 + 272);
      *(void *)(v58 + 280) = *(void *)(v59 + 280);
      *(void *)(v58 + 288) = *(void *)(v59 + 288);
      *(void *)(v58 + 296) = *(void *)(v59 + 296);
      *(void *)(v58 + 304) = *(void *)(v59 + 304);
      *(void *)(v58 + 312) = *(void *)(v59 + 312);
      *(void *)(v58 + 320) = *(void *)(v59 + 320);
      *(void *)(v58 + 328) = *(void *)(v59 + 328);
      *(void *)(v58 + 336) = *(void *)(v59 + 336);
      *(void *)(v58 + 344) = *(void *)(v59 + 344);
      *(void *)(v58 + 352) = *(void *)(v59 + 352);
      *(void *)(v58 + 360) = *(void *)(v59 + 360);
      *(void *)(v58 + 368) = *(void *)(v59 + 368);
      *(void *)(v58 + 376) = *(void *)(v59 + 376);
      *(void *)(v58 + 384) = *(void *)(v59 + 384);
      long long v61 = *(_OWORD *)(v59 + 392);
      long long v62 = *(_OWORD *)(v59 + 408);
      long long v63 = *(_OWORD *)(v59 + 440);
      *(_OWORD *)(v58 + 424) = *(_OWORD *)(v59 + 424);
      *(_OWORD *)(v58 + 440) = v63;
      *(_OWORD *)(v58 + 392) = v61;
      *(_OWORD *)(v58 + 408) = v62;
      *(void *)(v58 + 456) = *(void *)(v59 + 456);
      *(void *)(v58 + 464) = *(void *)(v59 + 464);
      *(void *)(v58 + 472) = *(void *)(v59 + 472);
      *(void *)(v58 + 480) = *(void *)(v59 + 480);
      *(void *)(v58 + 488) = *(void *)(v59 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
LABEL_27:
    memcpy((void *)(v58 + 56), (const void *)(v59 + 56), 0x1B8uLL);
    goto LABEL_28;
  }
  if (!v60)
  {
    sub_1C0A1E2A8(v58 + 56);
    goto LABEL_27;
  }
  *(void *)(v58 + 56) = *(void *)(v59 + 56);
  *(void *)(v58 + 64) = *(void *)(v59 + 64);
  *(void *)(v58 + 72) = *(void *)(v59 + 72);
  *(void *)(v58 + 80) = *(void *)(v59 + 80);
  *(void *)(v58 + 88) = *(void *)(v59 + 88);
  *(void *)(v58 + 96) = *(void *)(v59 + 96);
  *(void *)(v58 + 104) = *(void *)(v59 + 104);
  *(void *)(v58 + 112) = *(void *)(v59 + 112);
  *(void *)(v58 + 120) = *(void *)(v59 + 120);
  *(void *)(v58 + 128) = *(void *)(v59 + 128);
  *(void *)(v58 + 136) = *(void *)(v59 + 136);
  *(void *)(v58 + 144) = *(void *)(v59 + 144);
  *(void *)(v58 + 152) = *(void *)(v59 + 152);
  *(void *)(v58 + 160) = *(void *)(v59 + 160);
  *(void *)(v58 + 168) = *(void *)(v59 + 168);
  *(void *)(v58 + 176) = *(void *)(v59 + 176);
  *(void *)(v58 + 184) = *(void *)(v59 + 184);
  *(void *)(v58 + 192) = *(void *)(v59 + 192);
  *(void *)(v58 + 200) = *(void *)(v59 + 200);
  *(void *)(v58 + 208) = *(void *)(v59 + 208);
  *(void *)(v58 + 216) = *(void *)(v59 + 216);
  *(void *)(v58 + 224) = *(void *)(v59 + 224);
  *(void *)(v58 + 232) = *(void *)(v59 + 232);
  *(void *)(v58 + 240) = *(void *)(v59 + 240);
  *(void *)(v58 + 248) = *(void *)(v59 + 248);
  *(void *)(v58 + 256) = *(void *)(v59 + 256);
  *(void *)(v58 + 264) = *(void *)(v59 + 264);
  *(void *)(v58 + 272) = *(void *)(v59 + 272);
  *(void *)(v58 + 280) = *(void *)(v59 + 280);
  *(void *)(v58 + 288) = *(void *)(v59 + 288);
  *(void *)(v58 + 296) = *(void *)(v59 + 296);
  *(void *)(v58 + 304) = *(void *)(v59 + 304);
  *(void *)(v58 + 312) = *(void *)(v59 + 312);
  *(void *)(v58 + 320) = *(void *)(v59 + 320);
  *(void *)(v58 + 328) = *(void *)(v59 + 328);
  *(void *)(v58 + 336) = *(void *)(v59 + 336);
  *(void *)(v58 + 344) = *(void *)(v59 + 344);
  *(void *)(v58 + 352) = *(void *)(v59 + 352);
  *(void *)(v58 + 360) = *(void *)(v59 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 368) = *(void *)(v59 + 368);
  *(void *)(v58 + 376) = *(void *)(v59 + 376);
  *(void *)(v58 + 384) = *(void *)(v59 + 384);
  *(void *)(v58 + 392) = *(void *)(v59 + 392);
  *(void *)(v58 + 400) = *(void *)(v59 + 400);
  *(void *)(v58 + 408) = *(void *)(v59 + 408);
  *(void *)(v58 + 416) = *(void *)(v59 + 416);
  *(void *)(v58 + 424) = *(void *)(v59 + 424);
  *(void *)(v58 + 432) = *(void *)(v59 + 432);
  *(void *)(v58 + 440) = *(void *)(v59 + 440);
  *(void *)(v58 + 448) = *(void *)(v59 + 448);
  *(void *)(v58 + 456) = *(void *)(v59 + 456);
  *(void *)(v58 + 464) = *(void *)(v59 + 464);
  *(void *)(v58 + 472) = *(void *)(v59 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 480) = *(void *)(v59 + 480);
  *(void *)(v58 + 488) = *(void *)(v59 + 488);
LABEL_28:
  *(void *)(v58 + 496) = *(void *)(v59 + 496);
  *(void *)(v58 + 504) = *(void *)(v59 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 512) = *(void *)(v59 + 512);
  *(void *)(v58 + 520) = *(void *)(v59 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v58 + 528) = *(unsigned char *)(v59 + 528);
  *(void *)(v58 + 536) = *(void *)(v59 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 544) = *(void *)(v59 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 552) = *(void *)(v59 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v58 + 560) = *(void *)(v59 + 560);
  *(void *)(v58 + 568) = *(void *)(v59 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = *(int *)(v52 + 24);
  uint64_t v65 = (unsigned char *)(a1 + v64);
  uint64_t v66 = (unsigned char *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  return a1;
}

uint64_t sub_1C10947C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v8 = v7[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(void *)(a1 + v7[11]) = *(void *)(a2 + v7[11]);
  uint64_t v14 = v7[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(a1 + v7[13]) = *(unsigned char *)(a2 + v7[13]);
  *(unsigned char *)(a1 + v7[14]) = *(unsigned char *)(a2 + v7[14]);
  *(_OWORD *)(a1 + v7[15]) = *(_OWORD *)(a2 + v7[15]);
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  *(unsigned char *)(a1 + v7[17]) = *(unsigned char *)(a2 + v7[17]);
  *(unsigned char *)(a1 + v7[18]) = *(unsigned char *)(a2 + v7[18]);
  *(unsigned char *)(a1 + v7[19]) = *(unsigned char *)(a2 + v7[19]);
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  *(unsigned char *)(a1 + v7[21]) = *(unsigned char *)(a2 + v7[21]);
  *(unsigned char *)(a1 + v7[22]) = *(unsigned char *)(a2 + v7[22]);
  *(unsigned char *)(a1 + v7[23]) = *(unsigned char *)(a2 + v7[23]);
  *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
  uint64_t v17 = v7[25];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  uint64_t v20 = v7[26];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = v7[27];
  uint64_t v24 = (_OWORD *)(a1 + v23);
  uint64_t v25 = (_OWORD *)(a2 + v23);
  long long v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  *(_OWORD *)(a1 + v7[28]) = *(_OWORD *)(a2 + v7[28]);
  *(void *)(a1 + v7[29]) = *(void *)(a2 + v7[29]);
  *(_OWORD *)(a1 + v7[30]) = *(_OWORD *)(a2 + v7[30]);
  *(_OWORD *)(a1 + v7[31]) = *(_OWORD *)(a2 + v7[31]);
  *(void *)(a1 + v7[32]) = *(void *)(a2 + v7[32]);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x240uLL);
  *(_WORD *)(a1 + *(int *)(a3 + 24)) = *(_WORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C1094AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v8 = v7[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1C10917E8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = v7[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  unint64_t v20 = *(void *)(a1 + v17 + 8);
  if (v20 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    goto LABEL_12;
  }
  unint64_t v21 = *(void *)(v19 + 8);
  if (v21 >> 60 == 15)
  {
    sub_1C01D91B8(v18);
    goto LABEL_10;
  }
  uint64_t v22 = *(void *)v18;
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v21;
  sub_1BFE95664(v22, v20);
LABEL_12:
  *(void *)(a1 + v7[11]) = *(void *)(a2 + v7[11]);
  uint64_t v23 = v7[12];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(unsigned char *)(a1 + v7[13]) = *(unsigned char *)(a2 + v7[13]);
  *(unsigned char *)(a1 + v7[14]) = *(unsigned char *)(a2 + v7[14]);
  uint64_t v26 = v7[15];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  *(unsigned char *)(a1 + v7[17]) = *(unsigned char *)(a2 + v7[17]);
  *(unsigned char *)(a1 + v7[18]) = *(unsigned char *)(a2 + v7[18]);
  *(unsigned char *)(a1 + v7[19]) = *(unsigned char *)(a2 + v7[19]);
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  *(unsigned char *)(a1 + v7[21]) = *(unsigned char *)(a2 + v7[21]);
  *(unsigned char *)(a1 + v7[22]) = *(unsigned char *)(a2 + v7[22]);
  *(unsigned char *)(a1 + v7[23]) = *(unsigned char *)(a2 + v7[23]);
  *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
  uint64_t v31 = v7[25];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  uint64_t v34 = v7[26];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = v7[27];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = a2 + v37;
  uint64_t v40 = *(void *)(a2 + v37 + 8);
  *uint64_t v38 = *(void *)(a2 + v37);
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v39 + 24);
  v38[2] = *(void *)(v39 + 16);
  v38[3] = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = v7[28];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  void *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[29]) = *(void *)(a2 + v7[29]);
  swift_bridgeObjectRelease();
  uint64_t v47 = v7[30];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  void *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = v7[31];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  unint64_t v55 = *(void *)(a1 + v52 + 8);
  if (v55 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    uint64_t v56 = a3;
  }
  else
  {
    unint64_t v57 = *(void *)(v54 + 8);
    uint64_t v56 = a3;
    if (v57 >> 60 == 15)
    {
      sub_1C01D91B8(v53);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    }
    else
    {
      uint64_t v58 = *(void *)v53;
      *(void *)uint64_t v53 = *(void *)v54;
      *(void *)(v53 + 8) = v57;
      sub_1BFE95664(v58, v55);
    }
  }
  *(void *)(a1 + v7[32]) = *(void *)(a2 + v7[32]);
  swift_bridgeObjectRelease();
  uint64_t v59 = *(int *)(v56 + 20);
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  *(unsigned char *)uint64_t v60 = *(unsigned char *)(a2 + v59);
  *(void *)(v60 + 8) = *(void *)(a2 + v59 + 8);
  swift_bridgeObjectRelease();
  *(void *)(v60 + 16) = *(void *)(v61 + 16);
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void *)(v61 + 32);
  *(void *)(v60 + 24) = *(void *)(v61 + 24);
  *(void *)(v60 + 32) = v62;
  swift_bridgeObjectRelease();
  *(void *)(v60 + 40) = *(void *)(v61 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v60 + 48) = *(unsigned char *)(v61 + 48);
  if (!*(void *)(v60 + 360)) {
    goto LABEL_21;
  }
  if (!*(void *)(v61 + 360))
  {
    sub_1C0A1E2A8(v60 + 56);
LABEL_21:
    memcpy((void *)(v60 + 56), (const void *)(v61 + 56), 0x1B8uLL);
    goto LABEL_22;
  }
  *(_OWORD *)(v60 + 56) = *(_OWORD *)(v61 + 56);
  long long v63 = *(_OWORD *)(v61 + 88);
  *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
  *(_OWORD *)(v60 + 88) = v63;
  long long v64 = *(_OWORD *)(v61 + 120);
  *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
  *(_OWORD *)(v60 + 120) = v64;
  long long v65 = *(_OWORD *)(v61 + 152);
  *(_OWORD *)(v60 + 136) = *(_OWORD *)(v61 + 136);
  *(_OWORD *)(v60 + 152) = v65;
  long long v66 = *(_OWORD *)(v61 + 184);
  *(_OWORD *)(v60 + 168) = *(_OWORD *)(v61 + 168);
  *(_OWORD *)(v60 + 184) = v66;
  long long v67 = *(_OWORD *)(v61 + 216);
  *(_OWORD *)(v60 + 200) = *(_OWORD *)(v61 + 200);
  *(_OWORD *)(v60 + 216) = v67;
  long long v68 = *(_OWORD *)(v61 + 248);
  *(_OWORD *)(v60 + 232) = *(_OWORD *)(v61 + 232);
  *(_OWORD *)(v60 + 248) = v68;
  *(void *)(v60 + 264) = *(void *)(v61 + 264);
  *(_OWORD *)(v60 + 272) = *(_OWORD *)(v61 + 272);
  *(_OWORD *)(v60 + 288) = *(_OWORD *)(v61 + 288);
  *(_OWORD *)(v60 + 304) = *(_OWORD *)(v61 + 304);
  *(_OWORD *)(v60 + 320) = *(_OWORD *)(v61 + 320);
  *(_OWORD *)(v60 + 336) = *(_OWORD *)(v61 + 336);
  uint64_t v69 = *(void *)(v61 + 360);
  *(void *)(v60 + 352) = *(void *)(v61 + 352);
  *(void *)(v60 + 360) = v69;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v60 + 368) = *(_OWORD *)(v61 + 368);
  *(_OWORD *)(v60 + 384) = *(_OWORD *)(v61 + 384);
  *(_OWORD *)(v60 + 400) = *(_OWORD *)(v61 + 400);
  *(_OWORD *)(v60 + 416) = *(_OWORD *)(v61 + 416);
  *(_OWORD *)(v60 + 432) = *(_OWORD *)(v61 + 432);
  *(void *)(v60 + 448) = *(void *)(v61 + 448);
  *(_OWORD *)(v60 + 456) = *(_OWORD *)(v61 + 456);
  *(void *)(v60 + 472) = *(void *)(v61 + 472);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v60 + 480) = *(_OWORD *)(v61 + 480);
LABEL_22:
  uint64_t v70 = *(void *)(v61 + 504);
  *(void *)(v60 + 496) = *(void *)(v61 + 496);
  *(void *)(v60 + 504) = v70;
  swift_bridgeObjectRelease();
  *(void *)(v60 + 512) = *(void *)(v61 + 512);
  *(void *)(v60 + 520) = *(void *)(v61 + 520);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v60 + 528) = *(unsigned char *)(v61 + 528);
  *(void *)(v60 + 536) = *(void *)(v61 + 536);
  swift_bridgeObjectRelease();
  *(void *)(v60 + 544) = *(void *)(v61 + 544);
  swift_bridgeObjectRelease();
  *(void *)(v60 + 552) = *(void *)(v61 + 552);
  swift_bridgeObjectRelease();
  *(void *)(v60 + 560) = *(void *)(v61 + 560);
  *(void *)(v60 + 568) = *(void *)(v61 + 568);
  swift_bridgeObjectRelease();
  uint64_t v71 = *(int *)(v56 + 24);
  uint64_t v72 = (unsigned char *)(a1 + v71);
  uint64_t v73 = (unsigned char *)(a2 + v71);
  *uint64_t v72 = *v73;
  v72[1] = v73[1];
  return a1;
}

uint64_t sub_1C1095130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1095144);
}

uint64_t sub_1C1095144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C1095208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C109521C);
}

uint64_t sub_1C109521C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DebugInspectionArticleData(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C10952DC()
{
  uint64_t result = type metadata accessor for DebugInspectionArticleData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C109537C()
{
  unint64_t result = qword_1EA1AAC70;
  if (!qword_1EA1AAC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC70);
  }
  return result;
}

unint64_t sub_1C10953D0()
{
  unint64_t result = qword_1EA1A4658;
  if (!qword_1EA1A4658)
  {
    sub_1C1098B60(255, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
    sub_1C0BB1F80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4658);
  }
  return result;
}

uint64_t sub_1C1095464(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10954AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

unint64_t sub_1C1095520()
{
  unint64_t result = qword_1EA1AAC80;
  if (!qword_1EA1AAC80)
  {
    sub_1C1098B60(255, &qword_1EA1AAC78, (uint64_t)&type metadata for DebugInspectionTagMetadata, MEMORY[0x1E4FBB320]);
    sub_1C10955B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC80);
  }
  return result;
}

unint64_t sub_1C10955B4()
{
  unint64_t result = qword_1EA1AAC88;
  if (!qword_1EA1AAC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC88);
  }
  return result;
}

unint64_t sub_1C1095608()
{
  unint64_t result = qword_1EA1A4640;
  if (!qword_1EA1A4640)
  {
    sub_1C1098B60(255, &qword_1EA1A4638, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBB320]);
    sub_1C0BB1EE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4640);
  }
  return result;
}

uint64_t sub_1C109569C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1095704(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C1095764()
{
  unint64_t result = qword_1EA1A4688;
  if (!qword_1EA1A4688)
  {
    sub_1C1098B60(255, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
    sub_1C0BB2608();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4688);
  }
  return result;
}

unint64_t sub_1C10957F8()
{
  unint64_t result = qword_1EA1AAC98;
  if (!qword_1EA1AAC98)
  {
    sub_1C1098B60(255, &qword_1EA1AAC78, (uint64_t)&type metadata for DebugInspectionTagMetadata, MEMORY[0x1E4FBB320]);
    sub_1C109588C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAC98);
  }
  return result;
}

unint64_t sub_1C109588C()
{
  unint64_t result = qword_1EA1AACA0;
  if (!qword_1EA1AACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACA0);
  }
  return result;
}

unint64_t sub_1C10958E0()
{
  unint64_t result = qword_1EA1A4678;
  if (!qword_1EA1A4678)
  {
    sub_1C1098B60(255, &qword_1EA1A4638, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBB320]);
    sub_1C0BB2524();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4678);
  }
  return result;
}

unint64_t sub_1C1095974()
{
  unint64_t result = qword_1EA1AACB0;
  if (!qword_1EA1AACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACB0);
  }
  return result;
}

uint64_t sub_1C10959C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugInspectionArticleData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C1095A2C()
{
  unint64_t result = qword_1EA1AACC0;
  if (!qword_1EA1AACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACC0);
  }
  return result;
}

uint64_t sub_1C1095A80(uint64_t a1)
{
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v23 = *(void *)(a1 + 80);
  uint64_t v24 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 112);
  uint64_t v20 = *(void *)(a1 + 104);
  long long v17 = *(_OWORD *)(a1 + 136);
  long long v18 = *(_OWORD *)(a1 + 120);
  long long v15 = *(_OWORD *)(a1 + 168);
  long long v16 = *(_OWORD *)(a1 + 152);
  long long v13 = *(_OWORD *)(a1 + 200);
  long long v14 = *(_OWORD *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 232);
  long long v12 = *(_OWORD *)(a1 + 216);
  long long v9 = *(_OWORD *)(a1 + 264);
  long long v10 = *(_OWORD *)(a1 + 248);
  long long v7 = *(_OWORD *)(a1 + 296);
  long long v8 = *(_OWORD *)(a1 + 280);
  long long v5 = *(_OWORD *)(a1 + 328);
  long long v6 = *(_OWORD *)(a1 + 312);
  long long v3 = *(_OWORD *)(a1 + 360);
  long long v4 = *(_OWORD *)(a1 + 344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0BB1D40(v26, v25, v24, v23, v22, v21, v20, v19, v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1C1095CB0()
{
  unint64_t result = qword_1EA1AACC8;
  if (!qword_1EA1AACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACC8);
  }
  return result;
}

unint64_t sub_1C1095D04()
{
  unint64_t result = qword_1EA1AACE0;
  if (!qword_1EA1AACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACE0);
  }
  return result;
}

unint64_t sub_1C1095D58()
{
  unint64_t result = qword_1EA1AACE8;
  if (!qword_1EA1AACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionHeadline.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1095E78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionHeadline.CodingKeys()
{
  return &type metadata for DebugInspectionHeadline.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionArticleData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 28 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 28) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE3)
  {
    unsigned int v6 = ((a2 - 228) >> 8) + 1;
    *unint64_t result = a2 + 28;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1095F7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 28;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionArticleData.CodingKeys()
{
  return &type metadata for DebugInspectionArticleData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionUserData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1096080);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionUserData()
{
  return &type metadata for DebugInspectionUserData;
}

uint64_t destroy for DebugInspectionContextData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 360))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugInspectionContextData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    long long v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v7;
    long long v8 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v8;
    long long v9 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v9;
    long long v10 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v10;
    long long v11 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v11;
    long long v12 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v12;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    uint64_t v13 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = v13;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    long long v14 = *(_OWORD *)(a2 + 392);
    long long v15 = *(_OWORD *)(a2 + 408);
    long long v16 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v16;
    *(_OWORD *)(a1 + 392) = v14;
    *(_OWORD *)(a1 + 408) = v15;
    uint64_t v17 = *(void *)(a2 + 464);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = v17;
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x1B8uLL);
  }
  uint64_t v18 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v18;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionContextData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 360);
  if (!*(void *)(a1 + 360))
  {
    if (v4)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      long long v5 = *(_OWORD *)(a2 + 392);
      long long v6 = *(_OWORD *)(a2 + 408);
      long long v7 = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
      *(_OWORD *)(a1 + 440) = v7;
      *(_OWORD *)(a1 + 392) = v5;
      *(_OWORD *)(a1 + 408) = v6;
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x1B8uLL);
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_1C0A1E2A8(a1 + 56);
    goto LABEL_7;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
LABEL_8:
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy576_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x240uLL);
}

uint64_t assignWithTake for DebugInspectionContextData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (!*(void *)(a1 + 360)) {
    goto LABEL_5;
  }
  if (!*(void *)(a2 + 360))
  {
    sub_1C0A1E2A8(a1 + 56);
LABEL_5:
    memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x1B8uLL);
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v5;
  long long v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v6;
  long long v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  long long v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v8;
  long long v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v9;
  long long v10 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v10;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  uint64_t v11 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
LABEL_6:
  uint64_t v12 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionContextData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 576)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionContextData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 568) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 576) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 576) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionContextData()
{
  return &type metadata for DebugInspectionContextData;
}

unint64_t sub_1C1096BB0()
{
  unint64_t result = qword_1EA1AACF0;
  if (!qword_1EA1AACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACF0);
  }
  return result;
}

unint64_t sub_1C1096C08()
{
  unint64_t result = qword_1EA1AACF8;
  if (!qword_1EA1AACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AACF8);
  }
  return result;
}

unint64_t sub_1C1096C60()
{
  unint64_t result = qword_1EA1AAD00;
  if (!qword_1EA1AAD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD00);
  }
  return result;
}

unint64_t sub_1C1096CB8()
{
  unint64_t result = qword_1EA1AAD08;
  if (!qword_1EA1AAD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD08);
  }
  return result;
}

unint64_t sub_1C1096D10()
{
  unint64_t result = qword_1EA1AAD10;
  if (!qword_1EA1AAD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD10);
  }
  return result;
}

unint64_t sub_1C1096D68()
{
  unint64_t result = qword_1EA1AAD18;
  if (!qword_1EA1AAD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD18);
  }
  return result;
}

uint64_t sub_1C1096DBC(void *a1)
{
  sub_1C1099004(0, &qword_1EA1AAD48, (uint64_t (*)(void))sub_1C1098EC8, (uint64_t)&type metadata for DebugInspectionUserData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1098EC8();
  sub_1C1520EBC();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v14 = 0;
  char v8 = sub_1C15206AC();
  char v13 = 1;
  char v10 = sub_1C15206AC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if (v10) {
    int v11 = 256;
  }
  else {
    int v11 = 0;
  }
  return v11 & 0xFFFFFFFE | v8 & 1;
}

void *sub_1C1096F9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C1099004(0, &qword_1EA1AAD20, (uint64_t (*)(void))sub_1C1098B0C, (uint64_t)&type metadata for DebugInspectionContextData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v45 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v30 - v7;
  uint64_t v9 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1C1098B0C();
  sub_1C1520EBC();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  }
  uint64_t v43 = a2;
  uint64_t v44 = v6;
  LOBYTE(v48[0]) = 0;
  char v10 = sub_1C15206AC();
  int v11 = v10 & 1;
  LOBYTE(v51[0]) = v10 & 1;
  sub_1C1098B60(0, &qword_1EA1AAD30, (uint64_t)&type metadata for DebugInspectionCohort, MEMORY[0x1E4FBB320]);
  LOBYTE(v47[0]) = 1;
  unint64_t v12 = sub_1C1098BAC();
  sub_1C15206EC();
  unint64_t v42 = v12;
  int v52 = v11;
  uint64_t v13 = v48[0];
  v51[1] = v48[0];
  sub_1C1098B60(0, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
  LOBYTE(v47[0]) = 2;
  sub_1C10953D0();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v41 = v13;
  uint64_t v14 = v48[0];
  v51[2] = v48[0];
  LOBYTE(v48[0]) = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C152069C();
  v51[3] = v15;
  v51[4] = v16;
  LOBYTE(v47[0]) = 4;
  uint64_t v40 = v16;
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v39 = v14;
  uint64_t v17 = v48[0];
  v51[5] = v48[0];
  LOBYTE(v48[0]) = 5;
  swift_bridgeObjectRetain();
  char v18 = sub_1C15206AC();
  uint64_t v38 = v17;
  LODWORD(v17) = v18 & 1;
  LOBYTE(v51[6]) = v18 & 1;
  char v54 = 6;
  sub_1C0BB1D8C();
  sub_1C152065C();
  int v37 = v17;
  uint64_t v19 = MEMORY[0x1E4FBB718];
  sub_1C10954AC((uint64_t)&v50, (uint64_t)v49, (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  sub_1C10954AC((uint64_t)v49, (uint64_t)&v51[7], (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, v19, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  LOBYTE(v48[0]) = 7;
  sub_1C0BB1DE0((uint64_t)v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0BB1E94);
  uint64_t v35 = sub_1C152069C();
  uint64_t v36 = v20;
  v51[62] = v35;
  v51[63] = v20;
  LOBYTE(v48[0]) = 8;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C152069C();
  uint64_t v22 = v36;
  uint64_t v34 = v21;
  v51[64] = v21;
  v51[65] = v23;
  LOBYTE(v48[0]) = 9;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  char v25 = sub_1C15206AC() & 1;
  LOBYTE(v51[66]) = v25;
  LOBYTE(v47[0]) = 10;
  sub_1C15206EC();
  v51[67] = v48[0];
  LOBYTE(v47[0]) = 11;
  uint64_t v33 = v48[0];
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  v51[68] = v48[0];
  LOBYTE(v47[0]) = 12;
  uint64_t v32 = v48[0];
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  v51[69] = v48[0];
  char v53 = 13;
  unint64_t v42 = v48[0];
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C152060C();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v45);
  uint64_t v28 = v31;
  v51[70] = v31;
  v51[71] = v27;
  LOBYTE(v47[0]) = v52;
  v47[1] = v41;
  v47[2] = v39;
  v47[3] = v15;
  v47[4] = v40;
  v47[5] = v38;
  LOBYTE(v47[6]) = v37;
  sub_1C10954AC((uint64_t)v49, (uint64_t)&v47[7], (uint64_t)&qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1098B60);
  v47[62] = v35;
  v47[63] = v22;
  v47[64] = v34;
  v47[65] = v24;
  LOBYTE(v47[66]) = v25;
  v47[67] = v33;
  v47[68] = v32;
  v47[69] = v42;
  v47[70] = v28;
  v47[71] = v27;
  sub_1C1098C94((uint64_t)v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0BB1DE0((uint64_t)v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0BB1D40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  memcpy(v48, v51, sizeof(v48));
  sub_1C1095A80((uint64_t)v48);
  return memcpy(v43, v47, 0x240uLL);
}

uint64_t sub_1C1097C14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44747865746E6F63 && a2 == 0xEB00000000617461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C1097D98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61466F7475417369 && a2 == 0xEF64657469726F76;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C1097EC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D75636F44666E61 && a2 == 0xEE0079654B746E65;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43656C6369747261 && a2 == 0xEE007374726F686FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C656C6369747261 && a2 == 0xED00006874676E65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972657473756C63 && a2 == 0xE900000000000044 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1633600 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446863746566 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1633620 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6566694C666C6168 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1633640 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F69647541736168 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F65646956736168 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x656E654749417369 && a2 == 0xED00006465746172 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x726143614C416E69 && a2 == 0xEA00000000006574 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656C646E75426E69 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x464E417369 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x7267726576457369 && a2 == 0xEB000000006E6565 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x646165726F437369 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x7275746165467369 && a2 == 0xEA00000000006465 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x4165757373497369 && a2 == 0xEE00656C63697472 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C1633660 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x656873696C627570 && a2 == 0xE900000000000072 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1633680 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x646174654D676174 && a2 == 0xEB00000000617461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x626D45656C746974 && a2 == 0xEE00676E69646465 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x736369706F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 28;
    }
    else {
      return 29;
    }
  }
}

unint64_t sub_1C1098B0C()
{
  unint64_t result = qword_1EA1AAD28;
  if (!qword_1EA1AAD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD28);
  }
  return result;
}

void sub_1C1098B60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C1098BAC()
{
  unint64_t result = qword_1EA1AAD38;
  if (!qword_1EA1AAD38)
  {
    sub_1C1098B60(255, &qword_1EA1AAD30, (uint64_t)&type metadata for DebugInspectionCohort, MEMORY[0x1E4FBB320]);
    sub_1C1098C40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD38);
  }
  return result;
}

unint64_t sub_1C1098C40()
{
  unint64_t result = qword_1EA1AAD40;
  if (!qword_1EA1AAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD40);
  }
  return result;
}

uint64_t sub_1C1098C94(uint64_t a1)
{
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v23 = *(void *)(a1 + 80);
  uint64_t v24 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 112);
  uint64_t v20 = *(void *)(a1 + 104);
  long long v17 = *(_OWORD *)(a1 + 136);
  long long v18 = *(_OWORD *)(a1 + 120);
  long long v15 = *(_OWORD *)(a1 + 168);
  long long v16 = *(_OWORD *)(a1 + 152);
  long long v13 = *(_OWORD *)(a1 + 200);
  long long v14 = *(_OWORD *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 232);
  long long v12 = *(_OWORD *)(a1 + 216);
  long long v9 = *(_OWORD *)(a1 + 264);
  long long v10 = *(_OWORD *)(a1 + 248);
  long long v7 = *(_OWORD *)(a1 + 296);
  long long v8 = *(_OWORD *)(a1 + 280);
  long long v5 = *(_OWORD *)(a1 + 328);
  long long v6 = *(_OWORD *)(a1 + 312);
  long long v3 = *(_OWORD *)(a1 + 360);
  long long v4 = *(_OWORD *)(a1 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0BB1E94(v26, v25, v24, v23, v22, v21, v20, v19, v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1C1098EC8()
{
  unint64_t result = qword_1EA1AAD50;
  if (!qword_1EA1AAD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD50);
  }
  return result;
}

unint64_t sub_1C1098F1C()
{
  unint64_t result = qword_1EA1AAD60;
  if (!qword_1EA1AAD60)
  {
    sub_1C1098B60(255, &qword_1EA1AAD30, (uint64_t)&type metadata for DebugInspectionCohort, MEMORY[0x1E4FBB320]);
    sub_1C1098FB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD60);
  }
  return result;
}

unint64_t sub_1C1098FB0()
{
  unint64_t result = qword_1EA1AAD68;
  if (!qword_1EA1AAD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD68);
  }
  return result;
}

void sub_1C1099004(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionUserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1099138);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionUserData.CodingKeys()
{
  return &type metadata for DebugInspectionUserData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionContextData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C109923CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionContextData.CodingKeys()
{
  return &type metadata for DebugInspectionContextData.CodingKeys;
}

unint64_t sub_1C1099278()
{
  unint64_t result = qword_1EA1AAD78;
  if (!qword_1EA1AAD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD78);
  }
  return result;
}

unint64_t sub_1C10992D0()
{
  unint64_t result = qword_1EA1AAD80;
  if (!qword_1EA1AAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD80);
  }
  return result;
}

unint64_t sub_1C1099328()
{
  unint64_t result = qword_1EA1AAD88;
  if (!qword_1EA1AAD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD88);
  }
  return result;
}

unint64_t sub_1C1099380()
{
  unint64_t result = qword_1EA1AAD90;
  if (!qword_1EA1AAD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD90);
  }
  return result;
}

unint64_t sub_1C10993D8()
{
  unint64_t result = qword_1EA1AAD98;
  if (!qword_1EA1AAD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAD98);
  }
  return result;
}

unint64_t sub_1C1099430()
{
  unint64_t result = qword_1EA1AADA0;
  if (!qword_1EA1AADA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AADA0);
  }
  return result;
}

uint64_t sub_1C1099484(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6269737365636361 && a2 == 0xEA0000000000656CLL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C16336A0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E6970756F7267 && a2 == 0xEE006E6F73616552 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C16336C0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684104562 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F725065726F6373 && a2 == 0xEC000000656C6966 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x54676E69726F6373 && a2 == 0xEB00000000657079 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x43676E69726F6373 && a2 == 0xEE00747865746E6FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1852138867 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F686F4372657375 && a2 == 0xEB00000000737472 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6867696557676174 && a2 == 0xEA00000000007374 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x5765727574616566 && a2 == 0xEE00737468676965 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16336E0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

id sub_1C1099AB0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contentSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1C1099AE4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentSize_, *a1, a1[1]);
}

void sub_1C1099BB8()
{
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  BOOL v2 = v1;
  id v3 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v5 = (void *)sub_1C151E5EC();
  objc_msgSend(v4, sel_setTitle_, v5);

  id v6 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C15320E0;
  long long v8 = (void *)sub_1C151E5EC();
  id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v11 = v0;
  id v12 = objc_msgSend(v10, sel_initWithImage_style_target_action_, v9, 0, v11, sel_doDismiss);

  *(void *)(v7 + 32) = v12;
  sub_1C151EBEC();
  sub_1C03E7D9C();
  long long v13 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setRightBarButtonItems_, v13);

  long long v14 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_tableView];
  objc_msgSend(v14, sel_setDataSource_, v11);
  objc_msgSend(v14, sel_setDelegate_, v11);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, sel_setTableFooterView_, v15);

  type metadata accessor for DebugFormatContentSizeCategoryCell();
  sub_1C151F26C();
  type metadata accessor for DebugFormatSwitchCell();
  sub_1C151F26C();
  id v16 = objc_msgSend(v11, sel_view);
  if (v16)
  {
    long long v17 = v16;
    objc_msgSend(v16, sel_addSubview_, v14);

    uint64_t v21 = v14;
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = v14;
    uint64_t v19 = sub_1C1515D8C();
    swift_release();
    swift_release();

    uint64_t v20 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_contentSizeObserver];
    *(void *)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_contentSizeObserver] = v19;

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1C1099F8C(void **a1, uint64_t a2, uint64_t a3)
{
  id v3 = *a1;
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1C18C9C60](v4);
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v3, sel_contentSize);
    objc_msgSend(v6, sel_setPreferredContentSize_, 320.0);

    id v7 = objc_msgSend(v6, sel_view);
    if (v7)
    {
      long long v8 = v7;
      objc_msgSend(v7, sel_setNeedsLayout);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for DebugFormatAccessibilityViewController()
{
  return self;
}

unint64_t sub_1C109A288()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_sections);
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (result >= *(void *)(v1 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v3 = *(void *)(v1 + 24 * result + 48);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (result >= *(void *)(v3 + 16))
  {
LABEL_22:
    __break(1u);
    return result;
  }
  int v4 = *(unsigned __int8 *)(v3 + result + 32);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 == 1)
    {
      type metadata accessor for DebugFormatSwitchCell();
      uint64_t v5 = (char *)sub_1C151F24C();
      objc_msgSend(v5, sel_setSelectionStyle_, 0);
      id v6 = objc_msgSend(v5, sel_textLabel);
      if (v6)
      {
        id v7 = v6;
        long long v8 = (void *)sub_1C151E5EC();
        objc_msgSend(v7, sel_setText_, v8);
      }
      id v9 = objc_msgSend(v5, sel_textLabel);
      if (v9)
      {
        id v10 = v9;
        id v11 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v10, sel_setFont_, v11);
      }
      id v12 = *(id *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl];
      swift_retain();
      sub_1C151709C();
      swift_release();
      objc_msgSend(v12, sel_setOn_, v30);

      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      long long v14 = (uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      uint64_t v15 = *(void *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      id v16 = sub_1C109AAC4;
    }
    else
    {
      type metadata accessor for DebugFormatSwitchCell();
      uint64_t v5 = (char *)sub_1C151F24C();
      objc_msgSend(v5, sel_setSelectionStyle_, 0);
      id v22 = objc_msgSend(v5, sel_textLabel);
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = (void *)sub_1C151E5EC();
        objc_msgSend(v23, sel_setText_, v24);
      }
      id v25 = objc_msgSend(v5, sel_textLabel);
      if (v25)
      {
        uint64_t v26 = v25;
        id v27 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v26, sel_setFont_, v27);
      }
      id v28 = *(id *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl];
      swift_retain();
      sub_1C151709C();
      swift_release();
      objc_msgSend(v28, sel_setOn_, v31);

      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      long long v14 = (uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      uint64_t v15 = *(void *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      id v16 = sub_1C109AAA0;
    }
  }
  else
  {
    type metadata accessor for DebugFormatContentSizeCategoryCell();
    uint64_t v5 = (char *)sub_1C151F24C();
    objc_msgSend(v5, sel_setSelectionStyle_, 0);
    swift_retain();
    sub_1C151709C();
    swift_release();
    uint64_t v17 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory;
    v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory] = v29;
    id v18 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label];
    sub_1C01A1674(v29);
    uint64_t v19 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setText_, v19);

    LOBYTE(v20) = v5[v17];
    *(float *)&double v21 = (float)v20;
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_slider], sel_setValue_, v21);
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    long long v14 = (uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_onChangeBlock];
    uint64_t v15 = *(void *)&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_onChangeBlock];
    id v16 = sub_1C109AAE8;
  }
  *long long v14 = v16;
  v14[1] = (uint64_t (*)(uint64_t))v13;
  sub_1BFC3E5C0(v15);
  return (unint64_t)v5;
}

uint64_t sub_1C109A790(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    int v4 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1C15170AC();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C109A830(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    int v4 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1C15170AC();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C109AA68()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C109AAA0(uint64_t a1)
{
  return sub_1C109A830(a1, v1);
}

uint64_t sub_1C109AAC4(uint64_t a1)
{
  return sub_1C109A830(a1, v1);
}

uint64_t sub_1C109AAE8(uint64_t a1)
{
  return sub_1C109A790(a1, v1);
}

id sub_1C109AAF0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contentSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1C109AB24(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentSize_, *a1, a1[1]);
}

void sub_1C109AB38(void **a1, uint64_t a2)
{
  sub_1C1099F8C(a1, a2, v2);
}

id sub_1C109AB40(uint64_t a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_tableView;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  id v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_contentSizeObserver] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_editor] = a1;
  sub_1BFE4F744(0, &qword_1EA1AADD8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
  *(void *)(v8 + 32) = 0x7A69532074786554;
  *(void *)(v8 + 40) = 0xE900000000000065;
  *(void *)(v8 + 48) = &unk_1F1B89B88;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0xE000000000000000;
  *(void *)(v8 + 72) = &unk_1F1B89BB0;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_sections] = v8;
  swift_retain();

  v10.receiver = v7;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t FormatTextNodeStyle.style(text:context:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  swift_retain();
  swift_retain();
  id v9 = sub_1BFF636C0(v5, a3);
  if (v4)
  {
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BFF6492C(v9, v5, (objc_class *)a3, 18, v12);
    type metadata accessor for FormatAttributedString();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BFF6364C((uint64_t)v12);
    sub_1BFF63168(a1, a2, (uint64_t)v12);
    sub_1BFF630AC((uint64_t)v12);
    sub_1BFF2BB80((uint64_t)a3);
    a2 = v10;
    swift_release();
    sub_1BFF630AC((uint64_t)v12);
  }
  return a2;
}

uint64_t FormatTextNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C109AE3C()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[5];
  uint64_t v37 = v0[4];
  uint64_t v38 = v0[2];
  swift_beginAccess();
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if (v4 < 0)
    {
      uint64_t v6 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v7 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v8 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      char v9 = *(unsigned char *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v6;
      *(void *)(v10 + 24) = v7;
      *(void *)(v10 + 32) = v8;
      *(unsigned char *)(v10 + 40) = v9;
      uint64_t v4 = v10 | 0x6000000000000000;
      sub_1BFF67F78(v6, v7, v8, v9);
    }
    else
    {
      swift_retain();
    }
  }
  uint64_t v52 = v4;
  sub_1BFF66964((uint64_t)(v1 + 8), (uint64_t)v54, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v54, (uint64_t)v55, (unint64_t *)&qword_1EB873B18);
  if (sub_1C044587C((uint64_t)v55) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v54;
  }
  else
  {
    sub_1BFF6530C((uint64_t)v55, (uint64_t)v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0D0C0E8((uint64_t)v50);
    sub_1BFF6530C((uint64_t)v50, (uint64_t)v51);
    sub_1BFF6530C((uint64_t)v51, (uint64_t)v43);
    nullsub_1();
    id v11 = v43;
  }
  sub_1BFF66964((uint64_t)v11, (uint64_t)v53, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v53, (uint64_t)v51, (unint64_t *)&qword_1EB873B18);
  uint64_t v12 = v1[24];
  uint64_t v36 = v5;
  if (v12) {
    uint64_t v13 = sub_1C096BB70(v12);
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v1[25];
  uint64_t v15 = v1[26];
  long long v16 = *(_OWORD *)(v1 + 27);
  uint64_t v17 = v1[29];
  long long v18 = *((_OWORD *)v1 + 15);
  long long v19 = *((_OWORD *)v1 + 16);
  uint64_t v20 = v1[34];
  int v21 = *((unsigned __int8 *)v1 + 280);
  if (v21 != 254)
  {
    v43[0] = v1[29];
    long long v34 = v18;
    long long v35 = v16;
    long long v33 = v19;
    sub_1C10E55EC(v50);
    long long v19 = v33;
    long long v18 = v34;
    long long v16 = v35;
    uint64_t v17 = v50[0];
    uint64_t v15 = v15;
  }
  *(void *)&v44[0] = v14;
  *((void *)&v44[0] + 1) = v15;
  v44[1] = v16;
  long long v46 = v18;
  long long v47 = v19;
  uint64_t v45 = v17;
  uint64_t v48 = v20;
  char v49 = v21;
  uint64_t v22 = v1[36];
  sub_1BFF66964((uint64_t)(v1 + 37), (uint64_t)v50, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)v50, (uint64_t)v43, (unint64_t *)&qword_1EB876CA0);
  uint64_t v23 = v1[62];
  char v24 = *((unsigned char *)v1 + 504);
  uint64_t v42 = v1[64];
  uint64_t v25 = v1[65];
  uint64_t v26 = v1[66];
  if (v25 == 9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((~v26 & 0xF000000000000007) != 0)
    {
      v40[0] = v1[66];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C10E55EC(v41);
      uint64_t v26 = v41[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFEF8750(v25, v26);
    }
    uint64_t v25 = v25;
  }
  v41[0] = v25;
  v41[1] = v26;
  uint64_t v27 = v1[67];
  uint64_t v28 = v1[68];
  uint64_t v29 = v27;
  if (v27 != 9)
  {
    if ((~v28 & 0xF000000000000007) != 0)
    {
      uint64_t v39 = v1[68];
      sub_1C10E55EC(v40);
      uint64_t v28 = v40[0];
    }
    else
    {
      sub_1BFEF8750(v27, v1[68]);
    }
    uint64_t v27 = v29;
  }
  v40[0] = v27;
  v40[1] = v28;
  char v30 = *((unsigned char *)v1 + 552);
  uint64_t v39 = v1[70];
  uint64_t v31 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v38, v2, v37, v3, v36, &v52, (uint64_t)v51, v13, v44, v22, (uint64_t)v43, v23, v24, &v42, v41, v40, v30, &v39);
  swift_bridgeObjectRetain();
  return v31;
}

uint64_t FormatTextNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatTextNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatTextNodeStyle.font.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

void *FormatTextNodeStyle.fill.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF66964(v1 + 64, (uint64_t)v4, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v4, a1, (unint64_t *)&qword_1EB873B18);
  return sub_1BFF65020(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
}

uint64_t FormatTextNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 208);
  uint64_t v4 = *(void *)(v1 + 216);
  uint64_t v5 = *(void *)(v1 + 224);
  uint64_t v6 = *(void *)(v1 + 232);
  uint64_t v7 = *(void *)(v1 + 240);
  uint64_t v8 = *(void *)(v1 + 248);
  uint64_t v9 = *(void *)(v1 + 256);
  uint64_t v10 = *(void *)(v1 + 264);
  uint64_t v11 = *(void *)(v1 + 272);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 280);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatTextNodeStyle.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.paragraphStyle.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF66964(v1 + 296, (uint64_t)v4, (unint64_t *)&qword_1EB876CA0);
  return sub_1BFF66964((uint64_t)v4, a1, (unint64_t *)&qword_1EB876CA0);
}

uint64_t FormatTextNodeStyle.tracking.getter()
{
  return *(void *)(v0 + 496);
}

uint64_t FormatTextNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 512);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.strikethrough.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 520);
  uint64_t v3 = *(void *)(v1 + 528);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEF8720(v2, v3);
}

uint64_t FormatTextNodeStyle.underline.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 536);
  uint64_t v3 = *(void *)(v1 + 544);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEF8720(v2, v3);
}

uint64_t FormatTextNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 552);
}

uint64_t FormatTextNodeStyle.baselineOffset.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 560);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.__allocating_init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, long long *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, char a17, uint64_t *a18)
{
  uint64_t v21 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1, a14, a15, a16, a17, a18);
  return v21;
}

uint64_t FormatTextNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.font.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

void *FormatTextNodeStyle.Selector.fill.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF66964(v1 + 24, (uint64_t)v4, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v4, a1, (unint64_t *)&qword_1EB873B18);
  return sub_1BFF65020(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
}

uint64_t FormatTextNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 176);
  uint64_t v5 = *(void *)(v1 + 184);
  uint64_t v6 = *(void *)(v1 + 192);
  uint64_t v7 = *(void *)(v1 + 200);
  uint64_t v8 = *(void *)(v1 + 208);
  uint64_t v9 = *(void *)(v1 + 216);
  uint64_t v10 = *(void *)(v1 + 224);
  uint64_t v11 = *(void *)(v1 + 232);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 240);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatTextNodeStyle.Selector.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.paragraphStyle.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF66964(v1 + 256, (uint64_t)v4, (unint64_t *)&qword_1EB876CA0);
  return sub_1BFF66964((uint64_t)v4, a1, (unint64_t *)&qword_1EB876CA0);
}

uint64_t FormatTextNodeStyle.Selector.tracking.getter()
{
  return *(void *)(v0 + 456);
}

uint64_t FormatTextNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 472);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.strikethrough.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 480);
  uint64_t v3 = *(void *)(v1 + 488);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEF8720(v2, v3);
}

uint64_t FormatTextNodeStyle.Selector.underline.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 496);
  uint64_t v3 = *(void *)(v1 + 504);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEF8720(v2, v3);
}

uint64_t FormatTextNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 512);
}

uint64_t FormatTextNodeStyle.Selector.baselineOffset.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 520);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.formattedStyle(text:context:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  swift_retain();
  swift_retain();
  uint64_t v9 = sub_1BFF636C0(v5, a3);
  if (v4)
  {
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BFF6492C(v9, v5, (objc_class *)a3, 18, v12);
    type metadata accessor for FormatAttributedString();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BFF6364C((uint64_t)v12);
    sub_1C0E84D78(a1, a2, v12);
    sub_1BFF2BB80((uint64_t)a3);
    a2 = v10;
    swift_release();
    sub_1BFF630AC((uint64_t)v12);
  }
  return a2;
}

void sub_1C109B94C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6, void *a7)
{
  double v24 = -99999.0;
  uint64_t v13 = *MEMORY[0x1E4FB06F8];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &v24;
  *(void *)(v14 + 24) = a6;
  *(double *)(v14 + 32) = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1C109EFE0;
  *(void *)(v15 + 24) = v14;
  uint64_t v22 = sub_1C109EFFC;
  uint64_t v23 = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFDA5E24;
  uint64_t v21 = &block_descriptor_46;
  long long v16 = _Block_copy(aBlock);
  id v17 = a6;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_enumerateAttribute_inRange_options_usingBlock_, v13, a2, a3, 0x100000, v16);
  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v13)
  {
    __break(1u);
  }
  else if (v24 <= -99999.0)
  {
    swift_release();
  }
  else
  {
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
    sub_1BFC816B4(a1, (uint64_t)aBlock);
    if (v21)
    {
      sub_1BFC39268(0, &qword_1EA1AAE00);
      if (swift_dynamicCast())
      {
        objc_msgSend(v18, sel_setParagraphStyle_, v19);
      }
    }
    else
    {
      sub_1BFEFE4A0((uint64_t)aBlock);
    }
    objc_msgSend(v18, sel_setLineSpacing_, v24);
    objc_msgSend(a7, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0738], v18, a2, a3);
    swift_release();
  }
}

void sub_1C109BBF8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, double *a6, void *a7)
{
  sub_1BFC816B4(a1, (uint64_t)v19);
  if (v20)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    if (swift_dynamicCast())
    {
      double v12 = *a6;
      id v13 = objc_msgSend(a7, sel_attributedSubstringFromRange_, a2, a3);
      id v14 = objc_msgSend(v13, sel_string);

      if (!v14)
      {
        sub_1C151E62C();
        id v14 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v18, sel_ts_tightenedLineSpacingForString_minimumLineSpacingMultiple_, v14, a4);
      double v16 = v15;

      if (v12 > v16) {
        double v17 = v12;
      }
      else {
        double v17 = v16;
      }
      *a6 = v17;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v19);
  }
}

uint64_t sub_1C109BD38()
{
  uint64_t v1 = *v0;
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF66964(v1 + 64, (uint64_t)v6, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v6, (uint64_t)v7, (unint64_t *)&qword_1EB873B18);
  if (sub_1C044587C((uint64_t)v7) == 1)
  {
    *(void *)(inited + 64) = 0;
    *(_OWORD *)(inited + 32) = 0u;
    *(_OWORD *)(inited + 48) = 0u;
  }
  else
  {
    *(void *)(inited + 56) = &type metadata for FormatFill;
    *(void *)(inited + 64) = &protocol witness table for FormatFill;
    uint64_t v3 = swift_allocObject();
    *(void *)(inited + 32) = v3;
    sub_1BFF6530C((uint64_t)v7, v3 + 16);
  }
  sub_1BFF65020(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  uint64_t v4 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v4;
}

uint64_t sub_1C109BEA4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 528);
  return result;
}

uint64_t _s8NewsFeed19FormatTextNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v70 = *((void *)a1 + 2);
  double v71 = *a1;
  sub_1BFF66964((uint64_t)(a1 + 3), (uint64_t)v109, (unint64_t *)&qword_1EB873B18);
  uint64_t v69 = *((void *)a1 + 19);
  uint64_t v63 = *((void *)a1 + 20);
  uint64_t v64 = *((void *)a1 + 21);
  uint64_t v65 = *((void *)a1 + 22);
  uint64_t v66 = *((void *)a1 + 23);
  uint64_t v67 = *((void *)a1 + 25);
  uint64_t v59 = *((void *)a1 + 24);
  uint64_t v60 = *((void *)a1 + 26);
  uint64_t v61 = *((void *)a1 + 27);
  uint64_t v62 = *((void *)a1 + 28);
  uint64_t v58 = *((void *)a1 + 29);
  int v68 = *((unsigned __int8 *)a1 + 240);
  uint64_t v48 = *((void *)a1 + 31);
  sub_1BFF66964((uint64_t)(a1 + 32), (uint64_t)v110, (unint64_t *)&qword_1EB876CA0);
  double v5 = a1[57];
  char v46 = *((unsigned char *)a1 + 464);
  uint64_t v44 = *((void *)a1 + 59);
  uint64_t v41 = *((void *)a1 + 61);
  uint64_t v42 = *((void *)a1 + 60);
  uint64_t v40 = *((void *)a1 + 62);
  uint64_t v37 = *((void *)a1 + 63);
  int v35 = *((unsigned __int8 *)a1 + 512);
  uint64_t v34 = *((void *)a1 + 65);
  double v6 = *a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v8 = *((void *)a2 + 2);
  sub_1BFF66964((uint64_t)(a2 + 3), (uint64_t)v111, (unint64_t *)&qword_1EB873B18);
  uint64_t v10 = *((void *)a2 + 19);
  uint64_t v9 = *((void *)a2 + 20);
  uint64_t v51 = *((void *)a2 + 21);
  uint64_t v52 = *((void *)a2 + 22);
  uint64_t v53 = *((void *)a2 + 23);
  uint64_t v54 = *((void *)a2 + 24);
  uint64_t v55 = *((void *)a2 + 25);
  uint64_t v56 = *((void *)a2 + 26);
  uint64_t v57 = *((void *)a2 + 27);
  uint64_t v49 = *((void *)a2 + 29);
  uint64_t v50 = *((void *)a2 + 28);
  int v11 = *((unsigned __int8 *)a2 + 240);
  uint64_t v47 = *((void *)a2 + 31);
  sub_1BFF66964((uint64_t)(a2 + 32), (uint64_t)v112, (unint64_t *)&qword_1EB876CA0);
  double v12 = a2[57];
  int v13 = *((unsigned __int8 *)a2 + 464);
  uint64_t v43 = *((void *)a2 + 59);
  uint64_t v45 = *((void *)a2 + 60);
  uint64_t v38 = *((void *)a2 + 62);
  uint64_t v39 = *((void *)a2 + 61);
  uint64_t v36 = *((void *)a2 + 63);
  int v14 = *((unsigned __int8 *)a2 + 512);
  uint64_t v15 = *((void *)a2 + 65);
  if (*(void *)&v71 == *(void *)&v6 && v4 == v7 || (v16 = sub_1C1520A9C(), uint64_t result = 0, (v16 & 1) != 0))
  {
    if ((~v70 & 0xF000000000000007) != 0)
    {
      uint64_t v90 = v70;
      if ((~v8 & 0xF000000000000007) != 0)
      {
        uint64_t v79 = v8;
        swift_retain_n();
        char v18 = static FormatFont.== infix(_:_:)(&v90, (unint64_t *)&v79);
        swift_release();
        sub_1BFEF68C0(v70);
        if ((v18 & 1) == 0) {
          return 0;
        }
LABEL_11:
        sub_1BFF66964((uint64_t)v109, (uint64_t)v108, (unint64_t *)&qword_1EB873B18);
        if (sub_1C044587C((uint64_t)v108) == 1)
        {
          sub_1BFF66964((uint64_t)v111, (uint64_t)&v90, (unint64_t *)&qword_1EB873B18);
          if (sub_1C044587C((uint64_t)&v90) == 1) {
            goto LABEL_20;
          }
        }
        else
        {
          sub_1BFF66964((uint64_t)v109, (uint64_t)&v79, (unint64_t *)&qword_1EB873B18);
          sub_1BFF66964((uint64_t)v111, (uint64_t)&v90, (unint64_t *)&qword_1EB873B18);
          if (sub_1C044587C((uint64_t)&v90) != 1)
          {
            sub_1BFF66964((uint64_t)v111, (uint64_t)v73, (unint64_t *)&qword_1EB873B18);
            sub_1BFF6530C((uint64_t)v73, (uint64_t)v72);
            sub_1BFF66964((uint64_t)v109, (uint64_t)v75, (unint64_t *)&qword_1EB873B18);
            sub_1BFF65020(v109, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
            sub_1BFF65020(v75, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
            char v19 = _s8NewsFeed10FormatFillO2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)v72);
            sub_1BFF6530C((uint64_t)&v79, (uint64_t)&v77);
            sub_1BFF65020(&v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
            sub_1BFF65020(v109, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
            if ((v19 & 1) == 0) {
              return 0;
            }
LABEL_20:
            if (v69)
            {
              if (!v10) {
                return 0;
              }
              swift_bridgeObjectRetain();
              uint64_t v20 = swift_bridgeObjectRetain();
              BOOL v21 = sub_1C00DFB58(v20, v10);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!v21) {
                return 0;
              }
            }
            else if (v10)
            {
              return 0;
            }
            char v22 = v68;
            if (v68 == 254)
            {
              uint64_t v24 = v60;
              uint64_t v23 = v61;
              uint64_t v25 = v67;
              if (v11 == 254) {
                goto LABEL_32;
              }
            }
            else
            {
              uint64_t v90 = v63;
              uint64_t v91 = v64;
              uint64_t v92 = v65;
              uint64_t v93 = v66;
              uint64_t v24 = v60;
              uint64_t v94 = v59;
              uint64_t v95 = v67;
              uint64_t v96 = v60;
              uint64_t v23 = v61;
              uint64_t v97 = v61;
              uint64_t v98 = v62;
              uint64_t v99 = v58;
              char v100 = v68;
              if (v11 != 254)
              {
                uint64_t v79 = v9;
                LODWORD(v80) = v51;
                uint64_t v81 = v52;
                uint64_t v82 = v53;
                uint64_t v83 = v54;
                uint64_t v84 = v55;
                uint64_t v85 = v56;
                uint64_t v86 = v57;
                uint64_t v87 = v50;
                uint64_t v88 = v49;
                char v89 = v11;
                sub_1BFEF8708(v63, v64, v65, v66, v59, v67, v60, v61, v62, v58, v68);
                swift_retain();
                char v26 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v90, (uint64_t)&v79);
                swift_release();
                sub_1BFEF8738(v63, v64, v65, v66, v59, v67, v60, v61, v62, v58, v68);
                if ((v26 & 1) == 0) {
                  return 0;
                }
LABEL_32:
                if (v48)
                {
                  if (!v47 || !sub_1C00DFAAC(v48, v47)) {
                    return 0;
                  }
                }
                else if (v47)
                {
                  return 0;
                }
                sub_1BFF66964((uint64_t)v110, (uint64_t)&v90, (unint64_t *)&qword_1EB876CA0);
                if (sub_1C01CDAD8((uint64_t)&v90) == 1)
                {
                  sub_1BFF66964((uint64_t)v112, (uint64_t)&v79, (unint64_t *)&qword_1EB876CA0);
                  if (sub_1C01CDAD8((uint64_t)&v79) != 1) {
                    return 0;
                  }
                }
                else
                {
                  sub_1BFF66964((uint64_t)v110, (uint64_t)&v77, (unint64_t *)&qword_1EB876CA0);
                  sub_1BFF66964((uint64_t)v112, (uint64_t)&v79, (unint64_t *)&qword_1EB876CA0);
                  if (sub_1C01CDAD8((uint64_t)&v79) == 1) {
                    return 0;
                  }
                  sub_1BFF66964((uint64_t)v112, (uint64_t)v75, (unint64_t *)&qword_1EB876CA0);
                  v73[10] = v75[10];
                  v73[11] = v75[11];
                  __int16 v74 = v76;
                  v73[6] = v75[6];
                  v73[7] = v75[7];
                  v73[8] = v75[8];
                  v73[9] = v75[9];
                  v73[2] = v75[2];
                  v73[3] = v75[3];
                  v73[4] = v75[4];
                  v73[5] = v75[5];
                  v73[0] = v75[0];
                  v73[1] = v75[1];
                  if ((_s8NewsFeed20FormatParagraphStyleV2eeoiySbAC_ACtFZ_0((double *)&v77, (double *)v73) & 1) == 0) {
                    return 0;
                  }
                }
                if (v46)
                {
                  if (!v13) {
                    return 0;
                  }
                }
                else
                {
                  if (v5 == v12) {
                    char v27 = v13;
                  }
                  else {
                    char v27 = 1;
                  }
                  if (v27) {
                    return 0;
                  }
                }
                if (v44)
                {
                  uint64_t v28 = v45;
                  if (!v43) {
                    return 0;
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  char v29 = sub_1C00DE998(v44, v43);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v29 & 1) == 0) {
                    return 0;
                  }
                }
                else
                {
                  uint64_t v28 = v45;
                  if (v43) {
                    return 0;
                  }
                }
                if (v42 == 9)
                {
                  uint64_t v30 = v41;
                  if (v28 == 9) {
                    goto LABEL_61;
                  }
                }
                else
                {
                  uint64_t v79 = v42;
                  uint64_t v30 = v41;
                  uint64_t v80 = v41;
                  if (v28 != 9)
                  {
                    LOBYTE(v77) = v28;
                    uint64_t v78 = v39;
                    sub_1BFEF8720(v42, v41);
                    sub_1BFDC11A4(v41);
                    BOOL v31 = _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v79, (unsigned __int8 *)&v77);
                    sub_1BFDC11BC(v80);
                    sub_1BFEF8750(v42, v41);
                    if (!v31) {
                      return 0;
                    }
LABEL_61:
                    if (v40 == 9)
                    {
                      if (v38 == 9)
                      {
LABEL_68:
                        if (v35 == 2)
                        {
                          if (v14 == 2) {
                            goto LABEL_73;
                          }
                        }
                        else if (v14 != 2 && ((((v35 & 1) == 0) ^ v14) & 1) != 0)
                        {
LABEL_73:
                          if (v34)
                          {
                            if (v15)
                            {
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              char v33 = sub_1C00DE998(v34, v15);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if (v33) {
                                return 1;
                              }
                            }
                          }
                          else if (!v15)
                          {
                            return 1;
                          }
                        }
                        return 0;
                      }
                    }
                    else
                    {
                      uint64_t v79 = v40;
                      uint64_t v80 = v37;
                      if (v38 != 9)
                      {
                        LOBYTE(v77) = v38;
                        uint64_t v78 = v36;
                        sub_1BFEF8720(v40, v37);
                        sub_1BFDC11A4(v37);
                        BOOL v32 = _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v79, (unsigned __int8 *)&v77);
                        sub_1BFDC11BC(v80);
                        sub_1BFEF8750(v40, v37);
                        if (!v32) {
                          return 0;
                        }
                        goto LABEL_68;
                      }
                      sub_1BFDC11A4(v37);
                      sub_1BFDC11A4(v37);
                      sub_1BFDC11BC(v37);
                    }
                    sub_1BFEF8720(v38, v36);
                    sub_1BFEF8750(v40, v37);
                    sub_1BFEF8750(v38, v36);
                    return 0;
                  }
                  sub_1BFDC11A4(v41);
                  sub_1BFDC11A4(v41);
                  sub_1BFDC11BC(v41);
                }
                sub_1BFEF8720(v28, v39);
                sub_1BFEF8750(v42, v30);
                sub_1BFEF8750(v28, v39);
                return 0;
              }
              swift_retain();
              char v22 = v68;
              uint64_t v25 = v67;
            }
            uint64_t v90 = v63;
            uint64_t v91 = v64;
            uint64_t v92 = v65;
            uint64_t v93 = v66;
            uint64_t v94 = v59;
            uint64_t v95 = v25;
            uint64_t v96 = v24;
            uint64_t v97 = v23;
            uint64_t v98 = v62;
            uint64_t v99 = v58;
            char v100 = v22;
            uint64_t v101 = v9;
            uint64_t v102 = v51;
            uint64_t v103 = v52;
            uint64_t v104 = v53;
            uint64_t v105 = v54;
            v106[0] = v55;
            v106[1] = v56;
            v106[2] = v57;
            v106[3] = v50;
            v106[4] = v49;
            char v107 = v11;
            sub_1BFEF8708(v9, v51, v52, v53, v54, v55, v56, v57, v50, v49, v11);
            sub_1C02D2004((uint64_t)&v90);
            return 0;
          }
          sub_1BFF6530C((uint64_t)&v79, (uint64_t)v75);
          sub_1BFF66964((uint64_t)v109, (uint64_t)&v77, (unint64_t *)&qword_1EB873B18);
          sub_1BFF65020(&v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
          sub_1BFF65020(&v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
          sub_1BFF65020(v75, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
        }
        sub_1BFF66964((uint64_t)v109, (uint64_t)&v90, (unint64_t *)&qword_1EB873B18);
        sub_1BFF66964((uint64_t)v111, (uint64_t)v106, (unint64_t *)&qword_1EB873B18);
        sub_1BFF65020(v111, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
        sub_1C0907428((uint64_t)&v90);
        return 0;
      }
      swift_retain();
    }
    else if ((~v8 & 0xF000000000000007) == 0)
    {
      goto LABEL_11;
    }
    sub_1BFEF683C(v8);
    sub_1BFEF68C0(v70);
    sub_1BFEF68C0(v8);
    return 0;
  }
  return result;
}

uint64_t sub_1C109C998(uint64_t a1, const void *a2)
{
  memcpy(__dst, a2, 0x210uLL);
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = v4;
  *(void *)(v2 + 24) = v5;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  *(void *)(v2 + 40) = v6;
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v7;
  uint64_t v8 = __dst[19];
  if (!__dst[19]) {
    uint64_t v8 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 192) = v8;
  uint64_t v9 = __dst[2];
  uint64_t v10 = __dst[2];
  if ((~__dst[2] & 0xF000000000000007) == 0)
  {
    uint64_t v10 = *(void *)(a1 + 56);
    sub_1BFEF683C(v10);
  }
  *(void *)(v2 + 56) = v10;
  uint64_t v11 = __dst[31];
  if (!__dst[31]) {
    uint64_t v11 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 288) = v11;
  sub_1BFF66964((uint64_t)&__dst[3], (uint64_t)v58, (unint64_t *)&qword_1EB873B18);
  uint64_t v53 = v9;
  if (sub_1C044587C((uint64_t)v58) == 1)
  {
    sub_1BFF66964(a1 + 64, (uint64_t)v56, (unint64_t *)&qword_1EB873B18);
    sub_1BFF65020(v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
    double v12 = v56;
  }
  else
  {
    double v12 = &__dst[3];
  }
  sub_1BFF66964((uint64_t)v12, (uint64_t)v57, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v57, v2 + 64, (unint64_t *)&qword_1EB873B18);
  uint64_t v13 = __dst[21];
  uint64_t v14 = __dst[22];
  uint64_t v15 = __dst[23];
  uint64_t v16 = __dst[24];
  uint64_t v17 = __dst[25];
  uint64_t v18 = __dst[26];
  uint64_t v19 = __dst[27];
  uint64_t v20 = __dst[28];
  uint64_t v21 = __dst[29];
  uint64_t v51 = __dst[21];
  uint64_t v52 = __dst[20];
  uint64_t v22 = __dst[20];
  uint64_t v49 = __dst[23];
  uint64_t v50 = __dst[22];
  uint64_t v47 = __dst[25];
  uint64_t v48 = __dst[24];
  uint64_t v45 = __dst[27];
  uint64_t v46 = __dst[26];
  uint64_t v43 = __dst[29];
  uint64_t v44 = __dst[28];
  unsigned __int8 v23 = __dst[30];
  unsigned __int8 v42 = __dst[30];
  if (LOBYTE(__dst[30]) == 254)
  {
    uint64_t v40 = *(void *)(a1 + 208);
    uint64_t v41 = *(void *)(a1 + 200);
    uint64_t v15 = *(void *)(a1 + 224);
    uint64_t v39 = *(void *)(a1 + 216);
    uint64_t v16 = *(void *)(a1 + 232);
    uint64_t v17 = *(void *)(a1 + 240);
    uint64_t v18 = *(void *)(a1 + 248);
    uint64_t v19 = *(void *)(a1 + 256);
    uint64_t v20 = *(void *)(a1 + 264);
    uint64_t v21 = *(void *)(a1 + 272);
    unsigned __int8 v23 = *(unsigned char *)(a1 + 280);
    sub_1BFEF8708(v41, v40, v39, v15, v16, v17, v18, v19, v20, v21, v23);
    uint64_t v14 = v39;
    uint64_t v13 = v40;
    uint64_t v22 = v41;
  }
  *(void *)(v2 + 200) = v22;
  *(void *)(v2 + 208) = v13;
  *(void *)(v2 + 216) = v14;
  *(void *)(v2 + 224) = v15;
  *(void *)(v2 + 232) = v16;
  *(void *)(v2 + 240) = v17;
  *(void *)(v2 + 248) = v18;
  *(void *)(v2 + 256) = v19;
  *(void *)(v2 + 264) = v20;
  *(void *)(v2 + 272) = v21;
  *(unsigned char *)(v2 + 280) = v23;
  sub_1BFF66964((uint64_t)&__dst[32], (uint64_t)v56, (unint64_t *)&qword_1EB876CA0);
  if (sub_1C01CDAD8((uint64_t)v56) == 1)
  {
    sub_1BFF66964(a1 + 296, (uint64_t)v54, (unint64_t *)&qword_1EB876CA0);
    uint64_t v24 = v54;
  }
  else
  {
    uint64_t v24 = &__dst[32];
  }
  sub_1BFF66964((uint64_t)v24, (uint64_t)v55, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)v55, v2 + 296, (unint64_t *)&qword_1EB876CA0);
  if (__dst[58])
  {
    uint64_t v25 = *(void *)(a1 + 496);
    char v26 = *(unsigned char *)(a1 + 504);
  }
  else
  {
    char v26 = 0;
    uint64_t v25 = __dst[57];
  }
  *(void *)(v2 + 496) = v25;
  *(unsigned char *)(v2 + 504) = v26;
  uint64_t v27 = __dst[59];
  if (!__dst[59]) {
    uint64_t v27 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 512) = v27;
  uint64_t v28 = __dst[60];
  uint64_t v29 = __dst[61];
  uint64_t v30 = __dst[60];
  uint64_t v31 = __dst[61];
  if (LOBYTE(__dst[60]) == 9)
  {
    uint64_t v30 = *(void *)(a1 + 520);
    uint64_t v31 = *(void *)(a1 + 528);
    sub_1BFEF8720(v30, v31);
  }
  *(void *)(v2 + 520) = v30;
  *(void *)(v2 + 528) = v31;
  uint64_t v32 = __dst[62];
  uint64_t v33 = __dst[63];
  uint64_t v34 = __dst[62];
  uint64_t v35 = __dst[63];
  if (LOBYTE(__dst[62]) == 9)
  {
    uint64_t v34 = *(void *)(a1 + 536);
    uint64_t v35 = *(void *)(a1 + 544);
    sub_1BFEF8720(v34, v35);
  }
  *(void *)(v2 + 536) = v34;
  *(void *)(v2 + 544) = v35;
  char v36 = __dst[64];
  if (LOBYTE(__dst[64]) == 2) {
    char v36 = *(unsigned char *)(a1 + 552);
  }
  *(unsigned char *)(v2 + 552) = v36;
  uint64_t v37 = __dst[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v53);
  swift_bridgeObjectRetain();
  sub_1BFF65020(&__dst[3], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  sub_1BFEF8708(v52, v51, v50, v49, v48, v47, v46, v45, v44, v43, v42);
  swift_bridgeObjectRetain();
  sub_1BFEF8720(v28, v29);
  sub_1BFEF8720(v32, v33);
  swift_bridgeObjectRetain();
  sub_1C05DC4C4((uint64_t)__dst);
  if (!v37)
  {
    uint64_t v37 = *(void *)(a1 + 560);
    swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 560) = v37;
  return v2;
}

uint64_t sub_1C109CE58()
{
  uint64_t v10 = 0xF000000000000007;
  sub_1C0C17750((uint64_t)v11);
  sub_1BFF66964((uint64_t)v11, (uint64_t)v9, (unint64_t *)&qword_1EB873B18);
  memset(v7, 0, sizeof(v7));
  char v8 = -2;
  sub_1C109DE54((uint64_t)v12);
  sub_1BFF66964((uint64_t)v12, (uint64_t)v6, (unint64_t *)&qword_1EB876CA0);
  uint64_t v5 = 0;
  long long v3 = xmmword_1C1558020;
  long long v4 = xmmword_1C1558020;
  uint64_t v2 = 0;
  type metadata accessor for FormatTextNodeStyle();
  uint64_t v0 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(0x6E776F6E6B6E752ELL, 0xE800000000000000, 0x6E776F6E6B6E752ELL, 0xE800000000000000, MEMORY[0x1E4FBC860], &v10, (uint64_t)v9, 0, v7, 0, (uint64_t)v6, 0, 1, &v5, (uint64_t *)&v4, (uint64_t *)&v3, 2, &v2);
  return v0;
}

uint64_t sub_1C109CF94()
{
  sub_1BFEF89EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  return swift_deallocObject();
}

uint64_t sub_1C109CFF8(uint64_t a1)
{
  uint64_t result = sub_1C109D130(&qword_1EA1AADE0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C109D03C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C109D130(&qword_1EB8890A0);
  uint64_t result = sub_1C109D130(&qword_1EB866970);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C109D0A4(void *a1)
{
  a1[1] = sub_1C109D130(&qword_1EB8890A0);
  a1[2] = sub_1C109D130(&qword_1EB866970);
  uint64_t result = sub_1C109D130(&qword_1EA1AADE8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C109D130(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatTextNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C109D170(uint64_t a1)
{
  unint64_t result = sub_1C109D198();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C109D198()
{
  unint64_t result = qword_1EA1AADF0;
  if (!qword_1EA1AADF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AADF0);
  }
  return result;
}

unint64_t sub_1C109D1EC(void *a1)
{
  a1[1] = sub_1C00790AC();
  a1[2] = sub_1C0079100();
  unint64_t result = sub_1C109D224();
  a1[3] = result;
  return result;
}

unint64_t sub_1C109D224()
{
  unint64_t result = qword_1EA1AADF8;
  if (!qword_1EA1AADF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AADF8);
  }
  return result;
}

uint64_t sub_1C109D278@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C109D2C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatTextNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatTextNodeStyle);
}

uint64_t dispatch thunk of FormatTextNodeStyle.__allocating_init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 200))(a1, a2, a3, a4);
}

uint64_t assignWithCopy for FormatTextNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      void *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1C109D9F8(a1 + 16);
    uint64_t v5 = *(void *)(a2 + 16);
LABEL_6:
    void *v4 = v5;
    goto LABEL_8;
  }
  void *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v7 = (_OWORD *)(a1 + 24);
  char v8 = (long long *)(a2 + 24);
  unint64_t v9 = *(void *)(a2 + 128);
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
  if (*(void *)(a1 + 128) >> 1 == 0xFFFFFFFFLL)
  {
    if (v10 == 0x1FFFFFFFELL)
    {
      long long v11 = *v8;
      long long v12 = *(_OWORD *)(a2 + 40);
      long long v13 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v13;
      *uint64_t v7 = v11;
      *(_OWORD *)(a1 + 40) = v12;
      long long v14 = *(_OWORD *)(a2 + 88);
      long long v15 = *(_OWORD *)(a2 + 104);
      long long v16 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v16;
      *(_OWORD *)(a1 + 88) = v14;
      *(_OWORD *)(a1 + 104) = v15;
    }
    else
    {
      uint64_t v24 = *(void *)(a2 + 24);
      uint64_t v23 = *(void *)(a2 + 32);
      uint64_t v25 = *(void *)(a2 + 40);
      uint64_t v26 = *(void *)(a2 + 48);
      uint64_t v27 = *(void *)(a2 + 56);
      uint64_t v28 = *(void *)(a2 + 64);
      uint64_t v29 = *(void *)(a2 + 72);
      uint64_t v84 = *(void *)(a2 + 80);
      uint64_t v86 = *(void *)(a2 + 88);
      uint64_t v88 = *(void *)(a2 + 96);
      uint64_t v90 = *(void *)(a2 + 104);
      uint64_t v92 = *(void *)(a2 + 112);
      uint64_t v94 = *(void *)(a2 + 120);
      uint64_t v96 = *(void *)(a2 + 136);
      uint64_t v98 = *(void *)(a2 + 144);
      sub_1BFEF87A0(v24, v23, v25, v26, v27, v28, v29, v84, v86, v88, v90, v92, v94, v9);
      *(void *)(a1 + 24) = v24;
      *(void *)(a1 + 32) = v23;
      *(void *)(a1 + 40) = v25;
      *(void *)(a1 + 48) = v26;
      *(void *)(a1 + 56) = v27;
      *(void *)(a1 + 64) = v28;
      *(void *)(a1 + 72) = v29;
      *(void *)(a1 + 80) = v84;
      *(void *)(a1 + 88) = v86;
      *(void *)(a1 + 96) = v88;
      *(void *)(a1 + 104) = v90;
      *(void *)(a1 + 112) = v92;
      *(void *)(a1 + 120) = v94;
      *(void *)(a1 + 128) = v9;
      *(void *)(a1 + 136) = v96;
      *(void *)(a1 + 144) = v98;
    }
  }
  else if (v10 == 0x1FFFFFFFELL)
  {
    sub_1C109DA4C(a1 + 24);
    long long v17 = *(_OWORD *)(a2 + 72);
    long long v19 = *v8;
    long long v18 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v17;
    *uint64_t v7 = v19;
    *(_OWORD *)(a1 + 40) = v18;
    long long v20 = *(_OWORD *)(a2 + 136);
    long long v22 = *(_OWORD *)(a2 + 88);
    long long v21 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v20;
    *(_OWORD *)(a1 + 88) = v22;
    *(_OWORD *)(a1 + 104) = v21;
  }
  else
  {
    uint64_t v31 = *(void *)(a2 + 24);
    uint64_t v30 = *(void *)(a2 + 32);
    uint64_t v32 = *(void *)(a2 + 40);
    uint64_t v33 = *(void *)(a2 + 48);
    uint64_t v34 = *(void *)(a2 + 56);
    uint64_t v35 = *(void *)(a2 + 64);
    uint64_t v36 = *(void *)(a2 + 72);
    uint64_t v85 = *(void *)(a2 + 80);
    uint64_t v87 = *(void *)(a2 + 88);
    uint64_t v89 = *(void *)(a2 + 96);
    uint64_t v91 = *(void *)(a2 + 104);
    uint64_t v93 = *(void *)(a2 + 112);
    uint64_t v95 = *(void *)(a2 + 120);
    uint64_t v97 = *(void *)(a2 + 136);
    uint64_t v99 = *(void *)(a2 + 144);
    sub_1BFEF87A0(v31, v30, v32, v33, v34, v35, v36, v85, v87, v89, v91, v93, v95, v9);
    uint64_t v37 = *(void *)(a1 + 24);
    uint64_t v38 = *(void *)(a1 + 32);
    uint64_t v39 = *(void *)(a1 + 40);
    uint64_t v40 = *(void *)(a1 + 48);
    uint64_t v41 = *(void *)(a1 + 56);
    uint64_t v42 = *(void *)(a1 + 64);
    uint64_t v43 = *(void *)(a1 + 72);
    uint64_t v44 = *(void *)(a1 + 80);
    long long v45 = *(_OWORD *)(a1 + 88);
    long long v46 = *(_OWORD *)(a1 + 104);
    long long v47 = *(_OWORD *)(a1 + 120);
    *(void *)(a1 + 24) = v31;
    *(void *)(a1 + 32) = v30;
    *(void *)(a1 + 40) = v32;
    *(void *)(a1 + 48) = v33;
    *(void *)(a1 + 56) = v34;
    *(void *)(a1 + 64) = v35;
    *(void *)(a1 + 72) = v36;
    *(void *)(a1 + 80) = v85;
    *(void *)(a1 + 88) = v87;
    *(void *)(a1 + 96) = v89;
    *(void *)(a1 + 104) = v91;
    *(void *)(a1 + 112) = v93;
    *(void *)(a1 + 120) = v95;
    *(void *)(a1 + 128) = v9;
    *(void *)(a1 + 136) = v97;
    *(void *)(a1 + 144) = v99;
    sub_1BFEF89EC(v37, v38, v39, v40, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((unint64_t *)&v47 + 1));
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = (_OWORD *)(a1 + 160);
  uint64_t v49 = (_OWORD *)(a2 + 160);
  int v50 = *(unsigned __int8 *)(a2 + 240);
  if (*(unsigned __int8 *)(a1 + 240) == 254)
  {
    if (v50 == 254)
    {
      long long v51 = *(_OWORD *)(a2 + 176);
      _OWORD *v48 = *v49;
      *(_OWORD *)(a1 + 176) = v51;
      long long v52 = *(_OWORD *)(a2 + 192);
      long long v53 = *(_OWORD *)(a2 + 208);
      long long v54 = *(_OWORD *)(a2 + 224);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(_OWORD *)(a1 + 208) = v53;
      *(_OWORD *)(a1 + 224) = v54;
      *(_OWORD *)(a1 + 192) = v52;
    }
    else
    {
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      long long v59 = *(_OWORD *)(a2 + 200);
      long long v60 = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
      *(_OWORD *)(a1 + 216) = v60;
      *(_OWORD *)(a1 + 200) = v59;
      swift_retain();
    }
  }
  else if (v50 == 254)
  {
    sub_1C02D0FD8(a1 + 160);
    long long v55 = *(_OWORD *)(a2 + 176);
    _OWORD *v48 = *v49;
    *(_OWORD *)(a1 + 176) = v55;
    long long v57 = *(_OWORD *)(a2 + 208);
    long long v56 = *(_OWORD *)(a2 + 224);
    long long v58 = *(_OWORD *)(a2 + 192);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(_OWORD *)(a1 + 208) = v57;
    *(_OWORD *)(a1 + 224) = v56;
    *(_OWORD *)(a1 + 192) = v58;
  }
  else
  {
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    swift_retain();
    swift_release();
    long long v61 = *(_OWORD *)(a2 + 200);
    long long v62 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
    *(_OWORD *)(a1 + 216) = v62;
    *(_OWORD *)(a1 + 200) = v61;
  }
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  long long v63 = *(_OWORD *)(a2 + 272);
  long long v64 = *(_OWORD *)(a2 + 288);
  long long v65 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v65;
  *(_OWORD *)(a1 + 272) = v63;
  *(_OWORD *)(a1 + 288) = v64;
  long long v66 = *(_OWORD *)(a2 + 336);
  long long v67 = *(_OWORD *)(a2 + 352);
  long long v68 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v68;
  *(_OWORD *)(a1 + 336) = v66;
  *(_OWORD *)(a1 + 352) = v67;
  long long v69 = *(_OWORD *)(a2 + 400);
  long long v70 = *(_OWORD *)(a2 + 416);
  long long v71 = *(_OWORD *)(a2 + 432);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  *(_OWORD *)(a1 + 416) = v70;
  *(_OWORD *)(a1 + 432) = v71;
  *(_OWORD *)(a1 + 400) = v69;
  uint64_t v72 = *(void *)(a2 + 456);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(void *)(a1 + 456) = v72;
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v73 = *(unsigned __int8 *)(a2 + 480);
  if (*(unsigned char *)(a1 + 480) == 9)
  {
    if (v73 != 9)
    {
      *(unsigned char *)(a1 + 480) = v73;
      uint64_t v74 = *(void *)(a2 + 488);
      *(void *)(a1 + 488) = v74;
      if ((~v74 & 0xF000000000000007) == 0) {
        goto LABEL_37;
      }
LABEL_32:
      swift_retain();
      goto LABEL_37;
    }
LABEL_28:
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    goto LABEL_37;
  }
  if (v73 == 9)
  {
    sub_1C109DAA0(a1 + 480);
    goto LABEL_28;
  }
  *(unsigned char *)(a1 + 480) = v73;
  uint64_t v75 = (void *)(a1 + 488);
  uint64_t v76 = *(void *)(a2 + 488);
  unint64_t v77 = v76 & 0xF000000000000007;
  if ((~*(void *)(a1 + 488) & 0xF000000000000007) != 0)
  {
    if (v77 == 0xF000000000000007)
    {
      sub_1C036EDB0(a1 + 488);
      *uint64_t v75 = *(void *)(a2 + 488);
    }
    else
    {
      *uint64_t v75 = v76;
      swift_retain();
      swift_release();
    }
  }
  else
  {
    *uint64_t v75 = v76;
    if (v77 != 0xF000000000000007) {
      goto LABEL_32;
    }
  }
LABEL_37:
  uint64_t v78 = *(unsigned __int8 *)(a2 + 496);
  if (*(unsigned char *)(a1 + 496) == 9)
  {
    if (v78 != 9)
    {
      *(unsigned char *)(a1 + 496) = v78;
      uint64_t v79 = *(void *)(a2 + 504);
      *(void *)(a1 + 504) = v79;
      if ((~v79 & 0xF000000000000007) == 0) {
        goto LABEL_52;
      }
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  if (v78 == 9)
  {
    sub_1C109DAA0(a1 + 496);
LABEL_43:
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    goto LABEL_52;
  }
  *(unsigned char *)(a1 + 496) = v78;
  uint64_t v80 = (void *)(a1 + 504);
  uint64_t v81 = *(void *)(a2 + 504);
  unint64_t v82 = v81 & 0xF000000000000007;
  if ((~*(void *)(a1 + 504) & 0xF000000000000007) == 0)
  {
    *uint64_t v80 = v81;
    if (v82 == 0xF000000000000007) {
      goto LABEL_52;
    }
LABEL_47:
    swift_retain();
    goto LABEL_52;
  }
  if (v82 == 0xF000000000000007)
  {
    sub_1C036EDB0(a1 + 504);
    *uint64_t v80 = *(void *)(a2 + 504);
  }
  else
  {
    *uint64_t v80 = v81;
    swift_retain();
    swift_release();
  }
LABEL_52:
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C109D9F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C109DA4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C109DAA0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatTextNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C109D9F8(a1 + 16);
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  unint64_t v7 = *(void *)(a1 + 128);
  if (v7 >> 1 == 0xFFFFFFFF)
  {
LABEL_9:
    long long v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    long long v10 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v10;
    long long v11 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v11;
    long long v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    goto LABEL_11;
  }
  unint64_t v8 = *(void *)(a2 + 128);
  if (v8 >> 1 == 0xFFFFFFFF)
  {
    sub_1C109DA4C(a1 + 24);
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 88);
  long long v23 = *(_OWORD *)(a1 + 104);
  uint64_t v24 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  sub_1BFEF89EC(v14, v15, v16, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, v7);
LABEL_11:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 240) == 254)
  {
LABEL_14:
    long long v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    long long v26 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v26;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 240) == 254)
  {
    sub_1C02D0FD8(a1 + 160);
    goto LABEL_14;
  }
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
LABEL_16:
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  long long v27 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v27;
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  long long v28 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v28;
  long long v29 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v29;
  long long v30 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v30;
  long long v31 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v31;
  long long v32 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v32;
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 480) == 9)
  {
LABEL_19:
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    goto LABEL_25;
  }
  uint64_t v33 = *(unsigned __int8 *)(a2 + 480);
  if (v33 == 9)
  {
    sub_1C109DAA0(a1 + 480);
    goto LABEL_19;
  }
  *(unsigned char *)(a1 + 480) = v33;
  uint64_t v34 = (void *)(a1 + 488);
  uint64_t v35 = *(void *)(a2 + 488);
  if ((~*(void *)(a1 + 488) & 0xF000000000000007) == 0) {
    goto LABEL_23;
  }
  if ((~v35 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0(a1 + 488);
LABEL_23:
    *uint64_t v34 = v35;
    goto LABEL_25;
  }
  *uint64_t v34 = v35;
  swift_release();
LABEL_25:
  if (*(unsigned char *)(a1 + 496) == 9)
  {
LABEL_28:
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    goto LABEL_34;
  }
  uint64_t v36 = *(unsigned __int8 *)(a2 + 496);
  if (v36 == 9)
  {
    sub_1C109DAA0(a1 + 496);
    goto LABEL_28;
  }
  *(unsigned char *)(a1 + 496) = v36;
  uint64_t v37 = (void *)(a1 + 504);
  uint64_t v38 = *(void *)(a2 + 504);
  if ((~*(void *)(a1 + 504) & 0xF000000000000007) != 0)
  {
    if ((~v38 & 0xF000000000000007) != 0)
    {
      *uint64_t v37 = v38;
      swift_release();
      goto LABEL_34;
    }
    sub_1C036EDB0(a1 + 504);
  }
  *uint64_t v37 = v38;
LABEL_34:
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeStyle.Selector()
{
  return &type metadata for FormatTextNodeStyle.Selector;
}

double sub_1C109DE54(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 192) = 768;
  return result;
}

void *sub_1C109DE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v138 = a1;
  sub_1C0181BEC(0);
  uint64_t v130 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v132 = (uint64_t *)((char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EA1974D0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C15341B0;
  sub_1BFF5D9E8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = *(void *)(v4 + 72);
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v139 = v7;
  uint64_t v128 = v8 | 7;
  uint64_t v129 = v10;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
  uint64_t v141 = v9;
  long long v12 = (void *)(v11 + v9);
  uint64_t v127 = a2;
  if (a2)
  {
    uint64_t v14 = *(void *)(a2 + 32);
    unint64_t v13 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C109AE3C();
    long long v152 = 0u;
    long long v153 = 0u;
    uint64_t v151 = v15;
    uint64_t v154 = 0;
    long long v155 = xmmword_1C15C4E40;
    uint64_t v16 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v151, v16 + 16);
    uint64_t v17 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v17 = sub_1C139486C;
    uint64_t v16 = 0;
    uint64_t v14 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v19 = (uint64_t (**)())((char *)v12 + *(int *)(v18 + 24));
  *uint64_t v19 = v17;
  v19[1] = (uint64_t (*)())v16;
  uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = *(void *)(v20 - 8);
  long long v22 = *(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(v21 + 56);
  uint64_t v136 = v20;
  uint64_t v134 = v21 + 56;
  *(void *)&long long v135 = v22;
  v22(v19, 0, 1, v20);
  uint64_t v23 = v141;
  *(void *)(v11 + v141) = v14;
  void v12[2] = 0;
  v12[3] = 0;
  v12[1] = v13;
  uint64_t v24 = (char *)v12 + *(int *)(v18 + 28);
  *(void *)uint64_t v24 = 0;
  *((void *)v24 + 1) = 0;
  v24[16] = -1;
  uint64_t v25 = *(void *)(v18 - 8);
  long long v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
  uint64_t v27 = v25 + 56;
  v26((uint64_t)v12, 0, 1, v18);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v11, v157);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v6 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v6 + 64) = &off_1F1BDEC90;
  uint64_t v28 = swift_allocObject();
  char v131 = (void *)v6;
  *(void *)(v6 + 32) = v28;
  long long v29 = v157[1];
  *(_OWORD *)(v28 + 16) = v157[0];
  *(_OWORD *)(v28 + 32) = v29;
  *(void *)(v28 + 48) = v158;
  uint64_t v30 = v139;
  unint64_t v137 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v23 + 3 * v139);
  uint64_t v31 = swift_allocObject();
  long long v133 = xmmword_1C152C7F0;
  *(_OWORD *)(v31 + 16) = xmmword_1C152C7F0;
  uint64_t v32 = v31 + v23;
  sub_1C0433600(1701869908, 0xE400000000000000, 1954047316, 0xE400000000000000, (void *)(v31 + v23));
  v26(v31 + v23, 0, 1, v18);
  uint64_t v33 = v127;
  if (v127)
  {
    uint64_t v34 = *(void *)(v127 + 512);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v34, (void *)(v32 + v30));
    v26(v32 + v30, 0, 1, v18);
    char v35 = *(unsigned char *)(v33 + 552);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v32 + v30));
    v26(v32 + v30, 0, 1, v18);
    char v35 = 2;
  }
  uint64_t v126 = 2 * v30;
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v35, (void *)(v32 + 2 * v30));
  uint64_t v140 = v18;
  v26(v32 + 2 * v30, 0, 1, v18);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v31, v159);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v36 = v131;
  v131[12] = &type metadata for FormatInspectionGroup;
  v36[13] = &off_1F1BDEC90;
  uint64_t v37 = swift_allocObject();
  v36[9] = v37;
  long long v38 = v159[1];
  *(_OWORD *)(v37 + 16) = v159[0];
  *(_OWORD *)(v37 + 32) = v38;
  *(void *)(v37 + 48) = v160;
  uint64_t v39 = v27;
  if (v33)
  {
    uint64_t v40 = *(void *)(v33 + 56);
    sub_1BFEF683C(v40);
  }
  else
  {
    uint64_t v40 = 0xF000000000000007;
  }
  uint64_t v151 = v40;
  uint64_t v41 = sub_1C021E668(v138, (unint64_t *)&v151);
  sub_1BFEF68C0(v40);
  uint64_t v42 = v131;
  v131[17] = &type metadata for FormatInspection;
  v42[18] = &off_1F1C29D30;
  v42[14] = v41;
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v133;
  uint64_t v44 = v140;
  long long v45 = (void *)(v43 + v141);
  if (v33)
  {
    sub_1BFF66964(v33 + 64, (uint64_t)&v151, (unint64_t *)&qword_1EB873B18);
    sub_1BFF65020(&v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  }
  else
  {
    sub_1C0C17750((uint64_t)&v151);
  }
  sub_1BFF66964((uint64_t)&v151, (uint64_t)v156, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v156, (uint64_t)v167, (unint64_t *)&qword_1EB873B18);
  sub_1C043D320(1819044166, 0xE400000000000000, v167, v45);
  v26((uint64_t)v45, 0, 1, v44);
  if (v33)
  {
    sub_1C042F1BC(0x676E696B63617254, 0xE800000000000000, *(void *)(v33 + 496), *(unsigned char *)(v33 + 504), (void *)((char *)v45 + v30));
    v26((uint64_t)v45 + v30, 0, 1, v44);
    uint64_t v46 = *(void *)(v33 + 560);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1C042F1BC(0x676E696B63617254, 0xE800000000000000, 0, 1, (void *)((char *)v45 + v30));
    v26((uint64_t)v45 + v30, 0, 1, v44);
    uint64_t v46 = 0;
  }
  long long v47 = (char *)v45 + v126;
  sub_1C042F6B0(0x656E696C65736142, 0xEF74657366664F20, v46, (void *)((char *)v45 + v126));
  v26((uint64_t)v47, 0, 1, v44);
  sub_1C09BCFA4(1954047316, 0xE400000000000000, 0, 0, v43, v161);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v48 = v131;
  v131[22] = &type metadata for FormatInspectionGroup;
  v48[23] = &off_1F1BDEC90;
  uint64_t v49 = swift_allocObject();
  v48[19] = v49;
  long long v50 = v161[1];
  *(_OWORD *)(v49 + 16) = v161[0];
  *(_OWORD *)(v49 + 32) = v50;
  *(void *)(v49 + 48) = v162;
  if (v33 && (uint64_t v51 = *(void *)(v33 + 288)) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = MEMORY[0x1E4FBC860];
  }
  long long v52 = v132;
  int64_t v53 = *(void *)(v51 + 16);
  unint64_t v137 = v26;
  uint64_t v138 = v39;
  if (v53)
  {
    uint64_t v151 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v53, 0);
    uint64_t v54 = 0;
    uint64_t v55 = v151;
    uint64_t v132 = v52 + 2;
    *(void *)&long long v133 = v51;
    uint64_t v56 = v140;
    do
    {
      int64_t v57 = v53;
      uint64_t v58 = 8 * *(char *)(v51 + v54 + 32);
      uint64_t v59 = *(void *)&aUppercaslowerc[v58];
      uint64_t v60 = *(void *)&aUppercaslowerc[v58 + 24];
      long long v61 = (void *)((char *)v52 + *(int *)(v56 + 24));
      *long long v61 = 0;
      v61[1] = 0xE000000000000000;
      uint64_t v62 = v136;
      swift_storeEnumTagMultiPayload();
      ((void (*)(void *, void, uint64_t, uint64_t))v135)(v61, 0, 1, v62);
      *long long v52 = v59;
      v52[1] = v60;
      long long v63 = v132;
      void *v132 = 0;
      v63[1] = 0;
      long long v64 = (char *)v52 + *(int *)(v56 + 28);
      *(void *)long long v64 = 0;
      *((void *)v64 + 1) = 0;
      v64[16] = -1;
      v137((uint64_t)v52, 0, 1, v56);
      uint64_t v151 = v55;
      unint64_t v66 = *(void *)(v55 + 16);
      unint64_t v65 = *(void *)(v55 + 24);
      if (v66 >= v65 >> 1)
      {
        sub_1C05F62D0(v65 > 1, v66 + 1, 1);
        uint64_t v55 = v151;
      }
      ++v54;
      *(void *)(v55 + 16) = v66 + 1;
      sub_1C0100634((uint64_t)v52, v55 + v141 + v66 * v139);
      int64_t v53 = v57;
      uint64_t v51 = v133;
    }
    while (v57 != v54);
    swift_bridgeObjectRelease();
    uint64_t v48 = v131;
    uint64_t v33 = v127;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v55 = MEMORY[0x1E4FBC860];
  }
  sub_1C09BCFA4(0x726F66736E617254, 0xEA0000000000736DLL, 0, 0, v55, v163);
  swift_bridgeObjectRelease();
  v48[27] = &type metadata for FormatInspectionGroup;
  v48[28] = &off_1F1BDEC90;
  uint64_t v67 = swift_allocObject();
  v48[24] = v67;
  long long v68 = v163[1];
  *(_OWORD *)(v67 + 16) = v163[0];
  *(_OWORD *)(v67 + 32) = v68;
  *(void *)(v67 + 48) = v164;
  if (v33) {
    sub_1BFF66964(v33 + 296, (uint64_t)&v142, (unint64_t *)&qword_1EB876CA0);
  }
  else {
    sub_1C109DE54((uint64_t)&v142);
  }
  sub_1BFF66964((uint64_t)&v142, (uint64_t)&v151, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)&v151, (uint64_t)&v142, (unint64_t *)&qword_1EB876CA0);
  long long v69 = sub_1C01CD0A8((uint64_t)&v142);
  v48[32] = &type metadata for FormatInspection;
  v48[33] = &off_1F1C29D30;
  long long v70 = v48;
  v48[29] = v69;
  if (v33)
  {
    uint64_t v71 = *(void *)(v33 + 200);
    uint64_t v72 = *(void *)(v33 + 208);
    uint64_t v73 = *(void *)(v33 + 216);
    uint64_t v74 = *(void *)(v33 + 224);
    uint64_t v75 = *(void *)(v33 + 232);
    uint64_t v76 = *(void *)(v33 + 240);
    uint64_t v77 = *(void *)(v33 + 248);
    uint64_t v78 = *(void *)(v33 + 256);
    uint64_t v79 = *(void *)(v33 + 264);
    uint64_t v80 = *(void *)(v33 + 272);
    LODWORD(v133) = *(unsigned __int8 *)(v33 + 280);
    uint64_t v134 = v80;
    *(void *)&long long v135 = v79;
    uint64_t v81 = v71;
    unint64_t v82 = (void *)v72;
    uint64_t v83 = v73;
    uint64_t v84 = v74;
    uint64_t v85 = v75;
    uint64_t v86 = v76;
    uint64_t v87 = v77;
    uint64_t v33 = v78;
    sub_1BFEF8708(v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v133);
  }
  else
  {
    uint64_t v81 = 0;
    unint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    uint64_t v85 = 0;
    uint64_t v86 = 0;
    uint64_t v87 = 0;
    uint64_t v134 = 0;
    *(void *)&long long v135 = 0;
    LODWORD(v133) = 254;
  }
  uint64_t v136 = (uint64_t)(v70 + 4);
  *(void *)&long long v142 = v81;
  *((void *)&v142 + 1) = v82;
  uint64_t v132 = v82;
  *(void *)&long long v143 = v83;
  *((void *)&v143 + 1) = v84;
  uint64_t v125 = v84;
  uint64_t v144 = v85;
  uint64_t v145 = v86;
  uint64_t v146 = v87;
  uint64_t v147 = v33;
  uint64_t v89 = v134;
  uint64_t v88 = v135;
  uint64_t v148 = v135;
  uint64_t v149 = v134;
  unsigned __int8 v90 = v133;
  char v150 = v133;
  uint64_t v91 = sub_1C0AD49A4((uint64_t)&v142);
  uint64_t v92 = v81;
  uint64_t v93 = v91;
  unsigned __int8 v124 = v90;
  uint64_t v94 = v131;
  sub_1BFEF8738(v92, (uint64_t)v132, v83, v125, v85, v86, v87, v33, v88, v89, v124);
  v94[37] = &type metadata for FormatInspection;
  v94[38] = &off_1F1C29D30;
  uint64_t v95 = v141;
  uint64_t v96 = v141 + v126;
  v94[34] = v93;
  uint64_t v134 = v96;
  uint64_t v97 = swift_allocObject();
  uint64_t v98 = v97;
  long long v135 = xmmword_1C1527210;
  *(_OWORD *)(v97 + 16) = xmmword_1C1527210;
  uint64_t v99 = v97 + v95;
  uint64_t v100 = v127;
  if (v127)
  {
    uint64_t v101 = *(void *)(v127 + 520);
    if (v101 == 9) {
      unsigned __int8 v102 = 8;
    }
    else {
      unsigned __int8 v102 = v101;
    }
    sub_1C043D758(0x656C797453, 0xE500000000000000, v102, (void *)(v97 + v95));
    v137(v99, 0, 1, v140);
    uint64_t v103 = v139;
    if (*(unsigned char *)(v100 + 520) == 9)
    {
      uint64_t v104 = 0xF000000000000007;
    }
    else
    {
      uint64_t v104 = *(void *)(v100 + 528);
      sub_1BFDC11A4(v104);
    }
    uint64_t v105 = v137;
  }
  else
  {
    sub_1C043D758(0x656C797453, 0xE500000000000000, 8u, (void *)(v97 + v95));
    uint64_t v105 = v137;
    v137(v99, 0, 1, v140);
    uint64_t v104 = 0xF000000000000007;
    uint64_t v103 = v139;
  }
  unint64_t v106 = (void *)(v99 + v103);
  sub_1C0433BC8(0x726F6C6F43, 0xE500000000000000, v104, v106);
  char v107 = v106;
  uint64_t v108 = v140;
  uint64_t v109 = v105;
  v105((uint64_t)v107, 0, 1, v140);
  sub_1C09BCFA4(0x6874656B69727453, 0xED00006867756F72, 0, 0, v98, v165);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v94[42] = &type metadata for FormatInspectionGroup;
  v94[43] = &off_1F1BDEC90;
  uint64_t v110 = swift_allocObject();
  v94[39] = v110;
  long long v111 = v165[1];
  *(_OWORD *)(v110 + 16) = v165[0];
  *(_OWORD *)(v110 + 32) = v111;
  *(void *)(v110 + 48) = v166;
  uint64_t v112 = swift_allocObject();
  uint64_t v113 = v112;
  *(_OWORD *)(v112 + 16) = v135;
  uint64_t v114 = v112 + v141;
  if (v100)
  {
    uint64_t v115 = *(void *)(v100 + 536);
    if (v115 == 9) {
      unsigned __int8 v116 = 8;
    }
    else {
      unsigned __int8 v116 = v115;
    }
    sub_1C043D758(0x656C797453, 0xE500000000000000, v116, (void *)(v112 + v141));
    v109(v114, 0, 1, v108);
    uint64_t v117 = v109;
    if (*(unsigned char *)(v100 + 536) == 9)
    {
      uint64_t v118 = 0xF000000000000007;
    }
    else
    {
      uint64_t v118 = *(void *)(v100 + 544);
      sub_1BFDC11A4(v118);
    }
  }
  else
  {
    sub_1C043D758(0x656C797453, 0xE500000000000000, 8u, (void *)(v112 + v141));
    v109(v114, 0, 1, v108);
    uint64_t v118 = 0xF000000000000007;
    uint64_t v117 = v109;
  }
  uint64_t v119 = v114 + v139;
  sub_1C0433BC8(0x726F6C6F43, 0xE500000000000000, v118, (void *)(v114 + v139));
  v117(v119, 0, 1, v140);
  sub_1C09BCFA4(0x6E696C7265646E55, 0xE900000000000065, 0, 0, v113, &v142);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v94[47] = &type metadata for FormatInspectionGroup;
  v94[48] = &off_1F1BDEC90;
  uint64_t v120 = swift_allocObject();
  v94[44] = v120;
  long long v121 = v143;
  *(_OWORD *)(v120 + 16) = v142;
  *(_OWORD *)(v120 + 32) = v121;
  *(void *)(v120 + 48) = v144;
  unint64_t v122 = sub_1C131B79C((uint64_t)v94);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v122;
}

uint64_t sub_1C109EE7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C109EEC4()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C109EF08()
{
  sub_1BFF05CCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C109EF48()
{
  return swift_deallocObject();
}

void sub_1C109EF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C109B94C(a1, a2, a3, *(double *)(v4 + 24), a4, *(void **)(v4 + 16), *(void **)(v4 + 32));
}

uint64_t sub_1C109EF98()
{
  return swift_deallocObject();
}

uint64_t sub_1C109EFA8()
{
  return swift_deallocObject();
}

void sub_1C109EFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C109BBF8(a1, a2, a3, *(double *)(v4 + 32), a4, *(double **)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1C109EFEC()
{
  return swift_deallocObject();
}

BOOL static FormatPuzzleBinding.Command.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPuzzleBinding.Command.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleBinding.Command.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C109F094()
{
  unint64_t result = qword_1EA1AAE08;
  if (!qword_1EA1AAE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAE08);
  }
  return result;
}

unint64_t sub_1C109F0E8(uint64_t a1)
{
  unint64_t result = sub_1C109F110();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C109F110()
{
  unint64_t result = qword_1EA1AAE10;
  if (!qword_1EA1AAE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAE10);
  }
  return result;
}

unint64_t sub_1C109F164(void *a1)
{
  a1[1] = sub_1C087D328();
  a1[2] = sub_1C08FD744();
  unint64_t result = sub_1C109F094();
  a1[3] = result;
  return result;
}

uint64_t sub_1C109F19C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPuzzleBinding.Command.init(from:)(a1, a2);
}

uint64_t sub_1C109F1B4(void *a1)
{
  return FormatPuzzleBinding.Command.encode(to:)(a1);
}

unsigned char *_s7CommandOwst_6(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C109F298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Command()
{
  return &type metadata for FormatPuzzleBinding.Command;
}

uint64_t dispatch thunk of FormatAnalyticsDataProviderType.pushGroupData(into:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1C109F2E4(void *a1, uint64_t a2, int a3)
{
  char v4 = BYTE2(a3);
  sub_1C109FA5C(0, &qword_1EA1AAE18, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v13[-v10];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C109F518();
  sub_1C1520F0C();
  uint64_t v14 = a2;
  v13[15] = 0;
  sub_1C045A220();
  sub_1C0DF0DD0((unint64_t *)&qword_1EA19B790, (void (*)(void))sub_1C045A2E8);
  sub_1C152080C();
  if (!v3)
  {
    v13[14] = 1;
    sub_1C15207DC();
    v13[13] = 2;
    sub_1C15207DC();
    v13[12] = v4 & 1;
    v13[11] = 3;
    sub_1C109F56C();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1C109F518()
{
  unint64_t result = qword_1EB86F438;
  if (!qword_1EB86F438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F438);
  }
  return result;
}

unint64_t sub_1C109F56C()
{
  unint64_t result = qword_1EA1AAE20;
  if (!qword_1EA1AAE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAE20);
  }
  return result;
}

unint64_t sub_1C109F5C0()
{
  unint64_t result = 0x6E6572646C696863;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E65646469487369;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x726564616568;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C109F64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C109FEB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C109F674(uint64_t a1)
{
  unint64_t v2 = sub_1C109F518();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C109F6B0(uint64_t a1)
{
  unint64_t v2 = sub_1C109F518();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C109F6EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C109F774(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(unsigned char *)(a2 + 9) = BYTE1(v5) & 1;
    *(unsigned char *)(a2 + 10) = BYTE2(v5) & 1;
  }
  return result;
}

uint64_t sub_1C109F730(void *a1)
{
  if (*(unsigned char *)(v1 + 9)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return sub_1C109F2E4(a1, *(void *)v1, v2 | (*(unsigned __int8 *)(v1 + 10) << 16) | *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_1C109F774(void *a1)
{
  sub_1C109FA5C(0, &qword_1EB86F470, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1C109F518();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1C045A220();
    v10[15] = 0;
    sub_1C0DF0DD0(&qword_1EB86B298, (void (*)(void))sub_1C0DF0E3C);
    sub_1C15206EC();
    uint64_t v8 = v11;
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_1C152061C();
    v10[13] = 2;
    sub_1C152061C();
    v10[11] = 3;
    sub_1C109FAC0();
    sub_1C152065C();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

void sub_1C109FA5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C109F518();
    unint64_t v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C109FAC0()
{
  unint64_t result = qword_1EB86F430;
  if (!qword_1EB86F430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F430);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsTaxonomyGraphResourceSectionNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C109FBE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceSectionNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys;
}

uint64_t sub_1C109FC1C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsTaxonomyGraphResourceSectionNode(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  return a1;
}

uint64_t assignWithTake for SportsTaxonomyGraphResourceSectionNode(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsTaxonomyGraphResourceSectionNode(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 11)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceSectionNode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 11) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 11) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceSectionNode()
{
  return &type metadata for SportsTaxonomyGraphResourceSectionNode;
}

unint64_t sub_1C109FDAC()
{
  unint64_t result = qword_1EA1AAE28;
  if (!qword_1EA1AAE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAE28);
  }
  return result;
}

unint64_t sub_1C109FE04()
{
  unint64_t result = qword_1EB86F448;
  if (!qword_1EB86F448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F448);
  }
  return result;
}

unint64_t sub_1C109FE5C()
{
  unint64_t result = qword_1EB86F440;
  if (!qword_1EB86F440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F440);
  }
  return result;
}

uint64_t sub_1C109FEB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65646469487369 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1615CD0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t FeedCursorKind.rawValue.getter()
{
  uint64_t result = 0x657669746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1852138867;
      break;
    case 2:
      uint64_t result = 0x6E657A6F7266;
      break;
    case 3:
      uint64_t result = 0x656546664F646E65;
      break;
    case 4:
      uint64_t result = 0x646568636163;
      break;
    case 5:
      uint64_t result = 0x64656C6F6F706572;
      break;
    case 6:
      uint64_t result = 0x6465646E61707865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FeedCursorKind.description.getter()
{
  uint64_t result = 0x657669746341;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1852138835;
      break;
    case 2:
      uint64_t result = 0x6E657A6F7246;
      break;
    case 3:
      uint64_t result = 0x4620666F20646E45;
      break;
    case 4:
      uint64_t result = 0x646568636143;
      break;
    case 5:
      uint64_t result = 0x64656C6F6F706552;
      break;
    case 6:
      uint64_t result = 0x6465646E61707845;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C10A01F8(unsigned __int8 *a1, char *a2)
{
  return sub_1C1494758(*a1, *a2);
}

unint64_t sub_1C10A0208()
{
  unint64_t result = qword_1EB85C990;
  if (!qword_1EB85C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C990);
  }
  return result;
}

uint64_t sub_1C10A025C()
{
  return sub_1C04510F0();
}

uint64_t sub_1C10A0268()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10A0364()
{
  return sub_1C04510F0();
}

NewsFeed::FeedCursorKind_optional sub_1C10A036C(Swift::String *a1)
{
  return FeedCursorKind.init(rawValue:)(*a1);
}

void sub_1C10A0378(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x657669746361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1852138867;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E657A6F7266;
      a1[1] = 0xE600000000000000;
      return;
    case 3:
      *a1 = 0x656546664F646E65;
      a1[1] = 0xE900000000000064;
      return;
    case 4:
      *a1 = 0x646568636163;
      a1[1] = 0xE600000000000000;
      return;
    case 5:
      uint64_t v4 = 0x6C6F6F706572;
      goto LABEL_9;
    case 6:
      uint64_t v4 = 0x646E61707865;
LABEL_9:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unsigned char *storeEnumTagSinglePayload for FeedCursorKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10A053CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedCursorKind()
{
  return &type metadata for FeedCursorKind;
}

uint64_t static CoverChannelViewLayout.makeCatalogLayout(context:factories:options:)(void *a1)
{
  uint64_t v22 = sub_1C1517A9C();
  uint64_t v2 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1517A7C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = a1[23];
  uint64_t v10 = a1[24];
  __swift_project_boxed_opaque_existential_1(a1 + 20, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  uint64_t v11 = a1[23];
  uint64_t v12 = a1[24];
  __swift_project_boxed_opaque_existential_1(a1 + 20, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12);
  FeedTag.coverImageAspectRatio.getter();
  if (v13)
  {
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4FAB8C0];
    goto LABEL_5;
  }
  uint64_t result = FeedTag.coverImageAspectRatio.getter();
  if ((v15 & 1) == 0)
  {
    *uint64_t v8 = result;
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4FAB8D0];
LABEL_5:
    uint64_t v17 = v22;
    uint64_t v18 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *v16, v5);
    unint64_t v19 = MEMORY[0x1F4188790](v18).n128_u64[0];
    *(&v21 - 4) = (uint64_t)v8;
    *(&v21 - 3) = v19;
    *(&v21 - 2) = (uint64_t)a1;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAB8F8], v17);
    sub_1C03A962C(0, (unint64_t *)&qword_1EA19AA58, MEMORY[0x1E4FAB938]);
    swift_allocObject();
    uint64_t v20 = sub_1C1517BEC();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C10A0854(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v8);
  char v13 = &v16[-v12];
  uint64_t v20 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v10 + 104))(&v16[-v12], *MEMORY[0x1E4FABA28], v9, v11);
  uint64_t v17 = a2;
  double v18 = a4;
  uint64_t v19 = a3;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C03A962C(0, &qword_1EA19AA78, MEMORY[0x1E4FAB6F0]);
  sub_1C03A96B0(&qword_1EA19AA80, &qword_1EA19AA78, v14);
  sub_1C151734C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1C10A0A1C(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v62 = a3;
  uint64_t v57 = a2;
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v49 - v9);
  uint64_t v68 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0x4024000000000000;
  *uint64_t v10 = v11;
  unsigned int v64 = *MEMORY[0x1E4FABA08];
  uint64_t v12 = *(void (**)(uint64_t *))(v8 + 104);
  v12(v10);
  char v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v13);
  sub_1C151738C();
  long long v63 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v63(v10, v7);
  uint64_t v68 = a1;
  uint64_t v17 = *MEMORY[0x1E4FABA28];
  uint64_t v58 = v8 + 104;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v12)(v10, v17, v7);
  uint64_t v55 = v12;
  uint64_t v67 = v57;
  uint64_t v61 = v16;
  uint64_t v56 = v15;
  sub_1C151734C();
  double v18 = v63;
  v63(v10, v7);
  uint64_t v59 = a1;
  uint64_t v60 = v8 + 8;
  uint64_t v68 = a1;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0x4024000000000000;
  *uint64_t v10 = v19;
  uint64_t v54 = v7;
  ((void (*)(uint64_t *, void, uint64_t))v12)(v10, v64, v7);
  sub_1C151738C();
  v18(v10, v7);
  uint64_t v68 = a1;
  sub_1BFF35C38();
  uint64_t v21 = v20;
  uint64_t v57 = v20;
  uint64_t v53 = swift_allocBox();
  uint64_t v23 = v22;
  long long v50 = (uint64_t *)((char *)v22 + *(int *)(v21 + 48));
  uint64_t v24 = sub_1C151786C();
  uint64_t v25 = swift_allocBox();
  uint64_t v27 = v26;
  uint64_t v28 = swift_allocObject();
  *(double *)(v28 + 16) = a4 + 12.0;
  *uint64_t v27 = v28;
  uint64_t v29 = *(void *)(v24 - 8);
  uint64_t v30 = *(void (**)(uint64_t *, void, uint64_t))(v29 + 104);
  uint64_t v31 = v29 + 104;
  v30(v27, *MEMORY[0x1E4FAB798], v24);
  *uint64_t v23 = v25;
  v30(v23, *MEMORY[0x1E4FAB7A0], v24);
  uint64_t v51 = v31;
  long long v52 = (void (*)(uint64_t, void, uint64_t))v30;
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v62[23];
  uint64_t v34 = v62[24];
  char v35 = v62;
  __swift_project_boxed_opaque_existential_1(v62 + 20, v33);
  *(double *)(v32 + 16) = (*(double (**)(uint64_t, uint64_t))(v34 + 32))(v33, v34);
  *long long v50 = v32;
  ((void (*)(void))v30)();
  *uint64_t v10 = v53;
  LODWORD(v53) = *MEMORY[0x1E4FAB9E8];
  uint64_t v36 = v54;
  uint64_t v37 = v55;
  v55(v10);
  unint64_t v66 = v35;
  sub_1C151731C();
  long long v38 = v63;
  v63(v10, v36);
  uint64_t v39 = v59;
  uint64_t v68 = v59;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = 0x401C000000000000;
  *uint64_t v10 = v40;
  ((void (*)(uint64_t *, void, uint64_t))v37)(v10, v64, v36);
  sub_1C151738C();
  v38(v10, v36);
  uint64_t v68 = v39;
  uint64_t v41 = v57;
  uint64_t v42 = swift_allocBox();
  uint64_t v44 = v43 + *(int *)(v41 + 48);
  long long v45 = v52;
  v52(v43, *MEMORY[0x1E4FAB790], v24);
  v45(v44, *MEMORY[0x1E4FAB7B0], v24);
  *uint64_t v10 = v42;
  ((void (*)(uint64_t *, void, uint64_t))v37)(v10, v53, v36);
  unint64_t v65 = v62;
  sub_1C151731C();
  uint64_t v46 = (uint64_t (*)(uint64_t *, uint64_t))v63;
  v63(v10, v36);
  uint64_t v68 = v59;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 0x4038000000000000;
  *uint64_t v10 = v47;
  ((void (*)(uint64_t *, void, uint64_t))v37)(v10, v64, v36);
  sub_1C151738C();
  return v46(v10, v36);
}

uint64_t sub_1C10A1108(uint64_t a1)
{
  return sub_1C10A0A1C(a1, *(void *)(v1 + 16), *(void **)(v1 + 32), *(double *)(v1 + 24));
}

uint64_t sub_1C10A1118()
{
  return swift_deallocObject();
}

uint64_t sub_1C10A1128(uint64_t a1, uint64_t a2)
{
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v16 - v7);
  v16[1] = a1;
  swift_getKeyPath();
  uint64_t v9 = sub_1C1517A8C();
  uint64_t v10 = swift_allocBox();
  uint64_t v12 = v11;
  uint64_t v13 = sub_1C1517A7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a2, v13);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v12, *MEMORY[0x1E4FAB8E0], v9);
  *uint64_t v8 = v10;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9F8], v5);
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
  sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v14);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C10A13A8(uint64_t a1)
{
  return sub_1C10A1128(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C10A13B0(uint64_t a1, uint64_t a2)
{
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v28 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 200);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    sub_1C03A9734();
    sub_1C03A97A8(0, &qword_1EA19AAA0, MEMORY[0x1E4FAB678]);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
    unint64_t v23 = v22 + v21;
    uint64_t v24 = *MEMORY[0x1E4FAB600];
    sub_1C03A97A8(0, &qword_1EA19AAA8, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E4FAB620], v19);
    long long v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
    sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v26);
    sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v27 = v17;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10A1810(uint64_t a1)
{
  return sub_1C10A13B0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C10A1818(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a1;
  sub_1C03A97A8(0, &qword_1EA19AA70, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v52 = v6;
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v40 - v7);
  uint64_t v9 = (void *)sub_1C10A1DC0(a2);
  id v46 = v9;
  uint64_t v58 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  long long v50 = v8;
  *uint64_t v8 = v10;
  uint64_t v11 = *MEMORY[0x1E4FAB968];
  uint64_t v12 = *(void (**)(uint64_t *, void, uint64_t))(v6 + 104);
  uint64_t v54 = v6 + 104;
  uint64_t v55 = v12;
  v12(v8, v11, v5);
  sub_1C03A9734();
  uint64_t v49 = v13;
  sub_1C03A97A8(0, &qword_1EA19AAA0, MEMORY[0x1E4FAB678]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v57 = *(void *)(v16 + 72);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (v17 + 32) & ~v17;
  uint64_t v47 = v18;
  uint64_t v48 = v17 | 7;
  uint64_t v19 = swift_allocObject();
  uint64_t v42 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  uint64_t v20 = v19 + v18;
  *(void *)(v19 + v18) = 0x4034000000000000;
  LODWORD(v41) = *MEMORY[0x1E4FAB7E8];
  uint64_t v21 = v41;
  uint64_t v22 = sub_1C15178EC();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);
  v40(v20, v21, v22);
  uint64_t v23 = *MEMORY[0x1E4FAB858];
  uint64_t v24 = sub_1C15179EC();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);
  v25(v20, v23, v24);
  uint64_t v26 = *MEMORY[0x1E4FAB550];
  id v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  uint64_t v44 = v15;
  v27(v20, v26, v15);
  uint64_t v43 = v27;
  uint64_t v45 = v16 + 104;
  uint64_t v28 = (void *)(v20 + v57);
  *uint64_t v28 = 0x4008000000000000;
  v40((uint64_t)v28, v41, v22);
  v25((uint64_t)v28, v23, v24);
  v27((uint64_t)v28, *MEMORY[0x1E4FAB560], v15);
  uint64_t v29 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C03A962C(0, &qword_1EA19AA88, MEMORY[0x1E4FAB4D0]);
  uint64_t v41 = v30;
  sub_1C03A96B0(&qword_1EA19AA90, &qword_1EA19AA88, v29);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  id v46 = v46;
  uint64_t v31 = v50;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = v51;
  uint64_t v33 = *(void (**)(uint64_t *, uint64_t))(v52 + 8);
  v33(v31, v51);
  uint64_t v58 = v56;
  swift_getKeyPath();
  v55(v31, *MEMORY[0x1E4FAB9F0], v32);
  uint64_t v34 = v47;
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
  uint64_t v36 = v35 + v34;
  uint64_t v37 = *MEMORY[0x1E4FAB610];
  sub_1C03A97A8(0, &qword_1EA19AAA8, MEMORY[0x1E4FAB618]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  v43(v36, *MEMORY[0x1E4FAB620], v44);
  sub_1C151737C();

  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v31, v32);
}

uint64_t sub_1C10A1DB8(uint64_t a1)
{
  return sub_1C10A1818(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C10A1DC0(uint64_t a1)
{
  uint64_t v2 = sub_1C151E24C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = qword_1EB8739C0;
  if ((*(unsigned char *)(a1 + 72) & 1) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 224);
    if (*(unsigned char *)(v7 + qword_1EB8739C0)) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    sub_1BFE4597C();
    *uint64_t v5 = sub_1C151F56C();
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
    a1 = sub_1C151E26C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
    v3 += 8;
    v8(v5, v2);
    if (a1) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    __break(1u);
  }
  uint64_t v7 = *(void *)(a1 + 232);
  if (*(unsigned char *)(v7 + v6)) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  sub_1BFE4597C();
  *uint64_t v5 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
  char v9 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v9) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  __break(1u);
  return result;
}

uint64_t sub_1C10A1F7C()
{
  return swift_deallocObject();
}

char *sub_1C10A1FB4(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap;
  sub_1BFD22278();
  id v13 = objc_allocWithZone(v12);
  uint64_t v14 = v4;
  *(void *)&v5[v11] = objc_msgSend(v13, sel_init);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel;
  *(void *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton;
  *(void *)&v14[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_init);

  v24.receiver = v14;
  v24.super_class = ObjectType;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel];
  uint64_t v19 = v17;
  objc_msgSend(v19, sel_addSubview_, v18);
  uint64_t v20 = *(void **)&v19[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];
  objc_msgSend(v19, sel_addSubview_, v20);
  id v21 = *(id *)&v19[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap];
  id v22 = v20;
  sub_1C151C87C();

  return v19;
}

void *sub_1C10A2180(uint64_t a1, double a2, double a3)
{
  v12.receiver = v3;
  v12.super_class = (Class)swift_getObjectType();
  uint64_t v7 = (char *)objc_msgSendSuper2(&v12, sel_hitTest_withEvent_, a1, a2, a3);
  uint64_t v8 = v7;
  if (v7)
  {
    if (v7 == v3)
    {
    }
    else
    {
      char v9 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];

      if (v8 != v9) {
        return 0;
      }
    }
    uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];
    id v10 = v8;
  }
  return v8;
}

uint64_t type metadata accessor for HiddenContentPlacardView()
{
  return self;
}

id sub_1C10A2330()
{
  return objc_msgSend(*v0, sel_removeFromSuperview);
}

void sub_1C10A2340()
{
  sub_1C10A23CC((unint64_t *)&unk_1EA1AAE50);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C10A2398()
{
  return sub_1C10A23CC(&qword_1EA1AAE48);
}

uint64_t sub_1C10A23CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HiddenContentPlacardView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C10A240C()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap;
  sub_1BFD22278();
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_init);

  sub_1C152040C();
  __break(1u);
}

ValueMetadata *type metadata accessor for DebugFormatAccessibilitySection()
{
  return &type metadata for DebugFormatAccessibilitySection;
}

uint64_t sub_1C10A24FC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for WebEmbedRadarAttachmentProvider();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC845BC(0, &qword_1EB86FA00);
    uint64_t result = sub_1C151819C();
    if (v9)
    {
      uint64_t v4 = (objc_class *)type metadata accessor for DiagnosticFileProvider();
      uint64_t v5 = (char *)objc_allocWithZone(v4);
      *(void *)&v5[OBJC_IVAR____TtC8NewsFeed22DiagnosticFileProvider_webEmbedRadarAttachmentProvider] = v3;
      sub_1BFC66384((uint64_t)v8, (uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed22DiagnosticFileProvider_attachmentResolver]);
      v7.receiver = v5;
      v7.super_class = v4;
      id v6 = objc_msgSendSuper2(&v7, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      return (uint64_t)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C10A260C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC845BC(0, (unint64_t *)&unk_1EB88D6E0);
  uint64_t result = sub_1C151819C();
  if (v4)
  {
    type metadata accessor for WebEmbedRadarAttachmentProvider();
    uint64_t v2 = swift_allocObject();
    sub_1BFC773DC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C10A26A8(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for DiagnosticFileProvider();
  uint64_t v2 = sub_1C151818C();
  if (v2)
  {
    id v3 = (id)v2;
    sub_1C1518BAC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for DiagnosticAssembly()
{
  return self;
}

uint64_t sub_1C10A2754()
{
  uint64_t v0 = sub_1C151824C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C15183EC();
  type metadata accessor for DiagnosticFileProvider();
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C15183EC();
  type metadata accessor for WebEmbedRadarAttachmentProvider();
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C151840C();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1C1518BBC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAAA00], v0);
  sub_1C1518C2C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

unint64_t sub_1C10A2940()
{
  if (*v0) {
    return 0xD000000000000044;
  }
  else {
    return 0xD000000000000037;
  }
}

void *NativeAdService.__allocating_init(contextBuilder:headlineService:adManager:adRequestManager:adRequestStore:)(long long *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_allocObject();
  v10[19] = MEMORY[0x1E4FBC868];
  sub_1BFC773DC(a1, (uint64_t)(v10 + 2));
  sub_1BFC773DC(a2, (uint64_t)(v10 + 7));
  sub_1BFC773DC(a3, (uint64_t)(v10 + 12));
  v10[17] = a4;
  v10[18] = a5;
  return v10;
}

void *NativeAdService.init(contextBuilder:headlineService:adManager:adRequestManager:adRequestStore:)(long long *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5)
{
  v5[19] = MEMORY[0x1E4FBC868];
  sub_1BFC773DC(a1, (uint64_t)(v5 + 2));
  sub_1BFC773DC(a2, (uint64_t)(v5 + 7));
  sub_1BFC773DC(a3, (uint64_t)(v5 + 12));
  v5[17] = a4;
  v5[18] = a5;
  return v5;
}

uint64_t NativeAdService.fetchNativeAd(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v55 = a3;
  unint64_t v56 = a4;
  uint64_t v59 = a1;
  uint64_t v57 = *v4;
  uint64_t v51 = sub_1C151D40C();
  uint64_t v7 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151D61C();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x1F4188790](v10);
  objc_super v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v54 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v49 - v16;
  sub_1C1516F5C();
  char v18 = sub_1C151701C();
  swift_release();
  if (v18)
  {
    uint64_t v19 = v59;
    return sub_1C10A3184(v19, a2);
  }
  else
  {
    uint64_t v50 = (uint64_t)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v58 = v17;
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    id v21 = (void *)qword_1EB93C6F8;
    sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
    *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v22 + 64) = sub_1BFE9C558();
    *(void *)(v22 + 32) = v59;
    *(void *)(v22 + 40) = a2;
    id v23 = v21;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    v49[1] = v5;
    sub_1C10A636C();
    sub_1C151D10C();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F7A9D8], v51);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C151D60C();
    MEMORY[0x1F4188790](v24);
    unint64_t v25 = v56;
    v49[-2] = v55;
    v49[-1] = v25;
    uint64_t v26 = (uint64_t)v58;
    sub_1C151D54C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v53);
    unint64_t v56 = sub_1BFE4597C();
    id v27 = (void *)sub_1C151F56C();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = v50;
    sub_1C10A6498(v26, v50);
    uint64_t v30 = *(unsigned __int8 *)(v54 + 80);
    uint64_t v31 = (v30 + 24) & ~v30;
    uint64_t v32 = v14 + 7;
    unint64_t v33 = (v14 + 7 + v31) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v28;
    sub_1C10A6804(v29, v34 + v31);
    uint64_t v35 = (uint64_t *)(v34 + v33);
    uint64_t v36 = v59;
    uint64_t *v35 = v59;
    v35[1] = a2;
    sub_1BFC845BC(0, &qword_1EB871750);
    swift_bridgeObjectRetain();
    sub_1C151930C();

    swift_release();
    uint64_t v37 = (uint64_t)v58;
    sub_1C10A6498((uint64_t)v58, v29);
    uint64_t v38 = (v30 + 16) & ~v30;
    uint64_t v39 = swift_allocObject();
    sub_1C10A6804(v29, v39 + v38);
    uint64_t v40 = (uint64_t *)(v39 + ((v32 + v38) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v41 = v36;
    uint64_t *v40 = v36;
    v40[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v42 = (void *)sub_1C1518E7C();
    sub_1C151D2DC();
    sub_1C1518FEC();
    swift_release();
    swift_release();

    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v36;
    *(void *)(v43 + 24) = a2;
    swift_bridgeObjectRetain();
    uint64_t v44 = (void *)sub_1C1518E7C();
    sub_1C151DC0C();
    sub_1C151900C();
    swift_release();
    swift_release();

    uint64_t v45 = (void *)sub_1C151F56C();
    uint64_t v46 = swift_allocObject();
    swift_weakInit();
    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = v46;
    v47[3] = v41;
    v47[4] = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v48 = sub_1C151909C();
    swift_release();

    swift_release();
    sub_1C10A6BC4(v37);
    swift_release();
    return v48;
  }
}

uint64_t sub_1C10A3184(uint64_t a1, uint64_t a2)
{
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1EB93C6F8;
  sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1BFE9C558();
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  id v8 = v4;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C1516F5C();
  sub_1C1516F4C();
  swift_release();
  sub_1C10A71C4(&qword_1EA1AAE60, v9, (void (*)(uint64_t))type metadata accessor for NativeAdService);
  sub_1C1516FBC();
  uint64_t v10 = swift_release();
  uint64_t v11 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v11 = *(void *)v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    MEMORY[0x1F4188790](v10);
    sub_1BFF91B1C();
    sub_1C151932C();
    swift_bridgeObjectRelease();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = a2;
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_1C1518E7C();
    sub_1C151DC0C();
    uint64_t v14 = sub_1C151901C();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v15 = (id)qword_1EB93C6F8;
    sub_1C151F36C();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
    *(void *)(v16 + 56) = v6;
    *(void *)(v16 + 64) = v7;
    *(void *)(v16 + 32) = a1;
    *(void *)(v16 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C10A6D44();
    swift_allocError();
    *uint64_t v17 = 0;
    sub_1C10A7160(0, &qword_1EB871468, MEMORY[0x1E4F7B0E0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  return v14;
}

uint64_t sub_1C10A3550(void *a1)
{
  return swift_release();
}

uint64_t sub_1C10A3674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v33 = a3;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4F7B0F0];
  sub_1C10A6D98(0, (unint64_t *)&unk_1EB8717F0, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v30 - v8;
  sub_1C10A6690(0, &qword_1EB8717E8, v6);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v30 - v13;
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v30 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    sub_1C10A6498(a2, (uint64_t)v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, 1, 1, v11);
      sub_1C151DAAC();
      sub_1C10A6DF0((uint64_t)v9, (uint64_t)&unk_1EB8717F0, (uint64_t)&qword_1EB8717E8, MEMORY[0x1E4F7B0F0], (uint64_t (*)(void))sub_1C10A6D98);
      sub_1BFEE80A8(0, &qword_1EB871458, &qword_1EB871750, MEMORY[0x1E4F7AE48], MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v20 = sub_1C151906C();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1C10A6758();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
      uint64_t v23 = v19[15];
      v30[1] = v19[16];
      uint64_t v31 = __swift_project_boxed_opaque_existential_1(v19 + 12, v23);
      sub_1C10A636C();
      sub_1C151D10C();
      sub_1C151D4EC();
      uint64_t v24 = sub_1C151D5AC();
      uint64_t v32 = v11;
      uint64_t v25 = v24;
      sub_1C151D61C();
      sub_1C10A71C4((unint64_t *)&unk_1EB894910, 255, MEMORY[0x1E4F7AC20]);
      uint64_t v20 = (uint64_t)v31;
      sub_1C151D2EC();
      if (!v4)
      {
        swift_release();
        uint64_t v26 = v34[0];
        uint64_t v27 = MEMORY[0x1E4F7AC80];
        uint64_t v35 = v25;
        uint64_t v36 = MEMORY[0x1E4F7AC80];
        swift_beginAccess();
        uint64_t v28 = v37;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C02E8C2C((uint64_t)v34, v33, v28);
        swift_endAccess();
        uint64_t v35 = v25;
        uint64_t v36 = v27;
        v34[0] = v26;
        sub_1BFEE80A8(0, &qword_1EB871458, &qword_1EB871750, MEMORY[0x1E4F7AE48], MEMORY[0x1E4FAB088]);
        swift_allocObject();
        swift_retain();
        uint64_t v20 = sub_1C151908C();
      }
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v32);
    }
  }
  else
  {
    uint64_t v21 = sub_1C151813C();
    sub_1C10A71C4((unint64_t *)&unk_1EA1AAE70, 255, MEMORY[0x1E4FAA9B0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(v22, *MEMORY[0x1E4FAA9A0], v21);
    sub_1BFEE80A8(0, &qword_1EB871458, &qword_1EB871750, MEMORY[0x1E4F7AE48], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  return v20;
}

uint64_t sub_1C10A3C68(void *a1, uint64_t a2)
{
  sub_1C10A6690(0, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v14 - v10;
  sub_1C10A6498(a2, (uint64_t)&v14 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1C10A7160(0, &qword_1EA1AAE68, MEMORY[0x1E4F7A860], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  else
  {
    sub_1C10A6758();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_1C151DADC();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v12 = sub_1C151D81C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v12;
}

uint64_t sub_1C10A3ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v55 = a3;
  uint64_t v57 = a2;
  uint64_t v5 = sub_1C151D25C();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151DC0C();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10A6D98(0, (unint64_t *)&unk_1EB8716E0, &qword_1EB8716D8, MEMORY[0x1E4F7A948]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v46 - v10;
  sub_1C10A6D98(0, (unint64_t *)&unk_1EB8717F0, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v49 = (char *)&v46 - v13;
  uint64_t v54 = sub_1C151D24C();
  uint64_t v50 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151D2CC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C151D2DC();
  uint64_t v21 = *(void *)(v20 - 8);
  __n128 v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16))(v24, a1, v20, v22);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v24, v20);
  if (v25 == *MEMORY[0x1E4F7A858])
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v24, v16);
    uint64_t v26 = sub_1C151D22C();
    a1 = sub_1C10A4794(v55, v56, (uint64_t)v19, v26);
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else if (v25 == *MEMORY[0x1E4F7A848])
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    uint64_t v27 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v15, v24, v54);
    uint64_t v48 = sub_1C151D22C();
    uint64_t v28 = sub_1C151DB1C();
    sub_1C10A71C4(&qword_1EB8707E8, 255, MEMORY[0x1E4F7B080]);
    uint64_t v47 = swift_allocError();
    uint64_t v30 = v29;
    sub_1C151D23C();
    *uint64_t v30 = sub_1C15195DC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4F7B078], v28);
    uint64_t v31 = *MEMORY[0x1E4F7A940];
    uint64_t v32 = MEMORY[0x1E4F7A948];
    sub_1C10A6690(0, &qword_1EB8716D8, MEMORY[0x1E4F7A948]);
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v11, v31, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v34);
    uint64_t v36 = (uint64_t)v49;
    sub_1C151D37C();
    sub_1C10A6DF0((uint64_t)v11, (uint64_t)&unk_1EB8716E0, (uint64_t)&qword_1EB8716D8, v32, (uint64_t (*)(void))sub_1C10A6D98);
    uint64_t v37 = (void *)v47;
    sub_1C151DAAC();
    swift_release();
    sub_1C10A6DF0(v36, (uint64_t)&unk_1EB8717F0, (uint64_t)&qword_1EB8717E8, MEMORY[0x1E4F7B0F0], (uint64_t (*)(void))sub_1C10A6D98);

    uint64_t v38 = v53;
    uint64_t v39 = v54;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v53, v15, v54);
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v38, *MEMORY[0x1E4F7B0D0], v52);
    sub_1C10A7160(0, &qword_1EB871468, MEMORY[0x1E4F7B0E0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    a1 = sub_1C151908C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v39);
  }
  else if (v25 == *MEMORY[0x1E4F7A850])
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    uint64_t v41 = v46;
    uint64_t v40 = v47;
    uint64_t v42 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v24, v48);
    uint64_t v43 = v53;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v53, v41, v42);
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v43, *MEMORY[0x1E4F7B0D8], v52);
    sub_1C10A7160(0, &qword_1EB871468, MEMORY[0x1E4F7B0E0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    a1 = sub_1C151908C();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  }
  else
  {
    sub_1C10A6D44();
    swift_allocError();
    *uint64_t v45 = 1;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  return a1;
}

uint64_t sub_1C10A4794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v41 = a4;
  uint64_t v45 = *v5;
  uint64_t v43 = sub_1C151D2CC();
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v44 = v9;
  uint64_t v40 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EB93C6F8;
  sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
  id v12 = v10;
  uint64_t v13 = a3;
  uint64_t v14 = sub_1C151D2BC();
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v18 = sub_1BFE9C558();
  *(void *)(v11 + 32) = v14;
  *(void *)(v11 + 40) = v16;
  *(void *)(v11 + 96) = v17;
  *(void *)(v11 + 104) = v18;
  *(void *)(v11 + 64) = v18;
  *(void *)(v11 + 72) = a1;
  *(void *)(v11 + 80) = a2;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();

  uint64_t v19 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v19);
  uint64_t v38 = v13;
  v35[-4] = v13;
  v35[-3] = a1;
  v35[-2] = a2;
  v35[-1] = v5;
  sub_1BFF91B1C();
  v35[0] = sub_1C151932C();
  uint64_t v21 = v39;
  uint64_t v20 = v40;
  uint64_t v42 = v5;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  uint64_t v22 = v43;
  v37(v40, v13, v43);
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = (v23 + 32) & ~v23;
  v35[1] = v23 | 7;
  uint64_t v36 = a1;
  uint64_t v25 = a2;
  unint64_t v26 = (v44 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  *(void *)(v27 + 24) = v25;
  uint64_t v39 = *(void *)(v21 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v39)(v27 + v24, v20, v22);
  uint64_t v28 = v41;
  *(void *)(v27 + v26) = v41;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v29 = (void *)sub_1C1518E7C();
  sub_1C151DC0C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v30 = v43;
  v37(v20, v38, v43);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v36;
  v31[3] = v25;
  v31[4] = v28;
  ((void (*)(char *, char *, uint64_t))v39)((char *)v31 + ((v23 + 40) & ~v23), v20, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v32 = (void *)sub_1C1518E7C();
  uint64_t v33 = sub_1C151904C();
  swift_release();
  swift_release();

  return v33;
}

uint64_t sub_1C10A4BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C02E8C2C((uint64_t)v6, a2, a3);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C10A4C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C151D2BC();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1((void *)(a4 + 56), *(void *)(a4 + 80));
    sub_1C151D2BC();
    uint64_t v11 = HeadlineServiceType.headline(for:purpose:)();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EB93C6F8;
    sub_1C151F36C();
    sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1BFE9C558();
    *(void *)(v14 + 32) = a2;
    *(void *)(v14 + 40) = a3;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C10A6D44();
    swift_allocError();
    *uint64_t v15 = 0;
    sub_1C10A7160(0, &qword_1EB8714C0, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
}

id sub_1C10A4E8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v84 = a6;
  uint64_t v88 = a5;
  uint64_t v79 = a2;
  uint64_t v11 = sub_1C151D2CC();
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v81 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v86 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151DC0C();
  uint64_t v82 = *(void *)(v13 - 8);
  uint64_t v83 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10A7160(0, &qword_1EB882BA0, MEMORY[0x1E4F7B090], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v77 = (char *)v73 - v17;
  sub_1C10A6D98(0, (unint64_t *)&unk_1EB8716E0, &qword_1EB8716D8, MEMORY[0x1E4F7A948]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v73 - v19;
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4F7B0F0];
  sub_1C10A6D98(0, (unint64_t *)&unk_1EB8717F0, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)v73 - v23;
  sub_1C10A6690(0, &qword_1EB8717E8, v21);
  uint64_t v26 = v25;
  uint64_t v85 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v76 = (char *)v73 - v27;
  uint64_t v28 = *a1;
  self;
  uint64_t v29 = swift_dynamicCastObjCClass();
  uint64_t v30 = qword_1EB87B058;
  if (v29)
  {
    uint64_t v31 = (void *)v29;
    uint64_t v78 = v26;
    uint64_t v74 = v15;
    uint64_t v75 = v7;
    uint64_t v87 = a4;
    v73[1] = v28;
    swift_unknownObjectRetain();
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_1EB93C6F8;
    sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1527210;
    id v34 = v32;
    id result = objc_msgSend(v31, sel_articleID);
    if (result)
    {
      uint64_t v36 = result;
      uint64_t v37 = sub_1C151E62C();
      uint64_t v39 = v38;

      uint64_t v40 = MEMORY[0x1E4FBB1A0];
      *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v41 = sub_1BFE9C558();
      *(void *)(v33 + 32) = v37;
      *(void *)(v33 + 40) = v39;
      *(void *)(v33 + 96) = v40;
      *(void *)(v33 + 104) = v41;
      *(void *)(v33 + 64) = v41;
      *(void *)(v33 + 72) = a3;
      *(void *)(v33 + 80) = v87;
      swift_bridgeObjectRetain();
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setDisplayAsNativeAd_, 1);
      objc_msgSend(v31, sel_setSponsored_, 1);
      sub_1C151D29C();
      if (v42)
      {
        uint64_t v43 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v43 = 0;
      }
      uint64_t v79 = a3;
      objc_msgSend(v31, sel_setSponsoredBy_, v43);

      sub_1C151D28C();
      uint64_t v50 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setNativeAdCampaignData_, v50);

      uint64_t v51 = sub_1C151D27C();
      if (v52)
      {
        uint64_t v53 = HIBYTE(v52) & 0xF;
        if ((v52 & 0x2000000000000000) == 0) {
          uint64_t v53 = v51 & 0xFFFFFFFFFFFFLL;
        }
        if (v53)
        {
          uint64_t v54 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          objc_msgSend(v31, sel_setTitle_, v54);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v55 = *MEMORY[0x1E4F7A940];
      uint64_t v56 = MEMORY[0x1E4F7A948];
      sub_1C10A6690(0, &qword_1EB8716D8, MEMORY[0x1E4F7A948]);
      uint64_t v58 = v57;
      uint64_t v59 = *(void *)(v57 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 104))(v20, v55, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v20, 0, 1, v58);
      sub_1C151D37C();
      sub_1C10A6DF0((uint64_t)v20, (uint64_t)&unk_1EB8716E0, (uint64_t)&qword_1EB8716D8, v56, (uint64_t (*)(void))sub_1C10A6D98);
      uint64_t v60 = v85;
      uint64_t v61 = v78;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v24, 1, v78) == 1)
      {
        sub_1C10A6DF0((uint64_t)v24, (uint64_t)&unk_1EB8717F0, (uint64_t)&qword_1EB8717E8, MEMORY[0x1E4F7B0F0], (uint64_t (*)(void))sub_1C10A6D98);
        uint64_t v62 = v83;
        uint64_t v63 = v82;
        uint64_t v64 = v88;
      }
      else
      {
        unint64_t v65 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
        v73[0] = v31;
        unint64_t v66 = v76;
        v65(v76, v24, v61);
        uint64_t v64 = v88;
        sub_1C151D26C();
        uint64_t v67 = sub_1C151DB3C();
        uint64_t v68 = (uint64_t)v77;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v77, 1, 1, v67);
        sub_1C151DACC();
        swift_bridgeObjectRelease();
        sub_1C10A6DF0(v68, (uint64_t)&qword_1EB882BA0, MEMORY[0x1E4F7B090], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C10A7160);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v78);
        uint64_t v63 = v82;
        uint64_t v62 = v83;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v86, v64, v81);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      long long v69 = v74;
      sub_1C151D57C();
      uint64_t v70 = *MEMORY[0x1E4F7B0B0];
      uint64_t v71 = sub_1C151DBFC();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 104))(v69, v70, v71);
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v69, *MEMORY[0x1E4F7B0C8], v62);
      sub_1C10A7160(0, &qword_1EB871468, MEMORY[0x1E4F7B0E0], MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v72 = sub_1C151908C();
      swift_unknownObjectRelease();
      return (id)v72;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v44 = a3;
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    id v45 = (id)qword_1EB93C6F8;
    sub_1C151F36C();
    sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1C1527210;
    uint64_t v47 = MEMORY[0x1E4FBB1A0];
    *(void *)(v46 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v48 = sub_1BFE9C558();
    *(void *)(v46 + 32) = 0xD000000000000037;
    *(void *)(v46 + 40) = 0x80000001C1633A50;
    *(void *)(v46 + 96) = v47;
    *(void *)(v46 + 104) = v48;
    *(void *)(v46 + 64) = v48;
    *(void *)(v46 + 72) = v44;
    *(void *)(v46 + 80) = a4;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C10A6D44();
    swift_allocError();
    *uint64_t v49 = 0;
    sub_1C10A7160(0, &qword_1EB871468, MEMORY[0x1E4F7B0E0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151906C();
  }
  return result;
}

uint64_t sub_1C10A593C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  v24[1] = a2;
  uint64_t v25 = a3;
  sub_1C10A6D98(0, (unint64_t *)&unk_1EB8716E0, &qword_1EB8716D8, MEMORY[0x1E4F7A948]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v24 - v9;
  sub_1C10A6D98(0, (unint64_t *)&unk_1EB8717F0, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v24 - v12;
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EB93C6F8;
  sub_1C151F36C();
  sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  uint64_t v28 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v17 = v29;
  unint64_t v16 = v30;
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v19 = sub_1BFE9C558();
  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 96) = v18;
  *(void *)(v15 + 104) = v19;
  uint64_t v20 = v25;
  *(void *)(v15 + 64) = v19;
  *(void *)(v15 + 72) = v20;
  *(void *)(v15 + 80) = a4;
  swift_bridgeObjectRetain();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x1E4F7A948];
  sub_1C10A6690(0, &qword_1EB8716D8, MEMORY[0x1E4F7A948]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
  sub_1C151D37C();
  sub_1C10A6DF0((uint64_t)v10, (uint64_t)&unk_1EB8716E0, (uint64_t)&qword_1EB8716D8, v21, (uint64_t (*)(void))sub_1C10A6D98);
  sub_1C151DAAC();
  sub_1C10A6DF0((uint64_t)v13, (uint64_t)&unk_1EB8717F0, (uint64_t)&qword_1EB8717E8, MEMORY[0x1E4F7B0F0], (uint64_t (*)(void))sub_1C10A6D98);
  return sub_1C151D2AC();
}

id sub_1C10A5CA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v48 = a1;
  uint64_t v9 = sub_1C1516F1C();
  uint64_t v45 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  uint64_t v13 = qword_1EB87B058;
  if (v12)
  {
    id v14 = (void *)v12;
    uint64_t v42 = a4;
    uint64_t v43 = v5;
    uint64_t v44 = a3;
    swift_unknownObjectRetain();
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v41 = v9;
    uint64_t v15 = a2;
    unint64_t v16 = (void *)qword_1EB93C6F8;
    sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1527210;
    id v18 = v16;
    id result = objc_msgSend(v14, sel_articleID);
    if (result)
    {
      uint64_t v20 = result;
      uint64_t v21 = sub_1C151E62C();
      uint64_t v23 = v22;

      uint64_t v24 = MEMORY[0x1E4FBB1A0];
      *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v25 = sub_1BFE9C558();
      *(void *)(v17 + 32) = v21;
      *(void *)(v17 + 40) = v23;
      *(void *)(v17 + 96) = v24;
      *(void *)(v17 + 104) = v25;
      *(void *)(v17 + 64) = v25;
      *(void *)(v17 + 72) = v15;
      uint64_t v40 = v15;
      *(void *)(v17 + 80) = v44;
      swift_bridgeObjectRetain();
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setDisplayAsNativeAd_, 1);
      objc_msgSend(v14, sel_setSponsored_, 1);
      sub_1C1516F5C();
      sub_1C1516EFC();
      swift_release();
      type metadata accessor for NativeAdService();
      sub_1C10A71C4(&qword_1EA1AAE60, v26, (void (*)(uint64_t))type metadata accessor for NativeAdService);
      sub_1C1516FBC();
      swift_release();
      uint64_t v27 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setSponsoredBy_, v27);

      sub_1C1516F5C();
      sub_1C1516F3C();
      swift_release();
      sub_1C1516FBC();
      swift_release();
      uint64_t v28 = HIBYTE(v47) & 0xF;
      if ((v47 & 0x2000000000000000) == 0) {
        uint64_t v28 = v46 & 0xFFFFFFFFFFFFLL;
      }
      if (v28)
      {
        uint64_t v29 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setTitle_, v29);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1516F5C();
      sub_1C1516F2C();
      swift_release();
      sub_1C1516FBC();
      swift_release();
      sub_1C1516F0C();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v41);
      uint64_t v35 = v42;
      sub_1C151D83C();
      swift_unknownObjectRelease();
      uint64_t v36 = *MEMORY[0x1E4F7B0A8];
      uint64_t v37 = sub_1C151DBFC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v35, v36, v37);
      uint64_t v38 = *MEMORY[0x1E4F7B0C8];
      uint64_t v39 = sub_1C151DC0C();
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v35, v38, v39);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    id v30 = (id)qword_1EB93C6F8;
    sub_1C151F36C();
    sub_1BFEE80A8(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C1527210;
    uint64_t v32 = MEMORY[0x1E4FBB1A0];
    *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v33 = sub_1BFE9C558();
    *(void *)(v31 + 32) = 0xD000000000000037;
    *(void *)(v31 + 40) = 0x80000001C1633A50;
    *(void *)(v31 + 96) = v32;
    *(void *)(v31 + 104) = v33;
    *(void *)(v31 + 64) = v33;
    *(void *)(v31 + 72) = a2;
    *(void *)(v31 + 80) = a3;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C10A6D44();
    swift_allocError();
    *id v34 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t NativeAdService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NativeAdService.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C10A6348(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return NativeAdService.fetchNativeAd(placementIdentifier:build:)(a1, a2, a3, a4);
}

void sub_1C10A636C()
{
  if (!qword_1EB8717A8)
  {
    sub_1C151D4EC();
    sub_1C151D5AC();
    sub_1C151D61C();
    sub_1C10A71C4((unint64_t *)&unk_1EB894910, 255, MEMORY[0x1E4F7AC20]);
    unint64_t v0 = sub_1C151DA3C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8717A8);
    }
  }
}

uint64_t sub_1C10A6444(void *a1)
{
  return sub_1C10A3550(a1);
}

uint64_t sub_1C10A6460()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C10A6498(uint64_t a1, uint64_t a2)
{
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C10A6518()
{
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    sub_1C10A6690(0, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
    sub_1C10A6758();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C10A6690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = sub_1C151D4EC();
    v8[1] = sub_1C151D61C();
    v8[2] = sub_1C10A71C4((unint64_t *)&unk_1EB894910, 255, MEMORY[0x1E4F7AC20]);
    uint64_t v8[3] = MEMORY[0x1E4F7ACC8];
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C10A6758()
{
  if (!qword_1EB8717E0)
  {
    sub_1C10A6690(255, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
    sub_1C10A6690(255, (unint64_t *)&qword_1EB8717C0, MEMORY[0x1E4F7B068]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8717E0);
    }
  }
}

uint64_t sub_1C10A6804(uint64_t a1, uint64_t a2)
{
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C10A6884()
{
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C10A3674(*(void *)(v0 + 16), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
}

uint64_t sub_1C10A6938()
{
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    sub_1C10A6690(0, &qword_1EB8717E8, MEMORY[0x1E4F7B0F0]);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
    sub_1C10A6758();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10A6AA4(void *a1)
{
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  return sub_1C10A3C68(a1, v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)));
}

uint64_t sub_1C10A6B5C(uint64_t a1, uint64_t a2)
{
  return sub_1C10A3ED4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C10A6B78()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10A6BB8()
{
  return sub_1C10A4BBC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C10A6BC4(uint64_t a1)
{
  sub_1C10A6690(0, &qword_1EB87CB10, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of NativeAdServiceType.fetchNativeAd(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for NativeAdService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NativeAdService);
}

uint64_t dispatch thunk of NativeAdService.__allocating_init(contextBuilder:headlineService:adManager:adRequestManager:adRequestStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C10A6C7C()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + 56), *(void *)(*(void *)(v0 + 16) + 80));
  return HeadlineServiceType.headline(for:purpose:)();
}

uint64_t sub_1C10A6CF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1C10A6D28@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1C10A5CA0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1C10A6D44()
{
  unint64_t result = qword_1EB87B610;
  if (!qword_1EB87B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87B610);
  }
  return result;
}

void sub_1C10A6D98(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_1C10A6690(255, a3, a4);
    unint64_t v5 = sub_1C151FD8C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C10A6DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C10A6E50()
{
  return sub_1C10A4C68(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1C10A6E70()
{
  uint64_t v1 = sub_1C151D2CC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

id sub_1C10A6F58(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C151D2CC() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1C10A4E8C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C10A7004()
{
  uint64_t v1 = sub_1C151D2CC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C10A70D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C151D2CC() - 8);
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C10A593C(a1, a2, v6, v7, v8, v9);
}

void sub_1C10A7160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C10A71C4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NativeAdService.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10A72D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NativeAdService.Errors()
{
  return &type metadata for NativeAdService.Errors;
}

unint64_t sub_1C10A7314()
{
  unint64_t result = qword_1EA1AAE80;
  if (!qword_1EA1AAE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAE80);
  }
  return result;
}

uint64_t FormatTextNodeTransform.description.getter()
{
  uint64_t v1 = 0x7361637265776F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x696C617469706163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7361637265707075;
  }
}

BOOL static FormatTextNodeTransform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatTextNodeTransform.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatTextNodeTransform.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C10A7458()
{
  unint64_t result = qword_1EA1AAE90;
  if (!qword_1EA1AAE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAE90);
  }
  return result;
}

unint64_t sub_1C10A74AC(uint64_t a1)
{
  unint64_t result = sub_1C10A74D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10A74D4()
{
  unint64_t result = qword_1EA1AAE98;
  if (!qword_1EA1AAE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAE98);
  }
  return result;
}

unint64_t sub_1C10A7528(void *a1)
{
  a1[1] = sub_1C00724A8();
  a1[2] = sub_1C00724FC();
  unint64_t result = sub_1C10A7458();
  a1[3] = result;
  return result;
}

uint64_t sub_1C10A7560()
{
  uint64_t v1 = 0x7361637265776F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x696C617469706163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7361637265707075;
  }
}

ValueMetadata *type metadata accessor for FormatTextNodeTransform()
{
  return &type metadata for FormatTextNodeTransform;
}

unint64_t sub_1C10A75F8()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 8);
  switch(v1 >> 5)
  {
    case 2u:
    case 3u:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001BLL;
      goto LABEL_4;
    case 4u:
    case 5u:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD00000000000001ALL;
      goto LABEL_10;
    case 6u:
      if ((v1 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 7u:
      if (v1)
      {
LABEL_13:
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        unint64_t v4 = 0xD00000000000001BLL;
        sub_1C151EF4C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
      }
      else
      {
LABEL_9:
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        unint64_t v2 = 0xD00000000000001BLL;
LABEL_10:
        unint64_t v4 = v2;
        sub_1C151EF4C();
LABEL_11:
        sub_1C151E80C();
        swift_bridgeObjectRelease();
      }
      return v4;
    default:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000012;
      type metadata accessor for UIUserInterfaceIdiom(0);
      sub_1C00FEF80();
LABEL_4:
      sub_1C151EFCC();
      goto LABEL_11;
  }
}

unint64_t GroupLayoutRequirement.description.getter()
{
  switch(*(unsigned __int8 *)(v0 + 8) >> 5)
  {
    case 2:
    case 3:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000019;
      sub_1C151EFCC();
      goto LABEL_6;
    case 4:
    case 5:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000011;
      sub_1C151EF4C();
      goto LABEL_6;
    case 6:
    case 7:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000012;
      GroupLayoutDimensionSizeSpec.description.getter();
LABEL_6:
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      break;
    default:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000011;
      type metadata accessor for UIUserInterfaceIdiom(0);
      sub_1C00FEF80();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      break;
  }
  return v2;
}

uint64_t GroupLayoutDimensionSizeSpec.description.getter()
{
  if (*(unsigned char *)(v0 + 8))
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    uint64_t v1 = 0x754D6E6D756C6F63;
  }
  else
  {
    uint64_t v1 = 0x2865756C6176;
  }
  uint64_t v3 = v1;
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v3;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupLayoutRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0186BB8(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for GroupLayoutRequirement(uint64_t a1)
{
  return sub_1C0186BC4(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for GroupLayoutRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0186BB8(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C0186BC4(v5, v6);
  return a1;
}

uint64_t assignWithTake for GroupLayoutRequirement(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C0186BC4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLayoutRequirement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x79 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 121);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x78) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GroupLayoutRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x78)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 121;
    if (a3 >= 0x79) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x79) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1C10A7E5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 5;
}

uint64_t sub_1C10A7E68(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x1Fu;
  return result;
}

uint64_t sub_1C10A7E78(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | (32 * a2);
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutRequirement()
{
  return &type metadata for GroupLayoutRequirement;
}

ValueMetadata *type metadata accessor for GroupLayoutDimensionSizeSpec()
{
  return &type metadata for GroupLayoutDimensionSizeSpec;
}

uint64_t FormatDecorationItem.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecorationItem.deinit()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(unsigned __int16 *)(v0 + 120) | (*(unsigned __int8 *)(v0 + 122) << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF9C84C(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t method lookup function for FormatDecorationItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatDecorationItem);
}

uint64_t sub_1C10A7FB0@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v224 = a3;
  v284 = a2;
  uint64_t v280 = a1;
  uint64_t v254 = a4;
  sub_1C10AAFB8();
  uint64_t v234 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v256 = (char *)&v219 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v252 = (char *)&v219 - v9;
  uint64_t v236 = sub_1C15159AC();
  MEMORY[0x1F4188790](v236);
  uint64_t v223 = (char *)&v219 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_1C1515CBC();
  long long v270 = *(char **)(v222 - 8);
  MEMORY[0x1F4188790](v222);
  uint64_t v237 = (char *)&v219 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_1C1515C2C();
  long long v269 = *(char **)(v272 - 8);
  MEMORY[0x1F4188790](v272);
  v262 = (uint64_t *)((char *)&v219 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v263 = sub_1C1515C0C();
  uint64_t v238 = *(void *)(v263 - 8);
  MEMORY[0x1F4188790](v263);
  uint64_t v261 = (char *)&v219 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10AB2A0(0, &qword_1EA1AAEA8, MEMORY[0x1E4F27460]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v277 = (uint64_t)&v219 - v15;
  uint64_t v287 = sub_1C1515C3C();
  uint64_t v260 = *(void *)(v287 - 8);
  MEMORY[0x1F4188790](v287);
  uint64_t v253 = (char *)&v219 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2F030();
  uint64_t v249 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v233 = (char *)&v219 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v221 = (uint64_t)&v219 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v239 = (uint64_t)&v219 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v288 = (uint64_t)&v219 - v24;
  sub_1C10AB2A0(0, &qword_1EA1AAEB0, MEMORY[0x1E4F3E2E0]);
  MEMORY[0x1F4188790](v25 - 8);
  v286 = (char *)&v219 - v26;
  uint64_t v289 = sub_1C1515BDC();
  uint64_t v255 = *(void *)(v289 - 8);
  MEMORY[0x1F4188790](v289);
  uint64_t v28 = (char *)&v219 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v219 - v30;
  sub_1C10AB020();
  uint64_t v276 = v32;
  MEMORY[0x1F4188790](v32);
  uint64_t v275 = (uint64_t)&v219 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v281 = sub_1C1515B0C();
  uint64_t v282 = *(void *)(v281 - 8);
  MEMORY[0x1F4188790](v281);
  unint64_t v283 = (char *)&v219 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  v290 = (char *)&v219 - v36;
  sub_1C10AB0AC();
  uint64_t v279 = v37;
  uint64_t v268 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  v266 = (uint64_t (**)(uint64_t *, uint64_t))((char *)&v219 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v265 = sub_1C1515ADC();
  uint64_t v258 = *(void *)(v265 - 8);
  MEMORY[0x1F4188790](v265);
  uint64_t v257 = (char *)&v219 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10AB220(0, &qword_1EA1AAED0, (uint64_t (*)(uint64_t))sub_1C10AB0AC, sub_1C10AB15C, MEMORY[0x1E4FBBD30]);
  MEMORY[0x1F4188790](v40 - 8);
  int64_t v259 = (char *)&v219 - v41;
  sub_1C10AB1D8(0);
  uint64_t v267 = v42;
  MEMORY[0x1F4188790](v42);
  v264 = (void (**)(char *, uint64_t))((char *)&v219 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v44);
  uint64_t v278 = (uint64_t)&v219 - v45;
  sub_1C10AB2A0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v46 - 8);
  v274 = (char *)&v219 - v47;
  long long v273 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))sub_1C1515A2C();
  uint64_t v48 = (uint64_t)*(v273 - 1);
  MEMORY[0x1F4188790](v273);
  uint64_t v50 = (char *)&v219 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1C1515A3C();
  uint64_t v52 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v54 = (char *)&v219 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1C1515A5C();
  MEMORY[0x1F4188790](v55 - 8);
  uint64_t v245 = sub_1C1515B3C();
  uint64_t v248 = *(void *)(v245 - 8);
  MEMORY[0x1F4188790](v245);
  long long v271 = (char *)&v219 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v58 = MEMORY[0x1F4188790](v57);
  uint64_t v60 = (char *)&v219 - v59;
  (*(void (**)(char *, void, uint64_t, __n128))(v52 + 104))(v54, *MEMORY[0x1E4F27310], v51, v58);
  (*(void (**)(char *, void, unsigned int (**)(uint64_t, uint64_t, uint64_t)))(v48 + 104))(v50, *MEMORY[0x1E4F272F8], v273);
  sub_1C1515A4C();
  uint64_t v61 = sub_1C1515FDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v274, 1, 1, v61);
  uint64_t v62 = v285;
  sub_1C1515B1C();
  if (v62) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v224);
  }
  uint64_t v219 = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v248 + 32))(v254, v60, v245);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  *(&v219 - 2) = v65;
  swift_getKeyPath();
  id v230 = self;
  id v293 = objc_msgSend(v230, sel_systemFontOfSize_, a5);
  unint64_t v229 = sub_1BFF67A50();
  sub_1C15159BC();
  uint64_t v66 = swift_getKeyPath();
  MEMORY[0x1F4188790](v66);
  *(&v219 - 2) = v67;
  swift_getKeyPath();
  id v227 = self;
  id v293 = objc_msgSend(v227, sel_secondaryLabelColor);
  unint64_t v226 = sub_1BFF67B4C();
  sub_1C15159BC();
  uint64_t v68 = swift_getKeyPath();
  MEMORY[0x1F4188790](v68);
  *(&v219 - 2) = v69;
  swift_getKeyPath();
  id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v70, sel_setParagraphSpacing_, 10.0);
  objc_msgSend(v70, sel_setMinimumLineHeight_, 20.0);
  id v293 = v70;
  unint64_t v225 = sub_1BFF67C9C();
  sub_1C15159BC();
  uint64_t v71 = 0;
  double v72 = *MEMORY[0x1E4FB09D8];
  uint64_t v73 = (void (**)(char *, uint64_t))(v255 + 8);
  double v74 = *MEMORY[0x1E4FB09B8];
  do
  {
    uint64_t v82 = *(void **)((char *)&unk_1F1B89030 + v71 + 32);
    sub_1C1515BCC();
    uint64_t v83 = swift_getKeyPath();
    MEMORY[0x1F4188790](v83);
    *(&v219 - 2) = v84;
    swift_getKeyPath();
    id v293 = v82;
    LOBYTE(v294) = 0;
    sub_1C10AB390();
    sub_1C1515B9C();
    switch((unint64_t)v82)
    {
      case 1uLL:
        uint64_t v75 = swift_getKeyPath();
        MEMORY[0x1F4188790](v75);
        *(&v219 - 2) = v76;
        swift_getKeyPath();
        id v77 = objc_msgSend(v230, sel_italicSystemFontOfSize_, a5);
        goto LABEL_5;
      case 2uLL:
        uint64_t v85 = swift_getKeyPath();
        MEMORY[0x1F4188790](v85);
        *(&v219 - 2) = v86;
        swift_getKeyPath();
        id v77 = objc_msgSend(v230, sel_systemFontOfSize_weight_, a5, v74);
LABEL_5:
        id v293 = v77;
        goto LABEL_6;
      case 4uLL:
        uint64_t v87 = swift_getKeyPath();
        MEMORY[0x1F4188790](v87);
        *(&v219 - 2) = v88;
        swift_getKeyPath();
        id v293 = objc_msgSend(v230, sel_monospacedSystemFontOfSize_weight_, a5, v72);
        sub_1C1515B9C();
        uint64_t v89 = swift_getKeyPath();
        MEMORY[0x1F4188790](v89);
        *(&v219 - 2) = v90;
        swift_getKeyPath();
        id v293 = objc_msgSend(v227, sel_labelColor);
        goto LABEL_6;
      case 0x20uLL:
        uint64_t v91 = swift_getKeyPath();
        MEMORY[0x1F4188790](v91);
        *(&v219 - 2) = v92;
        swift_getKeyPath();
        uint64_t v93 = v286;
        sub_1C151DFCC();
        uint64_t v94 = sub_1C151DFDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v93, 0, 1, v94);
        sub_1C10AB90C();
LABEL_6:
        sub_1C1515B9C();
        break;
      default:
        break;
    }
    sub_1C1515BCC();
    uint64_t v78 = swift_getKeyPath();
    MEMORY[0x1F4188790](v78);
    *(&v219 - 2) = v79;
    swift_getKeyPath();
    id v293 = v82;
    LOBYTE(v294) = 0;
    sub_1C1515B9C();
    sub_1C15159FC();
    uint64_t v80 = *v73;
    uint64_t v81 = v289;
    (*v73)(v28, v289);
    v80(v31, v81);
    v71 += 8;
  }
  while (v71 != 32);
  uint64_t v95 = v248;
  uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t))(v248 + 16);
  uint64_t v97 = v271;
  uint64_t v98 = v245;
  uint64_t v243 = v248 + 16;
  uint64_t v242 = v96;
  v96(v271, v254, v245);
  uint64_t v99 = v257;
  sub_1C1515AFC();
  uint64_t v100 = *(void (**)(char *, uint64_t))(v95 + 8);
  uint64_t v248 = v95 + 8;
  uint64_t v246 = v100;
  v100(v97, v98);
  sub_1C10AB108();
  uint64_t v101 = v266;
  sub_1C1515AEC();
  (*(void (**)(char *, uint64_t))(v258 + 8))(v99, v265);
  uint64_t v102 = v268;
  uint64_t v103 = v259;
  uint64_t v104 = (char *)v101;
  uint64_t v105 = v279;
  (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v259, v104, v279);
  unint64_t v106 = v264;
  (*(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v102 + 16))(v264, v103, v105);
  uint64_t v107 = sub_1C10AB190(&qword_1EA1AAEF0, (void (*)(uint64_t))sub_1C10AB0AC);
  uint64_t v108 = v290;
  v274 = (char *)v107;
  sub_1C151F0EC();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v105);
  uint64_t v109 = v267;
  uint64_t v110 = (char *)v106 + *(int *)(v267 + 36);
  uint64_t v111 = v282;
  uint64_t v112 = *(void (**)(void, void, void))(v282 + 32);
  uint64_t v232 = v282 + 32;
  uint64_t v231 = (void (*)(char *, char *, uint64_t))v112;
  v112(v110, v108, v281);
  uint64_t v113 = (uint64_t)v106;
  uint64_t v114 = v278;
  sub_1C10AB4E4(v113, v278, (uint64_t (*)(void))sub_1C10AB1D8);
  uint64_t v247 = 0;
  uint64_t v115 = v114 + *(int *)(v109 + 36);
  v286 = *(char **)(v111 + 16);
  uint64_t v282 = v111 + 16;
  v285 = (void (**)(char *, uint64_t))(v111 + 8);
  long long v273 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48);
  uint64_t v244 = (void (**)(char *, uint64_t, uint64_t))(v260 + 32);
  uint64_t v267 = v238 + 16;
  v266 = (uint64_t (**)(uint64_t *, uint64_t))(v269 + 88);
  uint64_t v268 = v238 + 8;
  uint64_t v228 = (void (**)(uint64_t *, uint64_t))(v269 + 8);
  v264 = (void (**)(char *, uint64_t))(v269 + 96);
  uint64_t v220 = (void (**)(char *, uint64_t))(v270 + 8);
  LODWORD(v265) = *MEMORY[0x1E4F27448];
  uint64_t v240 = (void (**)(char *, uint64_t))(v260 + 8);
  LODWORD(v260) = *MEMORY[0x1E4F27450];
  LODWORD(v258) = *MEMORY[0x1E4F27458];
  LODWORD(v255) = *MEMORY[0x1E4F27438];
  int v251 = *MEMORY[0x1E4F27440];
  int v235 = *MEMORY[0x1E4F27430];
  double v116 = *MEMORY[0x1E4FB09C0];
  uint64_t v241 = v115;
LABEL_14:
  while (2)
  {
    uint64_t v117 = v281;
    ((void (*)(char *, uint64_t, uint64_t))v286)(v108, v115, v281);
    uint64_t v118 = v283;
    sub_1C151F09C();
    uint64_t v280 = sub_1C10AB190(&qword_1EA1AAEF8, MEMORY[0x1E4F27388]);
    char v119 = sub_1C151E5CC();
    uint64_t v120 = *v285;
    (*v285)(v118, v117);
    v284 = v120;
    v120(v290, v117);
    if ((v119 & 1) == 0)
    {
      sub_1C10AB15C();
      sub_1C151E51C();
      long long v121 = (void (*)(id *, void))sub_1C151F19C();
      uint64_t v122 = v275;
      sub_1C10AB670(v123, v275, (uint64_t (*)(void))sub_1C10AB020);
      v121(&v293, 0);
      uint64_t v124 = v288;
      sub_1C10AB4E4(v122 + *(int *)(v276 + 48), v288, (uint64_t (*)(void))sub_1BFF2F030);
      uint64_t v125 = v277;
      sub_1C10AB54C(v122, v277);
      if ((*v273)(v125, 1, v287) == 1)
      {
        sub_1C10AB88C(v124, (uint64_t (*)(void))sub_1BFF2F030);
        sub_1C10AB5CC(v125);
        uint64_t v108 = v290;
        uint64_t v114 = v278;
        continue;
      }
      (*v244)(v253, v125, v287);
      uint64_t v126 = sub_1C1515C1C();
      uint64_t v127 = *(void *)(v126 + 16);
      if (!v127)
      {
        swift_bridgeObjectRelease();
        uint64_t v247 = 0;
        uint64_t v153 = v281;
        uint64_t v160 = v283;
        uint64_t v114 = v278;
        uint64_t v161 = v245;
        long long v135 = v271;
        uint64_t v159 = v254;
        goto LABEL_53;
      }
      uint64_t v128 = 0;
      uint64_t v289 = 0;
      uint64_t v257 = 0;
      int64_t v259 = 0;
      unint64_t v129 = (*(unsigned __int8 *)(v238 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v238 + 80);
      uint64_t v250 = v126;
      unint64_t v130 = v126 + v129;
      long long v270 = *(char **)(v238 + 72);
      long long v269 = *(char **)(v238 + 16);
      char v131 = -1;
      uint64_t v132 = v262;
      uint64_t v133 = v263;
      uint64_t v134 = v261;
      ((void (*)(char *, unint64_t, uint64_t))v269)(v261, v126 + v129, v263);
      while (1)
      {
        sub_1C1515BEC();
        uint64_t v136 = v132;
        unint64_t v137 = v134;
        uint64_t v138 = v132;
        uint64_t v139 = v272;
        int v140 = (*v266)(v136, v272);
        if (v140 == v265) {
          break;
        }
        int v141 = v140;
        if (v140 == v260)
        {
          uint64_t v134 = v261;
          uint64_t v133 = v263;
          (*(void (**)(char *, uint64_t))v268)(v261, v263);
          sub_1C10AB644(v128, v289, v131);
          uint64_t v132 = v262;
          (*v264)((char *)v262, v272);
          uint64_t v289 = 0;
          char v131 = 1;
          uint64_t v128 = *v132;
          int64_t v259 = (char *)*v132;
          goto LABEL_19;
        }
        uint64_t v132 = v262;
        uint64_t v134 = v261;
        long long v135 = v271;
        if (v140 == v258)
        {
          uint64_t v133 = v263;
          (*(void (**)(char *, uint64_t))v268)(v261, v263);
          sub_1C10AB644(v128, v289, v131);
          (*v264)((char *)v132, v272);
          uint64_t v128 = *v132;
          uint64_t v289 = v132[1];
          char v131 = 2;
        }
        else if (v140 == v255)
        {
          sub_1C10AB644(v128, v289, v131);
          uint64_t v257 = (char *)sub_1C1515BFC();
          uint64_t v133 = v263;
          (*(void (**)(char *, uint64_t))v268)(v134, v263);
          uint64_t v289 = 0;
          char v131 = 1;
          uint64_t v128 = (uint64_t)v259;
        }
        else if (v140 == v251)
        {
          sub_1C10AB644(v128, v289, v131);
          uint64_t v257 = (char *)sub_1C1515BFC();
          uint64_t v133 = v263;
          (*(void (**)(char *, uint64_t))v268)(v134, v263);
          uint64_t v128 = 0;
          uint64_t v289 = 0;
          char v131 = 3;
        }
        else
        {
          (*(void (**)(char *, uint64_t))v268)(v261, v263);
          if (v141 == v235)
          {
            sub_1C10AB644(v128, v289, v131);
            uint64_t v289 = 0;
            char v131 = 3;
            uint64_t v128 = 1;
          }
          else
          {
            (*v228)(v132, v272);
          }
          uint64_t v133 = v263;
        }
LABEL_20:
        v130 += (unint64_t)v270;
        if (!--v127)
        {
          swift_bridgeObjectRelease();
          long long v142 = v237;
          uint64_t v124 = v288;
          uint64_t v114 = v278;
          switch(v131)
          {
            case 0:
              if (v128 >= 5) {
                uint64_t v143 = 5;
              }
              else {
                uint64_t v143 = v128;
              }
              BOOL v144 = __OFSUB__(5, v143);
              uint64_t v145 = 5 - v143;
              if (v144) {
                goto LABEL_59;
              }
              double v146 = (double)(v145 & ~(v145 >> 63));
              uint64_t v147 = v239;
              sub_1C10AB670(v288, v239, (uint64_t (*)(void))sub_1BFF2F030);
              uint64_t v148 = swift_getKeyPath();
              MEMORY[0x1F4188790](v148);
              *(&v219 - 2) = v149;
              swift_getKeyPath();
              uint64_t v291 = (uint64_t)objc_msgSend(v230, sel_systemFontOfSize_weight_, v146 + v146 + a5 + v146, v116);
              sub_1C10AB190(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
              uint64_t v150 = v254;
              uint64_t v289 = v128;
              uint64_t v151 = (void (*)(id *, void))sub_1C1515B5C();
              sub_1C1515C8C();
              v151(&v293, 0);
              uint64_t v152 = v147;
              uint64_t v153 = v281;
              sub_1C10AB88C(v152, (uint64_t (*)(void))sub_1BFF2F030);
              uint64_t v154 = v221;
              sub_1C10AB670(v288, v221, (uint64_t (*)(void))sub_1BFF2F030);
              uint64_t v155 = swift_getKeyPath();
              MEMORY[0x1F4188790](v155);
              *(&v219 - 2) = v156;
              swift_getKeyPath();
              long long v157 = &selRef_secondaryLabelColor;
              if (v289 != 6) {
                long long v157 = &selRef_labelColor;
              }
              uint64_t v291 = (uint64_t)[v227 *v157];
              uint64_t v158 = (void (*)(id *, void))sub_1C1515B5C();
              uint64_t v124 = v288;
              sub_1C1515C8C();
              v158(&v293, 0);
              uint64_t v159 = v150;
              uint64_t v160 = v283;
              sub_1C10AB88C(v154, (uint64_t (*)(void))sub_1BFF2F030);
              uint64_t v247 = v257;
              uint64_t v161 = v245;
              long long v135 = v271;
              break;
            case 1:
              uint64_t v291 = v128;
              uint64_t v160 = v283;
              id v293 = (id)sub_1C152088C();
              uint64_t v294 = v162;
              sub_1C151E80C();
              uint64_t v163 = (uint64_t)v293;
              uint64_t v164 = v294;
              uint64_t v165 = v254;
              uint64_t v166 = (void (*)(id *, void))sub_1C151597C();
              sub_1C10AAC44(v163, v164, v288);
              v166(&v293, 0);
              uint64_t v167 = v239;
              sub_1C10AB670(v288, v239, (uint64_t (*)(void))sub_1BFF2F030);
              uint64_t v168 = swift_getKeyPath();
              MEMORY[0x1F4188790](v168);
              *(&v219 - 2) = v169;
              swift_getKeyPath();
              unint64_t v170 = v257;
              uint64_t v291 = (uint64_t)sub_1C10AB6D8(v257 != v247);
              sub_1C10AB190(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
              unint64_t v171 = (void (*)(id *, void))sub_1C1515B5C();
              uint64_t v124 = v288;
              sub_1C1515C8C();
              v171(&v293, 0);
              sub_1C10AB88C(v167, (uint64_t (*)(void))sub_1BFF2F030);
              uint64_t v247 = v170;
              uint64_t v159 = v165;
              goto LABEL_51;
            case 2:
              uint64_t v160 = v283;
              sub_1C10AB644(v128, v289, 2);
              sub_1C10AB190(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
              uint64_t v172 = v254;
              sub_1C1515B6C();
              sub_1C1515C7C();
              (*v220)(v142, v222);
              sub_1C10AB190(&qword_1EA19CAB0, MEMORY[0x1E4F27270]);
              uint64_t v173 = sub_1C151E8CC();
              uint64_t v175 = v174;
              uint64_t v176 = __swift_project_boxed_opaque_existential_1(v224, v224[3]);
              long long v177 = v176[5];
              v295[4] = v176[4];
              v295[5] = v177;
              v295[6] = v176[6];
              long long v178 = v176[1];
              v295[0] = *v176;
              v295[1] = v178;
              long long v179 = v176[3];
              v295[2] = v176[2];
              v295[3] = v179;
              id v180 = sub_1C0B8C408(v173, v175, (uint64_t)v295, 1);
              swift_bridgeObjectRelease();
              id v181 = v180;
              int64_t v182 = v271;
              sub_1C1515B7C();
              sub_1C10AB190(&qword_1EA1A8090, MEMORY[0x1E4F273A8]);
              uint64_t v183 = v245;
              uint64_t v124 = v288;
              uint64_t v159 = v172;
              sub_1C15159EC();
              uint64_t v161 = v183;
              long long v135 = v182;

              v246(v182, v161);
              uint64_t v247 = v257;
              goto LABEL_52;
            case 3:
              uint64_t v184 = v239;
              if (v128 | v289)
              {
                sub_1C10AB670(v288, v239, (uint64_t (*)(void))sub_1BFF2F030);
                uint64_t v185 = swift_getKeyPath();
                MEMORY[0x1F4188790](v185);
                *(&v219 - 2) = v186;
                swift_getKeyPath();
                uint64_t v291 = (uint64_t)objc_msgSend(v227, sel_tertiaryLabelColor);
                sub_1C10AB190(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
                uint64_t v187 = v254;
                unint64_t v188 = (void (*)(id *, void))sub_1C1515B5C();
                sub_1C1515C8C();
                v188(&v293, 0);
                sub_1C10AB88C(v184, (uint64_t (*)(void))sub_1BFF2F030);
                sub_1C10AB670(v288, v184, (uint64_t (*)(void))sub_1BFF2F030);
                uint64_t v189 = swift_getKeyPath();
                MEMORY[0x1F4188790](v189);
                *(&v219 - 2) = v190;
                swift_getKeyPath();
                id v191 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
                objc_msgSend(v191, sel_setParagraphSpacing_, 10.0);
                objc_msgSend(v191, sel_setMinimumLineHeight_, 20.0);
                uint64_t v291 = (uint64_t)v191;
                unsigned int v192 = (void (*)(id *, void))sub_1C1515B5C();
                sub_1C1515C8C();
                uint64_t v159 = v187;
                v192(&v293, 0);
                uint64_t v124 = v288;
                sub_1C10AB88C(v184, (uint64_t (*)(void))sub_1BFF2F030);
                uint64_t v247 = v257;
              }
              else
              {
                uint64_t v193 = v254;
                uint64_t v194 = (void (*)(id *, void))sub_1C151597C();
                sub_1C10AAC44(547520738, 0xA400000000000000, v288);
                v194(&v293, 0);
                sub_1C10AB670(v288, v184, (uint64_t (*)(void))sub_1BFF2F030);
                uint64_t v195 = swift_getKeyPath();
                MEMORY[0x1F4188790](v195);
                *(&v219 - 2) = v196;
                swift_getKeyPath();
                uint64_t v197 = v257;
                uint64_t v291 = (uint64_t)sub_1C10AB6D8(v257 != v247);
                sub_1C10AB190(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
                uint64_t v198 = (void (*)(id *, void))sub_1C1515B5C();
                uint64_t v124 = v288;
                sub_1C1515C8C();
                v198(&v293, 0);
                sub_1C10AB88C(v184, (uint64_t (*)(void))sub_1BFF2F030);
                uint64_t v247 = v197;
                uint64_t v159 = v193;
              }
              uint64_t v160 = v283;
LABEL_51:
              uint64_t v161 = v245;
              long long v135 = v271;
LABEL_52:
              uint64_t v153 = v281;
              break;
            default:
              uint64_t v247 = v257;
              uint64_t v159 = v254;
              uint64_t v161 = v245;
              uint64_t v153 = v281;
              uint64_t v160 = v283;
              break;
          }
LABEL_53:
          int64_t v199 = v290;
          ((void (*)(char *, uint64_t, uint64_t))v286)(v290, v124, v153);
          v242(v135, v159, v161);
          sub_1C151599C();
          v246(v135, v161);
          char v200 = sub_1C151E5CC();
          int64_t v201 = v160;
          uint64_t v202 = v124;
          char v203 = v200;
          uint64_t v204 = v284;
          v284(v201, v153);
          v204(v199, v153);
          if ((v203 & 1) == 0)
          {
            uint64_t v205 = sub_1C151597C();
            uint64_t v207 = v206;
            uint64_t v291 = 10;
            unint64_t v292 = 0xE100000000000000;
            sub_1C0E86748();
            if ((sub_1C151E59C() & 1) == 0)
            {
              __break(1u);
LABEL_59:
              __break(1u);
              JUMPOUT(0x1C10AABB4);
            }
            uint64_t v208 = v234;
            uint64_t v209 = &v252[*(int *)(v234 + 48)];
            uint64_t v289 = v205;
            uint64_t v210 = (void (*)(char *, uint64_t, uint64_t))v286;
            ((void (*)(void))v286)();
            long long v270 = v209;
            v210(v209, v202, v153);
            uint64_t v211 = &v256[*(int *)(v208 + 48)];
            v210(v256, (uint64_t)v252, v153);
            v210(v211, (uint64_t)v209, v153);
            unint64_t v212 = v233;
            uint64_t v213 = v231;
            v231(v233, v256, v153);
            uint64_t v280 = v207;
            uint64_t v214 = v284;
            v284(v211, v153);
            char v215 = &v256[*(int *)(v208 + 48)];
            v213(v256, v252, v153);
            v213(v215, v270, v153);
            v213(&v212[*(int *)(v249 + 36)], v215, v153);
            v214(v256, v153);
            uint64_t v216 = (uint64_t)v212;
            uint64_t v217 = v239;
            sub_1C10AB4E4(v216, v239, (uint64_t (*)(void))sub_1BFF2F030);
            sub_1C10AB190(&qword_1EA1AAF00, MEMORY[0x1E4F27270]);
            sub_1C0A5A784();
            sub_1C151F1AC();
            uint64_t v218 = v217;
            uint64_t v202 = v288;
            sub_1C10AB88C(v218, (uint64_t (*)(void))sub_1BFF2F030);
            ((void (*)(id *, void))v289)(&v293, 0);
          }
          (*v240)(v253, v287);
          sub_1C10AB88C(v202, (uint64_t (*)(void))sub_1BFF2F030);
          uint64_t v108 = v290;
          uint64_t v115 = v241;
          goto LABEL_14;
        }
        ((void (*)(char *, unint64_t, uint64_t))v269)(v134, v130, v133);
      }
      (*(void (**)(char *, uint64_t))v268)(v137, v133);
      sub_1C10AB644(v128, v289, v131);
      (*v264)((char *)v138, v139);
      uint64_t v289 = 0;
      char v131 = 0;
      uint64_t v128 = *v138;
      uint64_t v132 = v138;
      uint64_t v134 = v137;
LABEL_19:
      long long v135 = v271;
      goto LABEL_20;
    }
    break;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v224);
  return sub_1C10AB88C(v114, (uint64_t (*)(void))sub_1C10AB1D8);
}

uint64_t sub_1C10AAC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C10AAFB8();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v34 - v13;
  sub_1BFF2F030();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v22 = sub_1C1515B0C();
  sub_1C0E86748();
  uint64_t result = sub_1C151E59C();
  if (result)
  {
    uint64_t v34 = &v14[*(int *)(v9 + 48)];
    uint64_t v24 = v34;
    uint64_t v35 = v16;
    uint64_t v25 = *(void *)(v22 - 8);
    uint64_t v37 = v4;
    uint64_t v26 = v25;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    uint64_t v36 = v21;
    v27(v14, a3, v22);
    v27(v24, a3, v22);
    uint64_t v28 = &v11[*(int *)(v9 + 48)];
    v27(v11, (uint64_t)v14, v22);
    v27(v28, (uint64_t)v24, v22);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v29(v18, v11, v22);
    uint64_t v30 = (uint64_t)v18;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v26 + 8);
    v31(v28, v22);
    uint64_t v32 = &v11[*(int *)(v9 + 48)];
    v29(v11, v14, v22);
    v29(v32, v34, v22);
    v29((char *)(v30 + *(int *)(v35 + 36)), v32, v22);
    v31(v11, v22);
    uint64_t v33 = (uint64_t)v36;
    sub_1C10AB4E4(v30, (uint64_t)v36, (uint64_t (*)(void))sub_1BFF2F030);
    sub_1C15159AC();
    sub_1C10AB190(&qword_1EA1AAF00, MEMORY[0x1E4F27270]);
    sub_1C0A5A784();
    sub_1C151F1AC();
    return sub_1C10AB88C(v33, (uint64_t (*)(void))sub_1BFF2F030);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C10AAFB8()
{
  if (!qword_1EA1AAEA0)
  {
    sub_1C1515B0C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AAEA0);
    }
  }
}

void sub_1C10AB020()
{
  if (!qword_1EA1AAEB8)
  {
    sub_1C10AB2A0(255, &qword_1EA1AAEA8, MEMORY[0x1E4F27460]);
    sub_1BFF2F030();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AAEB8);
    }
  }
}

void sub_1C10AB0AC()
{
  if (!qword_1EA1AAEC0)
  {
    sub_1C10AB108();
    unint64_t v0 = sub_1C1515A6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AAEC0);
    }
  }
}

unint64_t sub_1C10AB108()
{
  unint64_t result = qword_1EA1AAEC8;
  if (!qword_1EA1AAEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAEC8);
  }
  return result;
}

uint64_t sub_1C10AB15C()
{
  return sub_1C10AB190(&qword_1EA1AAED8, (void (*)(uint64_t))sub_1C10AB0AC);
}

uint64_t sub_1C10AB190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C10AB1D8(uint64_t a1)
{
}

void sub_1C10AB220(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C10AB2A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C10AB2FC()
{
  return 8;
}

uint64_t sub_1C10AB308()
{
  return swift_release();
}

uint64_t sub_1C10AB310(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1C10AB324(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C10AB33C()
{
  return 8;
}

uint64_t sub_1C10AB35C()
{
  return 8;
}

void sub_1C10AB370()
{
}

unint64_t sub_1C10AB390()
{
  unint64_t result = qword_1EA1AAEE8;
  if (!qword_1EA1AAEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAEE8);
  }
  return result;
}

void sub_1C10AB3E4()
{
}

uint64_t sub_1C10AB40C()
{
  return 8;
}

uint64_t sub_1C10AB418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C10AB480(a1, a2, a3, qword_1EA1AAF20, MEMORY[0x1E4F27208]) & 1;
}

uint64_t sub_1C10AB458(uint64_t a1, uint64_t a2)
{
  return keypath_hash_39Tm(a1, a2, qword_1EA1AAF20, MEMORY[0x1E4F27208]);
}

uint64_t sub_1C10AB480(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C10AB4E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C10AB54C(uint64_t a1, uint64_t a2)
{
  sub_1C10AB2A0(0, &qword_1EA1AAEA8, MEMORY[0x1E4F27460]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C10AB5CC(uint64_t a1)
{
  sub_1C10AB2A0(0, &qword_1EA1AAEA8, MEMORY[0x1E4F27460]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C10AB644(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_1C10AB658(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C10AB658(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C10AB670(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1C10AB6D8(char a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  sub_1BFE4DBE0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320E0;
  sub_1C018F460(MEMORY[0x1E4FBC860]);
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB08C0]);
  type metadata accessor for OptionKey(0);
  sub_1C10AB190(&qword_1EA1961B8, type metadata accessor for OptionKey);
  uint64_t v5 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithTextAlignment_location_options_, 0, v5, 20.0);

  *(void *)(v3 + 32) = v6;
  sub_1C151EBEC();
  sub_1C10ABA4C();
  uint64_t v7 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTabStops_, v7);

  objc_msgSend(v2, sel_setHeadIndent_, 20.0);
  objc_msgSend(v2, sel_setMinimumLineHeight_, 20.0);
  if (a1) {
    objc_msgSend(v2, sel_setParagraphSpacing_, 20.0);
  }
  return v2;
}

uint64_t sub_1C10AB88C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C10AB8EC()
{
}

unint64_t sub_1C10AB90C()
{
  unint64_t result = qword_1EA1AAF08;
  if (!qword_1EA1AAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAF08);
  }
  return result;
}

void sub_1C10AB960()
{
}

uint64_t sub_1C10AB988()
{
  return 8;
}

uint64_t sub_1C10AB994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C10AB480(a1, a2, a3, &qword_1EA1AAF10, MEMORY[0x1E4F3C468]) & 1;
}

uint64_t sub_1C10AB9D4(uint64_t a1, uint64_t a2)
{
  return keypath_hash_39Tm(a1, a2, &qword_1EA1AAF10, MEMORY[0x1E4F3C468]);
}

uint64_t keypath_hash_39Tm(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  return sub_1C151E49C();
}

unint64_t sub_1C10ABA4C()
{
  unint64_t result = qword_1EA1AAF18;
  if (!qword_1EA1AAF18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1AAF18);
  }
  return result;
}

void sub_1C10ABA8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C1520F1C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C10ABB20()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Asset()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C10ABB80()
{
  uint64_t result = sub_1C02D2A68(0xA0DuLL, 0xE200000000000000);
  qword_1EA2B5338 = result;
  unk_1EA2B5340 = v1;
  return result;
}

double sub_1C10ABBAC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v5 = sub_1BFC44E98(a1);
  if (v6)
  {
    unint64_t v7 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C1074770();
      uint64_t v9 = v11;
    }
    sub_1BFC372E8(*(void *)(v9 + 56) + 16 * v7, (uint64_t)a2);
    sub_1C091EF20(v7, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = xmmword_1C152C800;
  }
  return result;
}

void PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(unsigned char *)(v10 + 32) = *a6;
  *(unsigned char *)(v10 + 33) = 0;
  uint64_t v12 = *(void *)(a10 + 72) + **(int **)(a10 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v10 + 16) = v11;
  *uint64_t v11 = v10;
  v11[1] = sub_1C10ABDB4;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1C10ABDB4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C10ABEE8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C10ABEE8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleLeaderboardResult.localPlayerEntry.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C10BDD04(v1, a1, (uint64_t (*)(void))sub_1C032BC38);
}

uint64_t PuzzleLeaderboardResult.entries.getter()
{
  type metadata accessor for PuzzleLeaderboardResult();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PuzzleLeaderboardResult()
{
  uint64_t result = qword_1EA1AAFD8;
  if (!qword_1EA1AAFD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PuzzleLeaderboardResult.totalPlayerCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardResult() + 24));
}

uint64_t PuzzleLeaderboardResult.leaderboardName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardResult() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall PuzzleGameCenterServiceListener.shouldReenableAuthenticationHandler()()
{
  return 0;
}

uint64_t PuzzleGameCenterServiceType.presentLeaderboard(entryPoint:presenter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(v4 + 32) = v8;
  *(unsigned char *)(v4 + 40) = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t (*)(), void, uint64_t, uint64_t))(*(void *)(a4 + 80) + **(int **)(a4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 48) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1C0B57B1C;
  return v12(v4 + 16, a2, nullsub_1, 0, a3, a4);
}

uint64_t sub_1C10AC160()
{
  sub_1BFCA59F4(v0 + 24, (uint64_t)v2);
  sub_1BFCA59F4((uint64_t)v2, (uint64_t)&v3);
  if ((v4 & 1) == 0) {
    sub_1C152088C();
  }
  sub_1C15200FC();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1BFF5E6C8(v0);
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0;
}

uint64_t sub_1C10AC2F8()
{
  return sub_1C10AC160();
}

BOOL static PuzzleGameCenterSubmitScoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleGameCenterSubmitScoreError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PuzzleGameCenterSubmitScoreError.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10AC3BC()
{
  v1[2] = v0;
  v1[3] = swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[4] = v2;
  void *v2 = v1;
  v2[1] = sub_1C10AC458;
  return sub_1BFC48D40();
}

uint64_t sub_1C10AC458(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  swift_task_dealloc();
  if (v1)
  {

    char v6 = sub_1C10AC738;
  }
  else
  {
    *(void *)(v4 + 40) = a1;
    char v6 = sub_1C10AC5A0;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1C10AC5A0()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_puzzleLeaderboardsEnabled);

  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB8812A0 != -1) {
    swift_once();
  }
  char v2 = sub_1C151705C();
  swift_release();
  if (v2)
  {
    if (qword_1EB86BFB8 != -1) {
      swift_once();
    }
    sub_1C0071EE4(&qword_1EB86CB38, v3, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
    sub_1C1516FBC();
    uint64_t v4 = *(unsigned __int8 *)(v0 + 48);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_1C10AC738()
{
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB8812A0 != -1) {
    swift_once();
  }
  char v1 = sub_1C151705C();
  swift_release();
  uint64_t v3 = 0;
  if (v1)
  {
    if (qword_1EB86BFB8 != -1) {
      swift_once();
    }
    sub_1C0071EE4(&qword_1EB86CB38, v2, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
    sub_1C1516FBC();
    uint64_t v3 = *(unsigned __int8 *)(v0 + 48);
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1C10AC88C()
{
  char v1 = *(void **)(v0 + 160);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C10AC908(uint64_t *a1)
{
  uint64_t v3 = *a1;
  v2[2] = v1;
  v2[3] = v3;
  v2[4] = sub_1C151EE6C();
  v2[5] = sub_1C151EE5C();
  return MEMORY[0x1F4188298](sub_1C10AC98C, v1, 0);
}

uint64_t sub_1C10AC98C()
{
  *(void *)(v0 + 48) = sub_1C10B0EE4();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10ACA20, v2, v1);
}

uint64_t sub_1C10ACA20()
{
  uint64_t v15 = v0;
  uint64_t v1 = v0[6];
  swift_release();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v0[6];
    uint64_t v5 = sub_1C0071EE4((unint64_t *)&unk_1EB884AE0, v2, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(v4 + 40);
    do
    {
      uint64_t v7 = v0[2];
      uint64_t v8 = v0[3];
      uint64_t v9 = *v6;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = v8;
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v9 + 16);
      swift_unknownObjectRetain();
      v11(v7, v5, &v14, ObjectType, v9);
      swift_unknownObjectRelease();
      v6 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

id sub_1C10ACB60(double a1)
{
  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  id v1 = objc_msgSend(self, sel_localPlayer);
  id v2 = objc_msgSend(v1, sel_isAuthenticated);

  return v2;
}

unint64_t sub_1C10ACBBC()
{
  unint64_t result = qword_1EA1AAFC8;
  if (!qword_1EA1AAFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AAFC8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleLeaderboardResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      sub_1C032BC38(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_1C151631C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v7[5];
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v15;
      uint64_t v16 = v7[6];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *(void *)uint64_t v17 = *v18;
      *((void *)v17 + 1) = v19;
      uint64_t v20 = v18 + 2;
      unint64_t v21 = v18[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21 >> 60 == 15)
      {
        *((_OWORD *)v17 + 1) = *(_OWORD *)v20;
      }
      else
      {
        uint64_t v22 = *v20;
        sub_1BFE95820(*v20, v21);
        *((void *)v17 + 2) = v22;
        *((void *)v17 + 3) = v21;
      }
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v23 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v23) = *(uint64_t *)((char *)a2 + v23);
    uint64_t v24 = a3[7];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PuzzleLeaderboardResult(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleLeaderboardEntry();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    uint64_t v3 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 24);
    swift_bridgeObjectRelease();
    unint64_t v5 = *(void *)(v4 + 24);
    if (v5 >> 60 != 15) {
      sub_1BFE95664(*(void *)(v4 + 16), v5);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for PuzzleLeaderboardResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_1C032BC38(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = v6[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = v6[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = (uint64_t *)(v16 + 16);
    unint64_t v19 = *((void *)v16 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19 >> 60 == 15)
    {
      *((_OWORD *)v15 + 1) = *(_OWORD *)v18;
    }
    else
    {
      uint64_t v20 = *v18;
      sub_1BFE95820(*v18, v19);
      *((void *)v15 + 2) = v20;
      *((void *)v15 + 3) = v19;
    }
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v21 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for PuzzleLeaderboardResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1C007374C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      goto LABEL_7;
    }
    uint64_t v21 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(a1, a2, v21);
    uint64_t v22 = v6[5];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = *((void *)v24 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v25 = v6[6];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    *(void *)uint64_t v26 = *(void *)&a2[v25];
    *((void *)v26 + 1) = *(void *)&a2[v25 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t *)(v27 + 16);
    unint64_t v29 = *((void *)v27 + 3);
    if (*((void *)v26 + 3) >> 60 == 15)
    {
      if (v29 >> 60 != 15)
      {
        uint64_t v30 = *v28;
        sub_1BFE95820(*v28, *((void *)v27 + 3));
        *((void *)v26 + 2) = v30;
        *((void *)v26 + 3) = v29;
LABEL_17:
        *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
        *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
        goto LABEL_18;
      }
    }
    else
    {
      if (v29 >> 60 != 15)
      {
        uint64_t v32 = *v28;
        sub_1BFE95820(*v28, *((void *)v27 + 3));
        uint64_t v33 = *((void *)v26 + 2);
        unint64_t v34 = *((void *)v26 + 3);
        *((void *)v26 + 2) = v32;
        *((void *)v26 + 3) = v29;
        sub_1BFE95664(v33, v34);
        goto LABEL_17;
      }
      sub_1C01D91B8((uint64_t)(v26 + 16));
    }
    *((_OWORD *)v26 + 1) = *(_OWORD *)v28;
    goto LABEL_17;
  }
  if (v10)
  {
LABEL_7:
    sub_1C032BC38(0);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_18;
  }
  uint64_t v11 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = v6[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = v6[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  uint64_t v18 = (uint64_t *)(v17 + 16);
  unint64_t v19 = *((void *)v17 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 >> 60 == 15)
  {
    *((_OWORD *)v16 + 1) = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v31 = *v18;
    sub_1BFE95820(*v18, v19);
    *((void *)v16 + 2) = v31;
    *((void *)v16 + 3) = v19;
  }
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v35 = a3[7];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for PuzzleLeaderboardResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_1C032BC38(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
    uint64_t v10 = v6[6];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for PuzzleLeaderboardResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1C007374C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      goto LABEL_6;
    }
    uint64_t v23 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(a1, a2, v23);
    uint64_t v24 = v6[5];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    uint64_t v28 = *(void *)v26;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = v28;
    *((void *)v25 + 1) = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = v6[6];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    uint64_t v32 = *(void *)&a2[v29 + 8];
    *(void *)uint64_t v30 = *(void *)&a2[v29];
    *((void *)v30 + 1) = v32;
    swift_bridgeObjectRelease();
    uint64_t v33 = v31 + 16;
    unint64_t v34 = *((void *)v30 + 3);
    if (v34 >> 60 != 15)
    {
      unint64_t v35 = *((void *)v31 + 3);
      if (v35 >> 60 != 15)
      {
        uint64_t v36 = *((void *)v30 + 2);
        *((void *)v30 + 2) = *v33;
        *((void *)v30 + 3) = v35;
        sub_1BFE95664(v36, v34);
        goto LABEL_13;
      }
      sub_1C01D91B8((uint64_t)(v30 + 16));
    }
    *((_OWORD *)v30 + 1) = *(_OWORD *)v33;
LABEL_13:
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_6:
    sub_1C032BC38(0);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
  uint64_t v12 = v6[6];
  long long v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)long long v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v18 = &a1[v17];
  unint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleLeaderboardResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10AD960);
}

uint64_t sub_1C10AD960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C032BC38(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleLeaderboardResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10ADA34);
}

void sub_1C10ADA34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C032BC38(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_1C10ADAF0()
{
  sub_1C032BC38(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C10ADBA0(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleGameCenterServiceEvent()
{
  return &type metadata for PuzzleGameCenterServiceEvent;
}

uint64_t dispatch thunk of PuzzleGameCenterServiceListener.shouldReenableAuthenticationHandler()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceListener.puzzleGameCenterService(_:triggered:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isUserAuthenticated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.lastAuthenticationResult.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1C10ADD04;
  return v7(a1, a2);
}

uint64_t sub_1C10ADD04(uint64_t a1, char a2)
{
  uint64_t v7 = *v2;
  uint64_t v4 = a2 & 1;
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, v4);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isGameCenterEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1C032DE74;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.authenticate()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1C005E7F4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.invalidate()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 48) + **(int **)(a2 + 48));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1C005E7F4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.submitScore(puzzleID:difficulty:score:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 56)
                                                                                              + **(int **)(a7 + 56));
  uint64_t v14 = a4 & 1;
  long long v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *long long v15 = v7;
  v15[1] = sub_1C005E7F4;
  return v17(a1, a2, a3, v14, a5, a6, a7);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.submitTestScore(puzzleTypeID:difficulty:score:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 64)
                                                                                              + **(int **)(a7 + 64));
  uint64_t v14 = a4 & 1;
  long long v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *long long v15 = v7;
  v15[1] = sub_1C005E7F4;
  return v17(a1, a2, a3, v14, a5, a6, a7);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:timeScope:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a11 + 72) + **(int **)(a11 + 72));
  uint64_t v17 = a5 & 1;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v11 + 16) = v18;
  void *v18 = v11;
  v18[1] = sub_1BFC542F4;
  return v20(a1, a2, a3, a4, v17, a6, a7, a8, a9, a10, a11);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.presentLeaderboard(entryPoint:presenter:onDashboardFinished:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 80)
                                                                                     + **(int **)(a6 + 80));
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *long long v13 = v6;
  v13[1] = sub_1C005E7F4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.openSettings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.removeListener(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 104) + **(int **)(a4 + 104));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C005E7F4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isPresentingGameCenter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isPresentingDashboard.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 120) + **(int **)(a2 + 120));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1C032DE74;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isNewsSettingsGameCenterEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

unsigned char *storeEnumTagSinglePayload for PuzzleGameCenterSubmitScoreError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10AE8B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleGameCenterSubmitScoreError()
{
  return &type metadata for PuzzleGameCenterSubmitScoreError;
}

uint64_t sub_1C10AE8F0()
{
  *(void *)(v1 + 104) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 112) = v2;
  void *v2 = v1;
  v2[1] = sub_1C10AE980;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10AE980(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  *(unsigned char *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10AEA98, v2, 0);
}

uint64_t sub_1C10AEA98(double a1)
{
  if (*(unsigned char *)(v1 + 176) != 1)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C15198DC();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB93C7A8);
    unsigned int v6 = sub_1C15198AC();
    os_log_type_t v7 = sub_1C151F38C();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_12;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "PuzzleGameCenterService: Game Center disabled. Skipping authentication.";
    goto LABEL_11;
  }
  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  uint64_t v2 = self;
  *(void *)(v1 + 120) = v2;
  id v3 = objc_msgSend(v2, sel_localPlayer);
  id v4 = objc_msgSend(v3, sel_authenticateHandler);

  if (v4)
  {
    _Block_release(v4);
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C15198DC();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB93C7A8);
    unsigned int v6 = sub_1C15198AC();
    os_log_type_t v7 = sub_1C151F38C();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_12;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "PuzzleGameCenterService: authenticateHandler already set. Skipping authentication.";
LABEL_11:
    _os_log_impl(&dword_1BFC31000, v6, v7, v9, v8, 2u);
    MEMORY[0x1C18C9B00](v8, -1, -1);
LABEL_12:

    uint64_t v11 = *(uint64_t (**)(void))(v1 + 8);
    return v11();
  }
  if (!objc_msgSend(*(id *)(*(void *)(v1 + 104) + 240), sel_isNetworkReachable))
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C15198DC();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB93C7A8);
    unsigned int v6 = sub_1C15198AC();
    os_log_type_t v7 = sub_1C151F38C();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_12;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "PuzzleGameCenterService: Network is not reachable. Skipping authentication.";
    goto LABEL_11;
  }
  *(void *)(v1 + 128) = self;
  *(void *)(v1 + 136) = sub_1C151EE6C();
  *(void *)(v1 + 144) = sub_1C151EE5C();
  uint64_t v14 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10AEDC4, v14, v13);
}

uint64_t sub_1C10AEDC4()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v0[13];
  swift_release();
  v0[19] = objc_msgSend(v1, sel_sharedApplication);
  return MEMORY[0x1F4188298](sub_1C10AEE50, v2, 0);
}

uint64_t sub_1C10AEE50()
{
  *(void *)(v0 + 160) = sub_1C151EE5C();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10AEEDC, v2, v1);
}

uint64_t sub_1C10AEEDC()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[13];
  swift_release();
  v0[21] = objc_msgSend(v1, sel_applicationState);

  return MEMORY[0x1F4188298](sub_1C10AEF60, v2, 0);
}

uint64_t sub_1C10AEF60()
{
  if (*((void *)v0 + 21))
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1C15198DC();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
    uint64_t v2 = sub_1C15198AC();
    os_log_type_t v3 = sub_1C151F38C();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleGameCenterService: app is not active. Skipping authentication.", v4, 2u);
      MEMORY[0x1C18C9B00](v4, -1, -1);
    }
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C15198DC();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB93C7A8);
    unsigned int v6 = sub_1C15198AC();
    os_log_type_t v7 = sub_1C151F38C();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1BFC31000, v6, v7, "PuzzleGameCenterService: authenticating user...", v8, 2u);
      MEMORY[0x1C18C9B00](v8, -1, -1);
    }
    uint64_t v9 = (void *)*((void *)v0 + 15);
    uint64_t v10 = *((void *)v0 + 13);

    uint64_t v2 = objc_msgSend(v9, sel_localPlayer);
    sub_1BFC66384(v10 + 120, (uint64_t)(v0 + 4));
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    sub_1BFC773DC(v0 + 4, v11 + 24);
    *((void *)v0 + 6) = sub_1C10BE3D8;
    *((void *)v0 + 7) = v11;
    *((void *)v0 + 2) = MEMORY[0x1E4F143A8];
    *((void *)v0 + 3) = 1107296256;
    *((void *)v0 + 4) = sub_1C10AF224;
    *((void *)v0 + 5) = &block_descriptor_158;
    uint64_t v12 = _Block_copy(v0 + 1);
    swift_retain();
    swift_release();
    [v2 setAuthenticateHandler:v12];
    _Block_release(v12);
  }

  uint64_t v13 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v13();
}

void sub_1C10AF224(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1C10AF2B0()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1C10AF340;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10AF340(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10AF458, v2, 0);
}

uint64_t sub_1C10AF458()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1C15198DC();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
    uint64_t v2 = sub_1C15198AC();
    os_log_type_t v3 = sub_1C151F38C();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleGameCenterService: invalidating handler...", v4, 2u);
      MEMORY[0x1C18C9B00](v4, -1, -1);
    }

    gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v5);
    id v6 = objc_msgSend(self, sel_localPlayer);
    [v6 setAuthenticateHandler:0];
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C15198DC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB93C7A8);
    id v6 = sub_1C15198AC();
    os_log_type_t v8 = sub_1C151F38C();
    if (os_log_type_enabled(v6, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1BFC31000, v6, v8, "PuzzleGameCenterService: Game Center disabled. Skipping invalidation.", v9, 2u);
      MEMORY[0x1C18C9B00](v9, -1, -1);
    }
  }

  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1C10AF65C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1C0064478(0);
  *(void *)&double v9 = MEMORY[0x1F4188790](v8 - 8).n128_u64[0];
  uint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v12 = sub_1C151EE9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_1BFC66384(a4, (uint64_t)v46);
    sub_1C151EE6C();
    id v13 = a1;
    uint64_t v14 = sub_1C151EE5C();
    uint64_t v15 = (void *)swift_allocObject();
    uint64_t v16 = MEMORY[0x1E4FBCFD8];
    void v15[2] = v14;
    v15[3] = v16;
    sub_1BFC773DC(v46, (uint64_t)(v15 + 4));
    v15[9] = v13;
    uint64_t v17 = &unk_1EA1AB178;
    uint64_t v18 = (uint64_t)v11;
    uint64_t v19 = (uint64_t)v15;
  }
  else
  {
    if (a2)
    {
      id v20 = a2;
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1C15198DC();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EB93C7A8);
      id v22 = a2;
      id v23 = a2;
      uint64_t v24 = sub_1C15198AC();
      os_log_type_t v25 = sub_1C151F36C();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(void *)&v46[0] = v27;
        *(_DWORD *)uint64_t v26 = 136315138;
        swift_getErrorValue();
        uint64_t v28 = sub_1C1520D3C();
        uint64_t v47 = sub_1BFDA76EC(v28, v29, (uint64_t *)v46);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BFC31000, v24, v25, "PuzzleGameCenterService: failed authenticating user [%s]", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v27, -1, -1);
        MEMORY[0x1C18C9B00](v26, -1, -1);
      }
      else
      {
      }
      uint64_t v39 = sub_1C151EE9C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v11, 1, 1, v39);
      uint64_t v37 = (void *)swift_allocObject();
      _OWORD v37[2] = 0;
      v37[3] = 0;
      v37[4] = a3;
      v37[5] = a2;
      swift_retain();
      uint64_t v38 = &unk_1EA1AB168;
    }
    else
    {
      gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v9);
      id v30 = objc_msgSend(self, sel_localPlayer);
      uint64_t v31 = objc_msgSend(v30, sel_isAuthenticated);

      if (v31)
      {
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1C15198DC();
        __swift_project_value_buffer(v32, (uint64_t)qword_1EB93C7A8);
        uint64_t v33 = sub_1C15198AC();
        os_log_type_t v34 = sub_1C151F38C();
        if (os_log_type_enabled(v33, v34))
        {
          unint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v35 = 0;
          _os_log_impl(&dword_1BFC31000, v33, v34, "PuzzleGameCenterService: user authenticated", v35, 2u);
          MEMORY[0x1C18C9B00](v35, -1, -1);
        }

        uint64_t v36 = sub_1C151EE9C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v11, 1, 1, v36);
        uint64_t v37 = (void *)swift_allocObject();
        _OWORD v37[2] = 0;
        v37[3] = 0;
        v37[4] = a3;
        swift_retain();
        uint64_t v38 = &unk_1EA1AB158;
      }
      else
      {
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v40 = sub_1C15198DC();
        __swift_project_value_buffer(v40, (uint64_t)qword_1EB93C7A8);
        uint64_t v41 = sub_1C15198AC();
        os_log_type_t v42 = sub_1C151F38C();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v43 = 0;
          _os_log_impl(&dword_1BFC31000, v41, v42, "PuzzleGameCenterService: Unknown error [no error reported from GC]", v43, 2u);
          MEMORY[0x1C18C9B00](v43, -1, -1);
        }

        uint64_t v44 = sub_1C151EE9C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 1, 1, v44);
        uint64_t v37 = (void *)swift_allocObject();
        _OWORD v37[2] = 0;
        v37[3] = 0;
        v37[4] = a3;
        swift_retain();
        uint64_t v38 = &unk_1EA1AB148;
      }
    }
    uint64_t v17 = v38;
    uint64_t v18 = (uint64_t)v11;
    uint64_t v19 = (uint64_t)v37;
  }
  sub_1C0C833AC(v18, (uint64_t)v17, v19);
  return swift_release();
}

uint64_t sub_1C10AFC64()
{
  *(void *)(v1 + 80) = v0;
  return MEMORY[0x1F4188298](sub_1C10AFC84, v0, 0);
}

uint64_t sub_1C10AFC84(double a1)
{
  uint64_t v26 = v1;
  if (sub_1C10ACB60(a1))
  {
    uint64_t v2 = *(void *)(v1 + 80) + 272;
    swift_beginAccess();
    if (*(void *)(*(void *)v2 + 16))
    {
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1C15198DC();
      *(void *)(v1 + 88) = __swift_project_value_buffer(v3, (uint64_t)qword_1EB93C7A8);
      uint64_t v4 = sub_1C15198AC();
      os_log_type_t v5 = sub_1C151F38C();
      if (os_log_type_enabled(v4, v5))
      {
        id v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v6 = 0;
        _os_log_impl(&dword_1BFC31000, v4, v5, "PuzzleGameCenterService: Submitting pending scores...", v6, 2u);
        MEMORY[0x1C18C9B00](v6, -1, -1);
      }

      uint64_t v7 = *(void *)v2;
      *(void *)(v1 + 96) = *(void *)v2;
      uint64_t v8 = *(void *)(v7 + 16);
      *(void *)(v1 + 104) = v8;
      if (v8)
      {
        uint64_t v9 = MEMORY[0x1E4FBC860];
        *(void *)(v1 + 112) = 0;
        *(void *)(v1 + 120) = v9;
        LOBYTE(v9) = *(unsigned char *)(v7 + 64);
        long long v10 = *(_OWORD *)(v7 + 48);
        *(_OWORD *)(v1 + 16) = *(_OWORD *)(v7 + 32);
        *(_OWORD *)(v1 + 32) = v10;
        *(unsigned char *)(v1 + 48) = v9;
        uint64_t v11 = *(void *)(v1 + 16);
        uint64_t v12 = *(void *)(v1 + 24);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        id v13 = sub_1C15198AC();
        os_log_type_t v14 = sub_1C151F38C();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = swift_slowAlloc();
          uint64_t v16 = swift_slowAlloc();
          uint64_t v25 = v16;
          *(_DWORD *)uint64_t v15 = 136315138;
          uint64_t v17 = sub_1C10AC160();
          *(void *)(v15 + 4) = sub_1BFDA76EC(v17, v18, &v25);
          swift_bridgeObjectRelease();
          sub_1BFF5E6C8(v1 + 16);
          sub_1BFF5E6C8(v1 + 16);
          _os_log_impl(&dword_1BFC31000, v13, v14, "PuzzleGameCenterService: Submitting pending %s...", (uint8_t *)v15, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v16, -1, -1);
          MEMORY[0x1C18C9B00](v15, -1, -1);
        }
        else
        {
          sub_1BFF5E6C8(v1 + 16);
          sub_1BFF5E6C8(v1 + 16);
        }

        char v21 = *(unsigned char *)(v1 + 48);
        uint64_t v23 = *(void *)(v1 + 32);
        uint64_t v22 = *(void *)(v1 + 40);
        swift_bridgeObjectRetain();
        uint64_t v24 = (void *)swift_task_alloc();
        *(void *)(v1 + 128) = v24;
        *uint64_t v24 = v1;
        v24[1] = sub_1C10AFFF0;
        return sub_1C10B8238(v1 + 49, v11, v12, v22, v21, v23, 1);
      }
      *(void *)(*(void *)(v1 + 80) + 272) = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v19 = *(uint64_t (**)(void))(v1 + 8);
  return v19();
}

uint64_t sub_1C10AFFF0()
{
  uint64_t v1 = *(void *)v0 + 16;
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  sub_1BFF5E6C8(v1);
  return MEMORY[0x1F4188298](sub_1C10B010C, v2, 0);
}

uint64_t sub_1C10B010C()
{
  uint64_t v28 = v0;
  uint64_t v1 = (long long *)(v0 + 16);
  if (*(unsigned char *)(v0 + 50))
  {
    switch(*(unsigned char *)(v0 + 49))
    {
      case 3:
      case 4:
      case 5:
        goto LABEL_8;
      default:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v3 = *(void **)(v0 + 120);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v3 = sub_1C0EE8774(0, v3[2] + 1, 1, *(void **)(v0 + 120));
        }
        unint64_t v5 = v3[2];
        unint64_t v4 = v3[3];
        if (v5 >= v4 >> 1) {
          uint64_t v3 = sub_1C0EE8774((void *)(v4 > 1), v5 + 1, 1, v3);
        }
        v3[2] = v5 + 1;
        id v6 = &v3[5 * v5];
        long long v7 = *v1;
        long long v8 = *(_OWORD *)(v0 + 32);
        *((unsigned char *)v6 + 64) = *(unsigned char *)(v0 + 48);
        *((_OWORD *)v6 + 2) = v7;
        *((_OWORD *)v6 + 3) = v8;
        break;
    }
  }
  else
  {
LABEL_8:
    sub_1BFF5E6C8(v0 + 16);
    uint64_t v3 = *(void **)(v0 + 120);
  }
  uint64_t v9 = *(void *)(v0 + 112) + 1;
  if (v9 == *(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    *(void *)(*(void *)(v0 + 80) + 272) = v3;
    swift_bridgeObjectRelease();
    long long v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    *(void *)(v0 + 112) = v9;
    *(void *)(v0 + 120) = v3;
    uint64_t v12 = *(void *)(v0 + 96) + 40 * v9;
    char v13 = *(unsigned char *)(v12 + 64);
    long long v14 = *(_OWORD *)(v12 + 48);
    long long *v1 = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(v0 + 32) = v14;
    *(unsigned char *)(v0 + 48) = v13;
    uint64_t v15 = *(void *)(v0 + 16);
    uint64_t v16 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1C15198AC();
    os_log_type_t v18 = sub_1C151F38C();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v27 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v21 = sub_1C10AC160();
      *(void *)(v19 + 4) = sub_1BFDA76EC(v21, v22, &v27);
      swift_bridgeObjectRelease();
      sub_1BFF5E6C8(v0 + 16);
      sub_1BFF5E6C8(v0 + 16);
      _os_log_impl(&dword_1BFC31000, v17, v18, "PuzzleGameCenterService: Submitting pending %s...", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v20, -1, -1);
      MEMORY[0x1C18C9B00](v19, -1, -1);
    }
    else
    {
      sub_1BFF5E6C8(v0 + 16);
      sub_1BFF5E6C8(v0 + 16);
    }

    char v23 = *(unsigned char *)(v0 + 48);
    uint64_t v25 = *(void *)(v0 + 32);
    uint64_t v24 = *(void *)(v0 + 40);
    swift_bridgeObjectRetain();
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1C10AFFF0;
    return sub_1C10B8238(v0 + 49, v15, v16, v24, v23, v25, 1);
  }
}

uint64_t sub_1C10B0458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  void v5[3] = a5;
  sub_1C151EE6C();
  void v5[4] = sub_1C151EE5C();
  uint64_t v7 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10B04F0, v7, v6);
}

void sub_1C10B04F0()
{
  uint64_t v1 = (void *)v0[2];
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v2 = (void *)sub_1C151AE1C();
  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_windows);

  sub_1BFC39268(0, &qword_1EA1AB180);
  unint64_t v5 = sub_1C151EBCC();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1C18C7CB0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v5 + 32);
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v7, sel_rootViewController);

  if (v8)
  {
    uint64_t v9 = v0[3];
    long long v10 = (void *)sub_1C151F49C();

    objc_msgSend(v10, sel_presentViewController_animated_completion_, v9, 1, 0);
  }
LABEL_11:
  uint64_t v12 = (void (*)(void))v0[1];
  v12();
}

uint64_t sub_1C10B06A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return MEMORY[0x1F4188298](sub_1C10B06C8, 0, 0);
}

uint64_t sub_1C10B06C8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = *(id *)(v0 + 32);
  uint64_t v3 = (void *)sub_1C1515D2C();
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = objc_msgSend(v3, sel_code);
  return MEMORY[0x1F4188298](sub_1C10B0750, v1, 0);
}

uint64_t sub_1C10B0750()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  *(void *)(v2 + 248) = v1;
  *(unsigned char *)(v2 + 256) = 0;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = (uint64_t)v3;
  void *v3 = v0;
  v3[1] = sub_1C10B07FC;
  return sub_1C10AC908(v0 + 2);
}

uint64_t sub_1C10B07FC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B08F8, 0, 0);
}

uint64_t sub_1C10B08F8()
{
  uint64_t v1 = *(void **)(v0 + 32);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C10B0960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](sub_1C10B0980, a4, 0);
}

uint64_t sub_1C10B0980()
{
  uint64_t v1 = v0[3];
  *(void *)(v1 + 248) = 0;
  *(unsigned char *)(v1 + 256) = 0;
  v0[2] = 0;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = (uint64_t)v2;
  void *v2 = v0;
  v2[1] = sub_1C10B0A28;
  return sub_1C10AC908(v0 + 2);
}

uint64_t sub_1C10B0A28()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 40) = v3;
  void *v3 = v2;
  v3[1] = sub_1C0E1677C;
  uint64_t v4 = *(void *)(v1 + 24);
  v3[10] = v4;
  return MEMORY[0x1F4188298](sub_1C10AFC84, v4, 0);
}

uint64_t sub_1C10B0B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](sub_1C10B0BA0, 0, 0);
}

uint64_t sub_1C10B0BA0()
{
  uint64_t v1 = v0[3];
  sub_1BFF99224(MEMORY[0x1E4FBC860]);
  id v2 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  uint64_t v3 = (void *)sub_1C151E5EC();
  uint64_t v4 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, -1, v4);
  v0[4] = v5;

  id v6 = v5;
  uint64_t v7 = (void *)sub_1C1515D2C();
  v0[5] = v7;
  v0[6] = objc_msgSend(v7, sel_code);
  return MEMORY[0x1F4188298](sub_1C10B0CD4, v1, 0);
}

uint64_t sub_1C10B0CD4()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  *(void *)(v2 + 248) = v1;
  *(unsigned char *)(v2 + 256) = 0;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = (uint64_t)v3;
  void *v3 = v0;
  v3[1] = sub_1C10B0D80;
  return sub_1C10AC908(v0 + 2);
}

uint64_t sub_1C10B0D80()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B0E7C, 0, 0);
}

uint64_t sub_1C10B0E7C()
{
  uint64_t v1 = *(void **)(v0 + 32);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C10B0EE4()
{
  uint64_t v1 = (uint64_t *)(v0 + 264);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  id v30 = (void *)MEMORY[0x1E4FBC860];
  if (!v6) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
LABEL_8:
  uint64_t v12 = *(void *)(v2 + 56);
  uint64_t v35 = *(void *)(*(void *)(v2 + 48) + 8 * v11);
  sub_1C107791C(v12 + 16 * v11, (uint64_t)v36);
  while (1)
  {
    sub_1C10BD5FC((uint64_t)&v35, (uint64_t)&v37, (uint64_t (*)(void))sub_1C10BD664);
    if (v38[0]) {
      BOOL v16 = 0;
    }
    else {
      BOOL v16 = v38[1] == 1;
    }
    if (v16)
    {
      swift_release();
      return (uint64_t)v30;
    }
    uint64_t v17 = v37;
    sub_1BFC372E8((uint64_t)v38, (uint64_t)v33);
    uint64_t v18 = MEMORY[0x1C18C9C60](v33);
    if (v18)
    {
      uint64_t v24 = v18;
      uint64_t v28 = v34;
      swift_unknownObjectRetain();
      uint64_t v29 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v30 = sub_1C0EE8788(0, v30[2] + 1, 1, v30);
      }
      unint64_t v26 = v30[2];
      unint64_t v25 = v30[3];
      if (v26 >= v25 >> 1) {
        id v30 = sub_1C0EE8788((void *)(v25 > 1), v26 + 1, 1, v30);
      }
      void v30[2] = v26 + 1;
      uint64_t v27 = &v30[2 * v26];
      v27[4] = v24;
      v27[5] = v28;
      swift_unknownObjectRelease();
      uint64_t result = sub_1C019B9B4((uint64_t)v33);
      uint64_t v3 = v29;
      if (v6) {
        goto LABEL_7;
      }
    }
    else
    {
      swift_beginAccess();
      unint64_t v19 = sub_1BFC44E98(v17);
      if (v20)
      {
        unint64_t v21 = v19;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = *v1;
        uint64_t v31 = *v1;
        uint64_t *v1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C1074770();
          uint64_t v23 = v31;
        }
        sub_1BFC372E8(*(void *)(v23 + 56) + 16 * v21, (uint64_t)&v32);
        sub_1C091EF20(v21, v23);
        uint64_t *v1 = v23;
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v32 = xmmword_1C152C800;
      }
      swift_endAccess();
      sub_1C10BCC38((uint64_t)&v32);
      uint64_t result = sub_1C019B9B4((uint64_t)v33);
      if (v6) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v13 >= v7)
    {
      int64_t v15 = v9;
    }
    else
    {
      unint64_t v14 = *(void *)(v3 + 8 * v13);
      if (v14) {
        goto LABEL_12;
      }
      int64_t v15 = v9 + 1;
      if (v9 + 2 < v7)
      {
        unint64_t v14 = *(void *)(v3 + 8 * (v9 + 2));
        if (v14)
        {
          int64_t v13 = v9 + 2;
LABEL_12:
          unint64_t v6 = (v14 - 1) & v14;
          unint64_t v11 = __clz(__rbit64(v14)) + (v13 << 6);
          int64_t v9 = v13;
          goto LABEL_8;
        }
        int64_t v15 = v9 + 2;
        if (v9 + 3 < v7)
        {
          unint64_t v14 = *(void *)(v3 + 8 * (v9 + 3));
          if (v14)
          {
            int64_t v13 = v9 + 3;
            goto LABEL_12;
          }
          int64_t v13 = v9 + 4;
          int64_t v15 = v9 + 3;
          if (v9 + 4 < v7)
          {
            unint64_t v14 = *(void *)(v3 + 8 * v13);
            if (v14) {
              goto LABEL_12;
            }
            while (v7 - 5 != v9)
            {
              unint64_t v14 = *(void *)(v2 + 104 + 8 * v9++);
              if (v14)
              {
                int64_t v13 = v9 + 4;
                goto LABEL_12;
              }
            }
            int64_t v15 = v7 - 1;
          }
        }
      }
    }
    unint64_t v6 = 0;
    uint64_t v35 = 0;
    v36[0] = 0;
    int64_t v9 = v15;
    v36[1] = 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C10B1264()
{
  v1[2] = v0;
  sub_1C151EE6C();
  v1[3] = sub_1C151EE5C();
  uint64_t v3 = sub_1C151EDBC();
  v1[4] = v3;
  v1[5] = v2;
  return MEMORY[0x1F4188298](sub_1C10B12FC, v3, v2);
}

uint64_t sub_1C10B12FC(double a1)
{
  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  id v2 = objc_msgSend(self, sel_localPlayer);
  id v3 = objc_msgSend(v2, sel_authenticateHandler);

  if (v3)
  {
    _Block_release(v3);
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v1 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 16);
    return MEMORY[0x1F4188298](sub_1C10B13E4, v6, 0);
  }
}

uint64_t sub_1C10B13E4()
{
  v0[6] = sub_1C10B0EE4();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  return MEMORY[0x1F4188298](sub_1C10B144C, v1, v2);
}

uint64_t sub_1C10B144C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    id v3 = (uint64_t *)(v1 + 40);
    while (1)
    {
      uint64_t v4 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      swift_unknownObjectRetain();
      LOBYTE(v4) = v6(ObjectType, v4);
      swift_unknownObjectRelease();
      if (v4) {
        break;
      }
      v3 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    int64_t v9 = (void *)swift_task_alloc();
    v0[7] = v9;
    *int64_t v9 = v0;
    v9[1] = sub_1C10B15CC;
    return sub_1C10AE8F0();
  }
  else
  {
LABEL_6:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1C10B15CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return MEMORY[0x1F4188298](sub_1C10B16EC, v3, v2);
}

uint64_t sub_1C10B16EC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C10B1780()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

unint64_t sub_1C10B17E8(double a1)
{
  return (unint64_t)sub_1C10ACB60(a1) & 1;
}

uint64_t sub_1C10B1804()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C10B1824, v0, 0);
}

uint64_t sub_1C10B1824()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(*(void *)(v0 + 16) + 248), *(unsigned __int8 *)(*(void *)(v0 + 16) + 256));
}

uint64_t sub_1C10B1844()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1C0328A38;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10B18D0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1C005E7F4;
  return sub_1C10AE8F0();
}

uint64_t sub_1C10B195C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1C005E7F4;
  return sub_1C10AF2B0();
}

uint64_t sub_1C10B19E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 16) = v5;
  char v11 = a4 & 1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1C10B1AC8;
  return sub_1C10B8238(v6 + 32, a1, a2, a3, v11, a5, 0);
}

uint64_t sub_1C10B1AC8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B1BD8, v1, 0);
}

uint64_t sub_1C10B1BD8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C10B1BEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v10 = a4 & 1;
  char v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *char v11 = v5;
  v11[1] = sub_1C005E7F4;
  return sub_1C10B1CB0(a1, a2, a3, v10, a5);
}

uint64_t sub_1C10B1CB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 240) = a5;
  *(void *)(v6 + 248) = v5;
  *(unsigned char *)(v6 + 312) = a4;
  *(void *)(v6 + 224) = a2;
  *(void *)(v6 + 232) = a3;
  *(void *)(v6 + 216) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 256) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1C10B1D4C;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10B1D4C(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  *(unsigned char *)(*(void *)v1 + 313) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B1E64, v2, 0);
}

uint64_t sub_1C10B1E64(double a1)
{
  uint64_t v24 = v1;
  if (*(unsigned char *)(v1 + 313) == 1)
  {
    if (sub_1C10ACB60(a1))
    {
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_1C15198DC();
      *(void *)(v1 + 264) = __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
      swift_bridgeObjectRetain_n();
      uint64_t v3 = sub_1C15198AC();
      os_log_type_t v4 = sub_1C151F38C();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v22 = *(void *)(v1 + 216);
        uint64_t v5 = *(void *)(v1 + 240);
        unint64_t v6 = *(void *)(v1 + 224);
        uint64_t v7 = swift_slowAlloc();
        uint64_t v8 = swift_slowAlloc();
        uint64_t v23 = v8;
        *(_DWORD *)uint64_t v7 = 134218242;
        *(void *)(v1 + 200) = v5;
        sub_1C151FE1C();
        *(_WORD *)(v7 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v1 + 208) = sub_1BFDA76EC(v22, v6, &v23);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BFC31000, v3, v4, "PuzzleGameCenterService: submitting score %ld for puzzle type %s", (uint8_t *)v7, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v8, -1, -1);
        MEMORY[0x1C18C9B00](v7, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      char v17 = *(unsigned char *)(v1 + 312);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v1 + 272) = v18;
      void *v18 = v1;
      v18[1] = sub_1C10B2204;
      uint64_t v19 = *(void *)(v1 + 224);
      uint64_t v20 = *(void *)(v1 + 232);
      uint64_t v21 = *(void *)(v1 + 216);
      return sub_1C10B6524(v21, v19, v20, v17 & 1);
    }
    char v13 = 1;
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C15198DC();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB93C7A8);
    char v10 = sub_1C15198AC();
    os_log_type_t v11 = sub_1C151F38C();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1BFC31000, v10, v11, "PuzzleGameCenterService: Game Center disabled. Skipping score submission...", v12, 2u);
      MEMORY[0x1C18C9B00](v12, -1, -1);
    }

    char v13 = 0;
  }
  sub_1C10BDE24();
  swift_allocError();
  *uint64_t v14 = v13;
  swift_willThrow();
  int64_t v15 = *(uint64_t (**)(void))(v1 + 8);
  return v15();
}

uint64_t sub_1C10B2204(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  *(void *)(*(void *)v1 + 280) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B231C, v2, 0);
}

uint64_t sub_1C10B231C(double a1)
{
  uint64_t v28 = v1;
  uint64_t v2 = *(void **)(v1 + 280);
  if (v2)
  {
    uint64_t v26 = *(void *)(v1 + 240);
    gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(a1);
    uint64_t v3 = self;
    gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v4);
    id v5 = objc_msgSend(self, sel_localPlayer);
    *(void *)(v1 + 288) = v5;
    sub_1BFEFDE8C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
    id v7 = objc_msgSend(v2, sel_leaderboardID);
    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;

    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v10;
    uint64_t v11 = sub_1C151EBAC();
    *(void *)(v1 + 296) = v11;
    swift_bridgeObjectRelease();
    *(void *)(v1 + 16) = v1;
    *(void *)(v1 + 24) = sub_1C10B2770;
    uint64_t v12 = swift_continuation_init();
    *(void *)(v1 + 80) = MEMORY[0x1E4F143A8];
    *(void *)(v1 + 88) = 0x40000000;
    *(void *)(v1 + 96) = sub_1C10BBAE4;
    *(void *)(v1 + 104) = &block_descriptor_145;
    *(void *)(v1 + 112) = v12;
    objc_msgSend(v3, sel_submitScore_context_player_leaderboardIDs_completionHandler_, v26, 0, v5, v11, v1 + 80);
    return MEMORY[0x1F41881E8](v1 + 16);
  }
  else
  {
    if (*(unsigned char *)(v1 + 312))
    {
      uint64_t v15 = 0;
      unint64_t v14 = 0xE000000000000000;
    }
    else
    {
      uint64_t v13 = *(void *)(v1 + 232);
      strcpy((char *)v27, " difficulty ");
      BYTE5(v27[1]) = 0;
      HIWORD(v27[1]) = -5120;
      *(void *)(v1 + 144) = v13;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v15 = v27[0];
      unint64_t v14 = v27[1];
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    BOOL v16 = sub_1C15198AC();
    os_log_type_t v17 = sub_1C151F36C();
    BOOL v18 = os_log_type_enabled(v16, v17);
    unint64_t v19 = *(void *)(v1 + 224);
    if (v18)
    {
      uint64_t v20 = *(void *)(v1 + 216);
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v27[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 184) = sub_1BFDA76EC(v20, v19, v27);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 152) = sub_1BFDA76EC(v15, v14, v27);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v16, v17, "PuzzleGameCenterService: no leaderboard configured for %s%s. Skipping...", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v22, -1, -1);
      MEMORY[0x1C18C9B00](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    sub_1C10BDE24();
    swift_allocError();
    *uint64_t v23 = 3;
    swift_willThrow();
    uint64_t v24 = *(uint64_t (**)(void))(v1 + 8);
    return v24();
  }
}

uint64_t sub_1C10B2770()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 304) = v2;
  uint64_t v3 = *(void *)(v1 + 248);
  if (v2) {
    double v4 = sub_1C10B2900;
  }
  else {
    double v4 = sub_1C10B2890;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C10B2890()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(void **)(v0 + 280);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C10B2900()
{
  uint64_t v23 = v0;
  uint64_t v2 = (void *)v0[37];
  uint64_t v1 = (void *)v0[38];
  uint64_t v3 = (void *)v0[36];
  swift_willThrow();

  swift_bridgeObjectRetain();
  id v4 = v1;
  swift_bridgeObjectRetain();
  id v5 = v1;
  uint64_t v6 = sub_1C15198AC();
  os_log_type_t v7 = sub_1C151F36C();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (void *)v0[38];
    uint64_t v9 = v0[30];
    uint64_t v10 = v0[27];
    unint64_t v11 = v0[28];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v22[0] = v21;
    *(_DWORD *)uint64_t v12 = 134218498;
    v0[20] = v9;
    sub_1C151FE1C();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[21] = sub_1BFDA76EC(v10, v11, v22);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_1C1520D3C();
    v0[24] = sub_1BFDA76EC(v13, v14, v22);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v6, v7, "PuzzleGameCenterService: error submitting score %ld for %s: %s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v21, -1, -1);
    MEMORY[0x1C18C9B00](v12, -1, -1);
  }
  else
  {
    uint64_t v15 = (void *)v0[38];
    swift_bridgeObjectRelease_n();
  }
  BOOL v16 = (void *)v0[38];
  os_log_type_t v17 = (void *)v0[35];
  sub_1C10BDE24();
  swift_allocError();
  unsigned char *v18 = 5;
  swift_willThrow();

  unint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1C10B2BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unsigned char *a6, unsigned char *a7, uint64_t a8)
{
  char v16 = a5 & 1;
  os_log_type_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *os_log_type_t v17 = v8;
  v17[1] = sub_1BFC542F4;
  return sub_1C10B2CBC(a1, a2, a3, a4, v16, a6, a7, a8);
}

uint64_t sub_1C10B2CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unsigned char *a6, unsigned char *a7, uint64_t a8)
{
  *(void *)(v9 + 304) = v17;
  *(void *)(v9 + 312) = v8;
  *(void *)(v9 + 288) = a4;
  *(void *)(v9 + 296) = a8;
  *(unsigned char *)(v9 + 504) = a5;
  *(void *)(v9 + 272) = a2;
  *(void *)(v9 + 280) = a3;
  *(void *)(v9 + 264) = a1;
  uint64_t v12 = type metadata accessor for PuzzleLeaderboardEntry();
  *(void *)(v9 + 320) = v12;
  *(void *)(v9 + 328) = *(void *)(v12 - 8);
  *(void *)(v9 + 336) = swift_task_alloc();
  *(void *)(v9 + 344) = swift_task_alloc();
  sub_1C032BC38(0);
  *(void *)(v9 + 352) = v13;
  *(void *)(v9 + 360) = *(void *)(v13 - 8);
  *(void *)(v9 + 368) = swift_task_alloc();
  *(void *)(v9 + 376) = swift_task_alloc();
  *(void *)(v9 + 384) = swift_task_alloc();
  *(void *)(v9 + 392) = swift_task_alloc();
  *(unsigned char *)(v9 + 505) = *a6;
  *(unsigned char *)(v9 + 506) = *a7;
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v9 + 400) = v14;
  *unint64_t v14 = v9;
  v14[1] = sub_1C10B2E74;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10B2E74(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 312);
  *(unsigned char *)(*(void *)v1 + 507) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B2F8C, v2, 0);
}

uint64_t sub_1C10B2F8C()
{
  if (*(unsigned char *)(v0 + 507) == 1)
  {
    char v1 = *(unsigned char *)(v0 + 504) & 1;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v2;
    void *v2 = v0;
    v2[1] = sub_1C10B31BC;
    uint64_t v3 = *(void *)(v0 + 280);
    uint64_t v4 = *(void *)(v0 + 288);
    uint64_t v5 = *(void *)(v0 + 272);
    return sub_1C10B6524(v5, v3, v4, v1);
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C15198DC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB93C7A8);
    uint64_t v8 = sub_1C15198AC();
    os_log_type_t v9 = sub_1C151F38C();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1BFC31000, v8, v9, "PuzzleGameCenterService: Game Center is disabled. Returning empty leaderboard.", v10, 2u);
      MEMORY[0x1C18C9B00](v10, -1, -1);
    }
    uint64_t v11 = *(void *)(v0 + 264);

    uint64_t v12 = type metadata accessor for PuzzleLeaderboardResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_1C10B31BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 312);
  *(void *)(*(void *)v1 + 416) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B32D4, v2, 0);
}

uint64_t sub_1C10B32D4()
{
  uint64_t v1 = (void *)v0[52];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_leaderboardID);
    uint64_t v3 = sub_1C151E62C();
    uint64_t v5 = v4;

    gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(v6);
    uint64_t v7 = self;
    sub_1BFEFDE8C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v5;
    uint64_t v9 = sub_1C151EBAC();
    v0[53] = v9;
    swift_bridgeObjectRelease();
    v0[2] = v0;
    v0[7] = v0 + 31;
    v0[3] = sub_1C10B3540;
    uint64_t v10 = swift_continuation_init();
    v0[18] = MEMORY[0x1E4F143A8];
    v0[19] = 0x40000000;
    v0[20] = sub_1C10B6A30;
    v0[21] = &block_descriptor_125;
    v0[22] = v10;
    objc_msgSend(v7, sel_loadLeaderboardsWithIDs_completionHandler_, v9, v0 + 18);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    uint64_t v11 = v0[33];
    uint64_t v12 = type metadata accessor for PuzzleLeaderboardResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1C10B3540()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 432) = v2;
  uint64_t v3 = *(void *)(v1 + 312);
  if (v2) {
    uint64_t v4 = sub_1C10B4388;
  }
  else {
    uint64_t v4 = sub_1C10B3660;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C10B3660(uint64_t a1)
{
  unint64_t v2 = *(void *)(v1 + 248);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();
    a1 = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v12 = *(void **)(v1 + 424);
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C18C7CB0](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x1F41881E8](a1);
    }
    id v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  *(void *)(v1 + 440) = v3;

  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = *(unsigned __int8 *)(v1 + 505);
    id v6 = v4;
    if (objc_msgSend(v6, sel_type) == (id)1) {
      uint64_t v7 = 2;
    }
    else {
      uint64_t v7 = 2 - *(unsigned __int8 *)(v1 + 506);
    }
    uint64_t v9 = *(void *)(v1 + 296);
    uint64_t v8 = *(void *)(v1 + 304);
    *(void *)(v1 + 80) = v1;
    *(void *)(v1 + 120) = v1 + 224;
    *(void *)(v1 + 88) = sub_1C10B3918;
    uint64_t v10 = swift_continuation_init();
    *(void *)(v1 + 184) = MEMORY[0x1E4F143A8];
    *(void *)(v1 + 192) = 0x40000000;
    *(void *)(v1 + 200) = sub_1C10B6B08;
    *(void *)(v1 + 208) = &block_descriptor_127;
    *(void *)(v1 + 216) = v10;
    objc_msgSend(v6, sel_loadEntriesForPlayerScope_timeScope_range_completionHandler_, v5, v7, v9, v8, v1 + 184);
    a1 = v1 + 80;
    return MEMORY[0x1F41881E8](a1);
  }
LABEL_15:
  uint64_t v13 = *(void *)(v1 + 264);

  uint64_t v14 = type metadata accessor for PuzzleLeaderboardResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v1 + 8);
  return v15();
}

uint64_t sub_1C10B3918()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 448) = v2;
  uint64_t v3 = *(void *)(v1 + 312);
  if (v2) {
    uint64_t v4 = sub_1C10B4448;
  }
  else {
    uint64_t v4 = sub_1C10B3A38;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C10B3A38()
{
  uint64_t v1 = (void *)v0[55];
  uint64_t v3 = (void *)v0[28];
  uint64_t v2 = v0[29];
  v0[57] = v3;
  v0[58] = v2;
  v0[59] = v0[30];

  if (v3)
  {
    swift_bridgeObjectRetain();
    v3;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[60] = v4;
    void *v4 = v0;
    v4[1] = sub_1C10B3C48;
    uint64_t v5 = v0[49];
    return sub_1C1218C54(v5);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[41] + 56))(v0[49], 1, 1, v0[40]);
    uint64_t v7 = v0[58];
    uint64_t v8 = v0[39];
    swift_bridgeObjectRetain();
    v0[32] = MEMORY[0x1E4FBC860];
    uint64_t v10 = sub_1C0071EE4(&qword_1EA1AB1F8, v9, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
    uint64_t v11 = swift_task_alloc();
    v0[61] = v11;
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v0 + 32;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[62] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1C10B3E98;
    uint64_t v13 = v0[44];
    uint64_t v14 = MEMORY[0x1E4FBC848] + 8;
    return MEMORY[0x1F4187F28](v12, v13, v14, v8, v10, &unk_1EA1AB208, v11, v13);
  }
}

uint64_t sub_1C10B3C48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B3D58, v1, 0);
}

uint64_t sub_1C10B3D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[58];
  uint64_t v4 = v2[39];
  v2[32] = MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1C0071EE4(&qword_1EA1AB1F8, a2, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
  uint64_t v6 = swift_task_alloc();
  v2[61] = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v2 + 32;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[62] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C10B3E98;
  uint64_t v8 = v2[44];
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4187F28](v7, v8, v9, v4, v5, &unk_1EA1AB208, v6, v8);
}

uint64_t sub_1C10B3E98()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B3FE8, v1, 0);
}

uint64_t sub_1C10B3FE8()
{
  sub_1C10BDD04(*(void *)(v0 + 392), *(void *)(v0 + 384), (uint64_t (*)(void))sub_1C032BC38);
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 360);
    uint64_t v4 = *(void *)(v0 + 328);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    uint64_t v33 = *(void *)(v0 + 256);
    swift_bridgeObjectRetain();
    unint64_t v7 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = *(void *)(v0 + 368);
      uint64_t v8 = *(void *)(v0 + 376);
      uint64_t v10 = *(void *)(v0 + 320);
      sub_1C10BDD04(v5, v8, (uint64_t (*)(void))sub_1C032BC38);
      sub_1C10BD5FC(v8, v9, (uint64_t (*)(void))sub_1C032BC38);
      int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v10);
      uint64_t v12 = *(void *)(v0 + 368);
      if (v11 == 1)
      {
        sub_1C007374C(v12, (uint64_t (*)(void))sub_1C032BC38);
      }
      else
      {
        uint64_t v14 = *(void *)(v0 + 336);
        uint64_t v13 = *(void *)(v0 + 344);
        sub_1C10BD5FC(v12, v13, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        sub_1C10BD5FC(v13, v14, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v7 = sub_1C0EE0804(0, *(void *)(v7 + 16) + 1, 1, v7);
        }
        unint64_t v16 = *(void *)(v7 + 16);
        unint64_t v15 = *(void *)(v7 + 24);
        if (v16 >= v15 >> 1) {
          unint64_t v7 = sub_1C0EE0804(v15 > 1, v16 + 1, 1, v7);
        }
        uint64_t v17 = *(void *)(v0 + 336);
        *(void *)(v7 + 16) = v16 + 1;
        sub_1C10BD5FC(v17, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v16, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      }
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = MEMORY[0x1E4FBC860];
  }
  id v18 = objc_msgSend(*(id *)(v0 + 416), sel_name, v33);
  uint64_t v19 = *(void **)(v0 + 456);
  uint64_t v20 = *(void **)(v0 + 416);
  if (v18)
  {
    uint64_t v21 = v18;
    uint64_t v34 = sub_1C151E62C();
    uint64_t v23 = v22;
  }
  else
  {

    uint64_t v34 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v24 = *(void *)(v0 + 472);
  uint64_t v25 = *(void **)(v0 + 440);
  uint64_t v27 = *(void *)(v0 + 384);
  uint64_t v26 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 264);

  swift_bridgeObjectRelease();
  sub_1C007374C(v26, (uint64_t (*)(void))sub_1C032BC38);
  sub_1C10BD5FC(v27, v28, (uint64_t (*)(void))sub_1C032BC38);
  uint64_t v29 = (int *)type metadata accessor for PuzzleLeaderboardResult();
  *(void *)(v28 + v29[5]) = v7;
  *(void *)(v28 + v29[6]) = v24;
  id v30 = (uint64_t *)(v28 + v29[7]);
  *id v30 = v34;
  v30[1] = v23;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v29 - 1) + 56))(v28, 0, 1, v29);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1C10B4388()
{
  uint64_t v1 = (void *)v0[53];
  uint64_t v2 = (void *)v0[52];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C10B4448()
{
  uint64_t v1 = (void *)v0[55];
  uint64_t v2 = (void *)v0[52];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C10B450C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C005E7F4;
  return sub_1C10B45C8(a1, a2, a3, a4);
}

uint64_t sub_1C10B45C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 176) = a4;
  *(void *)(v5 + 184) = v4;
  *(void *)(v5 + 160) = a2;
  *(void *)(v5 + 168) = a3;
  sub_1C0064478(0);
  *(void *)(v5 + 192) = swift_task_alloc();
  *(_OWORD *)(v5 + 200) = *(_OWORD *)a1;
  *(void *)(v5 + 216) = *(void *)(a1 + 16);
  *(unsigned char *)(v5 + 296) = *(unsigned char *)(a1 + 24);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 224) = v7;
  *unint64_t v7 = v5;
  v7[1] = sub_1C10B46A4;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10B46A4(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 184);
  *(unsigned char *)(*(void *)v1 + 297) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B47BC, v2, 0);
}

uint64_t sub_1C10B47BC()
{
  if (*(unsigned char *)(v0 + 297) != 1)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C15198DC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB93C7A8);
    uint64_t v8 = sub_1C15198AC();
    os_log_type_t v9 = sub_1C151F38C();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1BFC31000, v8, v9, "PuzzleGameCenterService: Game Center disabled. Skipping leaderboard presentation", v10, 2u);
      MEMORY[0x1C18C9B00](v10, -1, -1);
    }

LABEL_19:
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  if (!objc_msgSend(*(id *)(*(void *)(v0 + 184) + 240), sel_isNetworkReachable))
  {
LABEL_5:
    if (*(void *)(v0 + 208))
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1C10B5040;
      return sub_1BFC48D40();
    }
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C15198DC();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB93C7A8);
    uint64_t v12 = sub_1C15198AC();
    os_log_type_t v13 = sub_1C151F38C();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1BFC31000, v12, v13, "PuzzleGameCenterService: Presenting leaderboard list...", v14, 2u);
      MEMORY[0x1C18C9B00](v14, -1, -1);
    }
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v16 = *(void *)(v0 + 176);
    long long v29 = *(_OWORD *)(v0 + 160);

    uint64_t v17 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
    sub_1C151EE6C();
    id v18 = (id)v29;
    swift_retain();
    uint64_t v19 = sub_1C151EE5C();
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = MEMORY[0x1E4FBCFD8];
    *(void *)(v20 + 16) = v19;
    *(void *)(v20 + 24) = v21;
    *(_OWORD *)(v20 + 32) = v29;
    *(void *)(v20 + 48) = v16;
    sub_1C0C833AC(v15, (uint64_t)&unk_1EA1AB100, v20);
    swift_release();
    goto LABEL_19;
  }
  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v1);
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_localPlayer);
  id v4 = objc_msgSend(v3, sel_authenticateHandler);

  if (v4)
  {
    _Block_release(v4);
    goto LABEL_5;
  }
  uint64_t v23 = *(void *)(v0 + 184);
  id v24 = objc_msgSend(v2, sel_localPlayer);
  sub_1BFC66384(v23 + 120, v0 + 64);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  sub_1BFC773DC((long long *)(v0 + 64), v25 + 24);
  *(void *)(v0 + 48) = sub_1C10BD290;
  *(void *)(v0 + 56) = v25;
  *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1C10AF224;
  *(void *)(v0 + 40) = &block_descriptor_84;
  uint64_t v26 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v24, sel_setAuthenticateHandler_, v26);
  _Block_release(v26);

  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1C10B4CCC;
  uint64_t v28 = *(void *)(v0 + 184);
  v27[10] = v28;
  return MEMORY[0x1F4188298](sub_1C10AFC84, v28, 0);
}

uint64_t sub_1C10B4CCC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B4DDC, v1, 0);
}

uint64_t sub_1C10B4DDC()
{
  if (*(void *)(v0 + 208))
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v1;
    void *v1 = v0;
    v1[1] = sub_1C10B5040;
    return sub_1BFC48D40();
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C15198DC();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB93C7A8);
    id v4 = sub_1C15198AC();
    os_log_type_t v5 = sub_1C151F38C();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1BFC31000, v4, v5, "PuzzleGameCenterService: Presenting leaderboard list...", v6, 2u);
      MEMORY[0x1C18C9B00](v6, -1, -1);
    }
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v8 = *(void *)(v0 + 176);
    long long v15 = *(_OWORD *)(v0 + 160);

    uint64_t v9 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    sub_1C151EE6C();
    id v10 = (id)v15;
    swift_retain();
    uint64_t v11 = sub_1C151EE5C();
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = MEMORY[0x1E4FBCFD8];
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v13;
    *(_OWORD *)(v12 + 32) = v15;
    *(void *)(v12 + 48) = v8;
    sub_1C0C833AC(v7, (uint64_t)&unk_1EA1AB100, v12);
    swift_release();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1C10B5040(uint64_t a1)
{
  id v4 = (void *)*v2;
  os_log_type_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v6 = v4[26];
    uint64_t v7 = (void *)swift_task_alloc();
    v4[35] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_1C10B5D3C;
    uint64_t v8 = v4[25];
    return sub_1C10B6524(v8, v6, 0, 1);
  }
  else
  {
    uint64_t v10 = v4[23];
    v4[31] = a1;
    return MEMORY[0x1F4188298](sub_1C10B51E0, v10, 0);
  }
}

uint64_t sub_1C10B51E0()
{
  uint64_t v43 = v0;
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v1 = *(void **)(v0 + 208);
  id v3 = objc_msgSend(*(id *)(v0 + 248), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v4._countAndFlagsBits = v2;
  v4._object = v1;
  unint64_t v5 = (unint64_t)FCPuzzlesConfiguration.leaderboardDifficultyLevels(for:)(v4);

  if (!v5 || (unint64_t v6 = *(void *)(v5 + 16), swift_bridgeObjectRelease(), v6 < 2))
  {
    uint64_t v15 = *(void *)(v0 + 208);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1C10B5D3C;
    uint64_t v17 = *(void *)(v0 + 200);
    uint64_t v18 = v15;
    uint64_t v19 = 0;
    char v20 = 1;
LABEL_8:
    return sub_1C10B6524(v17, v18, v19, v20);
  }
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C15198DC();
  *(void *)(v0 + 256) = __swift_project_value_buffer(v7, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_1C15198AC();
  os_log_type_t v9 = sub_1C151F38C();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = *(void *)(v0 + 208);
  if (v10)
  {
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v42 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 136) = sub_1BFDA76EC(v12, v11, &v42);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v8, v9, "PuzzleGameCenterService: Multiple leaderboards configured for %s...", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v14, -1, -1);
    MEMORY[0x1C18C9B00](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v22 = *(void *)(v0 + 208);
  if ((*(unsigned char *)(v0 + 296) & 1) == 0)
  {
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1C10B575C;
    uint64_t v19 = *(void *)(v0 + 216);
    uint64_t v17 = *(void *)(v0 + 200);
    uint64_t v18 = v22;
    char v20 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  id v24 = sub_1C15198AC();
  os_log_type_t v25 = sub_1C151F38C();
  if (os_log_type_enabled(v24, v25))
  {
    char v39 = *(unsigned char *)(v0 + 296);
    unint64_t v26 = *(void *)(v0 + 208);
    uint64_t v40 = *(void *)(v0 + 216);
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v42 = v29;
    *(_DWORD *)uint64_t v28 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 104) = sub_1BFDA76EC(v27, v26, &v42);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2048;
    uint64_t v30 = v40;
    if (v39) {
      uint64_t v30 = 0;
    }
    *(void *)(v0 + 112) = v30;
    sub_1C151FE1C();
    _os_log_impl(&dword_1BFC31000, v24, v25, "PuzzleGameCenterService: No leaderboard configured for %s difficulty=%ld ... Presenting leaderboard list...", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v29, -1, -1);
    MEMORY[0x1C18C9B00](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = *(void *)(v0 + 192);
  uint64_t v32 = *(void *)(v0 + 176);
  uint64_t v33 = sub_1C151EE9C();
  long long v41 = *(_OWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 1, 1, v33);
  sub_1C151EE6C();
  id v34 = (id)v41;
  swift_retain();
  uint64_t v35 = sub_1C151EE5C();
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = MEMORY[0x1E4FBCFD8];
  *(void *)(v36 + 16) = v35;
  *(void *)(v36 + 24) = v37;
  *(_OWORD *)(v36 + 32) = v41;
  *(void *)(v36 + 48) = v32;
  sub_1C0C833AC(v31, (uint64_t)&unk_1EA1AB0E0, v36);
  swift_release();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1C10B575C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 184);
  *(void *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B5874, v2, 0);
}

uint64_t sub_1C10B5874()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void **)(v0 + 272);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15198AC();
    os_log_type_t v3 = sub_1C151F38C();
    if (os_log_type_enabled(v2, v3))
    {
      unint64_t v4 = *(void *)(v0 + 208);
      uint64_t v34 = *(void *)(v0 + 216);
      uint64_t v5 = *(void *)(v0 + 200);
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v38 = v7;
      *(_DWORD *)uint64_t v6 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 152) = sub_1BFDA76EC(v5, v4, &v38);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v6 + 12) = 2048;
      *(void *)(v0 + 128) = v34;
      sub_1C151FE1C();
      _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleGameCenterService: Presenting leaderboard for [%s] difficulty=%ld...", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v7, -1, -1);
      MEMORY[0x1C18C9B00](v6, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 176);
    uint64_t v18 = *(void **)(v0 + 160);
    uint64_t v19 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 1, 1, v19);
    sub_1C151EE6C();
    id v20 = v18;
    swift_retain();
    id v21 = v1;
    uint64_t v22 = sub_1C151EE5C();
    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v24 = MEMORY[0x1E4FBCFD8];
    _OWORD v23[2] = v22;
    v23[3] = v24;
    v23[4] = v20;
    v23[5] = v21;
    v23[6] = v17;
    v23[7] = v16;
    sub_1C0C833AC(v15, (uint64_t)&unk_1EA1AB0F0, (uint64_t)v23);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15198AC();
    os_log_type_t v9 = sub_1C151F38C();
    if (os_log_type_enabled(v8, v9))
    {
      char v35 = *(unsigned char *)(v0 + 296);
      unint64_t v10 = *(void *)(v0 + 208);
      uint64_t v36 = *(void *)(v0 + 216);
      uint64_t v11 = *(void *)(v0 + 200);
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v38 = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 104) = sub_1BFDA76EC(v11, v10, &v38);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2048;
      uint64_t v14 = v36;
      if (v35) {
        uint64_t v14 = 0;
      }
      *(void *)(v0 + 112) = v14;
      sub_1C151FE1C();
      _os_log_impl(&dword_1BFC31000, v8, v9, "PuzzleGameCenterService: No leaderboard configured for %s difficulty=%ld ... Presenting leaderboard list...", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v13, -1, -1);
      MEMORY[0x1C18C9B00](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v25 = *(void *)(v0 + 192);
    uint64_t v26 = *(void *)(v0 + 176);
    uint64_t v27 = sub_1C151EE9C();
    long long v37 = *(_OWORD *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
    sub_1C151EE6C();
    id v28 = (id)v37;
    swift_retain();
    uint64_t v29 = sub_1C151EE5C();
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = MEMORY[0x1E4FBCFD8];
    *(void *)(v30 + 16) = v29;
    *(void *)(v30 + 24) = v31;
    *(_OWORD *)(v30 + 32) = v37;
    *(void *)(v30 + 48) = v26;
    sub_1C0C833AC(v25, (uint64_t)&unk_1EA1AB0E0, v30);
  }
  swift_release();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_1C10B5D3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 184);
  *(void *)(*(void *)v1 + 288) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B5E54, v2, 0);
}

uint64_t sub_1C10B5E54()
{
  uint64_t v31 = v0;
  uint64_t v1 = (void *)v0[36];
  if (v1)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1C15198DC();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    os_log_type_t v3 = sub_1C15198AC();
    os_log_type_t v4 = sub_1C151F38C();
    BOOL v5 = os_log_type_enabled(v3, v4);
    unint64_t v6 = v0[26];
    if (v5)
    {
      uint64_t v7 = v0[25];
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v30 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      v0[18] = sub_1BFDA76EC(v7, v6, &v30);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v3, v4, "PuzzleGameCenterService: Presenting leaderboard for [%s]...", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v9, -1, -1);
      MEMORY[0x1C18C9B00](v8, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v18 = v0[24];
    uint64_t v20 = v0[21];
    uint64_t v19 = v0[22];
    id v21 = (void *)v0[20];
    uint64_t v22 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v18, 1, 1, v22);
    sub_1C151EE6C();
    id v23 = v21;
    swift_retain();
    id v24 = v1;
    uint64_t v25 = sub_1C151EE5C();
    uint64_t v26 = (void *)swift_allocObject();
    uint64_t v27 = MEMORY[0x1E4FBCFD8];
    _OWORD v26[2] = v25;
    _OWORD v26[3] = v27;
    v26[4] = v23;
    v26[5] = v24;
    v26[6] = v20;
    v26[7] = v19;
    sub_1C0C833AC(v18, (uint64_t)&unk_1EA1AB0D0, (uint64_t)v26);

    swift_release();
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C15198DC();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15198AC();
    os_log_type_t v12 = sub_1C151F36C();
    BOOL v13 = os_log_type_enabled(v11, v12);
    unint64_t v14 = v0[26];
    if (v13)
    {
      uint64_t v15 = v0[25];
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v30 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      v0[15] = sub_1BFDA76EC(v15, v14, &v30);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v11, v12, "PuzzleGameCenterService: no leaderboard configured for %s. Skipping...", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v17, -1, -1);
      MEMORY[0x1C18C9B00](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  swift_task_dealloc();
  id v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1C10B629C(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1C10B62BC, v1, 0);
}

uint64_t sub_1C10B62BC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_beginAccess();
  sub_1C10ABBAC(v1, (_OWORD *)(v0 + 40));
  swift_endAccess();
  sub_1C10BCC38(v0 + 40);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_1C10B6360()
{
  id v0 = objc_msgSend(self, sel_shared);
  id v1 = objc_msgSend(v0, sel_isPresentingGameCenter);

  return v1;
}

uint64_t sub_1C10B63B8()
{
  return MEMORY[0x1F4188298](sub_1C10B63D4, v0, 0);
}

uint64_t sub_1C10B63D4()
{
  id v1 = objc_msgSend(self, sel_shared);
  id v2 = objc_msgSend(v1, sel_isPresentingGameCenter);

  os_log_type_t v3 = *(uint64_t (**)(id))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1C10B6468()
{
  swift_getObjectType();
  if (qword_1EB86BFB8 != -1) {
    swift_once();
  }
  sub_1C0071EE4(&qword_1EB86CB38, v0, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
  sub_1C1516FBC();
  return v2;
}

uint64_t sub_1C10B6524(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 64) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v5 + 48) = v6;
  *unint64_t v6 = v5;
  v6[1] = sub_1C10B65BC;
  return sub_1BFC48D40();
}

uint64_t sub_1C10B65BC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    unint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6(0);
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 40);
    *(void *)(v4 + 56) = a1;
    return MEMORY[0x1F4188298](sub_1C10B6714, v8, 0);
  }
}

void sub_1C10B6714()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_puzzleTypeLeaderboards);

  sub_1BFC39268(0, &qword_1EA1999E8);
  uint64_t v3 = sub_1C151E33C();

  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    swift_bridgeObjectRelease();
LABEL_29:
    unint64_t v14 = 0;
    goto LABEL_30;
  }
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(v5, v4);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  id v8 = *(id *)(*(void *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v8, sel_leaderboards);

  sub_1BFC39268(0, (unint64_t *)&unk_1EA1AB1E0);
  unint64_t v10 = sub_1C151EBCC();

  LOBYTE(v11) = *(unsigned char *)(v0 + 64);
  if (v10 >> 62) {
    goto LABEL_18;
  }
  unint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((*(unsigned char *)(v0 + 64) & 1) == 0 && v12 > 1)
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v11 = 0;
      while (1)
      {
        id v13 = (v10 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C18C7CB0](v11, v10)
            : *(id *)(v10 + 8 * v11 + 32);
        unint64_t v14 = v13;
        uint64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          break;
        }
        id v16 = objc_msgSend(v13, sel_difficulty);
        if (v16)
        {
          uint64_t v17 = v16;
          id v18 = *(id *)(v0 + 32);
          id v19 = objc_msgSend(v16, sel_integerValue);

          if (v19 == v18)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_30;
          }
        }

        ++v11;
        if (v15 == v12) {
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C15204BC();
      unint64_t v12 = v21;
      if ((v11 & 1) != 0 || v20 <= 1) {
        break;
      }
      if (!v21)
      {
LABEL_21:
        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
  }
  if (!v12) {
    goto LABEL_28;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v22 = (id)MEMORY[0x1C18C7CB0](0, v10);
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v22 = *(id *)(v10 + 32);
  }
  unint64_t v14 = v22;
  swift_bridgeObjectRelease();
LABEL_30:
  id v23 = *(void (**)(void *))(v0 + 8);
  v23(v14);
}

uint64_t sub_1C10B6A30(uint64_t a1, double a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_1C017F734();
    uint64_t v6 = swift_allocError();
    *char v7 = a4;
    id v8 = a4;
    return MEMORY[0x1F4188208](v4, v6);
  }
  else
  {
    gotLoadHelper_x2__OBJC_CLASS___GKLeaderboard(a2);
    sub_1BFC39268(0, v9);
    **(void **)(*(void *)(v4 + 64) + 40) = sub_1C151EBCC();
    return MEMORY[0x1F4188200](v4);
  }
}

uint64_t sub_1C10B6B08(uint64_t a1, void *a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = *(void *)(a1 + 32);
  if (a6)
  {
    sub_1C017F734();
    uint64_t v8 = swift_allocError();
    *id v9 = a6;
    id v10 = a6;
    return MEMORY[0x1F4188208](v6, v8);
  }
  else
  {
    gotLoadHelper_x2__OBJC_CLASS___GKLeaderboardEntry(a3);
    sub_1BFC39268(0, v13);
    uint64_t v14 = sub_1C151EBCC();
    uint64_t v15 = *(void **)(*(void *)(v6 + 64) + 40);
    *uint64_t v15 = a2;
    v15[1] = v14;
    void v15[2] = a5;
    id v16 = a2;
    return MEMORY[0x1F4188200](v6);
  }
}

uint64_t sub_1C10B6BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  sub_1C032BC38(0);
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  sub_1C0064478(0);
  v4[15] = swift_task_alloc();
  void v4[16] = swift_task_alloc();
  sub_1C10BCE98(0, &qword_1EA1AB210, (uint64_t (*)(uint64_t))sub_1C032BC38, MEMORY[0x1E4FBB718]);
  v4[17] = swift_task_alloc();
  sub_1C10BCE98(0, &qword_1EA1AB218, (uint64_t (*)(uint64_t))sub_1C032BC38, MEMORY[0x1E4FBCF98]);
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C10B6DD8, 0, 0);
}

uint64_t sub_1C10B6DD8()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C151EE0C();
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1C10B7190;
    uint64_t v3 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    return MEMORY[0x1F4187C58](v3, v4, v5, v6);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v7 = 0;
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v27 = *(void *)(v0 + 80) + 32;
    uint64_t v29 = v2;
    while (1)
    {
      if (v28) {
        id v9 = (id)MEMORY[0x1C18C7CB0](v7, *(void *)(v0 + 80));
      }
      else {
        id v9 = *(id *)(v27 + 8 * v7);
      }
      id v10 = v9;
      uint64_t v12 = *(void *)(v0 + 120);
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v13 = sub_1C151EE9C();
      uint64_t v14 = *(void *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v13);
      uint64_t v15 = (void *)swift_allocObject();
      void v15[2] = 0;
      id v16 = v15 + 2;
      v15[3] = 0;
      v15[4] = v10;
      sub_1C10BDD04(v11, v12, (uint64_t (*)(void))sub_1C0064478);
      LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
      id v17 = v10;
      uint64_t v18 = *(void *)(v0 + 120);
      if (v11 == 1)
      {
        sub_1C007374C(*(void *)(v0 + 120), (uint64_t (*)(void))sub_1C0064478);
        if (!*v16) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_1C151EE8C();
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v13);
        if (!*v16)
        {
LABEL_13:
          uint64_t v19 = 0;
          uint64_t v21 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_1C151EDBC();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v22 = **(void **)(v0 + 72);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = &unk_1EA1AB228;
      *(void *)(v23 + 24) = v15;
      uint64_t v24 = v21 | v19;
      if (v21 | v19)
      {
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        uint64_t v24 = v0 + 16;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      ++v7;
      uint64_t v8 = *(void *)(v0 + 128);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v24;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_1C007374C(v8, (uint64_t (*)(void))sub_1C0064478);

      if (v29 == v7) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return MEMORY[0x1F4187C58](v3, v4, v5, v6);
}

uint64_t sub_1C10B7190()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B728C, 0, 0);
}

uint64_t sub_1C10B728C()
{
  uint64_t v1 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[13] + 48))(v1, 1, v0[12]) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (unint64_t *)v0[11];
    sub_1C10BD5FC(v1, v0[14], (uint64_t (*)(void))sub_1C032BC38);
    unint64_t v5 = *v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v4 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v14 = (unint64_t *)v0[11];
      unint64_t v5 = sub_1C0EE88D8(0, *(void *)(v5 + 16) + 1, 1, v5);
      *uint64_t v14 = v5;
    }
    unint64_t v8 = *(void *)(v5 + 16);
    unint64_t v7 = *(void *)(v5 + 24);
    if (v8 >= v7 >> 1)
    {
      uint64_t v15 = (unint64_t *)v0[11];
      unint64_t v5 = sub_1C0EE88D8(v7 > 1, v8 + 1, 1, v5);
      *uint64_t v15 = v5;
    }
    uint64_t v10 = v0[13];
    uint64_t v9 = v0[14];
    *(void *)(v5 + 16) = v8 + 1;
    sub_1C10BD5FC(v9, v5+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v8, (uint64_t (*)(void))sub_1C032BC38);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[21] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1C10B7190;
    uint64_t v12 = v0[17];
    uint64_t v13 = v0[18];
    return MEMORY[0x1F4187C58](v12, 0, 0, v13);
  }
}

uint64_t sub_1C10B74BC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C005E7F4;
  return sub_1C1218C54(a1);
}

uint64_t sub_1C10B7558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  sub_1C151EE6C();
  v6[11] = sub_1C151EE5C();
  uint64_t v8 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10B75F4, v8, v7);
}

id sub_1C10B75F4()
{
  uint64_t v1 = (void *)v0[8];
  swift_release();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_shared);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v7 = v0[9];
    uint64_t v6 = v0[10];
    id v8 = objc_msgSend(result, sel_window);

    objc_msgSend(v3, sel_setParentWindow_, v8);
    id v9 = objc_msgSend(v2, sel_shared);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v7;
    *(void *)(v10 + 24) = v6;
    v0[6] = sub_1C10BD704;
    v0[7] = v10;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = sub_1BFC9FC68;
    v0[5] = &block_descriptor_82;
    uint64_t v11 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_triggerAccessPointWithState_handler_, 0, v11);
    _Block_release(v11);

    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return (id)v12();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10B77C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  void v5[3] = a5;
  sub_1C151EE6C();
  void v5[4] = sub_1C151EE5C();
  uint64_t v7 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10BE390, v7, v6);
}

uint64_t sub_1C10B785C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  sub_1C151EE6C();
  v6[11] = sub_1C151EE5C();
  uint64_t v8 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10B78F8, v8, v7);
}

id sub_1C10B78F8()
{
  uint64_t v1 = (void *)v0[8];
  swift_release();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_shared);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v7 = v0[9];
    uint64_t v6 = v0[10];
    id v8 = objc_msgSend(result, sel_window);

    objc_msgSend(v3, sel_setParentWindow_, v8);
    id v9 = objc_msgSend(v2, sel_shared);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v7;
    *(void *)(v10 + 24) = v6;
    v0[6] = sub_1C10BD8FC;
    v0[7] = v10;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = sub_1BFC9FC68;
    v0[5] = &block_descriptor_102;
    uint64_t v11 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_triggerAccessPointWithState_handler_, 0, v11);
    _Block_release(v11);

    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return (id)v12();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10B7AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1C151EE6C();
  swift_retain();
  uint64_t v11 = sub_1C151EE5C();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBCFD8];
  void v12[2] = v11;
  v12[3] = v13;
  v12[4] = a1;
  v12[5] = a2;
  sub_1C0C833AC((uint64_t)v9, a4, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1C10B7BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  void v5[3] = a5;
  sub_1C151EE6C();
  void v5[4] = sub_1C151EE5C();
  uint64_t v7 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10B7C74, v7, v6);
}

uint64_t sub_1C10B7C74()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = swift_release();
  v1(v2);
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C10B7CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  sub_1C151EE6C();
  v7[12] = sub_1C151EE5C();
  uint64_t v9 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10B7D7C, v9, v8);
}

id sub_1C10B7D7C()
{
  uint64_t v1 = (void *)v0[8];
  swift_release();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_shared);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = (void *)v0[9];
    id v7 = objc_msgSend(result, sel_window);

    objc_msgSend(v3, sel_setParentWindow_, v7);
    id v8 = objc_msgSend(v2, sel_shared);
    id v9 = objc_msgSend(v6, sel_leaderboardID);
    if (!v9)
    {
      sub_1C151E62C();
      id v9 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = v0[10];
    uint64_t v10 = v0[11];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v10;
    v0[6] = sub_1C10BD800;
    v0[7] = v12;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = sub_1BFC9FC68;
    v0[5] = &block_descriptor_92;
    uint64_t v13 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_triggerAccessPointWithLeaderboardID_playerScope_timeScope_handler_, v9, 1, 2, v13);
    _Block_release(v13);

    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return (id)v14();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10B7F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  sub_1C151EE6C();
  v7[12] = sub_1C151EE5C();
  uint64_t v9 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C10B8028, v9, v8);
}

id sub_1C10B8028()
{
  uint64_t v1 = (void *)v0[8];
  swift_release();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_shared);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = (void *)v0[9];
    id v7 = objc_msgSend(result, sel_window);

    objc_msgSend(v3, sel_setParentWindow_, v7);
    id v8 = objc_msgSend(v2, sel_shared);
    id v9 = objc_msgSend(v6, sel_leaderboardID);
    if (!v9)
    {
      sub_1C151E62C();
      id v9 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = v0[10];
    uint64_t v10 = v0[11];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v10;
    v0[6] = sub_1C10BDA30;
    v0[7] = v12;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = sub_1BFC9FC68;
    v0[5] = &block_descriptor_112_0;
    uint64_t v13 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_triggerAccessPointWithLeaderboardID_playerScope_timeScope_handler_, v9, 1, 2, v13);
    _Block_release(v13);

    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return (id)v14();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10B8238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v8 + 417) = a7;
  *(void *)(v8 + 280) = a6;
  *(void *)(v8 + 288) = v7;
  *(unsigned char *)(v8 + 416) = a5;
  *(void *)(v8 + 264) = a3;
  *(void *)(v8 + 272) = a4;
  *(void *)(v8 + 248) = a1;
  *(void *)(v8 + 256) = a2;
  id v9 = (void *)swift_task_alloc();
  *(void *)(v8 + 296) = v9;
  *id v9 = v8;
  v9[1] = sub_1C10B82D8;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10B82D8(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 288);
  *(unsigned char *)(*(void *)v1 + 418) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B83F0, v2, 0);
}

uint64_t sub_1C10B83F0(double a1)
{
  if (*(unsigned char *)(v1 + 418) != 1)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C15198DC();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C7A8);
    uint64_t v21 = sub_1C15198AC();
    os_log_type_t v22 = sub_1C151F38C();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1BFC31000, v21, v22, "PuzzleGameCenterService: Game Center disabled. Skipping score submission...", v23, 2u);
      MEMORY[0x1C18C9B00](v23, -1, -1);
    }

    char v19 = 0;
    goto LABEL_18;
  }
  int v2 = *(unsigned __int8 *)(v1 + 417);
  if ((sub_1C10ACB60(a1) & 1) == 0 && !v2)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C15198DC();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB93C7A8);
    uint64_t v4 = sub_1C15198AC();
    os_log_type_t v5 = sub_1C151F38C();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1BFC31000, v4, v5, "PuzzleGameCenterService: User is not authenticated to Game Center. Storing score for later submission...", v6, 2u);
      MEMORY[0x1C18C9B00](v6, -1, -1);
    }
    uint64_t v7 = *(void *)(v1 + 288);

    uint64_t v8 = (void *)(v7 + 272);
    swift_beginAccess();
    id v9 = *(void **)(v7 + 272);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v7 + 272) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v9 = sub_1C0EE8774(0, v9[2] + 1, 1, v9);
      *uint64_t v8 = v9;
    }
    unint64_t v12 = v9[2];
    unint64_t v11 = v9[3];
    unint64_t v13 = v12 + 1;
    if (v12 >= v11 >> 1)
    {
      uint64_t v33 = sub_1C0EE8774((void *)(v11 > 1), v12 + 1, 1, v9);
      unint64_t v13 = v12 + 1;
      id v9 = v33;
      *uint64_t v8 = v33;
    }
    char v14 = *(unsigned char *)(v1 + 416);
    uint64_t v16 = *(void *)(v1 + 256);
    uint64_t v15 = *(void *)(v1 + 264);
    id v17 = (int8x16_t *)&v9[5 * v12];
    int8x16_t v18 = *(int8x16_t *)(v1 + 272);
    void v9[2] = v13;
    v17[2].i64[0] = v16;
    v17[2].i64[1] = v15;
    v17[3] = vextq_s8(v18, v18, 8uLL);
    v17[4].i8[0] = v14 & 1;
    swift_endAccess();
    char v19 = 1;
LABEL_18:
    uint64_t v24 = *(char **)(v1 + 248);
    *uint64_t v24 = v19;
    v24[1] = 1;
    uint64_t v25 = *(uint64_t (**)(void))(v1 + 8);
    return v25();
  }
  uint64_t v27 = *(void **)(v1 + 288);
  uint64_t v28 = v27[23];
  uint64_t v29 = v27[24];
  __swift_project_boxed_opaque_existential_1(v27 + 20, v28);
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 32) + **(int **)(v29 + 32));
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v1 + 304) = v30;
  *uint64_t v30 = v1;
  v30[1] = sub_1C10B87B4;
  uint64_t v32 = *(void *)(v1 + 256);
  uint64_t v31 = *(void *)(v1 + 264);
  return v34(v32, v31, v28, v29);
}

uint64_t sub_1C10B87B4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 312) = a1;
  *(void *)(v4 + 320) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 288);
  if (v1) {
    uint64_t v6 = sub_1C10B95A4;
  }
  else {
    uint64_t v6 = sub_1C10B88E8;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1C10B88E8()
{
  uint64_t v21 = v0;
  id v1 = objc_msgSend(objc_msgSend((id)swift_unknownObjectRetain(), sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v2 = sub_1C151E62C();
  uint64_t v4 = v3;

  *(void *)(v0 + 328) = v2;
  *(void *)(v0 + 336) = v4;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C15198DC();
  *(void *)(v0 + 344) = __swift_project_value_buffer(v5, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1C15198AC();
  os_log_type_t v7 = sub_1C151F38C();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v19 = v2;
    uint64_t v8 = v4;
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 256);
    unint64_t v11 = *(void *)(v0 + 264);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = v13;
    *(_DWORD *)uint64_t v12 = 134218242;
    *(void *)(v0 + 232) = v9;
    uint64_t v4 = v8;
    sub_1C151FE1C();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v14 = v10;
    uint64_t v2 = v19;
    *(void *)(v0 + 240) = sub_1BFDA76EC(v14, v11, &v20);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v6, v7, "PuzzleGameCenterService: submitting score %ld for %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v13, -1, -1);
    MEMORY[0x1C18C9B00](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v15 = *(unsigned char *)(v0 + 416);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1C10B8BA4;
  uint64_t v17 = *(void *)(v0 + 272);
  return sub_1C10B6524(v2, v4, v17, v15 & 1);
}

uint64_t sub_1C10B8BA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 288);
  *(void *)(*(void *)v1 + 360) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C10B8CBC, v2, 0);
}

uint64_t sub_1C10B8CBC()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void **)(v0 + 360);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_leaderboardID);
    uint64_t v3 = sub_1C151E62C();
    uint64_t v5 = v4;

    *(void *)(v0 + 368) = v3;
    *(void *)(v0 + 376) = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C10B8F3C;
    uint64_t v7 = *(void *)(v0 + 312);
    uint64_t v8 = *(void *)(v0 + 280);
    return sub_1C10B9A5C(v8, v7, v3, v5);
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15198AC();
    os_log_type_t v11 = sub_1C151F36C();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = *(void *)(v0 + 336);
    if (v12)
    {
      uint64_t v14 = *(void *)(v0 + 328);
      char v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v18 = v16;
      *(_DWORD *)char v15 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 184) = sub_1BFDA76EC(v14, v13, &v18);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v10, v11, "PuzzleGameCenterService: no leaderboard configured for %s. Skipping...", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v16, -1, -1);
      MEMORY[0x1C18C9B00](v15, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }

    **(_WORD **)(v0 + 248) = 259;
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_1C10B8F3C(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 288);
  *(unsigned char *)(*(void *)v1 + 419) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4188298](sub_1C10B9070, v2, 0);
}

uint64_t sub_1C10B9070(double a1)
{
  uint64_t v23 = v1;
  if (*(unsigned char *)(v1 + 419) == 1)
  {
    uint64_t v3 = *(void *)(v1 + 368);
    uint64_t v2 = *(void *)(v1 + 376);
    uint64_t v4 = *(void *)(v1 + 280);
    gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(a1);
    uint64_t v5 = self;
    gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v6);
    id v7 = objc_msgSend(self, sel_localPlayer);
    *(void *)(v1 + 392) = v7;
    sub_1BFEFDE8C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v2;
    uint64_t v9 = sub_1C151EBAC();
    *(void *)(v1 + 400) = v9;
    swift_bridgeObjectRelease();
    *(void *)(v1 + 16) = v1;
    *(void *)(v1 + 24) = sub_1C10B93F8;
    uint64_t v10 = swift_continuation_init();
    *(void *)(v1 + 80) = MEMORY[0x1E4F143A8];
    *(void *)(v1 + 88) = 0x40000000;
    *(void *)(v1 + 96) = sub_1C10BBAE4;
    *(void *)(v1 + 104) = &block_descriptor_54;
    *(void *)(v1 + 112) = v10;
    objc_msgSend(v5, sel_submitScore_context_player_leaderboardIDs_completionHandler_, v4, 0, v7, v9, v1 + 80);
    return MEMORY[0x1F41881E8](v1 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    os_log_type_t v11 = sub_1C15198AC();
    os_log_type_t v12 = sub_1C151F38C();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = *(void **)(v1 + 360);
    unint64_t v15 = *(void *)(v1 + 336);
    if (v13)
    {
      uint64_t v16 = *(void *)(v1 + 328);
      uint64_t v17 = *(void *)(v1 + 280);
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v18 = 134218242;
      *(void *)(v1 + 176) = v17;
      sub_1C151FE1C();
      *(_WORD *)(v18 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 168) = sub_1BFDA76EC(v16, v15, &v22);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v11, v12, "PuzzleGameCenterService: score %ld for %s is not valid. Skipping submission...", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v19, -1, -1);
      MEMORY[0x1C18C9B00](v18, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    **(_WORD **)(v1 + 248) = 260;
    uint64_t v20 = *(uint64_t (**)(void))(v1 + 8);
    return v20();
  }
}

uint64_t sub_1C10B93F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 408) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 288);
    uint64_t v4 = sub_1C10B97A8;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 288);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C10B9520;
    uint64_t v3 = v5;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C10B9520()
{
  uint64_t v1 = *(void **)(v0 + 392);
  uint64_t v2 = *(void **)(v0 + 400);
  uint64_t v3 = *(void **)(v0 + 360);
  swift_unknownObjectRelease();

  **(_WORD **)(v0 + 248) = 0;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C10B95A4()
{
  uint64_t v13 = v0;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C15198DC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F36C();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void **)(v0 + 320);
  unint64_t v6 = *(void *)(v0 + 264);
  if (v4)
  {
    uint64_t v7 = *(void *)(v0 + 256);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 216) = sub_1BFDA76EC(v7, v6, &v12);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleGameCenterService: failed fetching puzzle details for %s. Skipping score submission...", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v9, -1, -1);
    MEMORY[0x1C18C9B00](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(_WORD **)(v0 + 248) = 258;
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1C10B97A8()
{
  uint64_t v22 = v0;
  uint64_t v2 = *(void **)(v0 + 400);
  uint64_t v1 = *(void **)(v0 + 408);
  os_log_type_t v3 = *(void **)(v0 + 392);
  swift_willThrow();

  id v4 = v1;
  swift_bridgeObjectRetain();
  id v5 = v1;
  unint64_t v6 = sub_1C15198AC();
  os_log_type_t v7 = sub_1C151F36C();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v19 = *(void **)(v0 + 408);
    uint64_t v8 = *(void *)(v0 + 328);
    unint64_t v9 = *(void *)(v0 + 336);
    uint64_t v20 = *(void **)(v0 + 360);
    uint64_t v10 = *(void *)(v0 + 280);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v21[0] = v12;
    *(_DWORD *)uint64_t v11 = 134218498;
    *(void *)(v0 + 192) = v10;
    sub_1C151FE1C();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 200) = sub_1BFDA76EC(v8, v9, v21);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_1C1520D3C();
    *(void *)(v0 + 224) = sub_1BFDA76EC(v13, v14, v21);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v6, v7, "PuzzleGameCenterService: error submitting score %ld for %s: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v12, -1, -1);
    MEMORY[0x1C18C9B00](v11, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {
    unint64_t v15 = *(void **)(v0 + 408);
    uint64_t v16 = *(void **)(v0 + 360);
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease_n();
  }
  **(_WORD **)(v0 + 248) = 261;
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1C10B9A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[36] = a4;
  v5[37] = v4;
  v5[34] = a2;
  v5[35] = a3;
  v5[33] = a1;
  uint64_t v6 = sub_1C151616C();
  v5[38] = v6;
  v5[39] = *(void *)(v6 - 8);
  v5[40] = swift_task_alloc();
  uint64_t v7 = sub_1C151618C();
  v5[41] = v7;
  v5[42] = *(void *)(v7 - 8);
  v5[43] = swift_task_alloc();
  uint64_t v8 = sub_1C151661C();
  v5[44] = v8;
  v5[45] = *(void *)(v8 - 8);
  v5[46] = swift_task_alloc();
  uint64_t v9 = sub_1C151555C();
  v5[47] = v9;
  v5[48] = *(void *)(v9 - 8);
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  sub_1BFF97C40();
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  uint64_t v10 = sub_1C151631C();
  v5[53] = v10;
  v5[54] = *(void *)(v10 - 8);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C10B9D14, v4, 0);
}

uint64_t sub_1C10B9D14(double a1)
{
  uint64_t v3 = v1[35];
  uint64_t v2 = v1[36];
  gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(a1);
  uint64_t v4 = self;
  sub_1BFEFDE8C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C151EBAC();
  v1[60] = v6;
  swift_bridgeObjectRelease();
  v1[2] = v1;
  v1[7] = v1 + 15;
  v1[3] = sub_1C10B9EAC;
  uint64_t v7 = swift_continuation_init();
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 0x40000000;
  v1[12] = sub_1C10B6A30;
  v1[13] = &block_descriptor_55;
  v1[14] = v7;
  objc_msgSend(v4, sel_loadLeaderboardsWithIDs_completionHandler_, v6, v1 + 10);
  return MEMORY[0x1F41881E8](v1 + 2);
}

uint64_t sub_1C10B9EAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 488) = v2;
  uint64_t v3 = *(void *)(v1 + 296);
  if (v2) {
    uint64_t v4 = sub_1C10BB860;
  }
  else {
    uint64_t v4 = sub_1C10B9FCC;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C10B9FCC()
{
  uint64_t v195 = v0;
  uint64_t v1 = v0;
  unint64_t v4 = v0[15];
  uint64_t v3 = v0 + 15;
  unint64_t v2 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v5 = v3 + 2;
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_82:
    uint64_t v152 = (void *)v1[60];
    swift_bridgeObjectRelease();

    if (qword_1EB8814A0 == -1) {
      goto LABEL_83;
    }
    goto LABEL_93;
  }
  swift_bridgeObjectRetain();
  uint64_t v151 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + 2;
  if (!v151) {
    goto LABEL_82;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v6 = *(id *)(v2 + 32);
      goto LABEL_6;
    }
    __break(1u);
LABEL_93:
    swift_once();
LABEL_83:
    uint64_t v153 = sub_1C15198DC();
    __swift_project_value_buffer(v153, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain_n();
    uint64_t v56 = sub_1C15198AC();
    os_log_type_t v154 = sub_1C151F38C();
    BOOL v155 = os_log_type_enabled(v56, v154);
    unint64_t v156 = v1[36];
    if (v155)
    {
      uint64_t v157 = v1[35];
      uint64_t v158 = (uint8_t *)swift_slowAlloc();
      uint64_t v159 = swift_slowAlloc();
      uint64_t v194 = v159;
      *(_DWORD *)uint64_t v158 = 136315138;
      swift_bridgeObjectRetain();
      v1[16] = sub_1BFDA76EC(v157, v156, &v194);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v56, v154, "PuzzleGameCenterService: Failed to load leaderboard %s", v158, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v159, -1, -1);
      MEMORY[0x1C18C9B00](v158, -1, -1);
      goto LABEL_86;
    }
LABEL_85:
    swift_bridgeObjectRelease_n();
    goto LABEL_86;
  }
  id v6 = (id)MEMORY[0x1C18C7CB0](0, v2);
LABEL_6:
  uint64_t v7 = v6;
  uint64_t v8 = (void *)v1[34];

  swift_bridgeObjectRelease();
  swift_getObjectType();
  id v9 = objc_msgSend(v8, sel_identifier);
  uint64_t v10 = sub_1C151E62C();
  unint64_t v12 = v11;

  if (objc_msgSend(v7, sel_type) == (id)1)
  {
    uint64_t v176 = v10;
    unsigned int v192 = v7;
    id v13 = objc_msgSend((id)v1[34], sel_publishDate);
    if (v13)
    {
      unint64_t v14 = v13;
      uint64_t v183 = v5;
      uint64_t v15 = v1[58];
      uint64_t v16 = v1[53];
      uint64_t v17 = (void *)v1[54];
      unint64_t v174 = v12;
      uint64_t v18 = v1[52];
      sub_1C15162BC();

      uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t))v17[4];
      v19(v18, v15, v16);
      uint64_t v20 = (void (*)(uint64_t, void, uint64_t, uint64_t))v17[7];
      v20(v18, 0, 1, v16);
      uint64_t v21 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v17[6];
      uint64_t v22 = v18;
      unint64_t v23 = v12;
      if (v21(v22, 1, v16) != 1)
      {
        unint64_t v170 = v19;
        v19(v1[59], v1[52], v1[53]);
        id v24 = objc_msgSend(v192, sel_startDate);
        if (v24)
        {
          uint64_t v25 = v24;
          uint64_t v26 = v1[58];
          uint64_t v27 = v1[53];
          uint64_t v167 = v20;
          uint64_t v28 = v1[51];
          sub_1C15162BC();

          v170(v28, v26, v27);
          v167(v28, 0, 1, v27);
          if (v21(v28, 1, v27) != 1)
          {
            uint64_t v29 = v1[58];
            uint64_t v30 = v1[57];
            uint64_t v32 = v1[53];
            uint64_t v31 = v1[54];
            uint64_t v34 = v1[45];
            uint64_t v33 = v1[46];
            uint64_t v168 = v1[44];
            v170(v30, v1[51], v32);
            uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
            v35(v29, v30, v32);
            objc_msgSend(v192, sel_duration);
            sub_1C151551C();
            sub_1C15165BC();
            sub_1C151613C();
            (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v168);
            if ((sub_1C151553C() & 1) == 0)
            {
              uint64_t v187 = v35;
              id v191 = v1;
              swift_bridgeObjectRelease();
              if (qword_1EB8814A0 != -1) {
                swift_once();
              }
              uint64_t v117 = v1[59];
              uint64_t v118 = v1[55];
              uint64_t v119 = v1[53];
              uint64_t v120 = v1[49];
              uint64_t v180 = v1[50];
              uint64_t v122 = v1[47];
              uint64_t v121 = v1[48];
              uint64_t v123 = sub_1C15198DC();
              __swift_project_value_buffer(v123, (uint64_t)qword_1EB93C7A8);
              v187(v118, v117, v119);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v120, v180, v122);
              uint64_t v124 = sub_1C15198AC();
              os_log_type_t type = sub_1C151F38C();
              BOOL v125 = os_log_type_enabled(v124, type);
              uint64_t v181 = v1[59];
              uint64_t v126 = v1[57];
              uint64_t v188 = v1[56];
              uint64_t v128 = v1[54];
              uint64_t v127 = v1[55];
              uint64_t v129 = v1[53];
              uint64_t v130 = v1[50];
              uint64_t v175 = v1[49];
              uint64_t v131 = v1[47];
              uint64_t v132 = v1[48];
              if (v125)
              {
                uint64_t v165 = v1[47];
                uint64_t v134 = v1[42];
                uint64_t v133 = v1[43];
                uint64_t v163 = v1[41];
                uint64_t v135 = v1[40];
                uint64_t v172 = v129;
                uint64_t v136 = v191[39];
                uint64_t v162 = v191[38];
                uint64_t v171 = v126;
                uint64_t v137 = swift_slowAlloc();
                uint64_t v166 = swift_slowAlloc();
                uint64_t v194 = v166;
                *(_DWORD *)uint64_t v137 = 136315394;
                sub_1C151617C();
                sub_1C151615C();
                uint64_t v169 = v130;
                uint64_t v138 = sub_1C15162FC();
                log = v124;
                unint64_t v140 = v139;
                uint64_t v141 = v135;
                uint64_t v1 = v191;
                (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v141, v162);
                (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v163);
                v191[31] = sub_1BFDA76EC(v138, v140, &v194);
                sub_1C151FE1C();
                swift_bridgeObjectRelease();
                long long v142 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
                v142(v127, v172);
                *(_WORD *)(v137 + 12) = 2080;
                sub_1C0071EE4(&qword_1EA1AB130, 255, MEMORY[0x1E4F26E60]);
                uint64_t v143 = sub_1C152088C();
                v191[32] = sub_1BFDA76EC(v143, v144, &v194);
                sub_1C151FE1C();
                swift_bridgeObjectRelease();
                uint64_t v145 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
                v145(v175, v165);
                _os_log_impl(&dword_1BFC31000, log, type, "PuzzleGameCenterService: Trying to send score for puzzle published %s, outside active leaderboard interval [%s]", (uint8_t *)v137, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1C18C9B00](v166, -1, -1);
                MEMORY[0x1C18C9B00](v137, -1, -1);

                v142(v188, v172);
                v145(v169, v165);
                v142(v171, v172);
                v142(v181, v172);
              }
              else
              {

                double v146 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
                v146(v175, v131);
                uint64_t v147 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
                v147(v127, v129);
                v147(v188, v129);
                v146(v130, v131);
                v147(v126, v129);
                v147(v181, v129);
              }
              goto LABEL_87;
            }
            uint64_t v36 = v1[59];
            uint64_t v37 = v1[57];
            uint64_t v38 = v1[53];
            uint64_t v39 = v1[50];
            uint64_t v40 = v1[47];
            uint64_t v41 = v1[48];
            uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v1[54] + 8);
            v42(v1[56], v38);
            (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
            v42(v37, v38);
            v42(v36, v38);
            uint64_t v7 = v192;
            unint64_t v12 = v174;
            uint64_t v10 = v176;
            uint64_t v5 = v183;
            goto LABEL_13;
          }
        }
        else
        {
          v20(v1[51], 1, 1, v1[53]);
        }
        uint64_t v80 = v1[51];
        swift_bridgeObjectRelease();
        sub_1C007374C(v80, (uint64_t (*)(void))sub_1BFF97C40);
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v81 = sub_1C15198DC();
        __swift_project_value_buffer(v81, (uint64_t)qword_1EB93C7A8);
        swift_bridgeObjectRetain_n();
        uint64_t v82 = sub_1C15198AC();
        uint64_t v83 = v1;
        os_log_type_t v84 = sub_1C151F38C();
        BOOL v85 = os_log_type_enabled(v82, v84);
        uint64_t v86 = v83[59];
        uint64_t v87 = v83[53];
        uint64_t v88 = v83[54];
        unint64_t v89 = v83[36];
        if (v85)
        {
          uint64_t v190 = v83[53];
          uint64_t v90 = v83[35];
          uint64_t v186 = v83[59];
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          uint64_t v194 = v92;
          *(_DWORD *)uint64_t v91 = 136315138;
          swift_bridgeObjectRetain();
          v83[30] = sub_1BFDA76EC(v90, v89, &v194);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BFC31000, v82, v84, "PuzzleGameCenterService: Failed to load the start date for recurring leaderboard %s", v91, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v92, -1, -1);
          MEMORY[0x1C18C9B00](v91, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v186, v190);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v87);
        }
        unsigned int v185 = 0;
        uint64_t v1 = v83;
        goto LABEL_88;
      }
    }
    else
    {
      unint64_t v23 = v12;
      (*(void (**)(void, uint64_t, uint64_t, void))(v1[54] + 56))(v1[52], 1, 1, v1[53]);
    }
    sub_1C007374C(v1[52], (uint64_t (*)(void))sub_1BFF97C40);
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_1C15198DC();
    __swift_project_value_buffer(v75, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1C15198AC();
    os_log_type_t v76 = sub_1C151F38C();
    if (os_log_type_enabled(v56, v76))
    {
      id v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t v194 = v78;
      *(_DWORD *)id v77 = 136315138;
      swift_bridgeObjectRetain();
      v3[14] = sub_1BFDA76EC(v176, v23, &v194);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v56, v76, "PuzzleGameCenterService: Failed to load the publish date for %s", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v78, -1, -1);
      MEMORY[0x1C18C9B00](v77, -1, -1);

LABEL_86:
      goto LABEL_87;
    }
    uint64_t v79 = v192;
    goto LABEL_73;
  }
LABEL_13:
  uint64_t v43 = (void *)v1[37];
  unint64_t v44 = v12;
  uint64_t v45 = v43[28];
  uint64_t v46 = v43[29];
  __swift_project_boxed_opaque_existential_1(v43 + 25, v45);
  uint64_t v47 = *(void *)(v46 + 8);
  unint64_t v48 = v44;
  uint64_t v49 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v47 + 48))(v10, v44, v45);
  if (v49)
  {
    uint64_t v50 = v3 + 13;
    uint64_t v184 = v49;
    id v51 = objc_msgSend(v49, sel_usedReveal);
    if (v51)
    {
      uint64_t v52 = v51;
      unsigned __int8 v53 = objc_msgSend(v51, sel_BOOLValue);

      if (v53)
      {
        uint64_t v54 = v10;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v55 = sub_1C15198DC();
        __swift_project_value_buffer(v55, (uint64_t)qword_1EB93C7A8);
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_1C15198AC();
        os_log_type_t v57 = sub_1C151F38C();
        if (os_log_type_enabled(v56, v57))
        {
          __n128 v58 = v50;
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          *(_DWORD *)uint64_t v59 = 136315138;
          uint64_t v193 = v7;
          uint64_t v194 = v60;
          swift_bridgeObjectRetain();
          *__n128 v58 = sub_1BFDA76EC(v54, v48, &v194);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BFC31000, v56, v57, "PuzzleGameCenterService: Skipped sending score for puzzle %s where reveal was used", v59, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v60, -1, -1);
          uint64_t v61 = (uint64_t)v59;
LABEL_27:
          MEMORY[0x1C18C9B00](v61, -1, -1);

LABEL_71:
          goto LABEL_86;
        }
LABEL_72:

        uint64_t v79 = v184;
LABEL_73:

        goto LABEL_85;
      }
    }
    char v62 = FCPuzzleProviding.puzzleTypeTraits.getter();
    if ((v62 & 0x40) != 0)
    {
      if ((v1[33] & 0x8000000000000000) != 0)
      {
        uint64_t v179 = v10;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v106 = sub_1C15198DC();
        __swift_project_value_buffer(v106, (uint64_t)qword_1EB93C7A8);
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_1C15198AC();
        os_log_type_t v107 = sub_1C151F38C();
        if (os_log_type_enabled(v56, v107))
        {
          uint64_t v108 = v1[33];
          uint64_t v109 = swift_slowAlloc();
          uint64_t v110 = v1;
          uint64_t v111 = swift_slowAlloc();
          uint64_t v194 = v111;
          *(_DWORD *)uint64_t v109 = 134218242;
          v110[26] = v108;
          sub_1C151FE1C();
          *(_WORD *)(v109 + 12) = 2080;
          swift_bridgeObjectRetain();
          v110[27] = sub_1BFDA76EC(v179, v44, &v194);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BFC31000, v56, v107, "PuzzleGameCenterService: Trying to send invalid score [%ld] for puzzle %s", (uint8_t *)v109, 0x16u);
          swift_arrayDestroy();
          uint64_t v112 = v111;
          uint64_t v1 = v110;
          MEMORY[0x1C18C9B00](v112, -1, -1);
          MEMORY[0x1C18C9B00](v109, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_71;
      }

      swift_bridgeObjectRelease();
LABEL_65:
      unsigned int v185 = 1;
      goto LABEL_88;
    }
    uint64_t v193 = v7;
    if ((v62 & 0x10) != 0)
    {
      uint64_t v93 = v184;
      id v94 = objc_msgSend(v184, sel_firstPlayDuration);
      if (v94)
      {
        uint64_t v95 = v94;
        id v96 = (id)v1[33];
        id v97 = objc_msgSend(v94, sel_integerValue);

        if (v97 == v96)
        {
LABEL_62:

LABEL_64:
          swift_bridgeObjectRelease();

          goto LABEL_65;
        }
        uint64_t v178 = v10;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v98 = sub_1C15198DC();
        __swift_project_value_buffer(v98, (uint64_t)qword_1EB93C7A8);
        unint64_t v99 = v44;
        swift_bridgeObjectRetain();
        uint64_t v100 = sub_1C15198AC();
        os_log_type_t v101 = sub_1C151F38C();
        if (os_log_type_enabled(v100, v101))
        {
          uint64_t v102 = v1[33];
          uint64_t v103 = swift_slowAlloc();
          uint64_t v104 = swift_slowAlloc();
          uint64_t v194 = v104;
          *(_DWORD *)uint64_t v103 = 134218498;
          v1[23] = v102;
          sub_1C151FE1C();
          *(_WORD *)(v103 + 12) = 2080;
          swift_bridgeObjectRetain();
          v1[24] = sub_1BFDA76EC(v178, v99, &v194);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v103 + 22) = 2048;
          v1[25] = v97;
          sub_1C151FE1C();
          uint64_t v105 = "PuzzleGameCenterService: Trying to send score [%ld] for puzzle %s that is not the first playDuration [%ld]";
LABEL_79:
          _os_log_impl(&dword_1BFC31000, v100, v101, v105, (uint8_t *)v103, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v104, -1, -1);
          MEMORY[0x1C18C9B00](v103, -1, -1);

LABEL_87:
          unsigned int v185 = 0;
          goto LABEL_88;
        }
LABEL_80:

        swift_bridgeObjectRelease_n();
        goto LABEL_87;
      }
    }
    else
    {
      if ((v62 & 0x20) == 0)
      {
        uint64_t v177 = v10;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v63 = sub_1C15198DC();
        __swift_project_value_buffer(v63, (uint64_t)qword_1EB93C7A8);
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_1C15198AC();
        os_log_type_t v64 = sub_1C151F38C();
        if (os_log_type_enabled(v56, v64))
        {
          uint64_t v65 = v1[33];
          uint64_t v66 = swift_slowAlloc();
          uint64_t v67 = v1;
          uint64_t v68 = swift_slowAlloc();
          uint64_t v194 = v68;
          *(_DWORD *)uint64_t v66 = 134218242;
          v67[18] = v65;
          sub_1C151FE1C();
          *(_WORD *)(v66 + 12) = 2080;
          swift_bridgeObjectRetain();
          v67[19] = sub_1BFDA76EC(v177, v44, &v194);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BFC31000, v56, v64, "PuzzleGameCenterService: Trying to send score [%ld] for puzzle %s with missing 'leaderboardSubmitBased' traits", (uint8_t *)v66, 0x16u);
          swift_arrayDestroy();
          uint64_t v69 = v68;
          uint64_t v1 = v67;
          MEMORY[0x1C18C9B00](v69, -1, -1);
          uint64_t v61 = v66;
          goto LABEL_27;
        }
        goto LABEL_72;
      }
      uint64_t v93 = v184;
      id v113 = objc_msgSend(v184, sel_bestScore);
      if (v113)
      {
        uint64_t v114 = v113;
        id v115 = (id)v1[33];
        id v116 = objc_msgSend(v113, sel_integerValue);

        if (v116 == v115) {
          goto LABEL_62;
        }
        uint64_t v182 = v10;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v148 = sub_1C15198DC();
        __swift_project_value_buffer(v148, (uint64_t)qword_1EB93C7A8);
        unint64_t v149 = v44;
        swift_bridgeObjectRetain();
        uint64_t v100 = sub_1C15198AC();
        os_log_type_t v101 = sub_1C151F38C();
        if (os_log_type_enabled(v100, v101))
        {
          uint64_t v150 = v1[33];
          uint64_t v103 = swift_slowAlloc();
          uint64_t v104 = swift_slowAlloc();
          uint64_t v194 = v104;
          *(_DWORD *)uint64_t v103 = 134218498;
          v1[20] = v150;
          sub_1C151FE1C();
          *(_WORD *)(v103 + 12) = 2080;
          swift_bridgeObjectRetain();
          v1[21] = sub_1BFDA76EC(v182, v149, &v194);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v103 + 22) = 2048;
          v1[22] = v116;
          sub_1C151FE1C();
          uint64_t v105 = "PuzzleGameCenterService: Trying to send score [%ld] for puzzle %s that is not the best score [%ld] ";
          goto LABEL_79;
        }
        goto LABEL_80;
      }
    }

    goto LABEL_64;
  }
  uint64_t v189 = v1;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v70 = sub_1C15198DC();
  __swift_project_value_buffer(v70, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_1C15198AC();
  os_log_type_t v72 = sub_1C151F38C();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v194 = v74;
    *(_DWORD *)uint64_t v73 = 136315138;
    swift_bridgeObjectRetain();
    *uint64_t v5 = sub_1BFDA76EC(v10, v48, &v194);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v71, v72, "PuzzleGameCenterService: Failed to load history item for %s", v73, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v74, -1, -1);
    MEMORY[0x1C18C9B00](v73, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  unsigned int v185 = 0;
  uint64_t v1 = v189;
LABEL_88:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v160 = (uint64_t (*)(void))v1[1];
  return v160(v185);
}

uint64_t sub_1C10BB860()
{
  unint64_t v14 = v0;
  uint64_t v1 = (void *)v0[60];
  unint64_t v2 = (void *)v0[61];
  swift_willThrow();

  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C15198DC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  unint64_t v4 = sub_1C15198AC();
  os_log_type_t v5 = sub_1C151F38C();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = v0[36];
  if (v6)
  {
    uint64_t v8 = v0[35];
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = v10;
    *(_DWORD *)id v9 = 136315138;
    swift_bridgeObjectRetain();
    v0[16] = sub_1BFDA76EC(v8, v7, &v13);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v4, v5, "PuzzleGameCenterService: Failed to load leaderboard %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11(0);
}

uint64_t sub_1C10BBAE4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_1C017F734();
    uint64_t v4 = swift_allocError();
    *os_log_type_t v5 = a2;
    id v6 = a2;
    return MEMORY[0x1F4188208](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x1F4188200](v7);
  }
}

uint64_t sub_1C10BBB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *os_log_type_t v5 = v4;
  v5[1] = sub_1C10BBC0C;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10BBC0C(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return MEMORY[0x1F4188298](sub_1C10BBD40, v5, 0);
  }
  else
  {
    id v6 = *(uint64_t (**)(void))(v4 + 8);
    return v6();
  }
}

uint64_t sub_1C10BBD40()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 16) + 240);
  return MEMORY[0x1F4188298](sub_1C10BBD68, 0, 0);
}

uint64_t sub_1C10BBD68()
{
  objc_msgSend(*(id *)(v0 + 32), sel_addObserver_, *(void *)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_1C10BBE0C;
  return sub_1C10B1264();
}

uint64_t sub_1C10BBE0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v3;
  void *v3 = v2;
  v3[1] = sub_1C0E1696C;
  uint64_t v4 = *(void *)(v1 + 16);
  v3[10] = v4;
  return MEMORY[0x1F4188298](sub_1C10AFC84, v4, 0);
}

uint64_t sub_1C10BBF64()
{
  uint64_t v1 = v0;
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151EE9C();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1C007374C((uint64_t)v4, (uint64_t (*)(void))sub_1C0064478);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1C151EDBC();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA1AB268;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C10BC1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C10BC244;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10BC244(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return MEMORY[0x1F4188298](sub_1C10BC378, v5, 0);
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
    return v6();
  }
}

uint64_t sub_1C10BC378()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 16) + 240);
  return MEMORY[0x1F4188298](sub_1C10BC3A0, 0, 0);
}

uint64_t sub_1C10BC3A0()
{
  objc_msgSend(*(id *)(v0 + 32), sel_removeObserver_, *(void *)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_1C10BE394;
  return sub_1C10AF2B0();
}

uint64_t sub_1C10BC448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C10BC4DC;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10BC4DC(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 32) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_1C10BC640;
    return sub_1C10B1264();
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7();
  }
}

uint64_t sub_1C10BC640()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 40) = v3;
  void *v3 = v2;
  v3[1] = sub_1C0E1677C;
  uint64_t v4 = *(void *)(v1 + 16);
  v3[10] = v4;
  return MEMORY[0x1F4188298](sub_1C10AFC84, v4, 0);
}

uint64_t initializeWithCopy for PuzzleGameCenterPendingScoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleGameCenterPendingScoreEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for PuzzleGameCenterPendingScoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleGameCenterPendingScoreEntry()
{
  return &type metadata for PuzzleGameCenterPendingScoreEntry;
}

uint64_t initializeWithCopy for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t storeEnumTagSinglePayload for PuzzleGameCenterListenerType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleGameCenterListenerType()
{
  return &type metadata for PuzzleGameCenterListenerType;
}

uint64_t sub_1C10BCADC(uint64_t a1, uint64_t a2)
{
  return sub_1C0071EE4(&qword_1EB86CB38, a2, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
}

id sub_1C10BCB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_defaultActor_initialize();
  *(void *)(v6 + 248) = 0;
  uint64_t v13 = MEMORY[0x1E4FBC868];
  *(unsigned char *)(v6 + 256) = 1;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 264) = v13;
  *(void *)(v6 + 272) = v14;
  sub_1BFC66384(a1, v6 + 120);
  *(void *)(v6 + 112) = a2;
  sub_1BFC66384(a3, v6 + 160);
  sub_1BFC66384(a4, v6 + 200);
  *(void *)(v6 + 240) = a5;
  v17.receiver = (id)v6;
  v17.super_class = ObjectType;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v15 = objc_msgSendSuper2(&v17, sel_init);
  objc_msgSend(a5, sel_addObserver_, v15, v17.receiver, v17.super_class);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v15;
}

uint64_t sub_1C10BCC38(uint64_t a1)
{
  sub_1BFEFDE8C(0, &qword_1EB863050, (uint64_t)&type metadata for PuzzleGameCenterListenerType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1C10BCCB8()
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1515F7C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return (id)sub_1C007374C((uint64_t)v2, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = (void *)sub_1C1515E9C();
    objc_msgSend(v8, sel_openSensitiveURL_withOptions_, v9, 0);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C10BCE98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C10BCF00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1C005E7F4;
  return sub_1C10B7F8C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1C10BCFD8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C005E7F4;
  return sub_1C10B785C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1C10BD0A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1C005E7F4;
  return sub_1C10B7CE0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t objectdestroy_33Tm_0()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C10BD1C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C005E7F4;
  return sub_1C10B7558(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1C10BD290(void *a1, void *a2)
{
  return sub_1C10AF65C(a1, a2, *(void *)(v2 + 16), v2 + 24);
}

uint64_t sub_1C10BD2A0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C005E7F4;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1C10B0BA0, 0, 0);
}

uint64_t sub_1C10BD350()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C005E7F4;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1C10B0980, v2, 0);
}

uint64_t sub_1C10BD3FC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C10BD444()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1C10B06C8, 0, 0);
}

uint64_t sub_1C10BD4F0()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_1C10BD538(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C10B0458(a1, v4, v5, v6, v7);
}

uint64_t sub_1C10BD5FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C10BD664(uint64_t a1)
{
}

void sub_1C10BD698()
{
  if (!qword_1EB86DD80)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86DD80);
    }
  }
}

uint64_t sub_1C10BD704()
{
  return sub_1C10B7AC8(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1F1C129D0, (uint64_t)&unk_1EA1AB1A0);
}

uint64_t sub_1C10BD740(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C10B77C4(a1, v4, v5, v7, v6);
}

uint64_t sub_1C10BD800()
{
  return sub_1C10B7AC8(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1F1C12A48, (uint64_t)&unk_1EA1AB1B0);
}

uint64_t sub_1C10BD83C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C10B77C4(a1, v4, v5, v7, v6);
}

uint64_t sub_1C10BD8FC()
{
  return sub_1C10B7AC8(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1F1C12AC0, (uint64_t)&unk_1EA1AB1C0);
}

uint64_t sub_1C10BD938(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C10B7BDC(a1, v4, v5, v7, v6);
}

uint64_t sub_1C10BD9F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C10BDA30()
{
  return sub_1C10B7AC8(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1F1C12B38, (uint64_t)&unk_1EA1AB1D0);
}

uint64_t sub_1C10BDA6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C10B77C4(a1, v4, v5, v7, v6);
}

uint64_t sub_1C10BDB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1BFC542F4;
  return sub_1C10B6BFC(a1, a2, v7, v6);
}

uint64_t sub_1C10BDBE0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C10BDC20(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C005E7F4;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  void *v4 = v3;
  v4[1] = sub_1C005E7F4;
  return sub_1C1218C54(a1);
}

uint64_t sub_1C10BDD04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C10BDD6C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C005E7F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA1AA038 + dword_1EA1AA038);
  return v6(a1, v4);
}

unint64_t sub_1C10BDE24()
{
  unint64_t result = qword_1EA1AB248;
  if (!qword_1EA1AB248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1AB248);
  }
  return result;
}

uint64_t sub_1C10BDE80()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C005E7F4;
  v3[2] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[3] = v4;
  void *v4 = v3;
  v4[1] = sub_1C10BC244;
  return sub_1C10AC3BC();
}

uint64_t sub_1C10BDF54()
{
  uint64_t v1 = v0;
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151EE9C();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1C007374C((uint64_t)v4, (uint64_t (*)(void))sub_1C0064478);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1C151EDBC();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA1AB280;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C10BE1A4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C005E7F4;
  v3[2] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[3] = v4;
  void *v4 = v3;
  v4[1] = sub_1C10BBC0C;
  return sub_1C10AC3BC();
}

uint64_t objectdestroy_57Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C10BE2BC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C005E7F4;
  v3[2] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[3] = v4;
  void *v4 = v3;
  v4[1] = sub_1C10BC4DC;
  return sub_1C10AC3BC();
}

uint64_t FCSportsType.description.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1C10BE55C()
{
  return FCSportsType.description.getter();
}

uint64_t dispatch thunk of FeedTopicClusteringJournalStorageServiceType.store(clusteringJournal:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1C10BE620(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v6 - 8);
  int v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v15 - 8);
  objc_super v17 = &v50[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C022425C(v2, (uint64_t)v83);
  switch(v86 >> 4)
  {
    case 1:
      v86 &= 0xFu;
      char v20 = v83[0];
      sub_1BFFDAD48(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v72);
      if (!v3)
      {
        long long v21 = v72[0];
        LOBYTE(v72[0]) = v20;
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = sub_1C10C0AFC;
        *(void *)(v22 + 24) = a1;
        uint64_t ObjectType = swift_getObjectType();
        swift_retain_n();
        a1 = sub_1BFFDCA34((id)v21, (void (*)(uint64_t))sub_1C10C0BAC, v22, v72, ObjectType);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
      break;
    case 2:
      v86 &= 0xFu;
      char v24 = v83[0];
      sub_1C098D32C(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v72);
      if (!v3)
      {
        long long v69 = v74;
        v70[0] = v75[0];
        *(_OWORD *)((char *)v70 + 9) = *(_OWORD *)((char *)v75 + 9);
        unsigned long long v65 = v72[2];
        long long v66 = v72[3];
        long long v67 = v72[4];
        long long v68 = v73;
        long long v63 = v72[0];
        long long v64 = v72[1];
        long long v59 = v74;
        v60[0] = v75[0];
        *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)((char *)v75 + 9);
        long long v55 = v72[2];
        long long v56 = v72[3];
        long long v57 = v72[4];
        long long v58 = v73;
        char v62 = v24;
        long long v53 = v72[0];
        long long v54 = v72[1];
        a1 = sub_1C0D77FA4(&v53);
        sub_1C01880A4((uint64_t)&v63);
      }
      break;
    case 3:
      v86 &= 0xFu;
      uint64_t v25 = v83[0];
      uint64_t v26 = v83[1];
      int v27 = v84;
      int v28 = v85;
      sub_1C098D080(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v14);
      if (!v3)
      {
        a1 = sub_1C10BFCA8((uint64_t)v14, a1, v25, v26, v27 | (v28 << 8), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A752DC);
        uint64_t v18 = type metadata accessor for FeedWeather;
        uint64_t v19 = (uint64_t)v14;
        goto LABEL_16;
      }
      break;
    case 4:
      v86 &= 0xFu;
      char v29 = v83[0];
      sub_1C098DE20(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v72);
      if (!v3)
      {
        v70[5] = v79;
        v70[6] = v80;
        v70[7] = v81;
        v70[1] = v75[1];
        v70[2] = v76;
        v70[3] = v77;
        v70[4] = v78;
        long long v67 = v72[4];
        long long v68 = v73;
        long long v69 = v74;
        v70[0] = v75[0];
        long long v63 = v72[0];
        long long v64 = v72[1];
        unsigned long long v65 = v72[2];
        long long v66 = v72[3];
        v60[5] = v79;
        v60[6] = v80;
        v60[7] = v81;
        v60[1] = v75[1];
        _OWORD v60[2] = v76;
        v60[3] = v77;
        v60[4] = v78;
        long long v57 = v72[4];
        long long v58 = v73;
        long long v59 = v74;
        v60[0] = v75[0];
        long long v53 = v72[0];
        long long v54 = v72[1];
        uint64_t v71 = v82;
        char v62 = v29;
        uint64_t v61 = v82;
        long long v55 = v72[2];
        long long v56 = v72[3];
        swift_retain();
        a1 = FormatPaywallBinding.Text.text(from:selectors:)((uint64_t)&v53, (void (*)(uint64_t))sub_1C10C0BA8);
        swift_release();
        sub_1C01F0AC8((uint64_t)&v63);
      }
      break;
    case 5:
      v86 &= 0xFu;
      char v30 = v83[0];
      sub_1C098CEE0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), v72);
      if (!v3)
      {
        uint64_t v31 = *(void **)&v72[0];
        LOBYTE(v72[0]) = v30;
        swift_retain();
        id v32 = FCFeedDescriptor.feedTag.getter();
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = sub_1C10C0BA8;
        *(void *)(v33 + 24) = a1;
        uint64_t v34 = swift_getObjectType();
        swift_retain();
        a1 = sub_1BFFDCA34(v32, (void (*)(uint64_t))sub_1C10C0BAC, v33, v72, v34);

        swift_release();
        swift_unknownObjectRelease();
        swift_release();
      }
      break;
    case 6:
      v86 &= 0xFu;
      sub_1C10C0A04((uint64_t)v83, (uint64_t)&v88);
      sub_1C098DB74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v11);
      if (!v3)
      {
        sub_1C10C0A04((uint64_t)&v88, (uint64_t)v72);
        a1 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v11);
        uint64_t v18 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
        uint64_t v19 = (uint64_t)v11;
        goto LABEL_16;
      }
      break;
    case 7:
      v86 &= 0xFu;
      sub_1C10C094C((uint64_t)v83, (uint64_t)v89);
      sub_1C098CD24(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v72);
      if (!v3)
      {
        long long v35 = v72[0];
        unint64_t v36 = *((void *)&v72[1] + 1);
        unint64_t v37 = *(void *)&v72[1];
        char v38 = v72[2];
        sub_1C10C094C((uint64_t)v89, (uint64_t)&v63);
        v72[0] = v35;
        v72[1] = __PAIR128__(v36, v37);
        LOBYTE(v72[2]) = v38;
        sub_1C09FE810((uint64_t)v72);
        a1 = v49;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 8:
      v86 &= 0xFu;
      sub_1C0224024((uint64_t)v83, (uint64_t)v90);
      sub_1C098D960(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), v72);
      if (!v3)
      {
        sub_1C0224024((uint64_t)v90, (uint64_t)&v63);
        swift_retain();
        a1 = FormatPuzzleBinding.Text.text(from:computedContext:selectors:)((uint64_t)v72, a2, (uint64_t (*)(void))sub_1C10C0BA8, a1);
        swift_release();
        sub_1C01F0A74((uint64_t)v72);
      }
      break;
    case 9:
      v86 &= 0xFu;
      sub_1C10C09A8((uint64_t)v83, (uint64_t)v91);
      sub_1C098D4FC(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v72);
      if (!v3)
      {
        uint64_t v39 = *((void *)&v72[0] + 1);
        uint64_t v52 = *(void *)&v72[0];
        int v51 = LOBYTE(v72[1]);
        uint64_t v40 = *((void *)&v72[1] + 1);
        unsigned long long v43 = v72[2];
        unint64_t v42 = v43 >> 64;
        unint64_t v41 = v43;
        unint64_t v92 = *(void *)&v72[2];
        long long v44 = v72[3];
        sub_1C10C09A8((uint64_t)v91, (uint64_t)&v53);
        *(void *)&long long v63 = v52;
        *((void *)&v63 + 1) = v39;
        LOBYTE(v64) = v51;
        *((void *)&v64 + 1) = v40;
        unsigned long long v65 = __PAIR128__(v42, v41);
        long long v66 = v44;
        char v45 = *(unsigned char *)(a1 + 49);
        uint64_t v46 = *(void *)(a1 + 120);
        LOBYTE(v72[0]) = *(unsigned char *)(a1 + 48);
        BYTE1(v72[0]) = v45;
        *(_OWORD *)((char *)v72 + 8) = *(_OWORD *)(a1 + 56);
        *(_OWORD *)((char *)&v72[1] + 8) = *(_OWORD *)(a1 + 72);
        *(_OWORD *)((char *)&v72[2] + 8) = *(_OWORD *)(a1 + 88);
        *(_OWORD *)((char *)&v72[3] + 8) = *(_OWORD *)(a1 + 104);
        *((void *)&v72[4] + 1) = v46;
        a1 = FormatPuzzleTypeBinding.Text.text(from:config:)((uint64_t)&v63, (uint64_t)v72);
        sub_1BFEEFC20(v40, v92);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0xA:
      v86 &= 0xFu;
      char v47 = v83[0];
      sub_1C098D6C0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v8);
      if (!v3)
      {
        LOBYTE(v72[0]) = v47;
        a1 = FormatPuzzleStatisticBinding.Text.text(from:)((uint64_t)v8);
        uint64_t v18 = (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic;
        uint64_t v19 = (uint64_t)v8;
        goto LABEL_16;
      }
      break;
    default:
      v86 &= 0xFu;
      sub_1C0223E44((uint64_t)v83, (uint64_t)v87);
      sub_1BFC4BD94(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), (uint64_t)v17);
      if (!v3)
      {
        sub_1C0223E44((uint64_t)v87, (uint64_t)v72);
        swift_retain();
        a1 = FormatHeadlineBinding.Text.text(from:computedContext:selectors:)((uint64_t)v17, a2, (uint64_t (*)(uint64_t))sub_1C10C0BA8, a1);
        swift_release();
        uint64_t v18 = type metadata accessor for FeedHeadline;
        uint64_t v19 = (uint64_t)v17;
LABEL_16:
        sub_1BFF4F410(v19, v18);
      }
      break;
  }
  return a1;
}

uint64_t sub_1C10BF020(uint64_t a1, unint64_t a2)
{
  unint64_t v116 = a2;
  uint64_t v163 = a1;
  uint64_t v3 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v6 - 8);
  int v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatOptionsNodeStatementContext();
  uint64_t v117 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v117 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v118 = (uint64_t)&v108 - v16;
  uint64_t v17 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C022425C(v2, (uint64_t)v154);
  switch(v157 >> 4)
  {
    case 1:
      v157 &= 0xFu;
      char v25 = v154[0];
      uint64_t v26 = v163;
      id v27 = v119;
      sub_1C027E9C8((uint64_t)&v139);
      if (!v27)
      {
        id v119 = (id)*((void *)&v139 + 1);
        int v28 = (void *)v139;
        uint64_t v29 = v26;
        uint64_t v30 = v118;
        sub_1BFF834FC(v29, v118);
        unint64_t v31 = (*(unsigned __int8 *)(v117 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
        uint64_t v32 = swift_allocObject();
        sub_1BFF83560(v30, v32 + v31);
        LOBYTE(v139) = v25;
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = sub_1C10C0B30;
        *(void *)(v33 + 24) = v32;
        uint64_t ObjectType = swift_getObjectType();
        swift_retain();
        uint64_t v13 = sub_1BFFDCA34(v28, (void (*)(uint64_t))sub_1C10C0BAC, v33, &v139, ObjectType);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
      break;
    case 2:
      v157 &= 0xFu;
      char v35 = v154[0];
      id v36 = v119;
      sub_1C027E820();
      if (!v36)
      {
        long long v136 = v145;
        v137[0] = v146[0];
        *(_OWORD *)((char *)v137 + 9) = *(_OWORD *)((char *)v146 + 9);
        long long v132 = v141;
        unsigned long long v133 = v142;
        long long v134 = v143;
        long long v135 = v144;
        long long v130 = v139;
        unsigned long long v131 = v140;
        long long v126 = v145;
        v127[0] = v146[0];
        *(_OWORD *)((char *)v127 + 9) = *(_OWORD *)((char *)v146 + 9);
        long long v122 = v141;
        unsigned long long v123 = v142;
        long long v124 = v143;
        long long v125 = v144;
        char v129 = v35;
        long long v120 = v139;
        unsigned long long v121 = v140;
        uint64_t v13 = sub_1C0D77FA4(&v120);
        sub_1C01880A4((uint64_t)&v130);
      }
      break;
    case 3:
      v157 &= 0xFu;
      uint64_t v37 = v154[0];
      uint64_t v13 = v154[1];
      __int16 v38 = v155;
      __int16 v39 = v156;
      uint64_t v40 = v163;
      id v41 = v119;
      sub_1C027F25C();
      if (!v41)
      {
        uint64_t v13 = sub_1C10BFF68((uint64_t)v11, v40, v37, v13, v38 | (unsigned __int16)(v39 << 8));
        unint64_t v42 = type metadata accessor for FeedWeather;
        uint64_t v43 = (uint64_t)v11;
        goto LABEL_16;
      }
      break;
    case 4:
      v157 &= 0xFu;
      char v44 = v154[0];
      uint64_t v45 = v163;
      id v46 = v119;
      sub_1C027F0B4();
      if (!v46)
      {
        v137[5] = v150;
        v137[6] = v151;
        v137[7] = v152;
        v137[1] = v146[1];
        v137[2] = v147;
        v137[3] = v148;
        v137[4] = v149;
        long long v134 = v143;
        long long v135 = v144;
        long long v136 = v145;
        v137[0] = v146[0];
        long long v130 = v139;
        unsigned long long v131 = v140;
        long long v132 = v141;
        unsigned long long v133 = v142;
        v127[5] = v150;
        v127[6] = v151;
        v127[7] = v152;
        v127[1] = v146[1];
        v127[2] = v147;
        v127[3] = v148;
        v127[4] = v149;
        long long v124 = v143;
        long long v125 = v144;
        long long v126 = v145;
        v127[0] = v146[0];
        long long v120 = v139;
        unsigned long long v121 = v140;
        uint64_t v138 = v153;
        char v129 = v44;
        uint64_t v128 = v153;
        long long v122 = v141;
        unsigned long long v123 = v142;
        uint64_t v47 = v118;
        sub_1BFF834FC(v45, v118);
        unint64_t v48 = (*(unsigned __int8 *)(v117 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
        uint64_t v49 = swift_allocObject();
        sub_1BFF83560(v47, v49 + v48);
        uint64_t v13 = FormatPaywallBinding.Text.text(from:selectors:)((uint64_t)&v120, (void (*)(uint64_t))sub_1C10C0B30);
        swift_release();
        sub_1C01F0AC8((uint64_t)&v130);
      }
      break;
    case 5:
      v157 &= 0xFu;
      char v50 = v154[0];
      uint64_t v51 = v163;
      id v52 = v119;
      sub_1C027E6B0(&v139);
      if (!v52)
      {
        long long v53 = (void *)v139;
        uint64_t v54 = v118;
        sub_1BFF834FC(v51, v118);
        unint64_t v55 = (*(unsigned __int8 *)(v117 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
        uint64_t v56 = swift_allocObject();
        sub_1BFF83560(v54, v56 + v55);
        LOBYTE(v139) = v50;
        id v57 = FCFeedDescriptor.feedTag.getter();
        uint64_t v58 = swift_allocObject();
        *(void *)(v58 + 16) = sub_1C10C0B30;
        *(void *)(v58 + 24) = v56;
        uint64_t v59 = swift_getObjectType();
        swift_retain();
        uint64_t v13 = sub_1BFFDCA34(v57, (void (*)(uint64_t))sub_1C10C0BAC, v58, &v139, v59);

        swift_release();
        swift_unknownObjectRelease();
        swift_release();
      }
      break;
    case 6:
      v157 &= 0xFu;
      sub_1C10C0A04((uint64_t)v154, (uint64_t)&v159);
      id v60 = v119;
      sub_1C027EEB4();
      if (!v60)
      {
        sub_1C10C0A04((uint64_t)&v159, (uint64_t)&v139);
        uint64_t v13 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v8);
        unint64_t v42 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
        uint64_t v43 = (uint64_t)v8;
LABEL_16:
        sub_1BFF4F410(v43, v42);
      }
      break;
    case 7:
      v157 &= 0xFu;
      sub_1C10C094C((uint64_t)v154, (uint64_t)v160);
      id v61 = v119;
      sub_1C027ED0C();
      if (!v61)
      {
        long long v62 = v139;
        unint64_t v64 = *((void *)&v140 + 1);
        unint64_t v63 = v140;
        char v65 = v141;
        sub_1C10C094C((uint64_t)v160, (uint64_t)&v130);
        long long v139 = v62;
        unsigned long long v140 = __PAIR128__(v64, v63);
        LOBYTE(v141) = v65;
        sub_1C09FE810((uint64_t)&v139);
        uint64_t v13 = v107;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 8:
      v157 &= 0xFu;
      sub_1C0224024((uint64_t)v154, (uint64_t)v161);
      uint64_t v66 = v163;
      id v67 = v119;
      sub_1C027EF0C();
      if (!v67)
      {
        sub_1C0224024((uint64_t)v161, (uint64_t)&v130);
        uint64_t v68 = v118;
        sub_1BFF834FC(v66, v118);
        unint64_t v69 = (*(unsigned __int8 *)(v117 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
        uint64_t v70 = swift_allocObject();
        sub_1BFF83560(v68, v70 + v69);
        uint64_t v13 = FormatPuzzleBinding.Text.text(from:computedContext:selectors:)((uint64_t)&v139, v116, (uint64_t (*)(void))sub_1C10C0B30, v70);
        swift_release();
        sub_1C01F0A74((uint64_t)&v139);
      }
      break;
    case 9:
      v157 &= 0xFu;
      sub_1C10C09A8((uint64_t)v154, (uint64_t)v162);
      uint64_t v71 = v163;
      id v72 = v119;
      sub_1C027EB64();
      if (!v72)
      {
        uint64_t v117 = *((void *)&v139 + 1);
        uint64_t v118 = v139;
        LODWORD(v116) = v140;
        uint64_t v73 = *((void *)&v140 + 1);
        uint64_t v115 = *((void *)&v141 + 1);
        unint64_t v74 = v141;
        unsigned long long v75 = v142;
        sub_1C10C09A8((uint64_t)v162, (uint64_t)&v120);
        *(void *)&long long v130 = v118;
        *((void *)&v130 + 1) = v117;
        LOBYTE(v131) = v116;
        unint64_t v116 = v74;
        uint64_t v117 = v73;
        *((void *)&v131 + 1) = v73;
        *(void *)&long long v132 = v74;
        *((void *)&v132 + 1) = v115;
        unsigned long long v133 = v75;
        uint64_t v115 = v75 >> 64;
        uint64_t v118 = v75;
        sub_1BFF834FC(v71, (uint64_t)v14);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v77 = *v14;
        id v119 = 0;
        if (EnumCaseMultiPayload == 1)
        {
          sub_1BFF81F7C();
          uint64_t v109 = (char *)v14 + *(int *)(v78 + 48);
          LODWORD(v163) = *(unsigned __int8 *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
          LODWORD(v114) = *(unsigned __int8 *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
          uint64_t v79 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
          uint64_t v81 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
          uint64_t v80 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
          uint64_t v83 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
          uint64_t v82 = *(void **)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
          uint64_t v85 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
          uint64_t v84 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
          uint64_t v86 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
          uint64_t v110 = *(void *)(v77 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
          uint64_t v111 = v80;
          swift_bridgeObjectRetain();
          uint64_t v87 = v79;
          swift_bridgeObjectRetain();
          uint64_t v88 = v83;
          uint64_t v89 = v83;
          uint64_t v112 = v85;
          id v113 = v82;
          uint64_t v90 = v82;
          uint64_t v91 = v84;
          uint64_t v92 = v86;
          sub_1BFF1E730(v89, v90);
          swift_release();
          sub_1BFF81FF0();
          (*(void (**)(char *, uint64_t))(*(void *)(v93 - 8) + 8))(v109, v93);
        }
        else
        {
          swift_release();
          LODWORD(v163) = *(unsigned __int8 *)(v77 + 48);
          LODWORD(v114) = *(unsigned __int8 *)(v77 + 49);
          uint64_t v97 = *(void *)(v77 + 64);
          uint64_t v81 = *(void *)(v77 + 72);
          uint64_t v98 = *(void *)(v77 + 80);
          uint64_t v100 = *(void *)(v77 + 88);
          unint64_t v99 = *(void **)(v77 + 96);
          uint64_t v102 = *(void *)(v77 + 104);
          uint64_t v101 = *(void *)(v77 + 112);
          uint64_t v103 = *(void *)(v77 + 120);
          uint64_t v110 = *(void *)(v77 + 56);
          uint64_t v111 = v98;
          swift_bridgeObjectRetain();
          uint64_t v87 = v97;
          swift_bridgeObjectRetain();
          uint64_t v88 = v100;
          uint64_t v104 = v100;
          uint64_t v112 = v102;
          id v113 = v99;
          uint64_t v105 = v99;
          uint64_t v91 = v101;
          uint64_t v92 = v103;
          sub_1BFF1E730(v104, v105);
          swift_release();
        }
        LOBYTE(v139) = v163;
        BYTE1(v139) = v114;
        *((void *)&v139 + 1) = v110;
        *(void *)&unsigned long long v140 = v87;
        *((void *)&v140 + 1) = v81;
        *(void *)&long long v141 = v111;
        *((void *)&v141 + 1) = v88;
        uint64_t v106 = v113;
        *(void *)&unsigned long long v142 = v113;
        *((void *)&v142 + 1) = v112;
        uint64_t v163 = v91;
        *(void *)&long long v143 = v91;
        uint64_t v114 = v92;
        *((void *)&v143 + 1) = v92;
        uint64_t v13 = FormatPuzzleTypeBinding.Text.text(from:config:)((uint64_t)&v130, (uint64_t)&v139);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFF1EAA0(v88, v106);
        sub_1BFEEFC20(v117, v116);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0xA:
      v157 &= 0xFu;
      char v94 = v154[0];
      id v95 = v119;
      sub_1C027EEE0();
      if (!v95)
      {
        LOBYTE(v139) = v94;
        uint64_t v13 = FormatPuzzleStatisticBinding.Text.text(from:)((uint64_t)v5);
        sub_1BFF4F410((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      }
      break;
    default:
      v157 &= 0xFu;
      sub_1C0223E44((uint64_t)v154, (uint64_t)v158);
      uint64_t v20 = v163;
      id v21 = v119;
      sub_1C027EB38();
      if (!v21)
      {
        sub_1C0223E44((uint64_t)v158, (uint64_t)&v139);
        uint64_t v22 = v118;
        sub_1BFF834FC(v20, v118);
        unint64_t v23 = (*(unsigned __int8 *)(v117 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
        uint64_t v24 = swift_allocObject();
        sub_1BFF83560(v22, v24 + v23);
        uint64_t v13 = FormatHeadlineBinding.Text.text(from:computedContext:selectors:)((uint64_t)v19, v116, (uint64_t (*)(uint64_t))sub_1C10C0B30, v24);
        swift_release();
        sub_1BFF4F410((uint64_t)v19, type metadata accessor for FeedHeadline);
      }
      break;
  }
  return v13;
}

uint64_t sub_1C10BFCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v8 = a5;
  switch(BYTE1(a5))
  {
    case 1:
      if (a5 > 0xFDu) {
        uint64_t v20 = 1;
      }
      else {
        uint64_t v20 = a3;
      }
      uint64_t v32 = v20;
      if (a5 <= 0xFDu) {
        uint64_t v21 = a4;
      }
      else {
        uint64_t v21 = 0;
      }
      if (a5 <= 0xFDu) {
        uint64_t v22 = a5;
      }
      else {
        uint64_t v22 = 0;
      }
      uint64_t v23 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
      uint64_t v24 = *(int *)(type metadata accessor for FeedWeather.Temperature(0) + 20);
      goto LABEL_43;
    case 2:
      if (a5 > 0xFDu) {
        uint64_t v25 = 1;
      }
      else {
        uint64_t v25 = a3;
      }
      uint64_t v32 = v25;
      if (a5 <= 0xFDu) {
        uint64_t v21 = a4;
      }
      else {
        uint64_t v21 = 0;
      }
      if (a5 <= 0xFDu) {
        uint64_t v22 = a5;
      }
      else {
        uint64_t v22 = 0;
      }
      uint64_t v23 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
      uint64_t v24 = *(int *)(type metadata accessor for FeedWeather.Temperature(0) + 24);
      goto LABEL_43;
    case 3:
      if (a5 > 0xFDu) {
        uint64_t v26 = 1;
      }
      else {
        uint64_t v26 = a3;
      }
      uint64_t v32 = v26;
      if (a5 <= 0xFDu) {
        uint64_t v21 = a4;
      }
      else {
        uint64_t v21 = 0;
      }
      if (a5 <= 0xFDu) {
        uint64_t v22 = a5;
      }
      else {
        uint64_t v22 = 0;
      }
      uint64_t v23 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
      uint64_t v24 = *(int *)(type metadata accessor for FeedWeather.Temperature(0) + 28);
LABEL_43:
      uint64_t v27 = v23 + v24;
      sub_1C02240E8(a3, a4, v8);
      uint64_t v28 = a6(v27, a2, v32, v21, v22);
      if (v6)
      {
        uint64_t v17 = v32;
        uint64_t v18 = v21;
        char v19 = v22;
        goto LABEL_45;
      }
      a6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v28;
      sub_1C0224254(v32, v21, v22);
      return (uint64_t)a6;
    case 4:
      if (!(a4 | a3) && !(_BYTE)a5)
      {
        a6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 16);
LABEL_57:
        swift_bridgeObjectRetain();
        return (uint64_t)a6;
      }
      if (a3 == 1 && !a4 && !(_BYTE)a5) {
        return FormatWeatherConditionCode.rawValue.getter();
      }
      uint64_t v29 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 40);
      if (*(void *)(v29 + 8))
      {
        a6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v29;
        goto LABEL_57;
      }
      return 0;
    default:
      if (a5 > 0xFDu) {
        uint64_t v12 = 1;
      }
      else {
        uint64_t v12 = a3;
      }
      uint64_t v31 = v12;
      if (a5 <= 0xFDu) {
        uint64_t v13 = a4;
      }
      else {
        uint64_t v13 = 0;
      }
      if (a5 <= 0xFDu) {
        uint64_t v14 = a5;
      }
      else {
        uint64_t v14 = 0;
      }
      uint64_t v15 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
      sub_1C02240E8(a3, a4, v8);
      uint64_t v16 = a6(v15, a2, v31, v13, v14);
      if (v6)
      {
        uint64_t v17 = v31;
        uint64_t v18 = v13;
        char v19 = v14;
LABEL_45:
        sub_1C0224254(v17, v18, v19);
      }
      else
      {
        a6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v16;
        sub_1C0224254(v31, v13, v14);
      }
      return (uint64_t)a6;
  }
}

uint64_t sub_1C10BFF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  char v6 = a5;
  uint64_t v10 = a1;
  switch(HIBYTE(a5))
  {
    case 1:
      if (a5 > 0xFDu) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = a3;
      }
      if (a5 <= 0xFDu) {
        uint64_t v12 = a4;
      }
      else {
        uint64_t v12 = 0;
      }
      if (a5 <= 0xFDu) {
        char v13 = a5;
      }
      else {
        char v13 = 0;
      }
      uint64_t v10 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
      uint64_t v14 = *(int *)(type metadata accessor for FeedWeather.Temperature(0) + 20);
      goto LABEL_42;
    case 2:
      if (a5 > 0xFDu) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = a3;
      }
      if (a5 <= 0xFDu) {
        uint64_t v12 = a4;
      }
      else {
        uint64_t v12 = 0;
      }
      if (a5 <= 0xFDu) {
        char v13 = a5;
      }
      else {
        char v13 = 0;
      }
      uint64_t v10 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
      uint64_t v14 = *(int *)(type metadata accessor for FeedWeather.Temperature(0) + 24);
      goto LABEL_42;
    case 3:
      if (a5 > 0xFDu) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = a3;
      }
      if (a5 <= 0xFDu) {
        uint64_t v12 = a4;
      }
      else {
        uint64_t v12 = 0;
      }
      if (a5 <= 0xFDu) {
        char v13 = a5;
      }
      else {
        char v13 = 0;
      }
      uint64_t v10 = a1 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
      uint64_t v14 = *(int *)(type metadata accessor for FeedWeather.Temperature(0) + 28);
      goto LABEL_42;
    case 4:
      if (!(a4 | a3) && !(_BYTE)a5)
      {
        a2 = *(void *)(a1 + 16);
LABEL_54:
        swift_bridgeObjectRetain();
        return a2;
      }
      if (a3 == 1 && !a4 && !(_BYTE)a5) {
        return FormatWeatherConditionCode.rawValue.getter();
      }
      uint64_t v17 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FeedWeather(0) + 40));
      if (v17[1])
      {
        a2 = *v17;
        goto LABEL_54;
      }
      return 0;
    default:
      if (a5 > 0xFDu) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = a3;
      }
      if (a5 <= 0xFDu) {
        uint64_t v12 = a4;
      }
      else {
        uint64_t v12 = 0;
      }
      if (a5 <= 0xFDu) {
        char v13 = a5;
      }
      else {
        char v13 = 0;
      }
      uint64_t v14 = *(int *)(type metadata accessor for FeedWeather(0) + 36);
LABEL_42:
      uint64_t v15 = v10 + v14;
      sub_1C02240E8(a3, a4, v6);
      uint64_t v16 = sub_1C0A7573C(v15, a2, v11, v12, v13);
      if (!v5) {
        a2 = (uint64_t)v16;
      }
      sub_1C0224254(v11, v12, v13);
      return a2;
  }
}

uint64_t sub_1C10C019C()
{
  uint64_t v0 = sub_1BFFC514C();
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 16) + 16))
  {
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BFEF3B08(v2);
    sub_1BFEF3808(v3);
    swift_release();
    return v6;
  }
  else
  {
    uint64_t v4 = sub_1BFEF3784();
    swift_release();
  }
  return v4;
}

uint64_t sub_1C10C023C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BFF4F4D0(a1, a2, a3, sub_1BFF45CF8) & 1;
}

uint64_t _s8NewsFeed27FormatBindingTextExpressionV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  __int16 v2 = *((_WORD *)a1 + 24);
  uint64_t v22 = *((void *)a1 + 8);
  uint64_t v23 = *((void *)a1 + 7);
  uint64_t v3 = *((void *)a1 + 11);
  uint64_t v20 = *((void *)a1 + 10);
  uint64_t v21 = *((void *)a1 + 9);
  uint64_t v4 = *((void *)a1 + 12);
  int v5 = *((unsigned __int8 *)a1 + 106);
  int v6 = *((unsigned __int16 *)a1 + 52);
  __int16 v7 = *((_WORD *)a2 + 24);
  uint64_t v8 = *((void *)a2 + 7);
  uint64_t v9 = *((void *)a2 + 8);
  uint64_t v10 = *((void *)a2 + 9);
  uint64_t v11 = *((void *)a2 + 10);
  uint64_t v18 = *((void *)a2 + 12);
  uint64_t v19 = *((void *)a2 + 11);
  int v12 = *((unsigned __int8 *)a2 + 106);
  int v13 = *((unsigned __int16 *)a2 + 52);
  long long v14 = a1[1];
  long long v29 = *a1;
  long long v30 = v14;
  long long v31 = a1[2];
  __int16 v32 = v2;
  long long v15 = a2[1];
  long long v24 = *a2;
  long long v25 = v15;
  long long v26 = a2[2];
  __int16 v27 = v7;
  if (_s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v24))
  {
    *(void *)&long long v29 = v23;
    *((void *)&v29 + 1) = v22;
    *(void *)&long long v30 = v21;
    *((void *)&v30 + 1) = v20;
    *(void *)&long long v31 = v3;
    *((void *)&v31 + 1) = v4;
    __int16 v32 = v6;
    char v33 = (v6 | (v5 << 16)) >> 16;
    *(void *)&long long v24 = v8;
    *((void *)&v24 + 1) = v9;
    *(void *)&long long v25 = v10;
    *((void *)&v25 + 1) = v11;
    *(void *)&long long v26 = v19;
    *((void *)&v26 + 1) = v18;
    char v28 = (v13 | (v12 << 16)) >> 16;
    __int16 v27 = v13;
    char v16 = _s8NewsFeed32FormatBindingTextExpressionLogicO2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v24);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

unint64_t sub_1C10C044C(uint64_t a1)
{
  unint64_t result = sub_1C10C0474();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10C0474()
{
  unint64_t result = qword_1EA1AB2B0;
  if (!qword_1EA1AB2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB2B0);
  }
  return result;
}

unint64_t sub_1C10C04C8(void *a1)
{
  a1[1] = sub_1BFDEC990();
  a1[2] = sub_1BFDC2F94();
  unint64_t result = sub_1C10C0500();
  a1[3] = result;
  return result;
}

unint64_t sub_1C10C0500()
{
  unint64_t result = qword_1EA1AB2B8;
  if (!qword_1EA1AB2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB2B8);
  }
  return result;
}

uint64_t destroy for FormatBindingTextExpression(uint64_t a1)
{
  sub_1BFF0084C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48), *(unsigned char *)(a1 + 49));
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  unint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  unsigned int v8 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
  return sub_1BFF00C44(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t initializeWithCopy for FormatBindingTextExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 49);
  char v11 = *(unsigned char *)(a2 + 48);
  sub_1BFF2A99C(*(void *)a2, v5, v6, v7, v8, v9, v11, v10);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 49) = v10;
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  unint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  LODWORD(v9) = *(unsigned __int8 *)(a2 + 106);
  int v16 = *(unsigned __int16 *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  sub_1BFF2B090(v12, v13, v14, v15, v18, v17, v16 | (v9 << 16));
  *(void *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v18;
  *(void *)(a1 + 96) = v17;
  *(unsigned char *)(a1 + 106) = v9;
  *(_WORD *)(a1 + 104) = v16;
  return a1;
}

uint64_t assignWithCopy for FormatBindingTextExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 49);
  char v11 = *(unsigned char *)(a2 + 48);
  sub_1BFF2A99C(*(void *)a2, v5, v6, v7, v8, v9, v11, v10);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  unint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  char v18 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v11;
  char v19 = *(unsigned char *)(a1 + 49);
  *(unsigned char *)(a1 + 49) = v10;
  sub_1BFF0084C(v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v20 = *(void *)(v2 + 56);
  uint64_t v21 = *(void *)(v2 + 64);
  unint64_t v22 = *(void *)(v2 + 72);
  uint64_t v23 = *(void *)(v2 + 80);
  uint64_t v24 = *(void *)(v2 + 88);
  uint64_t v25 = *(void *)(v2 + 96);
  int v26 = *(unsigned __int8 *)(v2 + 106);
  LODWORD(v2) = *(unsigned __int16 *)(v2 + 104);
  sub_1BFF2B090(v20, v21, v22, v23, v24, v25, v2 | (v26 << 16));
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 64);
  unint64_t v29 = *(void *)(a1 + 72);
  uint64_t v30 = *(void *)(a1 + 80);
  uint64_t v31 = *(void *)(a1 + 88);
  uint64_t v32 = *(void *)(a1 + 96);
  unsigned int v33 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
  *(void *)(a1 + 56) = v20;
  *(void *)(a1 + 64) = v21;
  *(void *)(a1 + 72) = v22;
  *(void *)(a1 + 80) = v23;
  *(void *)(a1 + 88) = v24;
  *(void *)(a1 + 96) = v25;
  *(_WORD *)(a1 + 104) = v2;
  *(unsigned char *)(a1 + 106) = v26;
  sub_1BFF00C44(v27, v28, v29, v30, v31, v32, v33);
  return a1;
}

uint64_t assignWithTake for FormatBindingTextExpression(uint64_t a1, uint64_t a2)
{
  __int16 v4 = *(_WORD *)(a2 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v12 = *(unsigned char *)(a1 + 49);
  char v13 = *(unsigned char *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v4;
  sub_1BFF0084C(v5, v6, v7, v8, v9, v10, v13, v12);
  char v14 = *(unsigned char *)(a2 + 106);
  __int16 v15 = *(_WORD *)(a2 + 104);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  unint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  unsigned int v22 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) = v15;
  *(unsigned char *)(a1 + 106) = v14;
  sub_1BFF00C44(v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpression()
{
  return &type metadata for FormatBindingTextExpression;
}

uint64_t sub_1C10C085C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C10C08B8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C10C0900(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C10C094C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C10C09A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C10C0A04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C10C0A60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C10C0A98()
{
  return sub_1C1116270(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C10C0AA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C10C0AFC()
{
  return sub_1BFFB5AA8();
}

uint64_t sub_1C10C0B38()
{
  return sub_1C10C019C();
}

uint64_t static FormatColorAssignComponentProcessor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  double v3 = *(double *)(a2 + 8);
  return sub_1C1478790(*(unsigned char *)a1, *(unsigned char *)a2) & (v2 == v3);
}

unint64_t sub_1C10C0C0C(uint64_t a1)
{
  unint64_t result = sub_1C10C0C34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10C0C34()
{
  unint64_t result = qword_1EA1AB2C0;
  if (!qword_1EA1AB2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB2C0);
  }
  return result;
}

unint64_t sub_1C10C0C88(void *a1)
{
  a1[1] = sub_1BFDF6B88();
  a1[2] = sub_1BFDAF4E4();
  unint64_t result = sub_1C10C0CC0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C10C0CC0()
{
  unint64_t result = qword_1EA1AB2C8;
  if (!qword_1EA1AB2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB2C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorAssignComponentProcessor()
{
  return &type metadata for FormatColorAssignComponentProcessor;
}

double static UIEdgeInsets.clippingEdgeInsets.getter()
{
  return -8.0;
}

double static UIEdgeInsets.eightPointMargin.getter()
{
  return 8.0;
}

uint64_t dispatch thunk of GapOfflineViewStylerType.styled(title:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

id sub_1C10C0D60()
{
  uint64_t v1 = v0;
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v37, sel_setLineSpacing_, 2.0);
  objc_msgSend(v37, sel_setAlignment_, 1);
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  double v2 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  double v3 = (void *)sub_1C151E5EC();
  uint64_t v4 = sub_1BFC39268(0, &qword_1EB880DE0);
  uint64_t v5 = (void *)sub_1C151FB9C();
  sub_1BFEE8110(0, (unint64_t *)&qword_1EB895EB0, (void (*)(uint64_t))sub_1C0062478);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
  *(void *)(v6 + 56) = v4;
  unint64_t v7 = sub_1C10C12A0();
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 96) = v4;
  *(void *)(v6 + 104) = v7;
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = v3;
  id v38 = v2;
  id v35 = v3;
  id v36 = (void *)sub_1C151FBAC();

  sub_1C151E62C();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  uint64_t v9 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v8, sel_initWithString_, v9);

  sub_1BFEE8110(0, (unint64_t *)&qword_1EB87A910, (void (*)(uint64_t))sub_1C0063E08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  long long v11 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v12 = v1;
  char v13 = *(void **)(v1 + 16);
  uint64_t v14 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 40) = v13;
  id v15 = v11;
  id v16 = v13;
  sub_1BFF991DC(inited);
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  uint64_t v17 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_addAttributes_range_, v17, 0, objc_msgSend(v38, sel_length));

  uint64_t v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
  *(void *)(v18 + 32) = v15;
  uint64_t v19 = *(void **)(v12 + 24);
  *(void *)(v18 + 64) = v14;
  *(void *)(v18 + 40) = v19;
  id v20 = v15;
  id v21 = v19;
  sub_1BFF991DC(v18);
  unsigned int v22 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_addAttributes_range_, v22, objc_msgSend(v38, sel_length), objc_msgSend(v35, sel_length));

  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
  uint64_t v24 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(v23 + 32) = *MEMORY[0x1E4FB0700];
  uint64_t v25 = *(void **)(v12 + 40);
  uint64_t v26 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(v23 + 40) = v25;
  uint64_t v27 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(v23 + 64) = v26;
  *(void *)(v23 + 72) = v27;
  *(void *)(v23 + 104) = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(v23 + 80) = v37;
  id v28 = v24;
  id v29 = v25;
  id v30 = v27;
  id v31 = v37;
  sub_1BFF991DC(v23);
  uint64_t v32 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_addAttributes_range_, v32, 0, objc_msgSend(v34, sel_length));

  return v34;
}

uint64_t sub_1C10C1200()
{
  uint64_t v1 = *(void **)(v0 + 16);

  double v2 = *(void **)(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GapOfflineViewStyler()
{
  return self;
}

id sub_1C10C127C()
{
  return sub_1C10C0D60();
}

unint64_t sub_1C10C12A0()
{
  unint64_t result = qword_1EB86F690;
  if (!qword_1EB86F690)
  {
    sub_1BFC39268(255, &qword_1EB880DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F690);
  }
  return result;
}

void sub_1C10C1308()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    id v11 = *(id *)(*(void *)(v2 + 56) + 8 * v10);
    FormatLayoutView.prepareForReuse()();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1C10C1488(uint64_t a1)
{
  uint64_t v48 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  int64_t v49 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v6 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if (v10 >= v49) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v48 + 8 * v10);
    ++v6;
    if (!v11)
    {
      int64_t v6 = v10 + 1;
      if (v10 + 1 >= v49) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v48 + 8 * v6);
      if (!v11)
      {
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v49) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v48 + 8 * v6);
        if (!v11)
        {
          int64_t v6 = v10 + 3;
          if (v10 + 3 >= v49) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v48 + 8 * v6);
          if (!v11)
          {
            int64_t v6 = v10 + 4;
            if (v10 + 4 >= v49) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v48 + 8 * v6);
            if (!v11) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
LABEL_26:
    unint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = qword_1EB88CB30;
    swift_bridgeObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(qword_1EB93C930 + 48);
    uint64_t v18 = (unint64_t *)(v17 + 16);
    swift_beginAccess();
    unint64_t v19 = *(void *)(v17 + 16);
    if (v19 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v27)
      {
LABEL_37:
        uint64_t v28 = swift_endAccess();
        uint64_t v29 = *(void *)(v17 + 64);
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_55;
        }
        *(void *)(v17 + 64) = v31;
        uint64_t v26 = (void *)(*(uint64_t (**)(uint64_t))(v17 + 40))(v28);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (!v20) {
        goto LABEL_37;
      }
    }
    unint64_t v21 = *v18;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t *v18 = v21;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v21 & 0x8000000000000000) != 0
      || (v21 & 0x4000000000000000) != 0)
    {
      sub_1C0378E04(v21);
      unint64_t v21 = v23;
      unint64_t *v18 = v23;
    }
    uint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v24) {
      goto LABEL_52;
    }
    uint64_t v25 = v24 - 1;
    uint64_t v26 = *(void **)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v25 + 0x20);
    *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) = v25;
    sub_1C151EBEC();
    swift_endAccess();
LABEL_39:
    swift_release();
    objc_msgSend(v26, sel_setUserInteractionEnabled_, 0);
    sub_1C151F91C();
    objc_msgSend(v50, sel_addSubview_, v26);
    swift_beginAccess();
    id v32 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v34 = (void *)*v5;
    id v52 = (void *)*v5;
    *uint64_t v5 = 0x8000000000000000;
    unint64_t v36 = sub_1BFEF2D8C(v15, v14);
    uint64_t v37 = v34[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    char v40 = v35;
    if (v34[3] >= v39)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v43 = v52;
        if (v35) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C1070884();
        uint64_t v43 = v52;
        if (v40) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C105D268(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_1BFEF2D8C(v15, v14);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_57;
      }
      unint64_t v36 = v41;
      uint64_t v43 = v52;
      if (v40)
      {
LABEL_4:
        uint64_t v7 = v43[7];

        *(void *)(v7 + 8 * v36) = v32;
        goto LABEL_5;
      }
    }
    v43[(v36 >> 6) + 8] |= 1 << v36;
    char v44 = (uint64_t *)(v43[6] + 16 * v36);
    *char v44 = v15;
    v44[1] = v14;
    *(void *)(v43[7] + 8 * v36) = v32;
    uint64_t v45 = v43[2];
    BOOL v30 = __OFADD__(v45, 1);
    uint64_t v46 = v45 + 1;
    if (v30) {
      goto LABEL_53;
    }
    v43[2] = v46;
    swift_bridgeObjectRetain();
LABEL_5:
    *uint64_t v5 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  int64_t v12 = v10 + 5;
  if (v12 >= v49) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v48 + 8 * v12);
  if (v11)
  {
    int64_t v6 = v12;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v6 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v6 >= v49) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v48 + 8 * v6);
    ++v12;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

void sub_1C10C1924()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)v2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)v2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*(void *)v2 + 64);
  unint64_t v8 = &v1[OBJC_IVAR____TtC8NewsFeed15FormatStateView_state];
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v7)
  {
    unint64_t v13 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v14 = v13 | (v10 << 6);
LABEL_22:
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void **)(*(void *)(v3 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
    id v22 = v21;
    objc_msgSend(v1, sel_bounds);
    sub_1C151F8FC();
    uint64_t v23 = *((void *)v8 + 1);
    if (v23)
    {
      if (*(void *)v8 != v20 || v23 != v19) {
        sub_1C1520A9C();
      }
    }
    sub_1C151F91C();
    uint64_t v25 = *((void *)v8 + 1);
    if (v25)
    {
      if (*(void *)v8 == v20 && v25 == v19) {
        char v11 = 1;
      }
      else {
        char v11 = sub_1C1520A9C();
      }
    }
    else
    {
      char v11 = 0;
    }
    id v12 = v22;
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setUserInteractionEnabled_, v11 & 1);
  }
  int64_t v15 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v9) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v15);
  ++v10;
  if (v16) {
    goto LABEL_21;
  }
  int64_t v10 = v15 + 1;
  if (v15 + 1 >= v9) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v10);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v10 = v15 + 2;
  if (v15 + 2 >= v9) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v10);
  if (v16)
  {
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_35:
    swift_release();
    return;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_37:
  __break(1u);
}

void *sub_1C10C1B78()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1BFEF2D8C(v2, v1);
    if (v7)
    {
      unint64_t v8 = *(void **)(*(void *)(v4 + 56) + 8 * v6);
      id v9 = v8;
    }
    else
    {
      unint64_t v8 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v8 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C10C1D2C()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C10C1D6C()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  uint64_t v31 = v1;
  uint64_t v32 = *v1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(*v1 + 64);
  int64_t v33 = (unint64_t)(v2 + 63) >> 6;
  unint64_t v35 = *v1;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  unint64_t v6 = &unk_1EB93C000;
  char v7 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  unint64_t v8 = &selRef_setCenter_;
  if (v4) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v21 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v21 < v33)
    {
      unint64_t v22 = *(void *)(v32 + 8 * v21);
      ++v5;
      if (v22) {
        goto LABEL_22;
      }
      int64_t v5 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v5);
      if (v22) {
        goto LABEL_22;
      }
      int64_t v5 = v21 + 2;
      if (v21 + 2 >= v33) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v5);
      if (v22) {
        goto LABEL_22;
      }
      int64_t v5 = v21 + 3;
      if (v21 + 3 >= v33) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v5);
      if (v22)
      {
LABEL_22:
        unint64_t v4 = (v22 - 1) & v22;
        for (unint64_t i = __clz(__rbit64(v22)) + (v5 << 6); ; unint64_t i = v19 | (v5 << 6))
        {
          id v24 = *(id *)(*(void *)(v35 + 56) + 8 * i);
          objc_msgSend(v24, sel_removeFromSuperview);
          if (qword_1EB88CB30 != -1) {
            swift_once();
          }
          uint64_t v25 = v6[294];
          id v26 = [v24 (SEL)v7[417]];
          objc_msgSend(v26, v8[171], 0);

          uint64_t v27 = *(void **)(v25 + 48);
          swift_beginAccess();
          unint64_t v28 = v27[2];
          if (v28 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v29 = sub_1C15204BC();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v29 >= sub_1C0993CA4(v27[7]))
          {
            sub_1BFFDEB20();
            uint64_t v9 = swift_allocObject();
            *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
            id v34 = v24;
            unint64_t v10 = v4;
            int64_t v11 = v5;
            id v12 = v8;
            unint64_t v13 = v7;
            unint64_t v14 = v6;
            uint64_t v15 = v27[3];
            uint64_t v16 = v27[4];
            *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v17 = sub_1BFE9C558();
            *(void *)(v9 + 32) = v15;
            *(void *)(v9 + 40) = v16;
            unint64_t v6 = v14;
            char v7 = v13;
            unint64_t v8 = v12;
            int64_t v5 = v11;
            unint64_t v4 = v10;
            *(void *)(v9 + 96) = MEMORY[0x1E4FBB550];
            *(void *)(v9 + 104) = MEMORY[0x1E4FBB5C8];
            *(void *)(v9 + 64) = v17;
            *(void *)(v9 + 72) = v29;
            sub_1BFCCB57C();
            swift_bridgeObjectRetain();
            uint64_t v18 = (void *)sub_1C151FD3C();
            sub_1C151F38C();
            sub_1C15197BC();

            swift_bridgeObjectRelease();
            if (!v10) {
              goto LABEL_7;
            }
          }
          else
          {
            objc_msgSend(v24, sel_setUserInteractionEnabled_, 1);
            sub_1C151F91C();
            sub_1BFFCD270(0, 0);
            swift_beginAccess();
            id v30 = v24;
            MEMORY[0x1C18C66D0]();
            if (*(void *)((v27[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
            swift_endAccess();

            if (!v4) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v19 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      int64_t v23 = v21 + 4;
      if (v23 < v33)
      {
        unint64_t v22 = *(void *)(v32 + 8 * v23);
        if (v22)
        {
          int64_t v5 = v23;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v5 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_35;
          }
          if (v5 >= v33) {
            break;
          }
          unint64_t v22 = *(void *)(v32 + 8 * v5);
          ++v23;
          if (v22) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_33:
    swift_release();
    *uint64_t v31 = sub_1C018EE7C(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1C10C21C8()
{
}

void sub_1C10C21EC()
{
  sub_1C10C2728(&qword_1EA1AB2E8);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C10C2244()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_22:
    uint64_t v15 = *(char **)(*(void *)(v2 + 56) + 8 * v11);
    uint64_t v16 = &v15[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
    swift_beginAccess();
    if (*(void *)(*(void *)v16 + 16)) {
      goto LABEL_27;
    }
    unint64_t v17 = &v15[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations];
    uint64_t result = swift_beginAccess();
    unint64_t v18 = *(void *)v17;
    if (v18 >> 62)
    {
      unint64_t v19 = v15;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C15204BC();

      uint64_t result = swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_27:
        uint64_t v21 = 1;
LABEL_29:
        swift_release();
        return v21;
      }
    }
    else if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_27;
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= v7) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v7) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v7) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 3;
  if (v12 + 3 >= v7) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13)
  {
LABEL_21:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_22;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_28:
    uint64_t v21 = 0;
    goto LABEL_29;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1C10C2474()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    id v11 = *(id *)(*(void *)(v2 + 56) + 8 * v10);
    FormatLayoutView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

void sub_1C10C2614(uint64_t a1, uint64_t a2)
{
}

void sub_1C10C262C(uint64_t a1, uint64_t a2)
{
}

void sub_1C10C2644(uint64_t a1, uint64_t a2)
{
}

void sub_1C10C265C(uint64_t a1, uint64_t a2)
{
}

void sub_1C10C2674(uint64_t a1, uint64_t a2)
{
}

void sub_1C10C268C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = sub_1C10C1B78();
  if (v4)
  {
    id v5 = v4;
    a3();
  }
}

uint64_t sub_1C10C26F4()
{
  return sub_1C10C2728(&qword_1EB85D130);
}

uint64_t sub_1C10C2728(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatStateView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10C2768(uint64_t a1, unint64_t a2, char a3, int a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v10 - 8);
  int64_t v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  uint64_t v71 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (void *)((char *)v59 - v17);
  uint64_t v19 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v70 = a2;
  uint64_t v72 = a1;
  if (a3)
  {
    int v61 = a4;
    sub_1C10CCADC(0, &qword_1EA1AB2F8, (uint64_t)&type metadata for DebugFormatUploadData, MEMORY[0x1E4FAAA80]);
    swift_allocObject();
    uint64_t v20 = sub_1C151856C();
    sub_1C1517E9C();
    sub_1C1517ECC();
    swift_allocObject();
    uint64_t v21 = sub_1C1517EBC();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v69 = *(void *)(v5 + 16);
    unint64_t v73 = 0xD000000000000019;
    unint64_t v74 = 0x80000001C16340E0;
    swift_retain();
    sub_1C151895C();
    swift_release();
    sub_1C10CCADC(0, &qword_1EB863DD8, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAACA8]);
    id v24 = v23;
    id v25 = objc_allocWithZone(v23);
    swift_retain();
    uint64_t v68 = sub_1C15189CC();
    id v26 = objc_allocWithZone(v24);
    uint64_t v27 = (void *)sub_1C15189CC();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v72;
    *(void *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v30;
    *(void *)(v29 + 32) = a2;
    *(unsigned char *)(v29 + 40) = 1;
    *(void *)(v29 + 48) = v20;
    *(void *)(v29 + 56) = v22;
    id v31 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59[1] = v20;
    swift_retain();
    swift_retain();
    uint64_t v32 = v72;
    sub_1C151838C();
    id v67 = v31;

    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      uint64_t v34 = *(unsigned __int8 *)(v71 + 80);
      uint64_t v35 = v32 + ((v34 + 32) & ~v34);
      uint64_t v71 = *(void *)(v71 + 72);
      uint64_t v60 = (v34 + 16) & ~v34;
      v59[2] = v60 + v63;
      uint64_t v65 = v34 | 7;
      uint64_t v66 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue;
      uint64_t v64 = (v34 + 24) & ~v34;
      v63 += v64;
      uint64_t v62 = v63 + 1;
      v61 &= 1u;
      swift_bridgeObjectRetain();
      do
      {
        sub_1C10C8E0C(v35, (uint64_t)v18, type metadata accessor for DebugFormatUploadPrivateEntry);
        switch(*(unsigned char *)(*v18 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role))
        {
          case 3:
            sub_1C10C8E0C((uint64_t)v18, (uint64_t)v15, type metadata accessor for DebugFormatUploadPrivateEntry);
            uint64_t v43 = swift_allocObject();
            sub_1C10C8F78((uint64_t)v15, v43 + v60, type metadata accessor for DebugFormatUploadPrivateEntry);
            sub_1C10C9B90(0, &qword_1EA1AB300, type metadata accessor for DebugFormatUploadPrivateEntryResult, MEMORY[0x1E4FAACA8]);
            id v45 = objc_allocWithZone(v44);
            goto LABEL_5;
          case 5:
            break;
          default:
            sub_1C10C8E0C((uint64_t)v18, (uint64_t)v15, type metadata accessor for DebugFormatUploadPrivateEntry);
            uint64_t v36 = swift_allocObject();
            *(void *)(v36 + 16) = v5;
            sub_1C10C8F78((uint64_t)v15, v36 + v64, type metadata accessor for DebugFormatUploadPrivateEntry);
            *(unsigned char *)(v36 + v63) = v61;
            sub_1C10C9B90(0, &qword_1EA1AB300, type metadata accessor for DebugFormatUploadPrivateEntryResult, MEMORY[0x1E4FAACA8]);
            objc_allocWithZone(v37);
            swift_retain();
LABEL_5:
            BOOL v38 = (void *)sub_1C15189CC();
            uint64_t v39 = swift_allocObject();
            swift_weakInit();
            uint64_t v40 = swift_allocObject();
            *(void *)(v40 + 16) = v21;
            *(void *)(v40 + 24) = v22;
            *(void *)(v40 + 32) = v39;
            unint64_t v41 = v70;
            *(void *)(v40 + 40) = v72;
            *(void *)(v40 + 48) = v41;
            *(unsigned char *)(v40 + 56) = 1;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v42 = v38;
            swift_retain();
            sub_1C151838C();

            objc_msgSend(v42, sel_addDependency_, v68);
            objc_msgSend(v67, sel_addDependency_, v42);
            objc_msgSend(*(id *)(v69 + v66), sel_addOperation_, v42);

            break;
        }
        sub_1C10C9C9C((uint64_t)v18, type metadata accessor for DebugFormatUploadPrivateEntry);
        v35 += v71;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
    }
    uint64_t v54 = (void *)v68;
    unint64_t v55 = *(void **)(v69 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue);
    objc_msgSend(v55, sel_addOperation_, v68);
    id v56 = v67;
    uint64_t v57 = MEMORY[0x1C18C0080](objc_msgSend(v55, sel_addOperation_, v67));
    if (!v57)
    {
      __break(1u);
      JUMPOUT(0x1C10C317CLL);
    }
    uint64_t v53 = v57;
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v46 = *(void *)(a1 + 16);
    unint64_t v47 = MEMORY[0x1E4FBC860];
    if (v46)
    {
      unint64_t v73 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C152028C();
      uint64_t v48 = a1 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
      uint64_t v49 = *(void *)(v71 + 72);
      do
      {
        sub_1C10C8E0C(v48, (uint64_t)v15, type metadata accessor for DebugFormatUploadPrivateEntry);
        uint64_t v50 = *v15;
        sub_1C10C8E0C((uint64_t)v15 + *(int *)(v13 + 20), (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatFile);
        type metadata accessor for DebugFormatUploadEntry();
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = v50;
        sub_1C10C8F78((uint64_t)v12, v51 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(void))type metadata accessor for FormatFile);
        uint64_t v52 = v51 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
        *(void *)uint64_t v52 = 0;
        *(void *)(v52 + 8) = 0;
        *(unsigned char *)(v52 + 16) = 2;
        *(void *)(v51 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = 0;
        swift_retain();
        sub_1C10C9C9C((uint64_t)v15, type metadata accessor for DebugFormatUploadPrivateEntry);
        sub_1C152025C();
        sub_1C152029C();
        sub_1C15202AC();
        sub_1C152026C();
        v48 += v49;
        --v46;
      }
      while (v46);
      unint64_t v47 = v73;
      swift_bridgeObjectRelease();
      a2 = v70;
    }
    unint64_t v73 = v47;
    unint64_t v74 = a2;
    sub_1C10CCADC(0, &qword_1EA1AB2F0, (uint64_t)&type metadata for DebugFormatUploadData, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    return sub_1C151908C();
  }
  return v53;
}

uint64_t sub_1C10C3198@<X0>(void *a1@<X8>)
{
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1C10C330C(void *a1, uint64_t *a2, uint64_t a3, unsigned __int8 *a4)
{
  sub_1C107E7B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C028A7B0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v39 - v18);
  int v20 = *a4;
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  uint64_t v22 = a3 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 24) + v21;
  sub_1C10C8E0C(v22, (uint64_t)v13, (uint64_t (*)(void))sub_1C028A7B0);
  sub_1C10C8F78((uint64_t)v13, (uint64_t)v19, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v20)
  {
    if (v20 == 1)
    {
      if (v19[1] != 1)
      {
        int64_t v23 = v19 + 2;
        uint64_t v24 = v19[3];
        goto LABEL_10;
      }
LABEL_8:
      sub_1C10C9C9C((uint64_t)v19, type metadata accessor for FormatCompilerOptions.Newsroom);
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      sub_1C10C8E0C(v22, (uint64_t)v13, (uint64_t (*)(void))sub_1C028A7B0);
      sub_1C10C8F78((uint64_t)v13, (uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
      uint64_t v30 = *v16;
      uint64_t v31 = v16[1];
      uint64_t v32 = v16[2];
      uint64_t v33 = v16[3];
      uint64_t v34 = v16[4];
      uint64_t v35 = v16[5];
      sub_1BFD5A4A4(*v16, v31);
      sub_1C10C9C9C((uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
      *a2 = v30;
      a2[1] = v31;
      a2[2] = v32;
      a2[3] = v33;
      a2[4] = v34;
      a2[5] = v35;
      uint64_t v36 = type metadata accessor for DebugFormatUploadHiddenReason();
      goto LABEL_16;
    }
    if (v19[1] == 1) {
      goto LABEL_8;
    }
    int64_t v23 = v19 + 4;
    uint64_t v24 = v19[5];
  }
  else
  {
    uint64_t v24 = v19[1];
    int64_t v23 = v19;
    if (v24 == 1) {
      goto LABEL_8;
    }
  }
LABEL_10:
  uint64_t v25 = *v23;
  swift_bridgeObjectRetain();
  sub_1C10C9C9C((uint64_t)v19, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (!v24) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  sub_1C151632C();
  uint64_t v26 = sub_1C151635C();
  int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v10, 1, v26);
  sub_1C10C9C9C((uint64_t)v10, (uint64_t (*)(void))sub_1C107E7B8);
  swift_bridgeObjectRelease();
  if (v27 != 1)
  {
    *a1 = v25;
    a1[1] = v24;
    uint64_t v38 = type metadata accessor for DebugFormatUploadHiddenReason();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(a2, 1, 1, v38);
  }
  swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0;
  if (v20)
  {
    if (v20 == 1)
    {
      unint64_t v28 = 0xE700000000000000;
      uint64_t v29 = 0x676E6967617453;
    }
    else
    {
      unint64_t v28 = 0xEA00000000006E6FLL;
      uint64_t v29 = 0x69746375646F7250;
    }
  }
  else
  {
    unint64_t v28 = 0xE200000000000000;
    uint64_t v29 = 16721;
  }
  *a2 = v29;
  a2[1] = v28;
  uint64_t v36 = type metadata accessor for DebugFormatUploadHiddenReason();
LABEL_16:
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a2, 0, 1, v36);
}

uint64_t sub_1C10C3760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151E16C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C151E1DC();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE4597C();
  uint64_t v13 = (void *)sub_1C151F56C();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  void v14[4] = a3;
  aBlock[4] = sub_1C10CB640;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  void aBlock[3] = &block_descriptor_85;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1C151E19C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C017E800((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1C017E800((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

uint64_t sub_1C10C3A48(uint64_t a1, uint64_t a2)
{
  if (a1 && a2)
  {
    swift_retain();
    sub_1C151895C();
    swift_release();
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v3, "Processing... ");
    HIBYTE(v3[3]) = -18;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
  }
  else
  {
    v3[0] = 0;
    swift_retain();
    sub_1C151895C();
    swift_release();
  }
  swift_retain();
  sub_1C151895C();
  return swift_release();
}

uint64_t sub_1C10C3C20(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v39 = a2;
  uint64_t v40 = *(void *)v2;
  uint64_t v5 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v38 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  MEMORY[0x1F4188790](v41);
  uint64_t v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (char *)a1 + *(int *)(v5 + 24);
  uint64_t v16 = *(uint64_t (**)(uint64_t))v14;
  uint64_t v15 = (uint64_t (*)(uint64_t))*((void *)v14 + 1);
  unsigned int v17 = v14[16];
  if (v17 >= 2)
  {
    uint64_t v30 = *a1;
    sub_1C10C8E0C((uint64_t)a1 + *(int *)(v5 + 20), (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatFile);
    type metadata accessor for DebugFormatUploadEntry();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    sub_1C10C8F78((uint64_t)v13, v31 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v32 = v31 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
    *(void *)uint64_t v32 = v16;
    *(void *)(v32 + 8) = v15;
    *(unsigned char *)(v32 + 16) = 2;
    *(void *)(v31 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = 0;
    *uint64_t v9 = v31;
    swift_storeEnumTagMultiPayload();
    sub_1C10C9B90(0, &qword_1EA1AB318, type metadata accessor for DebugFormatUploadPrivateEntryResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    swift_retain();
    return sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](v11);
    *(&v34 - 4) = v3;
    *(&v34 - 3) = v16;
    *(&v34 - 2) = v15;
    sub_1BFDCA484((uint64_t)v16, (uint64_t)v15, v17);
    sub_1C01DDB34();
    sub_1C151932C();
    sub_1BFDCA350((uint64_t)v16, (uint64_t)v15, v17);
    Class v37 = type metadata accessor for DebugFormatUploadPrivateEntry;
    sub_1C10C8E0C((uint64_t)a1, (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DebugFormatUploadPrivateEntry);
    uint64_t v18 = *(unsigned __int8 *)(v38 + 80);
    uint64_t v19 = (v18 + 16) & ~v18;
    uint64_t v35 = a1;
    uint64_t v36 = v19;
    uint64_t v38 = v18 | 7;
    uint64_t v20 = swift_allocObject();
    uint64_t v34 = type metadata accessor for DebugFormatUploadPrivateEntry;
    sub_1C10C8F78((uint64_t)v7, v20 + v19, type metadata accessor for DebugFormatUploadPrivateEntry);
    uint64_t v21 = (void *)sub_1C1518E7C();
    sub_1C10CA778(0);
    sub_1C151900C();
    swift_release();
    swift_release();

    uint64_t v22 = v37;
    sub_1C10C8E0C((uint64_t)a1, (uint64_t)v7, v37);
    uint64_t v23 = v19 + v6;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v36;
    sub_1C10C8F78((uint64_t)v7, v24 + v36, type metadata accessor for DebugFormatUploadPrivateEntry);
    *(unsigned char *)(v24 + v23) = v39 & 1;
    uint64_t v26 = (void *)sub_1C1518E7C();
    sub_1C151901C();
    swift_release();
    swift_release();

    sub_1C10C8E0C((uint64_t)v35, (uint64_t)v7, v22);
    uint64_t v27 = swift_allocObject();
    sub_1C10C8F78((uint64_t)v7, v27 + v25, v34);
    unint64_t v28 = (void *)sub_1C1518E7C();
    uint64_t v29 = sub_1C15190DC();
    swift_release();
    swift_release();
  }
  return v29;
}

uint64_t sub_1C10C4144(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DebugFormatUploadHiddenEntry();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *a1;
  type metadata accessor for DebugFormatUploadHiddenReason();
  swift_storeEnumTagMultiPayload();
  *uint64_t v7 = v8;
  sub_1C10C8E0C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
  swift_storeEnumTagMultiPayload();
  sub_1C10C9B90(0, &qword_1EA1AB318, type metadata accessor for DebugFormatUploadPrivateEntryResult, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = sub_1C151908C();
  sub_1C10C9C9C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
  return v9;
}

uint64_t sub_1C10C42DC(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v39 = a2;
  uint64_t v40 = *(void *)v2;
  uint64_t v5 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v38 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  MEMORY[0x1F4188790](v41);
  uint64_t v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (char *)a1 + *(int *)(v5 + 24);
  uint64_t v16 = *(uint64_t (**)(uint64_t))v14;
  uint64_t v15 = (uint64_t (*)(uint64_t))*((void *)v14 + 1);
  unsigned int v17 = v14[16];
  if (v17 >= 2)
  {
    uint64_t v30 = *a1;
    sub_1C10C8E0C((uint64_t)a1 + *(int *)(v5 + 20), (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatFile);
    type metadata accessor for DebugFormatUploadEntry();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    sub_1C10C8F78((uint64_t)v13, v31 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v32 = v31 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
    *(void *)uint64_t v32 = v16;
    *(void *)(v32 + 8) = v15;
    *(unsigned char *)(v32 + 16) = 2;
    *(void *)(v31 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = 0;
    *uint64_t v9 = v31;
    swift_storeEnumTagMultiPayload();
    sub_1C10C9B90(0, &qword_1EA1AB318, type metadata accessor for DebugFormatUploadPrivateEntryResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    swift_retain();
    return sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](v11);
    *(&v34 - 4) = v3;
    *(&v34 - 3) = v16;
    *(&v34 - 2) = v15;
    sub_1BFDCA484((uint64_t)v16, (uint64_t)v15, v17);
    sub_1C01DDAA0();
    sub_1C151932C();
    sub_1BFDCA350((uint64_t)v16, (uint64_t)v15, v17);
    Class v37 = type metadata accessor for DebugFormatUploadPrivateEntry;
    sub_1C10C8E0C((uint64_t)a1, (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DebugFormatUploadPrivateEntry);
    uint64_t v18 = *(unsigned __int8 *)(v38 + 80);
    uint64_t v19 = (v18 + 16) & ~v18;
    uint64_t v35 = a1;
    uint64_t v36 = v19;
    uint64_t v38 = v18 | 7;
    uint64_t v20 = swift_allocObject();
    uint64_t v34 = type metadata accessor for DebugFormatUploadPrivateEntry;
    sub_1C10C8F78((uint64_t)v7, v20 + v19, type metadata accessor for DebugFormatUploadPrivateEntry);
    uint64_t v21 = (void *)sub_1C1518E7C();
    sub_1C10C9B20(0);
    sub_1C151900C();
    swift_release();
    swift_release();

    uint64_t v22 = v37;
    sub_1C10C8E0C((uint64_t)a1, (uint64_t)v7, v37);
    uint64_t v23 = v19 + v6;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v36;
    sub_1C10C8F78((uint64_t)v7, v24 + v36, type metadata accessor for DebugFormatUploadPrivateEntry);
    *(unsigned char *)(v24 + v23) = v39 & 1;
    uint64_t v26 = (void *)sub_1C1518E7C();
    sub_1C151901C();
    swift_release();
    swift_release();

    sub_1C10C8E0C((uint64_t)v35, (uint64_t)v7, v22);
    uint64_t v27 = swift_allocObject();
    sub_1C10C8F78((uint64_t)v7, v27 + v25, v34);
    unint64_t v28 = (void *)sub_1C1518E7C();
    uint64_t v29 = sub_1C15190DC();
    swift_release();
    swift_release();
  }
  return v29;
}

uint64_t sub_1C10C4800()
{
  return sub_1C151908C();
}

void sub_1C10C4860(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = *(void **)a1;
  int v11 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (v11)
    {
      id v13 = v10;
      sub_1C151853C();
      swift_release();
      sub_1C10CB64C(v10, 1);
    }
    else
    {
      uint64_t v14 = (uint64_t *)(a7 + 16);
      uint64_t v15 = *(void *)(a3 + 16);
      uint64_t v16 = *(void *)(Strong + 16);
      swift_retain();
      sub_1C10C3760(0, v15, v16);
      swift_release();
      swift_beginAccess();
      uint64_t v17 = *v14;
      swift_bridgeObjectRetain();
      sub_1C10CC6B0(a4, v17);
      swift_bridgeObjectRelease();
      sub_1C151855C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_1C10C4994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C0EF301C(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  int v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (unint64_t *)(a3 + 16);
  sub_1C1517E7C();
  sub_1C10C8E0C(a1, (uint64_t)v11, (uint64_t (*)(void))sub_1C0EF301C);
  swift_beginAccess();
  unint64_t v13 = *(void *)(a3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a3 + 16) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v13 = sub_1C0EE8920(0, *(void *)(v13 + 16) + 1, 1, v13);
    *uint64_t v12 = v13;
  }
  unint64_t v16 = *(void *)(v13 + 16);
  unint64_t v15 = *(void *)(v13 + 24);
  if (v16 >= v15 >> 1)
  {
    unint64_t v13 = sub_1C0EE8920(v15 > 1, v16 + 1, 1, v13);
    *uint64_t v12 = v13;
  }
  *(void *)(v13 + 16) = v16 + 1;
  sub_1C10C8F78((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v16, (uint64_t (*)(void))sub_1C0EF301C);
  swift_endAccess();
  sub_1C1517E8C();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = *(void *)(result + 16);
    id v19 = objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue), sel_operationCount);
    uint64_t v20 = *(void *)(a5 + 16);
    swift_retain();
    sub_1C10C3760((uint64_t)v19, v20, v18);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C10C4BC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v37 = a2;
  uint64_t v33 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (uint64_t)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v31);
  uint64_t v32 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0091A24(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151836C();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v36 = sub_1C151928C();
  uint64_t v11 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  unint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C151709C();
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C10C8F78((uint64_t)v19, (uint64_t)v6, type metadata accessor for FormatVersioningModeRelease);
      sub_1C151926C();
      uint64_t v20 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
      sub_1C151925C();
      return sub_1C10C9C9C((uint64_t)v6, type metadata accessor for FormatVersioningModeRelease);
    case 2u:
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v37, v19, v36);
    case 3u:
      uint64_t v22 = v35;
      sub_1C10C8E0C(v34, v35, (uint64_t (*)(void))type metadata accessor for FormatFile);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v23 = v32;
        sub_1C10C8F78(v22, v32, (uint64_t (*)(void))type metadata accessor for FormatPackage);
        uint64_t v24 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v23 + *(int *)(v31 + 96), v36);
        sub_1C10C9C9C(v23, (uint64_t (*)(void))type metadata accessor for FormatPackage);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v37, v13, v24);
      }
      else
      {
        sub_1C10C9C9C(v22, (uint64_t (*)(void))type metadata accessor for FormatFile);
LABEL_13:
        if (qword_1EB87BD00 != -1) {
          swift_once();
        }
        uint64_t v28 = v36;
        uint64_t v29 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB8799C8);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v37, v29, v28);
      }
    case 4u:
      goto LABEL_13;
    case 5u:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v25 = v36;
      uint64_t v26 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB8799C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v26, v25);
      sub_1C151926C();
      uint64_t v27 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v9, 1, 1, v27);
      sub_1C151925C();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v25);
    default:
      sub_1C10C8F78((uint64_t)v19, (uint64_t)v6, type metadata accessor for FormatVersioningModeRelease);
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v37, &v6[*(int *)(v4 + 20)], v36);
      return sub_1C10C9C9C((uint64_t)v6, type metadata accessor for FormatVersioningModeRelease);
  }
}

uint64_t sub_1C10C51E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v61 = a2;
  sub_1C01DDAA0();
  uint64_t v51 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v52 = v8;
  uint64_t v53 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10C9B20(0);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10C9B5C(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v50 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v59 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151928C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v62 = (uint64_t)&v49 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v49 = (char *)&v49 - v23;
  uint64_t v24 = a1[13];
  uint64_t v60 = v10;
  if (v24)
  {
    uint64_t v25 = v17;
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = (void *)sub_1C01DF5A4(v26);
    swift_bridgeObjectRelease();
    uint64_t v63 = v27;
    swift_bridgeObjectRetain();
    sub_1C01DFD7C(&v63);
    if (v3)
    {
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    swift_bridgeObjectRelease();
    uint64_t v28 = v63;
    uint64_t v17 = v25;
  }
  else
  {
    uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  sub_1C10C4BC0(a3 + *(int *)(v29 + 20), v62);
  uint64_t v30 = v28[2];
  if (v30)
  {
    uint64_t v57 = a1;
    uint64_t v58 = v4;
    uint64_t v56 = v17;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    unint64_t v32 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v33 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v34 = *(void *)(v17 + 72);
    swift_bridgeObjectRetain();
    unint64_t v55 = v28;
    uint64_t v35 = (char *)v28 + v32 + v34 * (v30 - 1);
    while (1)
    {
      v31(v19, v35, v16);
      sub_1C017E800((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
      if ((sub_1C151E57C() & 1) == 0) {
        break;
      }
      --v30;
      (*v33)(v19, v16);
      v35 -= v34;
      if (!v30)
      {
        uint64_t v36 = 1;
        a1 = v57;
        uint64_t v37 = (uint64_t)v59;
        uint64_t v17 = v56;
        goto LABEL_11;
      }
    }
    uint64_t v17 = v56;
    uint64_t v37 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v59, v19, v16);
    uint64_t v36 = 0;
    a1 = v57;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = 1;
    uint64_t v37 = (uint64_t)v59;
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v37, v36, 1, v16);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v38(v62, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v37, 1, v16) == 1)
  {
    sub_1C10C9C9C(v37, (uint64_t (*)(void))sub_1BFEC0CE8);
    sub_1C0335FB4(0);
    uint64_t v40 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v50, 1, 1, v39);
    uint64_t v41 = v54 + *(int *)(v60 + 48);
    sub_1C10C8F78(v40, v54, (uint64_t (*)(void))sub_1C10C9B5C);
    sub_1C10C9C6C((uint64_t)a1, v41);
    sub_1C10C9B90(0, &qword_1EA1AB328, (uint64_t (*)(uint64_t))sub_1C10C9B20, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    uint64_t v43 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v49, v37, v16);
    sub_1C0333480(v43, a1);
    uint64_t v44 = v53;
    sub_1C10C9C6C((uint64_t)a1, v53);
    unint64_t v45 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v46 = swift_allocObject();
    sub_1C10C9C84(v44, v46 + v45);
    unint64_t v47 = (void *)sub_1C1518E7C();
    uint64_t v42 = sub_1C1518FFC();
    swift_release();
    swift_release();

    v38(v43, v16);
  }
  return v42;
}

uint64_t sub_1C10C585C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C10C7378(a1, a2, (uint64_t (*)(void))sub_1C10C9B20, sub_1C10C9C6C, a3);
}

uint64_t sub_1C10C589C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v142 = a4;
  uint64_t v152 = a2;
  uint64_t v171 = a1;
  uint64_t v7 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v149 = (uint64_t)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v145 = (uint64_t)&v139 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v164 = (uint64_t)&v139 - v15;
  sub_1C10C9B5C(0);
  MEMORY[0x1F4188790](v16 - 8);
  double v146 = (void **)((char *)&v139 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  long long v151 = (id *)((char *)&v139 - v19);
  sub_1C10C9B90(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v155 = (uint64_t)&v139 - v21;
  unint64_t v154 = sub_1C152039C();
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  long long v150 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v158);
  uint64_t v159 = (uint64_t)&v139 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_1C151928C();
  uint64_t v167 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  uint64_t v160 = (uint64_t)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v141 = (uint64_t)&v139 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v144 = (uint64_t)&v139 - v28;
  MEMORY[0x1F4188790](v29);
  unint64_t v157 = (unint64_t)&v139 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v166 = (char *)&v139 - v32;
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v33 - 8);
  long long v148 = (char *)&v139 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v162 = (uint64_t)&v139 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v139 - v38;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v139 - v41;
  uint64_t v43 = sub_1C15152DC();
  MEMORY[0x1F4188790](v43);
  uint64_t v147 = a3;
  if (sub_1C01DFBD0())
  {
    uint64_t v44 = *v171;
    type metadata accessor for DebugFormatUploadHiddenEntry();
    type metadata accessor for DebugFormatUploadHiddenReason();
    swift_storeEnumTagMultiPayload();
    *a5 = v44;
    type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
    swift_storeEnumTagMultiPayload();
    return swift_retain();
  }
  uint64_t v143 = v9;
  long long v139 = v11;
  unsigned long long v140 = a5;
  sub_1C151536C();
  swift_allocObject();
  uint64_t v46 = sub_1C151535C();
  sub_1C10C9B90(0, &qword_1EA198310, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBBE00]);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C152C7F0;
  sub_1C15152AC();
  sub_1C15152CC();
  sub_1C15152BC();
  *(void *)&v170[0] = v47;
  sub_1C017E800(&qword_1EA198318, MEMORY[0x1E4F26CD0]);
  sub_1C10C9CFC(0);
  sub_1C017E800((unint64_t *)&qword_1EA198328, sub_1C10C9CFC);
  sub_1C151FFBC();
  uint64_t v156 = v46;
  sub_1C15152EC();
  sub_1C10C87EC((uint64_t)v171, (uint64_t)v42);
  uint64_t v161 = v42;
  sub_1C10C8E0C((uint64_t)v42, (uint64_t)v39, (uint64_t (*)(void))sub_1BFEC0CE8);
  uint64_t v48 = v167;
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48);
  uint64_t v50 = v165;
  if (v49(v39, 1, v165) == 1)
  {
    uint64_t v51 = v162;
    if (qword_1EB87BD00 != -1) {
      swift_once();
    }
    uint64_t v52 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB8799C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v166, v52, v50);
    uint64_t v53 = v50;
    sub_1C10C9C9C((uint64_t)v39, (uint64_t (*)(void))sub_1BFEC0CE8);
    uint64_t v54 = v168;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v166, v39, v50);
    uint64_t v54 = v168;
    uint64_t v53 = v50;
    uint64_t v51 = v162;
  }
  uint64_t v55 = (uint64_t)v161;
  sub_1C10C8E0C((uint64_t)v161, v51, (uint64_t (*)(void))sub_1BFEC0CE8);
  if (v49((char *)v51, 1, v53) == 1)
  {
    sub_1C10C9C9C(v51, (uint64_t (*)(void))sub_1BFEC0CE8);
  }
  else
  {
    uint64_t v56 = v53;
    uint64_t v57 = v167;
    unint64_t v58 = v157;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v167 + 32))(v157, v51, v53);
    uint64_t v59 = v159;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v57 + 16))(v159, v58, v53);
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = (void (*)(_OWORD *, void))sub_1C151534C();
    Dictionary<>.seedFormatCodingVersion(mode:)(v59);
    sub_1C10C9C9C(v59, type metadata accessor for FormatVersioningMode);
    v60(v170, 0);
    uint64_t v61 = v56;
    uint64_t v55 = (uint64_t)v161;
    (*(void (**)(unint64_t, uint64_t))(v57 + 8))(v58, v61);
  }
  uint64_t v62 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  uint64_t v63 = (uint64_t)v171 + *(int *)(v62 + 20);
  uint64_t v64 = sub_1C017E800(&qword_1EA198330, (void (*)(uint64_t))type metadata accessor for FormatFile);
  uint64_t v65 = sub_1C151533C();
  uint64_t v67 = v164;
  if (v54)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v166, v165);
    return sub_1C10C9C9C(v55, (uint64_t (*)(void))sub_1BFEC0CE8);
  }
  unint64_t v157 = v64;
  uint64_t v158 = v62;
  uint64_t v162 = v65;
  unint64_t v163 = v66;
  uint64_t v159 = v63;
  uint64_t v168 = 0;
  uint64_t v68 = v155;
  sub_1C152038C();
  uint64_t v69 = v153;
  unint64_t v70 = v154;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v153 + 48))(v68, 1, v154);
  uint64_t v71 = v167;
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v72 = (uint64_t)v150;
    (*(void (**)(char *, uint64_t, unint64_t))(v69 + 32))(v150, v68, v70);
    memset(v170, 0, sizeof(v170));
    unint64_t v73 = (void (*)(char *, void))sub_1C151534C();
    sub_1C02E79E0((uint64_t)v170, v72);
    v73(v169, 0);
    uint64_t v74 = v152;
    unsigned long long v75 = v151;
    sub_1C10C8E0C(v152, (uint64_t)v151, (uint64_t (*)(void))sub_1C10C9B5C);
    sub_1C0335FB4(0);
    uint64_t v77 = v76;
    uint64_t v78 = *(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v76 - 8) + 48);
    if (v78(v75, 1, v76) == 1)
    {
LABEL_18:
      uint64_t v79 = v71;
      (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v160, v166, v165);
      uint64_t v80 = v146;
      sub_1C10C8E0C(v74, (uint64_t)v146, (uint64_t (*)(void))sub_1C10C9B5C);
      if (v78(v80, 1, v77) == 1)
      {
        sub_1C10C9C9C((uint64_t)v80, (uint64_t (*)(void))sub_1C10C9B5C);
        uint64_t v81 = 0;
        uint64_t v82 = v147;
        uint64_t v83 = v171;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v82 = v147;
        uint64_t v83 = v171;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v81 = *v80;
        }
        else
        {
          sub_1C10C9C9C((uint64_t)v80, (uint64_t (*)(void))sub_1C0335FB4);
          uint64_t v81 = 0;
        }
      }
      uint64_t v95 = v165;
      uint64_t v96 = (uint64_t)v148;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v148, 1, 1, v165);
      uint64_t v97 = sub_1C01DF974();
      uint64_t v98 = *v83;
      uint64_t v99 = v82;
      uint64_t v100 = v149;
      sub_1C10C8E0C(v99, v149, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadRemotePackage);
      type metadata accessor for DebugFormatUploadDiff();
      swift_allocObject();
      swift_retain();
      uint64_t v101 = sub_1C00BFAB0(v162, v163, v160, 0, 0xF000000000000000, v81, v96, (uint64_t)v97, v98, v100);
      swift_release();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v166, v95);
      sub_1C10C9C9C((uint64_t)v161, (uint64_t (*)(void))sub_1BFEC0CE8);
      uint64_t v102 = *v83;
      uint64_t v103 = (uint64_t)v139;
      sub_1C10C8E0C(v159, (uint64_t)v139, (uint64_t (*)(void))type metadata accessor for FormatFile);
      uint64_t v104 = (char *)v83 + *(int *)(v158 + 24);
      uint64_t v105 = *(void *)v104;
      uint64_t v106 = *((void *)v104 + 1);
      unsigned __int8 v107 = v104[16];
      type metadata accessor for DebugFormatUploadEntry();
      uint64_t v108 = swift_allocObject();
      *(void *)(v108 + 16) = v102;
      sub_1C10C8F78(v103, v108 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(void))type metadata accessor for FormatFile);
      uint64_t v109 = v108 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
      *(void *)uint64_t v109 = v105;
      *(void *)(v109 + 8) = v106;
      *(unsigned char *)(v109 + 16) = v107;
      *(void *)(v108 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = v101;
      uint64_t *v140 = v108;
      type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
    {

      goto LABEL_18;
    }
    sub_1C10C8F78((uint64_t)v75, v67, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v85 = v145;
    uint64_t v86 = v144;
    uint64_t v87 = v67;
    uint64_t v88 = v166;
    sub_1C10C7690(v145, v144, v87, v166);
    uint64_t v89 = v168;
    uint64_t v90 = sub_1C151533C();
    if (v89)
    {
      swift_release();
      sub_1BFE95664(v162, v163);
      uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      uint64_t v93 = v86;
      uint64_t v94 = v165;
      v92(v93, v165);
      sub_1C10C9C9C(v85, (uint64_t (*)(void))type metadata accessor for FormatFile);
      sub_1C10C9C9C(v164, (uint64_t (*)(void))type metadata accessor for FormatFile);
      v92((uint64_t)v88, v94);
      uint64_t v55 = (uint64_t)v161;
      return sub_1C10C9C9C(v55, (uint64_t (*)(void))sub_1BFEC0CE8);
    }
    uint64_t v110 = v90;
    unint64_t v111 = v91;
    if ((v142 & 1) == 0 || (sub_1C10CA134(v162, v163, v90, v91) & 1) == 0)
    {
      uint64_t v160 = v110;
      uint64_t v116 = sub_1C151533C();
      uint64_t v168 = 0;
      uint64_t v117 = v144;
      uint64_t v118 = v167;
      uint64_t v119 = v165;
      long long v120 = v171;
      unsigned long long v121 = *(void (**)(uint64_t, char *, uint64_t))(v167 + 16);
      uint64_t v155 = v116;
      unint64_t v154 = v122;
      v121(v141, v166, v165);
      unint64_t v157 = v111;
      uint64_t v123 = (uint64_t)v148;
      v121((uint64_t)v148, (char *)v117, v119);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56))(v123, 0, 1, v119);
      uint64_t v124 = v155;
      unint64_t v125 = v154;
      sub_1BFE95820(v155, v154);
      uint64_t v126 = v147;
      uint64_t v127 = sub_1C01DF974();
      uint64_t v128 = *v120;
      uint64_t v129 = v126;
      uint64_t v130 = v149;
      sub_1C10C8E0C(v129, v149, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadRemotePackage);
      type metadata accessor for DebugFormatUploadDiff();
      swift_allocObject();
      swift_retain();
      uint64_t v131 = sub_1C00BFAB0(v162, v163, v141, v124, v125, 0, v123, (uint64_t)v127, v128, v130);
      sub_1BFE95664(v160, v157);
      swift_release();
      sub_1BFE95664(v124, v125);
      long long v132 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
      uint64_t v133 = v165;
      v132(v144, v165);
      sub_1C10C9C9C(v145, (uint64_t (*)(void))type metadata accessor for FormatFile);
      sub_1C10C9C9C(v164, (uint64_t (*)(void))type metadata accessor for FormatFile);
      v132((uint64_t)v166, v133);
      sub_1C10C9C9C((uint64_t)v161, (uint64_t (*)(void))sub_1BFEC0CE8);
      uint64_t v134 = *v120;
      uint64_t v135 = (uint64_t)v139;
      sub_1C10C8E0C(v159, (uint64_t)v139, (uint64_t (*)(void))type metadata accessor for FormatFile);
      long long v136 = (char *)v120 + *(int *)(v158 + 24);
      uint64_t v105 = *(void *)v136;
      uint64_t v106 = *((void *)v136 + 1);
      unsigned __int8 v107 = v136[16];
      type metadata accessor for DebugFormatUploadEntry();
      uint64_t v137 = swift_allocObject();
      *(void *)(v137 + 16) = v134;
      sub_1C10C8F78(v135, v137 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(void))type metadata accessor for FormatFile);
      uint64_t v138 = v137 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
      *(void *)uint64_t v138 = v105;
      *(void *)(v138 + 8) = v106;
      *(unsigned char *)(v138 + 16) = v107;
      *(void *)(v137 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = v131;
      uint64_t *v140 = v137;
      type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
      swift_storeEnumTagMultiPayload();
LABEL_26:
      swift_retain();
      return sub_1BFDCA484(v105, v106, v107);
    }
    sub_1BFE95664(v110, v111);
    swift_release();
    sub_1BFE95664(v162, v163);
    sub_1C10C9C9C(v145, (uint64_t (*)(void))type metadata accessor for FormatFile);
    sub_1C10C9C9C(v164, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v112 = v165;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v166, v165);
    sub_1C10C9C9C((uint64_t)v161, (uint64_t (*)(void))sub_1BFEC0CE8);
    uint64_t v113 = *v171;
    uint64_t v114 = type metadata accessor for DebugFormatUploadHiddenEntry();
    uint64_t v115 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))((char *)v140 + *(int *)(v114 + 20), v144, v112);
    type metadata accessor for DebugFormatUploadHiddenReason();
    swift_storeEnumTagMultiPayload();
    *uint64_t v115 = v113;
    type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
    swift_storeEnumTagMultiPayload();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C10C6CBC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v61 = a2;
  sub_1C01DDB34();
  uint64_t v51 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v52 = v8;
  uint64_t v53 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10CA778(0);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10C9B5C(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v50 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v59 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151928C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v62 = (uint64_t)&v49 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v49 = (char *)&v49 - v23;
  uint64_t v24 = a1[12];
  uint64_t v60 = v10;
  if (v24)
  {
    uint64_t v25 = v17;
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = (void *)sub_1C01DF5A4(v26);
    swift_bridgeObjectRelease();
    uint64_t v63 = v27;
    swift_bridgeObjectRetain();
    sub_1C01DFD7C(&v63);
    if (v3)
    {
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    swift_bridgeObjectRelease();
    uint64_t v28 = v63;
    uint64_t v17 = v25;
  }
  else
  {
    uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  sub_1C10C4BC0(a3 + *(int *)(v29 + 20), v62);
  uint64_t v30 = v28[2];
  if (v30)
  {
    uint64_t v57 = a1;
    uint64_t v58 = v4;
    uint64_t v56 = v17;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    unint64_t v32 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v33 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v34 = *(void *)(v17 + 72);
    swift_bridgeObjectRetain();
    uint64_t v55 = v28;
    uint64_t v35 = (char *)v28 + v32 + v34 * (v30 - 1);
    while (1)
    {
      v31(v19, v35, v16);
      sub_1C017E800((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
      if ((sub_1C151E57C() & 1) == 0) {
        break;
      }
      --v30;
      (*v33)(v19, v16);
      v35 -= v34;
      if (!v30)
      {
        uint64_t v36 = 1;
        a1 = v57;
        uint64_t v37 = (uint64_t)v59;
        uint64_t v17 = v56;
        goto LABEL_11;
      }
    }
    uint64_t v17 = v56;
    uint64_t v37 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v59, v19, v16);
    uint64_t v36 = 0;
    a1 = v57;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = 1;
    uint64_t v37 = (uint64_t)v59;
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v37, v36, 1, v16);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v38(v62, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v37, 1, v16) == 1)
  {
    sub_1C10C9C9C(v37, (uint64_t (*)(void))sub_1BFEC0CE8);
    sub_1C0335FB4(0);
    uint64_t v40 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v50, 1, 1, v39);
    uint64_t v41 = v54 + *(int *)(v60 + 48);
    sub_1C10C8F78(v40, v54, (uint64_t (*)(void))sub_1C10C9B5C);
    sub_1C10CB2F4((uint64_t)a1, v41);
    sub_1C10C9B90(0, &qword_1EA1AB338, (uint64_t (*)(uint64_t))sub_1C10CA778, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    uint64_t v43 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v49, v37, v16);
    sub_1C0333E48(v43, a1);
    uint64_t v44 = v53;
    sub_1C10CB2F4((uint64_t)a1, v53);
    unint64_t v45 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v46 = swift_allocObject();
    sub_1C10CB30C(v44, v46 + v45);
    uint64_t v47 = (void *)sub_1C1518E7C();
    uint64_t v42 = sub_1C1518FFC();
    swift_release();
    swift_release();

    v38(v43, v16);
  }
  return v42;
}

uint64_t sub_1C10C7338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C10C7378(a1, a2, (uint64_t (*)(void))sub_1C10CA778, sub_1C10CB2F4, a3);
}

uint64_t sub_1C10C7378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a5 + *(int *)(a3(0) + 48);
  sub_1C10C8E0C(a1, a5, (uint64_t (*)(void))sub_1C0335FB4);
  sub_1C0335FB4(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a5, 0, 1, v10);
  return a4(a2, v9);
}

uint64_t sub_1C10C7440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, uint64_t (*a5)(void)@<X4>, void (*a6)(uint64_t, char *)@<X5>, void (*a7)(char *, char *)@<X6>, int a8@<W7>, uint64_t *a9@<X8>)
{
  int v25 = a8;
  int v27 = a4;
  uint64_t v24 = a3;
  uint64_t v26 = a2;
  uint64_t v13 = a5(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(int *)(v14 + 56);
  uint64_t v21 = &v16[v20];
  uint64_t v22 = a1 + v20;
  sub_1C10C8E0C(a1, (uint64_t)v16, (uint64_t (*)(void))sub_1C10C9B5C);
  a6(v22, v21);
  a7(v21, v19);
  swift_storeEnumTagMultiPayload();
  sub_1C10C589C(v24, a1, (uint64_t)v19, v27, a9);
  sub_1C10C9C9C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadRemotePackage);
  return sub_1C10C9C9C((uint64_t)v16, (uint64_t (*)(void))sub_1C10C9B5C);
}

id sub_1C10C75F8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a2;
  *(void *)((char *)a3 + *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20)) = a1;
  type metadata accessor for DebugFormatUploadHiddenReason();
  swift_storeEnumTagMultiPayload();
  *a3 = v5;
  type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  return a1;
}

uint64_t sub_1C10C7690(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v180 = a4;
  uint64_t v177 = a1;
  uint64_t v178 = a2;
  sub_1C10CA3CC(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v162 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v159 = (char *)&v145 - v8;
  uint64_t v9 = sub_1C151836C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v175 = v9;
  uint64_t v176 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v171 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v174 = (char *)&v145 - v13;
  sub_1C0091A24(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v155 = (char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v156 = (char *)&v145 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v161 = (char *)&v145 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v145 - v21;
  MEMORY[0x1F4188790](v23);
  int v25 = (char *)&v145 - v24;
  MEMORY[0x1F4188790](v26);
  unint64_t v170 = (char *)&v145 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v165 = (char *)&v145 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v173 = (char *)&v145 - v31;
  uint64_t v179 = sub_1C151928C();
  uint64_t v181 = *(void *)(v179 - 8);
  MEMORY[0x1F4188790](v179);
  uint64_t v158 = (char *)&v145 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v160 = (char *)&v145 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v145 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v145 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v169 = (char *)&v145 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v172 = (char *)&v145 - v44;
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (char *)&v145 - v46;
  uint64_t v48 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v48);
  uint64_t v164 = (char *)&v145 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)&v145 - v51;
  uint64_t v53 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v145 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10C8E0C(a3, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatFile);
  uint64_t v163 = v53;
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1C10C8E0C(a3, v177, (uint64_t (*)(void))type metadata accessor for FormatFile);
    (*(void (**)(uint64_t, char *, uint64_t))(v181 + 16))(v178, v180, v179);
    uint64_t v68 = type metadata accessor for FormatFile;
LABEL_6:
    uint64_t v69 = v68;
    uint64_t v70 = (uint64_t)v55;
    return sub_1C10C9C9C(v70, (uint64_t (*)(void))v69);
  }
  long long v150 = v25;
  uint64_t v153 = v37;
  unint64_t v157 = v40;
  long long v148 = v22;
  uint64_t v152 = a3;
  sub_1C10C8F78((uint64_t)v55, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  uint64_t v56 = v181 + 16;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v181 + 16);
  uint64_t v58 = v179;
  v57(v47, &v52[*(int *)(v48 + 96)], v179);
  uint64_t v59 = (uint64_t)v173;
  sub_1C151927C();
  uint64_t v60 = sub_1C15187BC();
  uint64_t v147 = *(void *)(v60 - 8);
  uint64_t v61 = v147 + 48;
  uint64_t v166 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
  int v62 = v166(v59, 1, v60);
  sub_1C10C9C9C(v59, (uint64_t (*)(void))sub_1C0091A24);
  uint64_t v63 = v172;
  uint64_t v167 = (void (*)(char *, uint64_t, uint64_t))v57;
  uint64_t v168 = v56;
  v57(v172, v180, v58);
  BOOL v64 = v62 == 1;
  uint64_t v65 = v47;
  uint64_t v149 = v48;
  unint64_t v154 = v52;
  if (v64)
  {
    uint64_t v76 = v181;
    uint64_t v77 = *(void (**)(char *, uint64_t))(v181 + 8);
    v77(v63, v58);
    uint64_t v66 = v61;
    uint64_t v74 = v166;
    uint64_t v67 = v58;
  }
  else
  {
    uint64_t v72 = (uint64_t)v165;
    unint64_t v73 = v65;
    sub_1C151927C();
    uint64_t v74 = v166;
    int v75 = v166(v72, 1, v60);
    sub_1C10C9C9C(v72, (uint64_t (*)(void))sub_1C0091A24);
    uint64_t v76 = v181;
    uint64_t v77 = *(void (**)(char *, uint64_t))(v181 + 8);
    v77(v63, v58);
    BOOL v64 = v75 == 1;
    uint64_t v65 = v73;
    uint64_t v66 = v61;
    uint64_t v67 = v58;
    if (v64)
    {
      sub_1C10C9C9C((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      sub_1C10C8E0C(v152, v177, (uint64_t (*)(void))type metadata accessor for FormatFile);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v76 + 32))(v178, v65, v58);
    }
  }
  uint64_t v78 = v76;
  uint64_t v79 = (uint64_t)v170;
  uint64_t v173 = v65;
  sub_1C151927C();
  int v80 = v74(v79, 1, v60);
  sub_1C10C9C9C(v79, (uint64_t (*)(void))sub_1C0091A24);
  uint64_t v81 = v169;
  v167(v169, (uint64_t)v180, v67);
  unint64_t v170 = (char *)v60;
  uint64_t v151 = v66;
  if (v80 == 1)
  {
    uint64_t v82 = (uint64_t)v150;
    sub_1C151927C();
    LODWORD(v172) = v74(v82, 1, v60) != 1;
    sub_1C10C9C9C(v82, (uint64_t (*)(void))sub_1C0091A24);
  }
  else
  {
    LODWORD(v172) = 0;
  }
  v77(v81, v67);
  uint64_t v83 = v67;
  uint64_t v84 = v157;
  uint64_t v85 = v77;
  uint64_t v86 = (void (*)(char *, char *, uint64_t))v167;
  ((void (*)(void))v167)();
  uint64_t v87 = v153;
  v86(v153, v173, v67);
  uint64_t v165 = (char *)(v78 + 8);
  if (v172)
  {
    uint64_t v88 = v174;
    sub_1C151926C();
    uint64_t v172 = (char *)sub_1C151835C();
    uint64_t v89 = *(void (**)(char *, uint64_t))(v176 + 8);
    uint64_t v90 = v175;
    v89(v88, v175);
    unint64_t v91 = v171;
    sub_1C151926C();
    uint64_t v92 = sub_1C151835C();
    v89(v91, v90);
    uint64_t v93 = v176;
    uint64_t v94 = v180;
    v85(v87, v83);
    v85(v157, v83);
    uint64_t v95 = v85;
    if (v172 == (char *)v92)
    {
      uint64_t v55 = v164;
      sub_1C10C8F78((uint64_t)v154, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      uint64_t v96 = v181;
      (*(void (**)(char *, char *, uint64_t))(v181 + 24))(&v55[*(int *)(v149 + 96)], v94, v83);
      sub_1C10C8E0C((uint64_t)v55, v177, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v178, v173, v83);
      uint64_t v68 = type metadata accessor for FormatPackage;
      goto LABEL_6;
    }
  }
  else
  {
    v85(v87, v67);
    v85(v84, v67);
    uint64_t v90 = v175;
    uint64_t v93 = v176;
    uint64_t v95 = v85;
    unint64_t v91 = v171;
    uint64_t v88 = v174;
  }
  sub_1C151926C();
  uint64_t v97 = sub_1C151835C();
  uint64_t v98 = v88;
  uint64_t v99 = v97;
  uint64_t v100 = *(void (**)(char *, uint64_t))(v93 + 8);
  v100(v98, v90);
  uint64_t v101 = v173;
  sub_1C151926C();
  uint64_t v102 = sub_1C151835C();
  v100(v91, v90);
  if (v99 != v102)
  {
    sub_1C10C9C9C((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    sub_1C10C8E0C(v152, v177, (uint64_t (*)(void))type metadata accessor for FormatFile);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v181 + 32))(v178, v101, v83);
  }
  uint64_t v103 = (uint64_t)v148;
  sub_1C151927C();
  uint64_t v104 = v170;
  int v105 = v166(v103, 1, (uint64_t)v170);
  double v146 = v95;
  uint64_t v106 = v100;
  if (v105 == 1)
  {
    unsigned __int8 v107 = sub_1C0091A24;
    uint64_t v108 = v103;
LABEL_24:
    sub_1C10C9C9C(v108, (uint64_t (*)(void))v107);
    uint64_t v111 = 0;
    int v112 = 1;
    goto LABEL_26;
  }
  uint64_t v109 = v159;
  sub_1C15187AC();
  (*(void (**)(uint64_t, char *))(v147 + 8))(v103, v104);
  uint64_t v110 = v175;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v109, 1, v175) == 1)
  {
    unsigned __int8 v107 = sub_1C10CA3CC;
    uint64_t v108 = (uint64_t)v109;
    goto LABEL_24;
  }
  uint64_t v111 = sub_1C151835C();
  v106(v109, v110);
  int v112 = 0;
LABEL_26:
  uint64_t v113 = v174;
  uint64_t v115 = (uint64_t)v161;
  uint64_t v114 = (uint64_t)v162;
  uint64_t v116 = v181;
  sub_1C151927C();
  uint64_t v117 = v170;
  if (v166(v115, 1, (uint64_t)v170) != 1)
  {
    uint64_t v130 = v115;
    uint64_t v131 = v116;
    sub_1C15187AC();
    (*(void (**)(uint64_t, char *))(v147 + 8))(v130, v117);
    uint64_t v132 = v175;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v114, 1, v175) == 1)
    {
      sub_1C10C9C9C(v114, (uint64_t (*)(void))sub_1C10CA3CC);
      uint64_t v118 = v173;
      uint64_t v116 = v131;
      if (v112) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v141 = sub_1C151835C();
      v106((char *)v114, v132);
      if (v111 == v141) {
        int v142 = v112;
      }
      else {
        int v142 = 1;
      }
      uint64_t v118 = v173;
      uint64_t v116 = v131;
      if (v142 != 1) {
        goto LABEL_28;
      }
    }
LABEL_40:
    sub_1C10C9C9C((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    sub_1C10C8E0C(v152, v177, (uint64_t (*)(void))type metadata accessor for FormatFile);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v116 + 32))(v178, v118, v179);
  }
  sub_1C10C9C9C(v115, (uint64_t (*)(void))sub_1C0091A24);
  uint64_t v118 = v173;
  if ((v112 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_28:
  uint64_t v119 = v180;
  sub_1C151926C();
  long long v120 = v113;
  unsigned long long v121 = v171;
  sub_1C151926C();
  sub_1C017E800(&qword_1EA1AB320, MEMORY[0x1E4FAAA10]);
  uint64_t v122 = v175;
  uint64_t v123 = v118;
  char v124 = sub_1C151E5CC();
  v106(v121, v122);
  v106(v120, v122);
  unint64_t v125 = v160;
  uint64_t v126 = v179;
  uint64_t v127 = v167;
  v167(v160, (uint64_t)v123, v179);
  if (v124)
  {
    uint64_t v128 = v146;
    v146(v125, v126);
    uint64_t v129 = v158;
    v127(v158, (uint64_t)v119, v126);
LABEL_34:
    v128(v129, v126);
    uint64_t v137 = v177;
    uint64_t v136 = v178;
    uint64_t v138 = (uint64_t)v154;
    uint64_t v139 = v181;
LABEL_35:
    uint64_t v140 = (uint64_t)v164;
    sub_1C10C8F78(v138, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    (*(void (**)(uint64_t, char *, uint64_t))(v139 + 24))(v140 + *(int *)(v149 + 96), v119, v126);
    sub_1C10C8E0C(v140, v137, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, char *, uint64_t))(v139 + 32))(v136, v173, v126);
    uint64_t v69 = type metadata accessor for FormatPackage;
    uint64_t v70 = v140;
    return sub_1C10C9C9C(v70, (uint64_t (*)(void))v69);
  }
  uint64_t v133 = (uint64_t)v156;
  sub_1C151927C();
  uint64_t v128 = v146;
  v146(v125, v126);
  uint64_t v134 = (uint64_t (*)(uint64_t, uint64_t, char *))v166;
  int v135 = v166(v133, 1, (uint64_t)v170);
  sub_1C10C9C9C(v133, (uint64_t (*)(void))sub_1C0091A24);
  uint64_t v129 = v158;
  v127(v158, (uint64_t)v119, v126);
  if (v135 == 1) {
    goto LABEL_34;
  }
  uint64_t v143 = (uint64_t)v155;
  sub_1C151927C();
  v128(v129, v126);
  int v144 = v134(v143, 1, v170);
  sub_1C10C9C9C(v143, (uint64_t (*)(void))sub_1C0091A24);
  BOOL v64 = v144 == 1;
  uint64_t v137 = v177;
  uint64_t v136 = v178;
  uint64_t v138 = (uint64_t)v154;
  uint64_t v139 = v181;
  if (v64) {
    goto LABEL_35;
  }
  sub_1C10C9C9C((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1C10C8E0C(v152, v137, (uint64_t (*)(void))type metadata accessor for FormatFile);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v139 + 32))(v136, v173, v126);
}

uint64_t sub_1C10C87EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v34 = a2;
  uint64_t v33 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v33);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v30);
  uint64_t v31 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0091A24(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151836C();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v35 = sub_1C151928C();
  uint64_t v12 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C151709C();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v19 = 1;
  uint64_t v20 = v34;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1C10C8F78((uint64_t)v17, (uint64_t)v7, type metadata accessor for FormatVersioningModeRelease);
      sub_1C151926C();
      uint64_t v21 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
      sub_1C151925C();
      goto LABEL_4;
    case 2:
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v34, v17, v35);
      uint64_t v19 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, v19, 1, v35);
    case 3:
      uint64_t v24 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
      sub_1C10C8E0C(v32 + *(int *)(v24 + 20), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatFile);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v25 = v31;
        sub_1C10C8F78((uint64_t)v3, v31, (uint64_t (*)(void))type metadata accessor for FormatPackage);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v20, v25 + *(int *)(v30 + 96), v35);
        uint64_t v22 = (uint64_t (*)(void))type metadata accessor for FormatPackage;
        uint64_t v23 = v25;
LABEL_8:
        sub_1C10C9C9C(v23, v22);
        uint64_t v19 = 0;
      }
      else
      {
        sub_1C10C9C9C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatFile);
        uint64_t v19 = 1;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, v19, 1, v35);
    case 4:
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, v19, 1, v35);
    case 5:
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v26 = v35;
      uint64_t v27 = __swift_project_value_buffer(v35, (uint64_t)qword_1EB8799C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v27, v26);
      sub_1C151926C();
      uint64_t v28 = sub_1C15187BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
      sub_1C151925C();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
      uint64_t v19 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, v19, 1, v35);
    default:
      sub_1C10C8F78((uint64_t)v17, (uint64_t)v7, type metadata accessor for FormatVersioningModeRelease);
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v20, &v7[*(int *)(v5 + 20)], v35);
LABEL_4:
      uint64_t v22 = type metadata accessor for FormatVersioningModeRelease;
      uint64_t v23 = (uint64_t)v7;
      goto LABEL_8;
  }
}

uint64_t type metadata accessor for DebugFormatUploadDataSource()
{
  return self;
}

uint64_t type metadata accessor for DebugFormatUploadPrivateEntry(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EA1AB368);
}

uint64_t sub_1C10C8E0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C10C8E74()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10C8EAC()
{
  return sub_1C032FB70();
}

uint64_t sub_1C10C8ED0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C10C8F08()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C10C8F60(uint64_t a1)
{
  sub_1C10C4860(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1C10C8F78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C10C8FE0()
{
  uint64_t v1 = *(void *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8);
  uint64_t v2 = (uint64_t *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  return sub_1C10C4144(v2);
}

uint64_t type metadata accessor for DebugFormatUploadPrivateEntryResult(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1AB358);
}

uint64_t sub_1C10C9060()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10C90B8(uint64_t a1)
{
  return sub_1C10C4994(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C10C90D0()
{
  return sub_1C10C9134((uint64_t (*)(unint64_t, void))sub_1C10C3C20);
}

uint64_t sub_1C10C911C()
{
  return sub_1C10C9134((uint64_t (*)(unint64_t, void))sub_1C10C42DC);
}

uint64_t sub_1C10C9134(uint64_t (*a1)(unint64_t, void))
{
  uint64_t v3 = *(void *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a1(v1 + v4, *(unsigned __int8 *)(v1 + v4 + *(void *)(v3 + 64)));
}

uint64_t sub_1C10C91C4()
{
  return sub_1C10CA688((uint64_t (*)(void, void))sub_1C0331B20);
}

uint64_t objectdestroy_9Tm_1()
{
  uint64_t v1 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FormatContent(0);
      uint64_t v5 = v3 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v3 + *(int *)(v4 + 40);
      uint64_t v8 = sub_1C151D6DC();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v3 + 106) != 255)
      {
        uint64_t v10 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
        sub_1C0EBB9C8(*(void *)(v3 + 96), v10, SBYTE2(v10), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 168) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v28 = (int *)type metadata accessor for FormatPackage();
      uint64_t v11 = v3 + v28[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v13 = v11 + *(int *)(v12 + 24);
      if (*(void *)(v13 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v14 = v13 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v15 = sub_1C1518CDC();
      uint64_t v29 = *(void *)(v15 - 8);
      uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      if (!v30(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v15);
      }
      uint64_t v16 = v11 + *(int *)(v12 + 28);
      if (!v30(v16, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v16, v15);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = v3 + v28[24];
      uint64_t v18 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      uint64_t v19 = v3 + v28[25];
      if (!v30(v19, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v15);
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(unsigned char *)(v3 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      uint64_t v21 = type metadata accessor for FormatContent(0);
      uint64_t v22 = v20 + *(int *)(v21 + 20);
      uint64_t v23 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v20 + *(int *)(v21 + 40);
      uint64_t v25 = sub_1C151D6DC();
      uint64_t v26 = *(void *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      }
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1BFDCA350(*(void *)(v2 + *(int *)(v1 + 24)), *(void *)(v2 + *(int *)(v1 + 24) + 8), *(unsigned char *)(v2 + *(int *)(v1 + 24) + 16));
  return swift_deallocObject();
}

uint64_t sub_1C10C9AF4(uint64_t a1, uint64_t a2)
{
  return sub_1C10CA6F4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C10C51E0);
}

void sub_1C10C9B20(uint64_t a1)
{
}

void sub_1C10C9B5C(uint64_t a1)
{
}

void sub_1C10C9B90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C10C9BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C10CB19C(a1, a2, (uint64_t (*)(void))sub_1C10C9B20, (void (*)(uint64_t, char *))sub_1C10C9C6C, (void (*)(char *, char *))sub_1C10C9C84, 0, a3);
}

id sub_1C10C9C54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C10CB278(a1, a2);
}

uint64_t sub_1C10C9C6C(uint64_t a1, uint64_t a2)
{
  return sub_1C10C8E0C(a1, a2, (uint64_t (*)(void))sub_1C01DDAA0);
}

uint64_t sub_1C10C9C84(uint64_t a1, uint64_t a2)
{
  return sub_1C10C8F78(a1, a2, (uint64_t (*)(void))sub_1C01DDAA0);
}

uint64_t sub_1C10C9C9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C10C9CFC(uint64_t a1)
{
}

uint64_t sub_1C10C9D30@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1BFE95820(a2, a3);
      uint64_t v10 = (char *)sub_1C151572C();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1C151575C();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1C151574C();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C10C9F94);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1BFE95664(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1C151572C();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1C151575C();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1C151574C();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1C10C9FA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1C10C9D30((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1C10CA07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1C151572C();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1C151575C();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C151574C();
  sub_1C10C9D30(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1C10CA134(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1C10CA39CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1BFE95820(a3, a4);
                  sub_1BFE95820(a1, a2);
                  char v17 = sub_1C10CA07C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1BFE95664(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1BFE95820(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1C10CA07C(v21, v22, v20, a3, a4);
                  sub_1BFE95664(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1BFE95820(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1BFE95820(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1C10C9FA4(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1BFE95664(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

void sub_1C10CA3CC(uint64_t a1)
{
}

uint64_t sub_1C10CA400()
{
  sub_1C01DDAA0();
  uint64_t v2 = v1;
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for DebugNewsroomLayoutData();
  uint64_t v5 = v3 + *(int *)(v4 + 52);
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = v3 + *(int *)(v2 + 36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 + *(int *)(v4 + 52);
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10CA61C(uint64_t a1)
{
  return sub_1C10CB580(a1, (uint64_t (*)(void))sub_1C01DDAA0, (uint64_t (*)(uint64_t, unint64_t))sub_1C10C585C);
}

uint64_t sub_1C10CA65C()
{
  return sub_1C10CA688((uint64_t (*)(void, void))sub_1C0331ED4);
}

uint64_t sub_1C10CA688(uint64_t (*a1)(void, void))
{
  return a1(*(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C10CA6C8(uint64_t a1, uint64_t a2)
{
  return sub_1C10CA6F4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C10C6CBC);
}

uint64_t sub_1C10CA6F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v7 = *(void *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8);
  return a3(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

void sub_1C10CA778(uint64_t a1)
{
}

void sub_1C10CA7B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t objectdestroy_25Tm_2()
{
  uint64_t v1 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FormatContent(0);
      uint64_t v5 = v3 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v3 + *(int *)(v4 + 40);
      uint64_t v8 = sub_1C151D6DC();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v3 + 106) != 255)
      {
        uint64_t v10 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
        sub_1C0EBB9C8(*(void *)(v3 + 96), v10, SBYTE2(v10), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 168) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      char v28 = (int *)type metadata accessor for FormatPackage();
      uint64_t v11 = v3 + v28[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v13 = v11 + *(int *)(v12 + 24);
      if (*(void *)(v13 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v14 = v13 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v15 = sub_1C1518CDC();
      uint64_t v29 = *(void *)(v15 - 8);
      char v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      if (!v30(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v15);
      }
      uint64_t v16 = v11 + *(int *)(v12 + 28);
      if (!v30(v16, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v16, v15);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = v3 + v28[24];
      uint64_t v18 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      uint64_t v19 = v3 + v28[25];
      if (!v30(v19, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v15);
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(unsigned char *)(v3 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      uint64_t v21 = type metadata accessor for FormatContent(0);
      uint64_t v22 = v20 + *(int *)(v21 + 20);
      uint64_t v23 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v20 + *(int *)(v21 + 40);
      uint64_t v25 = sub_1C151D6DC();
      uint64_t v26 = *(void *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      }
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1BFDCA350(*(void *)(v2 + *(int *)(v1 + 24)), *(void *)(v2 + *(int *)(v1 + 24) + 8), *(unsigned char *)(v2 + *(int *)(v1 + 24) + 16));
  return swift_deallocObject();
}

uint64_t sub_1C10CB144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C10CB19C(a1, a2, (uint64_t (*)(void))sub_1C10CA778, (void (*)(uint64_t, char *))sub_1C10CB2F4, (void (*)(char *, char *))sub_1C10CB30C, 1, a3);
}

uint64_t sub_1C10CB19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(uint64_t, char *)@<X3>, void (*a5)(char *, char *)@<X4>, int a6@<W5>, uint64_t *a7@<X8>)
{
  uint64_t v15 = *(void *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  return sub_1C10C7440(a1, a2, (uint64_t *)(v7 + v16), *(unsigned __int8 *)(v7 + v16 + *(void *)(v15 + 64)), a3, a4, a5, a6, a7);
}

id sub_1C10CB278@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8);
  return sub_1C10C75F8(a1, (uint64_t *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))), a2);
}

uint64_t sub_1C10CB2F4(uint64_t a1, uint64_t a2)
{
  return sub_1C10C8E0C(a1, a2, (uint64_t (*)(void))sub_1C01DDB34);
}

uint64_t sub_1C10CB30C(uint64_t a1, uint64_t a2)
{
  return sub_1C10C8F78(a1, a2, (uint64_t (*)(void))sub_1C01DDB34);
}

uint64_t sub_1C10CB324()
{
  sub_1C01DDB34();
  uint64_t v2 = v1;
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for DebugNewsroomThemeData();
  uint64_t v5 = v3 + *(int *)(v4 + 48);
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = v3 + *(int *)(v2 + 36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 + *(int *)(v4 + 48);
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10CB540(uint64_t a1)
{
  return sub_1C10CB580(a1, (uint64_t (*)(void))sub_1C01DDB34, (uint64_t (*)(uint64_t, unint64_t))sub_1C10C7338);
}

uint64_t sub_1C10CB580(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, unint64_t))
{
  uint64_t v6 = *(void *)(a2(0) - 8);
  return a3(a1, v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_1C10CB608()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C10CB640()
{
  return sub_1C10C3A48(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C10CB64C(id a1, char a2)
{
  if (a2) {
}
  }

unint64_t sub_1C10CB658(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DebugFormatUploadHiddenEntry();
  uint64_t v106 = *(void *)(v4 - 8);
  uint64_t v107 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v115 = (void *)((char *)v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v98 = (void *)((char *)v94 - v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v97 = (void *)((char *)v94 - v9);
  uint64_t v116 = type metadata accessor for DebugFormatUploadHiddenReason();
  uint64_t v10 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v96 = (uint64_t)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v95 = (uint64_t)v94 - v13;
  sub_1C10CCA48();
  uint64_t v113 = v14;
  MEMORY[0x1F4188790](v14);
  int v112 = (void *)((char *)v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v111 = (void *)((char *)v94 - v17);
  sub_1C10CCB28(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v103 = (void *)((char *)v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20);
  uint64_t v102 = (void *)((char *)v94 - v21);
  uint64_t v105 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  uint64_t v100 = (void *)((char *)v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v23);
  uint64_t v99 = (void *)((char *)v94 - v24);
  MEMORY[0x1F4188790](v25);
  uint64_t v110 = (void *)((char *)v94 - v26);
  uint64_t v114 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1F4188790](v114);
  char v28 = (void **)((char *)v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v120 = (uint64_t)v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v31 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  uint64_t v33 = (void *)((char *)v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = a1;
  sub_1C097D584();
  sub_1C017E800((unint64_t *)&qword_1EA1A1620, (void (*)(uint64_t))sub_1C097D584);
  uint64_t v34 = sub_1C151E92C();
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    int v101 = 0;
    unint64_t v36 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v94[1] = v34;
    uint64_t v37 = v34 + v36;
    uint64_t v108 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    unint64_t v38 = MEMORY[0x1E4FBC860];
    uint64_t v117 = *(void *)(v31 + 72);
    unint64_t v119 = MEMORY[0x1E4FBC860];
    uint64_t v109 = v2;
    while (1)
    {
      sub_1C10C8E0C(v37, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1C10C8E0C((uint64_t)v33 + *(int *)(v118 + 20), (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v40 = *v28;
          uint64_t v41 = *v33;
          uint64_t v42 = v115;
          *(uint64_t *)((char *)v115 + *(int *)(v107 + 20)) = (uint64_t)*v28;
          swift_storeEnumTagMultiPayload();
          *uint64_t v42 = v41;
          swift_retain();
          id v43 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v38 = sub_1C0EE68C4(0, *(void *)(v38 + 16) + 1, 1, v38);
          }
          unint64_t v45 = *(void *)(v38 + 16);
          unint64_t v44 = *(void *)(v38 + 24);
          if (v45 >= v44 >> 1) {
            unint64_t v38 = sub_1C0EE68C4(v44 > 1, v45 + 1, 1, v38);
          }
          *(void *)(v38 + 16) = v45 + 1;
          sub_1C10C8F78((uint64_t)v115, v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v45, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);

LABEL_4:
          sub_1C10C9C9C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
          goto LABEL_5;
        }
        sub_1C10CA7B4(0, (unint64_t *)&qword_1EA1A63F0, (void (*)(uint64_t))type metadata accessor for FormatFile, (void (*)(uint64_t))sub_1C017F734);
      }
      sub_1C10C8F78((uint64_t)v28, v120, (uint64_t (*)(void))type metadata accessor for FormatFile);
      swift_retain();
      sub_1C151709C();
      swift_release();
      if (!v125)
      {
        uint64_t v61 = v110;
        *uint64_t v110 = *v33;
        uint64_t v62 = v105;
        sub_1C10C8F78(v120, (uint64_t)v61 + *(int *)(v105 + 20), (uint64_t (*)(void))type metadata accessor for FormatFile);
        uint64_t v63 = (char *)v61 + *(int *)(v62 + 24);
        *(void *)uint64_t v63 = 0;
        *((void *)v63 + 1) = 0;
        v63[16] = 2;
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v64 = v119;
        }
        else {
          unint64_t v64 = sub_1C0EE690C(0, *(void *)(v119 + 16) + 1, 1, v119);
        }
        unint64_t v66 = *(void *)(v64 + 16);
        unint64_t v65 = *(void *)(v64 + 24);
        if (v66 >= v65 >> 1) {
          unint64_t v64 = sub_1C0EE690C(v65 > 1, v66 + 1, 1, v64);
        }
        *(void *)(v64 + 16) = v66 + 1;
        unint64_t v67 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
        unint64_t v119 = v64;
        sub_1C10C8F78((uint64_t)v110, v64 + v67 + *(void *)(v104 + 72) * v66, type metadata accessor for DebugFormatUploadPrivateEntry);
        goto LABEL_4;
      }
      if (v125 == 1)
      {
        uint64_t v47 = *v33;
        swift_retain();
        swift_retain();
        sub_1C151709C();
        swift_release();
        unsigned __int8 v121 = v122;
        uint64_t v48 = v102;
        sub_1C10C330C(&v123, v102, v47, &v121);
        swift_release();
        uint64_t v50 = v123;
        uint64_t v49 = v124;
        uint64_t v51 = *(int *)(v113 + 48);
        uint64_t v52 = v111;
        uint64_t v53 = (char *)v111 + v51;
        *uint64_t v111 = v123;
        v52[1] = v49;
        sub_1C10C8F78((uint64_t)v48, (uint64_t)v52 + v51, (uint64_t (*)(void))sub_1C10CCB28);
        if (!v49)
        {
          sub_1C10C9C9C(v120, (uint64_t (*)(void))type metadata accessor for FormatFile);
          if ((*v108)(v53, 1, v116) == 1) {
            goto LABEL_49;
          }
          uint64_t v81 = (uint64_t)v53;
          uint64_t v82 = v95;
          sub_1C10C8F78(v81, v95, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenReason);
          uint64_t v83 = *v33;
          uint64_t v84 = v97;
          sub_1C10C8E0C(v82, (uint64_t)v97 + *(int *)(v107 + 20), (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenReason);
          *uint64_t v84 = v83;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v38 = sub_1C0EE68C4(0, *(void *)(v38 + 16) + 1, 1, v38);
          }
          unint64_t v86 = *(void *)(v38 + 16);
          unint64_t v85 = *(void *)(v38 + 24);
          if (v86 >= v85 >> 1) {
            unint64_t v38 = sub_1C0EE68C4(v85 > 1, v86 + 1, 1, v38);
          }
          *(void *)(v38 + 16) = v86 + 1;
          sub_1C10C8F78((uint64_t)v97, v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v86, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1C10C9C9C(v95, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenReason);
          sub_1C10C9C9C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
          goto LABEL_47;
        }
        if ((*v108)(v53, 1, v116) != 1)
        {
          sub_1C10C9C9C(v120, (uint64_t (*)(void))type metadata accessor for FormatFile);
LABEL_49:
          sub_1C10C9C9C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
          sub_1C10C9C9C((uint64_t)v111, (uint64_t (*)(void))sub_1C10CCA48);
          goto LABEL_5;
        }
        uint64_t v54 = v99;
        *uint64_t v99 = v47;
        uint64_t v55 = v105;
        sub_1C10C8F78(v120, (uint64_t)v54 + *(int *)(v105 + 20), (uint64_t (*)(void))type metadata accessor for FormatFile);
        uint64_t v56 = (char *)v54 + *(int *)(v55 + 24);
        *(void *)uint64_t v56 = v50;
        *((void *)v56 + 1) = v49;
        v56[16] = 0;
        swift_retain();
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v57 = v119;
        }
        else {
          unint64_t v57 = sub_1C0EE690C(0, *(void *)(v119 + 16) + 1, 1, v119);
        }
        unint64_t v59 = *(void *)(v57 + 16);
        unint64_t v58 = *(void *)(v57 + 24);
        if (v59 >= v58 >> 1) {
          unint64_t v57 = sub_1C0EE690C(v58 > 1, v59 + 1, 1, v57);
        }
        *(void *)(v57 + 16) = v59 + 1;
        unint64_t v60 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
        unint64_t v119 = v57;
        sub_1C10C8F78((uint64_t)v99, v57 + v60 + *(void *)(v104 + 72) * v59, type metadata accessor for DebugFormatUploadPrivateEntry);
        sub_1C10C9C9C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      }
      else
      {
        uint64_t v68 = *v33;
        swift_retain();
        swift_retain();
        sub_1C151709C();
        swift_release();
        unsigned __int8 v121 = v122;
        uint64_t v69 = v103;
        sub_1C10C330C(&v123, v103, v68, &v121);
        swift_release();
        uint64_t v71 = v123;
        uint64_t v70 = v124;
        uint64_t v72 = v112;
        uint64_t v73 = (uint64_t)v112 + *(int *)(v113 + 48);
        *int v112 = v123;
        v72[1] = v70;
        sub_1C10C8F78((uint64_t)v69, v73, (uint64_t (*)(void))sub_1C10CCB28);
        if (!v70)
        {
          sub_1C10C9C9C(v120, (uint64_t (*)(void))type metadata accessor for FormatFile);
          if ((*v108)((char *)v73, 1, v116) == 1) {
            goto LABEL_51;
          }
          uint64_t v87 = v73;
          uint64_t v88 = v96;
          sub_1C10C8F78(v87, v96, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenReason);
          uint64_t v89 = *v33;
          uint64_t v90 = v98;
          sub_1C10C8E0C(v88, (uint64_t)v98 + *(int *)(v107 + 20), (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenReason);
          *uint64_t v90 = v89;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v38 = sub_1C0EE68C4(0, *(void *)(v38 + 16) + 1, 1, v38);
          }
          unint64_t v92 = *(void *)(v38 + 16);
          unint64_t v91 = *(void *)(v38 + 24);
          if (v92 >= v91 >> 1) {
            unint64_t v38 = sub_1C0EE68C4(v91 > 1, v92 + 1, 1, v38);
          }
          *(void *)(v38 + 16) = v92 + 1;
          sub_1C10C8F78((uint64_t)v98, v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v92, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1C10C9C9C(v96, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenReason);
          sub_1C10C9C9C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
LABEL_47:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        if ((*v108)((char *)v73, 1, v116) != 1)
        {
          sub_1C10C9C9C(v120, (uint64_t (*)(void))type metadata accessor for FormatFile);
LABEL_51:
          sub_1C10C9C9C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
          sub_1C10C9C9C((uint64_t)v112, (uint64_t (*)(void))sub_1C10CCA48);
          goto LABEL_5;
        }
        uint64_t v74 = v100;
        *uint64_t v100 = v68;
        uint64_t v75 = v105;
        sub_1C10C8F78(v120, (uint64_t)v74 + *(int *)(v105 + 20), (uint64_t (*)(void))type metadata accessor for FormatFile);
        uint64_t v76 = (char *)v74 + *(int *)(v75 + 24);
        *(void *)uint64_t v76 = v71;
        *((void *)v76 + 1) = v70;
        v76[16] = 1;
        swift_retain();
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v77 = v119;
        }
        else {
          unint64_t v77 = sub_1C0EE690C(0, *(void *)(v119 + 16) + 1, 1, v119);
        }
        unint64_t v79 = *(void *)(v77 + 16);
        unint64_t v78 = *(void *)(v77 + 24);
        if (v79 >= v78 >> 1) {
          unint64_t v77 = sub_1C0EE690C(v78 > 1, v79 + 1, 1, v77);
        }
        *(void *)(v77 + 16) = v79 + 1;
        unint64_t v80 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
        unint64_t v119 = v77;
        sub_1C10C8F78((uint64_t)v100, v77 + v80 + *(void *)(v104 + 72) * v79, type metadata accessor for DebugFormatUploadPrivateEntry);
        sub_1C10C9C9C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      }
      swift_bridgeObjectRelease();
      int v101 = 1;
LABEL_5:
      v37 += v117;
      if (!--v35)
      {
        swift_bridgeObjectRelease();
        return v119;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C10CC6B0(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatUploadHiddenEntry();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - v8;
  sub_1C0EF301C(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (id *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a2 + 16);
  if (v14)
  {
    uint64_t v15 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v16 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    uint64_t v21 = a2;
    swift_bridgeObjectRetain();
    uint64_t v22 = v16;
    do
    {
      sub_1C10C8E0C(v15, (uint64_t)v13, (uint64_t (*)(void))sub_1C0EF301C);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
      }
      else
      {
        type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C10C8F78((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1C10C8E0C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a1 = sub_1C0EE68C4(0, *(void *)(a1 + 16) + 1, 1, a1);
          }
          unint64_t v18 = *(void *)(a1 + 16);
          unint64_t v17 = *(void *)(a1 + 24);
          if (v18 >= v17 >> 1) {
            a1 = sub_1C0EE68C4(v17 > 1, v18 + 1, 1, a1);
          }
          *(void *)(a1 + 16) = v18 + 1;
          sub_1C10C8F78((uint64_t)v6, a1+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v18, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1C10C9C9C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
        }
        else
        {
          uint64_t v19 = swift_retain();
          MEMORY[0x1C18C66D0](v19);
          if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          swift_release();
          uint64_t v16 = v22;
        }
      }
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    swift_bridgeObjectRetain();
    return MEMORY[0x1E4FBC860];
  }
}

void sub_1C10CCA48()
{
  if (!qword_1EA1AB340)
  {
    sub_1C10CCADC(255, &qword_1EA1AB348, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environment, MEMORY[0x1E4FBB718]);
    sub_1C10CCB28(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AB340);
    }
  }
}

void sub_1C10CCADC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C10CCB28(uint64_t a1)
{
}

uint64_t *sub_1C10CCB5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
      uint64_t v8 = (_OWORD *)((char *)a1 + v7);
      uint64_t v9 = (uint64_t *)((char *)a2 + v7);
      uint64_t v10 = type metadata accessor for DebugFormatUploadHiddenReason();
      swift_retain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = v9[1];
          if (v11 == 1)
          {
            long long v12 = *((_OWORD *)v9 + 1);
            *uint64_t v8 = *(_OWORD *)v9;
            v8[1] = v12;
            v8[2] = *((_OWORD *)v9 + 2);
          }
          else
          {
            *(void *)uint64_t v8 = *v9;
            *((void *)v8 + 1) = v11;
            uint64_t v18 = v9[3];
            *((void *)v8 + 2) = v9[2];
            *((void *)v8 + 3) = v18;
            uint64_t v19 = v9[4];
            uint64_t v20 = v9[5];
            *((void *)v8 + 4) = v19;
            *((void *)v8 + 5) = v20;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          goto LABEL_13;
        case 1u:
          uint64_t v17 = v9[1];
          *(void *)uint64_t v8 = *v9;
          *((void *)v8 + 1) = v17;
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 2u:
        case 4u:
          uint64_t v14 = (void *)*v9;
          id v15 = v14;
          *(void *)uint64_t v8 = v14;
          goto LABEL_13;
        case 3u:
          uint64_t v16 = sub_1C151928C();
          (*(void (**)(_OWORD *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
          break;
      }
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C10CCDC8(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = a1 + *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
    type metadata accessor for DebugFormatUploadHiddenReason();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        if (*(void *)(v3 + 8) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        break;
      case 1u:
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      case 2u:
      case 4u:
        uint64_t v4 = *(void **)v3;

        break;
      case 3u:
        uint64_t v5 = sub_1C151928C();
        uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
        v6(v3, v5);
        break;
      default:
        return;
    }
  }
}

void *sub_1C10CCF14(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
    uint64_t v6 = (_OWORD *)((char *)a1 + v5);
    uint64_t v7 = (void *)((char *)a2 + v5);
    uint64_t v8 = type metadata accessor for DebugFormatUploadHiddenReason();
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v9 = v7[1];
        if (v9 == 1)
        {
          long long v10 = *((_OWORD *)v7 + 1);
          *uint64_t v6 = *(_OWORD *)v7;
          v6[1] = v10;
          _OWORD v6[2] = *((_OWORD *)v7 + 2);
        }
        else
        {
          *(void *)uint64_t v6 = *v7;
          *((void *)v6 + 1) = v9;
          uint64_t v15 = v7[3];
          *((void *)v6 + 2) = v7[2];
          *((void *)v6 + 3) = v15;
          uint64_t v16 = v7[4];
          uint64_t v17 = v7[5];
          *((void *)v6 + 4) = v16;
          *((void *)v6 + 5) = v17;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        goto LABEL_11;
      case 1u:
        uint64_t v14 = v7[1];
        *(void *)uint64_t v6 = *v7;
        *((void *)v6 + 1) = v14;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        uint64_t v11 = (void *)*v7;
        id v12 = v11;
        *(void *)uint64_t v6 = v11;
        goto LABEL_11;
      case 3u:
        uint64_t v13 = sub_1C151928C();
        (*(void (**)(_OWORD *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v7, v13);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C10CD134(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C10C9C9C((uint64_t)a1, type metadata accessor for DebugFormatUploadPrivateEntryResult);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
      uint64_t v6 = (_OWORD *)((char *)a1 + v5);
      uint64_t v7 = (_OWORD *)((char *)a2 + v5);
      uint64_t v8 = type metadata accessor for DebugFormatUploadHiddenReason();
      swift_retain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          if (*((void *)v7 + 1) == 1)
          {
            long long v9 = *v7;
            long long v10 = v7[2];
            v6[1] = v7[1];
            _OWORD v6[2] = v10;
            *uint64_t v6 = v9;
          }
          else
          {
            *(void *)uint64_t v6 = *(void *)v7;
            *((void *)v6 + 1) = *((void *)v7 + 1);
            *((void *)v6 + 2) = *((void *)v7 + 2);
            *((void *)v6 + 3) = *((void *)v7 + 3);
            *((void *)v6 + 4) = *((void *)v7 + 4);
            *((void *)v6 + 5) = *((void *)v7 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          goto LABEL_12;
        case 1u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((void *)v6 + 1) = *((void *)v7 + 1);
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
        case 4u:
          uint64_t v11 = *(void **)v7;
          id v12 = v11;
          *(void *)uint64_t v6 = v11;
          goto LABEL_12;
        case 3u:
          uint64_t v13 = sub_1C151928C();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v7, v13);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C10CD398(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v10 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1C10CD4C8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C10C9C9C((uint64_t)a1, type metadata accessor for DebugFormatUploadPrivateEntryResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for DebugFormatUploadHiddenReason();
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v10 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C10CD61C()
{
  uint64_t result = type metadata accessor for DebugFormatUploadHiddenEntry();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C10CD6B4(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3;
    uint64_t v6 = a2;
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    type metadata accessor for FormatFile();
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v185 = v5;
        uint64_t v182 = v6;
        uint64_t v37 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v37;
        uint64_t v38 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v38;
        uint64_t v39 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v39;
        uint64_t v40 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v40;
        uint64_t v41 = *((void *)v10 + 8);
        v9[72] = v10[72];
        *((void *)v9 + 8) = v41;
        uint64_t v42 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v42;
        __dsta = (uint64_t *)(v10 + 96);
        unsigned __int8 v43 = v10[106];
        int v44 = *((unsigned __int16 *)v10 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v43 == 255)
        {
          *((void *)v9 + 12) = *__dsta;
          *(_DWORD *)(v9 + 103) = *(_DWORD *)(v10 + 103);
        }
        else
        {
          uint64_t v112 = v44 & 0xFF00FFFF | (v43 << 16);
          uint64_t v113 = *__dsta;
          sub_1C0EBB9C8(*__dsta, v112, SBYTE2(v112), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *((void *)v9 + 12) = v113;
          *((_WORD *)v9 + 52) = v112;
          v9[106] = BYTE2(v112);
        }
        goto LABEL_47;
      case 2u:
        uint64_t v185 = v5;
        uint64_t v45 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v45;
        uint64_t v46 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v46;
        uint64_t v47 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v47;
        v9[48] = v10[48];
        *((void *)v9 + 7) = *((void *)v10 + 7);
        uint64_t v48 = v10 + 64;
        unint64_t v49 = *((void *)v10 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49 <= 2)
        {
          *((_OWORD *)v9 + 4) = *v48;
        }
        else
        {
          v9[64] = *(unsigned char *)v48;
          *((void *)v9 + 9) = v49;
          swift_bridgeObjectRetain();
        }
        uint64_t v117 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v117;
        uint64_t v118 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v118;
        uint64_t v119 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v119;
        unsigned char v9[128] = v10[128];
        *((void *)v9 + 17) = *((void *)v10 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 3u:
        uint64_t v185 = v5;
        uint64_t v50 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v50;
        uint64_t v51 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v51;
        uint64_t v52 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v52;
        uint64_t v53 = v10 + 48;
        unint64_t v54 = *((void *)v10 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v182 = v6;
        if (v54 >= 0xF)
        {
          *((void *)v9 + 6) = *v53;
          *((void *)v9 + 7) = v54;
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v9 + 3) = *(_OWORD *)v53;
        }
        uint64_t v114 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v114;
        uint64_t v115 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v115;
        uint64_t v116 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v116;
        *((void *)v9 + 14) = *((void *)v10 + 14);
        v9[120] = v10[120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_33;
      case 4u:
        uint64_t v55 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v55;
        uint64_t v56 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v56;
        uint64_t v57 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v57;
        *((void *)v9 + 6) = *((void *)v10 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v185 = v5;
        uint64_t v182 = v6;
        uint64_t v92 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v92;
        uint64_t v93 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v93;
        uint64_t v94 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v94;
        *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
        uint64_t v95 = *((void *)v10 + 8);
        *((void *)v9 + 7) = *((void *)v10 + 7);
        *((void *)v9 + 8) = v95;
        uint64_t v96 = *((void *)v10 + 10);
        *((void *)v9 + 9) = *((void *)v10 + 9);
        *((void *)v9 + 10) = v96;
        uint64_t v157 = *((void *)v10 + 12);
        *((void *)v9 + 11) = *((void *)v10 + 11);
        *((void *)v9 + 12) = v157;
        uint64_t v158 = *((void *)v10 + 14);
        *((void *)v9 + 13) = *((void *)v10 + 13);
        *((void *)v9 + 14) = v158;
        uint64_t v159 = *((void *)v10 + 16);
        *((void *)v9 + 15) = *((void *)v10 + 15);
        *((void *)v9 + 16) = v159;
        uint64_t v97 = *((void *)v10 + 18);
        *((void *)v9 + 17) = *((void *)v10 + 17);
        *((void *)v9 + 18) = v97;
        *((void *)v9 + 19) = *((void *)v10 + 19);
        unint64_t v174 = v10 + 160;
        __dstc = v9 + 160;
        unint64_t v165 = *((void *)v10 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v165 >= 2)
        {
          if (v165 == 2)
          {
            _OWORD *__dstc = *v174;
          }
          else
          {
            v9[160] = *(unsigned char *)v174;
            *((void *)v9 + 21) = v165;
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          _OWORD *__dstc = *v174;
        }
        unint64_t v170 = (int *)type metadata accessor for FormatPackage();
        uint64_t v120 = v170[23];
        unsigned __int8 v121 = &v9[v120];
        unsigned __int8 v122 = &v10[v120];
        uint64_t v123 = *(void *)&v10[v120 + 8];
        *(void *)unsigned __int8 v121 = *(void *)&v10[v120];
        *((void *)v121 + 1) = v123;
        uint64_t v162 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v166 = v121;
        uint64_t v124 = v162[6];
        char v125 = &v121[v124];
        uint64_t v126 = &v122[v124];
        uint64_t v127 = *(void *)&v122[v124 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v127 == 1)
        {
          long long v128 = *((_OWORD *)v126 + 1);
          *(_OWORD *)char v125 = *(_OWORD *)v126;
          *((_OWORD *)v125 + 1) = v128;
          *((_OWORD *)v125 + 2) = *((_OWORD *)v126 + 2);
        }
        else
        {
          *(void *)char v125 = *(void *)v126;
          *((void *)v125 + 1) = v127;
          uint64_t v129 = *((void *)v126 + 3);
          *((void *)v125 + 2) = *((void *)v126 + 2);
          *((void *)v125 + 3) = v129;
          uint64_t v130 = *((void *)v126 + 5);
          *((void *)v125 + 4) = *((void *)v126 + 4);
          *((void *)v125 + 5) = v130;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v131 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v132 = &v125[v131];
        uint64_t v133 = &v126[v131];
        uint64_t v134 = sub_1C1518CDC();
        uint64_t v135 = *(void *)(v134 - 8);
        uint64_t v175 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48);
        if (v175(v133, 1, v134))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v132, v133, *(void *)(*(void *)(v136 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v132, v133, v134);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
        }
        uint64_t v137 = v162[7];
        uint64_t v138 = (char *)v166 + v137;
        uint64_t v139 = &v122[v137];
        uint64_t v160 = v134;
        if (v175(&v122[v137], 1, v134))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v138, v139, v134);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v138, 0, 1, v134);
        }
        *(void *)((char *)v166 + v162[8]) = *(void *)&v122[v162[8]];
        uint64_t v141 = v170[24];
        int v142 = &v9[v141];
        uint64_t v143 = &v10[v141];
        uint64_t v144 = sub_1C151928C();
        uint64_t v145 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
        swift_bridgeObjectRetain();
        v145(v142, v143, v144);
        uint64_t v146 = v170[25];
        uint64_t v147 = &v9[v146];
        long long v148 = &v10[v146];
        if (v175(v148, 1, v160))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v147, v148, v160);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v147, 0, 1, v160);
        }
        goto LABEL_47;
      case 6u:
        uint64_t v98 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v98;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 7u:
        *(void *)uint64_t v9 = *(void *)v10;
        swift_retain();
        break;
      case 8u:
        uint64_t v99 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v99;
        uint64_t v100 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v100;
        uint64_t v101 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v101;
        uint64_t v102 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v102;
        *((void *)v9 + 8) = *((void *)v10 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        uint64_t v58 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v58;
        uint64_t v59 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v59;
        uint64_t v60 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v60;
        uint64_t v61 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v61;
        uint64_t v183 = v6;
        uint64_t v62 = *((void *)v10 + 9);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        *((void *)v9 + 9) = v62;
        v9[80] = v10[80];
        uint64_t v63 = *((void *)v10 + 12);
        *((void *)v9 + 11) = *((void *)v10 + 11);
        *((void *)v9 + 12) = v63;
        v9[104] = v10[104];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v183;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        uint64_t v103 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v103;
        uint64_t v104 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v104;
        uint64_t v186 = v5;
        uint64_t v105 = *((void *)v10 + 4);
        uint64_t v106 = *((void *)v10 + 5);
        uint64_t v107 = *((void *)v10 + 6);
        uint64_t v108 = *((void *)v10 + 7);
        uint64_t v184 = v6;
        uint64_t v109 = *((void *)v10 + 8);
        uint64_t v110 = *((void *)v10 + 9);
        unsigned __int8 v111 = v10[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v105, v106, v107, v108, v109, v110, v111);
        *((void *)v9 + 4) = v105;
        *((void *)v9 + 5) = v106;
        uint64_t v5 = v186;
        *((void *)v9 + 6) = v107;
        *((void *)v9 + 7) = v108;
        *((void *)v9 + 8) = v109;
        *((void *)v9 + 9) = v110;
        uint64_t v6 = v184;
        v9[80] = v111;
        break;
      case 0xBu:
        uint64_t v185 = v5;
        uint64_t v182 = v6;
        uint64_t v64 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v64;
        uint64_t v65 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v65;
        uint64_t v66 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v66;
        uint64_t v67 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v68 = &v9[v67];
        uint64_t v69 = &v10[v67];
        uint64_t v70 = *(void *)&v10[v67 + 8];
        *(void *)uint64_t v68 = *(void *)&v10[v67];
        *((void *)v68 + 1) = v70;
        uint64_t v71 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v72 = v71[5];
        uint64_t v172 = &v69[v72];
        __dstd = &v68[v72];
        uint64_t v73 = sub_1C151631C();
        uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v168(__dstd, v172, v73);
        uint64_t v74 = v71[6];
        uint64_t v75 = &v68[v74];
        uint64_t v76 = &v69[v74];
        uint64_t v173 = *((void *)v76 + 1);
        *(void *)uint64_t v75 = *(void *)v76;
        *((void *)v75 + 1) = v173;
        uint64_t v77 = v71[7];
        unint64_t v78 = &v68[v77];
        unint64_t v79 = &v69[v77];
        uint64_t v80 = *((void *)v79 + 1);
        *(void *)unint64_t v78 = *(void *)v79;
        *((void *)v78 + 1) = v80;
        uint64_t v81 = v71[8];
        uint64_t v82 = &v68[v81];
        uint64_t v83 = &v69[v81];
        uint64_t v84 = *((void *)v83 + 1);
        *(void *)uint64_t v82 = *(void *)v83;
        *((void *)v82 + 1) = v84;
        uint64_t v85 = v71[9];
        unint64_t v86 = &v68[v85];
        uint64_t v87 = &v69[v85];
        uint64_t v88 = *((void *)v87 + 1);
        *(void *)unint64_t v86 = *(void *)v87;
        *((void *)v86 + 1) = v88;
        uint64_t v89 = v71[10];
        __dstb = &v68[v89];
        uint64_t v164 = &v69[v89];
        uint64_t v90 = sub_1C151D6DC();
        uint64_t v161 = *(void *)(v90 - 8);
        uint64_t v169 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v169(v164, 1, v90))
        {
          sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
          memcpy(__dstb, v164, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v161 + 16))(__dstb, v164, v90);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(__dstb, 0, 1, v90);
        }
        *(void *)&v68[v71[11]] = *(void *)&v69[v71[11]];
        *(void *)&v68[v71[12]] = *(void *)&v69[v71[12]];
        *(void *)&v68[v71[13]] = *(void *)&v69[v71[13]];
        *(void *)&v68[v71[14]] = *(void *)&v69[v71[14]];
        *(void *)&v68[v71[15]] = *(void *)&v69[v71[15]];
        *(void *)&v68[v71[16]] = *(void *)&v69[v71[16]];
        *(void *)&v68[v71[17]] = *(void *)&v69[v71[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_33:
        swift_bridgeObjectRetain();
LABEL_47:
        uint64_t v6 = v182;
LABEL_48:
        uint64_t v5 = v185;
        break;
      default:
        uint64_t v181 = v6;
        uint64_t v11 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v11;
        id v12 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = &v9[v13];
        uint64_t v15 = &v10[v13];
        uint64_t v16 = sub_1C151631C();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        uint64_t v18 = v12[6];
        uint64_t v19 = &v9[v18];
        uint64_t v20 = &v10[v18];
        uint64_t v171 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v171;
        uint64_t v21 = v12[7];
        uint64_t v22 = &v9[v21];
        uint64_t v23 = &v10[v21];
        uint64_t v24 = *((void *)v23 + 1);
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = v24;
        uint64_t v25 = v12[8];
        uint64_t v26 = &v9[v25];
        uint64_t v27 = &v10[v25];
        uint64_t v28 = *((void *)v27 + 1);
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = v28;
        uint64_t v29 = v12[9];
        uint64_t v30 = &v9[v29];
        uint64_t v31 = &v10[v29];
        uint64_t v32 = *((void *)v31 + 1);
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = v32;
        uint64_t v33 = v12[10];
        __dst = &v9[v33];
        uint64_t v167 = &v10[v33];
        uint64_t v34 = sub_1C151D6DC();
        uint64_t v35 = *(void *)(v34 - 8);
        uint64_t v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v163(v167, 1, v34))
        {
          sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
          memcpy(__dst, v167, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v167, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
        }
        *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
        *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
        *(void *)&v9[v12[13]] = *(void *)&v10[v12[13]];
        *(void *)&v9[v12[14]] = *(void *)&v10[v12[14]];
        *(void *)&v9[v12[15]] = *(void *)&v10[v12[15]];
        *(void *)&v9[v12[16]] = *(void *)&v10[v12[16]];
        *(void *)&v9[v12[17]] = *(void *)&v10[v12[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v181;
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v150 = *(int *)(v5 + 24);
    uint64_t v151 = (char *)v7 + v150;
    uint64_t v152 = (char *)v6 + v150;
    uint64_t v153 = *(void *)v152;
    uint64_t v154 = *((void *)v152 + 1);
    unsigned __int8 v155 = v152[16];
    sub_1BFDCA484(*(void *)v152, v154, v155);
    *(void *)uint64_t v151 = v153;
    *((void *)v151 + 1) = v154;
    v151[16] = v155;
  }
  return v7;
}

uint64_t sub_1C10CE768(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for FormatContent(0);
      uint64_t v6 = v4 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v4 + *(int *)(v5 + 40);
      uint64_t v9 = sub_1C151D6DC();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v4 + 106) != 255)
      {
        uint64_t v11 = *(unsigned __int16 *)(v4 + 104) | (*(unsigned __int8 *)(v4 + 106) << 16);
        sub_1C0EBB9C8(*(void *)(v4 + 96), v11, SBYTE2(v11), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 168) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v35 = (int *)type metadata accessor for FormatPackage();
      uint64_t v12 = v4 + v35[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v14 = v12 + *(int *)(v13 + 24);
      if (*(void *)(v14 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v15 = v14 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v16 = sub_1C1518CDC();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (!v18(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      uint64_t v19 = v12 + *(int *)(v13 + 28);
      if (!v18(v19, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v20 = v4 + v35[24];
      uint64_t v21 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      uint64_t v22 = v4 + v35[25];
      if (!v18(v22, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(unsigned char *)(v4 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v4 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      uint64_t v24 = type metadata accessor for FormatContent(0);
      uint64_t v25 = v23 + *(int *)(v24 + 20);
      uint64_t v26 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v23 + *(int *)(v24 + 40);
      uint64_t v28 = sub_1C151D6DC();
      uint64_t v29 = *(void *)(v28 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
      }
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v30 = a1 + *(int *)(a2 + 24);
  uint64_t v31 = *(void *)v30;
  uint64_t v32 = *(void *)(v30 + 8);
  unsigned __int8 v33 = *(unsigned char *)(v30 + 16);
  return sub_1BFDCA350(v31, v32, v33);
}

void *sub_1C10CEFB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  type metadata accessor for FormatFile();
  swift_retain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v186 = v3;
      uint64_t v178 = v5;
      uint64_t v181 = v4;
      uint64_t v36 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v36;
      uint64_t v37 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v37;
      uint64_t v38 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v38;
      uint64_t v39 = *((void *)v8 + 7);
      *((void *)v7 + 6) = *((void *)v8 + 6);
      *((void *)v7 + 7) = v39;
      uint64_t v40 = *((void *)v8 + 8);
      v7[72] = v8[72];
      *((void *)v7 + 8) = v40;
      uint64_t v41 = *((void *)v8 + 11);
      *((void *)v7 + 10) = *((void *)v8 + 10);
      *((void *)v7 + 11) = v41;
      __dsta = (uint64_t *)(v8 + 96);
      unsigned __int8 v42 = v8[106];
      int v43 = *((unsigned __int16 *)v8 + 52);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v42 == 255)
      {
        *((void *)v7 + 12) = *__dsta;
        *(_DWORD *)(v7 + 103) = *(_DWORD *)(v8 + 103);
      }
      else
      {
        uint64_t v115 = v43 & 0xFF00FFFF | (v42 << 16);
        uint64_t v116 = *__dsta;
        sub_1C0EBB9C8(*__dsta, v115, SBYTE2(v115), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        *((void *)v7 + 12) = v116;
        *((_WORD *)v7 + 52) = v115;
        v7[106] = BYTE2(v115);
      }
      goto LABEL_42;
    case 2u:
      uint64_t v186 = v3;
      uint64_t v44 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v44;
      uint64_t v45 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v45;
      uint64_t v46 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v46;
      v7[48] = v8[48];
      *((void *)v7 + 7) = *((void *)v8 + 7);
      uint64_t v47 = v8 + 64;
      unint64_t v48 = *((void *)v8 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48 <= 2)
      {
        *((_OWORD *)v7 + 4) = *v47;
      }
      else
      {
        v7[64] = *(unsigned char *)v47;
        *((void *)v7 + 9) = v48;
        swift_bridgeObjectRetain();
      }
      uint64_t v120 = *((void *)v8 + 11);
      *((void *)v7 + 10) = *((void *)v8 + 10);
      *((void *)v7 + 11) = v120;
      uint64_t v121 = *((void *)v8 + 13);
      *((void *)v7 + 12) = *((void *)v8 + 12);
      *((void *)v7 + 13) = v121;
      uint64_t v122 = *((void *)v8 + 15);
      *((void *)v7 + 14) = *((void *)v8 + 14);
      *((void *)v7 + 15) = v122;
      unsigned char v7[128] = v8[128];
      *((void *)v7 + 17) = *((void *)v8 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_43;
    case 3u:
      uint64_t v186 = v3;
      uint64_t v49 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v49;
      uint64_t v50 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v50;
      uint64_t v51 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v51;
      uint64_t v52 = v8 + 48;
      unint64_t v53 = *((void *)v8 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >= 0xF)
      {
        *((void *)v7 + 6) = *v52;
        *((void *)v7 + 7) = v53;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v7 + 3) = *(_OWORD *)v52;
      }
      uint64_t v117 = *((void *)v8 + 9);
      *((void *)v7 + 8) = *((void *)v8 + 8);
      *((void *)v7 + 9) = v117;
      uint64_t v118 = *((void *)v8 + 11);
      *((void *)v7 + 10) = *((void *)v8 + 10);
      *((void *)v7 + 11) = v118;
      uint64_t v119 = *((void *)v8 + 13);
      *((void *)v7 + 12) = *((void *)v8 + 12);
      *((void *)v7 + 13) = v119;
      *((void *)v7 + 14) = *((void *)v8 + 14);
      v7[120] = v8[120];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_43;
    case 4u:
      uint64_t v54 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v54;
      uint64_t v55 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v55;
      uint64_t v56 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v56;
      *((void *)v7 + 6) = *((void *)v8 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v186 = v3;
      uint64_t v178 = v5;
      uint64_t v181 = v4;
      uint64_t v92 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v92;
      uint64_t v93 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v93;
      uint64_t v94 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v94;
      *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
      uint64_t v95 = *((void *)v8 + 8);
      *((void *)v7 + 7) = *((void *)v8 + 7);
      *((void *)v7 + 8) = v95;
      uint64_t v96 = *((void *)v8 + 10);
      *((void *)v7 + 9) = *((void *)v8 + 9);
      *((void *)v7 + 10) = v96;
      uint64_t v97 = *((void *)v8 + 12);
      *((void *)v7 + 11) = *((void *)v8 + 11);
      *((void *)v7 + 12) = v97;
      uint64_t v98 = *((void *)v8 + 14);
      *((void *)v7 + 13) = *((void *)v8 + 13);
      *((void *)v7 + 14) = v98;
      uint64_t v99 = *((void *)v8 + 16);
      *((void *)v7 + 15) = *((void *)v8 + 15);
      *((void *)v7 + 16) = v99;
      uint64_t v100 = *((void *)v8 + 18);
      *((void *)v7 + 17) = *((void *)v8 + 17);
      *((void *)v7 + 18) = v100;
      *((void *)v7 + 19) = *((void *)v8 + 19);
      unint64_t v162 = *((void *)v8 + 21);
      uint64_t v166 = v8 + 160;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v162 <= 2)
      {
        *((_OWORD *)v7 + 10) = *v166;
      }
      else
      {
        v7[160] = *(unsigned char *)v166;
        *((void *)v7 + 21) = v162;
        swift_bridgeObjectRetain();
      }
      uint64_t v171 = (int *)type metadata accessor for FormatPackage();
      uint64_t v123 = v171[23];
      uint64_t v124 = &v7[v123];
      char v125 = &v8[v123];
      uint64_t v126 = *(void *)&v8[v123 + 8];
      *(void *)uint64_t v124 = *(void *)&v8[v123];
      *((void *)v124 + 1) = v126;
      uint64_t v167 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v127 = v167[6];
      long long v128 = &v124[v127];
      uint64_t v129 = &v125[v127];
      uint64_t v130 = *(void *)&v125[v127 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v130 == 1)
      {
        long long v131 = *((_OWORD *)v129 + 1);
        *(_OWORD *)long long v128 = *(_OWORD *)v129;
        *((_OWORD *)v128 + 1) = v131;
        *((_OWORD *)v128 + 2) = *((_OWORD *)v129 + 2);
      }
      else
      {
        *(void *)long long v128 = *(void *)v129;
        *((void *)v128 + 1) = v130;
        uint64_t v132 = *((void *)v129 + 3);
        *((void *)v128 + 2) = *((void *)v129 + 2);
        *((void *)v128 + 3) = v132;
        uint64_t v133 = *((void *)v129 + 5);
        *((void *)v128 + 4) = *((void *)v129 + 4);
        *((void *)v128 + 5) = v133;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v134 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v135 = &v128[v134];
      uint64_t v136 = &v129[v134];
      uint64_t v137 = sub_1C1518CDC();
      uint64_t v138 = *(void *)(v137 - 8);
      __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48);
      if (__dstc(v136, 1, v137))
      {
        sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v135, v136, *(void *)(*(void *)(v139 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v135, v136, v137);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
      }
      uint64_t v140 = v167[7];
      uint64_t v141 = &v124[v140];
      int v142 = &v125[v140];
      uint64_t v160 = v138;
      if (__dstc(&v125[v140], 1, v137))
      {
        sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v141, v142, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v141, v142, v137);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v141, 0, 1, v137);
      }
      *(void *)&v124[v167[8]] = *(void *)&v125[v167[8]];
      uint64_t v144 = v171[24];
      uint64_t v145 = &v7[v144];
      uint64_t v146 = &v8[v144];
      uint64_t v147 = sub_1C151928C();
      long long v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
      swift_bridgeObjectRetain();
      v148(v145, v146, v147);
      uint64_t v149 = v171[25];
      uint64_t v150 = &v7[v149];
      uint64_t v151 = &v8[v149];
      if (__dstc(v151, 1, v137))
      {
        sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v150, v151, v137);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v150, 0, 1, v137);
      }
LABEL_42:
      uint64_t v5 = v178;
      uint64_t v4 = v181;
      goto LABEL_43;
    case 6u:
      uint64_t v101 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v101;
      *((void *)v7 + 2) = *((void *)v8 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 7u:
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
      break;
    case 8u:
      uint64_t v102 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v102;
      uint64_t v103 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v103;
      uint64_t v104 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v104;
      uint64_t v105 = *((void *)v8 + 7);
      *((void *)v7 + 6) = *((void *)v8 + 6);
      *((void *)v7 + 7) = v105;
      *((void *)v7 + 8) = *((void *)v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 9u:
      uint64_t v57 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v57;
      uint64_t v58 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v58;
      uint64_t v59 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v59;
      uint64_t v60 = *((void *)v8 + 7);
      *((void *)v7 + 6) = *((void *)v8 + 6);
      *((void *)v7 + 7) = v60;
      uint64_t v182 = v4;
      uint64_t v61 = *((void *)v8 + 9);
      *((void *)v7 + 8) = *((void *)v8 + 8);
      *((void *)v7 + 9) = v61;
      v7[80] = v8[80];
      uint64_t v187 = v3;
      uint64_t v62 = *((void *)v8 + 12);
      *((void *)v7 + 11) = *((void *)v8 + 11);
      *((void *)v7 + 12) = v62;
      v7[104] = v8[104];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v4 = v182;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v3 = v187;
      swift_bridgeObjectRetain();
      break;
    case 0xAu:
      uint64_t v106 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v106;
      uint64_t v188 = v3;
      uint64_t v107 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v107;
      uint64_t v108 = *((void *)v8 + 4);
      uint64_t v109 = *((void *)v8 + 5);
      uint64_t v110 = *((void *)v8 + 6);
      uint64_t v111 = *((void *)v8 + 7);
      uint64_t v184 = v4;
      uint64_t v112 = *((void *)v8 + 8);
      uint64_t v113 = *((void *)v8 + 9);
      unsigned __int8 v114 = v8[80];
      swift_bridgeObjectRetain();
      uint64_t v3 = v188;
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v108, v109, v110, v111, v112, v113, v114);
      *((void *)v7 + 4) = v108;
      *((void *)v7 + 5) = v109;
      *((void *)v7 + 6) = v110;
      *((void *)v7 + 7) = v111;
      *((void *)v7 + 8) = v112;
      *((void *)v7 + 9) = v113;
      uint64_t v4 = v184;
      v7[80] = v114;
      break;
    case 0xBu:
      uint64_t v186 = v3;
      uint64_t v179 = v5;
      uint64_t v183 = v4;
      uint64_t v63 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v63;
      uint64_t v64 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v64;
      uint64_t v65 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v65;
      uint64_t v66 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v67 = &v7[v66];
      uint64_t v68 = &v8[v66];
      uint64_t v69 = *(void *)&v8[v66 + 8];
      *(void *)uint64_t v67 = *(void *)&v8[v66];
      *((void *)v67 + 1) = v69;
      uint64_t v70 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v71 = v70[5];
      uint64_t v169 = &v68[v71];
      __dstd = &v67[v71];
      uint64_t v72 = sub_1C151631C();
      uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v164(__dstd, v169, v72);
      uint64_t v73 = v70[6];
      uint64_t v74 = &v67[v73];
      uint64_t v75 = &v68[v73];
      uint64_t v170 = *((void *)v75 + 1);
      *(void *)uint64_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v170;
      uint64_t v76 = v70[7];
      uint64_t v77 = &v67[v76];
      unint64_t v78 = &v68[v76];
      uint64_t v79 = *((void *)v78 + 1);
      *(void *)uint64_t v77 = *(void *)v78;
      *((void *)v77 + 1) = v79;
      uint64_t v80 = v70[8];
      uint64_t v81 = &v67[v80];
      uint64_t v82 = &v68[v80];
      uint64_t v83 = *((void *)v82 + 1);
      *(void *)uint64_t v81 = *(void *)v82;
      *((void *)v81 + 1) = v83;
      uint64_t v84 = v70[9];
      uint64_t v85 = &v67[v84];
      unint64_t v86 = &v68[v84];
      uint64_t v87 = *((void *)v86 + 1);
      *(void *)uint64_t v85 = *(void *)v86;
      *((void *)v85 + 1) = v87;
      uint64_t v88 = v70[10];
      __dstb = &v67[v88];
      unint64_t v165 = &v68[v88];
      uint64_t v89 = sub_1C151D6DC();
      uint64_t v90 = *(void *)(v89 - 8);
      uint64_t v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v161(v165, 1, v89))
      {
        sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
        memcpy(__dstb, v165, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(__dstb, v165, v89);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(__dstb, 0, 1, v89);
      }
      uint64_t v4 = v183;
      *(void *)&v67[v70[11]] = *(void *)&v68[v70[11]];
      *(void *)&v67[v70[12]] = *(void *)&v68[v70[12]];
      *(void *)&v67[v70[13]] = *(void *)&v68[v70[13]];
      *(void *)&v67[v70[14]] = *(void *)&v68[v70[14]];
      *(void *)&v67[v70[15]] = *(void *)&v68[v70[15]];
      *(void *)&v67[v70[16]] = *(void *)&v68[v70[16]];
      *(void *)&v67[v70[17]] = *(void *)&v68[v70[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v5 = v179;
LABEL_43:
      uint64_t v3 = v186;
      break;
    default:
      uint64_t v185 = v3;
      uint64_t v177 = v5;
      uint64_t v180 = v4;
      uint64_t v9 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v9;
      uint64_t v10 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = sub_1C151631C();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      uint64_t v16 = v10[6];
      uint64_t v17 = &v7[v16];
      uint64_t v18 = &v8[v16];
      uint64_t v168 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v168;
      uint64_t v19 = v10[7];
      uint64_t v20 = &v7[v19];
      uint64_t v21 = &v8[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = v10[8];
      uint64_t v24 = &v7[v23];
      uint64_t v25 = &v8[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      uint64_t v27 = v10[9];
      uint64_t v28 = &v7[v27];
      uint64_t v29 = &v8[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = v10[10];
      __dst = &v7[v31];
      uint64_t v32 = &v8[v31];
      uint64_t v33 = sub_1C151D6DC();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v163(v32, 1, v33))
      {
        sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
        memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
      }
      uint64_t v3 = v185;
      *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
      *(void *)&v7[v10[12]] = *(void *)&v8[v10[12]];
      *(void *)&v7[v10[13]] = *(void *)&v8[v10[13]];
      *(void *)&v7[v10[14]] = *(void *)&v8[v10[14]];
      *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
      *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
      *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v5 = v177;
      uint64_t v4 = v180;
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v153 = *(int *)(v3 + 24);
  uint64_t v154 = (char *)v5 + v153;
  unsigned __int8 v155 = (char *)v4 + v153;
  uint64_t v156 = *(void *)v155;
  uint64_t v157 = *((void *)v155 + 1);
  unsigned __int8 v158 = v155[16];
  sub_1BFDCA484(*(void *)v155, v157, v158);
  *(void *)uint64_t v154 = v156;
  *((void *)v154 + 1) = v157;
  v154[16] = v158;
  return v5;
}

void *sub_1C10D0014(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C10C9C9C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v121 = a3;
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        uint64_t v29 = *((void *)v8 + 8);
        v7[72] = v8[72];
        *((void *)v7 + 8) = v29;
        *((void *)v7 + 10) = *((void *)v8 + 10);
        *((void *)v7 + 11) = *((void *)v8 + 11);
        __dsta = (uint64_t *)(v8 + 96);
        int v30 = *((unsigned __int16 *)v8 + 52);
        unsigned __int8 v110 = v8[106];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v110 == 255)
        {
          uint64_t v31 = *__dsta;
          *(_DWORD *)(v7 + 103) = *(_DWORD *)(v8 + 103);
          *((void *)v7 + 12) = v31;
        }
        else
        {
          uint64_t v61 = v30 & 0xFF00FFFF | (v110 << 16);
          uint64_t v62 = *__dsta;
          sub_1C0EBB9C8(*__dsta, v61, SBYTE2(v61), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *((void *)v7 + 12) = v62;
          *((_WORD *)v7 + 52) = v61;
          v7[106] = BYTE2(v61);
        }
        goto LABEL_32;
      case 2u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        v7[48] = v8[48];
        *((void *)v7 + 7) = *((void *)v8 + 7);
        unint64_t v32 = *((void *)v8 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32 <= 2)
        {
          *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
        }
        else
        {
          v7[64] = v8[64];
          *((void *)v7 + 9) = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
        }
        *((void *)v7 + 10) = *((void *)v8 + 10);
        *((void *)v7 + 11) = *((void *)v8 + 11);
        *((void *)v7 + 12) = *((void *)v8 + 12);
        *((void *)v7 + 13) = *((void *)v8 + 13);
        *((void *)v7 + 14) = *((void *)v8 + 14);
        *((void *)v7 + 15) = *((void *)v8 + 15);
        unsigned char v7[128] = v8[128];
        *((void *)v7 + 17) = *((void *)v8 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_33;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        unint64_t v33 = *((void *)v8 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v121 = a3;
        if (v33 >= 0xF)
        {
          *((void *)v7 + 6) = *((void *)v8 + 6);
          *((void *)v7 + 7) = *((void *)v8 + 7);
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
        }
        *((void *)v7 + 8) = *((void *)v8 + 8);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = *((void *)v8 + 10);
        *((void *)v7 + 11) = *((void *)v8 + 11);
        *((void *)v7 + 12) = *((void *)v8 + 12);
        *((void *)v7 + 13) = *((void *)v8 + 13);
        *((void *)v7 + 14) = *((void *)v8 + 14);
        v7[120] = v8[120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 4u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_33;
      case 5u:
        uint64_t v121 = a3;
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        v7[48] = v8[48];
        v7[49] = v8[49];
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = *((void *)v8 + 10);
        *((void *)v7 + 11) = *((void *)v8 + 11);
        *((void *)v7 + 12) = *((void *)v8 + 12);
        *((void *)v7 + 13) = *((void *)v8 + 13);
        *((void *)v7 + 14) = *((void *)v8 + 14);
        *((void *)v7 + 15) = *((void *)v8 + 15);
        *((void *)v7 + 16) = *((void *)v8 + 16);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        *((void *)v7 + 18) = *((void *)v8 + 18);
        *((void *)v7 + 19) = *((void *)v8 + 19);
        unint64_t v114 = *((void *)v8 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v114 <= 2)
        {
          *((_OWORD *)v7 + 10) = *((_OWORD *)v8 + 10);
        }
        else
        {
          v7[160] = v8[160];
          *((void *)v7 + 21) = *((void *)v8 + 21);
          swift_bridgeObjectRetain();
        }
        uint64_t v112 = (int *)type metadata accessor for FormatPackage();
        uint64_t v73 = v112[23];
        uint64_t v74 = &v7[v73];
        uint64_t v75 = &v8[v73];
        *(void *)uint64_t v74 = *(void *)&v8[v73];
        *((void *)v74 + 1) = *(void *)&v8[v73 + 8];
        uint64_t v103 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v107 = v74;
        uint64_t v76 = v103[6];
        uint64_t v77 = &v74[v76];
        unint64_t v78 = &v75[v76];
        uint64_t v79 = *(void *)&v75[v76 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v79 == 1)
        {
          long long v80 = *(_OWORD *)v78;
          long long v81 = *((_OWORD *)v78 + 2);
          *((_OWORD *)v77 + 1) = *((_OWORD *)v78 + 1);
          *((_OWORD *)v77 + 2) = v81;
          *(_OWORD *)uint64_t v77 = v80;
        }
        else
        {
          *(void *)uint64_t v77 = *(void *)v78;
          *((void *)v77 + 1) = *((void *)v78 + 1);
          *((void *)v77 + 2) = *((void *)v78 + 2);
          *((void *)v77 + 3) = *((void *)v78 + 3);
          *((void *)v77 + 4) = *((void *)v78 + 4);
          *((void *)v77 + 5) = *((void *)v78 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v82 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v83 = &v77[v82];
        uint64_t v84 = &v78[v82];
        uint64_t v85 = sub_1C1518CDC();
        uint64_t v86 = *(void *)(v85 - 8);
        uint64_t v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
        if (v115(v84, 1, v85))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
        }
        uint64_t v88 = v103[7];
        uint64_t v89 = (char *)v107 + v88;
        uint64_t v90 = &v75[v88];
        if (v115(&v75[v88], 1, v85))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v89, v90, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v89, 0, 1, v85);
        }
        *(void *)((char *)v107 + v103[8]) = *(void *)&v75[v103[8]];
        uint64_t v92 = v112[24];
        uint64_t v108 = &v7[v92];
        uint64_t v93 = &v8[v92];
        uint64_t v94 = sub_1C151928C();
        uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
        swift_bridgeObjectRetain();
        v95(v108, v93, v94);
        uint64_t v96 = v112[25];
        uint64_t v97 = &v7[v96];
        uint64_t v98 = &v8[v96];
        if (v115(v98, 1, v85))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v97, v98, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v97, 0, 1, v85);
        }
        goto LABEL_32;
      case 6u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_33;
      case 7u:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_retain();
        goto LABEL_33;
      case 8u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_33;
      case 9u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        v7[80] = v8[80];
        *((void *)v7 + 11) = *((void *)v8 + 11);
        *((void *)v7 + 12) = *((void *)v8 + 12);
        v7[104] = v8[104];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_33;
      case 0xAu:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        uint64_t v55 = *((void *)v8 + 4);
        uint64_t v56 = *((void *)v8 + 5);
        uint64_t v122 = a3;
        uint64_t v57 = *((void *)v8 + 6);
        uint64_t v58 = *((void *)v8 + 7);
        uint64_t v59 = *((void *)v8 + 8);
        __dstd = (void *)*((void *)v8 + 9);
        unsigned __int8 v60 = v8[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v55, v56, v57, v58, v59, (uint64_t)__dstd, v60);
        *((void *)v7 + 4) = v55;
        *((void *)v7 + 5) = v56;
        *((void *)v7 + 6) = v57;
        *((void *)v7 + 7) = v58;
        a3 = v122;
        *((void *)v7 + 8) = v59;
        *((void *)v7 + 9) = __dstd;
        v7[80] = v60;
        goto LABEL_33;
      case 0xBu:
        uint64_t v121 = a3;
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        uint64_t v34 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v35 = &v7[v34];
        uint64_t v36 = &v8[v34];
        *(void *)uint64_t v35 = *(void *)&v8[v34];
        *((void *)v35 + 1) = *(void *)&v8[v34 + 8];
        uint64_t v37 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v38 = v37[5];
        uint64_t v111 = &v36[v38];
        uint64_t v113 = &v35[v38];
        uint64_t v39 = sub_1C151631C();
        uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v105(v113, v111, v39);
        uint64_t v40 = v37[6];
        uint64_t v41 = &v35[v40];
        unsigned __int8 v42 = &v36[v40];
        *(void *)uint64_t v41 = *(void *)v42;
        *((void *)v41 + 1) = *((void *)v42 + 1);
        uint64_t v43 = v37[7];
        uint64_t v44 = &v35[v43];
        uint64_t v45 = &v36[v43];
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        uint64_t v46 = v37[8];
        uint64_t v47 = &v35[v46];
        unint64_t v48 = &v36[v46];
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = *((void *)v48 + 1);
        uint64_t v49 = v37[9];
        uint64_t v50 = &v35[v49];
        uint64_t v51 = &v36[v49];
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = *((void *)v51 + 1);
        uint64_t v52 = v37[10];
        __dstb = &v35[v52];
        uint64_t v106 = &v36[v52];
        uint64_t v53 = sub_1C151D6DC();
        uint64_t v100 = *(void *)(v53 - 8);
        uint64_t v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v102(v106, 1, v53))
        {
          sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
          memcpy(__dstb, v106, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v100 + 16))(__dstb, v106, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(__dstb, 0, 1, v53);
        }
        *(void *)&v35[v37[11]] = *(void *)&v36[v37[11]];
        *(void *)&v35[v37[12]] = *(void *)&v36[v37[12]];
        *(void *)&v35[v37[13]] = *(void *)&v36[v37[13]];
        *(void *)&v35[v37[14]] = *(void *)&v36[v37[14]];
        *(void *)&v35[v37[15]] = *(void *)&v36[v37[15]];
        *(void *)&v35[v37[16]] = *(void *)&v36[v37[16]];
        *(void *)&v35[v37[17]] = *(void *)&v36[v37[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      default:
        uint64_t v121 = a3;
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        uint64_t v9 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v10 = v9[5];
        __dstc = &v7[v10];
        uint64_t v11 = &v8[v10];
        uint64_t v12 = sub_1C151631C();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(__dstc, v11, v12);
        uint64_t v14 = v9[6];
        uint64_t v15 = &v7[v14];
        uint64_t v16 = &v8[v14];
        *(void *)uint64_t v15 = *(void *)v16;
        *((void *)v15 + 1) = *((void *)v16 + 1);
        uint64_t v17 = v9[7];
        uint64_t v18 = &v7[v17];
        uint64_t v19 = &v8[v17];
        *(void *)uint64_t v18 = *(void *)v19;
        *((void *)v18 + 1) = *((void *)v19 + 1);
        uint64_t v20 = v9[8];
        uint64_t v21 = &v7[v20];
        uint64_t v22 = &v8[v20];
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = *((void *)v22 + 1);
        uint64_t v23 = v9[9];
        uint64_t v24 = &v7[v23];
        uint64_t v25 = &v8[v23];
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v26 = v9[10];
        __dst = &v7[v26];
        uint64_t v104 = &v8[v26];
        uint64_t v27 = sub_1C151D6DC();
        uint64_t v101 = *(void *)(v27 - 8);
        uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v109(v104, 1, v27))
        {
          sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
          memcpy(__dst, v104, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v101 + 16))(__dst, v104, v27);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(__dst, 0, 1, v27);
        }
        *(void *)&v7[v9[11]] = *(void *)&v8[v9[11]];
        *(void *)&v7[v9[12]] = *(void *)&v8[v9[12]];
        *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
        *(void *)&v7[v9[14]] = *(void *)&v8[v9[14]];
        *(void *)&v7[v9[15]] = *(void *)&v8[v9[15]];
        *(void *)&v7[v9[16]] = *(void *)&v8[v9[16]];
        *(void *)&v7[v9[17]] = *(void *)&v8[v9[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_30:
        swift_bridgeObjectRetain();
LABEL_31:
        swift_bridgeObjectRetain();
LABEL_32:
        a3 = v121;
LABEL_33:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  uint64_t v63 = *(int *)(a3 + 24);
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = *(void *)v65;
  uint64_t v67 = *((void *)v65 + 1);
  unsigned __int8 v68 = v65[16];
  sub_1BFDCA484(*(void *)v65, v67, v68);
  uint64_t v69 = *(void *)v64;
  uint64_t v70 = *((void *)v64 + 1);
  *(void *)uint64_t v64 = v66;
  *((void *)v64 + 1) = v67;
  unsigned __int8 v71 = v64[16];
  v64[16] = v68;
  sub_1BFDCA350(v69, v70, v71);
  return a1;
}

void *sub_1C10D1298(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FormatFile();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      uint64_t v71 = v3;
      long long v22 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v22;
      v7[2] = v8[2];
      uint64_t v23 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v24 = (char *)v7 + v23;
      uint64_t v25 = (char *)v8 + v23;
      *(_OWORD *)((char *)v7 + v23) = *(_OWORD *)((char *)v8 + v23);
      uint64_t v26 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v27 = v26[5];
      uint64_t v28 = &v24[v27];
      uint64_t v29 = &v25[v27];
      uint64_t v30 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
      *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
      *(_OWORD *)&v24[v26[8]] = *(_OWORD *)&v25[v26[8]];
      *(_OWORD *)&v24[v26[9]] = *(_OWORD *)&v25[v26[9]];
      uint64_t v31 = v26[10];
      unint64_t v32 = &v24[v31];
      unint64_t v33 = &v25[v31];
      uint64_t v34 = sub_1C151D6DC();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      *(void *)&v24[v26[11]] = *(void *)&v25[v26[11]];
      *(void *)&v24[v26[12]] = *(void *)&v25[v26[12]];
      *(void *)&v24[v26[13]] = *(void *)&v25[v26[13]];
      *(void *)&v24[v26[14]] = *(void *)&v25[v26[14]];
      *(void *)&v24[v26[15]] = *(void *)&v25[v26[15]];
      *(void *)&v24[v26[16]] = *(void *)&v25[v26[16]];
      *(void *)&v24[v26[17]] = *(void *)&v25[v26[17]];
      swift_storeEnumTagMultiPayload();
      uint64_t v3 = v71;
      break;
    case 5:
      uint64_t v72 = v3;
      unsigned __int8 v68 = v4;
      long long v37 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v37;
      v7[2] = v8[2];
      *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
      *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
      *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
      *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
      *(_OWORD *)((char *)v7 + 136) = *(_OWORD *)((char *)v8 + 136);
      *((void *)v7 + 19) = *((void *)v8 + 19);
      v7[10] = v8[10];
      uint64_t v67 = (int *)type metadata accessor for FormatPackage();
      uint64_t v38 = v67[23];
      uint64_t v39 = (char *)v7 + v38;
      uint64_t v40 = (char *)v8 + v38;
      *(_OWORD *)((char *)v7 + v38) = *(_OWORD *)((char *)v8 + v38);
      uint64_t v70 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v41 = v70[6];
      unsigned __int8 v42 = &v39[v41];
      uint64_t v43 = &v40[v41];
      long long v44 = *(_OWORD *)&v40[v41 + 16];
      *(_OWORD *)unsigned __int8 v42 = *(_OWORD *)&v40[v41];
      *((_OWORD *)v42 + 1) = v44;
      *((_OWORD *)v42 + 2) = *(_OWORD *)&v40[v41 + 32];
      uint64_t v45 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v46 = &v42[v45];
      uint64_t v47 = &v43[v45];
      uint64_t v48 = sub_1C1518CDC();
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
      if (v69(v47, 1, v48))
      {
        sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      uint64_t v51 = v70[7];
      uint64_t v52 = &v39[v51];
      uint64_t v53 = &v40[v51];
      if (v69(&v40[v51], 1, v48))
      {
        sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v52, v53, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v48);
      }
      *(void *)&v39[v70[8]] = *(void *)&v40[v70[8]];
      uint64_t v55 = v67[24];
      uint64_t v56 = (char *)v7 + v55;
      uint64_t v57 = (char *)v8 + v55;
      uint64_t v58 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
      uint64_t v59 = v67[25];
      unsigned __int8 v60 = (char *)v7 + v59;
      uint64_t v61 = (char *)v8 + v59;
      uint64_t v4 = v68;
      if (v69(v61, 1, v48))
      {
        sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v60, v61, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v60, 0, 1, v48);
      }
      uint64_t v3 = v72;
      goto LABEL_23;
    case 0:
      *uint64_t v7 = *v8;
      uint64_t v11 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)((char *)v7 + v11[6]) = *(_OWORD *)((char *)v8 + v11[6]);
      *(_OWORD *)((char *)v7 + v11[7]) = *(_OWORD *)((char *)v8 + v11[7]);
      *(_OWORD *)((char *)v7 + v11[8]) = *(_OWORD *)((char *)v8 + v11[8]);
      *(_OWORD *)((char *)v7 + v11[9]) = *(_OWORD *)((char *)v8 + v11[9]);
      uint64_t v16 = v11[10];
      uint64_t v17 = (char *)v7 + v16;
      uint64_t v18 = (char *)v8 + v16;
      uint64_t v19 = sub_1C151D6DC();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      *(void *)((char *)v7 + v11[11]) = *(void *)((char *)v8 + v11[11]);
      *(void *)((char *)v7 + v11[12]) = *(void *)((char *)v8 + v11[12]);
      *(void *)((char *)v7 + v11[13]) = *(void *)((char *)v8 + v11[13]);
      *(void *)((char *)v7 + v11[14]) = *(void *)((char *)v8 + v11[14]);
      *(void *)((char *)v7 + v11[15]) = *(void *)((char *)v8 + v11[15]);
      *(void *)((char *)v7 + v11[16]) = *(void *)((char *)v8 + v11[16]);
      *(void *)((char *)v7 + v11[17]) = *(void *)((char *)v8 + v11[17]);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      break;
  }
  uint64_t v63 = *(int *)(v3 + 24);
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)v4 + v63;
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  v64[16] = v65[16];
  return a1;
}

void *sub_1C10D1B4C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    sub_1C10C9C9C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v9 = type metadata accessor for FormatFile();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        uint64_t v74 = a3;
        long long v22 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v22;
        v7[2] = v8[2];
        uint64_t v23 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v24 = (char *)v7 + v23;
        uint64_t v25 = (char *)v8 + v23;
        *(_OWORD *)((char *)v7 + v23) = *(_OWORD *)((char *)v8 + v23);
        uint64_t v26 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v27 = v26[5];
        uint64_t v28 = &v24[v27];
        uint64_t v29 = &v25[v27];
        uint64_t v30 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
        *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
        *(_OWORD *)&v24[v26[8]] = *(_OWORD *)&v25[v26[8]];
        *(_OWORD *)&v24[v26[9]] = *(_OWORD *)&v25[v26[9]];
        uint64_t v31 = v26[10];
        unint64_t v32 = &v24[v31];
        unint64_t v33 = &v25[v31];
        uint64_t v34 = sub_1C151D6DC();
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
          memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        *(void *)&v24[v26[11]] = *(void *)&v25[v26[11]];
        *(void *)&v24[v26[12]] = *(void *)&v25[v26[12]];
        *(void *)&v24[v26[13]] = *(void *)&v25[v26[13]];
        *(void *)&v24[v26[14]] = *(void *)&v25[v26[14]];
        *(void *)&v24[v26[15]] = *(void *)&v25[v26[15]];
        *(void *)&v24[v26[16]] = *(void *)&v25[v26[16]];
        *(void *)&v24[v26[17]] = *(void *)&v25[v26[17]];
        swift_storeEnumTagMultiPayload();
        a3 = v74;
        break;
      case 5:
        uint64_t v75 = a3;
        long long v37 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v37;
        v7[2] = v8[2];
        *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
        *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
        *(_OWORD *)((char *)v7 + 136) = *(_OWORD *)((char *)v8 + 136);
        *((void *)v7 + 19) = *((void *)v8 + 19);
        v7[10] = v8[10];
        uint64_t v71 = (int *)type metadata accessor for FormatPackage();
        uint64_t v38 = v71[23];
        uint64_t v39 = (char *)v7 + v38;
        uint64_t v40 = (char *)v8 + v38;
        *(_OWORD *)((char *)v7 + v38) = *(_OWORD *)((char *)v8 + v38);
        uint64_t v73 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v41 = v73[6];
        unsigned __int8 v42 = &v39[v41];
        uint64_t v43 = &v40[v41];
        long long v44 = *(_OWORD *)&v40[v41 + 16];
        *(_OWORD *)unsigned __int8 v42 = *(_OWORD *)&v40[v41];
        *((_OWORD *)v42 + 1) = v44;
        *((_OWORD *)v42 + 2) = *(_OWORD *)&v40[v41 + 32];
        uint64_t v45 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v46 = &v42[v45];
        uint64_t v47 = &v43[v45];
        uint64_t v48 = sub_1C1518CDC();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
        if (v72(v47, 1, v48))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        uint64_t v51 = v73[7];
        uint64_t v52 = &v39[v51];
        uint64_t v53 = &v40[v51];
        if (v72(&v40[v51], 1, v48))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v52, v53, v48);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v48);
        }
        *(void *)&v39[v73[8]] = *(void *)&v40[v73[8]];
        uint64_t v55 = v71[24];
        uint64_t v56 = (char *)v7 + v55;
        uint64_t v57 = (char *)v8 + v55;
        uint64_t v58 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        uint64_t v59 = v71[25];
        unsigned __int8 v60 = (char *)v7 + v59;
        uint64_t v61 = (char *)v8 + v59;
        if (v72(v61, 1, v48))
        {
          sub_1C10C9B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v60, v61, v48);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v60, 0, 1, v48);
        }
        a3 = v75;
        goto LABEL_24;
      case 0:
        *uint64_t v7 = *v8;
        uint64_t v11 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v12 = v11[5];
        uint64_t v13 = (char *)v7 + v12;
        uint64_t v14 = (char *)v8 + v12;
        uint64_t v15 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        *(_OWORD *)((char *)v7 + v11[6]) = *(_OWORD *)((char *)v8 + v11[6]);
        *(_OWORD *)((char *)v7 + v11[7]) = *(_OWORD *)((char *)v8 + v11[7]);
        *(_OWORD *)((char *)v7 + v11[8]) = *(_OWORD *)((char *)v8 + v11[8]);
        *(_OWORD *)((char *)v7 + v11[9]) = *(_OWORD *)((char *)v8 + v11[9]);
        uint64_t v16 = v11[10];
        uint64_t v17 = (char *)v7 + v16;
        uint64_t v18 = (char *)v8 + v16;
        uint64_t v19 = sub_1C151D6DC();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1C10C9B90(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        *(void *)((char *)v7 + v11[11]) = *(void *)((char *)v8 + v11[11]);
        *(void *)((char *)v7 + v11[12]) = *(void *)((char *)v8 + v11[12]);
        *(void *)((char *)v7 + v11[13]) = *(void *)((char *)v8 + v11[13]);
        *(void *)((char *)v7 + v11[14]) = *(void *)((char *)v8 + v11[14]);
        *(void *)((char *)v7 + v11[15]) = *(void *)((char *)v8 + v11[15]);
        *(void *)((char *)v7 + v11[16]) = *(void *)((char *)v8 + v11[16]);
        *(void *)((char *)v7 + v11[17]) = *(void *)((char *)v8 + v11[17]);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  uint64_t v63 = *(int *)(a3 + 24);
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  char v66 = v65[16];
  uint64_t v67 = *(void *)v64;
  uint64_t v68 = *((void *)v64 + 1);
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  unsigned __int8 v69 = v64[16];
  v64[16] = v66;
  sub_1BFDCA350(v67, v68, v69);
  return a1;
}

uint64_t sub_1C10D243C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10D2450);
}

uint64_t sub_1C10D2450(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatFile();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C10D2500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10D2514);
}

void *sub_1C10D2514(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatFile();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C10D25BC()
{
  uint64_t result = type metadata accessor for FormatFile();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static Ratio.Aspect.aspect(for:min:max:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, double *a3@<X8>)
{
  id v5 = objc_msgSend(*(id *)(a1 + 40), sel_thumbnailUltraHQ);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_thumbnailSize);
    double v8 = v7;
    double v10 = v9;

    if (v10 == 0.0)
    {
      uint64_t v11 = sub_1C1517A7C();
      uint64_t v12 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
      uint64_t v13 = v11;
      uint64_t v14 = a3;
      uint64_t v15 = a2;
      return v12(v14, v15, v13);
    }
    sub_1C1517A6C();
    double v18 = v17;
    double v19 = v8 / v10;
    sub_1C1517A6C();
    if (v20 >= v19) {
      double v20 = v19;
    }
    if (v18 > v20) {
      double v20 = v18;
    }
    *a3 = v20;
    uint64_t v16 = *MEMORY[0x1E4FAB8D0];
  }
  else
  {
    uint64_t v16 = *MEMORY[0x1E4FAB8C0];
  }
  uint64_t v21 = sub_1C1517A7C();
  uint64_t v12 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);
  uint64_t v13 = v21;
  uint64_t v14 = a3;
  uint64_t v15 = v16;
  return v12(v14, v15, v13);
}

ValueMetadata *type metadata accessor for CategoryViewItemWidth()
{
  return &type metadata for CategoryViewItemWidth;
}

uint64_t static SharingActivity.block(tag:)(uint64_t a1)
{
  sub_1C10D372C();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C10D3798();
  MEMORY[0x1F4188790](v3 - 8);
  if (!a1) {
    return 0;
  }
  uint64_t v4 = qword_1EB87B188;
  swift_unknownObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151E5EC();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1C0078974();
  swift_unknownObjectRetain();
  sub_1C151AEDC();
  sub_1C151B3AC();
  sub_1C151AEDC();
  swift_allocObject();
  uint64_t v5 = sub_1C151A9DC();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t static UIActivityType.block.getter()
{
  return sub_1C151E5EC();
}

NewsFeed::BlockingCommandState_optional __swiftcall BlockingCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = NewsFeed_BlockingCommandState_notBlocked;
  }
  else {
    v2.value = NewsFeed_BlockingCommandState_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t BlockingCommandState.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6B636F6C42746F6ELL;
  }
  else {
    return 0x64656B636F6C62;
  }
}

uint64_t sub_1C10D2AC8(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x6B636F6C42746F6ELL;
  }
  else {
    uint64_t v3 = 0x64656B636F6C62;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006465;
  }
  if (*a2) {
    uint64_t v5 = 0x6B636F6C42746F6ELL;
  }
  else {
    uint64_t v5 = 0x64656B636F6C62;
  }
  if (*a2) {
    unint64_t v6 = 0xEA00000000006465;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C10D2B78()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10D2C00()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10D2C74()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10D2CF8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C10D2D58(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64656B636F6C62;
  if (*v1) {
    uint64_t v2 = 0x6B636F6C42746F6ELL;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006465;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C10D2D9C(uint64_t a1)
{
  unint64_t v2 = sub_1C10D3968();
  return MEMORY[0x1F4163458](a1, v2);
}

uint64_t static Commands.Blocking.block.getter()
{
  return sub_1BFC387A8(&qword_1EB87B188);
}

uint64_t sub_1C10D2E0C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1BFEE8164(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  swift_getObjectType();
  uint64_t v3 = FCTagProviding.localizedTagType.getter();
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1BFE9C558();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  uint64_t v6 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_1C10D2FD0(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB86AD68 != -1) {
      swift_once();
    }
    id v1 = &qword_1EB85DE28;
  }
  else
  {
    if (qword_1EA194A20 != -1) {
      swift_once();
    }
    id v1 = &qword_1EA1AA298;
  }
  uint64_t v2 = (void *)*v1;
  return v2;
}

uint64_t sub_1C10D3078(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB86AD68 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EB85DE28;
  }
  else
  {
    if (qword_1EA194A20 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EA1AA298;
  }
  return sub_1C151B39C();
}

uint64_t static KeyCommandItem.block(tag:)(uint64_t a1)
{
  sub_1C10D3798();
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EB87B188 != -1) {
    swift_once();
  }
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1C0078974();
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_1C151AEDC();
  return sub_1C151A5AC();
}

uint64_t sub_1C10D32D4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1BFEE8164(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  swift_getObjectType();
  uint64_t v5 = FCTagProviding.localizedTagType.getter();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1BFE9C558();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  uint64_t v8 = sub_1C151E66C();
  uint64_t v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v10;
  return result;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5block3tagACSgSo14FCTagProviding_pSg_tFZ_0(uint64_t a1)
{
  sub_1C10D39BC(0, (unint64_t *)&unk_1EB86FE60, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C10D39BC(0, (unint64_t *)&unk_1EB86FE28, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1C10D39BC(0, (unint64_t *)&unk_1EB86FE40, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v4 - 8);
  if (!a1) {
    return 0;
  }
  uint64_t v5 = qword_1EB87B188;
  swift_unknownObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1C0078974();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151AEBC();
  sub_1C151AE9C();
  sub_1C151B2DC();
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A80C();
}

void sub_1C10D372C()
{
  if (!qword_1EB864210)
  {
    sub_1C151B3AC();
    sub_1C0078974();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864210);
    }
  }
}

void sub_1C10D3798()
{
  if (!qword_1EB864220)
  {
    sub_1C0078974();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864220);
    }
  }
}

uint64_t sub_1C10D37FC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10D3834@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C10D32D4(a1);
}

unsigned char *storeEnumTagSinglePayload for BlockingCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10D3920);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockingCommandState()
{
  return &type metadata for BlockingCommandState;
}

ValueMetadata *type metadata accessor for Commands.Blocking()
{
  return &type metadata for Commands.Blocking;
}

unint64_t sub_1C10D3968()
{
  unint64_t result = qword_1EA1AB380;
  if (!qword_1EA1AB380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB380);
  }
  return result;
}

void sub_1C10D39BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0078974();
    unint64_t v7 = a3(a1, &type metadata for BlockingCommandState, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C10D3A20()
{
  return sub_1C10D2E0C();
}

ValueMetadata *type metadata accessor for SportsFeaturedEventsResult()
{
  return &type metadata for SportsFeaturedEventsResult;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatProgressViewNodeProgressObserver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_1C00F804C(*a2);
  *a1 = v3;
  return a1;
}

uint64_t destroy for FormatProgressViewNodeProgressObserver(uint64_t *a1)
{
  return sub_1C00F80E0(*a1);
}

uint64_t *assignWithCopy for FormatProgressViewNodeProgressObserver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_1C00F804C(*a2);
  uint64_t v4 = *a1;
  *a1 = v3;
  sub_1C00F80E0(v4);
  return a1;
}

uint64_t *assignWithTake for FormatProgressViewNodeProgressObserver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;
  sub_1C00F80E0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatProgressViewNodeProgressObserver(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 15);
  }
  unsigned int v3 = (((*(void *)a1 >> 60) >> 3) & 0xFFFFFFF1 | (2 * ((*(void *)a1 >> 60) & 7))) ^ 0xF;
  if (v3 >= 0xE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatProgressViewNodeProgressObserver(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(void *)unint64_t result = a2 - 15;
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = (unint64_t)(((-a2 >> 1) & 7) - 8 * a2) << 60;
    }
  }
  return result;
}

uint64_t *sub_1C10D3B90(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFFFLL | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressViewNodeProgressObserver()
{
  return &type metadata for FormatProgressViewNodeProgressObserver;
}

uint64_t sub_1C10D3BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = sub_1C151BEFC();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v7 = (void *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v16[1] = v2;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F87DC(0, v8, 0);
    uint64_t v9 = v21;
    uint64_t v10 = a1 + 32;
    uint64_t v11 = *(void *)(a2 + 104);
    void v16[2] = v5 + 32;
    uint64_t v17 = v11;
    for (int64_t i = v8 - 1; ; --i)
    {
      sub_1C00F5BA4(v10, (uint64_t)v20);
      sub_1C00F5BA4((uint64_t)v20, (uint64_t)&v19);
      sub_1C00F5E3C((uint64_t)v20, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C024C374(v17, v7);
      sub_1C00F5E3C((uint64_t)v20, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      uint64_t v21 = v9;
      unint64_t v14 = *(void *)(v9 + 16);
      unint64_t v13 = *(void *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F87DC(v13 > 1, v14 + 1, 1);
        uint64_t v9 = v21;
      }
      *(void *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, void *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v7, v18);
      if (!i) {
        break;
      }
      v10 += 136;
    }
  }
  return v9;
}

id sub_1C10D3DD8(uint64_t a1, double a2, double a3, double a4)
{
  sub_1C151F7FC();
  double v8 = v6;
  double v9 = v7;
  if (*(void *)(a1 + 184))
  {
    if (*(unsigned char *)(a1 + 256)) {
      double v10 = 0.0;
    }
    else {
      double v10 = *(double *)(a1 + 224) * a4;
    }
    if (*(unsigned char *)(a1 + 256)) {
      double v11 = 0.0;
    }
    else {
      double v11 = *(double *)(a1 + 232) * a4;
    }
    if (*(unsigned char *)(a1 + 256)) {
      double v12 = v6;
    }
    else {
      double v12 = *(double *)(a1 + 240) * a4;
    }
    if (*(unsigned char *)(a1 + 256)) {
      double v13 = v7;
    }
    else {
      double v13 = *(double *)(a1 + 248) * a4;
    }
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14) {
      goto LABEL_18;
    }
LABEL_17:
    unsigned int v15 = *(unsigned __int8 *)(v14 + 112);
    if (v15 > 0xFD) {
      goto LABEL_18;
    }
    uint64_t v21 = *(void *)(v14 + 96);
    double v20 = *(char **)(v14 + 104);
    if ((v15 & 0x80) != 0)
    {
      v30.origin.x = v10;
      v30.origin.y = v11;
      v30.size.width = v12;
      v30.size.height = v13;
      double Height = CGRectGetHeight(v30);
      v31.origin.x = v10;
      v31.origin.y = v11;
      v31.size.width = v12;
      v31.size.height = v13;
      double Width = CGRectGetWidth(v31);
      if (Width >= Height) {
        double Width = Height;
      }
      double v22 = Width * 0.5;
      sub_1BFEF68AC(v21, (uint64_t)v20, v15);
      double v20 = (char *)&unk_1F1B8A178;
      uint64_t v23 = qword_1F1B8A188;
      if (qword_1F1B8A188) {
        goto LABEL_23;
      }
    }
    else
    {
      double v22 = *(double *)(v14 + 96);
      sub_1BFF046A0(*(uint64_t *)&v22, *(void *)(v14 + 104), *(unsigned char *)(v14 + 112));
      uint64_t v23 = *((void *)v20 + 2);
      if (v23)
      {
LABEL_23:
        uint64_t v24 = 0;
        uint64_t v25 = v20 + 32;
        do
        {
          uint64_t v26 = *v25++;
          uint64_t v27 = qword_1C15C6840[v26];
          if ((v27 & ~v24) == 0) {
            uint64_t v27 = 0;
          }
          v24 |= v27;
          --v23;
        }
        while (v23);
        goto LABEL_32;
      }
    }
    uint64_t v24 = 0;
LABEL_32:
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, v24, v10, v11, v12, v13, v22 * a4, v22 * a4);
    return v19;
  }
  double v10 = 0.0;
  double v11 = 0.0;
  double v12 = v6;
  double v13 = v7;
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14) {
    goto LABEL_17;
  }
LABEL_18:
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  v32.origin.x = v10;
  v32.origin.y = v11;
  v32.size.width = v12;
  v32.size.height = v13;
  if (CGRectEqualToRect(*(CGRect *)(&v8 - 2), v32)) {
    return 0;
  }
  id v19 = objc_msgSend(self, sel_bezierPathWithRect_, v10, v11, v12, v13);
  return v19;
}

id UIFont.withTraits(width:slant:grade:design:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v12 = MEMORY[0x1E4FBC868];
  if (a2)
  {
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v33 = sub_1C151E62C();
    uint64_t v35 = v34;
    id v36 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&a1);
    unint64_t v53 = sub_1BFFBE2BC();
    *(void *)&long long v52 = v36;
    sub_1BFF993A8(&v52, v51);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BFFB4A24(v51, v33, v35, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      if (a6) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  double v38 = *(double *)&a3;
  uint64_t v39 = sub_1C151E62C();
  uint64_t v41 = v40;
  id v42 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v38);
  unint64_t v53 = sub_1BFFBE2BC();
  *(void *)&long long v52 = v42;
  sub_1BFF993A8(&v52, v51);
  char v43 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BFFB4A24(v51, v39, v41, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a6)
  {
LABEL_4:
    if (!a7) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  id v44 = objc_msgSend(self, sel_ts_fontSystemFontGradeTraitKey);
  uint64_t v45 = sub_1C151E62C();
  uint64_t v47 = v46;

  id v48 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, a5);
  unint64_t v53 = sub_1BFFBE2BC();
  *(void *)&long long v52 = v48;
  sub_1BFF993A8(&v52, v51);
  char v49 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BFFB4A24(v51, v45, v47, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a7)
  {
LABEL_5:
    double v13 = self;
    id v14 = a7;
    id v15 = objc_msgSend(v13, sel_ts_fontSystemFontDesignTraitKey);
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    type metadata accessor for SystemDesign(0);
    unint64_t v53 = v19;
    *(void *)&long long v52 = v14;
    sub_1BFF993A8(&v52, v51);
    id v20 = v14;
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BFFB4A24(v51, v16, v18, v21);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_6:
  if (*(void *)(v12 + 16))
  {
    id v22 = objc_msgSend(v50, sel_fontDescriptor);
    sub_1BFFB4F4C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v24 = (void *)*MEMORY[0x1E4FB0950];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB0950];
    sub_1BFFB4FA4();
    *(void *)(inited + 64) = v25;
    *(void *)(inited + 40) = v12;
    id v26 = v24;
    sub_1BFFB5010(inited);
    type metadata accessor for AttributeName(0);
    sub_1BFFB46E8();
    uint64_t v27 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v22, sel_fontDescriptorByAddingAttributes_, v27);

    objc_msgSend(v50, sel_pointSize);
    id v30 = objc_msgSend(self, sel_fontWithDescriptor_size_, v28, v29);

    return v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    return v50;
  }
}

uint64_t FormatJsonConfigKey.rawValue.getter()
{
  if (*v0) {
    return 0x73676E69646E6962;
  }
  else {
    return 0x736E6F6974706FLL;
  }
}

uint64_t sub_1C10D4488(char *a1, char *a2)
{
  return sub_1C14852FC(*a1, *a2);
}

uint64_t sub_1C10D4494()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10D4518()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

void sub_1C10D4588(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x736E6F6974706FLL;
  if (*v1) {
    uint64_t v2 = 0x73676E69646E6962;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C10D45C8(void *a1)
{
  return FormatJsonConfigKey.encode(to:)(a1);
}

uint64_t sub_1C10D45E8(char *a1, char *a2)
{
  return sub_1C1268494(*a1, *a2);
}

uint64_t sub_1C10D45F4(char *a1, char *a2)
{
  return sub_1C1268DB0(*a1, *a2);
}

uint64_t sub_1C10D4600(char *a1, char *a2)
{
  return sub_1C1267B80(*a1, *a2);
}

uint64_t _s8NewsFeed19FormatJsonConfigKeyO1loiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x73676E69646E6962;
  }
  else {
    uint64_t v3 = 0x736E6F6974706FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x73676E69646E6962;
  }
  else {
    uint64_t v5 = 0x736E6F6974706FLL;
  }
  if (*a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1C10D46B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C10D46E8();
  unint64_t result = sub_1BFC4019C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C10D46E8()
{
  unint64_t result = qword_1EA1AB388;
  if (!qword_1EA1AB388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB388);
  }
  return result;
}

unint64_t sub_1C10D473C(uint64_t a1)
{
  unint64_t result = sub_1C10D4764();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10D4764()
{
  unint64_t result = qword_1EA1AB390;
  if (!qword_1EA1AB390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB390);
  }
  return result;
}

unint64_t sub_1C10D47B8(void *a1)
{
  a1[1] = sub_1C0079CF4();
  a1[2] = sub_1C0079DF0();
  unint64_t result = sub_1C0079D48();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatJsonConfigKey()
{
  return &type metadata for FormatJsonConfigKey;
}

void *sub_1C10D4828()
{
  sub_1BFF9E7E4(0, &qword_1EA19B6E0, MEMORY[0x1E4FAB828], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  char v66 = (char *)&v61 - v1;
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E7E4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  sub_1BFF9E7E4(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
  uint64_t v70 = v3;
  sub_1C0181BEC(0);
  uint64_t v73 = v4;
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 72);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v68 = v7;
  uint64_t v69 = v6 | 7;
  uint64_t v8 = swift_allocObject();
  uint64_t v64 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_1C15341A0;
  double v9 = (char *)(v8 + v7);
  sub_1C151765C();
  sub_1C04374E0(0x74726F7077656956, 0xED0000657A695320, v10, v11, 0, v9);
  uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
  double v13 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v9, 0, 1, v12);
  id v14 = v13;
  sub_1C15176DC();
  sub_1C04374E0(0x20656C6269736956, 0xEC000000657A6953, v15, v16, 0, &v9[v5]);
  v13(&v9[v5], 0, 1, v12);
  uint64_t v67 = 2 * v5;
  sub_1C151764C();
  sub_1C04374E0(0x676E69646E756F42, 0xED0000657A695320, v17, v18, 0, &v9[2 * v5]);
  v13(&v9[2 * v5], 0, 1, v12);
  uint64_t v71 = 3 * v5;
  sub_1C151762C();
  sub_1C04374E0(0x5320776F646E6957, 0xEB00000000657A69, v19, v20, 0, &v9[3 * v5]);
  v13(&v9[3 * v5], 0, 1, v12);
  uint64_t v65 = 4 * v5;
  sub_1C15176AC();
  sub_1C04374E0(0xD000000000000012, 0x80000001C1634400, v21, v22, 0, &v9[4 * v5]);
  v13(&v9[4 * v5], 0, 1, v12);
  sub_1C151766C();
  v80[0] = v23;
  v80[1] = v24;
  v80[2] = v25;
  v80[3] = v26;
  char v81 = 0;
  sub_1C043EB5C(0x4D2074756F79614CLL, 0xEE00736E69677261, (uint64_t)v80, &v9[5 * v5]);
  v13(&v9[5 * v5], 0, 1, v12);
  sub_1C151767C();
  v78[0] = v27;
  v78[1] = v28;
  v78[2] = v29;
  v78[3] = v30;
  char v79 = 0;
  sub_1C043EB5C(0xD000000000000010, 0x80000001C1634420, (uint64_t)v78, &v9[6 * v5]);
  v13(&v9[6 * v5], 0, 1, v12);
  CGRect v31 = (void *)sub_1C15176CC();
  uint64_t v62 = 0xD000000000000015;
  sub_1C043EF1C(0xD000000000000015, 0x80000001C1616EC0, v31, &v9[7 * v5]);
  v13(&v9[7 * v5], 0, 1, v12);
  uint64_t v32 = sub_1C151768C();
  sub_1C043F230(0xD000000000000010, 0x80000001C1634440, v32, 0, &v9[8 * v5]);
  v13(&v9[8 * v5], 0, 1, v12);
  uint64_t v61 = v5;
  uint64_t v33 = (uint64_t)v66;
  sub_1C15176BC();
  uint64_t v34 = sub_1C151794C();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  uint64_t v63 = 0xD000000000000014;
  sub_1C043F560(0xD000000000000014, 0x80000001C1634460, v33, &v9[9 * v5]);
  v14(&v9[9 * v5], 0, 1, v12);
  sub_1C15176EC();
  sub_1C042F1BC(0x656C616353, 0xE500000000000000, v35, 0, &v9[10 * v5]);
  v14(&v9[10 * v5], 0, 1, v12);
  sub_1C09BCFA4(0x4F2074756F79614CLL, 0xEE00736E6F697470, 0, 0, v64, v74);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v36 = inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v36 + 64) = &off_1F1BDEC90;
  uint64_t v37 = v36;
  uint64_t v38 = swift_allocObject();
  *(void *)(v37 + 32) = v38;
  char v66 = (char *)(v37 + 32);
  *(void *)(v38 + 48) = v75;
  long long v39 = v74[1];
  *(_OWORD *)(v38 + 16) = v74[0];
  *(_OWORD *)(v38 + 32) = v39;
  uint64_t v40 = v68;
  uint64_t v41 = swift_allocObject();
  uint64_t v70 = v41;
  *(_OWORD *)(v41 + 16) = xmmword_1C152A660;
  id v42 = (char *)(v41 + v40);
  char v43 = (void *)sub_1C151769C();
  id v44 = objc_msgSend(v43, sel_horizontalSizeClass);

  sub_1C043F5B4(v62, 0x80000001C16344A0, (uint64_t)v44, 0, v42);
  v14(v42, 0, 1, v12);
  uint64_t v45 = &v42[v61];
  uint64_t v46 = (void *)sub_1C151769C();
  id v47 = objc_msgSend(v46, sel_verticalSizeClass);

  sub_1C043F5B4(0xD000000000000013, 0x80000001C16344C0, (uint64_t)v47, 0, v45);
  v14(v45, 0, 1, v12);
  id v48 = v14;
  char v49 = &v42[v67];
  id v50 = (void *)sub_1C151769C();
  id v51 = objc_msgSend(v50, sel_userInterfaceStyle);

  uint64_t v52 = v63;
  sub_1C043F8F4(v63, 0x80000001C16344E0, (uint64_t)v51, 0, v49);
  v48(v49, 0, 1, v12);
  unint64_t v53 = &v42[v71];
  uint64_t v54 = (void *)sub_1C151769C();
  id v55 = objc_msgSend(v54, sel_userInterfaceIdiom);

  sub_1C043FC28(v52, 0x80000001C1634500, (uint64_t)v55, 0, v53);
  v48(v53, 0, 1, v12);
  sub_1C09BCFA4(0xD000000000000010, 0x80000001C1634480, 0, 0, v70, v76);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v56 = inited;
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(v56 + 104) = &off_1F1BDEC90;
  uint64_t v57 = swift_allocObject();
  *(void *)(v56 + 72) = v57;
  *(void *)(v57 + 48) = v77;
  long long v58 = v76[1];
  *(_OWORD *)(v57 + 16) = v76[0];
  *(_OWORD *)(v57 + 32) = v58;
  uint64_t v59 = sub_1C131B79C(v56);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v59;
}

void *sub_1C10D5170(uint64_t a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF9E7E4(0, &qword_1EA19B6B8, MEMORY[0x1E4FAB7C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v61 = (char *)&v56 - v4;
  sub_1BFF9E7E4(0, &qword_1EA19B6C8, MEMORY[0x1E4FAB6C0], v2);
  MEMORY[0x1F4188790](v5 - 8);
  unsigned __int8 v60 = (char *)&v56 - v6;
  uint64_t v65 = sub_1C1517ADC();
  uint64_t v66 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF9E7E4(0, &qword_1EB85F220, MEMORY[0x1E4FAB6E0], v2);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v56 - v10;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E7E4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E7E4(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v12);
  sub_1C0181BEC(0);
  uint64_t v63 = v13;
  unint64_t v14 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v15 = *(void *)(*(void *)(v13 - 8) + 72);
  uint64_t v16 = swift_allocObject();
  uint64_t v62 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1C152E280;
  uint64_t v17 = (void *)(v16 + v14);
  uint64_t v18 = sub_1C151759C();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v11, a1, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v18);
  sub_1C043FFC0(0x53206E6D756C6F43, 0xED00006D65747379, (uint64_t)v11, v17);
  uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v21 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v17, 0, 1, v20);
  uint64_t v22 = v15;
  uint64_t v23 = (void *)((char *)v17 + v15);
  uint64_t v24 = sub_1C151754C();
  sub_1C0440400(0x736E6D756C6F43, 0xE700000000000000, v24, 0, v23);
  uint64_t v56 = v20;
  v21(v23, 0, 1, v20);
  sub_1C15174AC();
  sub_1C042F1BC(0x57206E6D756C6F43, 0xEC00000068746469, v25, 0, (void *)((char *)v17 + 2 * v22));
  v21((void *)((char *)v17 + 2 * v22), 0, 1, v20);
  uint64_t v57 = v22;
  uint64_t v26 = (void *)((char *)v17 + 3 * v22);
  sub_1C151752C();
  long long v58 = v8;
  sub_1C1517ABC();
  uint64_t v28 = v27;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v66 + 8);
  v66 += 8;
  uint64_t v59 = v29;
  v29(v8, v65);
  sub_1C042F1BC(0xD00000000000001CLL, 0x80000001C1634340, v28, 0, v26);
  uint64_t v30 = v56;
  v21(v26, 0, 1, v56);
  uint64_t v31 = (uint64_t)v60;
  sub_1C151753C();
  uint64_t v32 = sub_1C151750C();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  sub_1C04406B8(0x54206E6D756C6F43, 0xED00007374696172, v31, (void *)((char *)v17 + 4 * v22));
  v21((void *)((char *)v17 + 4 * v22), 0, 1, v30);
  uint64_t v33 = v57;
  uint64_t v34 = (void *)((char *)v17 + 4 * v22 + v57);
  uint64_t v35 = v58;
  sub_1C151752C();
  uint64_t v36 = (uint64_t)v61;
  sub_1C1517AAC();
  v59(v35, v65);
  uint64_t v37 = sub_1C151787C();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
  sub_1C0440C78(0xD000000000000012, 0x80000001C1634360, v36, v34);
  v21(v34, 0, 1, v30);
  sub_1C151756C();
  sub_1C042F1BC(0xD000000000000010, 0x80000001C1634380, v38, 0, (void *)((char *)v17 + 6 * v33));
  v21((void *)((char *)v17 + 6 * v33), 0, 1, v30);
  sub_1C15174EC();
  sub_1C042F1BC(0xD00000000000001BLL, 0x80000001C16343A0, v39, 0, (void *)((char *)v17 + 7 * v33));
  v21((void *)((char *)v17 + 7 * v33), 0, 1, v30);
  sub_1C151755C();
  sub_1C042F1BC(0xD000000000000012, 0x80000001C16343C0, v40, 0, &v17[v33]);
  v21(&v17[v33], 0, 1, v30);
  sub_1C15174DC();
  sub_1C042F1BC(0xD00000000000001DLL, 0x80000001C16343E0, v41, 0, (void *)((char *)v17 + 9 * v33));
  v21((void *)((char *)v17 + 9 * v33), 0, 1, v30);
  sub_1C151751C();
  v71[0] = v42;
  v71[1] = v43;
  v71[2] = v44;
  v71[3] = v45;
  char v72 = 0;
  sub_1C04410B8(0x73646E756F42, 0xE600000000000000, (uint64_t)v71, (void *)((char *)v17 + 10 * v33));
  v21((void *)((char *)v17 + 10 * v33), 0, 1, v30);
  sub_1C15174CC();
  v69[0] = v46;
  v69[1] = v47;
  v69[2] = v48;
  v69[3] = v49;
  char v70 = 0;
  sub_1C043EB5C(0x4D2074756F79614CLL, 0xEE00736E69677261, (uint64_t)v69, (void *)((char *)v17 + 11 * v33));
  v21((void *)((char *)v17 + 11 * v33), 0, 1, v30);
  sub_1C15174BC();
  sub_1C042F1BC(0x614620656C616353, 0xEC000000726F7463, v50, 0, (void *)((char *)v17 + 12 * v33));
  v21((void *)((char *)v17 + 12 * v33), 0, 1, v30);
  sub_1C09BCFA4(0x4F206E6D756C6F43, 0xEE00736E6F697470, 0, 0, v62, v67);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v51 = inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v51 + 64) = &off_1F1BDEC90;
  uint64_t v52 = swift_allocObject();
  *(void *)(v51 + 32) = v52;
  *(void *)(v52 + 48) = v68;
  long long v53 = v67[1];
  *(_OWORD *)(v52 + 16) = v67[0];
  *(_OWORD *)(v52 + 32) = v53;
  uint64_t v54 = sub_1C131B79C(v51);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v54;
}

void sub_1C10D5C00()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4DBE0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C15320E0;
  uint64_t v3 = (void *)sub_1C151E5EC();
  id v4 = objc_msgSend(self, sel_systemImageNamed_, v3);

  if (v4)
  {
    id v5 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v6 = v0;
    id v7 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v4, 0, v6, sel_doDismiss);

    *(void *)(v2 + 32) = v7;
    sub_1C151EBEC();
    sub_1C03E7D9C();
    uint64_t v8 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setRightBarButtonItems_, v8);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C10D5DDC()
{
}

uint64_t type metadata accessor for DebugFormatLayoutDimensionViewController()
{
  return self;
}

uint64_t sub_1C10D5E30(uint64_t a1, char *a2)
{
  uint64_t v48 = a1;
  uint64_t v49 = sub_1C151759C();
  uint64_t v4 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v46 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (char *)&v40 - v7;
  uint64_t v45 = sub_1C151757C();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  objc_super v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151772C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - v15;
  sub_1BFF9E7E4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  id v18 = objc_msgSend(a2, sel_view);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v2 = *(void (***)(char *, uint64_t))&a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView];
    sub_1C060F650(v18, v2);

    uint64_t v20 = sub_1C10D4828();
    uint64_t v21 = v11 + 8;
    uint64_t v11 = *(void *)(v11 + 8);
    uint64_t v43 = v10;
    uint64_t v42 = v21;
    ((void (*)(char *, uint64_t))v11)(v16, v10);
    *(void *)(inited + 56) = &type metadata for FormatInspection;
    *(void *)(inited + 64) = &off_1F1C29D30;
    *(void *)(inited + 32) = v20;
    uint64_t v22 = &a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
    swift_beginAccess();
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v41(v50, v22, v49);
    id v23 = objc_msgSend(a2, sel_view);
    if (v23)
    {
      uint64_t v24 = v23;
      sub_1C060F650(v23, v2);

      sub_1C151758C();
      ((void (*)(char *, uint64_t))v11)(v13, v43);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v26 = v49;
      v25(v50, v49);
      uint64_t v27 = (uint64_t)v46;
      v41(v46, v22, v26);
      uint64_t v28 = sub_1C10D5170(v27);
      v25((char *)v27, v26);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
      *(void *)(inited + 96) = &type metadata for FormatInspection;
      *(void *)(inited + 104) = &off_1F1C29D30;
      *(void *)(inited + 72) = v28;
      uint64_t v29 = sub_1C131B79C(inited);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      uint64_t v30 = sub_1C131B4D4((uint64_t)v29);
      swift_bridgeObjectRelease();
      uint64_t v31 = v47;
      v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
      v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
      *(void *)&v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
      *(_OWORD *)&v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
      uint64_t v32 = &v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
      void *v32 = 0;
      v32[1] = 0xE000000000000000;
      uint64_t v33 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
      id v34 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
      uint64_t v35 = v31;
      *(void *)&v31[v33] = objc_msgSend(v34, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
      *(void *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
      *(void *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v48;
      *(void *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v30;
      *(void *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v30;
      *(void *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
      swift_retain();
      swift_bridgeObjectRetain();

      uint64_t v36 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
      v51.receiver = v35;
      v51.super_class = v36;
      id v37 = objc_msgSendSuper2(&v51, sel_initWithNibName_bundle_, 0, 0);
      uint64_t v38 = (void *)sub_1C151E5EC();
      objc_msgSend(v37, sel_setTitle_, v38);

      swift_release();
      *((unsigned char *)v37 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize) = 0;
      *((unsigned char *)v37 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange) = 0;
      return (uint64_t)v37;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  ((void (*)(char *, uint64_t))v11)(v13, v43);
  (*v2)(v50, v49);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C10D64E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10D6528(char *a1, char *a2)
{
  return sub_1C14897B0(*a1, *a2);
}

uint64_t sub_1C10D6534()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10D65C0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10D6638()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10D66C0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C10D6720(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x7365636341736168;
  if (*v1) {
    unint64_t v2 = 0xD000000000000019;
  }
  unint64_t v3 = 0x80000001C15FFC30;
  if (!*v1) {
    unint64_t v3 = 0xE900000000000073;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C10D6768()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C10D67C8()
{
  return sub_1C151EAEC();
}

void sub_1C10D6818(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A7A0;
}

BOOL static FormatPuzzleBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatPuzzleBinding.Bool.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleBinding.Bool.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C10D68B8()
{
  unint64_t result = qword_1EA1AB398;
  if (!qword_1EA1AB398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB398);
  }
  return result;
}

unint64_t sub_1C10D690C(uint64_t a1)
{
  unint64_t result = sub_1C10D6934();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10D6934()
{
  unint64_t result = qword_1EA1AB3A0;
  if (!qword_1EA1AB3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB3A0);
  }
  return result;
}

unint64_t sub_1C10D6988(void *a1)
{
  a1[1] = sub_1C0879B24();
  a1[2] = sub_1C08FEB0C();
  unint64_t result = sub_1C10D68B8();
  a1[3] = result;
  return result;
}

uint64_t sub_1C10D69C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPuzzleBinding.Bool.init(from:)(a1, a2);
}

uint64_t sub_1C10D69D8(void *a1)
{
  return FormatPuzzleBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Bool()
{
  return &type metadata for FormatPuzzleBinding.Bool;
}

unsigned char *_s4BoolOwst_7_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10D6AD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_5()
{
  return &_s4BoolO10CodingTypeON_5;
}

unint64_t sub_1C10D6B0C()
{
  unint64_t result = qword_1EA1AB3A8;
  if (!qword_1EA1AB3A8)
  {
    sub_1C10D6B64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB3A8);
  }
  return result;
}

void sub_1C10D6B64()
{
  if (!qword_1EA1AB3B0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AB3B0);
    }
  }
}

unint64_t sub_1C10D6BC0()
{
  unint64_t result = qword_1EA1AB3B8;
  if (!qword_1EA1AB3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB3B8);
  }
  return result;
}

unint64_t sub_1C10D6C14()
{
  unint64_t result = qword_1EB86FBA8;
  if (!qword_1EB86FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FBA8);
  }
  return result;
}

uint64_t sub_1C10D6C68@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*a1)
  {
    sub_1C01F09C0(a2, (uint64_t)v13);
    unsigned __int8 v4 = objc_msgSend(v14, sel_ignoreFromStatsAndStreaks);
    uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
    unsigned int v6 = (unsigned __int8 *)a3 + *(int *)(v5 + 24);
    *unsigned int v6 = v4;
    uint64_t v7 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
    *a3 = 0xD000000000000019;
    a3[1] = 0x80000001C15FFC30;
  }
  else
  {
    sub_1C01F09C0(a2, (uint64_t)v13);
    BOOL v8 = (v15 & 0xFE) != 2;
    uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
    objc_super v9 = (BOOL *)a3 + *(int *)(v5 + 24);
    *objc_super v9 = v8;
    uint64_t v10 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
    *(_OWORD *)a3 = xmmword_1C15C6AB0;
  }
  a3[2] = 0;
  a3[3] = 0;
  uint64_t v11 = (char *)a3 + *(int *)(v5 + 28);
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v11[16] = -1;
  sub_1C01F0A74((uint64_t)v13);
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a3, 0, 1, v5);
}

uint64_t getEnumTagSinglePayload for DebugFormatSnapshotGestureState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatSnapshotGestureState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

uint64_t sub_1C10D6EA8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C10D6EC4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 40) = 1;
  }
  else
  {
    *(unsigned char *)(result + 40) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSnapshotGestureState()
{
  return &type metadata for DebugFormatSnapshotGestureState;
}

uint64_t sub_1C10D6F00()
{
  sub_1C10D70DC(0, (unint64_t *)&unk_1EB8643D8, (uint64_t (*)(uint64_t))sub_1C10D70A8, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned __int8 v4 = (char *)&v6 - v3;
  sub_1C10D70DC(0, &qword_1EB864400, (uint64_t (*)(uint64_t))sub_1C10D70A8, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB864448 = result;
  return result;
}

uint64_t static Commands.viewRadarText.getter()
{
  if (qword_1EB864458 != -1) {
    swift_once();
  }
  return swift_retain();
}

void sub_1C10D70A8(uint64_t a1)
{
}

void sub_1C10D70DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id FormatPluginConfig.__allocating_init(pluginData:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_1C035B6BC(a1, (uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_1C0212354(a1);
  return v4;
}

uint64_t FormatPluginConfig.pluginData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData;
  swift_beginAccess();
  return sub_1C035B6BC(v3, a1);
}

uint64_t FormatPluginConfig.pluginData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData;
  swift_beginAccess();
  sub_1C10D7334(a1, v3);
  return swift_endAccess();
}

uint64_t (*FormatPluginConfig.pluginData.modify())()
{
  return j__swift_endAccess;
}

id FormatPluginConfig.init(pluginData:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C035B6BC(a1, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_1C0212354(a1);
  return v4;
}

uint64_t sub_1C10D7334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void FormatPluginConfig.init()()
{
}

uint64_t FormatModule.createPlugin(identifier:layoutOptionsProvider:config:eventDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1C1517CFC();
  __swift_project_boxed_opaque_existential_1((void *)(v7 + OBJC_IVAR____TtC8NewsFeed12FormatModule_resolver), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed12FormatModule_resolver + 24));
  type metadata accessor for FormatViewController();
  id v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  void v14[4] = a5;
  v14[5] = v13;
  v14[6] = a6;
  v14[7] = a7;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v15 = a5;
  swift_retain();
  uint64_t v16 = (char *)sub_1C151816C();
  uint64_t result = swift_release();
  if (v16)
  {
    id v18 = &v16[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
    swift_beginAccess();
    *(void *)id v18 = a1;
    *((void *)v18 + 1) = a2;
    swift_bridgeObjectRelease();
    *(void *)(*(void *)&v16[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler] + 40) = a7;
    swift_unknownObjectWeakAssign();
    sub_1C10D77A4();
    sub_1C151C97C();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1C151C91C();
    swift_release();

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10D75E0(void *a1)
{
  return sub_1C1517F6C();
}

uint64_t sub_1C10D7744()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10D7794(void *a1)
{
  return sub_1C10D75E0(a1);
}

unint64_t sub_1C10D77A4()
{
  unint64_t result = qword_1EB866C20;
  if (!qword_1EB866C20)
  {
    type metadata accessor for FormatViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866C20);
  }
  return result;
}

id FormatModule.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FormatModule.init()()
{
}

uint64_t sub_1C10D78E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  return FormatModule.createPlugin(identifier:layoutOptionsProvider:config:eventDelegate:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of FormatModuleType.createPlugin(identifier:layoutOptionsProvider:config:eventDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t sub_1C10D7920()
{
  return type metadata accessor for FormatPluginConfig();
}

uint64_t type metadata accessor for FormatPluginConfig()
{
  uint64_t result = qword_1EB866510;
  if (!qword_1EB866510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for FormatPluginConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPluginConfig);
}

uint64_t dispatch thunk of FormatPluginConfig.__allocating_init(pluginData:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for FormatModule()
{
  return self;
}

uint64_t method lookup function for FormatModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatModule);
}

void sub_1C10D79DC()
{
  if (!qword_1EB867A20)
  {
    sub_1C10D7A44(255, &qword_1EB867A18);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB867A20);
    }
  }
}

uint64_t sub_1C10D7A44(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C10D7A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a3;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_1C151526C();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v4;
  uint64_t v18 = *(unsigned int *)(v4 + 24);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a2, v13, v15);
  uint64_t v19 = (void *)sub_1C1518ABC();
  if (!v19) {
    goto LABEL_7;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_fetchStartDate, v35);

  if (v21)
  {
    sub_1C15162BC();

    uint64_t v22 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v9, 0, 1, v22);
  }
  else
  {
    uint64_t v22 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v9, 1, 1, v22);
  }
  sub_1BFCB311C((uint64_t)v9, (uint64_t)v12);
  sub_1C151631C();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
  {
    sub_1BFF97BE4((uint64_t)v12);
LABEL_7:
    sub_1C15160EC();
    double v25 = v24;
    goto LABEL_9;
  }
  sub_1C15160DC();
  double v25 = v26;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
LABEL_9:
  uint64_t v27 = (void *)sub_1C1518A9C();
  uint64_t v28 = (void *)sub_1C1518ABC();
  uint64_t v29 = (void *)sub_1C1518AAC();
  swift_bridgeObjectRetain();
  uint64_t v30 = (void *)sub_1C15151FC();
  if (!a4)
  {
    uint64_t v31 = 0;
    if (v29) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v32 = 0;
    goto LABEL_14;
  }
  uint64_t v31 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v32 = (void *)sub_1C1515D2C();

LABEL_14:
  uint64_t v33 = v36;
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E5A0]), sel_initWithType_URLRequest_operationID_requestUUID_startTime_HTTPResponse_metrics_containerName_error_, v18, v30, 0, v31, v27, v28, v25, 0, v32);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  objc_msgSend(*(id *)(v33 + 16), sel_logNetworkEvent_, v34);
}

uint64_t sub_1C10D7E44()
{
  return swift_deallocClassInstance();
}

void sub_1C10D7E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C10D7EA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C10D9140();
  *a1 = result;
  return result;
}

uint64_t sub_1C10D7ED4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C10D7F34()
{
  return sub_1C151EAEC();
}

void sub_1C10D7F84(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B8C0;
}

uint64_t sub_1C10D7F94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Command.init(from:)(a1, a2);
}

uint64_t sub_1C10D7FAC(void *a1)
{
  return FormatSportsEventBinding.Command.encode(to:)(a1);
}

uint64_t sub_1C10D7FC8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (!*a1)
  {
    sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    uint64_t v25 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v10 = swift_allocObject();
    long long v48 = xmmword_1C1529AE0;
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    uint64_t v52 = (void *)(v10 + v26);
    uint64_t v27 = *(void **)(a2 + 16);
    swift_getObjectType();
    id v28 = objc_msgSend(v27, sel_displayName);
    uint64_t v29 = sub_1C151E62C();
    uint64_t v30 = a4;
    uint64_t v32 = v31;

    sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v48;
    sub_1C0A3AAD0(a3, (uint64_t)v27, (uint64_t)&v49);
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(inited + 64) = &off_1F1BDEC90;
    uint64_t v34 = swift_allocObject();
    *(void *)(inited + 32) = v34;
    *(void *)(v34 + 48) = v51;
    long long v35 = v50;
    *(_OWORD *)(v34 + 16) = v49;
    *(_OWORD *)(v34 + 32) = v35;
    uint64_t v36 = sub_1C0233FC8(inited);
    swift_setDeallocating();
    sub_1C01004D8();
    swift_arrayDestroy();
    id v37 = sub_1C131B79C(v36);
    swift_bridgeObjectRelease();
    uint64_t v38 = v32;
    a4 = v30;
    uint64_t result = sub_1C042F458(0x746E657645, 0xE500000000000000, (uint64_t)v37, v29, v38, v52);
    goto LABEL_12;
  }
  if (*a1 != 1)
  {
    id v39 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags);
    if (v39)
    {
      uint64_t v40 = v39;
      sub_1C017E704();
      unint64_t v41 = sub_1C151EBCC();

      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1C15204BC();
        uint64_t v42 = swift_bridgeObjectRelease();
        if (v43) {
          goto LABEL_8;
        }
      }
      else if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        MEMORY[0x1F4188790](v42);
        long long v46[2] = a3;
        uint64_t v10 = sub_1C09FF708(v41, (void (*)(unint64_t, uint64_t))sub_1C10D918C, (uint64_t)v46);
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    uint64_t v44 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
    unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    long long v49 = 0u;
    long long v50 = 0u;
    uint64_t result = sub_1C042FB5C(0x74697465706D6F43, 0xEA0000000000726FLL, (uint64_t)&v49, (uint64_t *)(v10 + v45));
    goto LABEL_12;
  }
  sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  uint64_t v8 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  long long v47 = xmmword_1C1529AE0;
  *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
  *(void *)&long long v48 = v10 + v9;
  uint64_t v11 = *(void **)(a2 + 16);
  id v12 = objc_msgSend(objc_msgSend(v11, sel_eventLeagueTag), sel_displayName);
  swift_unknownObjectRelease();
  uint64_t v13 = sub_1C151E62C();
  uint64_t v52 = v4;
  uint64_t v14 = a4;
  uint64_t v16 = v15;

  sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = v47;
  id v18 = objc_msgSend(v11, sel_eventLeagueTag);
  swift_getObjectType();
  sub_1C0A3AAD0(a3, (uint64_t)v18, (uint64_t)&v49);
  swift_unknownObjectRelease();
  *(void *)(v17 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v17 + 64) = &off_1F1BDEC90;
  uint64_t v19 = swift_allocObject();
  *(void *)(v17 + 32) = v19;
  *(void *)(v19 + 48) = v51;
  long long v20 = v50;
  *(_OWORD *)(v19 + 16) = v49;
  *(_OWORD *)(v19 + 32) = v20;
  uint64_t v21 = sub_1C0233FC8(v17);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  uint64_t v22 = sub_1C131B79C(v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = v16;
  a4 = v14;
  uint64_t result = sub_1C042F458(0x65756761654CLL, 0xE600000000000000, (uint64_t)v22, v13, v23, (void *)v48);
LABEL_12:
  *a4 = v10;
  return result;
}

uint64_t sub_1C10D8614@<X0>(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  strcpy((char *)v17, "Competitor [");
  BYTE13(v17[0]) = 0;
  HIWORD(v17[0]) = -5120;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  long long v6 = v17[0];
  swift_getObjectType();
  id v7 = objc_msgSend(a1, sel_displayName);
  uint64_t v8 = sub_1C151E62C();
  uint64_t v10 = v9;

  sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0A3AAD0(a2, (uint64_t)a1, (uint64_t)v17);
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v12 = swift_allocObject();
  *(void *)(inited + 32) = v12;
  *(void *)(v12 + 48) = v18;
  long long v13 = v17[1];
  *(_OWORD *)(v12 + 16) = v17[0];
  *(_OWORD *)(v12 + 32) = v13;
  uint64_t v14 = sub_1C0233FC8(inited);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  uint64_t v15 = sub_1C131B79C(v14);
  swift_bridgeObjectRelease();
  return sub_1C042F458(v6, *((uint64_t *)&v6 + 1), (uint64_t)v15, v8, v10, a3);
}

uint64_t _s8NewsFeed24FormatSportsEventBindingV7CommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 24);
  if (!(v5 >> 6))
  {
    if (v9 >= 0x40)
    {
LABEL_11:
      sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C00AB56C);
      sub_1C00AB750(v7, v6, v8, v9, (uint64_t (*)(void))sub_1C00AB56C);
      sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C002B840);
      sub_1C00AB750(v7, v6, v8, v9, (uint64_t (*)(void))sub_1C002B840);
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  if (v5 >> 6 == 1)
  {
    if ((v9 & 0xC0) != 0x40) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v17 = *(void *)a1;
    uint64_t v18 = v2;
    LOBYTE(v19) = v4;
    uint64_t v13 = v7;
    uint64_t v14 = v6;
    LOBYTE(v15) = v8;
    sub_1C00AB750(v7, v6, v8, v9, (uint64_t (*)(void))sub_1C00AB56C);
    sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C00AB56C);
    sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C00AB56C);
    sub_1C00AB750(v7, v6, v8, v9, (uint64_t (*)(void))sub_1C00AB56C);
    char v10 = static FormatTagBinding.Command.== infix(_:_:)((uint64_t)&v17, (uint64_t)&v13);
    sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C002B840);
    sub_1C00AB750(v7, v6, v8, v9, (uint64_t (*)(void))sub_1C002B840);
    sub_1C00AB750(v7, v6, v8, v9, (uint64_t (*)(void))sub_1C002B840);
    sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C002B840);
    return v10 & 1;
  }
  if ((v9 & 0xC0) != 0x80) {
    goto LABEL_11;
  }
  uint64_t v17 = *(void *)a1;
  uint64_t v18 = v2;
  uint64_t v19 = v4;
  char v20 = v5 & 0x3F;
  uint64_t v13 = v7;
  uint64_t v14 = v6;
  uint64_t v15 = v8;
  char v16 = v9 & 0x3F;
  if (v3 != v7) {
    goto LABEL_11;
  }
  sub_1C00AB750(v3, v6, v8, v9, (uint64_t (*)(void))sub_1C00AB56C);
  sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C00AB56C);
  sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C00AB56C);
  sub_1C00AB750(v3, v6, v8, v9, (uint64_t (*)(void))sub_1C00AB56C);
  char v11 = static FormatTagBinding.Command.== infix(_:_:)((uint64_t)&v18, (uint64_t)&v14);
  sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C002B840);
  sub_1C00AB750(v3, v6, v8, v9, (uint64_t (*)(void))sub_1C002B840);
  sub_1C00AB750(v3, v6, v8, v9, (uint64_t (*)(void))sub_1C002B840);
  sub_1C00AB750(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C002B840);
  if ((v11 & 1) == 0)
  {
LABEL_12:
    char v10 = 0;
    return v10 & 1;
  }
  char v10 = 1;
  return v10 & 1;
}

unint64_t sub_1C10D8B58(uint64_t a1)
{
  unint64_t result = sub_1C10D8B80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10D8B80()
{
  unint64_t result = qword_1EA1AB3D0;
  if (!qword_1EA1AB3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB3D0);
  }
  return result;
}

unint64_t sub_1C10D8BD4(void *a1)
{
  a1[1] = sub_1C086E634();
  a1[2] = sub_1C08FD798();
  unint64_t result = sub_1C10D8C0C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C10D8C0C()
{
  unint64_t result = qword_1EA1AB3E8;
  if (!qword_1EA1AB3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB3E8);
  }
  return result;
}

uint64_t _s7CommandOwxx_0(uint64_t a1)
{
  return sub_1C00AB750(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), (uint64_t (*)(void))sub_1C002B840);
}

uint64_t _s7CommandOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C00AB750(*(void *)a2, v4, v5, v6, (uint64_t (*)(void))sub_1C00AB56C);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s7CommandOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C00AB750(*(void *)a2, v4, v5, v6, (uint64_t (*)(void))sub_1C00AB56C);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C00AB750(v7, v8, v9, v10, (uint64_t (*)(void))sub_1C002B840);
  return a1;
}

uint64_t _s7CommandOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C00AB750(v5, v7, v6, v8, (uint64_t (*)(void))sub_1C002B840);
  return a1;
}

uint64_t _s7CommandOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x3C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s7CommandOwst_1(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 62;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1C10D8EB8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Command()
{
  return &type metadata for FormatSportsEventBinding.Command;
}

unsigned char *_s7CommandO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10D8FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7CommandO10CodingTypeOMa_3()
{
  return &_s7CommandO10CodingTypeON_3;
}

unint64_t sub_1C10D8FE4()
{
  unint64_t result = qword_1EA1AB3F0;
  if (!qword_1EA1AB3F0)
  {
    sub_1C10D903C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB3F0);
  }
  return result;
}

void sub_1C10D903C()
{
  if (!qword_1EA1AB3F8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AB3F8);
    }
  }
}

unint64_t sub_1C10D9098()
{
  unint64_t result = qword_1EA1AB400;
  if (!qword_1EA1AB400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB400);
  }
  return result;
}

unint64_t sub_1C10D90EC()
{
  unint64_t result = qword_1EA1AB408;
  if (!qword_1EA1AB408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB408);
  }
  return result;
}

uint64_t sub_1C10D9140()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C10D918C@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  return sub_1C10D8614(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C10D9194()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10D91DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148F7E4(*a1, *a2);
}

uint64_t sub_1C10D91E8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10D9290()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10D9324()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10D93C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C10D97C0();
  *a1 = result;
  return result;
}

void sub_1C10D93F8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEB00000000657669;
  uint64_t v5 = 0x7463757274736564;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656E696C6E69;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unsigned char *storeEnumTagSinglePayload for FormatMenuStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10D9528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuStyle()
{
  return &type metadata for FormatMenuStyle;
}

unint64_t sub_1C10D9560(void *a1)
{
  a1[1] = sub_1C0909C24();
  a1[2] = sub_1C0909EFC();
  unint64_t result = sub_1C10D9598();
  a1[3] = result;
  return result;
}

unint64_t sub_1C10D9598()
{
  unint64_t result = qword_1EA1AB410;
  if (!qword_1EA1AB410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB410);
  }
  return result;
}

unint64_t sub_1C10D95EC(uint64_t a1)
{
  unint64_t result = sub_1C10D9614();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10D9614()
{
  unint64_t result = qword_1EA1AB418;
  if (!qword_1EA1AB418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB418);
  }
  return result;
}

unint64_t sub_1C10D9668(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C10D9698();
  unint64_t result = sub_1C10D96EC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C10D9698()
{
  unint64_t result = qword_1EA1AB420;
  if (!qword_1EA1AB420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB420);
  }
  return result;
}

unint64_t sub_1C10D96EC()
{
  unint64_t result = qword_1EB85FEB0;
  if (!qword_1EB85FEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FEB0);
  }
  return result;
}

uint64_t sub_1C10D9744()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C10D97A4(void *a1)
{
  return sub_1C078C75C(a1, *v1);
}

uint64_t sub_1C10D97C0()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t FormatVideoPlayerNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatVideoPlayerNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 192);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatVideoPlayerNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 184);
}

uint64_t FormatVideoPlayerNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t FormatVideoPlayerNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoPlayerNode.name.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatVideoPlayerNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatVideoPlayerNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.posterContent.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 80);
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.posterStyle.getter()
{
  return swift_retain();
}

void FormatVideoPlayerNode.overlayContent.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  unint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v8 = *(unsigned char *)(v1 + 144);
  *(unsigned char *)(a1 + 48) = v8;
  sub_1BFC3BB44(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatVideoPlayerNode.isLive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 160);
  uint64_t v4 = *(void *)(v1 + 168);
  char v5 = *(unsigned char *)(v1 + 176);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return sub_1C0074D84(v2, v3, v4, v5);
}

uint64_t FormatVideoPlayerNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 184) = a1;
  return result;
}

uint64_t (*FormatVideoPlayerNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C10D9C2C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 192);
  *(void *)(v3 + 192) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatVideoPlayerNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 192);
  *(void *)(v1 + 192) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatVideoPlayerNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 200) = a1;
  return result;
}

uint64_t (*FormatVideoPlayerNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatVideoPlayerNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 216);
  *(void *)a1 = *(void *)(v1 + 208);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1C10D9DD0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 224) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatVideoPlayerNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 224) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C10D9ECC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 232) = v3;
  *(void *)(v4 + 240) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatVideoPlayerNode.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 232) = a1;
  *(void *)(v2 + 240) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.allowsPrerollAds.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 248);
  uint64_t v4 = *(void *)(v1 + 256);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 264);
  *(unsigned char *)(a1 + 16) = v5;
  return sub_1BFFC8784(v3, v4, v5);
}

uint64_t FormatVideoPlayerNode.allowsPrerollAds.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 248);
  uint64_t v6 = *(void *)(v1 + 256);
  *(void *)(v1 + 248) = v2;
  *(void *)(v1 + 256) = v3;
  unsigned __int8 v7 = *(unsigned char *)(v1 + 264);
  *(unsigned char *)(v1 + 264) = v4;
  return sub_1BFFC879C(v5, v6, v7);
}

uint64_t (*FormatVideoPlayerNode.allowsPrerollAds.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10, long long *a11, long long *a12, uint64_t a13, uint64_t *a14, char a15, uint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20)
{
  uint64_t v25 = swift_allocObject();
  FormatVideoPlayerNode.init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
  return v25;
}

uint64_t FormatVideoPlayerNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC39508(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 144));
  sub_1C0074DE4(*(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  sub_1BFF0056C(*(void *)(v0 + 192));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFFC879C(*(void *)(v0 + 248), *(void *)(v0 + 256), *(unsigned char *)(v0 + 264));
  return v0;
}

uint64_t FormatVideoPlayerNode.__deallocating_deinit()
{
  FormatVideoPlayerNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C10DA2A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C10DC85C(&qword_1EA1AB428, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C10DA300(void *a1, uint64_t a2)
{
  a1[1] = sub_1C10DC85C(&qword_1EB87F3B0, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode);
  a1[2] = sub_1C10DC85C(&qword_1EB860600, v3, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode);
  uint64_t result = sub_1C10DC85C(&qword_1EA1AB430, v4, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C10DA3AC(void *a1)
{
  return FormatVideoPlayerNode.encode(to:)(a1);
}

uint64_t sub_1C10DA3D0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed21FormatVideoPlayerNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C10DA3DC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C10DC85C(&qword_1EA1AB438, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C10DA434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v55 = a4;
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  uint64_t v45 = a2;
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  uint64_t v50 = v13;
  uint64_t v46 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v46 + 64);
  MEMORY[0x1F4188790](v13);
  long long v49 = (char *)&v39 - v15;
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871360, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v52 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (uint64_t *)((char *)&v39 - v18);
  uint64_t v57 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  swift_unownedRetainStrong();
  unint64_t v21 = *(void *)(a5 + 32);
  sub_1BFF35EA4(v21);
  uint64_t v53 = a5;
  swift_release();
  unint64_t v56 = v21;
  uint64_t v51 = a6;
  uint64_t v22 = v54;
  uint64_t v23 = a3;
  sub_1BFF30600(a6, a3, v55, v19);
  sub_1BFF322A8(v21);
  if (!v22)
  {
    uint64_t v42 = v14;
    uint64_t v43 = v19;
    uint64_t v25 = v49;
    uint64_t v26 = v50;
    uint64_t v44 = KeyPath;
    uint64_t v54 = v17;
    uint64_t v27 = v53;
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v28 = *(void *)(v27 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v29 = (uint64_t)v51;
    swift_retain();
    uint64_t v30 = sub_1C12A4C68(v28, v29);
    uint64_t v40 = a9;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v31 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v25, v45, v26);
    unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v33 = v42 + v32 + 7;
    uint64_t v45 = v30;
    uint64_t v34 = v29;
    uint64_t v42 = 0;
    unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = (char *)swift_allocObject();
    *((void *)v36 + 2) = v53;
    *((void *)v36 + 3) = v23;
    uint64_t v41 = v23;
    uint64_t v37 = v47;
    *((void *)v36 + 4) = v55;
    *((void *)v36 + 5) = v37;
    *((void *)v36 + 6) = v48;
    *((void *)v36 + 7) = v34;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v36[v32], v25, v26);
    *(void *)&v36[v35] = v40;
    swift_retain();
    swift_unownedRetain();
    sub_1BFF1D63C();
    sub_1C10DC85C(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v38 = v43;
    sub_1C15173EC();
    (*(void (**)(uint64_t *, uint64_t))(v52 + 8))(v38, v54);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1C10DA894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t *a9@<X8>, double a10@<D0>, double a11@<D1>, CGFloat a12@<D2>, CGFloat a13@<D3>)
{
  uint64_t v205 = a5;
  uint64_t v187 = a8;
  uint64_t v188 = a9;
  uint64_t v206 = a7;
  uint64_t v207 = a6;
  sub_1BFF470E8(0, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v195 = (uint64_t)v168 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v196 = (uint64_t)v168 - v24;
  uint64_t v25 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v192 = *(void *)(v25 - 8);
  uint64_t v193 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v194 = (uint64_t)v168 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v191 = (int *)type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v191);
  uint64_t v197 = (void *)((char *)v168 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1C1515FDC();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v200 = v28;
  uint64_t v201 = v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v190 = (uint64_t)v168 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  char v203 = (char *)v168 - v32;
  sub_1BFF470E8(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v189 = (uint64_t)v168 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)v168 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)v168 - v39;
  swift_unownedRetainStrong();
  unint64_t v41 = *(void *)(a1 + 80);
  swift_retain();
  swift_release();
  unint64_t v238 = v41;
  uint64_t v198 = a2;
  uint64_t v199 = a3;
  sub_1BFE6F228(a2, a3, a4);
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v202 = (char *)a4;
  uint64_t v42 = v204;
  sub_1C10DC0F4(a1, a4, v207, v206, &v245, a12, a13);
  if (v42)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v184 = (uint64_t *)v37;
  uint64_t v204 = a1;
  uint64_t v44 = (uint64_t)v203;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v45 = v245;
  uint64_t v46 = v202;
  sub_1BFF23670(*(void *)&v202[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack], (uint64_t)v40);
  uint64_t v185 = v45;
  uint64_t v186 = v40;
  uint64_t v47 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v40, 0, 1, v47);
  uint64_t v48 = v204;
  uint64_t v49 = v207;
  uint64_t v50 = &v46[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext];
  int v51 = v50[*(int *)(type metadata accessor for GroupLayoutContext() + 44)];
  swift_unownedRetainStrong();
  unint64_t v52 = *(void *)(v48 + 72);
  swift_retain();
  swift_release();
  unint64_t v238 = v52;
  sub_1C0C634DC(v49, v206, v44);
  LODWORD(v182) = v51;
  swift_release();
  swift_unownedRetainStrong();
  uint64_t v54 = *(void *)(v48 + 152);
  uint64_t v53 = *(void *)(v48 + 160);
  uint64_t v55 = *(void *)(v48 + 168);
  LOBYTE(v52) = *(unsigned char *)(v48 + 176);
  sub_1C0074D84(v54, v53, v55, v52);
  swift_release();
  unint64_t v238 = v54;
  uint64_t v239 = v53;
  if (v52)
  {
    LOBYTE(v240) = v55 & 1;
    sub_1C1517EFC();
    LODWORD(v183) = FormatBoolean.value(contextLayoutOptions:)(v208);
    swift_release();
    sub_1C0074DE4(v54, v53, v55, 1);
    uint64_t v202 = 0;
  }
  else
  {
    uint64_t v240 = v55;
    LODWORD(v183) = sub_1C1504EA0(v207);
    uint64_t v202 = 0;
    sub_1C0074DE4(v54, v53, v55, 0);
  }
  swift_unownedRetainStrong();
  uint64_t v56 = *(void *)(v48 + 96);
  unint64_t v57 = *(void *)(v48 + 104);
  uint64_t v58 = *(void *)(v48 + 112);
  uint64_t v59 = *(void *)(v48 + 136);
  char v60 = *(unsigned char *)(v48 + 144);
  uint64_t v61 = *(void *)(v48 + 120);
  uint64_t v62 = *(void *)(v48 + 128);
  sub_1BFC3BB44(v56, v57, v58, v61, v62, v59, v60);
  swift_release();
  if (v58 == 1)
  {
    uint64_t v177 = 0;
    uint64_t v180 = 0;
    uint64_t v181 = 0;
    LODWORD(v178) = 0;
    uint64_t v206 = 0;
    uint64_t v63 = 0;
    unint64_t v179 = 0xC000000000000000;
  }
  else
  {
    uint64_t v208 = v56;
    unint64_t v209 = v57;
    uint64_t v210 = v58;
    uint64_t v211 = v61;
    uint64_t v212 = v62;
    uint64_t v213 = v59;
    uint64_t v181 = v59;
    char v214 = v60 & 1;
    uint64_t v64 = v202;
    sub_1C0484DE8(v198, v199, v207, v206, (uint64_t)&v238, a12, a13);
    if (v64)
    {
      swift_release();
      sub_1BFC39508(v56, v57, v58, v61, v62, v181, v60);
      (*(void (**)(char *, uint64_t))(v201 + 8))(v203, v200);
      return sub_1BFF240E0((uint64_t)v186, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    }
    uint64_t v202 = 0;
    sub_1BFC39508(v56, v57, v58, v61, v62, v181, v60);
    uint64_t v63 = v239;
    uint64_t v206 = v240;
    uint64_t v181 = v241;
    LODWORD(v178) = v242;
    uint64_t v177 = v243;
    unint64_t v179 = v238;
    uint64_t v180 = v244;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  int v65 = *(unsigned __int8 *)(v48 + 264);
  if (v65 == 255)
  {
    swift_release();
    goto LABEL_15;
  }
  uint64_t v66 = v48;
  uint64_t v67 = *(void *)(v48 + 248);
  uint64_t v68 = *(void *)(v66 + 256);
  sub_1BFE94AB4(v67, v68, v65 & 1);
  swift_release();
  uint64_t v208 = v67;
  unint64_t v209 = v68;
  LOBYTE(v210) = v65 & 1;
  sub_1C1517EFC();
  uint64_t v69 = v202;
  char v70 = FormatBoolean.value(contextLayoutOptions:)(v236);
  if (v69)
  {
    swift_release();

    sub_1BFFC879C(v67, v68, v65);
    uint64_t v202 = 0;
LABEL_15:
    int v71 = 2;
    goto LABEL_17;
  }
  char v72 = v70;
  uint64_t v202 = 0;
  swift_release();
  sub_1BFFC879C(v67, v68, v65);
  int v71 = v72 & 1;
LABEL_17:
  LODWORD(v176) = v71;
  uint64_t v73 = v184;
  sub_1C10DC8A4((uint64_t)v186, (uint64_t)v184, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v74 = type metadata accessor for FeedHeadline(0);
  uint64_t v75 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48);
  int v76 = v75(v73, 1, v74);
  uint64_t v77 = v189;
  char v78 = v183;
  if (v76 == 1)
  {
    sub_1BFF240E0((uint64_t)v73, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    uint64_t v174 = 0;
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v79 = *v73;
    uint64_t v174 = v73[1];
    uint64_t v175 = v79;
    swift_bridgeObjectRetain();
    sub_1BFF5B70C((uint64_t)v73, type metadata accessor for FeedHeadline);
  }
  uint64_t v80 = *(void *)(v207 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  uint64_t v81 = *(void *)(v207 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  sub_1C10DC8A4((uint64_t)v186, v77, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  char v82 = v78;
  if (v75((uint64_t *)v77, 1, v74) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFF240E0(v77, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    uint64_t v83 = 0;
  }
  else
  {
    uint64_t v83 = *(void *)(v77 + 40);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1BFF5B70C(v77, type metadata accessor for FeedHeadline);
  }
  uint64_t v84 = v190;
  uint64_t v85 = v200;
  uint64_t v86 = v201;
  (*(void (**)(uint64_t, char *, uint64_t))(v201 + 16))(v190, v203, v200);
  uint64_t v87 = v84;
  LOBYTE(v84) = (v176 == 2) | v176;
  uint64_t v88 = v197;
  uint64_t v89 = v174;
  *uint64_t v197 = v175;
  v88[1] = v89;
  uint64_t v90 = v199;
  v88[2] = v198;
  v88[3] = v90;
  v88[4] = v80;
  v88[5] = v81;
  uint64_t v91 = (uint64_t)v88;
  v88[6] = v83;
  *((unsigned char *)v88 + 56) = v182;
  uint64_t v92 = v191;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))((char *)v88 + v191[9], v87, v85);
  uint64_t v93 = v185;
  *(void *)(v91 + v92[10]) = v185;
  *(unsigned char *)(v91 + v92[11]) = v82 & 1;
  uint64_t v94 = v91 + v92[12];
  uint64_t v95 = v180;
  *(void *)uint64_t v94 = v179;
  *(void *)(v94 + 8) = v63;
  uint64_t v96 = v181;
  *(void *)(v94 + 16) = v206;
  *(void *)(v94 + 24) = v96;
  *(unsigned char *)(v94 + 32) = v178;
  *(void *)(v94 + 40) = v177;
  *(void *)(v94 + 48) = v95;
  *(unsigned char *)(v91 + v92[13]) = v84 & 1;
  uint64_t v97 = v194;
  sub_1BFF3772C(v91, v194, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  uint64_t v98 = v193;
  swift_storeEnumTagMultiPayload();
  uint64_t v99 = v196;
  sub_1BFF3772C(v97, v196, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v192 + 56))(v99, 0, 1, v98);
  uint64_t v100 = v195;
  sub_1C10DC8A4(v99, v195, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  swift_beginAccess();
  uint64_t v101 = v179 & 0x1FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  uint64_t v102 = v199;
  swift_bridgeObjectRetain_n();
  uint64_t v192 = v93 & 0x1FFFFFFFFFFFFFFFLL;
  swift_retain();
  uint64_t v193 = v101;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BFF3D9D4(v100, v198, v102);
  swift_endAccess();
  sub_1BFF240E0(v99, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BFF5B70C(v97, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  unint64_t v103 = v207;
  uint64_t v104 = *(void *)(v207 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  uint64_t v105 = v204;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v107 = *(void *)(v105 + 16);
  uint64_t v106 = *(void *)(v105 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v108 = *(void *)(v104 + 40);
  uint64_t v205 = v104;
  if (v108)
  {
    uint64_t v236 = *(void *)(v104 + 32);
    uint64_t v237 = v108;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v107 = v236;
    uint64_t v196 = v237;
  }
  else
  {
    uint64_t v196 = v106;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v109 = *(void *)(v105 + 24);
  uint64_t v174 = *(void *)(v105 + 16);
  uint64_t v195 = v109;
  swift_bridgeObjectRetain();
  swift_release();
  swift_unownedRetainStrong();
  uint64_t v110 = *(void *)(v105 + 40);
  swift_retain();
  swift_release();
  if (v110)
  {
    uint64_t v111 = *(void *)(v110 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v111 = 0;
  }
  uint64_t v184 = (uint64_t *)v111;
  uint64_t v235 = v111;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v173 = *(void *)(v105 + 184);
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  unint64_t v112 = *(void *)(v105 + 192);
  sub_1BFE6FA30(v112);
  swift_release();
  unint64_t v232 = v112;
  sub_1BFE6EF70(v103, v234);
  sub_1BFF0056C(v112);
  unint64_t v183 = v234[0];
  v233[0] = v234[0];
  swift_unownedRetainStrong();
  uint64_t v182 = v105 + 200;
  swift_beginAccess();
  int v172 = *(unsigned __int8 *)(v105 + 200);
  swift_release();
  swift_unownedRetainStrong();
  uint64_t v113 = *(void *)(v105 + 208);
  LOBYTE(v112) = *(unsigned char *)(v105 + 216);
  swift_release();
  uint64_t v230 = v113;
  char v231 = v112;
  unint64_t v179 = *(void *)(v103 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  sub_1C1517EFC();
  id v191 = (int *)v228;
  sub_1C1515E2C();
  uint64_t v115 = v198;
  uint64_t v114 = v199;
  uint64_t v228 = v198;
  uint64_t v229 = v199;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v171 = v228;
  uint64_t v190 = v229;
  uint64_t v228 = v115;
  uint64_t v229 = v114;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v178 = v228;
  uint64_t v189 = v229;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v117 = *(void *)(v105 + 16);
  uint64_t v116 = *(void *)(v105 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v118 = *(void *)(v205 + 40);
  uint64_t v175 = v107;
  if (v118)
  {
    uint64_t v226 = *(void *)(v205 + 32);
    uint64_t v227 = v118;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v117 = v226;
    uint64_t v116 = v227;
  }
  uint64_t v194 = swift_allocObject();
  uint64_t v226 = v117;
  uint64_t v227 = v116;
  sub_1C151E80C();
  uint64_t v176 = v226;
  uint64_t v185 = v227;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v119 = *(void *)(v105 + 24);
  uint64_t v177 = *(void *)(v105 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v120 = v207;
  uint64_t v121 = (uint64_t *)(*(void *)(v207 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                   + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v122 = *v121;
  uint64_t v123 = v121[1];
  swift_unownedRetainStrong();
  uint64_t v124 = *(void *)(v105 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  char v125 = v202;
  uint64_t v126 = sub_1BFF5CA40(v124, v120, v122, v123);
  uint64_t v202 = v125;
  if (v125)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v183);
    swift_release();
    sub_1BFF5B70C((uint64_t)v197, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v203, v200);
    sub_1BFF240E0((uint64_t)v186, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    return swift_deallocUninitializedObject();
  }
  uint64_t v170 = v126;
  uint64_t v127 = v176;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unownedRetainStrong();
  uint64_t v128 = *(void *)(v105 + 40);
  swift_retain();
  swift_release();
  if (v128)
  {
    uint64_t v129 = *(void *)(v128 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v129 = 0;
  }
  uint64_t v221 = v129;
  v218[0] = 0x8000000000000000;
  swift_unownedRetainStrong();
  swift_beginAccess();
  int v169 = *(unsigned __int8 *)(v105 + 200);
  swift_release();
  sub_1C1517EFC();
  uint64_t v130 = v225;
  swift_unownedRetainStrong();
  uint64_t v131 = *(void *)(v204 + 208);
  char v132 = *(unsigned char *)(v204 + 216);
  swift_release();
  uint64_t v223 = v131;
  LOBYTE(v224) = v132;
  swift_unownedRetainStrong();
  v168[1] = v204 + 232;
  swift_beginAccess();
  uint64_t v133 = *(void *)(v204 + 232);
  uint64_t v134 = *(void *)(v204 + 240);
  swift_bridgeObjectRetain();
  swift_release();
  v168[0] = type metadata accessor for FormatImageNodeLayoutAttributes();
  swift_allocObject();
  uint64_t v167 = v130;
  uint64_t v135 = v204;
  uint64_t v189 = FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(v178, v189, v127, v185, v177, v119, v170, &v221, a10, a11, a12, a13, 0, v218, v169, v167, &v223, v133, v134,
           0);
  uint64_t v223 = v198;
  uint64_t v224 = v199;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v178 = v223;
  uint64_t v185 = v224;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v137 = *(void *)(v135 + 16);
  uint64_t v136 = *(void *)(v135 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v138 = *(void *)(v205 + 40);
  if (v138)
  {
    uint64_t v221 = *(void *)(v205 + 32);
    uint64_t v222 = v138;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v137 = v221;
    uint64_t v136 = v222;
  }
  uint64_t v221 = v137;
  uint64_t v222 = v136;
  sub_1C151E80C();
  uint64_t v177 = v221;
  uint64_t v205 = v222;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v139 = *(void *)(v135 + 16);
  uint64_t v140 = *(void *)(v135 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  sub_1C151F7BC();
  double v142 = v141;
  double v144 = v143;
  double v146 = v145;
  double v148 = v147;
  uint64_t v149 = v135;
  uint64_t v150 = *v121;
  uint64_t v151 = v121[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v152 = v206;
  uint64_t v153 = swift_retain();
  uint64_t v154 = v202;
  uint64_t v155 = sub_1BFF5CA40(v153, v207, v150, v151);
  uint64_t v202 = v154;
  if (v154)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_40;
  }
  uint64_t v156 = v155;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v219 = 0x8000000000000000;
  uint64_t v220 = v181;
  swift_unownedRetainStrong();
  swift_beginAccess();
  LODWORD(v207) = *(unsigned __int8 *)(v149 + 200);
  swift_retain();
  swift_release();
  sub_1C1517EFC();
  uint64_t v157 = v215;
  swift_unownedRetainStrong();
  uint64_t v158 = *(void *)(v149 + 208);
  uint64_t v206 = v152;
  char v159 = *(unsigned char *)(v149 + 216);
  swift_release();
  uint64_t v216 = v158;
  char v217 = v159;
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v161 = *(void *)(v149 + 232);
  uint64_t v160 = *(void *)(v149 + 240);
  swift_bridgeObjectRetain();
  swift_release();
  swift_allocObject();
  uint64_t v162 = FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(v178, v185, v177, v205, v139, v140, v156, &v220, v142, v144, v146, v148, 0, &v219, v207, v157, &v216, v161, v160,
           0);
  type metadata accessor for FormatVideoPlayerNodeLayoutAttributes();
  swift_allocObject();
  uint64_t v163 = v187;
  swift_retain();
  uint64_t v164 = v199;
  swift_bridgeObjectRetain();
  uint64_t v165 = sub_1C11EF550(v198, v164, v175, v196, v174, v195, &v235, v173, a10, a11, a12, a13, v233, v172, &v230, (uint64_t)v191, v163, v171, v190,
           v189,
           v162);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFF5B70C((uint64_t)v197, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  (*(void (**)(char *, uint64_t))(v201 + 8))(v203, v200);
  uint64_t result = sub_1BFF240E0((uint64_t)v186, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v166 = v194;
  *(void *)(v194 + 16) = v165;
  *uint64_t v188 = v166 | 0x8000000000000004;
  return result;
}

uint64_t sub_1C10DC0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  uint64_t v15 = *(void *)(swift_unownedRetainStrong() + 88);
  swift_retain();
  swift_release();
  if (!v15 || (uint64_t v16 = *(void *)(v15 + 240), sub_1BFEF6864(v16), swift_release(), v16 == 1))
  {
    uint64_t v34 = a5;
    uint64_t v37 = a4;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v27 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    char v20 = 0;
LABEL_4:
    swift_retain();
    sub_1C15176EC();
    uint64_t v22 = v21;
    uint64_t v23 = sub_1C151769C();
    swift_release();
    type metadata accessor for FormatImageNodeContext();
    unint64_t v24 = swift_allocObject();
    *(CGFloat *)(v24 + 16) = a6;
    *(CGFloat *)(v24 + 24) = a7;
    *(void *)(v24 + 32) = v22;
    *(void *)(v24 + 40) = v23;
    *(void *)(v24 + 48) = v33;
    *(void *)(v24 + 56) = v32;
    *(void *)(v24 + 64) = v31;
    *(void *)(v24 + 72) = v30;
    *(void *)(v24 + 80) = v29;
    *(void *)(v24 + 88) = v28;
    *(void *)(v24 + 96) = v27;
    *(void *)(v24 + 104) = v17;
    *(void *)(v24 + 112) = v18;
    *(void *)(v24 + 120) = v19;
    *(unsigned char *)(v24 + 128) = v20;
    swift_unownedRetainStrong();
    uint64_t v25 = *(void *)(a1 + 80);
    swift_retain();
    swift_release();
    v35[0] = v25;
    sub_1BFF5BD8C(a3, v37, v24, v34);
    swift_release();
    return swift_release();
  }
  sub_1BFCD96EC(a2, (uint64_t)v35, a6, a7);
  uint64_t result = sub_1BFEF68E8(v16);
  if (!v7)
  {
    uint64_t v34 = a5;
    uint64_t v37 = a4;
    uint64_t v32 = v35[1];
    uint64_t v33 = v35[0];
    uint64_t v30 = v35[3];
    uint64_t v31 = v35[2];
    uint64_t v28 = v35[5];
    uint64_t v29 = v35[4];
    uint64_t v17 = v35[7];
    uint64_t v27 = v35[6];
    uint64_t v18 = v35[8];
    uint64_t v19 = v35[9];
    char v20 = v36;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1C10DC334@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10DC384@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10DC3D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 184);
  return result;
}

uint64_t sub_1C10DC41C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 184) = v2;
  return result;
}

unint64_t sub_1C10DC460@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 192);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C10DC4B0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 200);
  return result;
}

uint64_t sub_1C10DC4F8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 200) = v2;
  return result;
}

uint64_t sub_1C10DC53C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 224);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10DC58C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 240);
  *a2 = *(void *)(v3 + 232);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatVideoPlayerNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVideoPlayerNode);
}

uint64_t dispatch thunk of FormatVideoPlayerNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1C10DC648()
{
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C10DC76C@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  return sub_1C10DA894(v5[2], v5[3], v5[4], v5[5], v5[6], v5[7], (uint64_t)v5 + v12, *(uint64_t *)((char *)v5 + ((*(void *)(*(void *)(v11 - 8) + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)), a1, a2, a3, a4, a5);
}

uint64_t sub_1C10DC85C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10DC8A4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF470E8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C10DC910()
{
  swift_release();
  return swift_deallocObject();
}

id FormatCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_collectionViewLayout_, a1, a2, a3, a4, a5);

  return v7;
}

Swift::Void __swiftcall FormatCollectionView.viewWillAppear()()
{
}

unint64_t sub_1C10DC9D4()
{
  unint64_t result = qword_1EB86B440;
  if (!qword_1EB86B440)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB86B440);
  }
  return result;
}

unint64_t sub_1C10DCA14()
{
  unint64_t result = qword_1EB885198;
  if (!qword_1EB885198)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB885198);
  }
  return result;
}

uint64_t sub_1C10DCA6C(uint64_t a1)
{
  sub_1C10DCAC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C10DCAC8()
{
  if (!qword_1EA1AB440)
  {
    sub_1C10DCA14();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AB440);
    }
  }
}

Swift::Void __swiftcall FormatCollectionView.viewDidLoad()()
{
}

Swift::Void __swiftcall FormatCollectionView.viewDidAppear()()
{
}

Swift::Void __swiftcall FormatCollectionView.viewWillDisappear()()
{
}

Swift::Void __swiftcall FormatCollectionView.viewDidDisappear()()
{
}

void sub_1C10DCB80(void (*a1)(uint64_t, uint64_t))
{
  id v3 = objc_msgSend(v1, sel_visibleCells);
  sub_1C10DC9D4();
  unint64_t v4 = sub_1C151EBCC();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)MEMORY[0x1C18C7CB0](i, v4);
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          char v8 = v7;
          id v14 = v7;
          sub_1C10DCA14();
          id v9 = v8;
          if (swift_dynamicCast())
          {
            sub_1BFC773DC(v12, (uint64_t)v15);
            uint64_t v10 = v16;
            uint64_t v11 = v17;
            __swift_project_boxed_opaque_existential_1(v15, v16);
            a1(v10, v11);

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
          }
          else
          {
            uint64_t v13 = 0;
            memset(v12, 0, sizeof(v12));

            sub_1C10DCA6C((uint64_t)v12);
          }
        }
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
}

id FormatCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  v13.receiver = v5;
  v13.super_class = (Class)swift_getObjectType();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_collectionViewLayout_, a1, a2, a3, a4, a5);

  return v11;
}

id FormatCollectionView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatCollectionView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id FormatCollectionView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C10DCF68()
{
}

void sub_1C10DCF8C()
{
}

void sub_1C10DCFB0()
{
}

void sub_1C10DCFD4()
{
}

void sub_1C10DCFF8()
{
}

uint64_t FormatCollectionView.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t FormatCollectionView.shouldMonitorScroll.getter()
{
  id v1 = objc_msgSend(v0, sel_visibleCells);
  sub_1C10DC9D4();
  unint64_t v2 = sub_1C151EBCC();

  if (v2 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        char v8 = v6;
      }
      else {
        char v8 = 0;
      }
      if (v8)
      {
        swift_getObjectType();
        char v9 = sub_1C151C25C();

        if (v9)
        {
          uint64_t v10 = 1;
          goto LABEL_19;
        }
      }
      else
      {
      }
      ++v4;
      if (v7 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  uint64_t v10 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v10;
}

void FormatCollectionView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  id v1 = objc_msgSend(v0, sel_visibleCells);
  sub_1C10DC9D4();
  unint64_t v2 = sub_1C151EBCC();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_15;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1C18C7CB0](i, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    if (v7)
    {
      swift_getObjectType();
      sub_1C151C26C();
    }
  }
LABEL_15:
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatCollectionView()
{
  return self;
}

unint64_t sub_1C10DD314()
{
  uint64_t v1 = type metadata accessor for FormatOption();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  unint64_t v8 = MEMORY[0x1E4FBC860];
  do
  {
    if (!((*(void *)(v5 + 8 * v7 + 32) >> 59) & 0x1E | (*(void *)(v5 + 8 * v7 + 32) >> 2) & 1))
    {
      uint64_t v9 = swift_projectBox();
      sub_1C019FFF0(v9, (uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v8 = sub_1BFFE1F7C(0, *(void *)(v8 + 16) + 1, 1, v8);
      }
      unint64_t v11 = *(void *)(v8 + 16);
      unint64_t v10 = *(void *)(v8 + 24);
      if (v11 >= v10 >> 1) {
        unint64_t v8 = sub_1BFFE1F7C(v10 > 1, v11 + 1, 1, v8);
      }
      *(void *)(v8 + 16) = v11 + 1;
      sub_1C00AB068((uint64_t)v4, v8+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v11);
    }
    ++v7;
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C10DD4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7 = v6;
  uint64_t v93 = a5;
  uint64_t v99 = *MEMORY[0x1E4F143B8];
  uint64_t v85 = type metadata accessor for FormatOption();
  uint64_t v11 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v94 = (uint64_t)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 + 112);
  uint64_t v88 = v5;
  uint64_t v96 = v5[3];
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1BFEDB3C8();
  sub_1BFF1B81C(v14);
  int64_t v15 = *(void *)(v13 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v82 = v11;
  if (v15)
  {
    uint64_t v91 = a4;
    uint64_t v92 = a2;
    id v95 = v6;
    *(void *)&long long v98 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v15, 0);
    uint64_t v16 = v98;
    uint64_t v17 = v13 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v18 = *(void *)(v11 + 72);
    do
    {
      uint64_t v19 = v94;
      sub_1C019FFF0(v17, v94);
      uint64_t v20 = swift_allocBox();
      sub_1C00AB068(v19, v21);
      *(void *)&long long v98 = v16;
      unint64_t v23 = *(void *)(v16 + 16);
      unint64_t v22 = *(void *)(v16 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BFF9524C(v22 > 1, v23 + 1, 1);
        uint64_t v16 = v98;
      }
      *(void *)(v16 + 16) = v23 + 1;
      *(void *)(v16 + 8 * v23 + 32) = v20 | 0x8000000000000000;
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    id v7 = v95;
    a4 = v91;
    a2 = v92;
  }
  sub_1BFF1B81C(v16);
  sub_1BFFDE32C(*(void *)(a4 + 56), (uint64_t)&v98);
  long long v97 = v98;
  type metadata accessor for FormatOptionList();
  swift_allocObject();
  swift_retain();
  unint64_t v24 = sub_1BFFDE5C0((uint64_t *)&v97, a2);
  if (v7) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v26 = v24[2];
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BFF1B81C(v26);
  uint64_t v27 = v88[15];
  if (v27)
  {
    uint64_t v91 = *(void *)(v27 + 16);
    if (v91)
    {
      id v95 = 0;
      uint64_t v28 = v88[7];
      uint64_t v29 = v88[8];
      uint64_t v81 = v88 + 4;
      __swift_project_boxed_opaque_existential_1(v88 + 4, v28);
      *(void *)&long long v98 = 0;
      *((void *)&v98 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1C15200FC();
      sub_1C151E80C();
      *(void *)&long long v97 = *(void *)(v27 + 16);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      (*(void (**)(void, void, uint64_t, uint64_t))(v29 + 16))(v98, *((void *)&v98 + 1), v28, v29);
      swift_bridgeObjectRelease();
      type metadata accessor for FormatVariableCollection();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = MEMORY[0x1E4FBC868];
      type metadata accessor for FormatOptionCollection();
      swift_initStackObject();
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v32 = sub_1BFEF13D8(v31, v30);
      swift_bridgeObjectRelease();
      *(void *)&long long v97 = v93;
      uint64_t v33 = swift_bridgeObjectRetain();
      v80[1] = v32;
      uint64_t v34 = sub_1BFEF3B08(v33);
      sub_1BFEF3808(v34);
      unint64_t v35 = 0;
      uint64_t v90 = v27 + 32;
      v80[3] = 0xD00000000000003BLL;
      v80[2] = 0x80000001C1634790;
      uint64_t v84 = v27;
      do
      {
        if (v35 >= *(void *)(v27 + 16)) {
          __break(1u);
        }
        uint64_t v38 = (uint64_t *)(v90 + 24 * v35);
        uint64_t v40 = v38[1];
        uint64_t v39 = v38[2];
        if (v40)
        {
          uint64_t v41 = *v38;
          uint64_t v42 = qword_1EB87F148;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          if (v42 != -1) {
            swift_once();
          }
          *(void *)&long long v98 = v41;
          *((void *)&v98 + 1) = v40;
          uint64_t v43 = sub_1BFEF53C0((uint64_t *)&v98);
          uint64_t v44 = *(void *)(v43 + 16);
          if (v44)
          {
            uint64_t v83 = v41;
            uint64_t v86 = v43;
            uint64_t v87 = v40;
            uint64_t v89 = v39;
            uint64_t v92 = v35;
            uint64_t v45 = (uint64_t *)(v43 + 64);
            while (1)
            {
              uint64_t v46 = *(v45 - 1);
              uint64_t v47 = *v45;
              char v48 = *(unsigned char *)(v46 + 32);
              unsigned int v49 = v48 & 0x3F;
              unint64_t v50 = (unint64_t)((1 << v48) + 63) >> 6;
              size_t v51 = 8 * v50;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
              if (v49 <= 0xD
                || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
              {
                MEMORY[0x1F4188790](isStackAllocationSafe);
                uint64_t v53 = (char *)v80 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0);
                bzero(v53, v51);
                id v54 = v95;
                uint64_t v55 = sub_1BFEFB09C((uint64_t)v53, v50, v46, v93);
                swift_bridgeObjectRelease();
                id v95 = v54;
                if (v54)
                {
                  id v79 = v95;
                  swift_willThrow();

                  __break(1u);
LABEL_51:
                  swift_bridgeObjectRelease();

                  uint64_t result = MEMORY[0x1C18C9B00](v53, -1, -1);
                  __break(1u);
                  return result;
                }
              }
              else
              {
                uint64_t v53 = (char *)swift_slowAlloc();
                bzero(v53, v51);
                id v56 = v95;
                uint64_t v57 = sub_1BFEFB09C((uint64_t)v53, v50, v46, v93);
                id v95 = v56;
                if (v56) {
                  goto LABEL_51;
                }
                uint64_t v55 = v57;
                swift_bridgeObjectRelease();
                MEMORY[0x1C18C9B00](v53, -1, -1);
              }
              char v58 = sub_1BFEFAE14(v55, v46);
              swift_release();
              if (v58)
              {
                char v59 = sub_1BFEFB810(v93, v47);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v59)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  uint64_t v60 = v89;
                  int64_t v61 = *(void *)(v89 + 16);
                  if (v61)
                  {
                    *(void *)&long long v98 = MEMORY[0x1E4FBC860];
                    sub_1BFF9524C(0, v61, 0);
                    uint64_t v62 = v98;
                    uint64_t v63 = v60
                        + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
                    uint64_t v64 = *(void *)(v82 + 72);
                    do
                    {
                      uint64_t v65 = v94;
                      sub_1C019FFF0(v63, v94);
                      uint64_t v66 = swift_allocBox();
                      sub_1C00AB068(v65, v67);
                      *(void *)&long long v98 = v62;
                      unint64_t v69 = *(void *)(v62 + 16);
                      unint64_t v68 = *(void *)(v62 + 24);
                      if (v69 >= v68 >> 1)
                      {
                        sub_1BFF9524C(v68 > 1, v69 + 1, 1);
                        uint64_t v62 = v98;
                      }
                      *(void *)(v62 + 16) = v69 + 1;
                      *(void *)(v62 + 8 * v69 + 32) = v66 | 0x1000000000000000;
                      v63 += v64;
                      --v61;
                    }
                    while (v61);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v62 = MEMORY[0x1E4FBC860];
                  }
                  sub_1BFF1B81C(v62);
                  uint64_t v27 = v84;
                  unint64_t v35 = v92;
                  goto LABEL_14;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v45 += 5;
              if (!--v44)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v27 = v84;
                unint64_t v35 = v92;
                goto LABEL_13;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_13:
          uint64_t v36 = v88[7];
          uint64_t v37 = v88[8];
          __swift_project_boxed_opaque_existential_1(v81, v36);
          *(void *)&long long v98 = 0;
          *((void *)&v98 + 1) = 0xE000000000000000;
          sub_1C15200FC();
          sub_1C151E80C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          (*(void (**)(void, void, uint64_t, uint64_t))(v37 + 16))(v98, *((void *)&v98 + 1), v36, v37);
          swift_bridgeObjectRelease();
        }
        else
        {
          int64_t v70 = *(void *)(v39 + 16);
          if (v70)
          {
            uint64_t v92 = v35;
            *(void *)&long long v98 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRetain();
            sub_1BFF9524C(0, v70, 0);
            uint64_t v71 = v98;
            uint64_t v72 = v39 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
            uint64_t v73 = *(void *)(v82 + 72);
            do
            {
              uint64_t v74 = v94;
              sub_1C019FFF0(v72, v94);
              uint64_t v75 = swift_allocBox();
              sub_1C00AB068(v74, v76);
              *(void *)&long long v98 = v71;
              unint64_t v78 = *(void *)(v71 + 16);
              unint64_t v77 = *(void *)(v71 + 24);
              if (v78 >= v77 >> 1)
              {
                sub_1BFF9524C(v77 > 1, v78 + 1, 1);
                uint64_t v71 = v98;
              }
              *(void *)(v71 + 16) = v78 + 1;
              *(void *)(v71 + 8 * v78 + 32) = v75 | 0x1000000000000000;
              v72 += v73;
              --v70;
            }
            while (v70);
            swift_bridgeObjectRelease();
            uint64_t v27 = v84;
            unint64_t v35 = v92;
          }
          else
          {
            uint64_t v71 = MEMORY[0x1E4FBC860];
          }
          sub_1BFF1B81C(v71);
        }
LABEL_14:
        ++v35;
      }
      while (v35 != v91);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  return v96;
}

uint64_t sub_1C10DDE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v8 = v7;
  uint64_t v103 = a6;
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  uint64_t v97 = type metadata accessor for FormatOption();
  uint64_t v13 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v108 = (uint64_t)v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 + 80);
  uint64_t v100 = v6;
  uint64_t v110 = v6[3];
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1BFEDB3C8();
  sub_1BFF1B81C(v16);
  int64_t v17 = *(void *)(v15 + 16);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v102 = v13;
  if (v17)
  {
    uint64_t v105 = a4;
    uint64_t v106 = a2;
    uint64_t v107 = v8;
    uint64_t v109 = a5;
    *(void *)&long long v112 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v17, 0);
    uint64_t v18 = v112;
    uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v104 = v15;
    uint64_t v20 = v15 + ((v19 + 32) & ~v19);
    uint64_t v21 = *(void *)(v13 + 72);
    do
    {
      uint64_t v22 = v108;
      sub_1C019FFF0(v20, v108);
      uint64_t v23 = swift_allocBox();
      sub_1C00AB068(v22, v24);
      *(void *)&long long v112 = v18;
      unint64_t v26 = *(void *)(v18 + 16);
      unint64_t v25 = *(void *)(v18 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BFF9524C(v25 > 1, v26 + 1, 1);
        uint64_t v18 = v112;
      }
      *(void *)(v18 + 16) = v26 + 1;
      *(void *)(v18 + 8 * v26 + 32) = v23 | 0x8000000000000004;
      v20 += v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a5 = v109;
    a2 = v106;
    uint64_t v8 = v107;
    a4 = v105;
  }
  sub_1BFF1B81C(v18);
  sub_1BFFDE32C(a4, (uint64_t)&v112);
  long long v111 = v112;
  type metadata accessor for FormatOptionList();
  swift_allocObject();
  swift_retain();
  uint64_t v27 = sub_1BFFDE5C0((uint64_t *)&v111, a2);
  if (v8) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v29 = v27[2];
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BFF1B81C(v29);
  int64_t v30 = a5[2];
  uint64_t v31 = MEMORY[0x1E4FBC860];
  uint64_t v109 = 0;
  if (v30)
  {
    *(void *)&long long v112 = MEMORY[0x1E4FBC860];
    sub_1BFF9524C(0, v30, 0);
    uint64_t v31 = v112;
    uint64_t v32 = (uint64_t)a5 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    uint64_t v33 = *(void *)(v102 + 72);
    do
    {
      uint64_t v34 = v108;
      sub_1C019FFF0(v32, v108);
      uint64_t v35 = swift_allocBox();
      sub_1C00AB068(v34, v36);
      *(void *)&long long v112 = v31;
      unint64_t v38 = *(void *)(v31 + 16);
      unint64_t v37 = *(void *)(v31 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1BFF9524C(v37 > 1, v38 + 1, 1);
        uint64_t v31 = v112;
      }
      *(void *)(v31 + 16) = v38 + 1;
      *(void *)(v31 + 8 * v38 + 32) = v35 | 0x3000000000000004;
      v32 += v33;
      --v30;
    }
    while (v30);
  }
  sub_1BFF1B81C(v31);
  uint64_t v39 = v100[15];
  if (v39)
  {
    uint64_t v104 = *(void *)(v39 + 16);
    if (v104)
    {
      uint64_t v40 = v100[7];
      uint64_t v41 = v100[8];
      id v95 = v100 + 4;
      __swift_project_boxed_opaque_existential_1(v100 + 4, v40);
      *(void *)&long long v112 = 0;
      *((void *)&v112 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1C15200FC();
      sub_1C151E80C();
      *(void *)&long long v111 = *(void *)(v39 + 16);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      (*(void (**)(void, void, uint64_t, uint64_t))(v41 + 16))(v112, *((void *)&v112 + 1), v40, v41);
      swift_bridgeObjectRelease();
      type metadata accessor for FormatVariableCollection();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = MEMORY[0x1E4FBC868];
      type metadata accessor for FormatOptionCollection();
      swift_initStackObject();
      uint64_t v43 = swift_bridgeObjectRetain();
      uint64_t v44 = sub_1BFEF13D8(v43, v42);
      swift_bridgeObjectRelease();
      *(void *)&long long v111 = v103;
      uint64_t v45 = swift_bridgeObjectRetain();
      v94[1] = v44;
      uint64_t v46 = sub_1BFEF3B08(v45);
      sub_1BFEF3808(v46);
      unint64_t v47 = 0;
      uint64_t v103 = v39 + 32;
      v94[3] = 0xD000000000000035;
      void v94[2] = 0x80000001C1634850;
      uint64_t v48 = v102;
      uint64_t v96 = v39;
      do
      {
        if (v47 >= *(void *)(v39 + 16)) {
          __break(1u);
        }
        unsigned int v49 = (uint64_t *)(v103 + 24 * v47);
        uint64_t v51 = v49[1];
        uint64_t v50 = v49[2];
        if (v51)
        {
          uint64_t v52 = *v49;
          uint64_t v53 = v111;
          uint64_t v54 = qword_1EB87F148;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v107 = v53;
          swift_bridgeObjectRetain();
          if (v54 != -1) {
            swift_once();
          }
          uint64_t v105 = v52;
          uint64_t v106 = v47;
          *(void *)&long long v112 = v52;
          *((void *)&v112 + 1) = v51;
          uint64_t v55 = sub_1BFEF53C0((uint64_t *)&v112);
          uint64_t v56 = *(void *)(v55 + 16);
          if (v56)
          {
            uint64_t v99 = v51;
            uint64_t v101 = v50;
            uint64_t v98 = v55;
            uint64_t v57 = (uint64_t *)(v55 + 64);
            while (1)
            {
              uint64_t v58 = *(v57 - 1);
              uint64_t v59 = *v57;
              char v60 = *(unsigned char *)(v58 + 32);
              unsigned int v61 = v60 & 0x3F;
              unint64_t v62 = (unint64_t)((1 << v60) + 63) >> 6;
              size_t v63 = 8 * v62;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
              if (v61 <= 0xD
                || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
              {
                MEMORY[0x1F4188790](isStackAllocationSafe);
                bzero((char *)v94 - ((v63 + 15) & 0x3FFFFFFFFFFFFFF0), v63);
                id v65 = v109;
                uint64_t v66 = sub_1BFEFB09C((uint64_t)v94 - ((v63 + 15) & 0x3FFFFFFFFFFFFFF0), v62, v58, v107);
                uint64_t v67 = v65;
                swift_bridgeObjectRelease();
                uint64_t v109 = v65;
                if (v65)
                {
                  id v93 = v109;
                  swift_willThrow();

                  __break(1u);
LABEL_57:
                  swift_bridgeObjectRelease();

                  uint64_t result = MEMORY[0x1C18C9B00](v67, -1, -1);
                  __break(1u);
                  return result;
                }
              }
              else
              {
                uint64_t v67 = (void *)swift_slowAlloc();
                bzero(v67, v63);
                unint64_t v68 = v109;
                uint64_t v69 = sub_1BFEFB09C((uint64_t)v67, v62, v58, v107);
                uint64_t v109 = v68;
                if (v68) {
                  goto LABEL_57;
                }
                uint64_t v66 = v69;
                swift_bridgeObjectRelease();
                MEMORY[0x1C18C9B00](v67, -1, -1);
              }
              char v70 = sub_1BFEFAE14(v66, v58);
              swift_release();
              if (v70)
              {
                char v71 = sub_1BFEFB810(v107, v59);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v71)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  uint64_t v72 = v101;
                  uint64_t v48 = v102;
                  int64_t v73 = *(void *)(v101 + 16);
                  if (v73)
                  {
                    *(void *)&long long v112 = MEMORY[0x1E4FBC860];
                    sub_1BFF9524C(0, v73, 0);
                    uint64_t v74 = v112;
                    uint64_t v75 = v72
                        + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
                    uint64_t v76 = *(void *)(v48 + 72);
                    do
                    {
                      uint64_t v77 = v108;
                      sub_1C019FFF0(v75, v108);
                      uint64_t v78 = swift_allocBox();
                      sub_1C00AB068(v77, v79);
                      *(void *)&long long v112 = v74;
                      unint64_t v81 = *(void *)(v74 + 16);
                      unint64_t v80 = *(void *)(v74 + 24);
                      if (v81 >= v80 >> 1)
                      {
                        sub_1BFF9524C(v80 > 1, v81 + 1, 1);
                        uint64_t v74 = v112;
                      }
                      *(void *)(v74 + 16) = v81 + 1;
                      *(void *)(v74 + 8 * v81 + 32) = v78 | 0x1000000000000000;
                      v75 += v76;
                      --v73;
                    }
                    while (v73);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v74 = MEMORY[0x1E4FBC860];
                  }
                  sub_1BFF1B81C(v74);
                  uint64_t v39 = v96;
                  goto LABEL_53;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v57 += 5;
              if (!--v56)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v48 = v102;
                uint64_t v39 = v96;
                goto LABEL_49;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_49:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v91 = v100[7];
          uint64_t v92 = v100[8];
          __swift_project_boxed_opaque_existential_1(v95, v91);
          *(void *)&long long v112 = 0;
          *((void *)&v112 + 1) = 0xE000000000000000;
          sub_1C15200FC();
          sub_1C151E80C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          (*(void (**)(void, void, uint64_t, uint64_t))(v92 + 16))(v112, *((void *)&v112 + 1), v91, v92);
          swift_bridgeObjectRelease();
LABEL_53:
          unint64_t v47 = v106;
        }
        else
        {
          int64_t v82 = *(void *)(v50 + 16);
          if (v82)
          {
            uint64_t v106 = v47;
            *(void *)&long long v112 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRetain();
            sub_1BFF9524C(0, v82, 0);
            uint64_t v83 = v112;
            uint64_t v84 = v50 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
            uint64_t v85 = *(void *)(v48 + 72);
            do
            {
              uint64_t v86 = v108;
              sub_1C019FFF0(v84, v108);
              uint64_t v87 = swift_allocBox();
              sub_1C00AB068(v86, v88);
              *(void *)&long long v112 = v83;
              unint64_t v90 = *(void *)(v83 + 16);
              unint64_t v89 = *(void *)(v83 + 24);
              if (v90 >= v89 >> 1)
              {
                sub_1BFF9524C(v89 > 1, v90 + 1, 1);
                uint64_t v83 = v112;
              }
              *(void *)(v83 + 16) = v90 + 1;
              *(void *)(v83 + 8 * v90 + 32) = v87 | 0x1000000000000000;
              v84 += v85;
              --v82;
            }
            while (v82);
            swift_bridgeObjectRelease();
            uint64_t v39 = v96;
            unint64_t v47 = v106;
            uint64_t v48 = v102;
          }
          else
          {
            uint64_t v83 = MEMORY[0x1E4FBC860];
          }
          sub_1BFF1B81C(v83);
        }
        ++v47;
      }
      while (v47 != v104);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  return v110;
}

uint64_t sub_1C10DE9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  uint64_t v68 = v3[2];
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v5);
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v6);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v7);
  uint64_t v8 = sub_1BFF9CAC4(a3);
  sub_1BFEF3808(v8);
  uint64_t v57 = v3;
  uint64_t v9 = v3[14];
  if (!v9) {
    return v68;
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    return v68;
  }
  uint64_t v11 = v57[7];
  uint64_t v12 = v57[8];
  uint64_t v56 = v57 + 4;
  __swift_project_boxed_opaque_existential_1(v57 + 4, v11);
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1C15200FC();
  sub_1C151E80C();
  uint64_t v65 = *(void *)(v9 + 16);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  (*(void (**)(void, unint64_t, uint64_t, uint64_t))(v12 + 16))(0, 0xE000000000000000, v11, v12);
  swift_bridgeObjectRelease();
  unint64_t v13 = 0;
  id v64 = 0;
  uint64_t v61 = v9 + 32;
  unint64_t v54 = 0x80000001C16348C0;
  unint64_t v55 = 0xD000000000000037;
  uint64_t v53 = v9;
  uint64_t v52 = v10;
  while (2)
  {
    if (v13 >= *(void *)(v9 + 16)) {
      __break(1u);
    }
    uint64_t v16 = (uint64_t *)(v61 + 24 * v13);
    unint64_t v18 = v16[1];
    uint64_t v17 = v16[2];
    if (!v18)
    {
      uint64_t v44 = *(void *)(v17 + 16);
      if (v44)
      {
        unint64_t v45 = v13;
        swift_bridgeObjectRetain();
        uint64_t v46 = (uint64_t *)(v17 + 40);
        do
        {
          uint64_t v47 = *(v46 - 1);
          uint64_t v48 = *v46;
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v66, v47, v48);
          swift_bridgeObjectRelease();
          v46 += 2;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease();
        unint64_t v13 = v45;
      }
      goto LABEL_8;
    }
    unint64_t v62 = v13;
    uint64_t v19 = *v16;
    uint64_t v20 = v68;
    uint64_t v21 = qword_1EB87F148;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v63 = v20;
    swift_bridgeObjectRetain();
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v66 = v19;
    unint64_t v67 = v18;
    uint64_t v22 = sub_1BFEF53C0(&v66);
    uint64_t v23 = *(void *)(v22 + 16);
    if (!v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v57[7];
      uint64_t v15 = v57[8];
      __swift_project_boxed_opaque_existential_1(v56, v14);
      uint64_t v66 = 0;
      unint64_t v67 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v15 + 16))(v66, v67, v14, v15);
      goto LABEL_6;
    }
    unint64_t v59 = v18;
    uint64_t v60 = v17;
    uint64_t v58 = v22;
    uint64_t v24 = (uint64_t *)(v22 + 64);
    while (1)
    {
      uint64_t v25 = *(v24 - 1);
      uint64_t v26 = *v24;
      char v27 = *(unsigned char *)(v25 + 32);
      unsigned int v28 = v27 & 0x3F;
      unint64_t v29 = (unint64_t)((1 << v27) + 63) >> 6;
      size_t v30 = 8 * v29;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v28 <= 0xD
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
      {
        MEMORY[0x1F4188790](isStackAllocationSafe);
        uint64_t v32 = (char *)&v51 - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0);
        bzero(v32, v30);
        uint64_t v33 = v29;
        id v34 = v64;
        uint64_t v35 = sub_1BFEFB09C((uint64_t)v32, v33, v25, v63);
        swift_bridgeObjectRelease();
        id v64 = v34;
        if (v34)
        {
          id v50 = v64;
          swift_willThrow();

          __break(1u);
LABEL_38:

          uint64_t result = MEMORY[0x1C18C9B00](v32, -1, -1);
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v32 = (char *)swift_slowAlloc();
        bzero(v32, v30);
        uint64_t v36 = v29;
        id v37 = v64;
        uint64_t v35 = sub_1BFEFB09C((uint64_t)v32, v36, v25, v63);
        swift_bridgeObjectRelease();
        id v64 = v37;
        if (v37) {
          goto LABEL_38;
        }
        MEMORY[0x1C18C9B00](v32, -1, -1);
      }
      char v38 = sub_1BFEFAE14(v35, v25);
      swift_release();
      if (v38) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      v24 += 5;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v53;
        uint64_t v10 = v52;
        goto LABEL_5;
      }
    }
    char v39 = sub_1BFEFB810(v63, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0) {
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v40 = *(void *)(v60 + 16);
    if (!v40)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v53;
      uint64_t v10 = v52;
      goto LABEL_7;
    }
    uint64_t v41 = (uint64_t *)(v60 + 40);
    uint64_t v9 = v53;
    uint64_t v10 = v52;
    do
    {
      uint64_t v42 = *(v41 - 1);
      uint64_t v43 = *v41;
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v66, v42, v43);
      swift_bridgeObjectRelease();
      v41 += 2;
      --v40;
    }
    while (v40);
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    unint64_t v13 = v62;
LABEL_8:
    if (++v13 != v10) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t FormatNodeState.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return v0;
}

uint64_t method lookup function for FormatNodeState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatNodeState);
}

uint64_t FeedServiceImpressionProcessor.__allocating_init(cursorContainerBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t FeedServiceImpressionProcessor.init(cursorContainerBlock:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t FeedServiceImpressionProcessor.blueprintImpressionManager(_:startedImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1C10DF2CC(a2, MEMORY[0x1E4FACC68], MEMORY[0x1E4FACC58], MEMORY[0x1E4FACC60], 1);
}

uint64_t FeedServiceImpressionProcessor.blueprintImpressionManager(_:createdImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1C10DF2CC(a2, MEMORY[0x1E4FAC4C0], MEMORY[0x1E4FAC4B0], MEMORY[0x1E4FAC4B8], 0);
}

uint64_t FeedServiceImpressionProcessor.blueprintImpressionManager(_:cancelledImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1C10DF2CC(a2, MEMORY[0x1E4FAC4C0], MEMORY[0x1E4FAC4B0], MEMORY[0x1E4FAC4B8], 0);
}

uint64_t FeedServiceImpressionProcessor.deinit()
{
  swift_release();
  return v0;
}

uint64_t FeedServiceImpressionProcessor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C10DF1FC(uint64_t a1, uint64_t a2)
{
  return sub_1C10DF2CC(a2, MEMORY[0x1E4FACC68], MEMORY[0x1E4FACC58], MEMORY[0x1E4FACC60], 1);
}

uint64_t sub_1C10DF264(uint64_t a1, uint64_t a2)
{
  return sub_1C10DF2CC(a2, MEMORY[0x1E4FAC4C0], MEMORY[0x1E4FAC4B0], MEMORY[0x1E4FAC4B8], 0);
}

uint64_t sub_1C10DF2CC(uint64_t a1, uint64_t (*a2)(void, uint64_t *, __n128), void (*a3)(uint64_t), void (*a4)(uint64_t), int a5)
{
  int v29 = a5;
  uint64_t v33 = a4;
  uint64_t v36 = a2;
  id v37 = a3;
  uint64_t v6 = v5;
  uint64_t v38 = *v5;
  uint64_t v39 = a1;
  uint64_t v28 = v38;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = v8;
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = v9;
  uint64_t v10 = sub_1C151CC9C();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  MEMORY[0x1F4188790](v10);
  size_t v30 = (char *)&v28 - v11;
  uint64_t v35 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v35);
  unint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = sub_1C151A31C();
  uint64_t v19 = *(void *)(v18 - 8);
  __n128 v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v28 - v21;
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = v8;
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = v9;
  uint64_t v23 = v36(0, &v40, v20);
  v37(v23);
  sub_1C151A30C();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  (*(void (**)(uint64_t))(*(void *)(v38 + 112) + 8))(v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v8);
  LODWORD(AssociatedTypeWitness) = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_1BFEE6798((uint64_t)v13);
  if (!AssociatedTypeWitness)
  {
    uint64_t v25 = (uint64_t (*)(char *))v6[2];
    uint64_t v26 = v30;
    v33(v23);
    uint64_t v27 = v25(v26);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v26, v32);
    if ((~v27 & 0xF000000000000007) != 0)
    {
      sub_1C0401FD0(v27);
      swift_retain();
      FeedServiceState.markGapOnScreen(_:)(v29 & 1);
      swift_release();
      return sub_1BFE14324(v27);
    }
  }
  return result;
}

uint64_t sub_1C10DF70C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_1C10DF714()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedServiceImpressionProcessor()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for FeedServiceImpressionProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedServiceImpressionProcessor);
}

uint64_t dispatch thunk of FeedServiceImpressionProcessor.__allocating_init(cursorContainerBlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t FeedGroupEmitterRuleOutput.rule.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFC66384(v1, a1);
}

uint64_t FeedGroupEmitterRuleOutput.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFDCA484(v2, v3, v4);
}

uint64_t assignWithCopy for FeedGroupEmitterRuleOutput(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, a2);
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_1BFDCA484(v4, v5, v2);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_1BFDCA350(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FeedGroupEmitterRuleOutput(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v5;
  sub_1BFDCA350(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupEmitterRuleOutput(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupEmitterRuleOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleOutput()
{
  return &type metadata for FeedGroupEmitterRuleOutput;
}

uint64_t initializeWithCopy for FeedGroupEmitterRuleOutputDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedGroupEmitterRuleOutputDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedGroupEmitterRuleOutputDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleOutputDescription()
{
  return &type metadata for FeedGroupEmitterRuleOutputDescription;
}

uint64_t sub_1C10DFA44(void *a1)
{
  uint64_t v3 = v1;
  sub_1C10E0074(0, &qword_1EB86B860, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10DFFCC();
  sub_1C1520F0C();
  v11[15] = 0;
  sub_1C15207CC();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + 16);
    v11[13] = 1;
    sub_1C10E00D8();
    sub_1C152080C();
    v11[12] = 2;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C10DFBF8()
{
  unint64_t v1 = 0x746C75736572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7470697263736564;
  }
}

uint64_t sub_1C10DFC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C10E0338(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C10DFC84(uint64_t a1)
{
  unint64_t v2 = sub_1C10DFFCC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C10DFCC0(uint64_t a1)
{
  unint64_t v2 = sub_1C10DFFCC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C10DFCFC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C10DFD5C(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C10DFD44(void *a1)
{
  return sub_1C10DFA44(a1);
}

uint64_t sub_1C10DFD5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C10E0074(0, &qword_1EA1AB448, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10DFFCC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v22 = 1;
  sub_1C10E0020();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  int v20 = v23;
  char v21 = 2;
  uint64_t v13 = sub_1C152069C();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v15;
  return result;
}

unint64_t sub_1C10DFFCC()
{
  unint64_t result = qword_1EB865508;
  if (!qword_1EB865508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865508);
  }
  return result;
}

unint64_t sub_1C10E0020()
{
  unint64_t result = qword_1EA1AB450;
  if (!qword_1EA1AB450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB450);
  }
  return result;
}

void sub_1C10E0074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C10DFFCC();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C10E00D8()
{
  unint64_t result = qword_1EB865458;
  if (!qword_1EB865458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865458);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupEmitterRuleOutputDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10E01F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleOutputDescription.CodingKeys()
{
  return &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys;
}

unint64_t sub_1C10E0234()
{
  unint64_t result = qword_1EA1AB458;
  if (!qword_1EA1AB458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB458);
  }
  return result;
}

unint64_t sub_1C10E028C()
{
  unint64_t result = qword_1EB865518;
  if (!qword_1EB865518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865518);
  }
  return result;
}

unint64_t sub_1C10E02E4()
{
  unint64_t result = qword_1EB865510;
  if (!qword_1EB865510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865510);
  }
  return result;
}

uint64_t sub_1C10E0338(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1634940)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t FormatVideoNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatVideoNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatVideoNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatVideoNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 104);
}

unint64_t FormatVideoNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 112);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatVideoNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

void FormatVideoNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = *(void *)(v1 + 128);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatVideoNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatVideoNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatVideoNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C10E058C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x676E697A69736572;
      break;
    case 5:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 6:
      unint64_t result = 0x696C696269736976;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x656C797473;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C10E0710()
{
  return sub_1C10E058C(*v0);
}

uint64_t sub_1C10E0718(uint64_t a1)
{
  unint64_t v2 = sub_1C10E0D18();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C10E0754(uint64_t a1)
{
  unint64_t v2 = sub_1C10E0D18();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatVideoNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatVideoNodeLayoutAttributes.__deallocating_deinit()
{
  FormatVideoNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatVideoNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C10E14F0(0, &qword_1EA1AB460, (uint64_t (*)(void))sub_1C10E0D18, (uint64_t)&type metadata for FormatVideoNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10E0D18();
  sub_1C1520F0C();
  LOBYTE(v13[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    char v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C610(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 96);
    char v14 = 4;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v13[0]) = 5;
    sub_1C15207FC();
    *(void *)&v13[0] = *(void *)(v3 + 112);
    char v14 = 6;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v13[0]) = 7;
    sub_1C15207DC();
    char v11 = *(unsigned char *)(v3 + 136);
    *(void *)&v13[0] = *(void *)(v3 + 128);
    BYTE8(v13[0]) = v11;
    char v14 = 8;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 144);
    char v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C610(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 152);
    char v14 = 10;
    type metadata accessor for FormatVideoNodeStyle();
    sub_1BFE4C610(&qword_1EA1A08B0, 255, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle);
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 160);
    char v14 = 11;
    sub_1C10E14F0(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C10E1558(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C10E0D18()
{
  unint64_t result = qword_1EA1AB468;
  if (!qword_1EA1AB468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB468);
  }
  return result;
}

uint64_t FormatVideoNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatVideoNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatVideoNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C10E14F0(0, &qword_1EA1AB470, (uint64_t (*)(void))sub_1C10E0D18, (uint64_t)&type metadata for FormatVideoNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10E0D18();
  uint64_t v17 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v15;
    LOBYTE(v18) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v18) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v18) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v20 = 3;
    sub_1BFE4C610(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v19;
    *(_OWORD *)(v1 + 64) = v18;
    *(_OWORD *)(v1 + 80) = v12;
    char v20 = 4;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 96) = v18;
    LOBYTE(v18) = 5;
    *(void *)(v1 + 104) = sub_1C15206DC();
    char v20 = 6;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 112) = v18;
    LOBYTE(v18) = 7;
    *(unsigned char *)(v1 + 120) = sub_1C15206AC() & 1;
    char v20 = 8;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v13 = BYTE8(v18);
    *(void *)(v1 + 128) = v18;
    *(unsigned char *)(v1 + 136) = v13;
    type metadata accessor for FormatContextLayoutOptions();
    char v20 = 9;
    sub_1BFE4C610(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 144) = v18;
    type metadata accessor for FormatVideoNodeStyle();
    char v20 = 10;
    sub_1BFE4C610(&qword_1EB866B18, 255, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 152) = v18;
    sub_1C10E14F0(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v20 = 11;
    sub_1C10E1558(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v16);
    *(void *)(v1 + 160) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C10E14F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C10E1558(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C10E14F0(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10E15FC(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C610(&qword_1EA1AB478, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatVideoNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C10E1668(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C610(&qword_1EA1A9350, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
}

uint64_t sub_1C10E16B0(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C610(&qword_1EA1A93A8, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
}

uint64_t sub_1C10E16F8(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C610(&qword_1EA1AB480, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
}

uint64_t sub_1C10E1740@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatVideoNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C10E1798(void *a1)
{
  return FormatVideoNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C10E17BC(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C610(&qword_1EA1A93F8, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatVideoNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVideoNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatVideoNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for FormatVideoNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10E1974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatVideoNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C10E19B0()
{
  unint64_t result = qword_1EA1AB488;
  if (!qword_1EA1AB488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB488);
  }
  return result;
}

unint64_t sub_1C10E1A08()
{
  unint64_t result = qword_1EA1AB490;
  if (!qword_1EA1AB490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB490);
  }
  return result;
}

unint64_t sub_1C10E1A60()
{
  unint64_t result = qword_1EA1AB498;
  if (!qword_1EA1AB498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB498);
  }
  return result;
}

unint64_t UIAccessibilityContrast.isDarkerSystemColorsEnabled.getter(unint64_t result)
{
  if (result >= 2) {
    return UIAccessibilityDarkerSystemColorsEnabled();
  }
  return result;
}

uint64_t UIAccessibilityContrast.description.getter(uint64_t a1)
{
  uint64_t v1 = 1751607656;
  uint64_t v2 = 0x6E776F6E6B6E75;
  if (!a1) {
    uint64_t v2 = 0x6C616D726F6ELL;
  }
  if (a1 != 1) {
    uint64_t v1 = v2;
  }
  if (a1 == -1) {
    return 0x6669636570736E75;
  }
  else {
    return v1;
  }
}

uint64_t sub_1C10E1B54()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 1751607656;
  uint64_t v3 = 0x6E776F6E6B6E75;
  if (!*v0) {
    uint64_t v3 = 0x6C616D726F6ELL;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1 == -1) {
    return 0x6669636570736E75;
  }
  else {
    return v2;
  }
}

uint64_t sub_1C10E1BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C10E5CD8(a1, a2, (uint64_t)v5, (uint64_t (*)(uint64_t, long long *))sub_1C01B7AEC);
  sub_1C0167828(a2);
  return v3;
}

uint64_t static FormatColor.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 60)
  {
    case 1uLL:
      if (v3 >> 60 != 1) {
        goto LABEL_56;
      }
      char v6 = *(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v9 = *(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v10 = *(unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      long long v12 = (uint64_t (*)(void))FormatSystemColor.rawValue.getter;
      goto LABEL_14;
    case 2uLL:
      if (v3 >> 60 != 2) {
        goto LABEL_56;
      }
      char v6 = *(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v9 = *(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v10 = *(unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      long long v12 = FormatFixedColor.rawValue.getter;
LABEL_14:
      char v13 = sub_1C10E59F4(v11, v7, v6, v10, v8, v9, v12);
      goto LABEL_32;
    case 3uLL:
      if (v3 >> 60 != 3) {
        goto LABEL_56;
      }
      uint64_t v15 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v16 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = *(void *)(v16 + 24);
      *(void *)&long long v79 = v15;
      *((void *)&v79 + 1) = v14;
      *(void *)&long long v75 = v17;
      *((void *)&v75 + 1) = v18;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (static FormatColor.== infix(_:_:)(&v79, &v75))
      {
        char v19 = static FormatColor.== infix(_:_:)((char *)&v79 + 8, (char *)&v75 + 8);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_21;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_50;
    case 4uLL:
      if (v3 >> 60 != 4) {
        goto LABEL_56;
      }
      uint64_t v20 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v22 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v23 = *(void *)(v21 + 24);
      *(void *)&long long v79 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)&long long v75 = v22;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatColor.== infix(_:_:)(&v79, &v75) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      char v19 = sub_1C00E5A8C(v20, v23);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_21:
      swift_release();
      if ((v19 & 1) == 0) {
        goto LABEL_56;
      }
      goto LABEL_63;
    case 5uLL:
      if (v3 >> 60 != 5) {
        goto LABEL_56;
      }
      uint64_t v24 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v25 = v3 & 0xFFFFFFFFFFFFFFFLL;
      if (*(double *)(v24 + 16) != *(double *)(v25 + 16)) {
        goto LABEL_56;
      }
      if (*(unsigned char *)(v24 + 32))
      {
        if (*(unsigned char *)(v25 + 32)) {
          goto LABEL_63;
        }
        goto LABEL_56;
      }
      if (*(double *)(v24 + 24) == *(double *)(v25 + 24)) {
        char v69 = *(unsigned char *)(v25 + 32);
      }
      else {
        char v69 = 1;
      }
      if (v69) {
        goto LABEL_56;
      }
      goto LABEL_63;
    case 6uLL:
      if (v3 >> 60 != 6) {
        goto LABEL_56;
      }
      uint64_t v26 = v2 & 0xFFFFFFFFFFFFFFFLL;
      char v27 = *(unsigned char *)(v26 + 48);
      uint64_t v28 = *(void *)(v26 + 40);
      uint64_t v29 = *(void *)(v26 + 32);
      uint64_t v30 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v31 = *(void *)(v30 + 32);
      uint64_t v32 = *(void *)(v30 + 40);
      char v33 = *(unsigned char *)(v30 + 48);
      long long v79 = *(_OWORD *)(v26 + 16);
      uint64_t v80 = v29;
      uint64_t v81 = v28;
      LOBYTE(v82) = v27;
      long long v75 = *(_OWORD *)(v30 + 16);
      uint64_t v76 = v31;
      uint64_t v77 = v32;
      LOBYTE(v78) = v33;
      char v13 = _s8NewsFeed15FormatRGBAColorV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v75);
      return v13 & 1;
    case 7uLL:
      if (v3 >> 60 != 7) {
        goto LABEL_56;
      }
      uint64_t v34 = v2 & 0xFFFFFFFFFFFFFFFLL;
      char v35 = *(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v36 = *(void *)(v34 + 32);
      uint64_t v37 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v38 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      char v39 = *(unsigned char *)(v37 + 40);
      long long v79 = *(_OWORD *)(v34 + 16);
      uint64_t v80 = v36;
      LOBYTE(v81) = v35;
      long long v75 = *(_OWORD *)(v37 + 16);
      uint64_t v76 = v38;
      LOBYTE(v77) = v39;
      swift_retain();
      swift_retain();
      char v13 = _s8NewsFeed18FormatColorBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v75);
LABEL_32:
      swift_release();
      swift_release();
      return v13 & 1;
    case 8uLL:
      if (v3 >> 60 != 8) {
        goto LABEL_56;
      }
      uint64_t v40 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v41 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v42 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v43 = *(void *)(v41 + 24);
      *(void *)&long long v79 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *((void *)&v79 + 1) = v40;
      *(void *)&long long v75 = v42;
      *((void *)&v75 + 1) = v43;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatColor.== infix(_:_:)(&v79, &v75) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v44 = sub_1C00F5388(v40, v43);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (v44) {
        goto LABEL_63;
      }
      goto LABEL_56;
    case 9uLL:
      if (v3 >> 60 != 9) {
        goto LABEL_56;
      }
      uint64_t v45 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v46 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      char v47 = *(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v48 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v50 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      char v51 = *(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v73 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v74 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      *(void *)&long long v79 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *((void *)&v79 + 1) = v45;
      uint64_t v80 = v46;
      LOBYTE(v81) = v47;
      uint64_t v82 = v73;
      *(void *)&long long v75 = v48;
      *((void *)&v75 + 1) = v49;
      uint64_t v76 = v50;
      LOBYTE(v77) = v51;
      uint64_t v78 = v74;
      swift_retain();
      swift_retain();
      uint64_t v70 = v79;
      uint64_t v71 = v46;
      uint64_t v52 = v46;
      uint64_t v53 = v48;
      sub_1BFF67F78(v79, v45, v52, v47);
      swift_retain();
      sub_1BFF67F78(v48, v49, v50, v51);
      swift_retain();
      if (!_s8NewsFeed18FormatColorBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v75))
      {
        sub_1BFF05CCC(v48, v49, v50, v51);
        swift_release();
        sub_1BFF05CCC(v70, v45, v71, v47);
        swift_release();
        swift_release();
        goto LABEL_55;
      }
      char v54 = static FormatColor.== infix(_:_:)(&v82, &v78);
      sub_1BFF05CCC(v53, v49, v50, v51);
      swift_release();
      sub_1BFF05CCC(v70, v45, v71, v47);
      swift_release();
      swift_release();
      swift_release();
      if (v54) {
        goto LABEL_63;
      }
      goto LABEL_56;
    case 0xAuLL:
      if (v3 >> 60 != 10) {
        goto LABEL_56;
      }
      uint64_t v55 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v56 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v57 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v58 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v59 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v72 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      LOBYTE(v59) = sub_1C10E581C(v57, v55, v56, v58, v72, v59);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return v59 & 1;
    case 0xBuLL:
      if (v3 >> 60 != 11) {
        goto LABEL_56;
      }
      uint64_t v60 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v62 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v61 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v63 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v64 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v65 = *(void *)(v63 + 24);
      uint64_t v66 = *(void *)(v63 + 32);
      *(void *)&long long v79 = *(void *)(v60 + 16);
      *((void *)&v79 + 1) = v62;
      uint64_t v80 = v61;
      *(void *)&long long v75 = v64;
      *((void *)&v75 + 1) = v65;
      uint64_t v76 = v66;
      v84[0] = v79;
      v84[1] = v62;
      v83[0] = v64;
      v83[1] = v65;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatColor.== infix(_:_:)(v84, v83) & 1) == 0
        || (swift_bridgeObjectRetain(),
            swift_bridgeObjectRetain(),
            char v67 = sub_1C00F5388(v62, v65),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            (v67 & 1) == 0))
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_50:
        swift_release();
LABEL_55:
        swift_release();
        goto LABEL_56;
      }
      char v68 = static FormatColor.== infix(_:_:)(&v80, &v76);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v68 & 1) == 0)
      {
LABEL_56:
        char v13 = 0;
        return v13 & 1;
      }
LABEL_63:
      char v13 = 1;
      return v13 & 1;
    default:
      if (v3 >> 60) {
        goto LABEL_56;
      }
      if (*(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24)) {
        goto LABEL_63;
      }
      return sub_1C1520A9C();
  }
}

void *sub_1C10E25E4(uint64_t a1, unint64_t *a2)
{
  sub_1C10E5C2C(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v285 - v5;
  unint64_t v7 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
  {
    switch(v7 >> 60)
    {
      case 1uLL:
        uint64_t v27 = v7 & 0xFFFFFFFFFFFFFFFLL;
        *(void *)&long long v314 = *(void *)(v27 + 24);
        LODWORD(v313) = *(unsigned __int8 *)(v27 + 32);
        unsigned __int8 v28 = *(unsigned char *)(v27 + 16);
        sub_1C01B2D70();
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        v312 = (void *)v29;
        uint64_t v30 = *(void *)(*(void *)(v29 - 8) + 72);
        unint64_t v31 = (*(unsigned __int8 *)(*(void *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v29 - 8) + 80);
        uint64_t v32 = 2 * v30;
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1C152C7F0;
        uint64_t v34 = (void *)(v33 + v31);
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6D6574737953, 0xE600000000000000, v34);
        uint64_t v35 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v36 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
        v36(v34, 0, 1, v35);
        uint64_t v37 = (void *)((char *)v34 + v30);
        sub_1C0433CD8(1701667150, 0xE400000000000000, v28, v37);
        goto LABEL_10;
      case 2uLL:
        uint64_t v38 = v7 & 0xFFFFFFFFFFFFFFFLL;
        *(void *)&long long v314 = *(void *)(v38 + 24);
        LODWORD(v313) = *(unsigned __int8 *)(v38 + 32);
        unsigned __int8 v39 = *(unsigned char *)(v38 + 16);
        sub_1C01B2D70();
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        v312 = (void *)v40;
        uint64_t v41 = *(void *)(*(void *)(v40 - 8) + 72);
        unint64_t v42 = (*(unsigned __int8 *)(*(void *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v40 - 8) + 80);
        uint64_t v32 = 2 * v41;
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1C152C7F0;
        uint64_t v34 = (void *)(v33 + v42);
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6465786946, 0xE500000000000000, v34);
        uint64_t v35 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v36 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
        v36(v34, 0, 1, v35);
        uint64_t v37 = (void *)((char *)v34 + v41);
        sub_1C0434008(1701667150, 0xE400000000000000, v39, v37);
        goto LABEL_10;
      case 3uLL:
        uint64_t v43 = v7 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v44 = *(void *)(v43 + 16);
        v308 = *(char **)(v43 + 24);
        unint64_t v45 = (unint64_t)v308;
        sub_1C01B2D70();
        *(void *)&long long v314 = swift_allocObject();
        *(_OWORD *)(v314 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        uint64_t v313 = v46;
        uint64_t v47 = *(void *)(*(void *)(v46 - 8) + 72);
        unint64_t v48 = (*(unsigned __int8 *)(*(void *)(v46 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v46 - 8) + 80);
        *(void *)&long long v309 = 2 * v47;
        uint64_t v49 = swift_allocObject();
        v312 = (void *)v49;
        *(_OWORD *)(v49 + 16) = xmmword_1C152C7F0;
        uint64_t v50 = (char *)(v49 + v48);
        v310 = (void *)(v44 & 0xFFFFFFFFFFFFFFFLL);
        v311 = (char *)(v45 & 0xFFFFFFFFFFFFFFFLL);
        swift_retain();
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x65746E4972657355, 0xED00006563616672, v50);
        uint64_t v51 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v52 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56);
        v52(v50, 0, 1, v51);
        uint64_t v53 = &v50[v47];
        char v54 = &v53[*(int *)(v51 + 24)];
        *(void *)char v54 = v44;
        uint64_t v55 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v56 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56);
        v56(v54, 0, 1, v55);
        *(_OWORD *)uint64_t v53 = xmmword_1C15C7A80;
        *((void *)v53 + 2) = 0;
        *((void *)v53 + 3) = 0;
        uint64_t v57 = &v53[*(int *)(v51 + 28)];
        *(void *)uint64_t v57 = 0;
        *((void *)v57 + 1) = 0;
        v57[16] = -1;
        v52(v53, 0, 1, v51);
        uint64_t v58 = &v50[v309];
        uint64_t v59 = &v50[v309 + *(int *)(v51 + 24)];
        *(void *)uint64_t v59 = v308;
        swift_storeEnumTagMultiPayload();
        v56(v59, 0, 1, v55);
        *(_OWORD *)uint64_t v58 = xmmword_1C15C7A90;
        *((void *)v58 + 2) = 0;
        *((void *)v58 + 3) = 0;
        uint64_t v60 = &v58[*(int *)(v51 + 28)];
        *(void *)uint64_t v60 = 0;
        *((void *)v60 + 1) = 0;
        v60[16] = -1;
        v52(v58, 0, 1, v51);
        swift_retain();
        swift_retain();
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, (uint64_t)v312, &v322);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v61 = v314;
        *(void *)(v314 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v61 + 64) = &off_1F1BDEC90;
        uint64_t v62 = swift_allocObject();
        *(void *)(v61 + 32) = v62;
        long long v63 = v323;
        *(_OWORD *)(v62 + 16) = v322;
        *(_OWORD *)(v62 + 32) = v63;
        *(void *)(v62 + 48) = v324;
        uint64_t v64 = sub_1C131B79C(v61);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_release();
        swift_release();
        return v64;
      case 4uLL:
        uint64_t v66 = v7 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v67 = *(void *)(v66 + 16);
        v310 = *(void **)(v66 + 24);
        sub_1C01B2D70();
        uint64_t v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        uint64_t v313 = v69;
        uint64_t v70 = *(void *)(*(void *)(v69 - 8) + 72);
        unint64_t v71 = (*(unsigned __int8 *)(*(void *)(v69 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v69 - 8) + 80);
        v311 = (char *)(2 * v70);
        uint64_t v72 = swift_allocObject();
        v312 = (void *)v72;
        *(_OWORD *)(v72 + 16) = xmmword_1C152C7F0;
        unint64_t v73 = v72 + v71;
        *(void *)&long long v314 = v67 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x65737365636F7250, 0xE900000000000064, (void *)v73);
        uint64_t v74 = type metadata accessor for FormatInspectionItem(0);
        long long v75 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
        v75((char *)v73, 0, 1, v74);
        uint64_t v76 = v75;
        uint64_t v77 = (char *)(v73 + v70);
        uint64_t v78 = (void *)(v73 + v70 + *(int *)(v74 + 24));
        void *v78 = v67;
        uint64_t v79 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 0, 1, v79);
        *(_OWORD *)uint64_t v77 = xmmword_1C1549090;
        *((void *)v77 + 2) = 0;
        *((void *)v77 + 3) = 0;
        uint64_t v80 = &v77[*(int *)(v74 + 28)];
        *(void *)uint64_t v80 = 0;
        *((void *)v80 + 1) = 0;
        v80[16] = -1;
        v76(v77, 0, 1, v74);
        uint64_t v81 = &v311[v73];
        sub_1C01677F4(a1);
        swift_retain();
        uint64_t v82 = swift_bridgeObjectRetain();
        uint64_t v83 = sub_1C10E1BFC(v82, a1);
        swift_bridgeObjectRelease();
        uint64_t v84 = sub_1C0233FC8(v83);
        swift_bridgeObjectRelease();
        uint64_t v85 = sub_1C131B79C(v84);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x6F737365636F7250, 0xEA00000000007372, (uint64_t)v85, 0, 0, v81);
        v76(v81, 0, 1, v74);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, (uint64_t)v312, &v322);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v68 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v68 + 64) = &off_1F1BDEC90;
        uint64_t v86 = swift_allocObject();
        *(void *)(v68 + 32) = v86;
        long long v87 = v323;
        *(_OWORD *)(v86 + 16) = v322;
        *(_OWORD *)(v86 + 32) = v87;
        *(void *)(v86 + 48) = v324;
        uint64_t v16 = sub_1C131B79C(v68);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        goto LABEL_29;
      case 5uLL:
        uint64_t v88 = v7 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v89 = *(void *)(v88 + 16);
        *(void *)&long long v314 = *(void *)(v88 + 24);
        LODWORD(v313) = *(unsigned __int8 *)(v88 + 32);
        sub_1C01B2D70();
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        v312 = (void *)v90;
        uint64_t v91 = *(void *)(*(void *)(v90 - 8) + 72);
        unint64_t v92 = (*(unsigned __int8 *)(*(void *)(v90 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v90 - 8) + 80);
        uint64_t v32 = 2 * v91;
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1C152C7F0;
        uint64_t v34 = (void *)(v33 + v92);
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6C61637379617247, 0xE900000000000065, v34);
        uint64_t v35 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v36 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
        v36(v34, 0, 1, v35);
        uint64_t v37 = (void *)((char *)v34 + v91);
        sub_1C042F1BC(0x6574696857, 0xE500000000000000, v89, 0, v37);
LABEL_10:
        v36(v37, 0, 1, v35);
        sub_1C042F1BC(0x6168706C41, 0xE500000000000000, v314, v313, (void *)((char *)v34 + v32));
        v36((void *)((char *)v34 + v32), 0, 1, v35);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v33, &v322);
        swift_setDeallocating();
        goto LABEL_12;
      case 6uLL:
        uint64_t v93 = v7 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v94 = *(void *)(v93 + 16);
        id v95 = *(char **)(v93 + 32);
        v310 = *(void **)(v93 + 24);
        v311 = v95;
        *(void *)&long long v314 = *(void *)(v93 + 40);
        LODWORD(v313) = *(unsigned __int8 *)(v93 + 48);
        sub_1C01B2D70();
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        v312 = (void *)v96;
        uint64_t v97 = *(void *)(*(void *)(v96 - 8) + 72);
        unint64_t v98 = (*(unsigned __int8 *)(*(void *)(v96 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v96 - 8) + 80);
        *(void *)&long long v309 = 4 * v97;
        uint64_t v99 = swift_allocObject();
        *(_OWORD *)(v99 + 16) = xmmword_1C152C7E0;
        sub_1C0433600(1701869908, 0xE400000000000000, 1094862674, 0xE400000000000000, (void *)(v99 + v98));
        uint64_t v100 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v101 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56);
        v101(v99 + v98, 0, 1, v100);
        sub_1C042F1BC(6579538, 0xE300000000000000, v94, 0, (void *)(v99 + v98 + v97));
        v101(v99 + v98 + v97, 0, 1, v100);
        sub_1C042F1BC(0x6E65657247, 0xE500000000000000, (uint64_t)v310, 0, (void *)(v99 + v98 + 2 * v97));
        v101(v99 + v98 + 2 * v97, 0, 1, v100);
        sub_1C042F1BC(1702194242, 0xE400000000000000, (uint64_t)v311, 0, (void *)(v99 + v98 + 3 * v97));
        v101(v99 + v98 + 3 * v97, 0, 1, v100);
        uint64_t v102 = (void *)(v99 + v98 + v309);
        sub_1C042F1BC(0x6168706C41, 0xE500000000000000, v314, v313, v102);
        v101((unint64_t)v102, 0, 1, v100);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v99, &v322);
        swift_setDeallocating();
LABEL_12:
        swift_arrayDestroy();
        goto LABEL_13;
      case 7uLL:
        uint64_t v105 = v7 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v106 = *(void *)(v105 + 16);
        uint64_t v107 = *(void *)(v105 + 24);
        uint64_t v108 = *(void *)(v105 + 32);
        int v109 = *(unsigned __int8 *)(v105 + 40);
        sub_1C01B2D70();
        uint64_t v313 = swift_allocObject();
        *(_OWORD *)(v313 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        *(void *)&long long v314 = v110;
        uint64_t v111 = *(void *)(*(void *)(v110 - 8) + 72);
        unint64_t v112 = (*(unsigned __int8 *)(*(void *)(v110 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v110 - 8) + 80);
        uint64_t v113 = swift_allocObject();
        *(_OWORD *)(v113 + 16) = xmmword_1C1527210;
        uint64_t v114 = (void *)(v113 + v112);
        uint64_t v115 = v106;
        uint64_t v116 = v106;
        uint64_t v117 = v108;
        v310 = (void *)v108;
        LODWORD(v309) = v109;
        sub_1BFF67F78(v116, v107, v108, v109);
        sub_1C0433600(1701869908, 0xE400000000000000, 0x676E69646E6942, 0xE700000000000000, v114);
        uint64_t v118 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v119 = *(void *)(v118 - 8);
        v311 = *(char **)(v119 + 56);
        v312 = (void *)(v119 + 56);
        ((void (*)(void *, void, uint64_t, uint64_t))v311)(v114, 0, 1, v118);
        uint64_t v120 = (void *)((char *)v114 + v111);
        uint64_t v121 = v115;
        *(void *)&long long v322 = sub_1C0219CB8(v115, v107, v117, v109);
        sub_1BFED9C20();
        sub_1BFE99E40();
        uint64_t v122 = sub_1C151E55C();
        uint64_t v124 = v123;
        swift_bridgeObjectRelease();
        sub_1BFF05CCC(v121, v107, (uint64_t)v310, v309);
        sub_1C0433600(1752457552, 0xE400000000000000, v122, v124, v120);
        ((void (*)(void *, void, uint64_t, uint64_t))v311)(v120, 0, 1, v118);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v113, &v322);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v125 = v313;
        *(void *)(v313 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v125 + 64) = &off_1F1BDEC90;
        uint64_t v126 = swift_allocObject();
        *(void *)(v125 + 32) = v126;
        long long v127 = v323;
        *(_OWORD *)(v126 + 16) = v322;
        *(_OWORD *)(v126 + 32) = v127;
        *(void *)(v126 + 48) = v324;
        uint64_t v16 = sub_1C131B79C(v125);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        goto LABEL_14;
      case 8uLL:
        id v293 = v6;
        uint64_t v128 = v7 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v129 = *(void **)(v128 + 24);
        *(void *)&long long v314 = *(void *)(v128 + 16);
        uint64_t v130 = v314;
        uint64_t v291 = v129;
        sub_1C01B2D70();
        uint64_t v131 = swift_allocObject();
        *(_OWORD *)(v131 + 16) = xmmword_1C1529AE0;
        uint64_t v290 = v131 + 32;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        uint64_t v133 = v132;
        sub_1C0181BEC(0);
        v306 = v134;
        uint64_t v135 = *(void *)(*((void *)v134 - 1) + 72);
        uint64_t v136 = *(unsigned __int8 *)(*((void *)v134 - 1) + 80);
        uint64_t v137 = (v136 + 32) & ~v136;
        uint64_t v301 = v136 | 7;
        uint64_t v302 = v133;
        uint64_t v138 = swift_allocObject();
        *(_OWORD *)(v138 + 16) = xmmword_1C152C7F0;
        uint64_t v303 = v137;
        uint64_t v292 = v130 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x726F7463656C6553, 0xE800000000000000, (void *)(v138 + v137));
        uint64_t v139 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v140 = *(void *)(v139 - 8);
        double v141 = *(void **)(v140 + 56);
        uint64_t v142 = v140 + 56;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v141)(v138 + v137, 0, 1, v139);
        uint64_t v289 = v138 + v137;
        uint64_t v307 = v135;
        uint64_t v143 = v138 + v137 + v135;
        double v144 = (void *)(v143 + *(int *)(v139 + 24));
        *double v144 = v314;
        uint64_t v145 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v146 = *(void *)(v145 - 8);
        *(void *)&long long v314 = *(void *)(v146 + 56);
        *(void *)&long long v300 = v146 + 56;
        ((void (*)(void *, void, uint64_t, uint64_t))v314)(v144, 0, 1, v145);
        long long v299 = xmmword_1C15C7A70;
        *(_OWORD *)uint64_t v143 = xmmword_1C15C7A70;
        *(void *)(v143 + 16) = 0;
        *(void *)(v143 + 24) = 0;
        uint64_t v147 = v143 + *(int *)(v139 + 28);
        *(void *)uint64_t v147 = 0;
        *(void *)(v147 + 8) = 0;
        *(unsigned char *)(v147 + 16) = -1;
        uint64_t v304 = v142;
        v305 = v141;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v141)(v143, 0, 1, v139);
        double v148 = v291;
        int64_t v149 = v291[2];
        uint64_t v294 = v139;
        if (v149)
        {
          v298 = (char *)v145;
          uint64_t v287 = v138;
          uint64_t v288 = v131;
          uint64_t v317 = MEMORY[0x1E4FBC860];
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v313 = v149;
          sub_1C05F6B44(0, v149, 0);
          uint64_t v286 = 2 * v307;
          uint64_t v150 = v303;
          *(void *)&long long v297 = v303 + 2 * v307;
          uint64_t v151 = v148 + 6;
          long long v296 = xmmword_1C1527210;
          long long v295 = xmmword_1C15A29D0;
          uint64_t v152 = v307;
          uint64_t v153 = v139;
          do
          {
            uint64_t v155 = *(v151 - 2);
            uint64_t v154 = (char *)*(v151 - 1);
            unint64_t v156 = *v151;
            uint64_t v157 = swift_allocObject();
            *(_OWORD *)(v157 + 16) = v296;
            v310 = (void *)v157;
            uint64_t v158 = v157 + v150;
            *(void *)&long long v316 = v155;
            *((void *)&v316 + 1) = v154;
            v308 = (char *)v156;
            sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
            swift_bridgeObjectRetain_n();
            *(void *)&long long v309 = v156 & 0xFFFFFFFFFFFFFFFLL;
            swift_retain();
            int v159 = swift_dynamicCast();
            v311 = v154;
            v312 = v151;
            if (v159)
            {
              swift_bridgeObjectRelease();
              uint64_t v160 = (void *)(v158 + *(int *)(v153 + 24));
              *uint64_t v160 = v319;
              uint64_t v161 = v298;
              swift_storeEnumTagMultiPayload();
              ((void (*)(void *, void, uint64_t, char *))v314)(v160, 0, 1, v161);
              *(_OWORD *)uint64_t v158 = v295;
              *(void *)(v158 + 16) = 0;
              *(void *)(v158 + 24) = 0;
              uint64_t v162 = v158 + *(int *)(v153 + 28);
              *(void *)uint64_t v162 = 0;
              *(void *)(v162 + 8) = 0;
              *(unsigned char *)(v162 + 16) = -1;
            }
            else
            {
              *((void *)&v320 + 1) = &type metadata for FormatSelector;
              v321 = (char **)sub_1C04455BC();
              long long v319 = v316;
              sub_1BFC773DC(&v319, (uint64_t)v315);
              uint64_t v163 = __swift_project_boxed_opaque_existential_1(v315, v315[3]);
              uint64_t v164 = *v163;
              uint64_t v165 = v163[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v166 = (uint64_t)v293;
              uint64_t v153 = v294;
              *id v293 = v164;
              *(void *)(v166 + 8) = v165;
              uint64_t v152 = v307;
              uint64_t v161 = v298;
              swift_storeEnumTagMultiPayload();
              ((void (*)(uint64_t, void, uint64_t, char *))v314)(v166, 0, 1, v161);
              *(_OWORD *)uint64_t v158 = v295;
              *(void *)(v158 + 16) = 0;
              *(void *)(v158 + 24) = 0;
              sub_1C025F820(v166, v158 + *(int *)(v153 + 24));
              uint64_t v167 = v158 + *(int *)(v153 + 28);
              *(void *)uint64_t v167 = 0;
              *(void *)(v167 + 8) = 0;
              *(unsigned char *)(v167 + 16) = -1;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v315);
            }
            swift_bridgeObjectRelease();
            uint64_t v168 = v305;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v305)(v158, 0, 1, v153);
            uint64_t v169 = v158 + v152;
            uint64_t v170 = (void *)(v158 + v152 + *(int *)(v153 + 24));
            *uint64_t v170 = v308;
            swift_storeEnumTagMultiPayload();
            ((void (*)(void *, void, uint64_t, char *))v314)(v170, 0, 1, v161);
            *(_OWORD *)uint64_t v169 = v299;
            *(void *)(v169 + 16) = 0;
            *(void *)(v169 + 24) = 0;
            uint64_t v171 = v169 + *(int *)(v153 + 28);
            *(void *)uint64_t v171 = 0;
            *(void *)(v171 + 8) = 0;
            *(unsigned char *)(v171 + 16) = -1;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v169, 0, 1, v153);
            swift_retain();
            sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, (uint64_t)v310, &v322);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v172 = v317;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C05F6B44(0, *(void *)(v172 + 16) + 1, 1);
              uint64_t v172 = v317;
            }
            uint64_t v173 = (uint64_t)v312;
            unint64_t v175 = *(void *)(v172 + 16);
            unint64_t v174 = *(void *)(v172 + 24);
            uint64_t v152 = v307;
            if (v175 >= v174 >> 1)
            {
              sub_1C05F6B44(v174 > 1, v175 + 1, 1);
              uint64_t v172 = v317;
            }
            uint64_t v151 = (unint64_t *)(v173 + 24);
            *((void *)&v320 + 1) = &type metadata for FormatInspectionGroup;
            v321 = &off_1F1BDEC90;
            uint64_t v176 = swift_allocObject();
            *(void *)&long long v319 = v176;
            long long v177 = v323;
            *(_OWORD *)(v176 + 16) = v322;
            *(_OWORD *)(v176 + 32) = v177;
            *(void *)(v176 + 48) = v324;
            *(void *)(v172 + 16) = v175 + 1;
            sub_1BFC773DC(&v319, v172 + 40 * v175 + 32);
            --v313;
            uint64_t v150 = v303;
          }
          while (v313);
          swift_bridgeObjectRelease();
          uint64_t v138 = v287;
          uint64_t v131 = v288;
          uint64_t v273 = v286;
        }
        else
        {
          uint64_t v273 = 2 * v307;
          swift_retain();
          uint64_t v172 = MEMORY[0x1E4FBC860];
        }
        uint64_t v275 = (void *)(v289 + v273);
        uint64_t v276 = sub_1C0233FC8(v172);
        swift_bridgeObjectRelease();
        uint64_t v277 = sub_1C131B79C(v276);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v277, 0, 0, v275);
        ((void (*)(void *, void, uint64_t, uint64_t))v305)(v275, 0, 1, v294);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v138, &v319);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v131 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v131 + 64) = &off_1F1BDEC90;
        uint64_t v278 = swift_allocObject();
        *(void *)(v131 + 32) = v278;
        long long v279 = v320;
        *(_OWORD *)(v278 + 16) = v319;
        *(_OWORD *)(v278 + 32) = v279;
        *(void *)(v278 + 48) = v321;
        uint64_t v16 = sub_1C131B79C(v131);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_bridgeObjectRelease();
        goto LABEL_42;
      case 9uLL:
        uint64_t v178 = v7 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v179 = *(void *)(v178 + 24);
        *(void *)&long long v314 = *(void *)(v178 + 16);
        uint64_t v180 = *(char **)(v178 + 32);
        uint64_t v304 = *(void *)(v178 + 48);
        uint64_t v181 = v304;
        char v182 = *(unsigned char *)(v178 + 40);
        sub_1C01B2D70();
        v312 = (void *)swift_allocObject();
        long long v309 = xmmword_1C1529AE0;
        *((_OWORD *)v312 + 1) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        uint64_t v313 = v183;
        uint64_t v184 = *(void *)(*(void *)(v183 - 8) + 72);
        unint64_t v185 = (*(unsigned __int8 *)(*(void *)(v183 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v183 - 8) + 80);
        uint64_t v186 = swift_allocObject();
        *(_OWORD *)(v186 + 16) = xmmword_1C1527210;
        uint64_t v187 = (void *)(v186 + v185);
        v310 = v187;
        uint64_t v188 = v314;
        sub_1BFF67F78(v314, v179, (uint64_t)v180, v182);
        uint64_t v303 = v181 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x676E69646E6942, 0xE700000000000000, v187);
        uint64_t v307 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v189 = *(void *)(v307 - 8);
        v306 = *(void (**)(void *, void, uint64_t, uint64_t))(v189 + 56);
        v308 = (char *)(v189 + 56);
        v306(v187, 0, 1, v307);
        v305 = (void *)((char *)v187 + v184);
        sub_1BFF67F78(v188, v179, (uint64_t)v180, v182);
        uint64_t v190 = v188;
        v311 = v180;
        *(void *)&long long v322 = sub_1C0219CB8(v188, v179, (uint64_t)v180, v182);
        sub_1BFED9C20();
        sub_1BFE99E40();
        uint64_t v191 = sub_1C151E55C();
        uint64_t v302 = v192;
        swift_bridgeObjectRelease();
        uint64_t v193 = v190;
        uint64_t v194 = v179;
        sub_1BFF05CCC(v193, v179, (uint64_t)v180, v182);
        sub_1BFF198EC(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
        uint64_t v195 = swift_allocObject();
        *(_OWORD *)(v195 + 16) = v309;
        *(void *)&long long v322 = v304;
        swift_retain();
        uint64_t v196 = sub_1C10E25E4(a1, &v322);
        swift_release();
        *(void *)(v195 + 56) = &type metadata for FormatInspection;
        *(void *)(v195 + 64) = &off_1F1C29D30;
        *(void *)(v195 + 32) = v196;
        uint64_t v197 = sub_1C0233FC8(v195);
        swift_setDeallocating();
        sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v198 = sub_1C131B79C(v197);
        swift_bridgeObjectRelease();
        uint64_t v199 = v305;
        sub_1C042F458(0x676E69646E6942, 0xE700000000000000, (uint64_t)v198, v191, v302, v305);
        v306(v199, 0, 1, v307);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v186, &v322);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v200 = (uint64_t)v312;
        v312[7] = &type metadata for FormatInspectionGroup;
        *(void *)(v200 + 64) = &off_1F1BDEC90;
        uint64_t v201 = swift_allocObject();
        *(void *)(v200 + 32) = v201;
        long long v202 = v323;
        *(_OWORD *)(v201 + 16) = v322;
        *(_OWORD *)(v201 + 32) = v202;
        *(void *)(v201 + 48) = v324;
        uint64_t v16 = sub_1C131B79C(v200);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1BFF05CCC(v314, v194, (uint64_t)v311, v182);
        goto LABEL_42;
      case 0xAuLL:
        char v203 = (void *)(v7 & 0xFFFFFFFFFFFFFFFLL);
        uint64_t v204 = v203[2];
        uint64_t v313 = v203[3];
        uint64_t v205 = v203[4];
        sub_1C01B2D70();
        *(void *)&long long v309 = swift_allocObject();
        *(_OWORD *)(v309 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        v311 = v206;
        uint64_t v207 = *(void *)(*((void *)v206 - 1) + 72);
        unint64_t v208 = (*(unsigned __int8 *)(*((void *)v206 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v206 - 1) + 80);
        v308 = (char *)(2 * v207);
        uint64_t v209 = swift_allocObject();
        v310 = (void *)v209;
        *(_OWORD *)(v209 + 16) = xmmword_1C152C7F0;
        unint64_t v210 = v209 + v208;
        *(void *)&long long v314 = v204 & 0xFFFFFFFFFFFFFFFLL;
        v312 = (void *)(v205 & 0xFFFFFFFFFFFFFFFLL);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x65737365636F7250, 0xE900000000000064, (void *)v210);
        uint64_t v211 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v212 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v211 - 8) + 56);
        v212(v210, 0, 1, v211);
        uint64_t v213 = (char *)(v210 + v207);
        char v214 = (void *)(v210 + v207 + *(int *)(v211 + 24));
        *char v214 = v204;
        uint64_t v215 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v215 - 8) + 56))(v214, 0, 1, v215);
        *(_OWORD *)uint64_t v213 = xmmword_1C1549090;
        *((void *)v213 + 2) = 0;
        *((void *)v213 + 3) = 0;
        uint64_t v216 = &v213[*(int *)(v211 + 28)];
        *(void *)uint64_t v216 = 0;
        *((void *)v216 + 1) = 0;
        v216[16] = -1;
        v212((unint64_t)v213, 0, 1, v211);
        char v217 = &v308[v210];
        sub_1C01677F4(a1);
        swift_retain();
        uint64_t v218 = swift_bridgeObjectRetain();
        uint64_t v219 = sub_1C10E5CD8(v218, a1, (uint64_t)&v318, (uint64_t (*)(uint64_t, long long *))sub_1C01B74A0);
        sub_1C0167828(a1);
        swift_bridgeObjectRelease();
        uint64_t v220 = sub_1C0233FC8(v219);
        swift_bridgeObjectRelease();
        uint64_t v221 = sub_1C131B79C(v220);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x6F737365636F7250, 0xEA00000000007372, (uint64_t)v221, 0, 0, v217);
        v212((unint64_t)v217, 0, 1, v211);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, (uint64_t)v310, &v322);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v222 = v309;
        *(void *)(v309 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v222 + 64) = &off_1F1BDEC90;
        uint64_t v223 = swift_allocObject();
        *(void *)(v222 + 32) = v223;
        long long v224 = v323;
        *(_OWORD *)(v223 + 16) = v322;
        *(_OWORD *)(v223 + 32) = v224;
        *(void *)(v223 + 48) = v324;
        uint64_t v16 = sub_1C131B79C(v222);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_release();
LABEL_29:
        swift_bridgeObjectRelease();
        goto LABEL_42;
      case 0xBuLL:
        uint64_t v225 = (void *)(v7 & 0xFFFFFFFFFFFFFFFLL);
        uint64_t v226 = v225[2];
        *(void *)&long long v295 = v225[3];
        uint64_t v227 = v225[4];
        sub_1C01B2D70();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        uint64_t v294 = inited + 32;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        uint64_t v230 = v229;
        sub_1C0181BEC(0);
        *(void *)&long long v309 = v231;
        uint64_t v232 = *(void *)(*(void *)(v231 - 8) + 72);
        uint64_t v233 = *(unsigned __int8 *)(*(void *)(v231 - 8) + 80);
        uint64_t v234 = (void *)((v233 + 32) & ~v233);
        uint64_t v303 = v233 | 7;
        uint64_t v304 = v230;
        uint64_t v235 = swift_allocObject();
        *(_OWORD *)(v235 + 16) = xmmword_1C152C7F0;
        uint64_t v292 = v235;
        v305 = v234;
        uint64_t v236 = (void *)((char *)v234 + v235);
        uint64_t v237 = v226;
        uint64_t v238 = v226 & 0xFFFFFFFFFFFFFFFLL;
        id v293 = (void *)(v227 & 0xFFFFFFFFFFFFFFFLL);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x726F7463656C6553, 0xE800000000000000, v236);
        uint64_t v239 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v240 = *(void *)(v239 - 8);
        uint64_t v241 = *(char **)(v240 + 56);
        unsigned __int8 v242 = (void (*)(void *, void, uint64_t, uint64_t))(v240 + 56);
        ((void (*)(void *, void, uint64_t, uint64_t))v241)(v236, 0, 1, v239);
        uint64_t v291 = v236;
        uint64_t v243 = (char *)v236 + v232;
        uint64_t v244 = (void *)((char *)v236 + v232 + *(int *)(v239 + 24));
        *uint64_t v244 = v237;
        uint64_t v245 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v246 = *(void *)(v245 - 8);
        uint64_t v247 = *(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56);
        uint64_t v301 = v246 + 56;
        uint64_t v302 = v245;
        *(void *)&long long v314 = v247;
        v247(v244, 0, 1, v245);
        long long v300 = xmmword_1C15C7A70;
        *(_OWORD *)uint64_t v243 = xmmword_1C15C7A70;
        *((void *)v243 + 2) = 0;
        *((void *)v243 + 3) = 0;
        uint64_t v248 = &v243[*(int *)(v239 + 28)];
        *(void *)uint64_t v248 = 0;
        *((void *)v248 + 1) = 0;
        v248[16] = -1;
        uint64_t v307 = v239;
        v308 = v241;
        uint64_t v249 = v239;
        uint64_t v250 = v295;
        v306 = v242;
        ((void (*)(char *, void, uint64_t, uint64_t))v241)(v243, 0, 1, v249);
        int64_t v251 = *(void *)(v250 + 16);
        if (v251)
        {
          uint64_t v290 = inited;
          v315[0] = MEMORY[0x1E4FBC860];
          uint64_t v289 = v238;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C05F6B44(0, v251, 0);
          uint64_t v288 = 2 * v232;
          uint64_t v252 = v305;
          v298 = (char *)v305 + 2 * v232;
          *(void *)&long long v299 = v232;
          uint64_t v253 = (void *)(v250 + 48);
          long long v297 = xmmword_1C1527210;
          long long v296 = xmmword_1C15A29D0;
          uint64_t v254 = v307;
          do
          {
            v312 = v253;
            uint64_t v313 = v251;
            uint64_t v256 = *(v253 - 2);
            v310 = (void *)*(v253 - 1);
            uint64_t v255 = (uint64_t)v310;
            uint64_t v257 = *v253;
            uint64_t v258 = (char *)swift_allocObject();
            v311 = v258;
            *((_OWORD *)v258 + 1) = v297;
            int64_t v259 = (char *)v252 + (void)v258;
            uint64_t v260 = (void *)((char *)v252 + (void)v258 + *(int *)(v254 + 24));
            *uint64_t v260 = v256;
            v260[1] = v255;
            uint64_t v261 = v302;
            swift_storeEnumTagMultiPayload();
            ((void (*)(void *, void, uint64_t, uint64_t))v314)(v260, 0, 1, v261);
            *(_OWORD *)int64_t v259 = v296;
            *((void *)v259 + 2) = 0;
            *((void *)v259 + 3) = 0;
            v262 = &v259[*(int *)(v254 + 28)];
            *(void *)v262 = 0;
            *((void *)v262 + 1) = 0;
            v262[16] = -1;
            uint64_t v263 = (void (*)(char *, void, uint64_t, uint64_t))v308;
            ((void (*)(char *, void, uint64_t, uint64_t))v308)(v259, 0, 1, v254);
            v264 = &v259[v299];
            uint64_t v265 = &v259[v299 + *(int *)(v254 + 24)];
            *(void *)uint64_t v265 = v257;
            swift_storeEnumTagMultiPayload();
            ((void (*)(char *, void, uint64_t, uint64_t))v314)(v265, 0, 1, v261);
            *(_OWORD *)v264 = v300;
            *((void *)v264 + 2) = 0;
            *((void *)v264 + 3) = 0;
            v266 = &v264[*(int *)(v254 + 28)];
            *(void *)v266 = 0;
            *((void *)v266 + 1) = 0;
            v266[16] = -1;
            v263(v264, 0, 1, v254);
            swift_retain_n();
            swift_bridgeObjectRetain_n();
            sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, (uint64_t)v311, &v322);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v267 = v315[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C05F6B44(0, *(void *)(v267 + 16) + 1, 1);
              uint64_t v267 = v315[0];
            }
            unint64_t v269 = *(void *)(v267 + 16);
            unint64_t v268 = *(void *)(v267 + 24);
            uint64_t v252 = v305;
            uint64_t v270 = (uint64_t)v312;
            if (v269 >= v268 >> 1)
            {
              sub_1C05F6B44(v268 > 1, v269 + 1, 1);
              uint64_t v267 = v315[0];
            }
            uint64_t v253 = (void *)(v270 + 24);
            *((void *)&v320 + 1) = &type metadata for FormatInspectionGroup;
            v321 = &off_1F1BDEC90;
            uint64_t v271 = swift_allocObject();
            *(void *)&long long v319 = v271;
            long long v272 = v323;
            *(_OWORD *)(v271 + 16) = v322;
            *(_OWORD *)(v271 + 32) = v272;
            *(void *)(v271 + 48) = v324;
            *(void *)(v267 + 16) = v269 + 1;
            sub_1BFC773DC(&v319, v267 + 40 * v269 + 32);
            int64_t v251 = v313 - 1;
          }
          while (v313 != 1);
          swift_bridgeObjectRelease();
          uint64_t inited = v290;
          uint64_t v274 = v288;
        }
        else
        {
          uint64_t v274 = 2 * v232;
          swift_retain();
          uint64_t v267 = MEMORY[0x1E4FBC860];
        }
        uint64_t v280 = (void *)((char *)v291 + v274);
        uint64_t v281 = sub_1C0233FC8(v267);
        swift_bridgeObjectRelease();
        uint64_t v282 = sub_1C131B79C(v281);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v282, 0, 0, v280);
        ((void (*)(void *, void, uint64_t, uint64_t))v308)(v280, 0, 1, v307);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v292, &v319);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v283 = swift_allocObject();
        *(void *)(inited + 32) = v283;
        *(void *)(v283 + 48) = v321;
        long long v284 = v320;
        *(_OWORD *)(v283 + 16) = v319;
        *(_OWORD *)(v283 + 32) = v284;
        uint64_t v16 = sub_1C131B79C(inited);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_42:
        swift_release();
        break;
      default:
        uint64_t v17 = *(void *)(v7 + 24);
        *(void *)&long long v314 = *(void *)(v7 + 16);
        sub_1C01B2D70();
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
        sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        uint64_t v20 = *(void *)(*(void *)(v19 - 8) + 72);
        unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1C1527210;
        uint64_t v23 = (void *)(v22 + v21);
        swift_bridgeObjectRetain();
        sub_1C0433600(1701869908, 0xE400000000000000, 7890248, 0xE300000000000000, v23);
        uint64_t v24 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v25 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
        v25(v23, 0, 1, v24);
        uint64_t v26 = (void *)((char *)v23 + v20);
        sub_1C0433600(7890248, 0xE300000000000000, v314, v17, v26);
        v25(v26, 0, 1, v24);
        sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v22, &v322);
        swift_setDeallocating();
        swift_arrayDestroy();
LABEL_13:
        swift_deallocClassInstance();
        *(void *)(v18 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v18 + 64) = &off_1F1BDEC90;
        uint64_t v103 = swift_allocObject();
        *(void *)(v18 + 32) = v103;
        long long v104 = v323;
        *(_OWORD *)(v103 + 16) = v322;
        *(_OWORD *)(v103 + 32) = v104;
        *(void *)(v103 + 48) = v324;
        uint64_t v16 = sub_1C131B79C(v18);
        swift_setDeallocating();
        sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
LABEL_14:
        swift_deallocClassInstance();
        break;
    }
  }
  else
  {
    sub_1C01B2D70();
    uint64_t v8 = swift_initStackObject();
    long long v314 = xmmword_1C1529AE0;
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    sub_1C10E5C2C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    sub_1C0181BEC(0);
    unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = v314;
    long long v12 = (void *)(v11 + v10);
    sub_1C0433600(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v12);
    uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
    sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v11, &v322);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v8 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v8 + 64) = &off_1F1BDEC90;
    uint64_t v14 = swift_allocObject();
    *(void *)(v8 + 32) = v14;
    *(void *)(v14 + 48) = v324;
    long long v15 = v323;
    *(_OWORD *)(v14 + 16) = v322;
    *(_OWORD *)(v14 + 32) = v15;
    uint64_t v16 = sub_1C131B79C(v8);
    swift_setDeallocating();
    sub_1BFF198EC(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
  }
  return v16;
}

uint64_t sub_1C10E55EC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 3uLL:
      uint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v6 = *(void *)(v5 + 16);
      uint64_t v7 = *(void *)(v5 + 24);
      uint64_t v8 = swift_allocObject();
      v28[1] = v6;
      void v28[2] = v7;
      swift_retain();
      uint64_t v9 = swift_retain();
      unint64_t v10 = sub_1C10E55EC(v28, v9);
      sub_1C10E55EC(&v27, v10);
      uint64_t v11 = v27;
      *(void *)(v8 + 16) = v28[0];
      *(void *)(v8 + 24) = v11;
      swift_release();
      uint64_t result = swift_release();
      *a1 = v8 | 0x3000000000000000;
      break;
    case 9uLL:
      uint64_t v12 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v12 + 24);
      uint64_t v15 = *(void *)(v12 + 32);
      char v16 = *(unsigned char *)(v12 + 40);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v13;
      *(void *)(v17 + 24) = v14;
      *(void *)(v17 + 32) = v15;
      *(unsigned char *)(v17 + 40) = v16;
      *a1 = v17 | 0x7000000000000000;
      uint64_t result = sub_1BFF67F78(v13, v14, v15, v16);
      break;
    case 0xAuLL:
      uint64_t v18 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v20 = *(void *)(v18 + 16);
      uint64_t v19 = *(void *)(v18 + 24);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      *(void *)(v21 + 24) = v19;
      unint64_t v22 = v21 | 0x4000000000000000;
      goto LABEL_11;
    case 0xBuLL:
      uint64_t v23 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v25 = *(void *)(v23 + 16);
      uint64_t v24 = *(void *)(v23 + 24);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      *(void *)(v26 + 24) = v24;
      unint64_t v22 = v26 | 0x8000000000000000;
LABEL_11:
      *a1 = v22;
      swift_retain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      *a1 = v3;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t sub_1C10E581C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v12[1] = a1;
  long long v12[2] = a2;
  uint64_t v13 = a3;
  v11[1] = a4;
  v11[2] = a5;
  v12[0] = a6;
  uint64_t v10 = a4;
  v11[0] = a1;
  if (static FormatColor.== infix(_:_:)(v11, &v10) & 1) != 0 && (sub_1C00E5A8C(a2, a5)) {
    char v8 = static FormatColor.== infix(_:_:)(&v13, v12);
  }
  else {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t static FormatColor.system(_:alpha:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  char v7 = *a1;
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v7;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = a3 & 1;
  *a4 = result | 0x1000000000000000;
  return result;
}

uint64_t static FormatColor.fixed(_:alpha:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  char v7 = *a1;
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v7;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = a3 & 1;
  *a4 = result | 0x2000000000000000;
  return result;
}

id sub_1C10E595C(uint64_t a1)
{
  Class v2 = FormatColor.color.getter(a1);
  id v3 = objc_msgSend(self, sel_traitCollectionWithUserInterfaceStyle_, a1);
  id v4 = [(objc_class *)v2 resolvedColorWithTraitCollection:v3];

  return v4;
}

BOOL sub_1C10E59F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(void))
{
  uint64_t v12 = a7();
  uint64_t v14 = v13;
  if (v12 == a7() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    if ((a3 & 1) == 0) {
      return (a6 & 1) == 0 && *(double *)&a2 == *(double *)&a5;
    }
  }
  else
  {
    char v17 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v17 & 1) == 0) {
      return result;
    }
    if ((a3 & 1) == 0) {
      return (a6 & 1) == 0 && *(double *)&a2 == *(double *)&a5;
    }
  }
  return (a6 & 1) != 0;
}

uint64_t sub_1C10E5AF0@<X0>(void *a1@<X8>)
{
  return sub_1C10E55EC(a1 + 1);
}

uint64_t sub_1C10E5B44()
{
  return swift_deallocObject();
}

unint64_t sub_1C10E5B54(uint64_t a1)
{
  unint64_t result = sub_1C003F2E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10E5B7C()
{
  unint64_t result = qword_1EB890F38;
  if (!qword_1EB890F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F38);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColor()
{
  return &type metadata for FormatColor;
}

uint64_t sub_1C10E5BEC()
{
  sub_1BFF05CCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

void sub_1C10E5C2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C10E5C90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10E5CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, long long *))
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F6B44(0, v4, 0);
    uint64_t v5 = v18;
    uint64_t v9 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v10 = *v9++;
      *(void *)&long long v15 = v10;
      sub_1BFF65DE8(v10);
      uint64_t v11 = a4(a2, &v15);
      sub_1BFF65E20(v10);
      uint64_t v18 = v5;
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C05F6B44(v12 > 1, v13 + 1, 1);
        uint64_t v5 = v18;
      }
      char v17 = &off_1F1C29D30;
      char v16 = &type metadata for FormatInspection;
      *(void *)&long long v15 = v11;
      *(void *)(v5 + 16) = v13 + 1;
      sub_1BFC773DC(&v15, v5 + 40 * v13 + 32);
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t FeedEngagementBanner.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.debugTitle.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedEngagementBanner.engagementBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedEngagementBanner() + 20);
  uint64_t v4 = sub_1C151959C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedEngagementBanner.traits.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedEngagementBanner();
  *a1 = *(void *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t FeedEngagementBanner.layoutDirection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedEngagementBanner();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t FeedEngagementBanner.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedEngagementBanner() + 32));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BFF7FF04(v4, v5);
}

uint64_t FeedEngagementBanner.init(identifier:engagementBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = qword_1F1B8A1C0;
  uint64_t v9 = (int *)type metadata accessor for FeedEngagementBanner();
  *(void *)((char *)a4 + v9[6]) = v8;
  unint64_t v10 = (char *)a4 + v9[7];
  *(void *)unint64_t v10 = 0;
  v10[8] = 1;
  *(_OWORD *)((char *)a4 + v9[8]) = xmmword_1C158A1F0;
  *a4 = a1;
  a4[1] = a2;
  uint64_t v11 = (char *)a4 + v9[5];
  uint64_t v12 = sub_1C151959C();
  unint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  return v13(v11, a3, v12);
}

uint64_t sub_1C10E605C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(result + 24));
  return result;
}

uint64_t sub_1C10E606C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(result + 28));
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = (_BYTE)v3;
  return result;
}

uint64_t FeedEngagementBanner.cacheIdentifier.getter()
{
  uint64_t v1 = sub_1C15195AC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[1];
  v7[0] = *v0;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  type metadata accessor for FeedEngagementBanner();
  sub_1C151957C();
  sub_1C10E6CAC(&qword_1EB85F330, MEMORY[0x1E4F7EC20]);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7[0];
}

uint64_t FeedEngagementBanner.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10E626C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C10E6CAC(&qword_1EA1AB4B0, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t _s8NewsFeed0B16EngagementBannerV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1C04B5D74((uint64_t)a1, (uint64_t)&v14 - v8);
    sub_1C04B5D74((uint64_t)a2, (uint64_t)v6);
  }
  else
  {
    char v11 = sub_1C1520A9C();
    sub_1C04B5D74((uint64_t)a1, (uint64_t)v9);
    sub_1C04B5D74((uint64_t)a2, (uint64_t)v6);
    char v12 = 0;
    if ((v11 & 1) == 0) {
      goto LABEL_9;
    }
  }
  char v12 = MEMORY[0x1C18C10A0](&v9[*(int *)(v4 + 20)], &v6[*(int *)(v4 + 20)]);
LABEL_9:
  sub_1C10E6CF4((uint64_t)v6);
  sub_1C10E6CF4((uint64_t)v9);
  return v12 & 1;
}

uint64_t sub_1C10E6414(uint64_t a1)
{
  uint64_t result = sub_1C10E6CAC(&qword_1EB85FB10, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C10E646C()
{
  return sub_1C10E6CAC(&qword_1EA1AB4A0, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
}

uint64_t sub_1C10E64B4()
{
  return sub_1C10E6CAC(&qword_1EB85FB10, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
}

uint64_t sub_1C10E64FC()
{
  return sub_1C10E6CAC(&qword_1EA1AB4A8, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedEngagementBanner(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151959C();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v14 = (char *)v4 + v13;
    long long v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = a3[8];
    char v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    unint64_t v19 = v18[1];
    if (v19 >= 0x11)
    {
      *char v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)char v17 = *(_OWORD *)v18;
    }
  }
  return v4;
}

unint64_t destroy for FeedEngagementBanner(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151959C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t result = *(void *)(a1 + *(int *)(a2 + 32) + 8);
  if (result >= 0x11)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for FeedEngagementBanner(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151959C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  char v17 = (void *)((char *)a2 + v15);
  unint64_t v18 = v17[1];
  if (v18 >= 0x11)
  {
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  return a1;
}

void *assignWithCopy for FeedEngagementBanner(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151959C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  unint64_t v17 = *(void *)((char *)a1 + v14 + 8);
  unint64_t v18 = v16[1];
  if (v17 >= 0x11)
  {
    if (v18 >= 0x11)
    {
      *uint64_t v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v15);
    goto LABEL_6;
  }
  if (v18 < 0x11)
  {
LABEL_6:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    return a1;
  }
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for FeedEngagementBanner(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151959C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for FeedEngagementBanner(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151959C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  _OWORD v12[8] = v13[8];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  if (*(void *)((char *)a1 + v14 + 8) >= 0x11uLL)
  {
    unint64_t v17 = v16[1];
    if (v17 >= 0x11)
    {
      *uint64_t v15 = *v16;
      v15[1] = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v15);
  }
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedEngagementBanner(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10E6B40);
}

uint64_t sub_1C10E6B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151959C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeedEngagementBanner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10E6C04);
}

uint64_t sub_1C10E6C04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151959C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C10E6CAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10E6CF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedEngagementBanner();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL FeedPartOfDay.isDay.getter()
{
  return (*v0 & 1) == 0;
}

uint64_t FeedPartOfDay.isNight.getter()
{
  return *v0;
}

uint64_t static FeedPartOfDay.partOfDay(for:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = sub_1C15167DC();
  *a1 = (result & 1) == 0;
  return result;
}

NewsFeed::FeedPartOfDay_optional __swiftcall FeedPartOfDay.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t FeedPartOfDay.rawValue.getter()
{
  if (*v0) {
    return 0x746867696ELL;
  }
  else {
    return 7954788;
  }
}

uint64_t sub_1C10E6E34(char *a1, char *a2)
{
  return sub_1C14927EC(*a1, *a2);
}

unint64_t sub_1C10E6E44()
{
  unint64_t result = qword_1EA1AB4B8;
  if (!qword_1EA1AB4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB4B8);
  }
  return result;
}

uint64_t sub_1C10E6E98()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10E6F10()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10E6F74()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedPartOfDay_optional sub_1C10E6FE8(Swift::String *a1)
{
  return FeedPartOfDay.init(rawValue:)(*a1);
}

void sub_1C10E6FF4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7954788;
  if (*v1) {
    uint64_t v2 = 0x746867696ELL;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C10E7028()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C10E7088()
{
  return sub_1C151EAEC();
}

unsigned char *storeEnumTagSinglePayload for FeedPartOfDay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10E71A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPartOfDay()
{
  return &type metadata for FeedPartOfDay;
}

unint64_t sub_1C10E71DC()
{
  unint64_t result = qword_1EA1AB4C0;
  if (!qword_1EA1AB4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB4C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTestRun(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10E72FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestRun()
{
  return &type metadata for DebugFormatTestRun;
}

unint64_t sub_1C10E7338()
{
  unint64_t result = qword_1EA1AB4C8;
  if (!qword_1EA1AB4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB4C8);
  }
  return result;
}

uint64_t sub_1C10E738C(char *a1, char *a2)
{
  return sub_1C148C638(*a1, *a2);
}

uint64_t sub_1C10E7398()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10E7414()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10E747C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10E74F4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C10E7554(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656C676E6973;
  if (*v1) {
    uint64_t v2 = 0x65676E6172;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C10E758C(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7BB30();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C10E75E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0C7BB30();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C10E763C(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7BB30();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C10E7690(uint64_t a1)
{
  sub_1BFCF7B04(0, (unint64_t *)&unk_1EB85AA70, MEMORY[0x1E4FAA920], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for H12_V1()
{
  return &type metadata for H12_V1;
}

uint64_t sub_1C10E772C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C10EAB20(0, &qword_1EA1AB588, (uint64_t (*)(void))sub_1C10EAACC, (uint64_t)&type metadata for H12_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10EAACC();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C10EA220(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C0FC6C60(0, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FBB320]);
    sub_1C0FC730C(&qword_1EA1A9E18, (void (*)(void))sub_1C0985E64);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C10E7988(uint64_t a1)
{
  unint64_t v2 = sub_1C10EAACC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C10E79C4(uint64_t a1)
{
  unint64_t v2 = sub_1C10EAACC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C10E7A00@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C10EA808(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C10E7A48(void *a1)
{
  return sub_1C10E772C(a1);
}

uint64_t sub_1C10E7A60()
{
  sub_1C10EA2E0();
  return sub_1C151798C();
}

uint64_t sub_1C10E7ADC@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C10EAB20(0, &qword_1EA1A9DE8, (uint64_t (*)(void))sub_1C0FC6F38, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C10E7B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v45 = a1;
  uint64_t v46 = a3;
  unint64_t v39 = sub_1C151635C();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for GroupLayoutContext();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  long long v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  char v12 = *v3;
  int v40 = *v3;
  char v13 = (void *)*((void *)v3 + 1);
  unsigned __int8 v14 = v3[16];
  uint64_t v36 = type metadata accessor for GroupLayoutBindingContext;
  uint64_t v15 = a1;
  uint64_t v16 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1B00C(v15, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v37 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1B00C(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v13, v14);
  sub_1C151634C();
  uint64_t v35 = sub_1C151633C();
  uint64_t v34 = v17;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v39);
  uint64_t v56 = &type metadata for H12_V1;
  unint64_t v39 = sub_1C0185E4C();
  unint64_t v57 = v39;
  v53[0] = v12;
  char v54 = v13;
  unsigned __int8 v55 = v14;
  type metadata accessor for GroupLayoutKey();
  uint64_t v18 = swift_allocObject();
  sub_1BFFFC7A0(v13, v14);
  uint64_t v51 = sub_1C1520FAC();
  uint64_t v52 = v19;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 45;
  unint64_t v48 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v20 = sub_1C151FEBC();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 16) = v20;
  *(void *)(v18 + 24) = v22;
  uint64_t v23 = (uint64_t *)(v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v24 = v34;
  *uint64_t v23 = v35;
  v23[1] = v24;
  sub_1BFC66384((uint64_t)v53, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v25 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v16, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))v36);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v25, 0, 1, v41);
  uint64_t v26 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  uint64_t v27 = v37;
  sub_1BFF2389C((uint64_t)v10, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))v37);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v26, 0, 1, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFFFC630(v13, v14);
  uint64_t v28 = type metadata accessor for H12_V1.Bound();
  uint64_t v29 = v46;
  v46[3] = v28;
  v29[4] = sub_1C10EA220(&qword_1EA1AB4E0, (void (*)(uint64_t))type metadata accessor for H12_V1.Bound);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  unint64_t v31 = v39;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for H12_V1;
  boxed_opaque_existential_0[5] = v31;
  *((unsigned char *)boxed_opaque_existential_0 + 8) = v40;
  boxed_opaque_existential_0[2] = (uint64_t)v13;
  *((unsigned char *)boxed_opaque_existential_0 + 24) = v14;
  sub_1BFF1B00C(v43, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(void))v27);
  sub_1BFFFC7A0(v13, v14);
  uint64_t result = sub_1C0F535C8(0, 0, 0, 0, 0);
  uint64_t *boxed_opaque_existential_0 = v18;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

double sub_1C10E8054@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for H12_V1.Bound() + 28));
  uint64_t v28 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0284398((void (*)(void *__return_ptr, uint64_t))sub_1C10EA268, (uint64_t)v27, v8);
  swift_bridgeObjectRelease();
  uint64_t v23 = v9;
  *(void *)&long long v30 = v9;
  sub_1C0FC6C60(0, &qword_1EA1A9D40, (uint64_t)&type metadata for HGroupLayoutContext, MEMORY[0x1E4FBB320]);
  uint64_t v11 = v10;
  sub_1BFEB3634(&qword_1EA1A9D48, &qword_1EA1A9D40, (uint64_t)&type metadata for HGroupLayoutContext);
  uint64_t v24 = v11;
  uint64_t v12 = sub_1C151F0BC();
  uint64_t v13 = *MEMORY[0x1E4FAB6D8];
  uint64_t v14 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v25 = v12;
  uint64_t v26 = v2;
  sub_1C10EA604(0, &qword_1EA1AB500, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  sub_1C1517BFC();
  long long v22 = v30;
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  uint64_t v29 = v33;
  *(void *)&long long v30 = v23;
  uint64_t v17 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C0FC6C60(0, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FBB320]);
  sub_1BFEB3634(&qword_1EA1A9D70, &qword_1EA1A9D40, (uint64_t)&type metadata for HGroupLayoutContext);
  sub_1BFEB3634(&qword_1EA1A9D78, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v30 = v18;
  sub_1C0FC6C60(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v17);
  sub_1BFEB3634((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  sub_1BFEB0FD4();
  uint64_t v19 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = *(double *)&v22;
  *(_OWORD *)(a1 + 8) = v22;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v16;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v19;
  *(void *)(a1 + 48) = v21;
  return result;
}

uint64_t sub_1C10E849C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C024A070(a1, (uint64_t)&v49);
  if (!v58)
  {
    long long v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    long long v29 = v51;
    long long v30 = v52;
    long long v31 = v53;
    long long v32 = v54;
    long long v27 = v49;
    long long v28 = v50;
    long long v47 = v55;
    v48[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)&v56[9];
    long long v43 = v51;
    long long v44 = v52;
    long long v45 = v53;
    long long v46 = v54;
    uint64_t v13 = *a2;
    long long v41 = v49;
    long long v42 = v50;
    sub_1C01B3C58(v35);
    sub_1C0181C7C((uint64_t)v35, (uint64_t)v40);
    uint64_t v14 = (char *)a2 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
    uint64_t v15 = type metadata accessor for GroupLayoutContext();
    uint64_t v16 = *(void *)(*(void *)&v14[*(int *)(v15 + 40)] + 16);
    double v17 = *(double *)&v14[*(int *)(v15 + 32)];
    sub_1BFC66384(v16 + 16, (uint64_t)v38);
    sub_1BFC66384(v16 + 56, (uint64_t)v37);
    double v18 = v17 * *(double *)(v16 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    uint64_t v19 = swift_allocObject();
    sub_1BFC773DC(v38, v19 + 16);
    sub_1BFC773DC(v37, v19 + 56);
    *(double *)(v19 + 96) = v18;
    swift_retain();
    sub_1C0187FB0((uint64_t)&v27);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v19 + 16);
    __swift_destroy_boxed_opaque_existential_1(v19 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    uint64_t result = sub_1C01880A4((uint64_t)&v27);
    goto LABEL_5;
  }
  if (v58 == 1)
  {
    long long v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    long long v29 = v51;
    long long v30 = v52;
    long long v31 = v53;
    long long v32 = v54;
    long long v27 = v49;
    long long v28 = v50;
    sub_1C0181C7C((uint64_t)v57, (uint64_t)v35);
    uint64_t v5 = *a2;
    long long v47 = v33;
    v48[0] = v34[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v34 + 9);
    long long v43 = v29;
    long long v44 = v30;
    long long v45 = v31;
    long long v46 = v32;
    long long v41 = v27;
    long long v42 = v28;
    sub_1C0181C7C((uint64_t)v35, (uint64_t)v40);
    uint64_t v6 = (char *)a2 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(void *)(*(void *)&v6[*(int *)(v7 + 40)] + 16);
    double v9 = *(double *)&v6[*(int *)(v7 + 32)];
    sub_1BFC66384(v8 + 16, (uint64_t)v38);
    sub_1BFC66384(v8 + 56, (uint64_t)v37);
    double v10 = v9 * *(double *)(v8 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    uint64_t v11 = swift_allocObject();
    sub_1BFC773DC(v38, v11 + 16);
    sub_1BFC773DC(v37, v11 + 56);
    *(double *)(v11 + 96) = v10;
    swift_retain();
    sub_1C0187FB0((uint64_t)&v27);
    sub_1C0FC6D4C((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C0FC6CAC);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v11 + 16);
    __swift_destroy_boxed_opaque_existential_1(v11 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v5, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    sub_1C01880A4((uint64_t)&v27);
    uint64_t result = sub_1C0FC6D4C((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C01B3BB8);
LABEL_5:
    *(unsigned char *)(a3 + 392) = 0;
    return result;
  }
  v35[6] = v55;
  v35[7] = *(_OWORD *)v56;
  v35[8] = *(_OWORD *)&v56[16];
  char v36 = v57[0];
  void v35[2] = v51;
  v35[3] = v52;
  v35[4] = v53;
  v35[5] = v54;
  v35[0] = v49;
  v35[1] = v50;
  uint64_t v20 = *a2;
  sub_1BFEA435C((uint64_t)v35, (uint64_t)&v27);
  uint64_t v21 = (char *)a2 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
  uint64_t v22 = type metadata accessor for GroupLayoutContext();
  uint64_t v23 = *(void *)(*(void *)&v21[*(int *)(v22 + 40)] + 16);
  double v24 = *(double *)&v21[*(int *)(v22 + 32)];
  sub_1BFC66384(v23 + 16, (uint64_t)v40);
  sub_1BFC66384(v23 + 56, (uint64_t)v39);
  double v25 = v24 * *(double *)(v23 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v26 = swift_allocObject();
  sub_1BFC773DC(v40, v26 + 16);
  sub_1BFC773DC(v39, v26 + 56);
  *(double *)(v26 + 96) = v25;
  swift_retain();
  FeedLayoutStylerFactory.styler()((uint64_t *)&v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v26 + 16);
  __swift_destroy_boxed_opaque_existential_1(v26 + 56);
  swift_deallocClassInstance();
  CoverChannelViewLayout.Context.init(key:model:styler:)(v20, (uint64_t)&v27, (uint64_t)&v41, (void *)a3);
  uint64_t result = sub_1BFEA4290((uint64_t)v35);
  *(unsigned char *)(a3 + 392) = 1;
  return result;
}

void sub_1C10E8920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C10EAB20(0, &qword_1EA1AB518, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  double v10 = (char *)&v21 - v9;
  uint64_t v30 = a2;
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    unsigned int v27 = *MEMORY[0x1E4FAB9E0];
    uint64_t v26 = *(void (**)(char *, void, uint64_t))(v8 + 104);
    unsigned int v25 = *MEMORY[0x1E4FAB638];
    uint64_t v29 = v8 + 104;
    double v24 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    long long v23 = xmmword_1C1529AE0;
    uint64_t v21 = a3;
    uint64_t v22 = v11;
    uint64_t v28 = v7;
    do
    {
      ++v12;
      uint64_t v31 = a1;
      v26(v10, v27, v7);
      sub_1C10EA528();
      sub_1C10EAB20(0, &qword_1EA1AB528, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v23;
      uint64_t v18 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, v25, v14);
      MEMORY[0x1F4188790](v18);
      uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
      sub_1C10EA604(0, &qword_1EA1AB530, MEMORY[0x1E4FAB6F0]);
      sub_1C10EA5C0(&qword_1EA1AB538, &qword_1EA1AB530, v19);
      swift_bridgeObjectRetain();
      uint64_t v7 = v28;
      uint64_t v20 = v22;
      sub_1C151731C();
      swift_bridgeObjectRelease();
      (*v24)(v10, v7);
      swift_bridgeObjectRelease();
    }
    while (v20 != v12);
    swift_bridgeObjectRelease();
  }
}

void sub_1C10E8CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v119 = a1;
  uint64_t v120 = a3;
  uint64_t v101 = sub_1C1517A7C();
  uint64_t v4 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  long long v104 = (uint64_t *)((char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C10EAB20(0, &qword_1EA1AB518, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v124 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v102 = (uint64_t *)((char *)&v93 - v11);
  uint64_t v118 = sub_1C1517A9C();
  MEMORY[0x1F4188790](v118);
  uint64_t v117 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14) {
    return;
  }
  uint64_t v15 = a2;
  uint64_t v16 = a2 + 32;
  uint64_t v116 = (char *)&v135;
  unsigned int v108 = *MEMORY[0x1E4FAB8F8];
  uint64_t v107 = (void (**)(char *, void, uint64_t, __n128))(v12 + 104);
  unsigned int v115 = *MEMORY[0x1E4FAB7A8];
  unsigned int v114 = *MEMORY[0x1E4FAB7B0];
  unsigned int v113 = *MEMORY[0x1E4FAB9E8];
  unint64_t v112 = (void (**)(uint64_t *, void, uint64_t))(v7 + 104);
  unsigned int v111 = *MEMORY[0x1E4FAB5E8];
  unsigned int v110 = *MEMORY[0x1E4FAB620];
  uint64_t v106 = (void (**)(uint64_t *, uint64_t))(v7 + 8);
  uint64_t v99 = &v125[10];
  uint64_t v103 = (uint64_t)&v125[5] + 8;
  id v95 = &v128;
  unsigned int v94 = *MEMORY[0x1E4FAB8D0];
  uint64_t v97 = (uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v96 = (void (**)(void *, uint64_t))(v4 + 8);
  unsigned int v98 = *MEMORY[0x1E4FAB8C0];
  uint64_t v93 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  long long v109 = xmmword_1C1529AE0;
  uint64_t v100 = v9;
  while (1)
  {
    sub_1C0FC6624(v16, (uint64_t)v134);
    char v44 = *v116;
    uint64_t v122 = v16;
    uint64_t v123 = v14;
    uint64_t v121 = v17;
    if ((v44 & 1) == 0)
    {
      memcpy(v125, v134, 0x188uLL);
      if ((BYTE8(v125[3]) & 0x10) != 0)
      {
        uint64_t v18 = v120 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
        uint64_t v19 = type metadata accessor for GroupLayoutContext();
        uint64_t v20 = *(void *)(*(void *)(v18 + *(int *)(v19 + 40)) + 24);
        __n128 v21 = MEMORY[0x1F4188790](v19);
        *(&v93 - 4) = (uint64_t)v125;
        *(&v93 - 3) = v20;
        uint64_t v91 = v22;
      }
      else
      {
        uint64_t v73 = v120 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
        uint64_t v74 = type metadata accessor for GroupLayoutContext();
        uint64_t v75 = *(void *)(*(void *)(v73 + *(int *)(v74 + 40)) + 24);
        __n128 v21 = MEMORY[0x1F4188790](v74);
        uint64_t v91 = v125;
        uint64_t v92 = v75;
      }
      (*v107)(v117, v108, v118, v21);
      sub_1C01BC774();
      swift_allocObject();
      swift_retain();
      uint64_t KeyPath = sub_1C1517BEC();
      swift_release();
      uint64_t v126 = v119;
      swift_getKeyPath();
      sub_1BFF35C38();
      uint64_t v24 = v23;
      uint64_t v25 = swift_allocBox();
      unsigned int v27 = v26;
      uint64_t v28 = (char *)v26 + *(int *)(v24 + 48);
      sub_1C151728C();
      uint64_t v29 = swift_allocBox();
      sub_1C151727C();
      *unsigned int v27 = v29;
      uint64_t v30 = sub_1C151786C();
      uint64_t v31 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104);
      v31(v27, v115, v30);
      v31((uint64_t *)v28, v114, v30);
      long long v32 = v102;
      *uint64_t v102 = v25;
      (*v112)(v32, v113, v124);
      sub_1C10EA528();
      sub_1C10EAB20(0, &qword_1EA1AB528, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v34 = v33;
      uint64_t v35 = *(void *)(v33 - 8);
      unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v109;
      unint64_t v38 = v37 + v36;
      sub_1C10EAB20(0, &qword_1EA1AB540, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FAB618]);
      (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v39 - 8) + 104))(v38, v111, v39);
      (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38, v110, v34);
      int v40 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C10EA604(0, &qword_1EA1AB548, MEMORY[0x1E4FAB4D0]);
      long long v42 = v41;
      uint64_t v43 = sub_1C10EA5C0(&qword_1EA1AB550, &qword_1EA1AB548, v40);
      uint64_t v91 = v42;
      uint64_t v92 = v43;
      uint64_t v17 = v121;
      sub_1C15173DC();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*v106)(v32, v124);
      sub_1C01BC710((uint64_t)v125);
      uint64_t v9 = v100;
      goto LABEL_5;
    }
    v125[12] = *(_OWORD *)&v134[192];
    v125[13] = *(_OWORD *)&v134[208];
    v125[14] = *(_OWORD *)&v134[224];
    *(void *)&v125[15] = *(void *)&v134[240];
    v125[8] = *(_OWORD *)&v134[128];
    v125[9] = *(_OWORD *)&v134[144];
    v125[10] = *(_OWORD *)&v134[160];
    v125[11] = *(_OWORD *)&v134[176];
    v125[4] = *(_OWORD *)&v134[64];
    v125[5] = *(_OWORD *)&v134[80];
    v125[6] = *(_OWORD *)&v134[96];
    v125[7] = *(_OWORD *)&v134[112];
    v125[0] = *(_OWORD *)v134;
    v125[1] = *(_OWORD *)&v134[16];
    v125[2] = *(_OWORD *)&v134[32];
    v125[3] = *(_OWORD *)&v134[48];
    uint64_t v133 = v119;
    uint64_t KeyPath = swift_getKeyPath();
    sub_1BFF35C38();
    uint64_t v46 = v45;
    uint64_t v47 = swift_allocBox();
    long long v49 = v48;
    long long v50 = (char *)v48 + *(int *)(v46 + 48);
    sub_1C151728C();
    uint64_t v51 = swift_allocBox();
    sub_1C151727C();
    *long long v49 = v51;
    uint64_t v52 = sub_1C151786C();
    long long v53 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v52 - 8) + 104);
    v53(v49, v115, v52);
    v53((uint64_t *)v50, v114, v52);
    *uint64_t v9 = v47;
    long long v54 = v9;
    (*v112)(v9, v113, v124);
    sub_1C10EA528();
    sub_1C10EAB20(0, &qword_1EA1AB528, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v56 = v55;
    uint64_t v57 = *(void *)(v55 - 8);
    unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v109;
    unint64_t v60 = v59 + v58;
    sub_1C10EAB20(0, &qword_1EA1AB540, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v61 - 8) + 104))(v60, v111, v61);
    (*(void (**)(unint64_t, void, uint64_t))(v57 + 104))(v60, v110, v56);
    type metadata accessor for H12_V1.Bound();
    type metadata accessor for GroupLayoutContext();
    uint64_t v62 = *((void *)&v125[11] + 1);
    uint64_t v63 = *(void *)&v125[12];
    uint64_t v64 = v99;
    __swift_project_boxed_opaque_existential_1(v99, *((uint64_t *)&v125[11] + 1));
    uint64_t v65 = *(double (**)(uint64_t, uint64_t))(v63 + 48);
    swift_retain();
    double v66 = v65(v62, v63);
    uint64_t v67 = *((void *)&v125[11] + 1);
    uint64_t v68 = *(void *)&v125[12];
    __swift_project_boxed_opaque_existential_1(v64, *((uint64_t *)&v125[11] + 1));
    double v69 = (*(double (**)(uint64_t, uint64_t))(v68 + 56))(v67, v68);
    sub_1C0FC6A60(v103, (uint64_t)&v126, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
    if (v127 == 1)
    {
      uint64_t v70 = &v126;
      unint64_t v71 = &qword_1EB865538;
      uint64_t v72 = &type metadata for FeedTag.Overrides;
LABEL_18:
      sub_1C0FC6AE0((uint64_t)v70, v71, (uint64_t)v72);
      uint64_t v77 = v98;
      goto LABEL_19;
    }
    sub_1C0FC6A60((uint64_t)v95, (uint64_t)v129, (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
    sub_1C01B0DA4((uint64_t)&v126);
    if (!v130)
    {
      uint64_t v70 = (uint64_t *)v129;
      unint64_t v71 = (unint64_t *)&unk_1EA197CC0;
      uint64_t v72 = &type metadata for FeedTag.Overrides.Image;
      goto LABEL_18;
    }
    char v76 = v132;
    sub_1C01B0FEC((uint64_t)v129);
    uint64_t v77 = v98;
    if ((v76 & 1) == 0) {
      break;
    }
LABEL_19:
    uint64_t v80 = v104;
    uint64_t v81 = v101;
    uint64_t v82 = (*v97)(v104, v77, v101);
    __n128 v83 = MEMORY[0x1F4188790](v82);
    *(&v93 - 4) = (uint64_t)v80;
    *((double *)&v93 - 3) = v66 + v69 + v69;
    uint64_t v91 = v125;
    (*v107)(v117, v108, v118, v83);
    sub_1C0FC6B60();
    swift_allocObject();
    sub_1C1517BEC();
    (*v96)(v80, v81);
    swift_release();
    uint64_t v84 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C10EA604(0, &qword_1EA1AB548, MEMORY[0x1E4FAB4D0]);
    uint64_t v86 = v85;
    uint64_t v87 = sub_1C10EA5C0(&qword_1EA1AB550, &qword_1EA1AB548, v84);
    uint64_t v91 = v86;
    uint64_t v92 = v87;
    uint64_t v9 = v54;
    uint64_t v17 = v121;
    sub_1C15173DC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*v106)(v9, v124);
    sub_1C0FC6680((uint64_t)v125);
LABEL_5:
    uint64_t v16 = v122 + 400;
    uint64_t v14 = v123 - 1;
    if (v123 == 1)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_1C0FC6A60(v103, (uint64_t)&v126, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v127 == 1)
  {
    uint64_t v88 = &qword_1EB865538;
    uint64_t v89 = &type metadata for FeedTag.Overrides;
    uint64_t v90 = &v126;
    goto LABEL_24;
  }
  sub_1C0FC6A60((uint64_t)v95, (uint64_t)v129, (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
  sub_1C01B0DA4((uint64_t)&v126);
  if (v130)
  {
    uint64_t v78 = v131;
    char v79 = v132;
    sub_1C01B0FEC((uint64_t)v129);
    if (v79) {
      goto LABEL_25;
    }
    *long long v104 = v78;
    uint64_t v77 = v94;
    goto LABEL_19;
  }
  uint64_t v88 = (unint64_t *)&unk_1EA197CC0;
  uint64_t v89 = &type metadata for FeedTag.Overrides.Image;
  uint64_t v90 = (uint64_t *)v129;
LABEL_24:
  sub_1C0FC6AE0((uint64_t)v90, v88, (uint64_t)v89);
LABEL_25:
  __break(1u);
}

uint64_t sub_1C10E9B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1C151635C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0986018(a3, v47);
  sub_1C0FC6624(a2, (uint64_t)v45);
  sub_1C0986018(v47, &v46);
  if ((v45[392] & 1) == 0)
  {
    sub_1C0FC6624((uint64_t)v45, (uint64_t)v43);
    sub_1C0986018(v47, v44);
    int v33 = sub_1C0984118((uint64_t)v44);
    uint64_t v34 = nullsub_1();
    if (v33 != 1)
    {
      int v40 = (const void *)v34;
      uint64_t v41 = swift_allocObject();
      memcpy((void *)(v41 + 16), v43, 0x188uLL);
      memcpy((void *)(v41 + 408), v40, 0x180uLL);
      *(void *)(v41 + 792) = a1;
      uint64_t v32 = v41 | 0x5000000000000000;
      goto LABEL_9;
    }
    sub_1C01BC710((uint64_t)v43);
LABEL_7:
    uint64_t v35 = swift_allocObject();
    sub_1C151634C();
    uint64_t v36 = sub_1C151633C();
    uint64_t v38 = v37;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)(v35 + 16) = v36;
    *(void *)(v35 + 24) = v38;
    *a4 = v35;
    return sub_1C0FC5E2C((uint64_t)v45, (uint64_t (*)(void))sub_1C0FC670C);
  }
  sub_1C0FC6624((uint64_t)v45, (uint64_t)v43);
  sub_1C0986018(v47, v44);
  int v12 = sub_1C0984118((uint64_t)v44);
  uint64_t v13 = nullsub_1();
  if (v12 != 1)
  {
    sub_1C0FC6680((uint64_t)v43);
    goto LABEL_7;
  }
  uint64_t v14 = (long long *)v13;
  uint64_t v15 = swift_allocObject();
  long long v16 = v43[13];
  *(_OWORD *)(v15 + 208) = v43[12];
  *(_OWORD *)(v15 + 224) = v16;
  *(_OWORD *)(v15 + 240) = v43[14];
  *(void *)(v15 + 256) = *(void *)&v43[15];
  long long v17 = v43[9];
  *(_OWORD *)(v15 + 144) = v43[8];
  *(_OWORD *)(v15 + 160) = v17;
  long long v18 = v43[11];
  *(_OWORD *)(v15 + 176) = v43[10];
  *(_OWORD *)(v15 + 192) = v18;
  long long v19 = v43[5];
  *(_OWORD *)(v15 + 80) = v43[4];
  *(_OWORD *)(v15 + 96) = v19;
  long long v20 = v43[7];
  *(_OWORD *)(v15 + 112) = v43[6];
  *(_OWORD *)(v15 + 128) = v20;
  long long v21 = v43[1];
  *(_OWORD *)(v15 + 16) = v43[0];
  *(_OWORD *)(v15 + 32) = v21;
  long long v22 = v43[3];
  *(_OWORD *)(v15 + 48) = v43[2];
  *(_OWORD *)(v15 + 64) = v22;
  long long v23 = *v14;
  long long v24 = v14[1];
  long long v25 = v14[3];
  *(_OWORD *)(v15 + 296) = v14[2];
  *(_OWORD *)(v15 + 312) = v25;
  *(_OWORD *)(v15 + 280) = v24;
  *(_OWORD *)(v15 + 264) = v23;
  long long v26 = v14[4];
  long long v27 = v14[5];
  long long v28 = v14[7];
  *(_OWORD *)(v15 + 360) = v14[6];
  *(_OWORD *)(v15 + 376) = v28;
  *(_OWORD *)(v15 + 328) = v26;
  *(_OWORD *)(v15 + 344) = v27;
  long long v29 = v14[8];
  long long v30 = v14[9];
  long long v31 = v14[11];
  *(_OWORD *)(v15 + 424) = v14[10];
  *(_OWORD *)(v15 + 440) = v31;
  *(_OWORD *)(v15 + 392) = v29;
  *(_OWORD *)(v15 + 408) = v30;
  *(void *)(v15 + 456) = a1;
  uint64_t v32 = v15 | 0x6000000000000000;
LABEL_9:
  *a4 = v32;
  return sub_1C0FC6824((uint64_t)v45);
}

uint64_t sub_1C10E9E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C10E7B98(a1, a2, a3);
}

uint64_t sub_1C10E9E64()
{
  return sub_1C12BC3C4();
}

unint64_t sub_1C10E9E74(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C10E9EA4();
  unint64_t result = sub_1C10E9EF8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C10E9EA4()
{
  unint64_t result = qword_1EA1AB4D0;
  if (!qword_1EA1AB4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB4D0);
  }
  return result;
}

unint64_t sub_1C10E9EF8()
{
  unint64_t result = qword_1EA1AB4D8;
  if (!qword_1EA1AB4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB4D8);
  }
  return result;
}

uint64_t type metadata accessor for H12_V1.Bound()
{
  uint64_t result = qword_1EA1AB4E8;
  if (!qword_1EA1AB4E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C10E9F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10E9FAC);
}

uint64_t sub_1C10E9FAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C10EA05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10EA070);
}

void *sub_1C10EA070(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C10EA118()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C10EA1C8(uint64_t a1)
{
  uint64_t result = sub_1C10EA220(&qword_1EA1AB4F8, (void (*)(uint64_t))type metadata accessor for H12_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C10EA220(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10EA268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C10E849C(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1C10EA284(uint64_t a1)
{
  sub_1C10E8920(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C10EA28C()
{
  unint64_t result = qword_1EA1AB508;
  if (!qword_1EA1AB508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB508);
  }
  return result;
}

unint64_t sub_1C10EA2E0()
{
  unint64_t result = qword_1EA1AB510;
  if (!qword_1EA1AB510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB510);
  }
  return result;
}

uint64_t sub_1C10EA334()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10EA36C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 144)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 120);
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C10EA41C()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 152) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 296) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C10EA528()
{
  if (!qword_1EA1AB520)
  {
    sub_1C10EAB20(255, &qword_1EA1AB528, (uint64_t (*)(void))sub_1C10EA28C, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AB520);
    }
  }
}

void sub_1C10EA5B8(uint64_t a1)
{
  sub_1C10E8CA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C10EA5C0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C10EA604(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C10EA604(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for H12_V1.Layout;
    v8[1] = &type metadata for H12_V1.Layout.Attributes;
    v8[2] = sub_1C10EA28C();
    uint64_t v8[3] = sub_1C10EA2E0();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

ValueMetadata *type metadata accessor for H12_V1.Layout.Attributes()
{
  return &type metadata for H12_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for H12_V1.Layout()
{
  return &type metadata for H12_V1.Layout;
}

unint64_t sub_1C10EA6AC()
{
  unint64_t result = qword_1EA1AB558;
  if (!qword_1EA1AB558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB558);
  }
  return result;
}

unint64_t sub_1C10EA704()
{
  unint64_t result = qword_1EA1AB560;
  if (!qword_1EA1AB560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB560);
  }
  return result;
}

unint64_t sub_1C10EA75C()
{
  unint64_t result = qword_1EA1AB568;
  if (!qword_1EA1AB568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB568);
  }
  return result;
}

unint64_t sub_1C10EA7B4()
{
  unint64_t result = qword_1EA1AB570;
  if (!qword_1EA1AB570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB570);
  }
  return result;
}

uint64_t sub_1C10EA808@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  long long v18 = a2;
  sub_1C10EAB20(0, &qword_1EA1AB578, (uint64_t (*)(void))sub_1C10EAACC, (uint64_t)&type metadata for H12_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10EAACC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C10EA220(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1C0FC6C60(0, &qword_1EA1A9D68, (uint64_t)&type metadata for HMultiLayoutItem, MEMORY[0x1E4FBB320]);
  char v23 = 1;
  sub_1C0FC730C(&qword_1EA1A9E08, (void (*)(void))sub_1C0985E0C);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  _OWORD v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C10EAACC()
{
  unint64_t result = qword_1EA1AB580;
  if (!qword_1EA1AB580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB580);
  }
  return result;
}

void sub_1C10EAB20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for H12_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10EAC54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for H12_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for H12_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C10EAC90()
{
  unint64_t result = qword_1EA1AB590;
  if (!qword_1EA1AB590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB590);
  }
  return result;
}

unint64_t sub_1C10EACE8()
{
  unint64_t result = qword_1EA1AB598;
  if (!qword_1EA1AB598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB598);
  }
  return result;
}

unint64_t sub_1C10EAD40()
{
  unint64_t result = qword_1EA1AB5A0;
  if (!qword_1EA1AB5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5A0);
  }
  return result;
}

uint64_t sub_1C10EAD94()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

NewsFeed::FeedFontLoadResult __swiftcall FeedFontLoadResult.init(loadedFonts:missingFonts:)(Swift::OpaquePointer loadedFonts, Swift::OpaquePointer missingFonts)
{
  v2->_rawValue = loadedFonts._rawValue;
  v2[1]._rawValue = missingFonts._rawValue;
  result.missingFonts = missingFonts;
  result.loadedFonts = loadedFonts;
  return result;
}

id LoadedFont.loadableFont.getter()
{
  return *v0;
}

void *LoadedFont.assetHandle.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

uint64_t LoadedFont.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t static LoadedFont.== infix(_:_:)()
{
  return sub_1C151FB6C() & 1;
}

uint64_t LoadedFont.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10EAED0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10EAF18()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C10EAF48()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10EAF8C()
{
  return sub_1C151FB6C() & 1;
}

uint64_t FeedFontLoadResult.loadedFonts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedFontLoadResult.missingFonts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10EAFF0()
{
  return sub_1BFC4868C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C10EB010()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C10EB050(uint64_t a1)
{
  uint64_t v41[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = type metadata accessor for FeedFontManager.LocalFont();
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (id *)((char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v34 = v1 + 40;
    uint64_t v35 = v1;
    uint64_t v8 = *(void **)(v1 + 24);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v37 = *(void *)(v4 + 72);
    id v38 = v8;
    v31[1] = a1;
    swift_bridgeObjectRetain();
    long long v33 = xmmword_1C1529AE0;
    long long v32 = xmmword_1C1527210;
    do
    {
      sub_1C10ECA04(v9, (uint64_t)v6);
      uint64_t v19 = (void *)sub_1C1515E9C();
      id v39 = 0;
      unsigned int v20 = objc_msgSend(v38, sel_registerFontWithURL_error_, v19, &v39);

      if (v20)
      {
        id v10 = v39;
        sub_1C151F35C();
        sub_1BFFDEB20();
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = v33;
        id v12 = *v6;
        id v13 = objc_msgSend(v12, sel_description);
        uint64_t v14 = sub_1C151E62C();
        uint64_t v16 = v15;

        *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v11 + 64) = sub_1BFE9C558();
        *(void *)(v11 + 32) = v14;
        *(void *)(v11 + 40) = v16;
        sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
        uint64_t v17 = (void *)sub_1C151FD3C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();

        sub_1C1517E7C();
        swift_beginAccess();
        sub_1BFCD5260(v41, v12, 0);
        swift_endAccess();
        id v18 = v41[1];

        sub_1C1517E8C();
      }
      else
      {
        id v21 = v39;
        uint64_t v22 = (void *)sub_1C1515D3C();

        swift_willThrow();
        int v36 = sub_1C151F36C();
        sub_1BFFDEB20();
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v32;
        id v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        sub_1C152036C();
        id v24 = v39;
        unint64_t v25 = v40;
        *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v26 = sub_1BFE9C558();
        *(void *)(v23 + 64) = v26;
        *(void *)(v23 + 32) = v24;
        *(void *)(v23 + 40) = v25;
        id v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        v41[0] = v22;
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        sub_1C152036C();
        id v27 = v39;
        unint64_t v28 = v40;
        *(void *)(v23 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v23 + 104) = v26;
        *(void *)(v23 + 72) = v27;
        *(void *)(v23 + 80) = v28;
        sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
        long long v29 = (void *)sub_1C151FD3C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
      }
      sub_1C10ECA68((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedFontManager.LocalFont);
      v9 += v37;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  sub_1BFD43E80(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C10EB4C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v1; ++i)
    {
      id v4 = *(id *)(a1 + 8 * i + 32);
      id v5 = objc_msgSend(v4, sel_fontName);
      if (v5)
      {
        unsigned int v6 = v5;
        sub_1C151E62C();

        uint64_t v7 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v8 = objc_msgSend(self, sel_fontWithName_size_, v7, 0.0);

        if (v8)
        {
          id v9 = v4;
          sub_1C1517E7C();
          swift_beginAccess();
          id v10 = v9;
          sub_1BFCD5260(v13, v10, 0);
          swift_endAccess();
          id v11 = v13[1];

          sub_1C1517E8C();
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  sub_1BFD43E80(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

void sub_1C10EB680(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
  id v12 = objc_msgSend(a2, sel_fontURL);
  if (v12)
  {
    id v13 = v12;
    sub_1C1515F1C();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
    {
      uint64_t v14 = sub_1C1515E2C();
      uint64_t v16 = v15;
      uint64_t v17 = MEMORY[0x1E4FBB1A0];
      *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v18 = sub_1BFE9C558();
      *(void *)(v11 + 64) = v18;
      *(void *)(v11 + 32) = v14;
      *(void *)(v11 + 40) = v16;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      v22[1] = a1;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      sub_1C152036C();
      uint64_t v19 = v23;
      unint64_t v20 = v24;
      *(void *)(v11 + 96) = v17;
      *(void *)(v11 + 104) = v18;
      *(void *)(v11 + 72) = v19;
      *(void *)(v11 + 80) = v20;
      sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
      id v21 = (void *)sub_1C151FD3C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  __break(1u);
}

uint64_t FeedFontManager.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedFontManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t assignWithCopy for LoadedFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

ValueMetadata *type metadata accessor for LoadedFont()
{
  return &type metadata for LoadedFont;
}

ValueMetadata *type metadata accessor for FeedFontLoadResult()
{
  return &type metadata for FeedFontLoadResult;
}

uint64_t method lookup function for FeedFontManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedFontManager);
}

uint64_t sub_1C10EBA70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v4 = (void **)(a1 + 32);
    sub_1BFD43E80(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    do
    {
      id v6 = *v4++;
      MEMORY[0x1F4188790](v5);
      swift_allocObject();
      id v7 = v6;
      sub_1C151911C();

      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      uint64_t v5 = sub_1C152026C();
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C10EBBD0(uint64_t a1)
{
  uint64_t v88 = type metadata accessor for FeedFontManager.LocalFont();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v90 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v108 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  unsigned int v94 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v96 = (char *)&v87 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v97 = (char *)&v87 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v89 = (char *)&v87 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v87 - v16;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v87 - v19;
  uint64_t v113 = MEMORY[0x1E4FBC860];
  uint64_t v114 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C151FFEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A140);
    sub_1C0606A40();
    sub_1C151F02C();
    a1 = v115;
    uint64_t v103 = v116;
    uint64_t v22 = v117;
    uint64_t v21 = v118;
    unint64_t v23 = v119;
  }
  else
  {
    uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = *(void *)(a1 + 56);
    uint64_t v103 = a1 + 56;
    uint64_t v22 = ~v24;
    uint64_t v26 = -v24;
    if (v26 < 64) {
      uint64_t v27 = ~(-1 << v26);
    }
    else {
      uint64_t v27 = -1;
    }
    unint64_t v23 = v27 & v25;
    swift_bridgeObjectRetain();
    uint64_t v21 = 0;
  }
  uint64_t v106 = v20;
  uint64_t v99 = v17;
  uint64_t v101 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v91 = v22;
  int64_t v102 = (unint64_t)(v22 + 64) >> 6;
  long long v109 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v107 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  long long v104 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v105 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  unint64_t v92 = MEMORY[0x1E4FBC860];
  long long v93 = xmmword_1C1529AE0;
  uint64_t v100 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v98 = a1;
  uint64_t v28 = v21;
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_15;
  }
LABEL_33:
  uint64_t v37 = sub_1C152001C();
  if (!v37) {
    goto LABEL_67;
  }
  uint64_t v111 = v37;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A140);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v36 = v112;
  swift_unknownObjectRelease();
  uint64_t v32 = v28;
  uint64_t v30 = v23;
  if (!v36) {
    goto LABEL_67;
  }
  while (1)
  {
    unint64_t v110 = v30;
    id v38 = objc_msgSend(v36, sel_fontURL, v87);
    if (!v38)
    {
      uint64_t v41 = (uint64_t)v106;
      (*v109)(v106, 1, 1, v4);
LABEL_56:
      sub_1C10ECA68(v41, (uint64_t (*)(void))sub_1BFF00BEC);
      id v76 = v36;
      MEMORY[0x1C18C66D0]();
      if (*(void *)(v114 + 16) >= *(void *)(v114 + 24) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      goto LABEL_14;
    }
    id v39 = v38;
    unint64_t v40 = v108;
    sub_1C1515F1C();

    uint64_t v41 = (uint64_t)v106;
    uint64_t v42 = *v105;
    (*v105)(v106, v40, v4);
    uint64_t v1 = *v109;
    (*v109)((char *)v41, 0, 1, v4);
    uint64_t v43 = *v107;
    if ((*v107)(v41, 1, v4) == 1) {
      goto LABEL_56;
    }
    sub_1C10ECA68(v41, (uint64_t (*)(void))sub_1BFF00BEC);
    id v44 = objc_msgSend(v36, sel_fontURL);
    if (!v44) {
      goto LABEL_69;
    }
    uint64_t v45 = v44;
    uint64_t v46 = v108;
    sub_1C1515F1C();

    uint64_t v47 = v99;
    v42(v99, v46, v4);
    v1(v47, 0, 1, v4);
    if (v43((uint64_t)v47, 1, v4) == 1) {
      goto LABEL_70;
    }
    char v48 = sub_1C1515DEC();
    long long v49 = *v104;
    (*v104)(v47, v4);
    id v50 = objc_msgSend(v36, sel_fontURL);
    uint64_t v51 = v50;
    if ((v48 & 1) == 0)
    {
      if (!v50) {
        goto LABEL_71;
      }
      uint64_t v52 = v108;
      sub_1C1515F1C();

      long long v53 = v97;
      v42(v97, v52, v4);
      v1(v53, 0, 1, v4);
      if (v43((uint64_t)v53, 1, v4) == 1) {
        goto LABEL_72;
      }
      long long v54 = v53;
      uint64_t v55 = sub_1C1515F5C();
      uint64_t v57 = v56;
      v49(v54, v4);
      if (v57)
      {
        if (v55 != 1886680168 || v57 != 0xE400000000000000)
        {
          char v58 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if ((v58 & 1) == 0) {
            goto LABEL_46;
          }
LABEL_10:
          id v29 = v36;
          MEMORY[0x1C18C66D0]();
          if (*(void *)(v113 + 16) >= *(void *)(v113 + 24) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
LABEL_13:
          a1 = v98;
LABEL_14:
          unint64_t v23 = v110;

          uint64_t v28 = v32;
          if (a1 < 0) {
            goto LABEL_33;
          }
          goto LABEL_15;
        }
LABEL_9:
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
LABEL_46:
      id v59 = objc_msgSend(v36, sel_fontURL);
      if (!v59) {
        goto LABEL_73;
      }
      unint64_t v60 = v59;
      uint64_t v61 = v108;
      sub_1C1515F1C();

      uint64_t v62 = v96;
      v42(v96, v61, v4);
      v1(v62, 0, 1, v4);
      if (v43((uint64_t)v62, 1, v4) == 1) {
        goto LABEL_74;
      }
      uint64_t v63 = sub_1C1515F5C();
      uint64_t v65 = v64;
      v49(v62, v4);
      if (v65)
      {
        if (v63 == 0x7370747468 && v65 == 0xE500000000000000) {
          goto LABEL_9;
        }
        char v66 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v66) {
          goto LABEL_10;
        }
      }
      int v95 = sub_1C151F36C();
      sub_1BFFDEB20();
      uint64_t v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = v93;
      id v68 = objc_msgSend(v36, sel_fontURL);
      if (!v68) {
        goto LABEL_75;
      }
      double v69 = v68;
      uint64_t v70 = v108;
      sub_1C1515F1C();

      unint64_t v71 = v94;
      v42(v94, v70, v4);
      v1(v71, 0, 1, v4);
      if (v43((uint64_t)v71, 1, v4) == 1) {
        goto LABEL_76;
      }
      uint64_t v72 = v71;
      uint64_t v73 = sub_1C1515E2C();
      uint64_t v1 = v74;
      *(void *)(v67 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v67 + 64) = sub_1BFE9C558();
      *(void *)(v67 + 32) = v73;
      *(void *)(v67 + 40) = v1;
      v49(v72, v4);
      sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
      uint64_t v75 = (void *)sub_1C151FD3C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();

      goto LABEL_13;
    }
    if (!v50) {
      goto LABEL_77;
    }
    uint64_t v77 = v108;
    sub_1C1515F1C();

    uint64_t v78 = v89;
    v42(v89, v77, v4);
    v1(v78, 0, 1, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v43)(v78, 1, v4);
    a1 = v98;
    if (result == 1) {
      goto LABEL_78;
    }
    uint64_t v80 = v90;
    *(void *)uint64_t v90 = v36;
    v42(&v80[*(int *)(v88 + 20)], v78, v4);
    id v81 = v36;
    unint64_t v82 = v92;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v23 = v110;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v82 = sub_1C0EE8968(0, *(void *)(v82 + 16) + 1, 1, v82);
    }
    unint64_t v85 = *(void *)(v82 + 16);
    unint64_t v84 = *(void *)(v82 + 24);
    if (v85 >= v84 >> 1) {
      unint64_t v82 = sub_1C0EE8968(v84 > 1, v85 + 1, 1, v82);
    }
    *(void *)(v82 + 16) = v85 + 1;
    unint64_t v86 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    unint64_t v92 = v82;
    sub_1C10ECAC8((uint64_t)v90, v82 + v86 + *(void *)(v87 + 72) * v85);

    uint64_t v28 = v32;
    if (a1 < 0) {
      goto LABEL_33;
    }
LABEL_15:
    if (!v23) {
      break;
    }
    uint64_t v30 = (v23 - 1) & v23;
    unint64_t v31 = __clz(__rbit64(v23)) | (v28 << 6);
    uint64_t v32 = v28;
LABEL_31:
    id v36 = *(id *)(*(void *)(a1 + 48) + 8 * v31);
    if (!v36) {
      goto LABEL_67;
    }
  }
  int64_t v33 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
LABEL_69:
    v1(v99, 1, 1, v4);
LABEL_70:
    __break(1u);
LABEL_71:
    v1(v97, 1, 1, v4);
LABEL_72:
    __break(1u);
LABEL_73:
    v1(v96, 1, 1, v4);
LABEL_74:
    __break(1u);
LABEL_75:
    v1(v94, 1, 1, v4);
LABEL_76:
    __break(1u);
LABEL_77:
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v1)(v89, 1, 1, v4);
LABEL_78:
    __break(1u);
    return result;
  }
  if (v33 >= v102) {
    goto LABEL_67;
  }
  unint64_t v34 = *(void *)(v103 + 8 * v33);
  uint64_t v32 = v28 + 1;
  if (v34) {
    goto LABEL_30;
  }
  uint64_t v32 = v28 + 2;
  if (v28 + 2 >= v102) {
    goto LABEL_67;
  }
  unint64_t v34 = *(void *)(v103 + 8 * v32);
  if (v34) {
    goto LABEL_30;
  }
  uint64_t v32 = v28 + 3;
  if (v28 + 3 >= v102) {
    goto LABEL_67;
  }
  unint64_t v34 = *(void *)(v103 + 8 * v32);
  if (v34) {
    goto LABEL_30;
  }
  uint64_t v32 = v28 + 4;
  if (v28 + 4 >= v102) {
    goto LABEL_67;
  }
  unint64_t v34 = *(void *)(v103 + 8 * v32);
  if (v34)
  {
LABEL_30:
    uint64_t v30 = (v34 - 1) & v34;
    unint64_t v31 = __clz(__rbit64(v34)) + (v32 << 6);
    goto LABEL_31;
  }
  uint64_t v35 = v28 + 5;
  while (v102 != v35)
  {
    unint64_t v34 = *(void *)(v103 + 8 * v35++);
    if (v34)
    {
      uint64_t v32 = v35 - 1;
      goto LABEL_30;
    }
  }
LABEL_67:
  sub_1BFEFB808();
  return v92;
}

uint64_t sub_1C10EC900()
{
  return swift_deallocObject();
}

uint64_t sub_1C10EC940()
{
  return swift_deallocObject();
}

void sub_1C10EC978(uint64_t a1)
{
  sub_1C10EB680(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C10EC980()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for FeedFontManager.LocalFont()
{
  uint64_t result = qword_1EB85C9D8;
  if (!qword_1EB85C9D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C10ECA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedFontManager.LocalFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C10ECA68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C10ECAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedFontManager.LocalFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void **sub_1C10ECB2C(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1515FDC();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1C10ECC0C(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void **sub_1C10ECC84(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_1C10ECD18(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *sub_1C10ECDA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_1C10ECE24(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C10ECEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10ECEC4);
}

uint64_t sub_1C10ECEC4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C10ECF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10ECF88);
}

void *sub_1C10ECF88(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C10ED030()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatOptionEnum.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionEnum.init(name:value:selectors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t FormatOptionEnum.description.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t FormatOptionEnum.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionEnum.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionEnum.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatOptionEnum.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C10ED718()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C10ED788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1C05F6468(0, v4, 0);
    uint64_t v7 = 0;
    uint64_t result = v30;
    uint64_t v26 = a1 + 32;
    uint64_t v29 = a2 + 56;
    while (1)
    {
      uint64_t v8 = (uint64_t *)(v26 + 32 * v7);
      uint64_t v9 = v8[2];
      uint64_t v10 = v8[3];
      uint64_t v27 = v8[1];
      uint64_t v28 = result;
      if (!*(void *)(a2 + 16)) {
        break;
      }
      uint64_t v11 = *v8;
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1C151E77C();
      uint64_t v12 = sub_1C1520E0C();
      uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)(v29 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_21;
      }
      uint64_t v15 = *(void *)(a2 + 48);
      uint64_t v16 = (void *)(v15 + 16 * v14);
      BOOL v17 = *v16 == v9 && v16[1] == v10;
      if (!v17 && (sub_1C1520A9C() & 1) == 0)
      {
        uint64_t v18 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v18;
          if (((*(void *)(v29 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v14);
          BOOL v20 = *v19 == v9 && v19[1] == v10;
          if (v20 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_17;
          }
        }
LABEL_21:
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t result = v28;
      unint64_t v22 = *(void *)(v28 + 16);
      unint64_t v21 = *(void *)(v28 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1C05F6468(v21 > 1, v22 + 1, 1);
        uint64_t result = v28;
      }
      ++v7;
      *(void *)(result + 16) = v22 + 1;
      unint64_t v23 = (void *)(result + 32 * v22);
      v23[4] = v11;
      v23[5] = v27;
      v23[6] = v9;
      v23[7] = v10;
      if (v7 == v4) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    *uint64_t v24 = v9;
    v24[1] = v10;
    void v24[2] = a3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}