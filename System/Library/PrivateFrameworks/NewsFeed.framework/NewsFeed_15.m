uint64_t sub_1C05A3CFC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned char *v12;
  uint64_t v13;
  unsigned char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned char *v17;
  uint64_t v18;
  uint64_t v20;

  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v20 = v1[3];
  v7 = *(void *)(*v1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v8 = (unsigned char *)(v5 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((void *)v8 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        v10 = v9;
        if (v2)
        {
LABEL_31:
          sub_1BFF49984(v10, 0);
          sub_1BFF49984(v9, 0);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease_n();
        }
        sub_1BFF49984(v9, 0);
        sub_1BFF49984(v9, 0);
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n();
    v11 = *(void *)(v4 + 16);
    if (v11) {
      goto LABEL_10;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = *(void *)(v4 + 16);
    if (v11)
    {
LABEL_10:
      swift_bridgeObjectRetain_n();
      v12 = (unsigned char *)(v4 + 40);
      do
      {
        if ((*v12 & 1) == 0)
        {
          v9 = *((void *)v12 - 1);
          swift_retain_n();
          sub_1C02D349C(a1);
          v10 = v9;
          if (v2) {
            goto LABEL_31;
          }
          sub_1BFF49984(v9, 0);
          sub_1BFF49984(v9, 0);
        }
        v12 += 16;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(void *)(v6 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v14 = (unsigned char *)(v6 + 40);
    while (1)
    {
      if ((*v14 & 1) == 0)
      {
        v15 = *((void *)v14 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v15, 0);
        sub_1BFF49984(v15, 0);
        if (v2) {
          break;
        }
      }
      v14 += 16;
      if (!--v13)
      {
        swift_bridgeObjectRelease_n();
        v16 = *(void *)(v20 + 16);
        if (!v16) {
          goto LABEL_30;
        }
        goto LABEL_24;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(void *)(v20 + 16);
    if (!v16)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_24:
    swift_bridgeObjectRetain_n();
    v17 = (unsigned char *)(v20 + 40);
    do
    {
      if ((*v17 & 1) == 0)
      {
        v18 = *((void *)v17 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v18, 0);
        sub_1BFF49984(v18, 0);
        if (v2) {
          break;
        }
      }
      v17 += 16;
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C05A4024(uint64_t a1)
{
  return sub_1C05A3524(a1);
}

uint64_t sub_1C05A403C(uint64_t a1)
{
  return sub_1C05A384C(a1);
}

uint64_t sub_1C05A4054(uint64_t a1)
{
  return sub_1C05A3CFC(a1);
}

uint64_t sub_1C05A406C(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  unint64_t v7 = (unint64_t)*v1 >> 62;
  if ((v7 - 2) >= 2)
  {
    if (v7)
    {
      uint64_t v12 = v4 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v12 + 16);
      unint64_t v14 = *(void *)(v12 + 24);
      uint64_t v15 = *(void *)(v13 + 16);
      if (v15)
      {
        uint64_t v18 = v1[2];
        swift_bridgeObjectRetain_n();
        v16 = (unsigned char *)(v13 + 40);
        while (1)
        {
          if ((*v16 & 1) == 0)
          {
            uint64_t v19 = *((void *)v16 - 1);
            swift_retain_n();
            sub_1C02D349C(v3);
            if (v2)
            {
              sub_1BFF49984(v19, 0);
              sub_1BFF49984(v19, 0);
              return swift_bridgeObjectRelease_n();
            }
            sub_1BFF49984(v19, 0);
            sub_1BFF49984(v19, 0);
          }
          v16 += 16;
          if (!--v15)
          {
            result = swift_bridgeObjectRelease_n();
            uint64_t v6 = v18;
            break;
          }
        }
      }
      if ((v14 >> 62) - 2 >= 2)
      {
        if (v14 >> 62)
        {
          uint64_t v17 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v19 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v20 = v17;
          result = sub_1C05A98D8(v3);
          if (v2) {
            return result;
          }
          goto LABEL_20;
        }
        if (!*(unsigned char *)(v14 + 40))
        {
          uint64_t v9 = *(void *)(v14 + 24);
          uint64_t v8 = *(void *)(v14 + 32);
          uint64_t v10 = *(void *)(v14 + 16);
          goto LABEL_5;
        }
      }
    }
    else if (!*(unsigned char *)(v4 + 40))
    {
      uint64_t v9 = *(void *)(v4 + 24);
      uint64_t v8 = *(void *)(v4 + 32);
      uint64_t v10 = *(void *)(v4 + 16);
LABEL_5:
      uint64_t v19 = v10;
      uint64_t v20 = v9;
      uint64_t v21 = v8;
      char v22 = 1;
      sub_1BFE86E48(v10, v9, v8, 0);
      result = sub_1C12ECBDC(&v19, &v22);
      if (v2) {
        return result;
      }
      uint64_t v11 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v10, v9, v11, 0);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
  }
LABEL_20:
  if ((v5 & 0xFE) != 0xC)
  {
    LOBYTE(v19) = v5;
    uint64_t v20 = v6;
    return sub_1C05A43A8(v3);
  }
  return result;
}

uint64_t sub_1C05A4290(uint64_t result)
{
  uint64_t v3 = *v1;
  unint64_t v4 = (unint64_t)*v1 >> 62;
  if ((v4 - 2) >= 2)
  {
    if (v4)
    {
      return sub_1C05A98D8(result);
    }
    else if (!*(unsigned char *)(v3 + 40))
    {
      uint64_t v6 = *(void *)(v3 + 24);
      uint64_t v5 = *(void *)(v3 + 32);
      v9[0] = *(void *)(v3 + 16);
      uint64_t v7 = v9[0];
      v9[1] = v6;
      v9[2] = v5;
      char v10 = 1;
      sub_1BFE86E48(v9[0], v6, v5, 0);
      result = sub_1C12ECBDC(v9, &v10);
      if (!v2)
      {
        uint64_t v8 = result;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v7, v6, v8, 0);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1C05A4390(uint64_t a1)
{
  return sub_1C05A406C(a1);
}

uint64_t sub_1C05A43A8(uint64_t result)
{
  unint64_t v3 = *(void *)(v1 + 8);
  if ((v3 >> 62) - 2 >= 2)
  {
    uint64_t v4 = result;
    if (v3 >> 62)
    {
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v10 = *(void *)(v9 + 16);
      unint64_t v11 = *(void *)(v9 + 24);
      uint64_t v12 = *(void *)(v10 + 16);
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v13 = (unsigned char *)(v10 + 40);
        while (1)
        {
          if ((*v13 & 1) == 0)
          {
            v15[0] = *((void *)v13 - 1);
            swift_retain_n();
            sub_1C02D349C(v4);
            if (v2)
            {
              sub_1BFF49984(v15[0], 0);
              sub_1BFF49984(v15[0], 0);
              return swift_bridgeObjectRelease_n();
            }
            sub_1BFF49984(v15[0], 0);
            sub_1BFF49984(v15[0], 0);
          }
          v13 += 16;
          if (!--v12)
          {
            result = swift_bridgeObjectRelease_n();
            break;
          }
        }
      }
      if ((v11 >> 62) - 2 < 2) {
        return result;
      }
      if (v11 >> 62) {
        return sub_1C05A98D8(v4);
      }
      if (*(unsigned char *)(v11 + 40)) {
        return result;
      }
      uint64_t v6 = *(void *)(v11 + 24);
      uint64_t v5 = *(void *)(v11 + 32);
      uint64_t v7 = *(void *)(v11 + 16);
    }
    else
    {
      if (*(unsigned char *)(v3 + 40)) {
        return result;
      }
      uint64_t v6 = *(void *)(v3 + 24);
      uint64_t v5 = *(void *)(v3 + 32);
      uint64_t v7 = *(void *)(v3 + 16);
    }
    v15[0] = v7;
    v15[1] = v6;
    v15[2] = v5;
    char v14 = 1;
    sub_1BFE86E48(v7, v6, v5, 0);
    result = sub_1C12ECBDC(v15, &v14);
    if (!v2)
    {
      uint64_t v8 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v7, v6, v8, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C05A4584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05A4A48(a1, a2, a3, (uint64_t (*)(void))sub_1C05A4290);
}

uint64_t sub_1C05A45B0(uint64_t a1)
{
  return sub_1C05A4290(a1);
}

void sub_1C05A45DC(uint64_t a1)
{
  unint64_t v3 = *(void *)v1;
  unint64_t v4 = *(void *)(v1 + 8);
  unint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v11 = *(void *)(v1 + 64);
  long long v12 = *(_OWORD *)(v1 + 72);
  long long v13 = *(_OWORD *)(v1 + 88);
  unsigned int v14 = *(unsigned __int8 *)(v1 + 106);
  unsigned int v15 = *(unsigned __int16 *)(v1 + 104);
  switch((v14 >> 2) & 4 | (v15 >> 14))
  {
    case 1u:
      unint64_t v33 = *(void *)v1;
      unint64_t v34 = v4;
      *(void *)&long long v35 = v5;
      *((void *)&v35 + 1) = v6;
      *(void *)&long long v36 = v8;
      *((void *)&v36 + 1) = v7;
      __int16 v37 = v10;
      uint64_t v17 = v9;
      uint64_t v18 = v11;
      unsigned int v19 = v15 | (v14 << 16);
      long long v29 = v13;
      long long v31 = v12;
      sub_1C02A26BC(a1);
      if (!v2 && ((v19 >> 21) & 7) == 5)
      {
        unint64_t v33 = v17;
        unint64_t v34 = v18;
        long long v35 = v31;
        long long v36 = v29;
        __int16 v37 = v19 & 0x3FFF;
        sub_1C02A26BC(a1);
      }
      break;
    case 2u:
    case 3u:
    case 4u:
      return;
    case 5u:
      if (!*(void *)(v1 + 24))
      {
        unint64_t v33 = *(void *)v1;
        unint64_t v34 = v4;
        *(void *)&long long v35 = v5;
        char v39 = 6;
        unint64_t v26 = v12;
        uint64_t v27 = v11;
        uint64_t v24 = v13;
        uint64_t v25 = *((void *)&v12 + 1);
        uint64_t v23 = *((void *)&v13 + 1);
        uint64_t v28 = v9;
        unsigned int v20 = v15 | (v14 << 16);
        long long v30 = v13;
        long long v32 = v12;
        sub_1C05D88FC(v3, v4, v5, v6, v8, v7, v10, v9, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v20);
        unsigned int v38 = v20;
        sub_1C05D88FC(v3, v4, v5, v6, v8, v7, v10, v28, v27, v32, *((uint64_t *)&v32 + 1), v30, *((uint64_t *)&v30 + 1), v20);
        uint64_t v21 = sub_1C12ECBDC((uint64_t *)&v33, &v39);
        if (!v2)
        {
          uint64_t v22 = v21;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v3, v4, v22, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1BFF77374(v3, v4, v5, v6, v8, v7, v10, v28, v27, v26, v25, v24, v23, v38);
      }
      break;
    case 6u:
      unint64_t v33 = *(void *)v1;
      unint64_t v34 = v4;
      *(void *)&long long v35 = v5;
      sub_1C05A406C(a1);
      break;
    case 7u:
      if ((*(void *)(v1 + 8) & 0xFELL) != 0xC) {
        sub_1C02D349C(a1);
      }
      break;
    default:
      unint64_t v33 = *(void *)v1;
      unint64_t v34 = v4;
      *(void *)&long long v35 = v5;
      *((void *)&v35 + 1) = v6;
      *(void *)&long long v36 = v8;
      BYTE8(v36) = v7;
      sub_1C0E470D4(a1);
      break;
  }
}

uint64_t sub_1C05A48D0(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 24))
  {
    uint64_t v4 = *(void *)v1;
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t v5 = *(void *)(v1 + 16);
    v8[0] = v4;
    v8[1] = v3;
    v8[2] = v5;
    char v9 = 6;
    sub_1BFE86E48(v4, v3, v5, 0);
    sub_1BFE86E48(v4, v3, v5, 0);
    uint64_t v6 = sub_1C12ECBDC(v8, &v9);
    if (!v2)
    {
      uint64_t v7 = v6;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v4, v3, v7, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return sub_1BFD7418C(v4, v3, v5, 0);
  }
  return result;
}

void sub_1C05A49C8(uint64_t a1)
{
}

uint64_t sub_1C05A49E0(uint64_t result)
{
  if ((*(void *)(v1 + 8) & 0xFELL) != 0xC) {
    return sub_1C02D349C(result);
  }
  return result;
}

uint64_t sub_1C05A4A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05A4A48(a1, a2, a3, (uint64_t (*)(void))sub_1C02D349C);
}

uint64_t sub_1C05A4A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if ((*v4 & 0xFELL) != 0xC) {
    return a4();
  }
  return result;
}

uint64_t sub_1C05A4A88(uint64_t a1)
{
  return sub_1C02D349C(a1);
}

void sub_1C05A4AB4(uint64_t a1)
{
}

uint64_t sub_1C05A4AF8(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(v1 + 106);
  int v5 = *(unsigned __int16 *)(v1 + 104);
  uint64_t result = sub_1C02A26BC(a1);
  if (!v2)
  {
    unsigned int v7 = (v5 | (v4 << 16)) >> 21;
    if (v7 >= 5 && v7 == 5) {
      return sub_1C02A26BC(a1);
    }
  }
  return result;
}

uint64_t sub_1C05A4BB8(uint64_t result)
{
  unsigned int v2 = *(unsigned __int8 *)(v1 + 50) >> 5;
  if (v2 >= 5 && v2 == 5) {
    return sub_1C02A26BC(result);
  }
  return result;
}

uint64_t sub_1C05A4C24(uint64_t a1)
{
  return sub_1C02A26BC(a1);
}

uint64_t sub_1C05A4C68(uint64_t a1)
{
  return sub_1C05A48D0(a1);
}

uint64_t sub_1C05A4C80(unint64_t a1)
{
  uint64_t v4 = *v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1C05550B8(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v7 = *(void *)(v4 + 40);
    swift_bridgeObjectRetain();
    sub_1C055DB28(a1, v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05A4D40(uint64_t a1)
{
  uint64_t result = sub_1C05A2814(a1);
  if (!v1) {
    return sub_1C02D349C(a1);
  }
  return result;
}

uint64_t sub_1C05A4D8C(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v5 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  if (!*(unsigned char *)(v1 + 16))
  {
    uint64_t v12 = *(void *)(v5 + 16);
    if (!v12) {
      return result;
    }
    swift_bridgeObjectRetain();
    long long v13 = (unsigned char *)(v5 + 40);
    do
    {
      if ((*v13 & 1) == 0)
      {
        uint64_t v14 = *((void *)v13 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v14, 0);
        sub_1BFF49984(v14, 0);
        if (v2) {
          break;
        }
      }
      v13 += 16;
      --v12;
    }
    while (v12);
    uint64_t v9 = v5;
    uint64_t v10 = v4;
    unsigned __int8 v11 = 0;
    return sub_1BFF9A08C(v9, v10, v11);
  }
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    if (!v6) {
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = (unsigned char *)(v5 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        uint64_t v8 = *((void *)v7 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v8, 0);
        sub_1BFF49984(v8, 0);
        if (v2) {
          break;
        }
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    uint64_t v9 = v5;
    uint64_t v10 = v4;
    unsigned __int8 v11 = 1;
    return sub_1BFF9A08C(v9, v10, v11);
  }
  return sub_1C05B1ABC(result);
}

uint64_t sub_1C05A4F04(uint64_t a1)
{
  return sub_1C05A4D8C(a1);
}

void sub_1C05A4F1C(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  uint64_t v3 = v1;
  swift_beginAccess();
  sub_1C054EE74((uint64_t)a1);
  if (!v2)
  {
    swift_beginAccess();
    unint64_t v5 = v1[6];
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v6; ++i)
      {
        unint64_t v8 = *(void *)(v5 + 8 * i + 32);
        sub_1BFF32264(v8);
        sub_1C059B1D4((uint64_t)a1);
        sub_1BFF31E90(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unint64_t v9 = v1[8];
    if (v9 >> 62 == 1)
    {
      unint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v3[8]);
      sub_1BFE6FA30(v10);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0((uint64_t)a1, v10, v11);
      sub_1BFF0056C(v10);
      swift_bridgeObjectRelease();
      sub_1BFF0056C(v9);
    }
    swift_beginAccess();
    unint64_t v12 = v3[10];
    swift_bridgeObjectRetain();
    sub_1C05550B8(a1, v12);
    swift_bridgeObjectRelease();
    sub_1C05A5258(a1);
    if ((~v3[13] & 0xF000000000000007) != 0) {
      sub_1C1131F08((uint64_t)a1);
    }
    if ((~v3[14] & 0xF000000000000007) != 0) {
      sub_1C05A5258(a1);
    }
    if ((~v3[15] & 0xF000000000000007) != 0) {
      sub_1C1131F08((uint64_t)a1);
    }
    unint64_t v13 = v3[18];
    if (v13)
    {
      swift_beginAccess();
      uint64_t v14 = *(void *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C((uint64_t)a1, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v15 = *(void *)(v13 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130((uint64_t)a1, v15);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v16 = v3[23];
    swift_bridgeObjectRetain();
    sub_1C059045C((uint64_t)a1, v16);
    swift_bridgeObjectRelease();
  }
}

void sub_1C05A5258(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (uint64_t *)&v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = &v42[-v12];
  uint64_t v14 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      uint64_t v20 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v20 + 24);
      uint64_t v23 = *(void *)(v20 + 32);
      unsigned int v24 = *(unsigned __int8 *)(v20 + 40);
      char v25 = *(unsigned char *)(v20 + 41);
      switch((4 * (v25 & 0x3F)) | (v24 >> 2) & 3)
      {
        case 1u:
        case 2u:
        case 4u:
        case 5u:
        case 8u:
          return;
        case 3u:
          goto LABEL_32;
        case 6u:
          if (v24 >> 6 > 1)
          {
            switch(v24 & 0x33333333)
            {
              case 1u:
                goto LABEL_43;
              case 2u:
                return;
              default:
                goto LABEL_42;
            }
          }
          else
          {
LABEL_32:
            if (*(void *)(v20 + 32) == 1 && (v21 & 0xF000000000000007) != 0xF000000000000007)
            {
              uint64_t v44 = *(void *)(v20 + 16);
LABEL_37:
              sub_1C1131F08((uint64_t)a1);
            }
          }
          return;
        case 7u:
          if ((v24 & 1) == 0) {
            return;
          }
          uint64_t v44 = *(void *)(v20 + 16);
          uint64_t v45 = v22;
          uint64_t v46 = v23;
          char v43 = 5;
          sub_1C05D881C(v21, v22, v23, v24, v25, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
          uint64_t v40 = sub_1C12ECBDC(&v44, &v43);
          if (v2) {
            return;
          }
          uint64_t v41 = v40;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v21, v22, v41, 0);
          swift_bridgeObjectRelease();
          break;
        default:
          switch((v24 >> 4) & 3)
          {
            case 1u:
              return;
            case 3u:
              if (v24 >> 6 < 2) {
                goto LABEL_32;
              }
              switch(v24 & 0xF)
              {
                case 1u:
LABEL_43:
                  if ((~v22 & 0xF000000000000007) != 0)
                  {
                    uint64_t v44 = *(void *)(v20 + 24);
                    goto LABEL_37;
                  }
                  break;
                case 2u:
                  return;
                default:
LABEL_42:
                  sub_1C05D881C(v21, v22, v23, v24, v25, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C05D881C(v21, v22, v23, v24, v25, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  break;
              }
              break;
            default:
              goto LABEL_32;
          }
          return;
      }
      goto LABEL_20;
    case 2uLL:
      uint64_t v26 = swift_projectBox();
      sub_1BFF83CC4(v26, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      sub_1BFF83CC4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v34 = *v10;
          uint64_t v35 = v10[1];
          uint64_t v36 = v10[2];
          uint64_t v44 = v34;
          uint64_t v45 = v35;
          uint64_t v46 = v36;
          char v43 = 6;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v37 = sub_1C12ECBDC(&v44, &v43);
          if (!v2)
          {
            uint64_t v38 = v37;
            swift_bridgeObjectRelease();
            sub_1C0F49260(v34, v35, v38, 0);
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C05DDC60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      }
      long long v32 = type metadata accessor for FormatCommandOpenURL;
      uint64_t v33 = (uint64_t)v13;
      goto LABEL_29;
    case 3uLL:
    case 5uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
      return;
    case 4uLL:
      uint64_t v28 = v14 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v30 = *(void *)(v28 + 16);
      uint64_t v29 = *(void *)(v28 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C058E464(a1, v30);
      if (!v2)
      {
        uint64_t v44 = v29;
        sub_1C05A5258(a1);
      }
      swift_release();
LABEL_20:
      swift_bridgeObjectRelease();
      return;
    case 6uLL:
      uint64_t v31 = swift_projectBox();
      sub_1BFF83CC4(v31, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction);
      sub_1C05A5C50((uint64_t)a1);
      long long v32 = type metadata accessor for FormatPurchaseAction;
      uint64_t v33 = (uint64_t)v7;
LABEL_29:
      sub_1C05DDC60(v33, (uint64_t (*)(void))v32);
      return;
    default:
      uint64_t v16 = *(void *)(v14 + 16);
      uint64_t v15 = *(void *)(v14 + 24);
      if (!v16) {
        goto LABEL_8;
      }
      uint64_t v17 = *(void *)(v16 + 16);
      if (!v17) {
        goto LABEL_8;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = 0;
      break;
  }
  do
  {
    unint64_t v19 = *(void *)(v16 + 8 * v18 + 32);
    swift_retain();
    sub_1C05B2F2C(a1, v19);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    ++v18;
    swift_release();
  }
  while (v17 != v18);
  swift_bridgeObjectRelease();
LABEL_8:
  if (v15) {
    sub_1C056E12C(a1, v15);
  }
}

void sub_1C05A588C(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
}

void sub_1C05A58B0(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  uint64_t v3 = v2;
  uint64_t v6 = *v1;
  uint64_t v5 = v1[1];
  if (*v1 && (uint64_t v7 = *(void *)(v6 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      unint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
      swift_retain();
      sub_1C05B2F2C(a1, v9);
      if (v3) {
        break;
      }
      ++v8;
      swift_release();
      if (v7 == v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    if (v5) {
      sub_1C056E12C(a1, v5);
    }
  }
}

void sub_1C05A5980(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  unsigned int v7 = *(unsigned __int8 *)(v3 + 40);
  char v8 = *(unsigned char *)(v3 + 41);
  switch((4 * (v8 & 0x3F)) | (v7 >> 2) & 3)
  {
    case 1u:
    case 2u:
    case 4u:
    case 5u:
    case 8u:
      return;
    case 3u:
      goto LABEL_7;
    case 6u:
      if (v7 >> 6 > 1)
      {
        switch(v7 & 0x33333333)
        {
          case 1u:
            goto LABEL_18;
          case 2u:
            return;
          default:
            goto LABEL_17;
        }
      }
      else
      {
LABEL_7:
        if (*(void *)(v3 + 32) == 1 && (v4 & 0xF000000000000007) != 0xF000000000000007)
        {
          v13[0] = v4;
LABEL_12:
          sub_1C1131F08(a1);
        }
      }
      break;
    case 7u:
      if (v7)
      {
        v13[0] = v4;
        v13[1] = v5;
        v13[2] = v6;
        char v12 = 5;
        sub_1C05D881C(v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
        uint64_t v10 = sub_1C12ECBDC(v13, &v12);
        if (!v2)
        {
          uint64_t v11 = v10;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v4, v5, v11, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      switch((v7 >> 4) & 3)
      {
        case 1u:
          return;
        case 3u:
          if (v7 >> 6 < 2) {
            goto LABEL_7;
          }
          switch(v7 & 0xF)
          {
            case 1u:
LABEL_18:
              if ((~v5 & 0xF000000000000007) != 0)
              {
                v13[0] = *(void *)(v3 + 24);
                goto LABEL_12;
              }
              break;
            case 2u:
              return;
            default:
LABEL_17:
              sub_1C05D881C(v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C05D881C(v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              break;
          }
          break;
        default:
          goto LABEL_7;
      }
      break;
  }
}

uint64_t sub_1C05A5C50(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v1 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v43 - v7;
  uint64_t v9 = type metadata accessor for FormatURL();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v45 = (uint64_t)&v43 - v12;
  uint64_t v13 = type metadata accessor for FormatPostPurchase();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v23 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1F4188790](v23);
  char v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF83CC4(v50, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  uint64_t v27 = v51;
  switch((int)result)
  {
    case 1:
      sub_1C05DD778((uint64_t)v25, (uint64_t)v8, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v31 = v48;
      sub_1BFFA1314((uint64_t)v8, v48, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v32 = type metadata accessor for FormatPurchaseLandingPage();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32) == 1)
      {
        uint64_t v28 = type metadata accessor for FormatPurchaseLandingPage;
        sub_1C05DDCC0((uint64_t)v8, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        uint64_t v29 = v31;
        uint64_t v30 = &qword_1EB87BA78;
        return sub_1C05DDCC0(v29, v30, (void (*)(uint64_t))v28);
      }
      sub_1C05BC838();
      sub_1C05DDCC0((uint64_t)v8, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v33 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseLandingPage;
      uint64_t v34 = v31;
      return sub_1C05DDC60(v34, v33);
    case 2:
      sub_1BFCCD5B8((uint64_t)v25, (uint64_t)v3, type metadata accessor for FormatOsloSheetPurchaseDataModel);
      sub_1C05BA430(v49);
      uint64_t v33 = type metadata accessor for FormatOsloSheetPurchaseDataModel;
      uint64_t v34 = (uint64_t)v3;
      return sub_1C05DDC60(v34, v33);
    case 3:
    case 4:
      return result;
    default:
      sub_1C05DD778((uint64_t)v25, (uint64_t)v22, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      sub_1BFFA1314((uint64_t)v22, (uint64_t)v19, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
      {
        uint64_t v28 = type metadata accessor for FormatPostPurchase;
        sub_1C05DDCC0((uint64_t)v22, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        uint64_t v29 = (uint64_t)v19;
        uint64_t v30 = &qword_1EB87EBC8;
        return sub_1C05DDCC0(v29, v30, (void (*)(uint64_t))v28);
      }
      else
      {
        sub_1BFF83CC4((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v16, 2, v47))
        {
          uint64_t v35 = v45;
          sub_1BFCCD5B8((uint64_t)v16, v45, (uint64_t (*)(void))type metadata accessor for FormatURL);
          uint64_t v36 = v44;
          sub_1BFF83CC4(v35, v44, (uint64_t (*)(void))type metadata accessor for FormatURL);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else if (!*(unsigned char *)(v36 + 24))
            {
              uint64_t v38 = *(void *)(v36 + 8);
              uint64_t v40 = *(void *)(v36 + 16);
              v52[0] = *(void *)v36;
              uint64_t v39 = v52[0];
              v52[1] = v38;
              v52[2] = v40;
              char v53 = 6;
              sub_1BFE86E48(v52[0], v38, v40, 0);
              uint64_t v41 = sub_1C12ECBDC(v52, &v53);
              if (!v27)
              {
                uint64_t v42 = v41;
                swift_bridgeObjectRetain();
                sub_1C0F49260(v39, v38, v42, 0);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1BFD7418C(v39, v38, v40, 0);
            }
          }
          else
          {
            sub_1C05DDC60(v36, (uint64_t (*)(void))type metadata accessor for FormatURL);
          }
          sub_1C05DDC60(v35, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        sub_1C05DDCC0((uint64_t)v22, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        uint64_t v33 = (uint64_t (*)(void))type metadata accessor for FormatPostPurchase;
        uint64_t v34 = (uint64_t)v19;
        return sub_1C05DDC60(v34, v33);
      }
  }
}

void sub_1C05A6384(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
}

void sub_1C05A639C(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  if (!*(unsigned char *)(v1 + 56))
  {
    unint64_t v27 = v10 & 0xF000000000000007;
    if ((v10 & 0xF000000000000007) == 0xD000000000000007) {
      return;
    }
    uint64_t v28 = v8;
    if ((~v4 & 0xF000000000000007) != 0)
    {
      sub_1BFF8B7D0(v4, v5, v7, v6, v9, v8, v10, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t))sub_1BFEF683C);
      sub_1C05A2814(a1);
      if (v2)
      {
LABEL_16:
        uint64_t v19 = v4;
        uint64_t v20 = v5;
        uint64_t v21 = v7;
        uint64_t v22 = v6;
        uint64_t v23 = v9;
        uint64_t v24 = v28;
        uint64_t v25 = v10;
        char v26 = 0;
LABEL_17:
        sub_1BFF8B764(v19, v20, v21, v22, v23, v24, v25, v26);
        return;
      }
      unint64_t v27 = v10 & 0xF000000000000007;
    }
    else
    {
      sub_1BFF8B7D0(v4, v5, v7, v6, v9, v8, v10, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t))sub_1BFEF683C);
    }
    if (v27 != 0xF000000000000007) {
      sub_1C02D349C(a1);
    }
    goto LABEL_16;
  }
  unint64_t v11 = v4 & 0xF000000000000007;
  if (*(unsigned char *)(v1 + 56) == 1 && v11 != 0xD000000000000007)
  {
    if (v11 != 0xF000000000000007)
    {
      sub_1C02D349C(a1);
      return;
    }
    uint64_t v13 = *(void *)v1;
    uint64_t v14 = *(void *)(v1 + 8);
    uint64_t v15 = *(void *)(v1 + 16);
    uint64_t v16 = *(void *)(v1 + 24);
    uint64_t v17 = *(void *)(v1 + 32);
    uint64_t v18 = *(void *)(v1 + 40);
    sub_1BFF8B764(v13, v14, v15, v16, v17, v8, v10, 1);
    uint64_t v19 = v4;
    uint64_t v20 = v5;
    uint64_t v21 = v7;
    uint64_t v22 = v6;
    uint64_t v23 = v9;
    uint64_t v24 = v18;
    uint64_t v25 = v10;
    char v26 = 1;
    goto LABEL_17;
  }
}

void sub_1C05A65A8(uint64_t a1)
{
}

uint64_t sub_1C05A65C0(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = v1[6];
  if ((~*v1 & 0xF000000000000007) == 0 || (uint64_t result = sub_1C05A2814(result), !v2))
  {
    if ((~v4 & 0xF000000000000007) != 0) {
      return sub_1C02D349C(v3);
    }
  }
  return result;
}

uint64_t sub_1C05A6630(uint64_t result)
{
  if ((~*v1 & 0xF000000000000007) != 0) {
    return sub_1C02D349C(result);
  }
  return result;
}

uint64_t sub_1C05A6668(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t result = sub_1C05A2814(a1);
  if (!v2) {
    return sub_1C054F7D4(a1, v4);
  }
  return result;
}

uint64_t sub_1C05A66B0(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24) == 3)
  {
    uint64_t v5 = *(void *)v1;
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v6 = *(void *)(v1 + 16);
    v11[0] = v5;
    v11[1] = v4;
    v11[2] = v6;
    char v10 = 7;
    sub_1BFF67F78(v5, v4, v6, 3);
    sub_1BFF67F78(v5, v4, v6, 3);
    uint64_t v7 = sub_1C12ECBDC(v11, &v10);
    if (v2) {
      return sub_1BFF05CCC(v5, v4, v6, 3);
    }
    uint64_t v9 = v7;
    swift_bridgeObjectRetain();
    sub_1C0F49260(v5, v4, v9, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF05CCC(v5, v4, v6, 3);
  }
  sub_1C05DD2A8(v1 + 32, (uint64_t)v12);
  sub_1C05DD2A8((uint64_t)v12, (uint64_t)v11);
  return sub_1C05A2814(a1);
}

uint64_t sub_1C05A67F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C05A2814(a1);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1C054F7D4(a1, a3);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1C05A2814(a1);
  }
}

uint64_t sub_1C05A68BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), void (*a6)(uint64_t))
{
  swift_retain();
  swift_bridgeObjectRetain();
  a5(a1);
  if (v6)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C059A9D0(a1, a3, a6);
    swift_release();
    swift_bridgeObjectRelease_n();
    return ((uint64_t (*)(uint64_t))a5)(a1);
  }
}

uint64_t sub_1C05A69A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (!v4) {
    return ((uint64_t (*)(uint64_t))a4)(a1);
  }
  return result;
}

uint64_t sub_1C05A6A08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 16);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v11, v13);
  sub_1BFC845BC(0, &qword_1EA19C000);
  if (swift_dynamicCast())
  {
    uint64_t v25 = v3;
    uint64_t v16 = v5;
    uint64_t v18 = *((void *)&v27 + 1);
    uint64_t v17 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    uint64_t v19 = v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 8))(v16, v18, v17);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
    if (v19) {
      return result;
    }
    uint64_t v5 = v16;
    uint64_t v3 = v25;
  }
  else
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
    sub_1BFE4D118((uint64_t)&v26, &qword_1EA19C008, &qword_1EA19C000);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3 + *(int *)(a2 + 52), v6);
  if (swift_dynamicCast())
  {
    uint64_t v21 = v5;
    uint64_t v22 = *((void *)&v27 + 1);
    uint64_t v23 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 8))(v21, v22, v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
    return sub_1BFE4D118((uint64_t)&v26, &qword_1EA19C008, &qword_1EA19C000);
  }
}

uint64_t sub_1C05A6CD4(uint64_t a1)
{
  return sub_1C05A2814(a1);
}

uint64_t sub_1C05A6CEC(uint64_t result)
{
  uint64_t v3 = result;
  switch(*v1 >> 61)
  {
    case 2:
      uint64_t result = sub_1C05A6CEC(result);
      break;
    case 3:
      return result;
    case 4:
      swift_retain();
      swift_retain();
      sub_1C05A2814(v3);
      if (v2) {
        goto LABEL_4;
      }
      goto LABEL_3;
    default:
      swift_retain();
      swift_retain();
      sub_1C05A6CEC(v3);
      if (!v2) {
LABEL_3:
      }
        sub_1C05A6CEC(v3);
LABEL_4:
      swift_release();
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1C05A6E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C3F8C(a1, a2, a3, (uint64_t (*)(void))sub_1C05A6CEC, sub_1C05A6CEC);
}

uint64_t sub_1C05A6E70(uint64_t a1)
{
  return sub_1C05A2814(a1);
}

uint64_t sub_1C05A6E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C3F8C(a1, a2, a3, (uint64_t (*)(void))sub_1C05A2814, sub_1C05A6CEC);
}

uint64_t sub_1C05A6EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C405C(a1, a2, a3, (uint64_t (*)(void))sub_1C05A6CEC, sub_1C054F7D4);
}

uint64_t sub_1C05A6F1C(uint64_t a1)
{
  return sub_1C05A6CEC(a1);
}

uint64_t sub_1C05A6F34(uint64_t a1)
{
  return sub_1C05A6CEC(a1);
}

uint64_t sub_1C05A6F60(uint64_t result)
{
  uint64_t v3 = result;
  switch(*v1 >> 61)
  {
    case 2:
      uint64_t v4 = *(void *)((*v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05A6CEC(v3);
      if (!v2) {
        sub_1C054F7D4(v3, v4);
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    case 3:
    case 4:
      uint64_t result = sub_1C05A2814(result);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05A7058(uint64_t a1)
{
  return sub_1C05A6F60(a1);
}

uint64_t sub_1C05A7070(uint64_t a1)
{
  return sub_1C059BDEC(a1);
}

void sub_1C05A70AC(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  unsigned int v6 = *(unsigned __int8 *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 25);
  switch((4 * v7) | (*(unsigned char *)(v1 + 24) >> 2) & 3)
  {
    case 1:
    case 2:
    case 4:
    case 5:
    case 8:
      return;
    case 3:
      if (*(void *)(v1 + 16) == 1 && (v4 & 0xF000000000000007) != 0xF000000000000007)
      {
LABEL_8:
        uint64_t v11 = *(void *)v1;
LABEL_9:
        sub_1C1131F08(a1);
      }
      break;
    case 6:
      if (v6 >> 6)
      {
        if (v6 >> 6 == 1)
        {
          switch(*(void *)(v1 + 16))
          {
            case 1u:
              goto LABEL_20;
            case 2u:
              return;
            default:
              goto LABEL_17;
          }
        }
        else
        {
          switch(v6 & 0x33333333)
          {
            case 1u:
              if ((~v3 & 0xF000000000000007) != 0)
              {
                uint64_t v11 = *(void *)(v1 + 8);
                goto LABEL_9;
              }
              break;
            case 2u:
              return;
            default:
              sub_1C05D881C(v4, v3, v5, v6, v7, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C05D881C(v4, v3, v5, v6, v7, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C00AB750(v4, v3, v5, v6 & 0xF3, (uint64_t (*)(void))sub_1C002B840);
              break;
          }
        }
      }
      else
      {
        switch(*(void *)(v1 + 16))
        {
          case 1u:
LABEL_20:
            if ((~v4 & 0xF000000000000007) != 0) {
              goto LABEL_8;
            }
            break;
          case 2u:
            return;
          default:
LABEL_17:
            sub_1C05D881C(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(unsigned char *)(v1 + 25), (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            break;
        }
      }
      break;
    case 7:
      if (v6)
      {
        uint64_t v11 = *(void *)v1;
        uint64_t v12 = v3;
        uint64_t v13 = v5;
        char v15 = 5;
        sub_1C05D881C(v4, v3, v5, v6, v7, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
        uint64_t v9 = sub_1C12ECBDC(&v11, &v15);
        if (!v2)
        {
          uint64_t v10 = v9;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v4, v3, v10, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      uint64_t v11 = *(void *)v1;
      uint64_t v12 = v3;
      uint64_t v13 = v5;
      char v14 = v6;
      sub_1C05A8548(a1);
      break;
  }
}

void sub_1C05A740C(uint64_t a1)
{
}

uint64_t sub_1C05A7454(uint64_t a1, void *a2)
{
  uint64_t v11 = a2;
  sub_1BFC3D764();
  sub_1BFC845BC(0, &qword_1EA19C000);
  id v4 = a2;
  if (swift_dynamicCast())
  {
    uint64_t v5 = *((void *)&v9 + 1);
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, v5, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    return sub_1BFE4D118((uint64_t)&v8, &qword_1EA19C008, &qword_1EA19C000);
  }
}

uint64_t sub_1C05A755C(uint64_t a1)
{
  return sub_1C054E5E0(a1);
}

uint64_t sub_1C05A7580(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (a5 < 0)
  {
    uint64_t v105 = result;
    uint64_t v7 = *(void *)((a5 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v8 = *(void *)(v7 + 24);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      swift_retain();
      uint64_t v104 = v7;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v10 = (void *)(v8 + 56);
      do
      {
        uint64_t v11 = *(v10 - 3);
        uint64_t v12 = *(v10 - 2);
        uint64_t v13 = *((unsigned __int8 *)v10 - 8);
        uint64_t v14 = *v10;
        sub_1BFF5B7E0(v11, v12, *((unsigned char *)v10 - 8));
        swift_retain();
        sub_1C05A7580(v105, v11, v12, v13, v14);
        if (v5)
        {
          sub_1BFF5B7CC(v11, v12, v13);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release();
        }
        v10 += 4;
        sub_1BFF5B7CC(v11, v12, v13);
        swift_release();
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(v104 + 32);
      if ((v15 & 0x8000000000000000) == 0) {
        goto LABEL_93;
      }
    }
    else
    {
      swift_retain();
      swift_retain();
      uint64_t v15 = *(void *)(v7 + 32);
      if ((v15 & 0x8000000000000000) == 0)
      {
LABEL_93:
        swift_release();
        return swift_release();
      }
    }
    uint64_t v16 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v17 = *(void *)(v16 + 24);
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      swift_retain();
      uint64_t v103 = v16;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v19 = (void *)(v17 + 56);
      do
      {
        uint64_t v21 = *(v19 - 3);
        uint64_t v20 = *(v19 - 2);
        uint64_t v22 = *((unsigned __int8 *)v19 - 8);
        uint64_t v23 = *v19;
        sub_1BFF5B7E0(v21, v20, *((unsigned char *)v19 - 8));
        swift_retain();
        sub_1C05A7580(v105, v21, v20, v22, v23);
        if (v5)
        {
          sub_1BFF5B7CC(v21, v20, v22);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_113;
        }
        v19 += 4;
        sub_1BFF5B7CC(v21, v20, v22);
        swift_release();
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(v103 + 32);
      if ((v24 & 0x8000000000000000) == 0) {
        goto LABEL_92;
      }
    }
    else
    {
      swift_retain();
      swift_retain();
      uint64_t v24 = *(void *)(v16 + 32);
      if ((v24 & 0x8000000000000000) == 0)
      {
LABEL_92:
        swift_release();
        swift_release();
        goto LABEL_93;
      }
    }
    uint64_t v25 = *(void *)((v24 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v26 = *(void *)(v25 + 24);
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      swift_retain();
      uint64_t v102 = v25;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v28 = (void *)(v26 + 56);
      while (1)
      {
        uint64_t v29 = *(v28 - 3);
        uint64_t v30 = *(v28 - 2);
        uint64_t v31 = *((unsigned __int8 *)v28 - 8);
        uint64_t v32 = *v28;
        sub_1BFF5B7E0(v29, v30, *((unsigned char *)v28 - 8));
        swift_retain();
        sub_1C05A7580(v105, v29, v30, v31, v32);
        if (v5) {
          break;
        }
        v28 += 4;
        sub_1BFF5B7CC(v29, v30, v31);
        swift_release();
        if (!--v27)
        {
          swift_bridgeObjectRelease();
          uint64_t v25 = v102;
          goto LABEL_24;
        }
      }
      sub_1BFF5B7CC(v29, v30, v31);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_112:
      swift_release();
      swift_release();
LABEL_113:
      swift_release();
      swift_release();
      return swift_release();
    }
    swift_retain();
    swift_retain();
LABEL_24:
    uint64_t v33 = *(void *)(v25 + 32);
    if ((v33 & 0x8000000000000000) == 0)
    {
LABEL_91:
      swift_release();
      swift_release();
      goto LABEL_92;
    }
    uint64_t v34 = *(void *)((v33 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v35 = *(void *)(v34 + 24);
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v37 = (void *)(v35 + 56);
      while (1)
      {
        uint64_t v38 = *(v37 - 3);
        uint64_t v39 = *(v37 - 2);
        uint64_t v40 = *((unsigned __int8 *)v37 - 8);
        uint64_t v41 = *v37;
        sub_1BFF5B7E0(v38, v39, *((unsigned char *)v37 - 8));
        swift_retain();
        sub_1C05A7580(v105, v38, v39, v40, v41);
        if (v6) {
          break;
        }
        v37 += 4;
        sub_1BFF5B7CC(v38, v39, v40);
        swift_release();
        if (!--v36)
        {
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
      sub_1BFF5B7CC(v38, v39, v40);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_111;
    }
    swift_retain();
    swift_retain();
LABEL_32:
    uint64_t v42 = *(void *)(v34 + 32);
    if ((v42 & 0x8000000000000000) == 0)
    {
      swift_release();
LABEL_90:
      swift_release();
      goto LABEL_91;
    }
    uint64_t v43 = *(void *)((v42 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v44 = *(void *)(*(void *)(v43 + 24) + 16);
    if (v44)
    {
      uint64_t v45 = *(void *)(v43 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v46 = (void *)(v45 + 56);
      while (1)
      {
        uint64_t v47 = *(v46 - 3);
        uint64_t v48 = *(v46 - 2);
        uint64_t v49 = *((unsigned __int8 *)v46 - 8);
        uint64_t v50 = *v46;
        sub_1BFF5B7E0(v47, v48, *((unsigned char *)v46 - 8));
        swift_retain();
        sub_1C05A7580(v105, v47, v48, v49, v50);
        if (v6) {
          break;
        }
        v46 += 4;
        sub_1BFF5B7CC(v47, v48, v49);
        swift_release();
        if (!--v44)
        {
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
      }
      sub_1BFF5B7CC(v47, v48, v49);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_110;
    }
    swift_retain();
    swift_retain();
LABEL_41:
    uint64_t v51 = *(void *)(v43 + 32);
    if ((v51 & 0x8000000000000000) == 0)
    {
LABEL_89:
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_90;
    }
    uint64_t v52 = *(void *)((v51 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v53 = *(void *)(*(void *)(v52 + 24) + 16);
    if (v53)
    {
      uint64_t v54 = *(void *)(v52 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v55 = (void *)(v54 + 56);
      while (1)
      {
        uint64_t v56 = *(v55 - 3);
        uint64_t v57 = *(v55 - 2);
        uint64_t v58 = *((unsigned __int8 *)v55 - 8);
        uint64_t v59 = *v55;
        sub_1BFF5B7E0(v56, v57, *((unsigned char *)v55 - 8));
        swift_retain();
        sub_1C05A7580(v105, v56, v57, v58, v59);
        if (v6) {
          break;
        }
        v55 += 4;
        sub_1BFF5B7CC(v56, v57, v58);
        swift_release();
        if (!--v53)
        {
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
      }
      sub_1BFF5B7CC(v56, v57, v58);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_109;
    }
    swift_retain();
    swift_retain();
LABEL_50:
    uint64_t v60 = *(void *)(v52 + 32);
    if ((v60 & 0x8000000000000000) == 0)
    {
      swift_release();
      swift_release();
      goto LABEL_89;
    }
    uint64_t v61 = *(void *)(*(void *)((v60 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 24);
    uint64_t v62 = *(void *)(v61 + 16);
    uint64_t v101 = *(void *)((v60 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    if (v62)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v63 = (void *)(v61 + 56);
      while (1)
      {
        uint64_t v64 = *(v63 - 3);
        uint64_t v65 = *(v63 - 2);
        uint64_t v66 = *((unsigned __int8 *)v63 - 8);
        uint64_t v67 = *v63;
        sub_1BFF5B7E0(v64, v65, *((unsigned char *)v63 - 8));
        swift_retain();
        sub_1C05A7580(v105, v64, v65, v66, v67);
        if (v6) {
          break;
        }
        v63 += 4;
        sub_1BFF5B7CC(v64, v65, v66);
        swift_release();
        if (!--v62)
        {
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
      }
      sub_1BFF5B7CC(v64, v65, v66);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
    swift_retain();
    swift_retain();
LABEL_59:
    uint64_t v68 = *(void *)(v101 + 32);
    if ((v68 & 0x8000000000000000) == 0)
    {
LABEL_88:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_89;
    }
    uint64_t v100 = *(void *)((v68 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v69 = *(void *)(v100 + 24);
    uint64_t v70 = *(void *)(v69 + 16);
    if (v70)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v71 = (void *)(v69 + 56);
      while (1)
      {
        uint64_t v72 = *(v71 - 3);
        uint64_t v73 = *(v71 - 2);
        uint64_t v74 = *((unsigned __int8 *)v71 - 8);
        uint64_t v75 = *v71;
        sub_1BFF5B7E0(v72, v73, *((unsigned char *)v71 - 8));
        swift_retain();
        sub_1C05A7580(v105, v72, v73, v74, v75);
        if (v6) {
          break;
        }
        v71 += 4;
        sub_1BFF5B7CC(v72, v73, v74);
        swift_release();
        if (!--v70)
        {
          swift_bridgeObjectRelease();
          goto LABEL_67;
        }
      }
      sub_1BFF5B7CC(v72, v73, v74);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    }
    swift_retain();
    swift_retain();
LABEL_67:
    uint64_t v76 = *(void *)(v100 + 32);
    if ((v76 & 0x8000000000000000) == 0)
    {
LABEL_87:
      swift_release();
      swift_release();
      goto LABEL_88;
    }
    uint64_t v99 = *(void *)((v76 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v77 = *(void *)(*(void *)(v99 + 24) + 16);
    if (v77)
    {
      uint64_t v78 = *(void *)(v99 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v79 = (void *)(v78 + 56);
      while (1)
      {
        uint64_t v80 = *(v79 - 3);
        uint64_t v81 = *(v79 - 2);
        uint64_t v82 = *((unsigned __int8 *)v79 - 8);
        uint64_t v83 = *v79;
        sub_1BFF5B7E0(v80, v81, *((unsigned char *)v79 - 8));
        swift_retain();
        sub_1C05A7580(v105, v80, v81, v82, v83);
        if (v6) {
          break;
        }
        v79 += 4;
        sub_1BFF5B7CC(v80, v81, v82);
        swift_release();
        if (!--v77)
        {
          swift_bridgeObjectRelease();
          goto LABEL_75;
        }
      }
      sub_1BFF5B7CC(v80, v81, v82);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    swift_retain();
    swift_retain();
LABEL_75:
    uint64_t v84 = *(void *)(v99 + 32);
    if ((v84 & 0x8000000000000000) == 0)
    {
LABEL_86:
      swift_release();
      swift_release();
      goto LABEL_87;
    }
    uint64_t v98 = *(void *)((v84 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v85 = *(void *)(*(void *)(v98 + 24) + 16);
    if (v85)
    {
      swift_retain();
      swift_retain();
      v86 = (void *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        uint64_t v87 = *(v86 - 3);
        uint64_t v88 = *(v86 - 2);
        uint64_t v89 = *((unsigned __int8 *)v86 - 8);
        uint64_t v90 = *v86;
        sub_1BFF5B7E0(v87, v88, *((unsigned char *)v86 - 8));
        swift_retain();
        sub_1C05A7580(v105, v87, v88, v89, v90);
        if (v6) {
          break;
        }
        v86 += 4;
        sub_1BFF5B7CC(v87, v88, v89);
        swift_release();
        if (!--v85)
        {
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
      }
      sub_1BFF5B7CC(v87, v88, v89);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
LABEL_84:
      uint64_t v91 = *(void *)(v98 + 32);
      if ((v91 & 0x8000000000000000) == 0)
      {
        swift_release();
        swift_release();
        goto LABEL_86;
      }
      uint64_t v92 = *(void *)(*(void *)(*(void *)((v91 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 24) + 16);
      if (!v92)
      {
        swift_retain();
        swift_retain();
LABEL_101:
        sub_1C054E698(v105, &type metadata for FormatAccessibilityData, &off_1F1BA9D00);
        if (!v6)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_86;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_105:
        swift_release();
LABEL_106:
        swift_release();
        swift_release();
LABEL_107:
        swift_release();
        swift_release();
LABEL_108:
        swift_release();
        swift_release();
LABEL_109:
        swift_release();
        swift_release();
LABEL_110:
        swift_release();
        swift_release();
LABEL_111:
        swift_release();
        swift_release();
        goto LABEL_112;
      }
      swift_retain();
      swift_retain();
      v93 = (void *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        uint64_t v94 = *(v93 - 3);
        uint64_t v95 = *(v93 - 2);
        uint64_t v96 = *((unsigned __int8 *)v93 - 8);
        uint64_t v97 = *v93;
        sub_1BFF5B7E0(v94, v95, *((unsigned char *)v93 - 8));
        swift_retain();
        sub_1C05A7580(v105, v94, v95, v96, v97);
        if (v6) {
          break;
        }
        v93 += 4;
        sub_1BFF5B7CC(v94, v95, v96);
        swift_release();
        if (!--v92)
        {
          swift_bridgeObjectRelease();
          goto LABEL_101;
        }
      }
      sub_1BFF5B7CC(v94, v95, v96);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_bridgeObjectRelease();
    goto LABEL_105;
  }
  return result;
}

uint64_t sub_1C05A83B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  __n128 v5 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(int *)(v7 + 28), v4, v5);
  sub_1BFC845BC(0, &qword_1EA19C000);
  if (swift_dynamicCast())
  {
    uint64_t v9 = *((void *)&v13 + 1);
    uint64_t v10 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v9, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    return sub_1BFE4D118((uint64_t)&v12, &qword_1EA19C008, &qword_1EA19C000);
  }
}

uint64_t sub_1C05A8530(uint64_t a1, uint64_t a2)
{
  return sub_1C05A83B8(a1, a2);
}

void sub_1C05A8548(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  unsigned int v5 = *(unsigned __int8 *)(v1 + 24);
  switch((v5 >> 4) & 3)
  {
    case 1u:
      return;
    case 3u:
      if (v5 >> 6)
      {
        if (v5 >> 6 == 1)
        {
          switch(*(void *)(v1 + 16))
          {
            case 1u:
              goto LABEL_14;
            case 2u:
              return;
            default:
              goto LABEL_11;
          }
        }
        else
        {
          switch(v5 & 0xF)
          {
            case 1u:
              if ((~v2 & 0xF000000000000007) != 0) {
                goto LABEL_6;
              }
              break;
            case 2u:
              return;
            default:
              sub_1C00AB700(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB700(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB750(v3, v2, v4, v5 & 0xCF, (uint64_t (*)(void))sub_1C002B840);
              break;
          }
        }
      }
      else
      {
        switch(*(void *)(v1 + 16))
        {
          case 1u:
LABEL_14:
            if ((~v3 & 0xF000000000000007) != 0) {
              goto LABEL_6;
            }
            break;
          case 2u:
            return;
          default:
LABEL_11:
            sub_1C00AB700(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
            break;
        }
      }
      break;
    default:
      if (*(void *)(v1 + 16) == 1 && (v3 & 0xF000000000000007) != 0xF000000000000007) {
LABEL_6:
      }
        sub_1C1131F08(a1);
      break;
  }
}

void sub_1C05A8760(uint64_t a1)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  unsigned int v4 = *(unsigned __int8 *)(v1 + 24);
  if (v4 >> 6 > 1)
  {
    uint64_t v6 = *(void *)(v1 + 8);
    switch(v4 & 0x3F)
    {
      case 1u:
        if ((~v6 & 0xF000000000000007) != 0) {
          goto LABEL_6;
        }
        break;
      case 2u:
        return;
      default:
        sub_1C00AB750(v2, v6, v3, v4, (uint64_t (*)(void))sub_1C002B840);
        sub_1C00AB750(v2, v6, v3, v4, (uint64_t (*)(void))sub_1C002B840);
        break;
    }
  }
  else if (*(void *)(v1 + 16) == 1 && (v2 & 0xF000000000000007) != 0xF000000000000007)
  {
LABEL_6:
    sub_1C1131F08(a1);
  }
}

uint64_t sub_1C05A8878(uint64_t result)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v5 = *(void *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    char v7 = 5;
    sub_1BFDEB94C(v5, v4, v3, 1);
    uint64_t result = sub_1C12ECBDC(v8, &v7);
    if (!v2)
    {
      uint64_t v6 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1C05A8940(uint64_t a1)
{
}

void sub_1C05A8958(uint64_t a1)
{
}

uint64_t sub_1C05A8970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  __n128 v5 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(int *)(v7 + 44), v4, v5);
  sub_1BFC845BC(0, &qword_1EA19C000);
  if (swift_dynamicCast())
  {
    uint64_t v9 = *((void *)&v13 + 1);
    uint64_t v10 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v9, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    return sub_1BFE4D118((uint64_t)&v12, &qword_1EA19C008, &qword_1EA19C000);
  }
}

uint64_t sub_1C05A8AE8(uint64_t a1, uint64_t a2)
{
  return sub_1C05A8970(a1, a2);
}

void sub_1C05A8B00(uint64_t a1)
{
}

uint64_t sub_1C05A8B18(unint64_t a1)
{
  unint64_t v38 = a1;
  sub_1BFF7185C(0, &qword_1EB88E9A8, (void (*)(void))sub_1C006F9DC);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v37 = (uint64_t)&v33 - v4;
  sub_1BFF7185C(0, &qword_1EB88E9B0, (void (*)(void))sub_1C0084C58);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v36 = (uint64_t)&v33 - v6;
  sub_1BFF7185C(0, &qword_1EB88E998, (void (*)(void))sub_1C00738F0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v35 = (uint64_t)&v33 - v8;
  sub_1BFF7185C(0, &qword_1EB88E9A0, (void (*)(void))sub_1C0036630);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v34 = (uint64_t)&v33 - v10;
  sub_1BFF7185C(0, &qword_1EB88E9B8, (void (*)(void))sub_1C003F2E8);
  MEMORY[0x1F4188790](v11 - 8);
  long long v13 = (char *)&v33 - v12;
  uint64_t v14 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t result = *v1;
  uint64_t v22 = *(void *)(*v1 + 16);
  if (!v22) {
    return result;
  }
  uint64_t v23 = result + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v24 = *(void *)(v18 + 72);
  uint64_t v33 = *v1;
  swift_bridgeObjectRetain();
  while (2)
  {
    sub_1BFF83CC4(v23, (uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
    sub_1BFF83CC4((uint64_t)v20, (uint64_t)v16, type metadata accessor for FormatPropertyDefinition);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1C05DC640((uint64_t)v16, (uint64_t)v13, (uint64_t)&qword_1EB88E9B8, (uint64_t)sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*((void *)v13 + 9) & 0xF000000000000007) == 0
          || (uint64_t v39 = *((void *)v13 + 9), sub_1C05A2814(v38), !v2))
        {
          sub_1C05DD154((uint64_t)v13, (uint64_t)&qword_1EB88E9B8, (uint64_t)sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(void))sub_1BFF7185C);
          goto LABEL_4;
        }
        uint64_t v29 = &qword_1EB88E9B8;
        uint64_t v30 = &type metadata for FormatColor;
        uint64_t v31 = sub_1C003F2E8;
        uint64_t v32 = (uint64_t)v13;
        goto LABEL_26;
      case 8u:
        uint64_t v26 = v34;
        sub_1C05DC640((uint64_t)v16, v34, (uint64_t)&qword_1EB88E9A0, (uint64_t)sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v26 + 72) & 0xF000000000000007) != 0)
        {
          uint64_t v39 = *(void *)(v26 + 72);
          sub_1C059E410(v38);
          if (v2)
          {
            uint64_t v29 = &qword_1EB88E9A0;
            uint64_t v30 = &type metadata for FormatAsyncImageContent;
            uint64_t v31 = sub_1C0036630;
            uint64_t v32 = v34;
            goto LABEL_26;
          }
        }
        sub_1C05DD154(v34, (uint64_t)&qword_1EB88E9A0, (uint64_t)sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(void))sub_1BFF7185C);
        goto LABEL_4;
      case 9u:
        uint64_t v27 = v35;
        sub_1C05DC640((uint64_t)v16, v35, (uint64_t)&qword_1EB88E998, (uint64_t)sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v27 + 72) & 0xF000000000000007) != 0)
        {
          uint64_t v39 = *(void *)(v27 + 72);
          sub_1C05B918C(v38);
          if (v2)
          {
            uint64_t v29 = &qword_1EB88E998;
            uint64_t v30 = &type metadata for FormatVideoNodeContent;
            uint64_t v31 = sub_1C00738F0;
            uint64_t v32 = v35;
            goto LABEL_26;
          }
        }
        sub_1C05DD154(v35, (uint64_t)&qword_1EB88E998, (uint64_t)sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(void))sub_1BFF7185C);
        goto LABEL_4;
      case 0xAu:
        uint64_t v28 = v36;
        sub_1C05DC640((uint64_t)v16, v36, (uint64_t)&qword_1EB88E9B0, (uint64_t)sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v28 + 72) & 0xF000000000000007) != 0)
        {
          uint64_t v39 = *(void *)(v28 + 72);
          sub_1C05AB0E0(v38);
          if (v2)
          {
            uint64_t v29 = &qword_1EB88E9B0;
            uint64_t v30 = &type metadata for FormatFont;
            uint64_t v31 = sub_1C0084C58;
            uint64_t v32 = v36;
            goto LABEL_26;
          }
        }
        sub_1C05DD154(v36, (uint64_t)&qword_1EB88E9B0, (uint64_t)sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(void))sub_1BFF7185C);
        goto LABEL_4;
      case 0xBu:
        uint64_t v25 = v37;
        sub_1C05DC640((uint64_t)v16, v37, (uint64_t)&qword_1EB88E9A8, (uint64_t)sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v25 + 72) & 0xF000000000000007) == 0
          || (uint64_t v39 = *(void *)(v25 + 72), sub_1C05B9520(v38), !v2))
        {
          sub_1C05DD154(v37, (uint64_t)&qword_1EB88E9A8, (uint64_t)sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(void))sub_1BFF7185C);
LABEL_4:
          sub_1C05DDC60((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
          v23 += v24;
          if (!--v22) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }
        uint64_t v29 = &qword_1EB88E9A8;
        uint64_t v30 = &type metadata for FormatVideoPlayerContent;
        uint64_t v31 = sub_1C006F9DC;
        uint64_t v32 = v37;
LABEL_26:
        sub_1C05DD154(v32, (uint64_t)v29, (uint64_t)v31, (uint64_t)v30, (uint64_t (*)(void))sub_1BFF7185C);
        sub_1C05DDC60((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
        return swift_bridgeObjectRelease();
      default:
        sub_1C05DDC60((uint64_t)v16, type metadata accessor for FormatPropertyDefinition);
        goto LABEL_4;
    }
  }
}

uint64_t sub_1C05A9400(unint64_t a1)
{
  return sub_1C05A8B18(a1);
}

unint64_t sub_1C05A9418(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v1[7];
  unint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v10 = v1[9];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v29 = v6;
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(v10 + 8 * i + 32);
        unint64_t v27 = v13;
        sub_1BFF32264(v13);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v6 = v29;
    }
    uint64_t v14 = v1[10];
    if (v14)
    {
      uint64_t v15 = *(void *)(v14 + 56);
      if (v15)
      {
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16)
        {
          uint64_t v26 = v14;
          uint64_t v17 = v15 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          uint64_t v18 = *(void *)(v6 + 72);
          uint64_t v29 = v15;
          swift_bridgeObjectRetain();
          do
          {
            sub_1BFF83CC4(v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
            unint64_t v27 = *((void *)v8 + 2);
            swift_retain();
            sub_1C05B8C90(a1);
            swift_release();
            sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
            v17 += v18;
            --v16;
          }
          while (v16);
          swift_bridgeObjectRelease();
          uint64_t v14 = v26;
        }
      }
      swift_beginAccess();
      uint64_t v19 = *(void *)(v14 + 64);
      swift_bridgeObjectRetain();
      sub_1C055DCB4(a1, v19);
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = v3[11];
    if (v20)
    {
      swift_beginAccess();
      uint64_t v21 = *(void *)(v20 + 72);
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v21);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v22 = *(void *)(v20 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v22);
      swift_bridgeObjectRelease();
    }
    unint64_t result = swift_beginAccess();
    unint64_t v23 = v3[13];
    if (v23 >> 62 == 1)
    {
      unint64_t v24 = *(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = *(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v23);
      sub_1BFE6FA30(v24);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v24, v25);
      sub_1BFF0056C(v24);
      swift_bridgeObjectRelease();
      return sub_1BFF0056C(v23);
    }
  }
  return result;
}

unint64_t sub_1C05A97C8(unint64_t a1)
{
  return sub_1C05A9418(a1);
}

void sub_1C05A97EC(unint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v4 + 56);
  if (!v5 || (sub_1C055DB28(a1, v5), !v2))
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)(v4 + 64);
    swift_bridgeObjectRetain();
    sub_1C055DCB4(a1, v6);
    swift_bridgeObjectRelease();
  }
}

void sub_1C05A9880(unint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 24);
  sub_1C11C4648(a1);
  if (!v2)
  {
    if (v4) {
      sub_1C055DB28(a1, v4);
    }
  }
}

uint64_t sub_1C05A98D8(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = *v1;
  unint64_t v5 = v1[1];
  uint64_t v6 = *(void *)(*v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v7 = (unsigned char *)(v4 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        v13[0] = *((void *)v7 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v13[0], 0);
        sub_1BFF49984(v13[0], 0);
        if (v2) {
          return swift_bridgeObjectRelease_n();
        }
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    unint64_t result = swift_bridgeObjectRelease_n();
  }
  if ((v5 >> 62) - 2 >= 2)
  {
    if (v5 >> 62)
    {
      return sub_1C05A98D8(v3);
    }
    else if (!*(unsigned char *)(v5 + 40))
    {
      uint64_t v9 = *(void *)(v5 + 24);
      uint64_t v8 = *(void *)(v5 + 32);
      uint64_t v10 = *(void *)(v5 + 16);
      v13[0] = v10;
      v13[1] = v9;
      v13[2] = v8;
      char v12 = 1;
      sub_1BFE86E48(v10, v9, v8, 0);
      unint64_t result = sub_1C12ECBDC(v13, &v12);
      if (!v2)
      {
        uint64_t v11 = result;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v10, v9, v11, 0);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1C05A9A70(uint64_t a1)
{
  return sub_1C05A4290(a1);
}

uint64_t sub_1C05A9A88(uint64_t a1)
{
  return sub_1C05A98D8(a1);
}

unint64_t sub_1C05A9AA0(unint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatOption();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 96);
  int v10 = *(unsigned __int8 *)(v1 + 106);
  int v11 = *(unsigned __int16 *)(v1 + 104);
  uint64_t v18 = *(void *)(v1 + 48);
  unint64_t result = sub_1C05A9CB8(a1);
  if (!v2)
  {
    int v22 = v11;
    uint64_t v13 = *(void *)(v8 + 16);
    if (v13)
    {
      int v21 = v10;
      uint64_t v17 = v9;
      uint64_t v14 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v15 = *(void *)(v5 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BFF83CC4(v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v18 = *((void *)v7 + 2);
        swift_retain();
        sub_1C05B8C90(a1);
        swift_release();
        sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v14 += v15;
        --v13;
      }
      while (v13);
      unint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v9 = v17;
      int v10 = v21;
    }
    if ((v22 | (v10 << 16)) >> 16 <= 0xFE)
    {
      uint64_t v18 = v9;
      __int16 v19 = v22;
      char v20 = (v22 | (v10 << 16)) >> 16;
      return sub_1C05AA1F8(a1);
    }
  }
  return result;
}

uint64_t sub_1C05A9CB8(uint64_t result)
{
  uint64_t v3 = *v1;
  uint64_t v4 = result;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      uint64_t v5 = (void *)(v3 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v6 = v5[2];
      uint64_t v8 = v5[8];
      uint64_t v7 = v5[9];
      uint64_t v9 = *(void *)(v6 + 16);
      if (v9)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v9; ++i)
        {
          v27[0] = *(void *)(v6 + 8 * i + 32);
          swift_retain();
          sub_1C05A2814(v4);
          if (v2) {
            goto LABEL_29;
          }
          swift_release();
        }
        unint64_t result = swift_bridgeObjectRelease();
      }
      if (!v8) {
        return result;
      }
      uint64_t v11 = *(void *)(v8 + 16);
      if (v11)
      {
        uint64_t v12 = swift_bridgeObjectRetain();
        sub_1BFDB3920(v12);
        swift_bridgeObjectRetain();
        uint64_t v13 = (unsigned char *)(v8 + 40);
        while (1)
        {
          if ((*v13 & 1) == 0)
          {
            v27[0] = *((void *)v13 - 1);
            swift_retain_n();
            sub_1C02D349C(v4);
            sub_1BFF49984(v27[0], 0);
            sub_1BFF49984(v27[0], 0);
            if (v2) {
              break;
            }
          }
          v13 += 16;
          if (!--v11)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_34;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_34:
        uint64_t v24 = *(void *)(v7 + 16);
        if (!v24) {
          return sub_1BFDB3960(v8);
        }
        swift_bridgeObjectRetain_n();
        uint64_t v25 = (unsigned char *)(v7 + 40);
        do
        {
          if ((*v25 & 1) == 0)
          {
            v27[0] = *((void *)v25 - 1);
            swift_retain_n();
            sub_1C02D349C(v4);
            sub_1BFF49984(v27[0], 0);
            sub_1BFF49984(v27[0], 0);
            if (v2) {
              break;
            }
          }
          v25 += 16;
          --v24;
        }
        while (v24);
      }
      swift_bridgeObjectRelease_n();
      return sub_1BFDB3960(v8);
    case 2uLL:
      uint64_t v14 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        for (uint64_t j = 0; j != v15; ++j)
        {
          v27[0] = *(void *)(v14 + 8 * j + 32);
          swift_retain();
          sub_1C05A2814(v4);
          if (v2) {
            goto LABEL_29;
          }
          swift_release();
        }
        return swift_bridgeObjectRelease();
      }
      return result;
    case 3uLL:
      v27[0] = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      return sub_1C05BAAE4(result);
    case 4uLL:
      uint64_t v17 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v18 = *(void *)(v17 + 16);
      sub_1C05DC640(v17 + 24, (uint64_t)v27, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
      v26[18] = v18;
      unint64_t result = sub_1C05B3DFC(v4);
      if (!v2)
      {
        sub_1C05DC640((uint64_t)v27, (uint64_t)v26, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
        unint64_t result = sub_1C00F6584(v26);
        if (result != 1) {
          return sub_1C059CDC8(v4);
        }
      }
      return result;
    case 5uLL:
      v27[0] = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      return sub_1C05A2ECC(result);
    case 6uLL:
      uint64_t v19 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05A9CB8(v4);
      if (v2)
      {
LABEL_29:
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_bridgeObjectRetain();
      sub_1C059A9D0(v4, v19, (void (*)(uint64_t))sub_1C05A9CB8);
      swift_release();
      return swift_bridgeObjectRelease_n();
    case 7uLL:
      char v20 = (void *)(v3 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v21 = v20[2];
      uint64_t v22 = v20[3];
      uint64_t v23 = v20[4];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05A68BC(v4, v21, v22, v23, (void (*)(uint64_t))sub_1C05A9CB8, (void (*)(uint64_t))sub_1C05A9CB8);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 8uLL:
      return result;
    default:
      v27[0] = *(void *)(v3 + 16);
      return sub_1C05A2814(result);
  }
}

unint64_t sub_1C05AA1F8(unint64_t result)
{
  if (!*(unsigned char *)(v1 + 10)) {
    return result;
  }
  uint64_t v3 = result;
  unint64_t v4 = *(void *)v1;
  uint64_t v5 = *(unsigned __int16 *)(v1 + 8);
  if (*(unsigned char *)(v1 + 10) != 1)
  {
    if (v5 >> 8 > 0xFE) {
      return result;
    }
    if ((v5 & 0x100) == 0)
    {
      uint64_t v12 = *(void *)(v4 + 16);
      if (!v12) {
        return result;
      }
      sub_1BFFA742C(*(void *)v1, *(unsigned __int16 *)(v1 + 8), 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
      sub_1BFFE2FE0(v4, v5);
      uint64_t v13 = (unsigned char *)(v4 + 40);
      do
      {
        if ((*v13 & 1) == 0)
        {
          uint64_t v14 = *((void *)v13 - 1);
          swift_retain_n();
          sub_1C02D349C(v3);
          sub_1BFF49984(v14, 0);
          sub_1BFF49984(v14, 0);
          if (v2) {
            break;
          }
        }
        v13 += 16;
        --v12;
      }
      while (v12);
      sub_1BFFA742C(v4, v5, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      uint64_t v9 = v4;
      uint64_t v10 = v5;
      char v11 = 2;
      return sub_1BFFA742C(v9, v10, v11, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    }
    if ((_BYTE)v5 == 0xFF)
    {
      uint64_t v9 = *(void *)v1;
      uint64_t v10 = *(unsigned __int16 *)(v1 + 8);
      char v11 = 2;
      return sub_1BFFA742C(v9, v10, v11, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    }
    return sub_1C05C2450(result);
  }
  if ((v5 & 0x100) == 0)
  {
    uint64_t v6 = *(void *)(v4 + 16);
    if (!v6) {
      return result;
    }
    sub_1BFFE2FD4(*(void *)v1, *(_WORD *)(v1 + 8), 0);
    uint64_t v7 = (unsigned char *)(v4 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        uint64_t v8 = *((void *)v7 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v8, 0);
        sub_1BFF49984(v8, 0);
        if (v2) {
          break;
        }
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    uint64_t v9 = v4;
    uint64_t v10 = v5;
    char v11 = 1;
    return sub_1BFFA742C(v9, v10, v11, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  }
  if ((_BYTE)v5 != 0xFF) {
    return sub_1C05C2450(result);
  }
  return result;
}

unint64_t sub_1C05AA494(unint64_t a1)
{
  return sub_1C05A9AA0(a1);
}

uint64_t sub_1C05AA4AC(uint64_t a1)
{
  return sub_1C05A9CB8(a1);
}

uint64_t sub_1C05AA4C4(uint64_t result)
{
  uint64_t v3 = *v1;
  uint64_t v4 = result;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v9 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain();
        char v11 = (unsigned char *)(v9 + 40);
        do
        {
          if ((*v11 & 1) == 0)
          {
            uint64_t v12 = *((void *)v11 - 1);
            swift_retain_n();
            sub_1C02D349C(v4);
            sub_1BFF49984(v12, 0);
            sub_1BFF49984(v12, 0);
            if (v2) {
              break;
            }
          }
          v11 += 16;
          --v10;
        }
        while (v10);
        return swift_bridgeObjectRelease();
      }
      return result;
    case 2uLL:
    case 6uLL:
      return result;
    case 3uLL:
      return sub_1C05AA4C4(result);
    case 4uLL:
      uint64_t v13 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)(v13 + 16);
      if (!v14) {
        return result;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v15 = (unsigned char *)(v13 + 40);
      break;
    case 5uLL:
      uint64_t v17 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = (unsigned char *)(v17 + 40); ; i += 16)
        {
          if ((*i & 1) == 0)
          {
            uint64_t v20 = *((void *)i - 1);
            swift_retain_n();
            sub_1C02D349C(v4);
            if (v2)
            {
              sub_1BFF49984(v20, 0);
              sub_1BFF49984(v20, 0);
              return swift_bridgeObjectRelease();
            }
            sub_1BFF49984(v20, 0);
            sub_1BFF49984(v20, 0);
          }
          if (!--v18) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      return result;
    default:
      uint64_t v5 = *(void *)(v3 + 16);
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = (unsigned char *)(v5 + 40);
        do
        {
          if ((*v7 & 1) == 0)
          {
            uint64_t v8 = *((void *)v7 - 1);
            swift_retain_n();
            sub_1C02D349C(v4);
            sub_1BFF49984(v8, 0);
            sub_1BFF49984(v8, 0);
            if (v2) {
              break;
            }
          }
          v7 += 16;
          --v6;
        }
        while (v6);
        return swift_bridgeObjectRelease();
      }
      return result;
  }
  while ((*v15 & 1) != 0)
  {
LABEL_16:
    v15 += 16;
    if (!--v14) {
      return swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v16 = *((void *)v15 - 1);
  swift_retain_n();
  sub_1C02D349C(v4);
  if (!v2)
  {
    sub_1BFF49984(v16, 0);
    sub_1BFF49984(v16, 0);
    goto LABEL_16;
  }
  sub_1BFF49984(v16, 0);
  sub_1BFF49984(v16, 0);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C05AA794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C3F8C(a1, a2, a3, (uint64_t (*)(void))sub_1C05AA4C4, sub_1C05AA4C4);
}

uint64_t sub_1C05AA7D4(uint64_t a1)
{
  return sub_1C05AA4C4(a1);
}

void *sub_1C05AA7EC(uint64_t a1)
{
  sub_1C00F6034(v1, (uint64_t)v21);
  sub_1C00F6034((uint64_t)v21, (uint64_t)v22);
  int v4 = sub_1C00F6090((uint64_t)v22);
  unint64_t result = (void *)sub_1C00F609C((uint64_t)v22);
  if (v4 == 1)
  {
    uint64_t v6 = result[14];
    uint64_t v7 = *(void *)(v6 + 16);
    if (!v7) {
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v23 = *(void *)(v6 + 8 * v8 + 32);
      swift_retain();
      sub_1C05A2814(a1);
      if (v2) {
        break;
      }
      ++v8;
      swift_release();
      if (v7 == v8) {
        return (void *)swift_bridgeObjectRelease();
      }
    }
    goto LABEL_19;
  }
  uint64_t v9 = *result;
  uint64_t v11 = result[6];
  uint64_t v10 = result[7];
  uint64_t v12 = *(void *)(*result + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (1)
    {
      uint64_t v23 = *(void *)(v9 + 8 * v13 + 32);
      swift_retain();
      sub_1C05A2814(a1);
      if (v2) {
        break;
      }
      ++v13;
      swift_release();
      if (v12 == v13)
      {
        unint64_t result = (void *)swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return (void *)swift_release();
  }
LABEL_12:
  if (v11)
  {
    uint64_t v14 = *(void *)(v11 + 16);
    if (v14)
    {
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_1BFDB3920(v15);
      swift_bridgeObjectRetain();
      uint64_t v16 = (unsigned char *)(v11 + 40);
      do
      {
        if ((*v16 & 1) == 0)
        {
          uint64_t v23 = *((void *)v16 - 1);
          uint64_t v17 = v23;
          swift_retain_n();
          sub_1C02D349C(a1);
          if (v2)
          {
            sub_1BFF49984(v17, 0);
            sub_1BFF49984(v17, 0);
            goto LABEL_29;
          }
          sub_1BFF49984(v17, 0);
          sub_1BFF49984(v17, 0);
        }
        v16 += 16;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
      uint64_t v18 = *(void *)(v10 + 16);
      if (v18) {
        goto LABEL_23;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = *(void *)(v10 + 16);
      if (v18)
      {
LABEL_23:
        swift_bridgeObjectRetain_n();
        uint64_t v19 = (unsigned char *)(v10 + 40);
        do
        {
          if ((*v19 & 1) == 0)
          {
            uint64_t v23 = *((void *)v19 - 1);
            uint64_t v20 = v23;
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v20, 0);
            sub_1BFF49984(v20, 0);
            if (v2) {
              break;
            }
          }
          v19 += 16;
          --v18;
        }
        while (v18);
LABEL_29:
        swift_bridgeObjectRelease_n();
      }
    }
    return (void *)sub_1BFDB3960(v11);
  }
  return result;
}

uint64_t sub_1C05AAAB8(uint64_t a1)
{
  sub_1C00F6034(v1, (uint64_t)v8);
  sub_1C00F6034((uint64_t)v8, (uint64_t)v9);
  int v4 = sub_1C00F6090((uint64_t)v9);
  uint64_t v5 = (uint64_t *)sub_1C00F609C((uint64_t)v9);
  if (v4 == 1) {
    return sub_1C05542D4(a1, v5[14]);
  }
  uint64_t v7 = v5[6];
  uint64_t result = sub_1C05542D4(a1, *v5);
  if (!v2)
  {
    if (v7) {
      return sub_1C05B1ABC(a1);
    }
  }
  return result;
}

uint64_t sub_1C05AAB68(uint64_t a1)
{
  return sub_1C05B2870(a1);
}

uint64_t sub_1C05AAB80(uint64_t a1)
{
  return sub_1C059BD90(a1);
}

uint64_t sub_1C05AAB98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - v9;
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v14, v16, a2, v12);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v14, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_1BFC845BC(0, &qword_1EA19C000);
    if (swift_dynamicCast())
    {
      uint64_t v18 = *((void *)&v21 + 1);
      uint64_t v19 = v22;
      __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(a1, v18, v19);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
    }
    else
    {
      uint64_t v22 = 0;
      long long v20 = 0u;
      long long v21 = 0u;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return sub_1BFE4D118((uint64_t)&v20, &qword_1EA19C008, &qword_1EA19C000);
    }
  }
  return result;
}

uint64_t sub_1C05AAE30(uint64_t a1, uint64_t a2)
{
  return sub_1C05AAB98(a1, a2);
}

void sub_1C05AAE48(_OWORD *a1)
{
}

uint64_t sub_1C05AAE60(uint64_t a1)
{
  sub_1BFF6530C(v1, (uint64_t)v14);
  sub_1BFF6530C((uint64_t)v14, (uint64_t)v15);
  switch(sub_1C0444FE8((uint64_t)v15))
  {
    case 1u:
      uint64_t result = sub_1C0445038((uint64_t)v15);
      uint64_t v5 = *(void *)result;
      long long v6 = *(_OWORD *)(result + 48);
      uint64_t v7 = *(void *)(*(void *)result + 16);
      if (v7)
      {
        long long v12 = *(_OWORD *)(result + 48);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v7; ++i)
        {
          *(void *)&v13[0] = *(void *)(v5 + 8 * i + 32);
          swift_retain();
          sub_1C05A2814(a1);
          if (v2) {
            goto LABEL_18;
          }
          swift_release();
        }
        uint64_t result = swift_bridgeObjectRelease();
        long long v6 = v12;
      }
      if ((void)v6)
      {
        v13[0] = v6;
        uint64_t result = sub_1C05B1ABC(a1);
      }
      break;
    case 2u:
      uint64_t result = sub_1C0445038((uint64_t)v15);
      uint64_t v9 = *(void *)(result + 112);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = 0;
        while (1)
        {
          *(void *)&v13[0] = *(void *)(v9 + 8 * v11 + 32);
          swift_retain();
          sub_1C05A2814(a1);
          if (v2) {
            break;
          }
          ++v11;
          swift_release();
          if (v10 == v11) {
            return swift_bridgeObjectRelease();
          }
        }
LABEL_18:
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      break;
    case 3u:
      *(void *)&v13[0] = *(void *)sub_1C0445038((uint64_t)v15);
      uint64_t result = sub_1C05A2ECC(a1);
      break;
    default:
      sub_1C0445038((uint64_t)v15);
      sub_1BFF6530C((uint64_t)v14, (uint64_t)v13);
      sub_1C0445038((uint64_t)v13);
      swift_retain();
      swift_retain();
      sub_1C05A2814(a1);
      if (!v2) {
        sub_1C05A2814(a1);
      }
      uint64_t result = (uint64_t)sub_1C05DD52C(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
      break;
  }
  return result;
}

uint64_t sub_1C05AB0C8(uint64_t a1)
{
  return sub_1C05AAE60(a1);
}

void sub_1C05AB0E0(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v4);
  long long v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v11 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v11 + 24);
      uint64_t v14 = *(void *)(v11 + 32);
      uint64_t v15 = *(void *)(v11 + 40);
      LOWORD(v11) = *(_WORD *)(v11 + 48);
      uint64_t v42 = v12;
      uint64_t v43 = v13;
      uint64_t v44 = v14;
      uint64_t v45 = v15;
      __int16 v46 = v11;
      sub_1C03BECA0(a1);
      break;
    case 2uLL:
      uint64_t v16 = swift_projectBox();
      sub_1BFF83CC4(v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      sub_1BFF83CC4((uint64_t)&v9[*(int *)(v7 + 20)], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else if (!v6[24])
        {
          uint64_t v34 = *((void *)v6 + 1);
          uint64_t v36 = *((void *)v6 + 2);
          uint64_t v42 = *(void *)v6;
          uint64_t v35 = v42;
          uint64_t v43 = v34;
          uint64_t v44 = v36;
          char v47 = 6;
          sub_1BFE86E48(v42, v34, v36, 0);
          uint64_t v37 = sub_1C12ECBDC(&v42, &v47);
          if (!v2)
          {
            uint64_t v38 = v37;
            swift_bridgeObjectRetain();
            sub_1C0F49260(v35, v34, v38, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1BFD7418C(v35, v34, v36, 0);
        }
      }
      else
      {
        sub_1C05DDC60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      break;
    case 3uLL:
      uint64_t v18 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      if (*(unsigned __int8 *)(v18 + 40) >= 3u)
      {
        uint64_t v20 = *(void *)(v18 + 24);
        uint64_t v19 = *(void *)(v18 + 32);
        uint64_t v21 = *(void *)(v18 + 16);
        uint64_t v42 = v21;
        uint64_t v43 = v20;
        uint64_t v44 = v19;
        char v47 = 10;
        sub_1BFF67F78(v21, v20, v19, 3);
        uint64_t v22 = sub_1C12ECBDC(&v42, &v47);
        if (!v2)
        {
          uint64_t v23 = v22;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v21, v20, v23, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      break;
    case 4uLL:
      uint64_t v24 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v26 = *(void *)(v24 + 16);
      uint64_t v25 = *(void *)(v24 + 24);
      uint64_t v27 = *(void *)(v24 + 32);
      char v28 = *(unsigned char *)(v24 + 40);
      uint64_t v29 = *(void *)(v24 + 48);
      switch(v28)
      {
        case 1:
          uint64_t v30 = *(void *)(v24 + 16);
          uint64_t v31 = *(void *)(v24 + 24);
          uint64_t v32 = *(void *)(v24 + 32);
          char v33 = 1;
          goto LABEL_19;
        case 2:
          uint64_t v30 = *(void *)(v24 + 16);
          uint64_t v31 = *(void *)(v24 + 24);
          uint64_t v32 = *(void *)(v24 + 32);
          char v33 = 2;
          goto LABEL_19;
        case 3:
          uint64_t v42 = *(void *)(v24 + 16);
          uint64_t v43 = v25;
          uint64_t v44 = v27;
          char v47 = 10;
          sub_1BFF67F78(v26, v25, v27, 3);
          sub_1BFF67F78(v26, v25, v27, 3);
          sub_1BFF67F78(v26, v25, v27, 3);
          swift_retain();
          uint64_t v39 = sub_1C12ECBDC(&v42, &v47);
          if (v2)
          {
            sub_1BFF05CCC(v26, v25, v27, 3);
            sub_1BFF05CCC(v26, v25, v27, 3);
          }
          else
          {
            uint64_t v40 = v39;
            uint64_t v41 = v29 & 0x1FFFFFFFFFFFFFFFLL;
            swift_bridgeObjectRetain();
            sub_1C0F49260(v26, v25, v40, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFF05CCC(v26, v25, v27, 3);
LABEL_20:
            uint64_t v42 = v29;
            sub_1C05AB0E0(a1);
            sub_1BFF05CCC(v26, v25, v27, v28);
          }
          swift_release();
          break;
        default:
          uint64_t v30 = *(void *)(v24 + 16);
          uint64_t v31 = *(void *)(v24 + 24);
          uint64_t v32 = *(void *)(v24 + 32);
          char v33 = 0;
LABEL_19:
          sub_1BFF67F78(v30, v31, v32, v33);
          swift_retain();
          goto LABEL_20;
      }
      break;
    default:
      return;
  }
}

uint64_t sub_1C05AB618()
{
  uint64_t v2 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatRemoteFont();
  sub_1BFF83CC4(v0 + *(int *)(v5 + 20), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result) {
    return sub_1C05DDC60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v4[24])
  {
    uint64_t v8 = *(void *)v4;
    uint64_t v7 = *((void *)v4 + 1);
    uint64_t v9 = *((void *)v4 + 2);
    v13[0] = v8;
    v13[1] = v7;
    v13[2] = v9;
    char v14 = 6;
    sub_1BFE86E48(v8, v7, v9, 0);
    uint64_t v10 = sub_1C12ECBDC(v13, &v14);
    if (!v1)
    {
      uint64_t v11 = v10;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v8, v7, v11, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return sub_1BFD7418C(v8, v7, v9, 0);
  }
  return result;
}

void sub_1C05AB7C0(uint64_t a1)
{
}

void sub_1C05AB7D8(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    memcpy(__dst, (const void *)(v5 + 32), sizeof(__dst));
    memcpy(v21, __dst, sizeof(v21));
    sub_1C05DC340((uint64_t)__dst);
    sub_1C05C4134(a1);
    if (v2)
    {
      sub_1C05DC4C4((uint64_t)__dst);
      goto LABEL_7;
    }
    for (uint64_t i = 560; ; i += 528)
    {
      sub_1C05DC4C4((uint64_t)__dst);
      if (!--v6) {
        break;
      }
      memcpy(__dst, (const void *)(v5 + i), sizeof(__dst));
      memcpy(v21, __dst, sizeof(v21));
      sub_1C05DC340((uint64_t)__dst);
      sub_1C05C4134(a1);
    }
    swift_bridgeObjectRelease_n();
  }
  if ((~*(void *)(v3 + 56) & 0xF000000000000007) == 0 || (__dst[0] = *(void *)(v3 + 56), sub_1C05AB0E0(a1), !v2))
  {
    uint64_t v8 = MEMORY[0x1E4FBB718];
    sub_1C05DC640(v3 + 64, (uint64_t)v21, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    sub_1C05DC640((uint64_t)v21, (uint64_t)__dst, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, v8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    if (sub_1C044587C((uint64_t)__dst) == 1
      || (sub_1BFF6530C((uint64_t)__dst, (uint64_t)v20), sub_1C05AAE60(a1), !v2))
    {
      uint64_t v9 = *(void *)(v3 + 192);
      if (!v9 || (sub_1C05529C4(a1, v9), !v2))
      {
        if (*(unsigned __int8 *)(v3 + 280) == 254 || (v20[0] = *(void *)(v3 + 232), sub_1C05A2814(a1), !v2))
        {
          uint64_t v10 = *(void *)(v3 + 512);
          if (v10)
          {
            uint64_t v11 = *(void *)(v10 + 16);
            if (v11)
            {
              swift_bridgeObjectRetain_n();
              uint64_t v12 = (unsigned char *)(v10 + 40);
              while (1)
              {
                if ((*v12 & 1) == 0)
                {
                  v20[0] = *((void *)v12 - 1);
                  uint64_t v13 = v20[0];
                  swift_retain_n();
                  sub_1C02D349C(a1);
                  if (v2)
                  {
                    sub_1BFF49984(v13, 0);
                    sub_1BFF49984(v13, 0);
                    goto LABEL_7;
                  }
                  sub_1BFF49984(v13, 0);
                  sub_1BFF49984(v13, 0);
                }
                v12 += 16;
                if (!--v11)
                {
                  swift_bridgeObjectRelease_n();
                  break;
                }
              }
            }
          }
          if (*(void *)(v3 + 520) != 9)
          {
            uint64_t v14 = *(void *)(v3 + 528);
            if ((~v14 & 0xF000000000000007) != 0)
            {
              v20[0] = *(void *)(v3 + 528);
              sub_1C05A2814(a1);
              if (v2) {
                return;
              }
            }
            else
            {
              sub_1BFEF8750(*(void *)(v3 + 520), v14);
            }
          }
          if (*(void *)(v3 + 536) != 9)
          {
            uint64_t v15 = *(void *)(v3 + 544);
            if ((~v15 & 0xF000000000000007) != 0)
            {
              v20[0] = *(void *)(v3 + 544);
              sub_1C05A2814(a1);
              if (v2) {
                return;
              }
            }
            else
            {
              sub_1BFEF8750(*(void *)(v3 + 536), v15);
            }
          }
          uint64_t v16 = *(void *)(v3 + 560);
          if (v16)
          {
            uint64_t v17 = *(void *)(v16 + 16);
            if (v17)
            {
              swift_bridgeObjectRetain_n();
              uint64_t v18 = (unsigned char *)(v16 + 40);
              do
              {
                if ((*v18 & 1) == 0)
                {
                  v20[0] = *((void *)v18 - 1);
                  uint64_t v19 = v20[0];
                  swift_retain_n();
                  sub_1C02D349C(a1);
                  sub_1BFF49984(v19, 0);
                  sub_1BFF49984(v19, 0);
                  if (v2) {
                    break;
                  }
                }
                v18 += 16;
                --v17;
              }
              while (v17);
LABEL_7:
              swift_bridgeObjectRelease_n();
            }
          }
        }
      }
    }
  }
}

void sub_1C05ABBE0(uint64_t a1)
{
  uint64_t v4 = v1[1];
  if (!*v1 || (sub_1C05AB7D8(a1), !v2)) {
    sub_1C059BA84(a1, v4);
  }
}

uint64_t sub_1C05ABC30(uint64_t a1)
{
  return sub_1C059B9C8(a1, *v1);
}

void sub_1C05ABC4C(uint64_t a1)
{
  uint64_t v5 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  unsigned int v7 = *(unsigned __int8 *)(v1 + 24);
  if (!(v7 >> 6))
  {
    uint64_t v11 = *(void *)(v5 + 16);
    if (!v11) {
      return;
    }
    uint64_t v14 = *(void *)(v1 + 16);
    sub_1C033D91C(*(void *)v1, *(void *)(v1 + 8), v6, v7);
    swift_bridgeObjectRetain();
    uint64_t v12 = (unsigned char *)(v5 + 40);
    do
    {
      if ((*v12 & 1) == 0)
      {
        uint64_t v13 = *((void *)v12 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v13, 0);
        sub_1BFF49984(v13, 0);
        if (v2) {
          break;
        }
      }
      v12 += 16;
      --v11;
    }
    while (v11);
    goto LABEL_14;
  }
  if (v7 >> 6 == 1)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      return;
    }
    uint64_t v14 = *(void *)(v1 + 16);
    sub_1C033D91C(*(void *)v1, *(void *)(v1 + 8), v6, v7);
    swift_bridgeObjectRetain();
    uint64_t v9 = (unsigned char *)(v5 + 40);
    do
    {
      if ((*v9 & 1) == 0)
      {
        uint64_t v10 = *((void *)v9 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v10, 0);
        sub_1BFF49984(v10, 0);
        if (v2) {
          break;
        }
      }
      v9 += 16;
      --v8;
    }
    while (v8);
LABEL_14:
    sub_1C033D994(v5, v4, v14, v7);
    sub_1C033D994(v5, v4, v14, v7);
    return;
  }
  sub_1C05ABE60(a1);
}

void sub_1C05ABE1C(uint64_t a1)
{
}

void sub_1C05ABE60(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = (unsigned char *)(v4 + 40);
    do
    {
      if ((*v6 & 1) == 0)
      {
        uint64_t v7 = *((void *)v6 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v7, 0);
        sub_1BFF49984(v7, 0);
        if (v2)
        {
          swift_bridgeObjectRelease_n();
          return;
        }
      }
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
  }
  sub_1C05AB7D8(a1);
}

void sub_1C05ABF54(uint64_t a1)
{
}

void sub_1C05ABF6C(uint64_t a1)
{
  sub_1C059B9C8(a1, *v1);
  if (!v2) {
    sub_1C05AB7D8(a1);
  }
}

uint64_t sub_1C05ABFA4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)(v4 + 40);
    swift_bridgeObjectRetain();
    sub_1C0552D84(a1, v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05AC030(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v14 = a1;
    uint64_t v7 = (_OWORD *)(v5 + 56);
    while (1)
    {
      uint64_t v8 = *((void *)v7 - 1);
      if (v8)
      {
        uint64_t v9 = *((void *)v7 - 2);
        long long v15 = *v7;
        uint64_t v10 = *(void **)(a1 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1C0EE2410(0, v10[2] + 1, 1, v10);
        }
        unint64_t v12 = v10[2];
        unint64_t v11 = v10[3];
        if (v12 >= v11 >> 1) {
          uint64_t v10 = sub_1C0EE2410((void *)(v11 > 1), v12 + 1, 1, v10);
        }
        v10[2] = v12 + 1;
        uint64_t v13 = &v10[4 * v12];
        a1 = v14;
        v13[4] = v9;
        v13[5] = v8;
        *((_OWORD *)v13 + 3) = v15;
        *(void *)(v14 + 56) = v10;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1C05B4E6C(a1);
      if (v2) {
        break;
      }
      uint64_t v7 = (_OWORD *)((char *)v7 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v6) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05AC1FC(uint64_t a1)
{
  uint64_t v4 = v1[6];
  uint64_t result = sub_1C05542D4(a1, *v1);
  if (!v2)
  {
    if (v4) {
      return sub_1C05B1ABC(a1);
    }
  }
  return result;
}

uint64_t sub_1C05AC250(unint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v37 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[8];
  unint64_t v9 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v36 = v1[11];
  uint64_t v12 = v1[14];
  uint64_t v11 = v1[15];
  uint64_t v13 = v1[17];
  if (v9 >= 2)
  {
    if (v9 != 2)
    {
      sub_1C0187DE0(v8, v9);
      sub_1C059AC04(a1, v9);
      uint64_t result = sub_1BFFD0438(v8, v9);
      uint64_t v14 = (uint64_t)v37;
      if (v2) {
        return result;
      }
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BFFD0438(v8, v9);
  }
  uint64_t v14 = (uint64_t)v37;
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1C05550B8(a1, v10);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v36;
  uint64_t v16 = *(void *)(v36 + 16);
  uint64_t v34 = v13;
  uint64_t v35 = v12;
  if (v16)
  {
    uint64_t v32 = v6;
    uint64_t v33 = v11;
    unint64_t v38 = a1;
    uint64_t v49 = 0;
    swift_bridgeObjectRetain_n();
    uint64_t v17 = (uint64_t *)(v15 + 48);
    while (1)
    {
      uint64_t v39 = v16;
      uint64_t v18 = *(v17 - 2);
      uint64_t v19 = *(v17 - 1);
      uint64_t v20 = *v17;
      uint64_t v21 = v17[1];
      uint64_t v23 = v17[2];
      uint64_t v22 = v17[3];
      unint64_t v25 = v17[4];
      uint64_t v24 = v17[5];
      uint64_t v41 = v18;
      uint64_t v42 = v19;
      uint64_t v43 = v20;
      uint64_t v44 = v21;
      uint64_t v45 = v23;
      uint64_t v46 = v22;
      unint64_t v47 = v25;
      uint64_t v48 = v24;
      uint64_t v40 = v24;
      sub_1BFF95098(v18, v19, v20, v21, v23, v22, v25);
      uint64_t v26 = v49;
      sub_1C05B7D38(v38);
      uint64_t v49 = v26;
      if (v26) {
        break;
      }
      v17 += 8;
      sub_1BFF94FE4(v18, v19, v20, v21, v23, v22, v25);
      uint64_t v16 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v3 = v49;
        uint64_t v14 = (uint64_t)v37;
        a1 = v38;
        uint64_t v11 = v33;
        uint64_t v13 = v34;
        uint64_t v12 = v35;
        uint64_t v6 = v32;
        goto LABEL_13;
      }
    }
    sub_1BFF94FE4(v18, v19, v20, v21, v23, v22, v25);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_13:
    uint64_t v27 = *(void *)(v12 + 16);
    if (v27)
    {
      uint64_t v28 = v12 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v29 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFF83CC4(v28, v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v41 = *(void *)(v14 + 16);
        swift_retain();
        sub_1C05B8C90(a1);
        if (v3) {
          break;
        }
        swift_release();
        sub_1C05DDC60(v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v28 += v29;
        if (!--v27)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v13 = v34;
          goto LABEL_18;
        }
      }
      swift_release();
      sub_1C05DDC60(v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_18:
      swift_bridgeObjectRetain();
      sub_1C0561D78(a1, v11);
      uint64_t result = swift_bridgeObjectRelease();
      if (!v3)
      {
        swift_bridgeObjectRetain();
        sub_1C059AFFC(a1, v13);
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1C05AC600(unint64_t a1)
{
  return sub_1C05AC250(a1);
}

void sub_1C05AC618(uint64_t a1)
{
}

void sub_1C05AC630(uint64_t a1)
{
  unint64_t v2 = *(void *)(v1 + 8);
  switch(*(unsigned __int8 *)(v1 + 40) >> 5)
  {
    case 1:
      switch((v2 >> 59) & 2 | (v2 >> 2) & 1)
      {
        case 3uLL:
          return;
        default:
          goto LABEL_6;
      }
    case 3:
      sub_1C05C2CA4(a1);
      break;
    case 4:
      switch((v2 >> 59) & 2 | (v2 >> 2) & 1)
      {
        case 3uLL:
          return;
        default:
LABEL_6:
          sub_1C05C3130(a1);
          break;
      }
      break;
    case 5:
      sub_1C05AC81C(a1);
      break;
    default:
      return;
  }
}

void sub_1C05AC784(uint64_t a1)
{
  switch((*(void *)(v1 + 8) >> 59) & 2 | (*(void *)(v1 + 8) >> 2) & 1)
  {
    case 3:
      return;
    default:
      sub_1C05C3130(a1);
      break;
  }
}

void sub_1C05AC81C(uint64_t a1)
{
  unint64_t v2 = *(void *)(v1 + 8);
  if (*(unsigned char *)(v1 + 40)) {
    int v3 = 2;
  }
  else {
    int v3 = 0;
  }
  unsigned int v4 = v3 & 0xFFFFFFFE | (v2 >> 1) & 1;
  if (v4)
  {
    if (v4 == 1)
    {
      switch((v2 >> 59) & 2 | (v2 >> 2) & 1)
      {
        case 3uLL:
          return;
        default:
          goto LABEL_9;
      }
    }
    else
    {
      switch((*(void *)(v1 + 16) >> 59) & 2 | (*(void *)(v1 + 16) >> 2) & 1)
      {
        case 3:
          return;
        default:
          goto LABEL_9;
      }
    }
  }
  else
  {
    switch((v2 >> 59) & 2 | (v2 >> 2) & 1)
    {
      case 3uLL:
        return;
      default:
LABEL_9:
        sub_1C05C3130(a1);
        break;
    }
  }
}

void sub_1C05AC9A0(uint64_t a1)
{
}

uint64_t sub_1C05AC9B8(uint64_t result)
{
  if ((*(unsigned char *)(v1 + 48) & 0xF0) == 0x30
    && BYTE1(*(void *)(v1 + 16)) != 4
    && *(void *)(v1 + 16) <= 0xFDu)
  {
    return sub_1C05C3300(result);
  }
  return result;
}

uint64_t sub_1C05ACA48(uint64_t result)
{
  if (*(unsigned char *)(v1 + 17) != 4 && *(unsigned __int8 *)(v1 + 16) <= 0xFDu) {
    return sub_1C05C3300(result);
  }
  return result;
}

uint64_t sub_1C05ACAC4(uint64_t result)
{
  if ((*(unsigned char *)(v1 + 48) & 0xF0) == 0x30) {
    return sub_1C05ACA48(result);
  }
  return result;
}

uint64_t sub_1C05ACB18(uint64_t result)
{
  unint64_t v2 = v1[1];
  if (v2 >= 2)
  {
    uint64_t v3 = result;
    uint64_t v4 = *v1;
    swift_bridgeObjectRetain();
    sub_1C059AC04(v3, v2);
    return sub_1BFFBE2A8(v4, v2);
  }
  return result;
}

uint64_t sub_1C05ACB78(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    unint64_t v6 = v1[6];
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v6 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unint64_t v10 = v1[8];
    if (v10 >> 62 == 1)
    {
      unint64_t v11 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v3[8]);
      sub_1BFE6FA30(v11);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v11, v12);
      sub_1BFF0056C(v11);
      swift_bridgeObjectRelease();
      sub_1BFF0056C(v10);
    }
    if (v3[10]) {
      sub_1C05B4574(a1, (void (*)(uint64_t, uint64_t))sub_1C05918A4);
    }
    swift_beginAccess();
    unint64_t v13 = v3[11];
    swift_bridgeObjectRetain();
    sub_1C05550B8(a1, v13);
    swift_bridgeObjectRelease();
    unint64_t v14 = v3[15];
    if (v14)
    {
      swift_beginAccess();
      uint64_t v15 = *(void *)(v14 + 72);
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v15);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v16 = *(void *)(v14 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v16);
      swift_bridgeObjectRelease();
    }
    uint64_t result = swift_beginAccess();
    uint64_t v17 = (void *)v3[16];
    if (v17)
    {
      if (v17[2])
      {
        swift_retain();
        sub_1C096F5C8(a1);
      }
      else
      {
        swift_retain();
      }
      uint64_t v18 = v17[3];
      if (v18)
      {
        swift_beginAccess();
        uint64_t v19 = *(void *)(v18 + 72);
        if (v19)
        {
          swift_bridgeObjectRetain();
          sub_1C055478C(a1, v19);
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        uint64_t v20 = *(void *)(v18 + 88);
        swift_bridgeObjectRetain();
        sub_1C0592130(a1, v20);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      sub_1C054EE74(a1);
      swift_beginAccess();
      uint64_t v21 = v17[5];
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t j = 0; j != v22; ++j)
        {
          unint64_t v24 = *(void *)(v21 + 8 * j + 32);
          sub_1BFF32264(v24);
          sub_1C059B1D4(a1);
          sub_1BFF31E90(v24);
        }
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1C05ACFC0(uint64_t a1)
{
  uint64_t v3 = v1;
  if (!*(void *)(v1 + 16) || (uint64_t result = sub_1C096F5C8(a1), !v2))
  {
    uint64_t v6 = *(void *)(v1 + 24);
    if (!v6) {
      goto LABEL_7;
    }
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 72);
    if (!v7 || (swift_bridgeObjectRetain(), sub_1C055478C(a1, v7), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      uint64_t v8 = *(void *)(v6 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v8);
      uint64_t result = swift_bridgeObjectRelease();
      if (!v2)
      {
LABEL_7:
        swift_beginAccess();
        uint64_t result = sub_1C054EE74(a1);
        if (!v2)
        {
          uint64_t result = swift_beginAccess();
          uint64_t v9 = *(void *)(v3 + 40);
          uint64_t v10 = *(void *)(v9 + 16);
          if (v10)
          {
            swift_bridgeObjectRetain_n();
            for (uint64_t i = 0; i != v10; ++i)
            {
              unint64_t v12 = *(void *)(v9 + 8 * i + 32);
              sub_1BFF32264(v12);
              sub_1C059B1D4(a1);
              sub_1BFF31E90(v12);
            }
            return swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05AD170(uint64_t a1)
{
  return sub_1C05ACFC0(a1);
}

uint64_t sub_1C05AD194(uint64_t result)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v6 = v2;
  uint64_t v7 = result;
  switch(*(unsigned char *)(v1 + 64))
  {
    case 1:
      uint64_t v8 = *(void *)(v3 + 16);
      if (v8)
      {
        uint64_t v26 = *(void *)(v1 + 40);
        uint64_t v27 = *(void *)(v1 + 32);
        uint64_t v28 = *(void *)(v1 + 24);
        char v29 = *(void *)(v1 + 16);
        uint64_t v30 = *(void *)(v1 + 8);
        uint64_t v33 = *(void *)(v1 + 56);
        uint64_t v34 = result;
        uint64_t v32 = *(void *)(v1 + 48);
        uint64_t v36 = v6;
        swift_bridgeObjectRetain();
        uint64_t v31 = v3;
        uint64_t v9 = v3 + 40;
        while (1)
        {
          uint64_t v10 = *(void *)(v9 - 8);
          uint64_t v11 = *(void *)v9;
          uint64_t v12 = *(void *)(v9 + 8);
          uint64_t v13 = *(void *)(v9 + 16);
          uint64_t v15 = *(void *)(v9 + 24);
          uint64_t v14 = *(void *)(v9 + 32);
          char v16 = *(unsigned char *)(v9 + 40);
          uint64_t v35 = v8;
          sub_1C05D9C60(v10, *(void *)v9, v12, v13, v15, v14, v16);
          sub_1C05A3524(v34);
          if (v36) {
            break;
          }
          v9 += 56;
          sub_1C05D9D44(v10, v11, v12, v13, v15, v14, v16);
          --v8;
          if (v35 == 1) {
            return sub_1BFD1EFFC(v31, v30, v29, v28, v27, v26, v32, v33, 1);
          }
        }
        sub_1C05D9D44(v10, v11, v12, v13, v15, v14, v16);
        uint64_t result = sub_1BFD1EFFC(v31, v30, v29, v28, v27, v26, v32, v33, 1);
      }
      break;
    case 2:
      uint64_t v17 = *(void *)(v3 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = 0;
        while (1)
        {
          swift_retain();
          sub_1C05A2814(v7);
          if (v2) {
            break;
          }
          ++v18;
          swift_release();
          if (v17 == v18)
          {
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      else
      {
LABEL_13:
        if (v5)
        {
          uint64_t v19 = *(void *)(v5 + 16);
          if (v19)
          {
            uint64_t v20 = swift_bridgeObjectRetain();
            sub_1BFDB3920(v20);
            swift_bridgeObjectRetain();
            uint64_t v21 = (unsigned char *)(v5 + 40);
            while (1)
            {
              if ((*v21 & 1) == 0)
              {
                uint64_t v22 = *((void *)v21 - 1);
                swift_retain_n();
                sub_1C02D349C(v7);
                if (v2)
                {
                  sub_1BFF49984(v22, 0);
                  sub_1BFF49984(v22, 0);
                  goto LABEL_31;
                }
                sub_1BFF49984(v22, 0);
                sub_1BFF49984(v22, 0);
              }
              v21 += 16;
              if (!--v19)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_24;
              }
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_24:
          uint64_t v23 = *(void *)(v4 + 16);
          if (v23)
          {
            swift_bridgeObjectRetain_n();
            unint64_t v24 = (unsigned char *)(v4 + 40);
            do
            {
              if ((*v24 & 1) == 0)
              {
                uint64_t v25 = *((void *)v24 - 1);
                swift_retain_n();
                sub_1C02D349C(v7);
                sub_1BFF49984(v25, 0);
                sub_1BFF49984(v25, 0);
                if (v2) {
                  break;
                }
              }
              v24 += 16;
              --v23;
            }
            while (v23);
LABEL_31:
            swift_bridgeObjectRelease_n();
          }
          uint64_t result = sub_1BFDB3960(v5);
        }
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05AD510(uint64_t result)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = result;
  switch(*(unsigned char *)(v1 + 64))
  {
    case 1:
      uint64_t result = sub_1C0554668(result, v3);
      break;
    case 2:
      long long v5 = *(_OWORD *)(v1 + 48);
      uint64_t result = sub_1C05542D4(result, v3);
      if (!v2)
      {
        if ((void)v5) {
          uint64_t result = sub_1C05B1ABC(v4);
        }
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05AD5AC(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    long long v8 = *(_OWORD *)(v6 + 176);
    long long v35 = *(_OWORD *)(v6 + 160);
    long long v36 = v8;
    long long v37 = *(_OWORD *)(v6 + 192);
    char v38 = *(unsigned char *)(v6 + 208);
    long long v9 = *(_OWORD *)(v6 + 112);
    long long v31 = *(_OWORD *)(v6 + 96);
    long long v32 = v9;
    long long v10 = *(_OWORD *)(v6 + 144);
    long long v33 = *(_OWORD *)(v6 + 128);
    long long v34 = v10;
    long long v11 = *(_OWORD *)(v6 + 48);
    long long v27 = *(_OWORD *)(v6 + 32);
    long long v28 = v11;
    long long v12 = *(_OWORD *)(v6 + 80);
    long long v29 = *(_OWORD *)(v6 + 64);
    long long v30 = v12;
    sub_1C05DC6FC((uint64_t)&v27);
    sub_1C05AD80C(a1);
    if (v2)
    {
      sub_1C05DC7FC((uint64_t)&v27);
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = 216; ; i += 184)
    {
      sub_1C05DC7FC((uint64_t)&v27);
      if (!--v7) {
        break;
      }
      long long v14 = *(_OWORD *)(v6 + i);
      long long v15 = *(_OWORD *)(v6 + i + 16);
      long long v16 = *(_OWORD *)(v6 + i + 48);
      long long v29 = *(_OWORD *)(v6 + i + 32);
      long long v30 = v16;
      long long v27 = v14;
      long long v28 = v15;
      long long v17 = *(_OWORD *)(v6 + i + 64);
      long long v18 = *(_OWORD *)(v6 + i + 80);
      long long v19 = *(_OWORD *)(v6 + i + 112);
      long long v33 = *(_OWORD *)(v6 + i + 96);
      long long v34 = v19;
      long long v31 = v17;
      long long v32 = v18;
      long long v20 = *(_OWORD *)(v6 + i + 128);
      long long v21 = *(_OWORD *)(v6 + i + 144);
      long long v22 = *(_OWORD *)(v6 + i + 160);
      char v38 = *(unsigned char *)(v6 + i + 176);
      long long v36 = v21;
      long long v37 = v22;
      long long v35 = v20;
      sub_1C05DC6FC((uint64_t)&v27);
      sub_1C05AD80C(a1);
    }
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  int v23 = *(unsigned __int8 *)(v3 + 120);
  if (v23 == 255) {
    goto LABEL_10;
  }
  long long v24 = *(_OWORD *)(v3 + 72);
  long long v27 = *(_OWORD *)(v3 + 56);
  long long v28 = v24;
  long long v25 = *(_OWORD *)(v3 + 104);
  long long v29 = *(_OWORD *)(v3 + 88);
  long long v30 = v25;
  LOBYTE(v31) = v23;
  uint64_t result = sub_1C05AD194(a1);
  if (!v2)
  {
LABEL_10:
    uint64_t v26 = *(void *)(v3 + 128);
    if (!v26 || (uint64_t result = sub_1C05529C4(a1, v26), !v2))
    {
      if (*(unsigned __int8 *)(v3 + 216) != 254)
      {
        *(void *)&long long v27 = *(void *)(v3 + 168);
        return sub_1C05A2814(a1);
      }
    }
  }
  return result;
}

uint64_t sub_1C05AD80C(uint64_t a1)
{
  uint64_t v51 = *(void *)(v1 + 24);
  uint64_t v52 = *(void *)(v1 + 16);
  uint64_t v56 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v53 = *(void *)(v1 + 48);
  uint64_t v54 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  int v7 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v8 = *(void *)(v1 + 88);
  int v9 = *(unsigned __int8 *)(v1 + 176);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    uint64_t v47 = v6;
    uint64_t v48 = v4;
    uint64_t v49 = v5;
    uint64_t v46 = v8;
    int v50 = v9;
    uint64_t v57 = a1;
    int v11 = v9;
    switch(v7)
    {
      case 0:
        goto LABEL_10;
      case 1:
        uint64_t v12 = *(void *)(v52 + 16);
        if (!v12) {
          goto LABEL_10;
        }
        sub_1BFFE54D0(v52, v51, v56, v54, v53, v4, v6, v5, 1);
        swift_bridgeObjectRetain();
        uint64_t v13 = v52 + 40;
        do
        {
          uint64_t v55 = v12;
          uint64_t v15 = *(void *)(v13 - 8);
          uint64_t v14 = *(void *)v13;
          uint64_t v16 = *(void *)(v13 + 8);
          uint64_t v17 = *(void *)(v13 + 16);
          uint64_t v19 = *(void *)(v13 + 24);
          uint64_t v18 = *(void *)(v13 + 32);
          char v20 = *(unsigned char *)(v13 + 40);
          sub_1C05D9C60(v15, *(void *)v13, v16, v17, v19, v18, v20);
          sub_1C05A3524(v57);
          v13 += 56;
          sub_1C05D9D44(v15, v14, v16, v17, v19, v18, v20);
          uint64_t v12 = v55 - 1;
        }
        while (v55 != 1);
        sub_1BFFE54B8(v52, v51, v56, v54, v53, v48, v47, v49, 1u);
        uint64_t result = sub_1BFFE54B8(v52, v51, v56, v54, v53, v48, v47, v49, 1u);
        int v11 = v50;
        uint64_t v21 = v46;
        if (!v46) {
          goto LABEL_37;
        }
        goto LABEL_11;
      case 2:
        uint64_t v23 = *(void *)(v52 + 16);
        if (v23)
        {
          uint64_t v24 = v51;
          sub_1BFFE54A0(v52, v51, v56, v54, v53, v4, v6, v5, 2u);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v23; ++i)
          {
            swift_retain();
            sub_1C05A2814(v57);
            swift_release();
          }
          swift_bridgeObjectRelease();
          char v26 = v56;
          uint64_t v28 = v4;
          uint64_t v27 = v5;
          uint64_t v29 = v6;
        }
        else
        {
          uint64_t v24 = v51;
          char v26 = v56;
          uint64_t v29 = v6;
          uint64_t v28 = v4;
          uint64_t v27 = v5;
          sub_1BFFE54A0(v52, v51, v56, v54, v53, v4, v6, v5, 2u);
        }
        if (v29)
        {
          uint64_t v30 = *(void *)(v29 + 16);
          if (v30)
          {
            uint64_t v31 = swift_bridgeObjectRetain();
            sub_1BFDB3920(v31);
            swift_bridgeObjectRetain();
            long long v32 = (unsigned char *)(v29 + 40);
            do
            {
              if ((*v32 & 1) == 0)
              {
                uint64_t v33 = *((void *)v32 - 1);
                swift_retain_n();
                sub_1C02D349C(v57);
                sub_1BFF49984(v33, 0);
                sub_1BFF49984(v33, 0);
              }
              v32 += 16;
              --v30;
            }
            while (v30);
            uint64_t v29 = v6;
            swift_bridgeObjectRelease_n();
            uint64_t v41 = v54;
            uint64_t v28 = v4;
            uint64_t v27 = v5;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v41 = v54;
          }
          uint64_t v42 = *(void *)(v27 + 16);
          if (v42)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v43 = (unsigned char *)(v27 + 40);
            do
            {
              if ((*v43 & 1) == 0)
              {
                uint64_t v44 = *((void *)v43 - 1);
                swift_retain_n();
                sub_1C02D349C(v57);
                sub_1BFF49984(v44, 0);
                sub_1BFF49984(v44, 0);
              }
              v43 += 16;
              --v42;
            }
            while (v42);
            uint64_t v27 = v5;
            swift_bridgeObjectRelease_n();
            sub_1BFDB3960(v6);
            uint64_t v34 = v52;
            uint64_t v35 = v24;
            char v36 = v56;
            uint64_t v38 = v53;
            uint64_t v37 = v54;
            uint64_t v39 = v4;
            uint64_t v40 = v6;
          }
          else
          {
            uint64_t v45 = v41;
            sub_1BFDB3960(v29);
            uint64_t v34 = v52;
            uint64_t v35 = v24;
            char v36 = v56;
            uint64_t v37 = v45;
            uint64_t v38 = v53;
            uint64_t v39 = v28;
            uint64_t v40 = v29;
          }
        }
        else
        {
          uint64_t v34 = v52;
          uint64_t v35 = v24;
          char v36 = v26;
          uint64_t v38 = v53;
          uint64_t v37 = v54;
          uint64_t v39 = v28;
          uint64_t v40 = 0;
        }
        uint64_t result = sub_1BFFE54B8(v34, v35, v36, v37, v38, v39, v40, v27, 2u);
        goto LABEL_36;
      case 3:
        uint64_t result = sub_1BFFE54B8(v52, v51, v56, v54, v53, v4, v6, v5, 3u);
LABEL_36:
        uint64_t v21 = v46;
        if (!v46) {
          goto LABEL_37;
        }
        goto LABEL_11;
      default:
        int v11 = v9;
LABEL_10:
        uint64_t v21 = v8;
        if (v8)
        {
LABEL_11:
          uint64_t v22 = v57;
          uint64_t result = sub_1C05529C4(v57, v21);
          if (v11 == 254) {
            return result;
          }
        }
        else
        {
LABEL_37:
          uint64_t v22 = v57;
          if (v11 == 254) {
            return result;
          }
        }
        uint64_t result = sub_1C05A2814(v22);
        break;
    }
  }
  return result;
}

uint64_t sub_1C05ADEBC(uint64_t a1)
{
  return sub_1C05AD80C(a1);
}

uint64_t sub_1C05ADED4(uint64_t a1)
{
  return sub_1C05B4574(a1, (void (*)(uint64_t, uint64_t))sub_1C05918A4);
}

uint64_t sub_1C05ADF0C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  int v5 = *(unsigned __int8 *)(v1 + 128);
  uint64_t v6 = *(void *)(v1 + 136);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    if (v4) {
      uint64_t result = sub_1C05529C4(a1, v4);
    }
    if (v5 != 254) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if (v6)
    {
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain_n();
        int v9 = (unsigned char *)(v6 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1C05AE040(uint64_t a1)
{
  return sub_1C05ADF0C(a1);
}

uint64_t sub_1C05AE058(uint64_t result)
{
  if (*(unsigned __int8 *)(v1 + 16) >= 0xCu) {
    return sub_1C11C4648(result);
  }
  return result;
}

uint64_t sub_1C05AE098(uint64_t a1)
{
  return sub_1C05B5EE4(a1, (uint64_t)&unk_1F1B66640);
}

uint64_t sub_1C05AE0C4(uint64_t a1)
{
  return sub_1C05B60BC(a1, (uint64_t)&unk_1F1B665F0);
}

uint64_t sub_1C05AE0F0(uint64_t result)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v2;
  unint64_t v5 = result;
  switch((unint64_t)*v1 >> 61)
  {
    case 2uLL:
      uint64_t v6 = *(void *)(*(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 24);
      uint64_t v7 = *(void *)(v6 + 16);
      if (!v7)
      {
        swift_retain();
        goto LABEL_14;
      }
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v8 = v6 + 56;
      while (1)
      {
        uint64_t v9 = *(void *)(v8 - 24);
        uint64_t v10 = *(void *)(v8 - 16);
        char v11 = *(unsigned char *)(v8 - 8);
        sub_1BFF5B7E0(v9, v10, v11);
        swift_retain();
        sub_1C05AE0F0(v5);
        if (v4) {
          break;
        }
        v8 += 32;
        sub_1BFF5B7CC(v9, v10, v11);
        swift_release();
        if (!--v7)
        {
          swift_bridgeObjectRelease();
LABEL_14:
          sub_1C05AE0F0(v5);
          return swift_release();
        }
      }
      sub_1BFF5B7CC(v9, v10, v11);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 4uLL:
      swift_retain();
      swift_retain();
      sub_1C05AE0F0(v5);
      if (v2)
      {
        swift_release();
      }
      else
      {
        sub_1C05AE0F0(v5);
LABEL_16:
        swift_release();
      }
      return swift_release();
    case 5uLL:
      uint64_t v12 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain();
      sub_1C05AE0F0(v5);
      if (v2) {
        goto LABEL_16;
      }
      if (!v12) {
        return swift_release();
      }
      swift_retain();
      sub_1C05AE364(v5);
      swift_release();
      return swift_release_n();
    default:
      return result;
  }
}

uint64_t sub_1C05AE364(unint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v5 = v1[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    long long v7 = *(_OWORD *)(v5 + 192);
    long long v44 = *(_OWORD *)(v5 + 176);
    long long v45 = v7;
    long long v46 = *(_OWORD *)(v5 + 208);
    uint64_t v47 = *(void *)(v5 + 224);
    long long v8 = *(_OWORD *)(v5 + 128);
    long long v40 = *(_OWORD *)(v5 + 112);
    long long v41 = v8;
    long long v9 = *(_OWORD *)(v5 + 160);
    long long v42 = *(_OWORD *)(v5 + 144);
    long long v43 = v9;
    long long v10 = *(_OWORD *)(v5 + 48);
    long long v11 = *(_OWORD *)(v5 + 80);
    long long v12 = *(_OWORD *)(v5 + 96);
    long long v37 = *(_OWORD *)(v5 + 64);
    long long v38 = v11;
    long long v39 = v12;
    long long v35 = *(_OWORD *)(v5 + 32);
    long long v36 = v10;
    sub_1C05DC8FC((uint64_t)&v35);
    sub_1C05AF824(a1);
    if (v2)
    {
      sub_1C05DCA1C((uint64_t)&v35);
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v13 = 232;
    while (1)
    {
      sub_1C05DCA1C((uint64_t)&v35);
      if (!--v6) {
        break;
      }
      uint64_t v14 = v5 + v13;
      long long v15 = *(_OWORD *)(v5 + v13);
      v13 += 200;
      long long v35 = v15;
      long long v16 = *(_OWORD *)(v14 + 16);
      long long v17 = *(_OWORD *)(v14 + 32);
      long long v18 = *(_OWORD *)(v14 + 64);
      long long v38 = *(_OWORD *)(v14 + 48);
      long long v39 = v18;
      long long v36 = v16;
      long long v37 = v17;
      long long v19 = *(_OWORD *)(v14 + 80);
      long long v20 = *(_OWORD *)(v14 + 96);
      long long v21 = *(_OWORD *)(v14 + 128);
      long long v42 = *(_OWORD *)(v14 + 112);
      long long v43 = v21;
      long long v40 = v19;
      long long v41 = v20;
      long long v22 = *(_OWORD *)(v14 + 144);
      long long v23 = *(_OWORD *)(v14 + 160);
      long long v24 = *(_OWORD *)(v14 + 176);
      uint64_t v47 = *(void *)(v14 + 192);
      long long v45 = v23;
      long long v46 = v24;
      long long v44 = v22;
      sub_1C05DC8FC((uint64_t)&v35);
      sub_1C05AF824(a1);
    }
    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = v1[7];
  if (v26)
  {
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v28 = (unsigned char *)(v26 + 40);
      while (1)
      {
        if ((*v28 & 1) == 0)
        {
          *(void *)&long long v35 = *((void *)v28 - 1);
          uint64_t v29 = v35;
          swift_retain_n();
          sub_1C02D349C(a1);
          if (v2)
          {
            sub_1BFF49984(v29, 0);
            sub_1BFF49984(v29, 0);
            return swift_bridgeObjectRelease_n();
          }
          sub_1BFF49984(v29, 0);
          sub_1BFF49984(v29, 0);
        }
        v28 += 16;
        if (!--v27)
        {
          swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
  uint64_t result = swift_beginAccess();
  uint64_t v30 = v1[8];
  if (!v30 || (swift_bridgeObjectRetain(), sub_1C05619C4(a1, v30), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    if ((~v3[9] & 0xF000000000000007) == 0 || (uint64_t result = sub_1C05A2350(a1), !v2))
    {
      uint64_t v31 = v3[10];
      if (!v31 || (uint64_t result = sub_1C05529C4(a1, v31), !v2))
      {
        unint64_t v32 = v3[15];
        if (v32 >= 3)
        {
          if (v32 != 3)
          {
            unint64_t v33 = *(void *)(v32 + 16);
            unint64_t v34 = *(void *)(v32 + 24);
            sub_1BFEF6854(v3[15]);
            sub_1BFEF6A90(v33);
            sub_1BFEF6A90(v34);
            sub_1C05A1618(a1, v33, v34);
            sub_1BFEF70CC(v33);
            sub_1BFEF70CC(v34);
            uint64_t result = sub_1BFEF68D8(v32);
            if (v2) {
              return result;
            }
          }
        }
        else
        {
          uint64_t result = sub_1BFEF68D8(v3[15]);
        }
        if (*((unsigned __int8 *)v3 + 216) == 254 || (uint64_t result = sub_1C05A2814(a1), !v2))
        {
          if ((~v3[28] & 0xF000000000000007) == 0 || (uint64_t result = sub_1C05A2814(a1), !v2))
          {
            if (v3[30] != 1) {
              return sub_1C05AEE38(a1);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05AE768(uint64_t a1)
{
  return sub_1C05AE0F0(a1);
}

void *sub_1C05AE780(uint64_t a1)
{
  sub_1C00F5BA4(v1, (uint64_t)v11);
  sub_1C00F5BA4((uint64_t)v11, (uint64_t)v12);
  int v3 = sub_1C00F5C00((uint64_t)v12);
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v4 = sub_1C00F5EAC((uint64_t)v12);
      sub_1BFCF2D74(v4, (uint64_t)v10);
      int v5 = sub_1C00F5F20((uint64_t)v10);
      uint64_t v6 = (void *)sub_1C00F5F2C((uint64_t)v10);
      if (v5 == 1)
      {
        *(void *)&long long v9 = *v6;
        return (void *)sub_1C05A2814(a1);
      }
      else
      {
        return sub_1C05AA7EC(a1);
      }
    }
    else
    {
      return (void *)sub_1C00F5EAC((uint64_t)v12);
    }
  }
  else
  {
    uint64_t v8 = sub_1C00F5EAC((uint64_t)v12);
    sub_1C00F61EC(v8, (uint64_t)v10);
    sub_1C00F6034((uint64_t)v10, (uint64_t)&v9);
    return sub_1C05AA7EC(a1);
  }
}

void *sub_1C05AE8C4(uint64_t a1)
{
  return sub_1C05AE780(a1);
}

void *sub_1C05AE8DC(uint64_t a1)
{
  sub_1BFCF2D74(v1, (uint64_t)v5);
  sub_1BFCF2D74((uint64_t)v5, (uint64_t)v6);
  int v3 = sub_1C00F5F20((uint64_t)v6);
  sub_1C00F5F2C((uint64_t)v6);
  if (v3 == 1) {
    return (void *)sub_1C05A2814(a1);
  }
  else {
    return sub_1C05AA7EC(a1);
  }
}

void *sub_1C05AE998(uint64_t a1)
{
  sub_1C00F6034(v1, (uint64_t)v12);
  sub_1C00F6034((uint64_t)v12, (uint64_t)v13);
  if (sub_1C00F6090((uint64_t)v13) == 1)
  {
    uint64_t v4 = *(void *)(sub_1C00F609C((uint64_t)v13) + 112);
    sub_1C00F6034((uint64_t)v12, (uint64_t)v11);
    uint64_t v5 = sub_1C00F609C((uint64_t)v11);
    sub_1C0445004(v5);
    sub_1C05542D4(a1, v4);
  }
  else
  {
    uint64_t v6 = (uint64_t *)sub_1C00F609C((uint64_t)v13);
    uint64_t v7 = *v6;
    uint64_t v8 = v6[6];
    sub_1C00F6034((uint64_t)v12, (uint64_t)v11);
    uint64_t v9 = *(void *)(sub_1C00F609C((uint64_t)v11) + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFDB3920(v9);
    sub_1C05542D4(a1, v7);
    if (!v2 && v8) {
      sub_1C05B1ABC(a1);
    }
  }
  return sub_1C05DD52C(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5DC0);
}

uint64_t sub_1C05AEAD8(uint64_t a1)
{
  sub_1C00F61EC(v1, (uint64_t)v8);
  sub_1C00F61EC((uint64_t)v8, (uint64_t)v9);
  sub_1C00F6034((uint64_t)v9, (uint64_t)v10);
  int v4 = sub_1C00F6090((uint64_t)v10);
  uint64_t v5 = (uint64_t *)sub_1C00F609C((uint64_t)v10);
  if (v4 == 1) {
    return sub_1C05542D4(a1, v5[14]);
  }
  uint64_t v7 = v5[6];
  uint64_t result = sub_1C05542D4(a1, *v5);
  if (!v2)
  {
    if (v7) {
      return sub_1C05B1ABC(a1);
    }
  }
  return result;
}

void sub_1C05AEB94(unint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  sub_1C059E410(a1);
  if (!v2)
  {
    if (v4) {
      sub_1C05AE364(a1);
    }
  }
}

void sub_1C05AEBE0(unint64_t a1)
{
  int v3 = v1;
  sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v5 = v1[6];
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v6; ++i)
      {
        unint64_t v8 = *(void *)(v5 + 8 * i + 32);
        sub_1BFF32264(v8);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7]) {
      sub_1C05AE364(a1);
    }
    uint64_t v9 = v1[8];
    if (v9)
    {
      swift_beginAccess();
      uint64_t v10 = *(void *)(v9 + 72);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v10);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v11 = *(void *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v11);
      swift_bridgeObjectRelease();
    }
    sub_1C059E410(a1);
    swift_beginAccess();
    unint64_t v12 = v3[11];
    if (v12 >> 62 == 1)
    {
      unint64_t v13 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v12);
      sub_1BFE6FA30(v13);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v13, v14);
      sub_1BFF0056C(v13);
      swift_bridgeObjectRelease();
      sub_1BFF0056C(v12);
    }
  }
}

void sub_1C05AEE14(unint64_t a1)
{
}

uint64_t sub_1C05AEE38(uint64_t result)
{
  uint64_t v19 = result;
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  if (v4)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = (unsigned __int8 *)(v4 + 64);
      while (1)
      {
        uint64_t v7 = *((void *)v6 - 4);
        uint64_t v8 = *((void *)v6 - 3);
        uint64_t v9 = *((void *)v6 - 2);
        uint64_t v10 = *((void *)v6 - 1);
        unsigned __int8 v11 = *v6;
        sub_1BFCD9FD8(v7, v8, v9, v10, *v6);
        sub_1C05AF014(v19);
        if (v2) {
          break;
        }
        v6 += 40;
        sub_1BFCDA05C(v7, v8, v9, v10, v11);
        if (!--v5)
        {
          uint64_t result = swift_bridgeObjectRelease_n();
          goto LABEL_7;
        }
      }
      sub_1BFCDA05C(v7, v8, v9, v10, v11);
      return swift_bridgeObjectRelease_n();
    }
  }
LABEL_7:
  if (v3)
  {
    uint64_t v12 = *(void *)(v3 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = (unsigned __int8 *)(v3 + 64); ; i += 40)
      {
        uint64_t v14 = *((void *)i - 4);
        uint64_t v15 = *((void *)i - 3);
        uint64_t v16 = *((void *)i - 2);
        uint64_t v17 = *((void *)i - 1);
        unsigned __int8 v18 = *i;
        sub_1BFCD9FD8(v14, v15, v16, v17, *i);
        sub_1C05AF014(v19);
        if (v2) {
          break;
        }
        sub_1BFCDA05C(v14, v15, v16, v17, v18);
        if (!--v12) {
          return swift_bridgeObjectRelease_n();
        }
      }
      sub_1BFCDA05C(v14, v15, v16, v17, v18);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1C05AEFFC(uint64_t a1)
{
  return sub_1C05AEE38(a1);
}

uint64_t sub_1C05AF014(uint64_t result)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = result;
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      uint64_t v7 = *(void *)(v4 + 16);
      if (v7)
      {
        uint64_t v45 = *(void *)(v1 + 24);
        swift_bridgeObjectRetain();
        uint64_t v8 = (unsigned char *)(v4 + 40);
        do
        {
          if ((*v8 & 1) == 0)
          {
            uint64_t v9 = *((void *)v8 - 1);
            swift_retain_n();
            sub_1C02D349C(v6);
            sub_1BFF49984(v9, 0);
            sub_1BFF49984(v9, 0);
            if (v2) {
              break;
            }
          }
          v8 += 16;
          --v7;
        }
        while (v7);
        uint64_t v10 = v4;
        uint64_t v11 = v3;
        uint64_t v12 = v5;
        uint64_t v13 = v45;
        unsigned __int8 v14 = 1;
        return sub_1BFCDA05C(v10, v11, v12, v13, v14);
      }
      return result;
    case 2:
      uint64_t v15 = *(void *)(v4 + 16);
      if (v15)
      {
        uint64_t v46 = *(void *)(v1 + 24);
        swift_bridgeObjectRetain();
        uint64_t v16 = (unsigned char *)(v4 + 40);
        do
        {
          if ((*v16 & 1) == 0)
          {
            uint64_t v17 = *((void *)v16 - 1);
            swift_retain_n();
            sub_1C02D349C(v6);
            sub_1BFF49984(v17, 0);
            sub_1BFF49984(v17, 0);
            if (v2) {
              break;
            }
          }
          v16 += 16;
          --v15;
        }
        while (v15);
        uint64_t v10 = v4;
        uint64_t v11 = v3;
        uint64_t v12 = v5;
        uint64_t v13 = v46;
        unsigned __int8 v14 = 2;
        return sub_1BFCDA05C(v10, v11, v12, v13, v14);
      }
      return result;
    case 3:
      uint64_t v18 = *(void *)(v4 + 16);
      if (v18)
      {
        uint64_t v47 = *(void *)(v1 + 24);
        swift_bridgeObjectRetain();
        uint64_t v19 = (unsigned char *)(v4 + 40);
        do
        {
          if ((*v19 & 1) == 0)
          {
            uint64_t v20 = *((void *)v19 - 1);
            swift_retain_n();
            sub_1C02D349C(v6);
            sub_1BFF49984(v20, 0);
            sub_1BFF49984(v20, 0);
            if (v2) {
              break;
            }
          }
          v19 += 16;
          --v18;
        }
        while (v18);
        uint64_t v10 = v4;
        uint64_t v11 = v3;
        uint64_t v12 = v5;
        uint64_t v13 = v47;
        unsigned __int8 v14 = 3;
        return sub_1BFCDA05C(v10, v11, v12, v13, v14);
      }
      return result;
    case 4:
      uint64_t v21 = *(void *)(v4 + 16);
      if (!v21) {
        return result;
      }
      uint64_t v48 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      long long v22 = (unsigned char *)(v4 + 40);
      while (1)
      {
        if ((*v22 & 1) == 0)
        {
          uint64_t v23 = *((void *)v22 - 1);
          swift_retain_n();
          sub_1C02D349C(v6);
          if (v2)
          {
            sub_1BFF49984(v23, 0);
            sub_1BFF49984(v23, 0);
LABEL_70:
            uint64_t v10 = v4;
            uint64_t v11 = v3;
            uint64_t v12 = v5;
            uint64_t v13 = v48;
            unsigned __int8 v14 = 4;
            return sub_1BFCDA05C(v10, v11, v12, v13, v14);
          }
          sub_1BFF49984(v23, 0);
          sub_1BFF49984(v23, 0);
        }
        v22 += 16;
        if (!--v21) {
          goto LABEL_70;
        }
      }
    case 5:
      uint64_t v24 = *(void *)(v4 + 16);
      if (!v24) {
        return result;
      }
      uint64_t v49 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      long long v25 = (unsigned char *)(v4 + 40);
      while (2)
      {
        if (*v25) {
          goto LABEL_29;
        }
        uint64_t v26 = *((void *)v25 - 1);
        swift_retain_n();
        sub_1C02D349C(v6);
        if (!v2)
        {
          sub_1BFF49984(v26, 0);
          sub_1BFF49984(v26, 0);
LABEL_29:
          v25 += 16;
          if (!--v24) {
            goto LABEL_72;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v26, 0);
      sub_1BFF49984(v26, 0);
LABEL_72:
      uint64_t v10 = v4;
      uint64_t v11 = v3;
      uint64_t v12 = v5;
      uint64_t v13 = v49;
      unsigned __int8 v14 = 5;
      return sub_1BFCDA05C(v10, v11, v12, v13, v14);
    case 6:
      uint64_t v27 = *(void *)(v4 + 16);
      if (!v27) {
        return result;
      }
      uint64_t v50 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      uint64_t v28 = (unsigned char *)(v4 + 40);
      while (2)
      {
        if (*v28) {
          goto LABEL_35;
        }
        uint64_t v29 = *((void *)v28 - 1);
        swift_retain_n();
        sub_1C02D349C(v6);
        if (!v2)
        {
          sub_1BFF49984(v29, 0);
          sub_1BFF49984(v29, 0);
LABEL_35:
          v28 += 16;
          if (!--v27) {
            goto LABEL_74;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v29, 0);
      sub_1BFF49984(v29, 0);
LABEL_74:
      uint64_t v10 = v4;
      uint64_t v11 = v3;
      uint64_t v12 = v5;
      uint64_t v13 = v50;
      unsigned __int8 v14 = 6;
      return sub_1BFCDA05C(v10, v11, v12, v13, v14);
    case 7:
      uint64_t v30 = *(void *)(v4 + 16);
      if (!v30) {
        return result;
      }
      uint64_t v51 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      uint64_t v31 = (unsigned char *)(v4 + 40);
      while (2)
      {
        if (*v31) {
          goto LABEL_41;
        }
        uint64_t v32 = *((void *)v31 - 1);
        swift_retain_n();
        sub_1C02D349C(v6);
        if (!v2)
        {
          sub_1BFF49984(v32, 0);
          sub_1BFF49984(v32, 0);
LABEL_41:
          v31 += 16;
          if (!--v30) {
            goto LABEL_76;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v32, 0);
      sub_1BFF49984(v32, 0);
LABEL_76:
      uint64_t v10 = v4;
      uint64_t v11 = v3;
      uint64_t v12 = v5;
      uint64_t v13 = v51;
      unsigned __int8 v14 = 7;
      return sub_1BFCDA05C(v10, v11, v12, v13, v14);
    case 8:
      uint64_t v33 = *(void *)(v4 + 16);
      if (!v33) {
        return result;
      }
      uint64_t v52 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      unint64_t v34 = (unsigned char *)(v4 + 40);
      while (2)
      {
        if (*v34) {
          goto LABEL_47;
        }
        uint64_t v35 = *((void *)v34 - 1);
        swift_retain_n();
        sub_1C02D349C(v6);
        if (!v2)
        {
          sub_1BFF49984(v35, 0);
          sub_1BFF49984(v35, 0);
LABEL_47:
          v34 += 16;
          if (!--v33) {
            goto LABEL_78;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v35, 0);
      sub_1BFF49984(v35, 0);
LABEL_78:
      uint64_t v10 = v4;
      uint64_t v11 = v3;
      uint64_t v12 = v5;
      uint64_t v13 = v52;
      unsigned __int8 v14 = 8;
      return sub_1BFCDA05C(v10, v11, v12, v13, v14);
    case 9:
      uint64_t v36 = *(void *)(v4 + 16);
      if (!v36) {
        return result;
      }
      uint64_t v53 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      long long v37 = (unsigned char *)(v4 + 40);
      while (2)
      {
        if (*v37) {
          goto LABEL_53;
        }
        uint64_t v38 = *((void *)v37 - 1);
        swift_retain_n();
        sub_1C02D349C(v6);
        if (!v2)
        {
          sub_1BFF49984(v38, 0);
          sub_1BFF49984(v38, 0);
LABEL_53:
          v37 += 16;
          if (!--v36) {
            goto LABEL_80;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v38, 0);
      sub_1BFF49984(v38, 0);
LABEL_80:
      uint64_t v10 = v4;
      uint64_t v11 = v3;
      uint64_t v12 = v5;
      uint64_t v13 = v53;
      unsigned __int8 v14 = 9;
      return sub_1BFCDA05C(v10, v11, v12, v13, v14);
    case 0xA:
      uint64_t v39 = *(void *)(v4 + 16);
      if (!v39) {
        return result;
      }
      uint64_t v54 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      long long v40 = (unsigned char *)(v4 + 40);
      while (2)
      {
        if (*v40) {
          goto LABEL_59;
        }
        uint64_t v41 = *((void *)v40 - 1);
        swift_retain_n();
        sub_1C02D349C(v6);
        if (!v2)
        {
          sub_1BFF49984(v41, 0);
          sub_1BFF49984(v41, 0);
LABEL_59:
          v40 += 16;
          if (!--v39) {
            goto LABEL_82;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v41, 0);
      sub_1BFF49984(v41, 0);
LABEL_82:
      uint64_t v10 = v4;
      uint64_t v11 = v3;
      uint64_t v12 = v5;
      uint64_t v13 = v54;
      unsigned __int8 v14 = 10;
      return sub_1BFCDA05C(v10, v11, v12, v13, v14);
    case 0xB:
      uint64_t v42 = *(void *)(v4 + 16);
      if (!v42) {
        return result;
      }
      uint64_t v55 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      long long v43 = (unsigned char *)(v4 + 40);
      break;
    case 0xC:
      return result;
    default:
      return sub_1C05B2870(result);
  }
  while ((*v43 & 1) != 0)
  {
LABEL_65:
    v43 += 16;
    if (!--v42) {
      goto LABEL_84;
    }
  }
  uint64_t v44 = *((void *)v43 - 1);
  swift_retain_n();
  sub_1C02D349C(v6);
  if (!v2)
  {
    sub_1BFF49984(v44, 0);
    sub_1BFF49984(v44, 0);
    goto LABEL_65;
  }
  sub_1BFF49984(v44, 0);
  sub_1BFF49984(v44, 0);
LABEL_84:
  uint64_t v10 = v4;
  uint64_t v11 = v3;
  uint64_t v12 = v5;
  uint64_t v13 = v55;
  unsigned __int8 v14 = 11;
  return sub_1BFCDA05C(v10, v11, v12, v13, v14);
}

uint64_t sub_1C05AF788(uint64_t a1)
{
  return sub_1C05AF014(a1);
}

uint64_t sub_1C05AF7A0(uint64_t a1)
{
  return sub_1C05AF7B8(a1);
}

uint64_t sub_1C05AF7B8(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C05541DC(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05AF800(unint64_t a1)
{
  return sub_1C05AE364(a1);
}

uint64_t sub_1C05AF824(unint64_t a1)
{
  uint64_t v19 = *(void *)(v1 + 16);
  uint64_t v18 = *(void *)(v1 + 24);
  int v4 = *(unsigned __int8 *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  unint64_t v7 = *(void *)(v1 + 160);
  uint64_t v6 = *(void *)(v1 + 168);
  uint64_t v9 = *(void *)(v1 + 176);
  uint64_t v8 = *(void *)(v1 + 184);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    unint64_t v17 = v7;
    uint64_t v16 = v8;
    if ((~v19 & 0xF000000000000007) != 0) {
      sub_1C05A2350(a1);
    }
    if (v18) {
      sub_1C05529C4(a1, v18);
    }
    if (v4 != 254) {
      sub_1C05A2814(a1);
    }
    if ((~v5 & 0xF000000000000007) != 0) {
      sub_1C05A2814(a1);
    }
    uint64_t result = v7;
    if (v7 >= 3)
    {
      if (v7 != 3)
      {
        unint64_t v11 = *(void *)(v7 + 16);
        unint64_t v12 = *(void *)(v7 + 24);
        sub_1BFEF6854(v17);
        sub_1BFEF6A90(v11);
        sub_1BFEF6A90(v12);
        sub_1C05A1618(a1, v11, v12);
        sub_1BFEF70CC(v11);
        sub_1BFEF70CC(v12);
        uint64_t result = sub_1BFEF68D8(v17);
      }
    }
    else
    {
      uint64_t result = sub_1BFEF68D8(v7);
    }
    if (v6)
    {
      uint64_t v13 = *(void *)(v6 + 16);
      if (v13)
      {
        swift_bridgeObjectRetain_n();
        unsigned __int8 v14 = (unsigned char *)(v6 + 40);
        do
        {
          if ((*v14 & 1) == 0)
          {
            uint64_t v15 = *((void *)v14 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v15, 0);
            sub_1BFF49984(v15, 0);
          }
          v14 += 16;
          --v13;
        }
        while (v13);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
    if (v9) {
      uint64_t result = sub_1C05619C4(a1, v9);
    }
    if (v16 != 1) {
      return sub_1C05AEE38(a1);
    }
  }
  return result;
}

uint64_t sub_1C05AFA98(unint64_t a1)
{
  return sub_1C05AF824(a1);
}

unint64_t sub_1C05AFAB0(unint64_t result)
{
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >= 3)
  {
    unint64_t v3 = result;
    unint64_t v4 = *(void *)(v2 + 16);
    unint64_t v5 = *(void *)(v2 + 24);
    sub_1BFEF6A90(v4);
    sub_1BFEF6A90(v5);
    sub_1C05A1618(v3, v4, v5);
    sub_1BFEF70CC(v4);
    return sub_1BFEF70CC(v5);
  }
  return result;
}

uint64_t sub_1C05AFB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05B2454(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C05A1CFC);
}

unint64_t sub_1C05AFB54(uint64_t a1)
{
  unint64_t v3 = v1;
  unint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v6 = v1[6];
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v6 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7]) {
      sub_1C05B4574(a1, (void (*)(uint64_t, uint64_t))sub_1C0590F78);
    }
    uint64_t v10 = v1[8];
    if (v10)
    {
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 72);
      if (v11)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v11);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v12 = *(void *)(v10 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v12);
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = v3[9];
    if (v13 < 0)
    {
      uint64_t v17 = *(void *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = *(void *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C05A1CFC(a1, v17, v18);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    unint64_t result = swift_beginAccess();
    unint64_t v14 = v3[11];
    if (v14 >> 62 == 1)
    {
      unint64_t v15 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v16 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v14);
      sub_1BFE6FA30(v15);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v15, v16);
      sub_1BFF0056C(v15);
      swift_bridgeObjectRelease();
      return sub_1BFF0056C(v14);
    }
  }
  return result;
}

unint64_t sub_1C05AFDE0(uint64_t a1)
{
  return sub_1C05AFB54(a1);
}

uint64_t sub_1C05AFE04(uint64_t a1)
{
  return sub_1C05B4574(a1, (void (*)(uint64_t, uint64_t))sub_1C0590F78);
}

uint64_t sub_1C05AFE3C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  int v6 = *(unsigned __int8 *)(v1 + 136);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(v5 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v9 = (unsigned char *)(v5 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
    if (v4) {
      uint64_t result = sub_1C05529C4(a1, v4);
    }
    if (v6 != 254) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

uint64_t sub_1C05AFF88(uint64_t a1)
{
  return sub_1C05AFE3C(a1);
}

void sub_1C05AFFA0(unint64_t a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v10 = v3[11];
  uint64_t v12 = v3[13];
  uint64_t v11 = v3[14];
  swift_bridgeObjectRetain();
  sub_1C05550B8(a1, v9);
  uint64_t v13 = v2;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8) {
      sub_1C05B02E4(a1);
    }
    uint64_t v14 = *(void *)(v10 + 16);
    uint64_t v34 = v11;
    if (v14)
    {
      uint64_t v31 = v6;
      uint64_t v32 = v12;
      unint64_t v36 = a1;
      uint64_t v47 = 0;
      swift_bridgeObjectRetain_n();
      uint64_t v33 = v10;
      unint64_t v15 = (uint64_t *)(v10 + 48);
      do
      {
        uint64_t v37 = v14;
        uint64_t v17 = *(v15 - 2);
        uint64_t v16 = *(v15 - 1);
        uint64_t v18 = *v15;
        uint64_t v19 = v15[1];
        uint64_t v21 = v15[2];
        uint64_t v20 = v15[3];
        unint64_t v23 = v15[4];
        uint64_t v22 = v15[5];
        uint64_t v39 = v17;
        uint64_t v40 = v16;
        uint64_t v41 = v18;
        uint64_t v42 = v19;
        uint64_t v43 = v21;
        uint64_t v44 = v20;
        unint64_t v45 = v23;
        uint64_t v46 = v22;
        uint64_t v38 = v22;
        sub_1BFF95098(v17, v16, v18, v19, v21, v20, v23);
        uint64_t v24 = v47;
        sub_1C05B7D38(v36);
        uint64_t v47 = v24;
        if (v24)
        {
          sub_1BFF94FE4(v17, v16, v18, v19, v21, v20, v23);
          swift_bridgeObjectRelease_n();
          return;
        }
        v15 += 8;
        sub_1BFF94FE4(v17, v16, v18, v19, v21, v20, v23);
        uint64_t v14 = v37 - 1;
      }
      while (v37 != 1);
      swift_bridgeObjectRelease_n();
      uint64_t v13 = v47;
      uint64_t v25 = (uint64_t)v35;
      a1 = v36;
      uint64_t v6 = v31;
      uint64_t v12 = v32;
      uint64_t v26 = *(void *)(v32 + 16);
      if (v26) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
    uint64_t v25 = (uint64_t)v35;
    uint64_t v26 = *(void *)(v12 + 16);
    if (!v26)
    {
LABEL_15:
      uint64_t v30 = v34;
      swift_bridgeObjectRetain();
      sub_1C0561D78(a1, v30);
      swift_bridgeObjectRelease();
      return;
    }
LABEL_11:
    uint64_t v27 = v6;
    uint64_t v28 = v12 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v29 = *(void *)(v27 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFF83CC4(v28, v25, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v39 = *(void *)(v25 + 16);
      swift_retain();
      sub_1C05B8C90(a1);
      if (v13) {
        break;
      }
      swift_release();
      sub_1C05DDC60(v25, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v28 += v29;
      if (!--v26)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
    }
    swift_release();
    sub_1C05DDC60(v25, (uint64_t (*)(void))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease_n();
  }
}

void sub_1C05B02E4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v5);
  uint64_t v41 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v42 = (uint64_t)&v41 - v8;
  uint64_t v9 = type metadata accessor for FormatItemNodeAction();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, &qword_1EB8898A0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v41 - v14;
  if ((*(unsigned char *)(v1 + 112) & 0xFE) != 0x7E && (*(void *)(v1 + 48) & 0xF000000000000007) != 0xF000000000000007)
  {
    *(void *)&long long v43 = *(void *)(v1 + 48);
    sub_1C05A2814(a1);
    if (v2) {
      return;
    }
  }
  int v16 = *(unsigned __int8 *)(v1 + 176);
  if (v16 != 255)
  {
    uint64_t v17 = *(void *)(v1 + 168);
    long long v18 = *(_OWORD *)(v1 + 136);
    long long v43 = *(_OWORD *)(v1 + 120);
    long long v44 = v18;
    long long v45 = *(_OWORD *)(v1 + 152);
    uint64_t v46 = v17;
    char v47 = v16;
    sub_1C05A639C(a1);
    if (v2) {
      return;
    }
  }
  sub_1BFFA1314(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v15, &qword_1EB8898A0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) != 1)
  {
    sub_1BFF83CC4((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 2) < 6)
    {
LABEL_9:
      sub_1C05DDC60((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v28 = *(void *)v12;
      uint64_t v29 = *((void *)v12 + 1);
      uint64_t v30 = *((void *)v12 + 2);
      LODWORD(v42) = v12[25];
      unsigned int v31 = v12[24];
      *(void *)&long long v43 = v28;
      *((void *)&v43 + 1) = v29;
      *(void *)&long long v44 = v30;
      BYTE8(v44) = v31;
      BYTE9(v44) = v42;
      sub_1C05B1070(a1);
      sub_1C05D881C(v28, v29, v30, v31, v42, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
      if (!v2) {
        goto LABEL_9;
      }
LABEL_31:
      sub_1C05DDC60((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
      return;
    }
    uint64_t v32 = (uint64_t)v12;
    uint64_t v33 = v42;
    sub_1BFCCD5B8(v32, v42, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    uint64_t v34 = v41;
    sub_1BFF83CC4(v33, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    int v35 = swift_getEnumCaseMultiPayload();
    if (v35)
    {
      if (v35 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v36 = *v34;
        uint64_t v37 = v34[1];
        uint64_t v38 = v34[2];
        *(void *)&long long v43 = v36;
        *((void *)&v43 + 1) = v37;
        *(void *)&long long v44 = v38;
        char v48 = 6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1C12ECBDC((uint64_t *)&v43, &v48);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C05DDC60(v33, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
          goto LABEL_31;
        }
        uint64_t v40 = v39;
        swift_bridgeObjectRelease();
        sub_1C0F49260(v36, v37, v40, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1C05DDC60((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    }
    sub_1C05DDC60(v33, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    goto LABEL_9;
  }
  sub_1C05DDCC0((uint64_t)v15, &qword_1EB8898A0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
LABEL_10:
  unint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
  if (v20 >= 3)
  {
    if (v20 != 3)
    {
      *(void *)&long long v43 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
      *((void *)&v43 + 1) = v21;
      sub_1C05B1ABC(a1);
      if (v2) {
        return;
      }
    }
  }
  else
  {
    sub_1BFF8C734(v20);
  }
  uint64_t v22 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  uint64_t v23 = *v22;
  uint64_t v24 = *(void *)(*v22 + 16);
  if (v24)
  {
    uint64_t v25 = *(void *)(type metadata accessor for FormatItemNodeStyle.Selector(0) - 8);
    uint64_t v26 = v23 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v27 = *(void *)(v25 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C05B13BC(a1);
      if (v2) {
        break;
      }
      v26 += v27;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
}

void sub_1C05B08DC(unint64_t a1)
{
}

unint64_t sub_1C05B08F4(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v45 = v1[6];
  unint64_t result = sub_1C054EE74(a1);
  uint64_t v10 = v2;
  if (!v2)
  {
    uint64_t v40 = v8;
    swift_beginAccess();
    uint64_t v11 = v1[8];
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v12; ++i)
      {
        unint64_t v14 = *(void *)(v11 + 8 * i + 32);
        unint64_t v45 = v14;
        sub_1BFF32264(v14);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v14);
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v15 = (uint64_t)v40;
    swift_beginAccess();
    uint64_t v16 = v1[9];
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v37 = v6;
      uint64_t v38 = v3;
      unint64_t v41 = a1;
      uint64_t v53 = 0;
      swift_bridgeObjectRetain_n();
      uint64_t v39 = v16;
      long long v18 = (uint64_t *)(v16 + 48);
      while (1)
      {
        uint64_t v42 = v17;
        uint64_t v19 = *(v18 - 2);
        uint64_t v20 = *(v18 - 1);
        uint64_t v21 = *v18;
        uint64_t v22 = v18[1];
        uint64_t v23 = v18[2];
        uint64_t v24 = v18[3];
        unint64_t v26 = v18[4];
        uint64_t v25 = v18[5];
        unint64_t v45 = v19;
        uint64_t v46 = v20;
        uint64_t v47 = v21;
        uint64_t v48 = v22;
        uint64_t v49 = v23;
        uint64_t v50 = v24;
        unint64_t v51 = v26;
        uint64_t v52 = v25;
        uint64_t v43 = v25;
        sub_1BFF95098(v19, v20, v21, v22, v23, v24, v26);
        uint64_t v27 = v53;
        sub_1C05B7D38(v41);
        uint64_t v53 = v27;
        if (v27) {
          break;
        }
        v18 += 8;
        sub_1BFF94FE4(v19, v20, v21, v22, v23, v24, v26);
        uint64_t v17 = v42 - 1;
        if (v42 == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v10 = v53;
          a1 = v41;
          uint64_t v3 = v38;
          uint64_t v15 = (uint64_t)v40;
          uint64_t v6 = v37;
          goto LABEL_11;
        }
      }
      sub_1BFF94FE4(v19, v20, v21, v22, v23, v24, v26);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      uint64_t v28 = v3[11];
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29)
      {
        uint64_t v30 = v6;
        uint64_t v31 = v28 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        uint64_t v32 = *(void *)(v30 + 72);
        uint64_t v53 = v3[11];
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BFF83CC4(v31, v15, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v44 = *(void *)(v15 + 16);
          swift_retain();
          sub_1C05B8C90(a1);
          if (v10) {
            break;
          }
          swift_release();
          sub_1C05DDC60(v15, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v31 += v32;
          if (!--v29)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_16;
          }
        }
        swift_release();
        sub_1C05DDC60(v15, (uint64_t (*)(void))type metadata accessor for FormatOption);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        swift_beginAccess();
        unint64_t v33 = v3[14];
        if (v33 >> 62 != 1) {
          goto LABEL_18;
        }
        unint64_t v34 = *(void *)((v33 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v35 = *(void *)((v33 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        sub_1BFE6FA30(v3[14]);
        sub_1BFE6FA30(v34);
        swift_bridgeObjectRetain();
        sub_1C05A1AE0(a1, v34, v35);
        sub_1BFF0056C(v34);
        swift_bridgeObjectRelease();
        unint64_t result = sub_1BFF0056C(v33);
        if (!v10)
        {
LABEL_18:
          swift_beginAccess();
          uint64_t v36 = v3[15];
          swift_bridgeObjectRetain();
          sub_1C059045C(a1, v36);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05B0D88(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF83CC4(v3, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 2) >= 6)
  {
    if (result)
    {
      sub_1BFCCD5B8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      sub_1BFF83CC4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v22 = *v7;
          uint64_t v21 = v7[1];
          uint64_t v23 = v7[2];
          uint64_t v26 = v22;
          uint64_t v27 = v21;
          uint64_t v28 = v23;
          char v31 = 6;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_1C12ECBDC(&v26, &v31);
          if (!v2)
          {
            uint64_t v25 = v24;
            swift_bridgeObjectRelease();
            sub_1C0F49260(v22, v21, v25, 0);
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      }
      return sub_1C05DDC60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    }
    else
    {
      uint64_t v15 = *(void *)v13;
      uint64_t v16 = *((void *)v13 + 1);
      uint64_t v17 = *((void *)v13 + 2);
      char v18 = v13[25];
      unsigned int v19 = v13[24];
      uint64_t v26 = v15;
      uint64_t v27 = v16;
      uint64_t v28 = v17;
      char v29 = v19;
      char v30 = v18;
      sub_1C05B1070(a1);
      return sub_1C05D881C(v15, v16, v17, v19, v18, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
    }
  }
  return result;
}

void sub_1C05B1070(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  unsigned int v6 = *(unsigned __int8 *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 25);
  switch((4 * (v7 & 0x3F)) | (v6 >> 2) & 3)
  {
    case 1u:
    case 2u:
    case 4u:
    case 5u:
    case 8u:
      return;
    case 3u:
      goto LABEL_7;
    case 6u:
      if (v6 >> 6 > 1)
      {
        switch(v6 & 0x33333333)
        {
          case 1u:
            goto LABEL_18;
          case 2u:
            return;
          default:
            goto LABEL_17;
        }
      }
      else
      {
LABEL_7:
        if (*(void *)(v1 + 16) == 1 && (v4 & 0xF000000000000007) != 0xF000000000000007)
        {
          v12[0] = *(void *)v1;
LABEL_12:
          sub_1C1131F08(a1);
        }
      }
      break;
    case 7u:
      if (v6)
      {
        v12[0] = *(void *)v1;
        v12[1] = v3;
        v12[2] = v5;
        char v11 = 5;
        sub_1C05D881C(v4, v3, v5, v6, v7, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
        uint64_t v9 = sub_1C12ECBDC(v12, &v11);
        if (!v2)
        {
          uint64_t v10 = v9;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v4, v3, v10, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      switch((v6 >> 4) & 3)
      {
        case 1u:
          return;
        case 3u:
          if (v6 >> 6 < 2) {
            goto LABEL_7;
          }
          switch(v6 & 0xF)
          {
            case 1u:
LABEL_18:
              if ((~v3 & 0xF000000000000007) != 0)
              {
                v12[0] = *(void *)(v1 + 8);
                goto LABEL_12;
              }
              break;
            case 2u:
              return;
            default:
LABEL_17:
              sub_1C05D881C(v4, v3, v5, v6, v7, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C05D881C(v4, v3, v5, v6, v7, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              break;
          }
          break;
        default:
          goto LABEL_7;
      }
      break;
  }
}

uint64_t sub_1C05B133C(uint64_t a1)
{
  return sub_1C05B0D88(a1);
}

void sub_1C05B1354(uint64_t a1)
{
}

void sub_1C05B1398(uint64_t a1)
{
}

void sub_1C05B13BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v50 - v8;
  uint64_t v10 = type metadata accessor for FormatItemNodeAction();
  uint64_t v52 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, &qword_1EB8898A0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v50 - v14;
  uint64_t v16 = *(void *)(v1 + 8);
  *(void *)&long long v54 = *(void *)v1;
  *((void *)&v54 + 1) = v16;
  uint64_t v17 = (uint64_t)v53;
  sub_1C11C4648(a1);
  if (!v17)
  {
    uint64_t v50 = v6;
    unint64_t v51 = v9;
    uint64_t v53 = v15;
    if ((*(unsigned char *)(v1 + 80) & 0xFE) == 0x7E)
    {
      uint64_t v19 = (uint64_t)v12;
      uint64_t v18 = v52;
    }
    else
    {
      uint64_t v18 = v52;
      if ((*(void *)(v1 + 16) & 0xF000000000000007) != 0xF000000000000007)
      {
        *(void *)&long long v54 = *(void *)(v1 + 16);
        sub_1C05A2814(a1);
      }
      uint64_t v19 = (uint64_t)v12;
    }
    int v20 = *(unsigned __int8 *)(v1 + 144);
    if (v20 != 255)
    {
      uint64_t v21 = *(void *)(v1 + 136);
      long long v22 = *(_OWORD *)(v1 + 104);
      long long v54 = *(_OWORD *)(v1 + 88);
      long long v55 = v22;
      long long v56 = *(_OWORD *)(v1 + 120);
      uint64_t v57 = v21;
      char v58 = v20;
      sub_1C05A639C(a1);
    }
    uint64_t v23 = type metadata accessor for FormatItemNodeStyle.Selector(0);
    uint64_t v24 = (uint64_t)v53;
    sub_1BFFA1314(v2 + *(int *)(v23 + 28), (uint64_t)v53, &qword_1EB8898A0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v24, 1, v10) == 1)
    {
      sub_1C05DDCC0(v24, &qword_1EB8898A0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
      uint64_t v25 = a1;
    }
    else
    {
      sub_1BFF83CC4(v24, v19, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) >= 6)
      {
        uint64_t v34 = v2;
        if (EnumCaseMultiPayload)
        {
          uint64_t v43 = (uint64_t)v51;
          sub_1BFCCD5B8(v19, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
          uint64_t v44 = v50;
          sub_1BFF83CC4(v43, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
          int v45 = swift_getEnumCaseMultiPayload();
          if (v45)
          {
            if (v45 != 1)
            {
              uint64_t v46 = *v44;
              uint64_t v47 = v44[1];
              uint64_t v48 = v44[2];
              *(void *)&long long v54 = v46;
              *((void *)&v54 + 1) = v47;
              *(void *)&long long v55 = v48;
              char v59 = 6;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v49 = sub_1C12ECBDC((uint64_t *)&v54, &v59);
              swift_bridgeObjectRelease();
              sub_1C0F49260(v46, v47, v49, 0);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v25 = a1;
            uint64_t v24 = (uint64_t)v53;
          }
          else
          {
            sub_1C05DDC60((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
            uint64_t v25 = a1;
          }
          sub_1C05DDC60(v43, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
        }
        else
        {
          uint64_t v52 = v23;
          uint64_t v35 = *(void *)v19;
          uint64_t v36 = *(void *)(v19 + 8);
          uint64_t v37 = *(void *)(v19 + 16);
          unsigned int v38 = *(unsigned __int8 *)(v19 + 24);
          char v39 = *(unsigned char *)(v19 + 25);
          *(void *)&long long v54 = v35;
          *((void *)&v54 + 1) = v36;
          *(void *)&long long v55 = v37;
          BYTE8(v55) = v38;
          BYTE9(v55) = v39;
          sub_1C05B1070(a1);
          sub_1C05D881C(v35, v36, v37, v38, v39, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          uint64_t v25 = a1;
          uint64_t v23 = v52;
          uint64_t v24 = (uint64_t)v53;
        }
        uint64_t v2 = v34;
      }
      else
      {
        uint64_t v25 = a1;
      }
      sub_1C05DDC60(v24, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
    }
    uint64_t v27 = (unint64_t *)(v2 + *(int *)(v23 + 40));
    unint64_t v29 = *v27;
    unint64_t v28 = v27[1];
    if (*v27 < 3) {
      goto LABEL_15;
    }
    if (*v27 != 3)
    {
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        unint64_t v31 = swift_bridgeObjectRetain();
        sub_1BFFA1B08(v31);
        swift_bridgeObjectRetain();
        uint64_t v32 = (unsigned char *)(v29 + 40);
        do
        {
          if ((*v32 & 1) == 0)
          {
            *(void *)&long long v54 = *((void *)v32 - 1);
            uint64_t v33 = v54;
            swift_retain_n();
            sub_1C02D349C(v25);
            sub_1BFF49984(v33, 0);
            sub_1BFF49984(v33, 0);
          }
          v32 += 16;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1C05DCC00(*v27);
      }
      uint64_t v40 = *(void *)(v28 + 16);
      if (v40)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v41 = (unsigned char *)(v28 + 40);
        do
        {
          if ((*v41 & 1) == 0)
          {
            *(void *)&long long v54 = *((void *)v41 - 1);
            uint64_t v42 = v54;
            swift_retain_n();
            sub_1C02D349C(v25);
            sub_1BFF49984(v42, 0);
            sub_1BFF49984(v42, 0);
          }
          v41 += 16;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease_n();
      }
LABEL_15:
      sub_1BFF8C734(v29);
    }
  }
}

void sub_1C05B1AA4(uint64_t a1)
{
}

uint64_t sub_1C05B1ABC(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = *(void *)(*v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v7 = (unsigned char *)(v5 + 40);
    while (1)
    {
      if ((*v7 & 1) == 0)
      {
        uint64_t v8 = *((void *)v7 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v8, 0);
        sub_1BFF49984(v8, 0);
        if (v2) {
          break;
        }
      }
      v7 += 16;
      if (!--v6)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    uint64_t v9 = *(void *)(v4 + 16);
    if (!v9) {
      return result;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v10 = (unsigned char *)(v4 + 40);
    do
    {
      if ((*v10 & 1) == 0)
      {
        uint64_t v11 = *((void *)v10 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v11, 0);
        sub_1BFF49984(v11, 0);
        if (v2) {
          break;
        }
      }
      v10 += 16;
      --v9;
    }
    while (v9);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C05B1C10(uint64_t result)
{
  if (*v1 >= 3uLL) {
    return sub_1C05B1ABC(result);
  }
  return result;
}

uint64_t sub_1C05B1C50(uint64_t a1)
{
  return sub_1C05B1ABC(a1);
}

uint64_t sub_1C05B1C68(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  if ((~*v1 & 0xF000000000000007) == 0 || (uint64_t result = sub_1C05A2814(result), !v2))
  {
    if ((~v4 & 0xF000000000000007) == 0 || (uint64_t result = sub_1C02D349C(v3), !v2))
    {
      if ((~v5 & 0xF000000000000007) != 0) {
        return sub_1C02D349C(v3);
      }
    }
  }
  return result;
}

uint64_t sub_1C05B1CF8(uint64_t a1)
{
  return sub_1C05B1C68(a1);
}

uint64_t sub_1C05B1D34(uint64_t a1)
{
  return sub_1C05B1C68(a1);
}

unint64_t sub_1C05B1D4C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = v1[4];
  if (v6 < 0)
  {
    uint64_t v8 = *(void *)((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v9 = *(void *)((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C05A198C(a1, v8, v9);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (v1[5])
    {
LABEL_3:
      unint64_t result = sub_1C05B1FF0(a1);
      if (v3) {
        return result;
      }
    }
  }
  else if (v1[5])
  {
    goto LABEL_3;
  }
  uint64_t v10 = v1[6];
  if (!v10) {
    goto LABEL_22;
  }
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 72);
  if (!v11 || (swift_bridgeObjectRetain(), sub_1C055478C(a1, v11), unint64_t result = swift_bridgeObjectRelease(), !v3))
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(v10 + 88);
    swift_bridgeObjectRetain();
    sub_1C0592130(a1, v12);
    unint64_t result = swift_bridgeObjectRelease();
    if (!v3)
    {
LABEL_22:
      unint64_t result = sub_1C054EE74(a1);
      if (!v3)
      {
        swift_beginAccess();
        uint64_t v13 = v4[9];
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14)
        {
          swift_bridgeObjectRetain_n();
          for (uint64_t i = 0; i != v14; ++i)
          {
            unint64_t v16 = *(void *)(v13 + 8 * i + 32);
            sub_1BFF32264(v16);
            sub_1C059B1D4(a1);
            sub_1BFF31E90(v16);
          }
          swift_bridgeObjectRelease_n();
        }
        unint64_t result = swift_beginAccess();
        unint64_t v17 = v4[11];
        if (v17 >> 62 == 1)
        {
          unint64_t v18 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v19 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          sub_1BFE6FA30(v17);
          sub_1BFE6FA30(v18);
          swift_bridgeObjectRetain();
          sub_1C05A1AE0(a1, v18, v19);
          sub_1BFF0056C(v18);
          swift_bridgeObjectRelease();
          return sub_1BFF0056C(v17);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05B1FF0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    long long v7 = *(_OWORD *)(v5 + 192);
    long long v49 = *(_OWORD *)(v5 + 176);
    long long v50 = v7;
    long long v8 = *(_OWORD *)(v5 + 224);
    long long v51 = *(_OWORD *)(v5 + 208);
    long long v52 = v8;
    long long v9 = *(_OWORD *)(v5 + 128);
    long long v45 = *(_OWORD *)(v5 + 112);
    long long v46 = v9;
    long long v10 = *(_OWORD *)(v5 + 160);
    long long v47 = *(_OWORD *)(v5 + 144);
    long long v48 = v10;
    long long v11 = *(_OWORD *)(v5 + 48);
    long long v12 = *(_OWORD *)(v5 + 80);
    long long v13 = *(_OWORD *)(v5 + 96);
    long long v42 = *(_OWORD *)(v5 + 64);
    long long v43 = v12;
    long long v44 = v13;
    long long v40 = *(_OWORD *)(v5 + 32);
    long long v41 = v11;
    sub_1C05DCC88((uint64_t)&v40);
    sub_1C05B24FC(a1);
    if (v2)
    {
      sub_1C05DCDB4((uint64_t)&v40);
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v14 = 240;
    while (1)
    {
      sub_1C05DCDB4((uint64_t)&v40);
      if (!--v6) {
        break;
      }
      uint64_t v15 = (_OWORD *)(v5 + v14);
      long long v16 = *(_OWORD *)(v5 + v14);
      v14 += 208;
      long long v40 = v16;
      long long v17 = v15[1];
      long long v18 = v15[2];
      long long v19 = v15[4];
      long long v43 = v15[3];
      long long v44 = v19;
      long long v41 = v17;
      long long v42 = v18;
      long long v20 = v15[5];
      long long v21 = v15[6];
      long long v22 = v15[8];
      long long v47 = v15[7];
      long long v48 = v22;
      long long v45 = v20;
      long long v46 = v21;
      long long v23 = v15[9];
      long long v24 = v15[10];
      long long v25 = v15[12];
      long long v51 = v15[11];
      long long v52 = v25;
      long long v49 = v23;
      long long v50 = v24;
      sub_1C05DCC88((uint64_t)&v40);
      sub_1C05B24FC(a1);
    }
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = *(void *)(v1 + 56);
  if (v26)
  {
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v28 = (unsigned char *)(v26 + 40);
      while (1)
      {
        if ((*v28 & 1) == 0)
        {
          *(void *)&long long v40 = *((void *)v28 - 1);
          uint64_t v29 = v40;
          swift_retain_n();
          sub_1C02D349C(a1);
          if (v2)
          {
            sub_1BFF49984(v29, 0);
            sub_1BFF49984(v29, 0);
            return swift_bridgeObjectRelease_n();
          }
          sub_1BFF49984(v29, 0);
          sub_1BFF49984(v29, 0);
        }
        v28 += 16;
        if (!--v27)
        {
          uint64_t result = swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
  if ((~*(void *)(v1 + 64) & 0xF000000000000007) == 0
    || (*(void *)&v40 = *(void *)(v1 + 64), uint64_t result = sub_1C05A2350(a1), !v2))
  {
    uint64_t v30 = *(void *)(v1 + 72);
    if (!v30 || (uint64_t result = sub_1C05529C4(a1, v30), !v2))
    {
      if (*(unsigned __int8 *)(v1 + 184) == 254
        || (*(void *)&v40 = *(void *)(v1 + 136), uint64_t result = sub_1C05A2814(a1), !v2))
      {
        int v31 = *(unsigned __int8 *)(v1 + 208);
        if (v31 != 255)
        {
          uint64_t v32 = *(void *)(v1 + 192);
          uint64_t v33 = *(void *)(v1 + 200);
          if (v31)
          {
            sub_1BFFC8784(*(void *)(v1 + 192), *(void *)(v1 + 200), *(unsigned char *)(v1 + 208));
            uint64_t v34 = sub_1C00B857C((uint64_t)&unk_1F1B66348);
            sub_1C0F49260(v32, v33, v34, 0);
            swift_bridgeObjectRelease();
            uint64_t result = sub_1BFFC879C(v32, v33, v31);
            if (v2) {
              return result;
            }
          }
          else
          {
            uint64_t result = sub_1BFFC879C(*(void *)(v1 + 192), *(void *)(v1 + 200), *(unsigned char *)(v1 + 208));
          }
        }
        int v35 = *(unsigned __int8 *)(v1 + 232);
        if (v35 != 255)
        {
          uint64_t v36 = *(void *)(v1 + 216);
          uint64_t v37 = *(void *)(v1 + 224);
          if (v35)
          {
            sub_1BFFC8784(*(void *)(v1 + 216), *(void *)(v1 + 224), *(unsigned char *)(v1 + 232));
            uint64_t v38 = sub_1C00B857C((uint64_t)&unk_1F1B66370);
            sub_1C0F49260(v36, v37, v38, 0);
            swift_bridgeObjectRelease();
            uint64_t result = sub_1BFFC879C(v36, v37, v35);
            if (v2) {
              return result;
            }
          }
          else
          {
            uint64_t result = sub_1BFFC879C(*(void *)(v1 + 216), *(void *)(v1 + 224), *(unsigned char *)(v1 + 232));
          }
        }
        uint64_t v39 = *(void *)(v1 + 240);
        if (v39) {
          return sub_1C0552B44(a1, v39);
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C05B2404(uint64_t a1)
{
  return sub_1C05B1D4C(a1);
}

uint64_t sub_1C05B2428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05B2454(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C05A198C);
}

uint64_t sub_1C05B2454(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  if ((*v4 & 0x8000000000000000) != 0)
  {
    uint64_t v6 = result;
    uint64_t v7 = *v4 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v8 = *(void *)(v7 + 0x10);
    uint64_t v9 = *(void *)(v7 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    a4(v6, v8, v9);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C05B24D8(uint64_t a1)
{
  return sub_1C05B1FF0(a1);
}

uint64_t sub_1C05B24FC(uint64_t a1)
{
  uint64_t v29 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v1 + 32);
  uint64_t v25 = *(void *)(v1 + 24);
  int v27 = *(unsigned __int8 *)(v1 + 144);
  uint64_t v4 = *(void *)(v1 + 160);
  uint64_t v28 = *(void *)(v1 + 152);
  int v5 = *(unsigned __int8 *)(v1 + 168);
  uint64_t v6 = *(void *)(v1 + 176);
  uint64_t v7 = *(void *)(v1 + 184);
  int v8 = *(unsigned __int8 *)(v1 + 192);
  uint64_t v9 = *(void *)(v1 + 200);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    uint64_t v11 = a1;
    uint64_t v21 = v9;
    uint64_t v23 = v7;
    int v22 = v5;
    uint64_t v24 = v6;
    if (v29)
    {
      uint64_t v12 = *(void *)(v29 + 16);
      uint64_t v13 = a1;
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v14 = (unsigned char *)(v29 + 40);
        do
        {
          if ((*v14 & 1) == 0)
          {
            uint64_t v15 = *((void *)v14 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v15, 0);
            sub_1BFF49984(v15, 0);
          }
          v14 += 16;
          --v12;
        }
        while (v12);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      int v18 = v8;
      uint64_t v17 = v4;
      uint64_t v16 = v23;
    }
    else
    {
      uint64_t v17 = v4;
      uint64_t v16 = v7;
      uint64_t v13 = v11;
      int v18 = v8;
    }
    if ((~v25 & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2350(v13);
    }
    if (v26) {
      uint64_t result = sub_1C05529C4(v13, v26);
    }
    if (v27 != 254) {
      uint64_t result = sub_1C05A2814(v13);
    }
    if (v22 != 255)
    {
      if (v22)
      {
        sub_1BFFC8784(v28, v17, v22);
        uint64_t v19 = sub_1C00B857C((uint64_t)&unk_1F1B662F8);
        sub_1C0F49260(v28, v17, v19, 0);
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_1BFFC879C(v28, v17, v22);
    }
    if (v18 != 255)
    {
      if (v18)
      {
        sub_1BFFC8784(v24, v16, v18);
        uint64_t v20 = sub_1C00B857C((uint64_t)&unk_1F1B66320);
        sub_1C0F49260(v24, v16, v20, 0);
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_1BFFC879C(v24, v16, v18);
    }
    if (v21) {
      return sub_1C0552B44(v13, v21);
    }
  }
  return result;
}

uint64_t sub_1C05B2828(uint64_t a1)
{
  return sub_1C05B24FC(a1);
}

uint64_t sub_1C05B2840(uint64_t a1)
{
  return sub_1C05A8878(a1);
}

uint64_t sub_1C05B2858(uint64_t a1)
{
  return sub_1C059CDC8(a1);
}

uint64_t sub_1C05B2870(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v19 = v1[3];
  uint64_t v7 = *(void *)(*v1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    int v8 = (unsigned char *)(v5 + 40);
    while (1)
    {
      if ((*v8 & 1) == 0)
      {
        uint64_t v9 = *((void *)v8 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        if (v2)
        {
          sub_1BFF49984(v9, 0);
          sub_1BFF49984(v9, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BFF49984(v9, 0);
        sub_1BFF49984(v9, 0);
      }
      v8 += 16;
      if (!--v7)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
  uint64_t v10 = *(void *)(v4 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v11 = (unsigned char *)(v4 + 40);
    do
    {
      if ((*v11 & 1) == 0)
      {
        uint64_t v12 = *((void *)v11 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        if (v2)
        {
          sub_1BFF49984(v12, 0);
          sub_1BFF49984(v12, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BFF49984(v12, 0);
        sub_1BFF49984(v12, 0);
      }
      v11 += 16;
      --v10;
    }
    while (v10);
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = *(void *)(v6 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v14 = (unsigned char *)(v6 + 40);
    while (1)
    {
      if ((*v14 & 1) == 0)
      {
        uint64_t v15 = *((void *)v14 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v15, 0);
        sub_1BFF49984(v15, 0);
        if (v2) {
          break;
        }
      }
      v14 += 16;
      if (!--v13)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_23:
    uint64_t v16 = *(void *)(v19 + 16);
    if (!v16) {
      return result;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v17 = (unsigned char *)(v19 + 40);
    do
    {
      if ((*v17 & 1) == 0)
      {
        uint64_t v18 = *((void *)v17 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v18, 0);
        sub_1BFF49984(v18, 0);
        if (v2) {
          break;
        }
      }
      v17 += 16;
      --v16;
    }
    while (v16);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C05B2B04(uint64_t result)
{
  if (*(unsigned char *)(v1 + 32) == 1) {
    return sub_1C05B2870(result);
  }
  return result;
}

void sub_1C05B2B44(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
}

void sub_1C05B2B5C(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  long long v6 = *(_OWORD *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 64);
  if ((~v4 & 0xF000000000000007) != 0 || (*(void *)(v1 + 24) & 7) != 7)
  {
    long long v12 = *(_OWORD *)(v1 + 32);
    uint64_t v10 = *(void *)v1;
    if ((v5 & 4) != 0)
    {
      sub_1C1131F08((uint64_t)a1);
      *(void *)&long long v6 = v12;
      if (v2) {
        return;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(v1 + 16);
      sub_1C0007DB4(v10, v4, v11, v5);
      sub_1C05A0E80(a1, v10, v4, v11);
      sub_1C05DD214(v10, v4, v11, v5);
      *(void *)&long long v6 = v12;
      if (v2) {
        return;
      }
    }
  }
  if ((~((unint64_t)v6 & v7) & 0x3000000000000007) == 0 || (sub_1C05B2D4C((uint64_t)a1), !v2)) {
    sub_1C056E12C(a1, v8);
  }
}

void sub_1C05B2CA0(_OWORD *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[3];
  if ((v4 & 4) != 0)
  {
    sub_1C1131F08((uint64_t)a1);
  }
  else
  {
    uint64_t v7 = v1 + 1;
    uint64_t v5 = v1[1];
    uint64_t v6 = v7[1];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C05A0E80(a1, v3, v5, v6);
    sub_1C0007E38(v3, v5, v6, v4);
  }
}

void sub_1C05B2D4C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[2];
  if ((v5 & 0x2000000000000000) != 0)
  {
    sub_1C05B3588(a1);
  }
  else
  {
    uint64_t v6 = v1[1];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C05A70AC(a1);
    if (!v2)
    {
      sub_1C05820C0(a1, v6);
      sub_1C05B3588(a1);
    }
    sub_1C0007E9C(v4, v6, v5);
  }
}

void sub_1C05B2E34(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
}

void sub_1C05B2E4C(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  if (v4 == 255 || (v4 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v7 + 24);
  sub_1C01DCFFC((void *)v7, 1);
  sub_1C0558754(a1, v8);
  if (!v2)
  {
    sub_1C05A7454(a1, *(void **)(v7 + 32));
    sub_1C05DCEE4((void *)v7, v4);
LABEL_6:
    sub_1C0558918(a1, v5);
    return;
  }
  sub_1C05DCEE4((void *)v7, v4);
}

void sub_1C05B2F14(uint64_t a1)
{
}

void sub_1C05B2F2C(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), unint64_t a2)
{
  switch(a2 >> 61)
  {
    case 1uLL:
      sub_1C05B2B5C(a1);
      return;
    case 2uLL:
      uint64_t v9 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0574858(a1, v9);
      if (!v2)
      {
        swift_retain();
        sub_1C05B2F2C(a1, v10);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 3uLL:
      uint64_t v11 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v12 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05A70AC((uint64_t)a1);
      if (v2)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        sub_1C0566020(a1, v11);
        swift_retain();
        sub_1C05B2F2C(a1, v12);
        swift_bridgeObjectRelease();
        swift_release();
LABEL_14:
        swift_release_n();
      }
      return;
    case 4uLL:
      return;
    default:
      uint64_t v4 = *(void *)(a2 + 16);
      uint64_t v5 = *(void *)(a2 + 40);
      unint64_t v6 = *(void *)(a2 + 72);
      if ((v5 & 4) != 0)
      {
        sub_1C1131F08((uint64_t)a1);
        if (v2) {
          return;
        }
      }
      else
      {
        uint64_t v8 = *(void *)(a2 + 24);
        uint64_t v7 = *(void *)(a2 + 32);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C05A0E80(a1, v4, v8, v7);
        sub_1C0007E38(v4, v8, v7, v5);
        if (v2) {
          return;
        }
      }
      sub_1C05B2D4C((uint64_t)a1);
      sub_1C05B38D4(a1, v6);
      return;
  }
}

void sub_1C05B31F8(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[3];
  unint64_t v6 = v1[7];
  if ((v5 & 4) != 0)
  {
    sub_1C1131F08((uint64_t)a1);
    uint64_t v10 = v2;
    if (v2) {
      return;
    }
  }
  else
  {
    uint64_t v9 = v1 + 1;
    uint64_t v7 = v1[1];
    uint64_t v8 = v9[1];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C05A0E80(a1, v4, v7, v8);
    uint64_t v10 = v2;
    sub_1C0007E38(v4, v7, v8, v5);
    if (v2) {
      return;
    }
  }
  sub_1C05B2D4C((uint64_t)a1);
  if (!v10) {
    sub_1C05B38D4(a1, v6);
  }
}

void sub_1C05B3300(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  sub_1C05B2F2C(a1, *v1);
}

void sub_1C05B331C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v2;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      sub_1C05B2E4C(a1);
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(*(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 24);
      swift_retain();
      sub_1C0555260(a1, v11);
      if (!v4) {
        sub_1C05B331C(a1);
      }
      goto LABEL_9;
    case 3uLL:
    case 4uLL:
      return;
    default:
      if (*(unsigned char *)(v3 + 48))
      {
        uint64_t v6 = *(void *)(v3 + 16);
        uint64_t v7 = *(void *)(v3 + 24);
        char v8 = *(unsigned char *)(v3 + 32);
        uint64_t v9 = *(void *)(v3 + 40);
        uint64_t v10 = *(void *)(v9 + 24);
        sub_1C04B5340(v6, v7, v8);
        sub_1C01DCFFC((void *)v9, 1);
        swift_retain();
        sub_1C01DCFFC((void *)v9, 1);
        sub_1C0558754(a1, v10);
        if (!v2) {
          sub_1C05A7454(a1, *(void **)(v9 + 32));
        }
        sub_1C01DD018((void *)v9, 1);
        sub_1C04B5360(v6, v7, v8);
        sub_1C01DD018((void *)v9, 1);
LABEL_9:
        swift_release();
      }
      break;
  }
}

void sub_1C05B34EC(uint64_t a1)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t v6 = *(void *)(v5 + 24);
    swift_retain();
    sub_1C0558754(a1, v6);
    if (!v3) {
      sub_1C05A7454(a1, *(void **)(v5 + 32));
    }
    sub_1C01DD018((void *)v5, 1);
  }
}

void sub_1C05B3570(uint64_t a1)
{
}

void sub_1C05B3588(uint64_t a1)
{
  uint64_t v4 = *v1 >> 62;
  if (!v4)
  {
    sub_1C059E900(a1);
    return;
  }
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v6 = *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v7 = *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v8 = *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
    int v9 = *(unsigned __int8 *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x40);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v5;
    *(void *)(v10 + 24) = v6;
    *(void *)(v10 + 32) = v7;
    *(void *)(v10 + 40) = v8;
    unint64_t v11 = v10 | 0x9000000000000000;
    uint64_t v12 = *(void **)(a1 + 48);
    uint64_t v13 = v12[2];
    if (v13)
    {
      unint64_t v14 = v12[v13 + 3];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v15 = sub_1C0387D88(v14, v11);
      swift_release();
      swift_release();
      if (v15)
      {
        swift_release();
        if (v9 == 255) {
          return;
        }
LABEL_16:
        sub_1C05A4D8C(a1);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1C0EE23FC(0, v12[2] + 1, 1, v12);
    }
    unint64_t v18 = v12[2];
    unint64_t v17 = v12[3];
    if (v18 >= v17 >> 1) {
      uint64_t v12 = sub_1C0EE23FC((void *)(v17 > 1), v18 + 1, 1, v12);
    }
    v12[2] = v18 + 1;
    v12[v18 + 4] = v11;
    swift_release();
    *(void *)(a1 + 48) = v12;
    if (v9 != 255) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C05B3588(a1);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C0584FA4(a1, v16);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1C05B3838(uint64_t a1)
{
}

void sub_1C05B3850(uint64_t a1)
{
  uint64_t v3 = v2;
  if (*((unsigned char *)v1 + 8) == 1)
  {
    uint64_t v5 = *v1;
    uint64_t v6 = *(void *)(v5 + 24);
    swift_retain();
    sub_1C0558754(a1, v6);
    if (!v3) {
      sub_1C05A7454(a1, *(void **)(v5 + 32));
    }
    sub_1C01DD018((void *)v5, 1);
  }
}

void sub_1C05B38D4(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), unint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)&v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v29[-v9];
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v13 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v13 + 24);
      uint64_t v16 = *(void *)(v13 + 32);
      unsigned int v17 = *(unsigned __int8 *)(v13 + 40);
      char v18 = *(unsigned char *)(v13 + 41);
      switch((4 * (v18 & 0x3F)) | (v17 >> 2) & 3)
      {
        case 1u:
        case 2u:
        case 4u:
        case 5u:
        case 8u:
          return;
        case 3u:
          goto LABEL_18;
        case 6u:
          if (v17 >> 6 > 1)
          {
            switch(v17 & 0x33333333)
            {
              case 1u:
                goto LABEL_29;
              case 2u:
                return;
              default:
                goto LABEL_28;
            }
          }
          else
          {
LABEL_18:
            if (*(void *)(v13 + 32) == 1 && (v14 & 0xF000000000000007) != 0xF000000000000007)
            {
              uint64_t v31 = *(void *)(v13 + 16);
LABEL_23:
              sub_1C1131F08((uint64_t)a1);
            }
          }
          return;
        case 7u:
          if ((v17 & 1) == 0) {
            return;
          }
          uint64_t v31 = *(void *)(v13 + 16);
          uint64_t v32 = v15;
          uint64_t v33 = v16;
          char v30 = 5;
          sub_1C05D881C(v14, v15, v16, v17, v18, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
          uint64_t v27 = sub_1C12ECBDC(&v31, &v30);
          if (v2) {
            return;
          }
          uint64_t v28 = v27;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v14, v15, v28, 0);
          swift_bridgeObjectRelease();
          break;
        default:
          switch((v17 >> 4) & 3)
          {
            case 1u:
              return;
            case 3u:
              if (v17 >> 6 < 2) {
                goto LABEL_18;
              }
              switch(v17 & 0xF)
              {
                case 1u:
LABEL_29:
                  if ((~v15 & 0xF000000000000007) != 0)
                  {
                    uint64_t v31 = *(void *)(v13 + 24);
                    goto LABEL_23;
                  }
                  break;
                case 2u:
                  return;
                default:
LABEL_28:
                  sub_1C05D881C(v14, v15, v16, v17, v18, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C05D881C(v14, v15, v16, v17, v18, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  break;
              }
              break;
            default:
              goto LABEL_18;
          }
          return;
      }
      goto LABEL_10;
    case 2uLL:
      uint64_t v19 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v20 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05A1044(a1, v19, v20);
      swift_release();
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 3uLL:
      return;
    default:
      uint64_t v11 = swift_projectBox();
      sub_1BFF83CC4(v11, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      sub_1BFF83CC4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v22 = *v7;
          uint64_t v21 = v7[1];
          uint64_t v23 = v7[2];
          uint64_t v31 = v22;
          uint64_t v32 = v21;
          uint64_t v33 = v23;
          char v30 = 6;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_1C12ECBDC(&v31, &v30);
          if (!v2)
          {
            uint64_t v25 = v24;
            swift_bridgeObjectRelease();
            sub_1C0F49260(v22, v21, v25, 0);
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      }
      sub_1C05DDC60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
      break;
  }
}

void sub_1C05B3DB0(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
}

void sub_1C05B3DC8(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  sub_1C05B38D4(a1, *v1);
}

void sub_1C05B3DE4(uint64_t a1)
{
}

uint64_t sub_1C05B3DFC(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29[-1] - v8;
  uint64_t v10 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v29[-1] - v14;
  uint64_t v16 = *v1;
  unint64_t v17 = (unint64_t)*v1 >> 62;
  if (v17)
  {
    if (v17 == 1)
    {
      uint64_t v18 = *(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      v29[0] = *(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      sub_1C05B3DFC(a1);
      if (!v2)
      {
        v29[0] = v18;
        sub_1C05B3DFC(a1);
      }
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v22 = *(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      v29[0] = *(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05B3DFC(a1);
      if (v2)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C0596EB4(a1, v22);
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    uint64_t v20 = swift_projectBox();
    sub_1BFF83CC4(v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
    sub_1BFF83CC4((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
    sub_1BFCCD5B8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatURL);
    sub_1BFF83CC4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v6[24])
      {
        uint64_t v23 = *((void *)v6 + 1);
        uint64_t v25 = *((void *)v6 + 2);
        v29[0] = *(void *)v6;
        uint64_t v24 = v29[0];
        v29[1] = v23;
        v29[2] = v25;
        char v30 = 6;
        sub_1BFE86E48(v29[0], v23, v25, 0);
        uint64_t v26 = sub_1C12ECBDC(v29, &v30);
        if (!v2)
        {
          uint64_t v27 = v26;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v24, v23, v27, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1BFD7418C(v24, v23, v25, 0);
      }
    }
    else
    {
      sub_1C05DDC60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatURL);
    return sub_1C05DDC60((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
  }
}

uint64_t sub_1C05B41A8(uint64_t a1)
{
  uint64_t v4 = *v1;
  sub_1C05DC640((uint64_t)(v1 + 1), (uint64_t)v7, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  v6[18] = v4;
  uint64_t result = sub_1C05B3DFC(a1);
  if (!v2)
  {
    sub_1C05DC640((uint64_t)v7, (uint64_t)v6, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    uint64_t result = sub_1C00F6584(v6);
    if (result != 1) {
      return sub_1C059CDC8(a1);
    }
  }
  return result;
}

unint64_t sub_1C05B42E0(uint64_t a1)
{
  *(void *)&long long v13 = v1[4];
  unint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v5 = v1[6];
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v6; ++i)
      {
        *(void *)&long long v13 = *(void *)(v5 + 8 * i + 32);
        sub_1BFF32264(v13);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7]) {
      sub_1C05B4574(a1, (void (*)(uint64_t, uint64_t))sub_1C0597624);
    }
    uint64_t v14 = v1[8];
    sub_1C05B3DFC(a1);
    uint64_t v8 = MEMORY[0x1E4FBB718];
    sub_1C05DC640((uint64_t)(v1 + 9), (uint64_t)v12, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    sub_1C05DC640((uint64_t)v12, (uint64_t)&v13, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, v8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    if (sub_1C00F6584((uint64_t *)&v13) != 1) {
      sub_1C059CDC8(a1);
    }
    unint64_t result = swift_beginAccess();
    unint64_t v9 = v1[29];
    if (v9 >> 62 == 1)
    {
      unint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v9);
      sub_1BFE6FA30(v10);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v10, v11);
      sub_1BFF0056C(v10);
      swift_bridgeObjectRelease();
      return sub_1BFF0056C(v9);
    }
  }
  return result;
}

uint64_t sub_1C05B4574(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = v2;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  a2(a1, v7);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    uint64_t v9 = *(void *)(v5 + 56);
    if (v9)
    {
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v11 = (unsigned char *)(v9 + 40);
        do
        {
          if ((*v11 & 1) == 0)
          {
            uint64_t v12 = *((void *)v11 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v12, 0);
            sub_1BFF49984(v12, 0);
          }
          v11 += 16;
          --v10;
        }
        while (v10);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
    uint64_t v13 = *(void *)(v5 + 64);
    if (v13) {
      uint64_t result = sub_1C05529C4(a1, v13);
    }
    if (*(unsigned __int8 *)(v5 + 176) != 254) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

unint64_t sub_1C05B46E8(uint64_t a1)
{
  return sub_1C05B42E0(a1);
}

uint64_t sub_1C05B470C()
{
  uint64_t v2 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19[-1] - v6;
  uint64_t v8 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF83CC4(v0, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
  sub_1BFCCD5B8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF83CC4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4[24])
    {
      uint64_t v13 = *(void *)v4;
      uint64_t v12 = *((void *)v4 + 1);
      uint64_t v14 = *((void *)v4 + 2);
      v19[0] = v13;
      v19[1] = v12;
      v19[2] = v14;
      char v20 = 6;
      sub_1BFE86E48(v13, v12, v14, 0);
      uint64_t v15 = sub_1C12ECBDC(v19, &v20);
      if (!v1)
      {
        uint64_t v16 = v15;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v13, v12, v16, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1BFD7418C(v13, v12, v14, 0);
    }
  }
  else
  {
    sub_1C05DDC60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  return sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
}

uint64_t sub_1C05B4968()
{
  uint64_t v2 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF83CC4(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result) {
    return sub_1C05DDC60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v4[24])
  {
    uint64_t v7 = *(void *)v4;
    uint64_t v6 = *((void *)v4 + 1);
    uint64_t v8 = *((void *)v4 + 2);
    v12[0] = v7;
    v12[1] = v6;
    v12[2] = v8;
    HIBYTE(v11) = 6;
    sub_1BFE86E48(v7, v6, v8, 0);
    uint64_t v9 = sub_1C12ECBDC(v12, (char *)&v11 + 7);
    if (!v1)
    {
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v7, v6, v10, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return sub_1BFD7418C(v7, v6, v8, 0);
  }
  return result;
}

uint64_t sub_1C05B4AFC()
{
  return sub_1C05B470C();
}

uint64_t sub_1C05B4B14(uint64_t a1)
{
  return sub_1C05B3DFC(a1);
}

uint64_t sub_1C05B4B2C(uint64_t a1)
{
  return sub_1C05B4574(a1, (void (*)(uint64_t, uint64_t))sub_1C0597624);
}

uint64_t sub_1C05B4B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1;
  uint64_t v27 = a2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = MEMORY[0x1F4188790](v10);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v12((char *)&v20 - v13, v2, v6, v11);
  sub_1BFC845BC(0, &qword_1EA19C000);
  if (swift_dynamicCast())
  {
    uint64_t v21 = v12;
    uint64_t v23 = v2;
    uint64_t v15 = *((void *)&v25 + 1);
    uint64_t v14 = v26;
    __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8);
    uint64_t v22 = v5;
    v16(v5, v15, v14);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    if (v3) {
      return result;
    }
    uint64_t v5 = v22;
    uint64_t v4 = v23;
    uint64_t v12 = v21;
  }
  else
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    sub_1BFE4D118((uint64_t)&v24, &qword_1EA19C008, &qword_1EA19C000);
  }
  ((void (*)(char *, uint64_t, uint64_t))v12)(v9, v4 + *(int *)(v27 + 52), v6);
  if (swift_dynamicCast())
  {
    uint64_t v18 = *((void *)&v25 + 1);
    uint64_t v19 = v26;
    __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v5, v18, v19);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  }
  else
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    return sub_1BFE4D118((uint64_t)&v24, &qword_1EA19C008, &qword_1EA19C000);
  }
}

uint64_t sub_1C05B4DEC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatRange();
  uint64_t result = sub_1C05B4B64(a1, v3);
  if (!v1) {
    return sub_1C05B4B64(a1, v3);
  }
  return result;
}

unint64_t sub_1C05B4E6C(unint64_t result)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))result;
  switch(((unint64_t)*v1 >> 58) & 0x3C | (*v1 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v14 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      swift_retain();
      sub_1C054EE74((uint64_t)v4);
      if (v2) {
        goto LABEL_77;
      }
      swift_beginAccess();
      uint64_t v15 = *(void *)(v14 + 88);
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t i = 0; i != v16; ++i)
        {
          unint64_t v18 = *(void *)(v15 + 8 * i + 32);
          sub_1BFF32264(v18);
          sub_1C059B1D4((uint64_t)v4);
          sub_1BFF31E90(v18);
        }
        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      uint64_t v19 = *(void *)(v14 + 96);
      swift_bridgeObjectRetain();
      sub_1C05550B8(v4, v19);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (*(unsigned char *)(v14 + 128) != 1) {
        goto LABEL_77;
      }
      uint64_t v11 = *(void *)(v14 + 112);
      uint64_t v12 = *(void *)(v14 + 120);
      sub_1BFE94AB4(v11, v12, 1);
      uint64_t v13 = &unk_1F1B66690;
      goto LABEL_87;
    case 2uLL:
      uint64_t v20 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      swift_retain();
      sub_1C054EE74((uint64_t)v4);
      if (v2) {
        goto LABEL_77;
      }
      swift_beginAccess();
      uint64_t v21 = *(void *)(v20 + 96);
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t j = 0; j != v22; ++j)
        {
          unint64_t v24 = *(void *)(v21 + 8 * j + 32);
          sub_1BFF32264(v24);
          sub_1C059B1D4((uint64_t)v4);
          sub_1BFF31E90(v24);
        }
        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      uint64_t v25 = *(void *)(v20 + 104);
      swift_bridgeObjectRetain();
      sub_1C05550B8(v4, v25);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (*(unsigned char *)(v20 + 136) != 1) {
        goto LABEL_77;
      }
      uint64_t v11 = *(void *)(v20 + 120);
      uint64_t v12 = *(void *)(v20 + 128);
      sub_1BFE94AB4(v11, v12, 1);
      uint64_t v13 = &unk_1F1B666B8;
      goto LABEL_87;
    case 3uLL:
      uint64_t v26 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      swift_retain();
      sub_1C054EE74((uint64_t)v4);
      if (v2) {
        goto LABEL_77;
      }
      swift_beginAccess();
      uint64_t v27 = *(void *)(v26 + 96);
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t k = 0; k != v28; ++k)
        {
          unint64_t v30 = *(void *)(v27 + 8 * k + 32);
          sub_1BFF32264(v30);
          sub_1C059B1D4((uint64_t)v4);
          sub_1BFF31E90(v30);
        }
        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      uint64_t v31 = *(void *)(v26 + 104);
      swift_bridgeObjectRetain();
      sub_1C05550B8(v4, v31);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (*(unsigned char *)(v26 + 136) != 1) {
        goto LABEL_77;
      }
      uint64_t v11 = *(void *)(v26 + 120);
      uint64_t v12 = *(void *)(v26 + 128);
      sub_1BFE94AB4(v11, v12, 1);
      uint64_t v13 = &unk_1F1B666E0;
      goto LABEL_87;
    case 4uLL:
      swift_retain();
      sub_1C05B6294((uint64_t)v4);
      goto LABEL_77;
    case 5uLL:
      swift_retain();
      sub_1C05B64A8(v4);
      goto LABEL_77;
    case 6uLL:
      swift_retain();
      sub_1C05AEBE0((unint64_t)v4);
      goto LABEL_77;
    case 7uLL:
      uint64_t v32 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v33 = v32[4];
      uint64_t v34 = v32[5];
      swift_beginAccess();
      uint64_t v36 = v32[2];
      uint64_t v35 = v32[3];
      swift_beginAccess();
      unint64_t v37 = v32[12];
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0F49E70(v33, v34, 1, v36, v35, v37, (unint64_t)v4, v32);
      goto LABEL_40;
    case 8uLL:
      uint64_t v38 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      swift_retain();
      sub_1C054EE74((uint64_t)v4);
      if (v2) {
        goto LABEL_77;
      }
      swift_beginAccess();
      uint64_t v39 = *(void *)(v38 + 40);
      uint64_t v40 = *(void *)(v39 + 16);
      if (!v40) {
        goto LABEL_77;
      }
      swift_bridgeObjectRetain_n();
      for (uint64_t m = 0; m != v40; ++m)
      {
        unint64_t v42 = *(void *)(v39 + 8 * m + 32);
        sub_1BFF32264(v42);
        sub_1C059B1D4((uint64_t)v4);
        sub_1BFF31E90(v42);
      }
      goto LABEL_79;
    case 9uLL:
      long long v43 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v45 = v43[4];
      uint64_t v44 = v43[5];
      swift_beginAccess();
      uint64_t v47 = v43[2];
      uint64_t v46 = v43[3];
      swift_beginAccess();
      unint64_t v48 = v43[12];
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0F49824(v45, v44, 0, v47, v46, v48, v4, (uint64_t)v43);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_83;
    case 0xAuLL:
      long long v49 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v50 = v49[4];
      uint64_t v51 = v49[5];
      swift_beginAccess();
      uint64_t v53 = v49[2];
      uint64_t v52 = v49[3];
      swift_beginAccess();
      unint64_t v54 = v49[12];
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0F497F0(v50, v51, 2, v53, v52, v54, (unint64_t)v4, v49);
LABEL_40:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_83;
    case 0xBuLL:
      uint64_t v55 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v57 = *(void *)(v55 + 16);
      uint64_t v56 = *(void *)(v55 + 24);
      if (*(void *)(v55 + 40))
      {
        uint64_t v58 = 1;
      }
      else
      {
        swift_beginAccess();
        uint64_t v58 = *(unsigned __int8 *)(v55 + 48);
      }
      v94[0] = v57;
      v94[1] = v56;
      v94[3] = 0;
      v94[4] = 0;
      v94[2] = v58;
      int v95 = 0;
      __int16 v96 = 0x4000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0F4B89C((uint64_t)v94, (uint64_t)v4, v55);
      goto LABEL_82;
    case 0xCuLL:
      uint64_t v59 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v61 = *(void *)(v59 + 16);
      uint64_t v60 = *(void *)(v59 + 24);
      swift_beginAccess();
      uint64_t v62 = *(unsigned __int8 *)(v59 + 32);
      v97[0] = v61;
      v97[1] = v60;
      v97[3] = 0;
      v98[0] = 0;
      v97[2] = v62;
      *(void *)((char *)v98 + 6) = 0;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C0F4912C((uint64_t)v97, (uint64_t)v4, v59);
LABEL_82:
      swift_release();
      goto LABEL_83;
    case 0xDuLL:
      swift_retain();
      sub_1C054E740((uint64_t)v4);
      goto LABEL_77;
    case 0xEuLL:
      swift_retain();
      sub_1C05A4F1C(v4);
      goto LABEL_77;
    case 0xFuLL:
      swift_retain();
      sub_1C14F6418((uint64_t)v4);
      goto LABEL_77;
    case 0x10uLL:
      swift_retain();
      sub_1C05B6860((uint64_t)v4);
      goto LABEL_77;
    case 0x11uLL:
      uint64_t v63 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      sub_1C054EE74((uint64_t)v4);
      if (v2) {
        goto LABEL_77;
      }
      swift_beginAccess();
      uint64_t v64 = *(void *)(v63 + 40);
      uint64_t v65 = *(void *)(v64 + 16);
      if (!v65) {
        goto LABEL_77;
      }
      swift_bridgeObjectRetain_n();
      for (uint64_t n = 0; n != v65; ++n)
      {
        unint64_t v67 = *(void *)(v64 + 8 * n + 32);
        sub_1BFF32264(v67);
        sub_1C059B1D4((uint64_t)v4);
        sub_1BFF31E90(v67);
      }
LABEL_79:
      swift_release();
      uint64_t result = swift_bridgeObjectRelease_n();
      break;
    case 0x12uLL:
      uint64_t v68 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v69 = swift_retain_n();
      sub_1C13AD228(v69, (uint64_t)v88);
      uint64_t v70 = 0x10000000000;
      if (!v93) {
        uint64_t v70 = 0;
      }
      v99[0] = v88[0];
      v99[1] = v88[1];
      long long v100 = v89;
      uint64_t v101 = v90;
      int v102 = v91;
      __int16 v103 = (v70 | ((unint64_t)v92 << 32) | 0x800000000000) >> 32;
      swift_retain();
      sub_1C0F4BBF8((uint64_t)v99, (uint64_t)v4, v68);
      swift_release();
      sub_1BFF5E6C8((uint64_t)v88);
      goto LABEL_77;
    case 0x13uLL:
      uint64_t v71 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v104 = 1;
      long long v105 = 0u;
      long long v106 = 0u;
      int v107 = 0;
      __int16 v108 = -16384;
      swift_retain();
      sub_1C0F4B444((uint64_t)&v104, (uint64_t)v4, v71);
      goto LABEL_77;
    case 0x14uLL:
      swift_retain();
      sub_1C118E59C((uint64_t)v4);
      goto LABEL_77;
    case 0x15uLL:
      swift_retain();
      sub_1C05A9418((unint64_t)v4);
      goto LABEL_77;
    case 0x16uLL:
      return result;
    case 0x17uLL:
      swift_retain();
      sub_1C054ED08((uint64_t)v4);
      goto LABEL_77;
    case 0x18uLL:
      swift_retain();
      sub_1C05B42E0((uint64_t)v4);
      goto LABEL_77;
    case 0x19uLL:
      swift_retain();
      sub_1C05B1D4C((uint64_t)v4);
      goto LABEL_77;
    case 0x1AuLL:
      swift_retain();
      sub_1C05B6B54((uint64_t)v4);
      goto LABEL_77;
    case 0x1BuLL:
      swift_retain();
      sub_1C05AFB54((uint64_t)v4);
      goto LABEL_77;
    case 0x1CuLL:
      return sub_1C05B6E14(result);
    case 0x1DuLL:
      uint64_t v72 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v73 = swift_retain();
      sub_1C0F4B1A4(v73, (uint64_t)v4, v72);
      goto LABEL_77;
    case 0x1EuLL:
      uint64_t v74 = swift_retain();
      uint64_t v82 = sub_1C00261A8(v74, v75, v76, v77, v78, v79, v80, v81);
      sub_1C0F494D0(v82);
      if (v2)
      {
        swift_release();
LABEL_83:
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C05AC030((uint64_t)v4);
LABEL_77:
        uint64_t result = swift_release();
      }
      break;
    case 0x1FuLL:
      swift_retain();
      sub_1C05B6F74((unint64_t)v4);
      goto LABEL_77;
    case 0x20uLL:
      swift_retain();
      sub_1C05B75A8((uint64_t)v4);
      goto LABEL_77;
    case 0x21uLL:
      uint64_t v83 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v84 = *(void *)(v83 + 40);
      v109[0] = *(void *)(v83 + 32);
      v109[1] = v84;
      memset(&v109[2], 0, 24);
      int v110 = 0;
      __int16 v111 = -24576;
      swift_retain();
      sub_1C0F4B3EC((uint64_t)v109, (uint64_t)v4, v83);
      goto LABEL_77;
    case 0x22uLL:
      uint64_t v85 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      memset(v112, 0, sizeof(v112));
      uint64_t v113 = 0;
      int v114 = 0;
      __int16 v115 = -16384;
      swift_retain();
      sub_1C0F4B418((uint64_t)v112, (uint64_t)v4, v85);
      goto LABEL_77;
    case 0x23uLL:
      swift_retain();
      sub_1C05C0A5C((uint64_t)v4);
      goto LABEL_77;
    case 0x24uLL:
      uint64_t v86 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v116 = 1;
      long long v117 = 0u;
      long long v118 = 0u;
      int v119 = 0;
      __int16 v120 = -16384;
      swift_retain();
      sub_1C0F4B178((uint64_t)&v116, (uint64_t)v4, v86);
      goto LABEL_77;
    case 0x25uLL:
      return sub_1C02A24C0(result);
    case 0x26uLL:
      swift_retain();
      sub_1C05B784C((uint64_t)v4);
      goto LABEL_77;
    case 0x27uLL:
      swift_retain();
      sub_1C05B7AE0((uint64_t)v4);
      goto LABEL_77;
    default:
      uint64_t v5 = *(void *)(v3 + 16);
      swift_beginAccess();
      swift_retain();
      sub_1C054EE74((uint64_t)v4);
      if (!v2)
      {
        swift_beginAccess();
        uint64_t v6 = *(void *)(v5 + 88);
        uint64_t v7 = *(void *)(v6 + 16);
        if (v7)
        {
          swift_bridgeObjectRetain_n();
          for (iuint64_t i = 0; ii != v7; ++ii)
          {
            unint64_t v9 = *(void *)(v6 + 8 * ii + 32);
            sub_1BFF32264(v9);
            sub_1C059B1D4((uint64_t)v4);
            sub_1BFF31E90(v9);
          }
          swift_bridgeObjectRelease_n();
        }
        swift_beginAccess();
        uint64_t v10 = *(void *)(v5 + 96);
        swift_bridgeObjectRetain();
        sub_1C05550B8(v4, v10);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if (*(unsigned char *)(v5 + 128) == 1)
        {
          uint64_t v11 = *(void *)(v5 + 112);
          uint64_t v12 = *(void *)(v5 + 120);
          sub_1BFE94AB4(v11, v12, 1);
          uint64_t v13 = &unk_1F1B66668;
LABEL_87:
          uint64_t v87 = sub_1C00B857C((uint64_t)v13);
          sub_1C0F49260(v11, v12, v87, 0);
          swift_bridgeObjectRelease();
          sub_1BFE94AD4(v11, v12, 1);
        }
      }
      goto LABEL_77;
  }
  return result;
}

uint64_t sub_1C05B5EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  swift_beginAccess();
  uint64_t result = sub_1C054EE74(a1);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(v2 + 88);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v9; ++i)
      {
        unint64_t v11 = *(void *)(v8 + 8 * i + 32);
        sub_1BFF32264(v11);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t v12 = *(void *)(v2 + 96);
    swift_bridgeObjectRetain();
    sub_1C05550B8(a1, v12);
    swift_bridgeObjectRelease();
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v5 + 128) == 1)
    {
      uint64_t v15 = v5 + 112;
      uint64_t v13 = *(void *)(v5 + 112);
      uint64_t v14 = *(void *)(v15 + 8);
      sub_1BFE94AB4(v13, v14, 1);
      uint64_t v16 = sub_1C00B857C(a2);
      sub_1C0F49260(v13, v14, v16, 0);
      swift_bridgeObjectRelease();
      return sub_1BFE94AD4(v13, v14, 1);
    }
  }
  return result;
}

uint64_t sub_1C05B60BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  swift_beginAccess();
  uint64_t result = sub_1C054EE74(a1);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(v2 + 96);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v9; ++i)
      {
        unint64_t v11 = *(void *)(v8 + 8 * i + 32);
        sub_1BFF32264(v11);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t v12 = *(void *)(v2 + 104);
    swift_bridgeObjectRetain();
    sub_1C05550B8(a1, v12);
    swift_bridgeObjectRelease();
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v5 + 136) == 1)
    {
      uint64_t v15 = v5 + 120;
      uint64_t v13 = *(void *)(v5 + 120);
      uint64_t v14 = *(void *)(v15 + 8);
      sub_1BFE94AB4(v13, v14, 1);
      uint64_t v16 = sub_1C00B857C(a2);
      sub_1C0F49260(v13, v14, v16, 0);
      swift_bridgeObjectRelease();
      return sub_1BFE94AD4(v13, v14, 1);
    }
  }
  return result;
}

unint64_t sub_1C05B6294(uint64_t a1)
{
  uint64_t v3 = v1;
  unint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v6 = v1[6];
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v6 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7]) {
      sub_1C05B84E8(a1);
    }
    uint64_t v10 = v1[8];
    if (v10)
    {
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 72);
      if (v11)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v11);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v12 = *(void *)(v10 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v12);
      swift_bridgeObjectRelease();
    }
    unint64_t result = swift_beginAccess();
    unint64_t v13 = v3[10];
    if (v13 >> 62 == 1)
    {
      unint64_t v14 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v13);
      sub_1BFE6FA30(v14);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v14, v15);
      sub_1BFF0056C(v14);
      swift_bridgeObjectRelease();
      return sub_1BFF0056C(v13);
    }
  }
  return result;
}

void sub_1C05B64A8(_OWORD *a1)
{
  uint64_t v3 = v1;
  sub_1C05C3A18(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v5 = v1[6];
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v6; ++i)
      {
        unint64_t v8 = *(void *)(v5 + 8 * i + 32);
        sub_1BFF32264(v8);
        sub_1C059B1D4((uint64_t)a1);
        sub_1BFF31E90(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7]) {
      sub_1C05AB7D8((uint64_t)a1);
    }
    uint64_t v9 = v1[8];
    if (v9)
    {
      swift_beginAccess();
      uint64_t v10 = *(void *)(v9 + 72);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C((uint64_t)a1, v10);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v11 = *(void *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130((uint64_t)a1, v11);
      swift_bridgeObjectRelease();
    }
    sub_1C1131F08((uint64_t)a1);
    if (*((unsigned __int16 *)v3 + 52) >> 10 <= 0x3Eu) {
      sub_1C054E9C0((uint64_t)a1);
    }
    swift_beginAccess();
    unint64_t v12 = v3[15];
    if (v12 >> 62 == 1)
    {
      unint64_t v13 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v3[15]);
      sub_1BFE6FA30(v13);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0((uint64_t)a1, v13, v14);
      sub_1BFF0056C(v13);
      swift_bridgeObjectRelease();
      sub_1BFF0056C(v12);
    }
    swift_beginAccess();
    uint64_t v15 = v3[20];
    swift_bridgeObjectRetain();
    sub_1C059045C((uint64_t)a1, v15);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C05B6758(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v5 = *(void *)(v1 + 40);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v6; ++i)
      {
        unint64_t v8 = *(void *)(v5 + 8 * i + 32);
        sub_1BFF32264(v8);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v8);
      }
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

unint64_t sub_1C05B6860(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  unint64_t v6 = v1[4];
  if (v6 >> 62)
  {
    if (v6 >> 62 != 1)
    {
      unint64_t v7 = *(void *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C05A1E20(a1, v7, v8);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if (*(unsigned char *)(v6 + 40))
  {
    uint64_t v11 = *(void *)(v6 + 24);
    uint64_t v10 = *(void *)(v6 + 32);
    v25[0] = *(void *)(v6 + 16);
    uint64_t v12 = v25[0];
    v25[1] = v11;
    v25[2] = v10;
    LOBYTE(v24[0]) = 6;
    swift_retain();
    sub_1C05DD1B4(v25[0], v11, v10, 1);
    uint64_t v13 = sub_1C12ECBDC(v25, (char *)v24);
    if (v3) {
      return swift_release();
    }
    uint64_t v23 = v13;
    swift_bridgeObjectRetain();
    sub_1C0F49260(v12, v11, v23, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v25[0] = v4[8];
  unint64_t result = sub_1C054EE74(a1);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v14 = v4[10];
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v15; ++i)
      {
        unint64_t v17 = *(void *)(v14 + 8 * i + 32);
        v24[0] = v17;
        sub_1BFF32264(v17);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v17);
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v18 = v4[11];
    if (v18)
    {
      swift_beginAccess();
      uint64_t v19 = *(void *)(v18 + 96);
      swift_bridgeObjectRetain();
      sub_1C0554E9C(a1, v19);
      swift_bridgeObjectRelease();
    }
    unint64_t result = swift_beginAccess();
    unint64_t v20 = v4[13];
    if (v20 >> 62 == 1)
    {
      unint64_t v21 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v20);
      sub_1BFE6FA30(v21);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v21, v22);
      sub_1BFF0056C(v21);
      swift_bridgeObjectRelease();
      return sub_1BFF0056C(v20);
    }
  }
  return result;
}

uint64_t sub_1C05B6B54(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v6 = v1[6];
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v6 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7]) {
      sub_1C05B8738(a1);
    }
    uint64_t v10 = v1[8];
    if (v10)
    {
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 72);
      if (v11)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v11);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v12 = *(void *)(v10 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v12);
      swift_bridgeObjectRelease();
    }
    sub_1C05B918C(a1);
    uint64_t result = swift_beginAccess();
    unint64_t v13 = v3[11];
    if (v13 >> 62 == 1)
    {
      unint64_t v14 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v3[11]);
      sub_1BFE6FA30(v14);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v14, v15);
      sub_1BFF0056C(v14);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFF0056C(v13);
    }
    if (v3[19] != 254) {
      return sub_1C05C5024(a1);
    }
  }
  return result;
}

unint64_t sub_1C05B6E14(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  unint64_t v5 = *(void *)(v1 + 48);
  unint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    uint64_t v7 = *(void *)(v4 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v4 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      unint64_t result = swift_bridgeObjectRelease_n();
    }
    if (v5 >> 62)
    {
      if (v5 >> 62 == 1)
      {
        unint64_t v10 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v11 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        sub_1BFE6FA30(v5);
        sub_1BFE6FA30(v10);
        swift_bridgeObjectRetain();
        sub_1C05A1AE0(a1, v10, v11);
        sub_1BFF0056C(v10);
        swift_bridgeObjectRelease();
        unint64_t v12 = v5;
      }
      else if (v5 == 0x8000000000000000)
      {
        unint64_t v12 = 0x8000000000000000;
      }
      else
      {
        unint64_t v12 = 0x8000000000000008;
      }
      return sub_1BFF0056C(v12);
    }
  }
  return result;
}

void sub_1C05B6F74(unint64_t a1)
{
  uint64_t v3 = v1;
  v42[3] = v1[4];
  sub_1C054EE74(a1);
  if (v2) {
    return;
  }
  swift_beginAccess();
  uint64_t v5 = v1[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v6; ++i)
    {
      v42[0] = *(void *)(v5 + 8 * i + 32);
      sub_1BFF32264(v42[0]);
      sub_1C059B1D4(a1);
      sub_1BFF31E90(v42[0]);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v1[7]) {
    sub_1C05B8738(a1);
  }
  uint64_t v8 = v1[8];
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(v8 + 72);
    if (v9)
    {
      swift_bridgeObjectRetain();
      sub_1C055478C(a1, v9);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v10 = *(void *)(v8 + 88);
    swift_bridgeObjectRetain();
    sub_1C0592130(a1, v10);
    swift_bridgeObjectRelease();
  }
  v42[0] = v3[9];
  sub_1C05B9520(a1);
  v42[0] = v3[10];
  sub_1C059E410(a1);
  if (v3[11]) {
    sub_1C05AE364(a1);
  }
  uint64_t v11 = v3[14];
  if (v11 != 1)
  {
    uint64_t v16 = v3[12];
    unint64_t v15 = v3[13];
    uint64_t v18 = v3[15];
    uint64_t v17 = v3[16];
    uint64_t v19 = v3[17];
    char v20 = *((unsigned char *)v3 + 144);
    swift_retain();
    unint64_t v43 = v15;
    sub_1BFF58908(v15);
    swift_retain();
    swift_retain();
    sub_1BFE94AB4(v17, v19, v20 & 1);
    sub_1C059E410(a1);
    char v40 = v20;
    v42[0] = v15;
    sub_1C05BC738(a1);
    uint64_t v34 = v19;
    uint64_t v35 = v11;
    if (v11)
    {
      sub_1C05AE364(a1);
      uint64_t v36 = v17;
      char v37 = v40;
      uint64_t v35 = v11;
    }
    else
    {
      char v37 = v40;
      uint64_t v36 = v17;
    }
    if (v37)
    {
      sub_1BFE94AB4(v36, v34, 1);
      uint64_t v38 = sub_1C00B857C((uint64_t)&unk_1F1B66500);
      sub_1C0F49260(v36, v34, v38, 0);
      swift_bridgeObjectRelease();
      sub_1BFE94AD4(v36, v34, 1);
      char v37 = v40;
      uint64_t v35 = v11;
      uint64_t v39 = v18;
    }
    else
    {
      uint64_t v39 = v18;
    }
    sub_1BFC39508(v16, v43, v35, v39, v36, v34, v37);
  }
  uint64_t v13 = v3[19];
  uint64_t v12 = v3[20];
  uint64_t v14 = v3[21];
  if ((v3[22] & 1) == 0)
  {
    v42[0] = v3[19];
    v42[1] = v12;
    v42[2] = v14;
    v41[0] = 0;
    sub_1C0074D84(v13, v12, v14, 0);
    sub_1C0074D84(v13, v12, v14, 0);
    uint64_t v22 = sub_1C12ECBDC(v42, v41);
    swift_bridgeObjectRetain();
    sub_1C0F49260(v13, v12, v22, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v13;
    uint64_t v24 = v12;
    char v25 = v14;
    char v26 = 0;
LABEL_22:
    sub_1C0074DE4(v23, v24, v25, v26);
    goto LABEL_23;
  }
  if (v14)
  {
    sub_1C0074D84(v3[19], v3[20], v3[21], 1);
    uint64_t v21 = sub_1C00B857C((uint64_t)&unk_1F1B66528);
    sub_1C0F49260(v13, v12, v21, 0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v13;
    uint64_t v24 = v12;
    char v25 = v14;
    char v26 = 1;
    goto LABEL_22;
  }
  sub_1C0074DE4(v3[19], v3[20], v3[21], 1);
LABEL_23:
  swift_beginAccess();
  unint64_t v27 = v3[24];
  if (v27 >> 62 == 1)
  {
    unint64_t v28 = *(void *)((v27 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v29 = *(void *)((v27 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    sub_1BFE6FA30(v3[24]);
    sub_1BFE6FA30(v28);
    swift_bridgeObjectRetain();
    sub_1C05A1AE0(a1, v28, v29);
    sub_1BFF0056C(v28);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v27);
  }
  swift_beginAccess();
  int v30 = *((unsigned __int8 *)v3 + 264);
  if (v30 != 255)
  {
    uint64_t v32 = v3[31];
    uint64_t v31 = v3[32];
    if (v30)
    {
      sub_1BFFC8784(v32, v31, v30);
      uint64_t v33 = sub_1C00B857C((uint64_t)&unk_1F1B66550);
      sub_1C0F49260(v32, v31, v33, 0);
      swift_bridgeObjectRelease();
    }
    sub_1BFFC879C(v32, v31, v30);
  }
}

void sub_1C05B75A8(uint64_t a1)
{
  swift_beginAccess();
  sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v4 = *(void *)(v1 + 48);
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v5; ++i)
      {
        unint64_t v7 = *(void *)(v4 + 8 * i + 32);
        sub_1BFF32264(v7);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v7);
      }
      swift_bridgeObjectRelease_n();
    }
    sub_1C05BB7D4(a1);
    swift_beginAccess();
    if (*(void *)(v1 + 112))
    {
      swift_retain();
      sub_1C05B88FC(a1);
      swift_release();
    }
    swift_beginAccess();
    int v8 = *(unsigned __int8 *)(v1 + 176) >> 6;
    if (v8)
    {
      if (v8 == 1) {
        sub_1C05BB09C(a1);
      }
    }
    else
    {
      sub_1C05BB3E8(a1);
    }
    swift_beginAccess();
    unint64_t v9 = *(void *)(v1 + 184);
    if (v9 >> 62 == 1)
    {
      unint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v9);
      sub_1BFE6FA30(v10);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v10, v11);
      sub_1BFF0056C(v10);
      swift_bridgeObjectRelease();
      sub_1BFF0056C(v9);
    }
  }
}

unint64_t sub_1C05B784C(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  unint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v6 = v1[8];
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v6 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v10 = v1[9];
    if (v10 < 0)
    {
      uint64_t v20 = *(void *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C05A19CC(a1, v20, v21);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v11 = v1[13];
    if (v11)
    {
      uint64_t v12 = v3[19];
      uint64_t v23 = v3[18];
      uint64_t v13 = v3[16];
      uint64_t v22 = v3[17];
      uint64_t v14 = v3[14];
      uint64_t v15 = v3[15];
      uint64_t v16 = v3[12];
      sub_1C05DDB68(v16, v11, v14, v15, v13, v22, v23);
      swift_bridgeObjectRetain();
      sub_1C0553E30(a1, v12);
      swift_bridgeObjectRelease();
      sub_1C05DDBE4(v16, v11, v14, v15, v13, v22, v23);
    }
    unint64_t result = swift_beginAccess();
    unint64_t v17 = v3[20];
    if (v17 >> 62 == 1)
    {
      unint64_t v18 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v19 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v17);
      sub_1BFE6FA30(v18);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v18, v19);
      sub_1BFF0056C(v18);
      swift_bridgeObjectRelease();
      return sub_1BFF0056C(v17);
    }
  }
  return result;
}

uint64_t sub_1C05B7AE0(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)(v1 + 48);
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v6 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unint64_t v10 = *(void *)(v1 + 56);
    if (v10 >> 62 == 1)
    {
      unint64_t v11 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(*(void *)(v3 + 56));
      sub_1BFE6FA30(v11);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v11, v12);
      sub_1BFF0056C(v11);
      swift_bridgeObjectRelease();
      sub_1BFF0056C(v10);
    }
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void **)(v3 + 96);
    if (v13)
    {
      swift_beginAccess();
      uint64_t v14 = v13[6];
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0590988(a1, v14);
      swift_bridgeObjectRelease();
      if ((~v13[7] & 0xF000000000000007) != 0) {
        sub_1C05A2814(a1);
      }
      if ((~v13[8] & 0xF000000000000007) != 0) {
        sub_1C05A2814(a1);
      }
      return swift_release();
    }
  }
  return result;
}

unint64_t sub_1C05B7D20(unint64_t a1)
{
  return sub_1C05B4E6C(a1);
}

uint64_t sub_1C05B7D38(unint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatOption();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v62 = v1[3];
  uint64_t v11 = v1[5];
  uint64_t v57 = v1[4];
  unint64_t v13 = v1[6];
  uint64_t v12 = v1[7];
  switch(v13 >> 59)
  {
    case 1uLL:
      uint64_t v15 = v10;
      uint64_t v14 = v8;
      swift_retain();
      sub_1C05AB7D8(a1);
      goto LABEL_27;
    case 2uLL:
      uint64_t v15 = v10;
      uint64_t v14 = v8;
      swift_retain();
      sub_1C05AE364(a1);
      goto LABEL_27;
    case 3uLL:
      uint64_t v15 = v10;
      uint64_t v14 = v8;
      swift_retain();
      sub_1C05B02E4(a1);
      goto LABEL_27;
    case 4uLL:
      uint64_t v16 = v8;
      uint64_t v55 = v8;
      uint64_t v56 = v10;
      uint64_t v17 = v10;
      swift_beginAccess();
      uint64_t v18 = *(void *)(v9 + 96);
      uint64_t v19 = v16;
      uint64_t v20 = v17;
      uint64_t v21 = v62;
      uint64_t v22 = v57;
      sub_1BFF95098(v9, v19, v20, v62, v57, v11, v13);
      swift_bridgeObjectRetain();
      sub_1C0554E9C(a1, v18);
      goto LABEL_42;
    case 5uLL:
      uint64_t v23 = *(void *)(v9 + 56);
      uint64_t v55 = v8;
      uint64_t v56 = v10;
      if (!v23)
      {
        swift_retain();
        goto LABEL_41;
      }
      uint64_t v54 = v11;
      uint64_t v24 = *(void *)(v23 + 16);
      if (!v24)
      {
        swift_retain();
LABEL_40:
        uint64_t v11 = v54;
LABEL_41:
        uint64_t v22 = v57;
        uint64_t v21 = v62;
        swift_beginAccess();
        uint64_t v49 = *(void *)(v9 + 64);
        swift_bridgeObjectRetain();
        sub_1C055DCB4(a1, v49);
        goto LABEL_42;
      }
      unint64_t v25 = v13;
      uint64_t v26 = v23 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      unint64_t v52 = v25;
      uint64_t v53 = v12;
      sub_1BFF95098(v9, v8, v10, v62, v57, v54, v25);
      uint64_t v27 = *(void *)(v5 + 72);
      v51[1] = v23;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BFF83CC4(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v61 = *((void *)v7 + 2);
        swift_retain();
        sub_1C05B8C90(a1);
        if (v2) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v26 += v27;
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          unint64_t v13 = v52;
          goto LABEL_40;
        }
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      uint64_t v33 = v9;
      uint64_t v34 = v55;
      uint64_t v35 = v56;
      uint64_t v38 = v62;
      uint64_t v39 = v57;
      uint64_t v46 = v54;
      unint64_t v47 = v52;
      return sub_1BFF94FE4(v33, v34, v35, v38, v39, v46, v47);
    case 6uLL:
      uint64_t v28 = v8;
      uint64_t v29 = v10;
      swift_beginAccess();
      uint64_t v30 = *(void *)(v9 + 56);
      uint64_t v55 = v28;
      uint64_t v56 = v29;
      uint64_t v31 = v28;
      uint64_t v32 = v29;
      uint64_t v21 = v62;
      uint64_t v22 = v57;
      sub_1BFF95098(v9, v31, v32, v62, v57, v11, v13);
      swift_bridgeObjectRetain();
      sub_1C05651E4(a1, v30);
      if (v2) {
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v9 + 74) == 255)
      {
        uint64_t v33 = v9;
        uint64_t v34 = v55;
        uint64_t v35 = v56;
LABEL_28:
        uint64_t v38 = v62;
        uint64_t v39 = v57;
      }
      else
      {
        int v50 = *(unsigned __int16 *)(v9 + 72) | (*(unsigned __int8 *)(v9 + 74) << 16);
        uint64_t v58 = *(void *)(v9 + 64);
        __int16 v59 = v50;
        char v60 = BYTE2(v50);
        sub_1C05AA1F8(a1);
        uint64_t v35 = v56;
        uint64_t v39 = v57;
        uint64_t v38 = v62;
        uint64_t v33 = v9;
        uint64_t v34 = v55;
      }
      goto LABEL_43;
    case 7uLL:
      uint64_t v14 = v8;
      uint64_t v15 = v10;
      swift_retain();
      uint64_t v36 = (void (*)(uint64_t, uint64_t))sub_1C0597624;
      goto LABEL_21;
    case 8uLL:
      uint64_t v14 = v8;
      uint64_t v15 = v10;
      swift_retain();
      sub_1C05B1FF0(a1);
      goto LABEL_27;
    case 9uLL:
    case 0xEuLL:
      uint64_t v14 = v8;
      uint64_t v15 = v10;
      swift_retain();
      sub_1C05B8738(a1);
      goto LABEL_27;
    case 0xAuLL:
      uint64_t v14 = v8;
      uint64_t v15 = v10;
      swift_retain();
      uint64_t v36 = (void (*)(uint64_t, uint64_t))sub_1C0590F78;
      goto LABEL_21;
    case 0xBuLL:
      uint64_t v14 = v8;
      uint64_t v15 = v10;
      swift_retain();
      uint64_t v36 = (void (*)(uint64_t, uint64_t))sub_1C05918A4;
LABEL_21:
      sub_1C05B4574(a1, v36);
      goto LABEL_27;
    case 0xCuLL:
      uint64_t v14 = v8;
      uint64_t v15 = v10;
      swift_retain();
      sub_1C096F5C8(a1);
      goto LABEL_27;
    case 0xDuLL:
      uint64_t v55 = v8;
      uint64_t v56 = v10;
      swift_beginAccess();
      uint64_t v37 = *(void *)(v9 + 72);
      if (v37)
      {
        uint64_t v21 = v62;
        uint64_t v22 = v57;
        sub_1BFF95098(v9, v55, v56, v62, v57, v11, v13);
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v37);
        if (v2) {
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
        uint64_t v22 = v57;
        uint64_t v21 = v62;
      }
      swift_beginAccess();
      uint64_t v48 = *(void *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v48);
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v33 = v9;
      uint64_t v34 = v55;
      uint64_t v35 = v56;
      uint64_t v38 = v21;
      uint64_t v39 = v22;
LABEL_43:
      uint64_t v46 = v11;
      unint64_t v47 = v13;
      return sub_1BFF94FE4(v33, v34, v35, v38, v39, v46, v47);
    case 0xFuLL:
      uint64_t v14 = v8;
      uint64_t v15 = v10;
      swift_retain();
      sub_1C05B88FC(a1);
      goto LABEL_27;
    case 0x10uLL:
      swift_bridgeObjectRetain();
      sub_1C0553E30(a1, v12);
      return swift_bridgeObjectRelease();
    case 0x11uLL:
      uint64_t v41 = v8;
      uint64_t v42 = v10;
      swift_beginAccess();
      uint64_t v43 = *(void *)(v9 + 48);
      uint64_t v55 = v41;
      uint64_t v56 = v42;
      uint64_t v44 = v41;
      uint64_t v45 = v42;
      uint64_t v21 = v62;
      uint64_t v22 = v57;
      sub_1BFF95098(v9, v44, v45, v62, v57, v11, v13);
      swift_bridgeObjectRetain();
      sub_1C0590988(a1, v43);
      if (v2) {
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
      if ((~*(void *)(v9 + 56) & 0xF000000000000007) != 0)
      {
        uint64_t v58 = *(void *)(v9 + 56);
        sub_1C05A2814(a1);
      }
      if ((~*(void *)(v9 + 64) & 0xF000000000000007) != 0)
      {
        uint64_t v58 = *(void *)(v9 + 64);
        sub_1C05A2814(a1);
      }
      uint64_t v33 = v9;
      uint64_t v34 = v55;
      uint64_t v35 = v56;
      uint64_t v38 = v62;
      uint64_t v39 = v22;
      uint64_t v46 = v11;
      unint64_t v47 = v13;
      return sub_1BFF94FE4(v33, v34, v35, v38, v39, v46, v47);
    default:
      uint64_t v15 = v10;
      uint64_t v14 = v8;
      swift_retain();
      sub_1C05B84E8(a1);
LABEL_27:
      uint64_t v33 = v9;
      uint64_t v34 = v14;
      uint64_t v35 = v15;
      goto LABEL_28;
  }
}

uint64_t sub_1C05B84E8(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1C0591CD4(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v7 = *(void *)(v3 + 56);
    if (v7)
    {
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = (unsigned char *)(v7 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
    if ((~*(void *)(v3 + 64) & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2350(a1);
    }
    uint64_t v11 = *(void *)(v3 + 72);
    if (v11) {
      uint64_t result = sub_1C05529C4(a1, v11);
    }
    if (*(unsigned __int8 *)(v3 + 184) != 254) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

unint64_t sub_1C05B8680(unint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  sub_1C05651E4(a1, v4);
  unint64_t result = swift_bridgeObjectRelease();
  if (!v2 && *(unsigned __int8 *)(v1 + 74) != 255) {
    return sub_1C05AA1F8(a1);
  }
  return result;
}

uint64_t sub_1C05B8738(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1C05913DC(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v7 = *(void *)(v3 + 56);
    if (v7)
    {
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = (unsigned char *)(v7 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
    if ((~*(void *)(v3 + 64) & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2350(a1);
    }
    uint64_t v11 = *(void *)(v3 + 72);
    if (v11) {
      uint64_t result = sub_1C05529C4(a1, v11);
    }
    if (*(unsigned __int8 *)(v3 + 184) != 254) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if ((~*(void *)(v3 + 192) & 0xF000000000000007) != 0) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

uint64_t sub_1C05B88FC(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v5 = v1[6];
  swift_bridgeObjectRetain();
  sub_1C0590C28(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v7 = v3[7];
    if (v7)
    {
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = (unsigned char *)(v7 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
    if ((~v3[8] & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if ((~v3[9] & 0xF000000000000007) != 0) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

uint64_t sub_1C05B8A74(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1C0590988(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    if ((~*(void *)(v3 + 56) & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if ((~*(void *)(v3 + 64) & 0xF000000000000007) != 0) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

uint64_t sub_1C05B8B4C(unint64_t a1)
{
  return sub_1C05B7D38(a1);
}

void sub_1C05B8B64(_OWORD *a1)
{
}

uint64_t sub_1C05B8B90(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)v1;
  if (*(unsigned char *)(v1 + 8))
  {
    if (*(unsigned char *)(v1 + 8) == 1) {
      return sub_1C059BA84(result, *(void *)v1);
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = (unsigned char *)(v4 + 40);
      do
      {
        if ((*v6 & 1) == 0)
        {
          uint64_t v7 = *((void *)v6 - 1);
          swift_retain_n();
          sub_1C02D349C(v3);
          sub_1BFF49984(v7, 0);
          sub_1BFF49984(v7, 0);
          if (v2) {
            break;
          }
        }
        v6 += 16;
        --v5;
      }
      while (v5);
      return sub_1C01EF35C(v4, 0);
    }
  }
  return result;
}

uint64_t sub_1C05B8C78(uint64_t a1)
{
  return sub_1C05B8B90(a1);
}

void sub_1C05B8C90(unint64_t a1)
{
  sub_1BFF2918C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      goto LABEL_7;
    case 2uLL:
      uint64_t v15 = swift_projectBox();
      sub_1BFF83CC4(v15, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF29220);
      uint64_t v16 = *(void *)&v11[*(int *)(v9 + 36)];
      swift_bridgeObjectRetain();
      sub_1C059ADB4(a1, v16, (uint64_t (*)(void))sub_1C05DD404, (uint64_t (*)(void))sub_1C05DD404, (uint64_t (*)(void))sub_1C05DD404);
      swift_bridgeObjectRelease();
      sub_1C05DDC60((uint64_t)v11, (uint64_t (*)(void))sub_1BFF29220);
      return;
    case 3uLL:
    case 4uLL:
      uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain();
      sub_1C059AC04(a1, v17);
      goto LABEL_8;
    case 5uLL:
      uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
LABEL_7:
      swift_bridgeObjectRetain();
      sub_1C0554010(a1, v14);
      goto LABEL_8;
    case 6uLL:
      uint64_t v18 = swift_projectBox();
      sub_1BFF83CC4(v18, (uint64_t)v7, (uint64_t (*)(void))sub_1BFF2918C);
      uint64_t v19 = *(void *)&v7[*(int *)(v5 + 36)];
      swift_bridgeObjectRetain();
      sub_1C059ADB4(a1, v19, (uint64_t (*)(void))sub_1C05DD498, (uint64_t (*)(void))sub_1C05DD498, (uint64_t (*)(void))sub_1C05DD498);
      swift_bridgeObjectRelease();
      sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))sub_1BFF2918C);
      return;
    case 7uLL:
      uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C05A2814(a1);
      return;
    case 8uLL:
      uint64_t v20 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v21 = *(void *)(v20 + 24);
      uint64_t v23 = *(void *)(v20 + 16);
      swift_retain();
      swift_retain();
      sub_1C05B8C90(a1);
      if (!v2)
      {
        uint64_t v23 = v21;
        sub_1C05B8C90(a1);
      }
      swift_release();
      swift_release();
      return;
    case 9uLL:
      uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C059E410(a1);
      return;
    case 0xAuLL:
      uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C05B918C(a1);
      return;
    case 0xBuLL:
      return;
    case 0xCuLL:
      uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C05AB0E0(a1);
      return;
    case 0xDuLL:
      uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C05B9520(a1);
      return;
    default:
      uint64_t v13 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      sub_1C059AC04(a1, v13);
LABEL_8:
      swift_bridgeObjectRelease();
      return;
  }
}

void sub_1C05B90CC(unint64_t a1)
{
}

void sub_1C05B90F8(unint64_t a1)
{
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    sub_1C05B8C90(a1);
  }
}

uint64_t sub_1C05B912C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C1AA4(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1C0554010);
}

void sub_1C05B9158(unint64_t a1)
{
  if ((*(unsigned char *)(v1 + 32) & 1) == 0) {
    sub_1C05B8C90(a1);
  }
}

uint64_t sub_1C05B918C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v11 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v13 = *(void *)(v11 + 16);
      if (v13)
      {
        uint64_t v23 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v24 = v12 & 0x1FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain_n();
        uint64_t v14 = (uint64_t *)(v11 + 40);
        while (1)
        {
          uint64_t v15 = *v14;
          v25[0] = *(v14 - 1);
          swift_retain();
          swift_retain();
          sub_1C059C1A0(a1);
          if (v3) {
            break;
          }
          v25[0] = v15;
          sub_1C05B918C(a1);
          uint64_t v3 = 0;
          v14 += 2;
          swift_release();
          swift_release();
          if (!--v13)
          {
            swift_bridgeObjectRelease();
            uint64_t v12 = v23;
            goto LABEL_17;
          }
        }
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
        uint64_t result = swift_release();
      }
      else
      {
        swift_retain();
        swift_bridgeObjectRetain();
LABEL_17:
        v25[0] = v12;
        sub_1C05B918C(a1);
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      break;
    case 2uLL:
      uint64_t v16 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      v25[0] = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      sub_1C05B918C(a1);
      if (!v2)
      {
        v25[0] = v16;
        sub_1C05B918C(a1);
      }
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      uint64_t v17 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v19 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v25[0] = v17;
      v25[1] = v18;
      v25[2] = v19;
      char v26 = 9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C12ECBDC(v25, &v26);
      if (!v3)
      {
        uint64_t v20 = result;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v17, v18, v20, 0);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
      break;
    case 4uLL:
      uint64_t v21 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      v25[0] = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05B918C(a1);
      if (v2)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C059075C(a1, v21);
        swift_release();
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      break;
    default:
      uint64_t v9 = swift_projectBox();
      sub_1BFF83CC4(v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      sub_1C05BCEF0(a1);
      uint64_t result = sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatRemoteVideo);
      break;
  }
  return result;
}

uint64_t sub_1C05B9520(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = *v1;
  if ((*v1 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v4 + 16);
    uint64_t v5 = *(void *)(v4 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C055CFCC(v3, v6);
    if (!v2)
    {
      v12[0] = v5;
      sub_1C05B9520(v3);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = v4 & 0x7FFFFFFFFFFFFFFFLL;
  if (*(unsigned __int8 *)(v7 + 40) >= 2u)
  {
    uint64_t v9 = *(void *)(v7 + 24);
    uint64_t v8 = *(void *)(v7 + 32);
    v12[0] = *(void *)(v7 + 16);
    uint64_t v10 = v12[0];
    v12[1] = v9;
    v12[2] = v8;
    char v13 = 6;
    sub_1C00F6DB8(v12[0], v9, v8, 2);
    uint64_t result = sub_1C12ECBDC(v12, &v13);
    if (!v2)
    {
      uint64_t v11 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v10, v9, v11, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1C05B964C(unint64_t a1)
{
}

unint64_t sub_1C05B9664(uint64_t a1)
{
  long long v89 = (_OWORD *)a1;
  sub_1BFF81A84();
  uint64_t v87 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (void *)((char *)v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF81BCC();
  MEMORY[0x1F4188790](v5);
  uint64_t v88 = (uint64_t)v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v86 - v11;
  uint64_t v13 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF83CC4(v1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementValue);
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v18 = *v15;
      uint64_t v19 = *(void *)(*v15 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = (unsigned char *)(v18 + 40);
        uint64_t v22 = (uint64_t)v89;
        uint64_t v21 = v90;
        do
        {
          if ((*v20 & 1) == 0)
          {
            uint64_t v91 = *((void *)v20 - 1);
            uint64_t v23 = v91;
            swift_retain_n();
            sub_1C02D349C(v22);
            sub_1BFF49984(v23, 0);
            sub_1BFF49984(v23, 0);
            if (v21) {
              break;
            }
          }
          v20 += 16;
          --v19;
        }
        while (v19);
        uint64_t v90 = v21;
        return swift_bridgeObjectRelease_n();
      }
      return swift_bridgeObjectRelease();
    case 2:
      uint64_t v25 = *v15;
      uint64_t v24 = v15[1];
      uint64_t v26 = v15[2];
      if (*((unsigned char *)v15 + 24) != 1)
      {
        uint64_t v29 = *v15;
        uint64_t v30 = v15[1];
        uint64_t v31 = v15[2];
        char v32 = 0;
        return sub_1BFDEB9E0(v29, v30, v31, v32);
      }
      uint64_t v91 = *v15;
      uint64_t v92 = v24;
      uint64_t v93 = v26;
      char v98 = 5;
      sub_1BFDEB94C(v25, v24, v26, 1);
      uint64_t v27 = v90;
      uint64_t v28 = sub_1C12ECBDC(&v91, &v98);
      if (v27)
      {
        uint64_t v90 = v27;
        uint64_t v29 = v25;
        uint64_t v30 = v24;
        uint64_t v31 = v26;
        char v32 = 1;
        return sub_1BFDEB9E0(v29, v30, v31, v32);
      }
      uint64_t v79 = v28;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v25, v24, v79, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = sub_1BFDEB9E0(v25, v24, v26, 1);
      uint64_t v90 = 0;
      return result;
    case 3:
      uint64_t v33 = *v15;
      uint64_t v34 = v15[1];
      int v35 = *((unsigned __int8 *)v15 + 16);
      if (qword_1EB87BD48 != -1) {
        swift_once();
      }
      uint64_t v36 = qword_1EB879FE0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = v90;
      sub_1C0F49260(v33, v34, v36, v35 ^ 1u);
      uint64_t v90 = v37;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease_n();
    case 4:
      uint64_t v38 = *v15;
      uint64_t v39 = v15[1];
      uint64_t v41 = v15[2];
      uint64_t v40 = v15[3];
      uint64_t v43 = v15[4];
      uint64_t v42 = v15[5];
      uint64_t v44 = *((unsigned __int16 *)v15 + 24);
      switch(v44 >> 13)
      {
        case 2u:
          uint64_t v91 = *v15;
          uint64_t v92 = v39;
          uint64_t v93 = v41;
          uint64_t v94 = v40;
          uint64_t v95 = v43;
          uint64_t v96 = v42;
          __int16 v97 = v44 & 0x1FFF;
          uint64_t v45 = v90;
          sub_1C02A26BC((uint64_t)v89);
          uint64_t v90 = v45;
          goto LABEL_67;
        case 3u:
          switch(v15[3])
          {
            case 1u:
            case 2u:
            case 3u:
            case 4u:
              goto LABEL_67;
            default:
              uint64_t v91 = *v15;
              uint64_t v92 = v39;
              uint64_t v93 = v41;
              char v76 = 6;
              goto LABEL_53;
          }
          goto LABEL_67;
        case 4u:
          switch(v15[3])
          {
            case 1u:
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              break;
            default:
              uint64_t v91 = *v15;
              uint64_t v92 = v39;
              uint64_t v93 = v41;
              char v76 = 1;
LABEL_53:
              char v98 = v76;
              sub_1BFE86E48(v38, v39, v41, 0);
              uint64_t v77 = v90;
              uint64_t v78 = sub_1C12ECBDC(&v91, &v98);
              if (v77)
              {
                uint64_t v90 = v77;
              }
              else
              {
                uint64_t v82 = v78;
                swift_bridgeObjectRetain();
                sub_1C0F49260(v38, v39, v82, 0);
                uint64_t v90 = 0;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              break;
          }
LABEL_67:
          unint64_t result = sub_1C05DD0F4(v38, v39, v41, v40, v43, v42, v44, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
          break;
        default:
          return result;
      }
      return result;
    case 5:
      uint64_t v46 = v15[4];
      swift_bridgeObjectRetain();
      uint64_t v47 = v90;
      sub_1C0554010((uint64_t)v89, v46);
      uint64_t v90 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease_n();
    case 6:
      unint64_t v48 = *v15;
      switch((unint64_t)*v15 >> 62)
      {
        case 1uLL:
          uint64_t v70 = *(void *)((v48 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          unint64_t v69 = *(void *)((v48 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v71 = *(void *)(v70 + 16);
          if (v71)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v72 = (unsigned char *)(v70 + 40);
            uint64_t v74 = (uint64_t)v89;
            uint64_t v73 = v90;
            do
            {
              if ((*v72 & 1) == 0)
              {
                uint64_t v75 = *((void *)v72 - 1);
                uint64_t v91 = v75;
                swift_retain_n();
                sub_1C02D349C(v74);
                if (v73)
                {
                  uint64_t v90 = v73;
                  sub_1BFF49984(v75, 0);
                  sub_1BFF49984(v75, 0);
                  swift_bridgeObjectRelease_n();
                  goto LABEL_69;
                }
                sub_1BFF49984(v75, 0);
                sub_1BFF49984(v75, 0);
              }
              v72 += 16;
              --v71;
            }
            while (v71);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t v74 = (uint64_t)v89;
            uint64_t v73 = v90;
          }
          switch(v69 >> 62)
          {
            case 1uLL:
              uint64_t v80 = *(void *)((v69 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
              uint64_t v91 = *(void *)((v69 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v92 = v80;
              sub_1C05A98D8(v74);
              uint64_t v90 = v73;
              break;
            case 2uLL:
LABEL_60:
              uint64_t v90 = v73;
              break;
            case 3uLL:
              uint64_t v90 = v73;
              break;
            default:
              uint64_t v49 = *(void *)(v69 + 16);
              switch(*(unsigned char *)(v69 + 40))
              {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                  goto LABEL_60;
                default:
                  unint64_t v85 = v69 + 24;
                  uint64_t v51 = *(void *)(v69 + 24);
                  uint64_t v84 = *(void *)(v85 + 8);
                  uint64_t v91 = v49;
                  uint64_t v92 = v51;
                  uint64_t v93 = v84;
                  char v98 = 1;
                  sub_1BFE86E48(v49, v51, v84, 0);
                  uint64_t v52 = v73;
                  uint64_t v53 = sub_1C12ECBDC(&v91, &v98);
                  if (!v73) {
                    goto LABEL_68;
                  }
                  goto LABEL_22;
              }
          }
          goto LABEL_69;
        case 2uLL:
          goto LABEL_69;
        case 3uLL:
          return result;
        default:
          uint64_t v49 = *(void *)(v48 + 16);
          switch(*(unsigned char *)(v48 + 40))
          {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
              break;
            default:
              uint64_t v51 = *(void *)(v48 + 24);
              uint64_t v50 = *(void *)(v48 + 32);
              uint64_t v91 = *(void *)(v48 + 16);
              uint64_t v92 = v51;
              uint64_t v93 = v50;
              char v98 = 1;
              sub_1BFE86E48(v49, v51, v50, 0);
              uint64_t v52 = v90;
              uint64_t v53 = sub_1C12ECBDC(&v91, &v98);
              if (v52)
              {
LABEL_22:
                uint64_t v90 = v52;
              }
              else
              {
LABEL_68:
                uint64_t v83 = v53;
                swift_bridgeObjectRetain();
                sub_1C0F49260(v49, v51, v83, 0);
                uint64_t v90 = 0;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              break;
          }
LABEL_69:
          unint64_t result = sub_1BFF07CD8(v48);
          break;
      }
      return result;
    case 7:
      sub_1BFCCD5B8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatURL);
      sub_1BFF83CC4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatURL);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else if (!v9[24])
        {
          uint64_t v65 = *(void *)v9;
          uint64_t v64 = *((void *)v9 + 1);
          uint64_t v66 = *((void *)v9 + 2);
          uint64_t v91 = v65;
          uint64_t v92 = v64;
          uint64_t v93 = v66;
          char v98 = 6;
          sub_1BFE86E48(v65, v64, v66, 0);
          uint64_t v67 = v90;
          uint64_t v68 = sub_1C12ECBDC(&v91, &v98);
          if (v67)
          {
            uint64_t v90 = v67;
          }
          else
          {
            uint64_t v81 = v68;
            swift_bridgeObjectRetain();
            sub_1C0F49260(v65, v64, v81, 0);
            uint64_t v90 = 0;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1BFD7418C(v65, v64, v66, 0);
        }
      }
      else
      {
        sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      return sub_1C05DDC60((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatURL);
    case 8:
      uint64_t v55 = *v15;
      uint64_t v56 = swift_projectBox();
      uint64_t v57 = v88;
      sub_1BFF83CC4(v56, v88, (uint64_t (*)(void))sub_1BFF81BCC);
      uint64_t v58 = *(void *)v57;
      uint64_t v59 = *(void *)(*(void *)v57 + 16);
      if (!v59)
      {
        uint64_t v61 = v89;
        goto LABEL_35;
      }
      v86[1] = *(void *)v57;
      v86[2] = v55;
      uint64_t v60 = v58 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
      uint64_t v87 = *(void *)(v87 + 72);
      swift_bridgeObjectRetain();
      uint64_t v61 = v89;
      while (1)
      {
        sub_1BFF83CC4(v60, (uint64_t)v4, (uint64_t (*)(void))sub_1BFF81A84);
        uint64_t v91 = *v4;
        swift_retain();
        uint64_t v62 = v90;
        sub_1C059C1A0(v61);
        if (v62) {
          break;
        }
        swift_release();
        sub_1C05B9664(v61);
        uint64_t v90 = 0;
        sub_1C05DDC60((uint64_t)v4, (uint64_t (*)(void))sub_1BFF81A84);
        v60 += v87;
        --v59;
        uint64_t v61 = v89;
        if (!v59)
        {
          swift_bridgeObjectRelease();
          uint64_t v57 = v88;
LABEL_35:
          uint64_t v63 = v90;
          sub_1C05B9664(v61);
          uint64_t v90 = v63;
          goto LABEL_48;
        }
      }
      uint64_t v90 = v62;
      swift_release();
      sub_1C05DDC60((uint64_t)v4, (uint64_t (*)(void))sub_1BFF81A84);
      swift_bridgeObjectRelease();
      uint64_t v57 = v88;
LABEL_48:
      sub_1C05DDC60(v57, (uint64_t (*)(void))sub_1BFF81BCC);
      return swift_release();
    default:
      uint64_t v17 = v90;
      sub_1C059BA84((uint64_t)v89, *v15);
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v90 = v17;
      return result;
  }
}

unint64_t sub_1C05BA268(uint64_t a1)
{
  return sub_1C05B9664(a1);
}

uint64_t sub_1C05BA290(uint64_t result)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(unsigned __int16 *)(v1 + 48);
  switch(v9 >> 13)
  {
    case 2u:
      uint64_t v12 = *(void *)v1;
      uint64_t v13 = v3;
      uint64_t v14 = v5;
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      uint64_t v17 = v8;
      __int16 v18 = v9 & 0x1FFF;
      unint64_t result = sub_1C02A26BC(result);
      break;
    case 3u:
      if (!*(void *)(v1 + 24))
      {
        uint64_t v12 = *(void *)v1;
        uint64_t v13 = v3;
        uint64_t v14 = v5;
        char v10 = 6;
        goto LABEL_7;
      }
      break;
    case 4u:
      if (!*(void *)(v1 + 24))
      {
        uint64_t v12 = *(void *)v1;
        uint64_t v13 = v3;
        uint64_t v14 = v5;
        char v10 = 1;
LABEL_7:
        char v19 = v10;
        sub_1C05DD0F4(v4, v3, v5, v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        unint64_t result = sub_1C12ECBDC(&v12, &v19);
        if (!v2)
        {
          uint64_t v11 = result;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v4, v3, v11, 0);
          swift_bridgeObjectRelease();
          unint64_t result = swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05BA400(uint64_t a1)
{
  return sub_1C05BA290(a1);
}

unint64_t sub_1C05BA418(uint64_t a1)
{
  return sub_1C05B9664(a1);
}

uint64_t sub_1C05BA430(uint64_t a1)
{
  v25[1] = a1;
  uint64_t v2 = type metadata accessor for FormatURL();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v26 = (uint64_t)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v27 = (uint64_t)v25 - v6;
  uint64_t v7 = type metadata accessor for FormatPostPurchase();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  sub_1BFFA1314(v1 + *(int *)(v14 + 20), (uint64_t)v13, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1) {
    return sub_1C05DDCC0((uint64_t)v13, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  }
  sub_1BFF83CC4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 2, v2))
  {
    uint64_t v16 = v27;
    sub_1BFCCD5B8((uint64_t)v10, v27, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v17 = v26;
    sub_1BFF83CC4(v16, v26, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v17 + 24))
      {
        uint64_t v19 = *(void *)(v17 + 8);
        uint64_t v21 = *(void *)(v17 + 16);
        v29[0] = *(void *)v17;
        uint64_t v20 = v29[0];
        v29[1] = v19;
        v29[2] = v21;
        char v30 = 6;
        sub_1BFE86E48(v29[0], v19, v21, 0);
        uint64_t v22 = v28;
        uint64_t v23 = sub_1C12ECBDC(v29, &v30);
        if (!v22)
        {
          uint64_t v24 = v23;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v20, v19, v24, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1BFD7418C(v20, v19, v21, 0);
      }
    }
    else
    {
      sub_1C05DDC60(v17, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60(v16, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  return sub_1C05DDC60((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
}

uint64_t sub_1C05BA824()
{
  uint64_t v2 = type metadata accessor for FormatURL();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF83CC4(v0, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v11, 2, v2);
  if (!result)
  {
    sub_1BFCCD5B8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatURL);
    sub_1BFF83CC4((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v5[24])
      {
        uint64_t v15 = *(void *)v5;
        uint64_t v14 = *((void *)v5 + 1);
        uint64_t v16 = *((void *)v5 + 2);
        v21[0] = v15;
        v21[1] = v14;
        v21[2] = v16;
        char v20 = 6;
        sub_1BFE86E48(v15, v14, v16, 0);
        uint64_t v17 = sub_1C12ECBDC(v21, &v20);
        if (!v1)
        {
          uint64_t v18 = v17;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v15, v14, v18, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1BFD7418C(v15, v14, v16, 0);
      }
    }
    else
    {
      sub_1C05DDC60((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    return sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  return result;
}

uint64_t sub_1C05BAACC(uint64_t a1)
{
  return sub_1C05BA430(a1);
}

uint64_t sub_1C05BAAE4(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  if (*v1 < 0)
  {
    uint64_t v10 = *(void *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v12 = *(void *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    swift_retain();
    swift_retain();
    sub_1C05BAAE4(a1);
    if (!v2)
    {
      uint64_t v12 = v10;
      sub_1C05BAAE4(a1);
    }
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v8 = swift_projectBox();
    sub_1BFF83CC4(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
    sub_1C059ED10(a1);
    return sub_1C05DDC60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
  }
}

uint64_t sub_1C05BAC24(uint64_t a1)
{
  return sub_1C05BAAE4(a1);
}

uint64_t sub_1C05BAC50(uint64_t a1)
{
  return sub_1C05BAAE4(a1);
}

unint64_t sub_1C05BAC68(unint64_t result)
{
  uint64_t v3 = result;
  uint64_t v5 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v6 = *(void *)(*v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v7 = (unsigned char *)(v5 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        uint64_t v8 = *((void *)v7 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v8, 0);
        sub_1BFF49984(v8, 0);
        if (v2) {
          return swift_bridgeObjectRelease_n();
        }
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  if (v4 >= 2)
  {
    uint64_t v9 = *(void *)(v4 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = (unsigned char *)(v4 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          uint64_t v11 = *((void *)v10 - 1);
          swift_retain_n();
          sub_1C02D349C(v3);
          sub_1BFF49984(v11, 0);
          sub_1BFF49984(v11, 0);
          if (v2) {
            break;
          }
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      return sub_1BFD7F858(v4);
    }
  }
  return result;
}

unint64_t sub_1C05BADC4(unint64_t a1)
{
  return sub_1C05BAC68(a1);
}

uint64_t sub_1C05BADDC(uint64_t result)
{
  if ((unint64_t)*v1 >= 2) {
    return sub_1C059B9C8(result, *v1);
  }
  return result;
}

uint64_t sub_1C05BAE00()
{
  return sub_1C05BA824();
}

uint64_t sub_1C05BAE18(uint64_t result)
{
  if ((~*v1 & 0xF000000000000007) != 0) {
    return sub_1C05A2814(result);
  }
  return result;
}

uint64_t sub_1C05BAE50(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_1C151FD8C();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v14 - v9, v2 + *(int *)(a2 + 52), v6, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v10, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    return sub_1BFE4D118((uint64_t)&v14, &qword_1EA19C008, &qword_1EA19C000);
  }
  sub_1BFC845BC(0, &qword_1EA19C000);
  if (!swift_dynamicCast()) {
    goto LABEL_6;
  }
  uint64_t v11 = *((void *)&v15 + 1);
  if (*((void *)&v15 + 1))
  {
    uint64_t v12 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, v11, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  }
  return sub_1BFE4D118((uint64_t)&v14, &qword_1EA19C008, &qword_1EA19C000);
}

uint64_t sub_1C05BB044(uint64_t a1, uint64_t a2)
{
  return sub_1C05BAE50(a1, a2);
}

uint64_t sub_1C05BB05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C405C(a1, a2, a3, (uint64_t (*)(void))sub_1C05A2814, sub_1C054F7D4);
}

uint64_t sub_1C05BB09C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int v7 = *((unsigned __int8 *)v1 + 24);
  uint64_t v24 = v1[5];
  uint64_t v25 = v1[6];
  uint64_t v26 = v1[4];
  uint64_t v8 = *(void *)(*v1 + 16);
  if (v8)
  {
    int v23 = *((unsigned __int8 *)v1 + 24);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = (unsigned char *)(v5 + 40);
    while (1)
    {
      if ((*v9 & 1) == 0)
      {
        uint64_t v10 = *((void *)v9 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        if (v2)
        {
LABEL_16:
          sub_1BFF49984(v10, 0);
          sub_1BFF49984(v10, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BFF49984(v10, 0);
        sub_1BFF49984(v10, 0);
      }
      v9 += 16;
      if (!--v8)
      {
        swift_bridgeObjectRelease_n();
        int v7 = v23;
        break;
      }
    }
  }
  if (v7)
  {
    sub_1BFE94AB4(v4, v6, 1);
    uint64_t v11 = sub_1C00B857C((uint64_t)&unk_1F1B664B0);
    sub_1C0F49260(v4, v6, v11, 0);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1BFE94AD4(v4, v6, 1);
    if (v2) {
      return result;
    }
    uint64_t v13 = *(void *)(v26 + 16);
    if (v13)
    {
LABEL_11:
      swift_bridgeObjectRetain_n();
      long long v14 = (unsigned char *)(v26 + 40);
      uint64_t v16 = v24;
      uint64_t v15 = v25;
      do
      {
        if ((*v14 & 1) == 0)
        {
          uint64_t v10 = *((void *)v14 - 1);
          swift_retain_n();
          sub_1C02D349C(a1);
          if (v2) {
            goto LABEL_16;
          }
          sub_1BFF49984(v10, 0);
          sub_1BFF49984(v10, 0);
        }
        v14 += 16;
        --v13;
      }
      while (v13);
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v17 = *(void *)(v24 + 16);
      if (v17) {
        goto LABEL_21;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t result = sub_1BFE94AD4(v4, v6, 0);
    uint64_t v13 = *(void *)(v26 + 16);
    if (v13) {
      goto LABEL_11;
    }
  }
  uint64_t v16 = v24;
  uint64_t v15 = v25;
  uint64_t v17 = *(void *)(v24 + 16);
  if (v17)
  {
LABEL_21:
    swift_bridgeObjectRetain_n();
    uint64_t v18 = (unsigned char *)(v16 + 40);
    while (1)
    {
      if ((*v18 & 1) == 0)
      {
        uint64_t v19 = *((void *)v18 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v19, 0);
        sub_1BFF49984(v19, 0);
        if (v2) {
          return swift_bridgeObjectRelease_n();
        }
      }
      v18 += 16;
      if (!--v17)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
LABEL_27:
  uint64_t v20 = *(void *)(v15 + 16);
  if (!v20) {
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v21 = (unsigned char *)(v15 + 40);
  do
  {
    if ((*v21 & 1) == 0)
    {
      uint64_t v22 = *((void *)v21 - 1);
      swift_retain_n();
      sub_1C02D349C(a1);
      sub_1BFF49984(v22, 0);
      sub_1BFF49984(v22, 0);
      if (v2) {
        break;
      }
    }
    v21 += 16;
    --v20;
  }
  while (v20);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C05BB3D0(uint64_t a1)
{
  return sub_1C05BB09C(a1);
}

uint64_t sub_1C05BB3E8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int v7 = *((unsigned __int8 *)v1 + 24);
  uint64_t v24 = v1[5];
  uint64_t v25 = v1[6];
  uint64_t v26 = v1[4];
  uint64_t v8 = *(void *)(*v1 + 16);
  if (v8)
  {
    int v23 = *((unsigned __int8 *)v1 + 24);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = (unsigned char *)(v5 + 40);
    while (1)
    {
      if ((*v9 & 1) == 0)
      {
        uint64_t v10 = *((void *)v9 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        if (v2)
        {
LABEL_22:
          sub_1BFF49984(v10, 0);
          sub_1BFF49984(v10, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BFF49984(v10, 0);
        sub_1BFF49984(v10, 0);
      }
      v9 += 16;
      if (!--v8)
      {
        swift_bridgeObjectRelease_n();
        int v7 = v23;
        break;
      }
    }
  }
  if (!v7)
  {
    uint64_t result = sub_1BFE94AD4(v4, v6, 0);
    if (v26) {
      goto LABEL_11;
    }
LABEL_18:
    uint64_t v15 = v24;
    uint64_t v14 = v25;
    goto LABEL_19;
  }
  sub_1BFE94AB4(v4, v6, 1);
  uint64_t v11 = sub_1C00B857C((uint64_t)&unk_1F1B66488);
  sub_1C0F49260(v4, v6, v11, 0);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1BFE94AD4(v4, v6, 1);
  if (v2) {
    return result;
  }
  if (!v26) {
    goto LABEL_18;
  }
LABEL_11:
  uint64_t v13 = *(void *)(v26 + 16);
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  if (v13)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v16 = (unsigned char *)(v26 + 40);
    do
    {
      if ((*v16 & 1) == 0)
      {
        uint64_t v10 = *((void *)v16 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        if (v2) {
          goto LABEL_22;
        }
        sub_1BFF49984(v10, 0);
        sub_1BFF49984(v10, 0);
      }
      v16 += 16;
      --v13;
    }
    while (v13);
    uint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v17 = *(void *)(v24 + 16);
    if (v17) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
LABEL_24:
    swift_bridgeObjectRetain_n();
    uint64_t v19 = (unsigned char *)(v15 + 40);
    while (1)
    {
      if ((*v19 & 1) == 0)
      {
        uint64_t v20 = *((void *)v19 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v20, 0);
        sub_1BFF49984(v20, 0);
        if (v2) {
          return swift_bridgeObjectRelease_n();
        }
      }
      v19 += 16;
      if (!--v17)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v18 = *(void *)(v14 + 16);
        if (!v18) {
          return result;
        }
        goto LABEL_30;
      }
    }
  }
LABEL_20:
  uint64_t v18 = *(void *)(v14 + 16);
  if (v18)
  {
LABEL_30:
    swift_bridgeObjectRetain_n();
    uint64_t v21 = (unsigned char *)(v14 + 40);
    do
    {
      if ((*v21 & 1) == 0)
      {
        uint64_t v22 = *((void *)v21 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v22, 0);
        sub_1BFF49984(v22, 0);
        if (v2) {
          break;
        }
      }
      v21 += 16;
      --v18;
    }
    while (v18);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1C05BB728(uint64_t result)
{
  unsigned int v2 = *(unsigned __int8 *)(v1 + 56);
  if (!(v2 >> 6)) {
    return sub_1C05BB3E8(result);
  }
  if (v2 >> 6 == 1) {
    return sub_1C05BB09C(result);
  }
  return result;
}

uint64_t sub_1C05BB7BC(uint64_t a1)
{
  return sub_1C05BB3E8(a1);
}

void sub_1C05BB7D4(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  unsigned int v7 = *(__int16 *)(v1 + 40);
  if ((*(unsigned char *)(v1 + 8) & 1) == 0)
  {
    uint64_t v8 = *(void *)v1;
    uint64_t v9 = *(void *)(*(void *)v1 + 16);
    if (v9)
    {
      uint64_t v21 = *(void *)(v1 + 24);
      uint64_t v22 = *(void *)(v1 + 32);
      sub_1C05DD058(v8, 0);
      swift_bridgeObjectRetain();
      uint64_t v10 = (unsigned char *)(v8 + 40);
      while (1)
      {
        if ((*v10 & 1) == 0)
        {
          v24[0] = *((void *)v10 - 1);
          swift_retain_n();
          sub_1C02D349C(a1);
          if (v2)
          {
            sub_1BFF49984(v24[0], 0);
            sub_1BFF49984(v24[0], 0);
            sub_1C05DD064(v8, 0);
            sub_1C05DD064(v8, 0);
            return;
          }
          sub_1BFF49984(v24[0], 0);
          sub_1BFF49984(v24[0], 0);
        }
        v10 += 16;
        if (!--v9)
        {
          sub_1C05DD064(v8, 0);
          sub_1C05DD064(v8, 0);
          uint64_t v4 = v21;
          uint64_t v6 = v22;
          break;
        }
      }
    }
  }
  if ((v7 & 0x80000000) != 0)
  {
    switch((v7 >> 6) & 0xFC | (v7 >> 2) & 3)
    {
      case 1u:
      case 2u:
      case 4u:
      case 5u:
      case 8u:
LABEL_17:
        uint64_t v14 = v5;
        goto LABEL_18;
      case 3u:
        switch((char)v6)
        {
          case 1:
            goto LABEL_34;
          case 2:
            return;
          default:
            goto LABEL_17;
        }
        return;
      case 6u:
        if (!(v7 >> 6) || v7 >> 6 == 1)
        {
LABEL_41:
          if (v6 == 1 && (v5 & 0xF000000000000007) != 0xF000000000000007)
          {
LABEL_45:
            v24[0] = v5;
LABEL_46:
            sub_1C1131F08(a1);
          }
        }
        else
        {
          switch(v7 & 0x33)
          {
            case 1u:
              goto LABEL_48;
            case 2u:
              return;
            default:
              goto LABEL_28;
          }
        }
        return;
      case 7u:
        if ((v7 & 1) == 0) {
          return;
        }
        v24[0] = v5;
        v24[1] = v4;
        v24[2] = v6;
        char v25 = 5;
        uint64_t v17 = v4;
        sub_1BFFDF514(v5, v4, v6, v7);
        sub_1BFFDF514(v5, v17, v6, v7);
        uint64_t v18 = sub_1C12ECBDC(v24, &v25);
        if (!v2)
        {
          uint64_t v19 = v18;
          swift_bridgeObjectRetain();
          sub_1C0F49260(v5, v17, v19, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v14 = v5;
        uint64_t v4 = v17;
LABEL_18:
        uint64_t v15 = v6;
        break;
      default:
        switch((v7 >> 4) & 3)
        {
          case 1u:
            goto LABEL_17;
          case 2u:
            switch((char)v6)
            {
              case 1:
                goto LABEL_34;
              case 2:
                return;
              default:
                goto LABEL_17;
            }
            return;
          case 3u:
            if (!(v7 >> 6)) {
              goto LABEL_41;
            }
            if (v7 >> 6 != 1)
            {
              switch(v7 & 0xF)
              {
                case 1u:
LABEL_48:
                  if ((~v4 & 0xF000000000000007) == 0) {
                    return;
                  }
                  v24[0] = v4;
                  break;
                case 2u:
                  return;
                default:
LABEL_28:
                  uint64_t v16 = v4;
                  sub_1C001C87C(v5, v4, v6, v7);
                  uint64_t v14 = v5;
                  uint64_t v4 = v16;
                  goto LABEL_18;
              }
              goto LABEL_46;
            }
            if (v6 == 1 && (v5 & 0xF000000000000007) != 0xF000000000000007) {
              goto LABEL_45;
            }
            break;
          default:
            switch((char)v6)
            {
              case 1:
LABEL_34:
                if ((~v5 & 0xF000000000000007) != 0) {
                  goto LABEL_45;
                }
                break;
              case 2:
                return;
              default:
                goto LABEL_17;
            }
            return;
        }
        return;
    }
  }
  else
  {
    uint64_t v11 = *(void *)(v5 + 16);
    if (!v11) {
      return;
    }
    uint64_t v12 = v4;
    uint64_t v23 = v6;
    sub_1BFFDF514(v5, v4, v6, v7);
    swift_bridgeObjectRetain();
    uint64_t v13 = (unsigned char *)(v5 + 40);
    do
    {
      if ((*v13 & 1) == 0)
      {
        v24[0] = *((void *)v13 - 1);
        swift_retain_n();
        sub_1C02D349C(a1);
        sub_1BFF49984(v24[0], 0);
        sub_1BFF49984(v24[0], 0);
        if (v2) {
          break;
        }
      }
      v13 += 16;
      --v11;
    }
    while (v11);
    sub_1C001C87C(v5, v12, v23, v7);
    uint64_t v14 = v5;
    uint64_t v4 = v12;
    uint64_t v15 = v23;
  }
  sub_1C001C87C(v14, v4, v15, v7);
}

void sub_1C05BBCAC(uint64_t a1)
{
}

void sub_1C05BBCD0(uint64_t a1)
{
  uint64_t v5 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  int v6 = *(__int16 *)(v1 + 24);
  if (v6 < 0)
  {
    sub_1C05A70AC(a1);
  }
  else
  {
    uint64_t v7 = *(void *)(v5 + 16);
    if (v7)
    {
      uint64_t v10 = *(void *)(v1 + 16);
      swift_bridgeObjectRetain();
      uint64_t v8 = (unsigned char *)(v5 + 40);
      do
      {
        if ((*v8 & 1) == 0)
        {
          uint64_t v9 = *((void *)v8 - 1);
          swift_retain_n();
          sub_1C02D349C(a1);
          sub_1BFF49984(v9, 0);
          sub_1BFF49984(v9, 0);
          if (v2) {
            break;
          }
        }
        v8 += 16;
        --v7;
      }
      while (v7);
      sub_1C001C87C(v5, v4, v10, v6);
    }
  }
}

void sub_1C05BBDE4(uint64_t a1)
{
}

uint64_t sub_1C05BBDFC(uint64_t result)
{
  if ((*(unsigned char *)(v1 + 8) & 1) == 0) {
    return sub_1C059B9C8(result, *(void *)v1);
  }
  return result;
}

void sub_1C05BBE20(uint64_t a1)
{
}

uint64_t sub_1C05BBE38(uint64_t a1)
{
  return sub_1C05B88FC(a1);
}

uint64_t sub_1C05BBE5C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    if (v4)
    {
      uint64_t v8 = *(void *)(v4 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = (unsigned char *)(v4 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
    if ((~v5 & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if ((~v6 & 0xF000000000000007) != 0) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

uint64_t sub_1C05BBFA8(uint64_t a1)
{
  return sub_1C05BBE5C(a1);
}

uint64_t sub_1C05BBFC0(unint64_t a1)
{
  unint64_t v26 = a1;
  sub_1BFF7185C(0, &qword_1EB88E9A8, (void (*)(void))sub_1C006F9DC);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - v3;
  sub_1BFF7185C(0, &qword_1EB88E9B0, (void (*)(void))sub_1C0084C58);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - v6;
  sub_1BFF7185C(0, &qword_1EB88E998, (void (*)(void))sub_1C00738F0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - v9;
  sub_1BFF7185C(0, &qword_1EB88E9A0, (void (*)(void))sub_1C0036630);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v25 - v12;
  sub_1BFF7185C(0, &qword_1EB88E9B8, (void (*)(void))sub_1C003F2E8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF83CC4(v1, (uint64_t)v19, type metadata accessor for FormatPropertyDefinition);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C05DC640((uint64_t)v19, (uint64_t)v16, (uint64_t)&qword_1EB88E9B8, (uint64_t)sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v16 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v27 = *((void *)v16 + 9);
        sub_1C05A2814(v26);
      }
      uint64_t v21 = &qword_1EB88E9B8;
      uint64_t v22 = &type metadata for FormatColor;
      uint64_t v23 = sub_1C003F2E8;
      uint64_t v24 = (uint64_t)v16;
      goto LABEL_18;
    case 8u:
      sub_1C05DC640((uint64_t)v19, (uint64_t)v13, (uint64_t)&qword_1EB88E9A0, (uint64_t)sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v13 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v27 = *((void *)v13 + 9);
        sub_1C059E410(v26);
      }
      uint64_t v21 = &qword_1EB88E9A0;
      uint64_t v22 = &type metadata for FormatAsyncImageContent;
      uint64_t v23 = sub_1C0036630;
      uint64_t v24 = (uint64_t)v13;
      goto LABEL_18;
    case 9u:
      sub_1C05DC640((uint64_t)v19, (uint64_t)v10, (uint64_t)&qword_1EB88E998, (uint64_t)sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v10 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v27 = *((void *)v10 + 9);
        sub_1C05B918C(v26);
      }
      uint64_t v21 = &qword_1EB88E998;
      uint64_t v22 = &type metadata for FormatVideoNodeContent;
      uint64_t v23 = sub_1C00738F0;
      uint64_t v24 = (uint64_t)v10;
      goto LABEL_18;
    case 0xAu:
      sub_1C05DC640((uint64_t)v19, (uint64_t)v7, (uint64_t)&qword_1EB88E9B0, (uint64_t)sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v7 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v27 = *((void *)v7 + 9);
        sub_1C05AB0E0(v26);
      }
      uint64_t v21 = &qword_1EB88E9B0;
      uint64_t v22 = &type metadata for FormatFont;
      uint64_t v23 = sub_1C0084C58;
      uint64_t v24 = (uint64_t)v7;
      goto LABEL_18;
    case 0xBu:
      sub_1C05DC640((uint64_t)v19, (uint64_t)v4, (uint64_t)&qword_1EB88E9A8, (uint64_t)sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v4 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v27 = *((void *)v4 + 9);
        sub_1C05B9520(v26);
      }
      uint64_t v21 = &qword_1EB88E9A8;
      uint64_t v22 = &type metadata for FormatVideoPlayerContent;
      uint64_t v23 = sub_1C006F9DC;
      uint64_t v24 = (uint64_t)v4;
LABEL_18:
      uint64_t result = sub_1C05DD154(v24, (uint64_t)v21, (uint64_t)v23, (uint64_t)v22, (uint64_t (*)(void))sub_1BFF7185C);
      break;
    default:
      uint64_t result = sub_1C05DDC60((uint64_t)v19, type metadata accessor for FormatPropertyDefinition);
      break;
  }
  return result;
}

uint64_t sub_1C05BC64C(unint64_t a1)
{
  return sub_1C05BBFC0(a1);
}

unint64_t sub_1C05BC664(unint64_t result)
{
  unint64_t v3 = *(void *)(v1 + 8);
  if (v3 >= 3)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = result;
      sub_1BFF58908(*(void *)(v1 + 8));
      swift_bridgeObjectRetain();
      uint64_t v6 = (unsigned char *)(v3 + 40);
      do
      {
        if ((*v6 & 1) == 0)
        {
          uint64_t v7 = *((void *)v6 - 1);
          swift_retain_n();
          sub_1C02D349C(v5);
          sub_1BFF49984(v7, 0);
          sub_1BFF49984(v7, 0);
          if (v2) {
            break;
          }
        }
        v6 += 16;
        --v4;
      }
      while (v4);
      sub_1BFF58918(v3);
      return sub_1BFF58918(v3);
    }
  }
  return result;
}

unint64_t sub_1C05BC738(unint64_t result)
{
  unint64_t v3 = *v1;
  if (*v1 >= 3)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = result;
      swift_bridgeObjectRetain();
      uint64_t v6 = (unsigned char *)(v3 + 40);
      do
      {
        if ((*v6 & 1) == 0)
        {
          uint64_t v7 = *((void *)v6 - 1);
          swift_retain_n();
          sub_1C02D349C(v5);
          sub_1BFF49984(v7, 0);
          sub_1BFF49984(v7, 0);
          if (v2) {
            break;
          }
        }
        v6 += 16;
        --v4;
      }
      while (v4);
      return sub_1BFF58918(v3);
    }
  }
  return result;
}

unint64_t sub_1C05BC7FC(unint64_t a1)
{
  return sub_1C05BC664(a1);
}

uint64_t sub_1C05BC814(uint64_t result)
{
  if ((unint64_t)*v1 >= 3) {
    return sub_1C059B9C8(result, *v1);
  }
  return result;
}

uint64_t sub_1C05BC838()
{
  uint64_t v2 = type metadata accessor for FormatURL();
  uint64_t v36 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for FormatPostPurchase();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - v12;
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v31 = v2;
    char v32 = v4;
    uint64_t v33 = (char *)&v30 - v12;
    uint64_t v34 = v7;
    uint64_t v14 = *(void *)(v0 + 8);
    uint64_t v16 = *(void *)(v0 + 16);
    uint64_t v37 = *(void *)v0;
    uint64_t v15 = v37;
    uint64_t v38 = v14;
    uint64_t v39 = v16;
    char v40 = 5;
    sub_1BFDEB94C(v37, v14, v16, 1);
    sub_1BFDEB94C(v15, v14, v16, 1);
    uint64_t v17 = sub_1C12ECBDC(&v37, &v40);
    if (v1) {
      return sub_1BFDEB9E0(v15, v14, v16, 1);
    }
    uint64_t v19 = v17;
    swift_bridgeObjectRetain();
    sub_1C0F49260(v15, v14, v19, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDEB9E0(v15, v14, v16, 1);
    uint64_t v13 = v33;
    uint64_t v7 = v34;
    uint64_t v2 = v31;
    uint64_t v4 = v32;
  }
  uint64_t v20 = type metadata accessor for FormatPurchaseLandingPage();
  sub_1BFFA1314(v0 + *(int *)(v20 + 20), (uint64_t)v13, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8) == 1) {
    return sub_1C05DDCC0((uint64_t)v13, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  }
  uint64_t v21 = v35;
  sub_1BFF83CC4((uint64_t)v13, v35, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v21, 2, v2)) {
    return sub_1C05DDC60((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  }
  sub_1BFCCD5B8(v21, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF83CC4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C05DDC60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
    return sub_1C05DDC60((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  }
  if (v4[24]) {
    goto LABEL_13;
  }
  uint64_t v23 = (uint64_t)v13;
  uint64_t v24 = v4;
  uint64_t v25 = *(void *)v4;
  uint64_t v27 = *((void *)v24 + 1);
  uint64_t v26 = *((void *)v24 + 2);
  uint64_t v37 = v25;
  uint64_t v38 = v27;
  uint64_t v39 = v26;
  char v40 = 6;
  sub_1BFE86E48(v25, v27, v26, 0);
  uint64_t v28 = sub_1C12ECBDC(&v37, &v40);
  if (!v1)
  {
    uint64_t v29 = v28;
    swift_bridgeObjectRetain();
    sub_1C0F49260(v25, v27, v29, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFD7418C(v25, v27, v26, 0);
    uint64_t v13 = (char *)v23;
    goto LABEL_13;
  }
  sub_1BFD7418C(v25, v27, v26, 0);
  sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
  return sub_1C05DDC60(v23, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
}

uint64_t sub_1C05BCD78(uint64_t a1)
{
  return sub_1C05A5C50(a1);
}

uint64_t sub_1C05BCD90()
{
  return sub_1C05BC838();
}

unint64_t sub_1C05BCDA8(uint64_t a1)
{
  return sub_1C05B784C(a1);
}

uint64_t sub_1C05BCDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05B2454(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C05A19CC);
}

uint64_t sub_1C05BCDF8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  sub_1C0553E30(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05BCE40(uint64_t a1)
{
  return sub_1C11C4648(a1);
}

uint64_t sub_1C05BCE74(uint64_t a1)
{
  return sub_1C05542D4(a1, *(void *)(v1 + 112));
}

uint64_t sub_1C05BCE90(uint64_t a1, uint64_t a2)
{
  return sub_1C05B4B64(a1, a2);
}

uint64_t sub_1C05BCEA8(uint64_t a1)
{
  return sub_1C059BDEC(a1);
}

uint64_t sub_1C05BCEC0()
{
  return sub_1C05AB618();
}

uint64_t sub_1C05BCED8(uint64_t a1)
{
  return sub_1C059ED10(a1);
}

uint64_t sub_1C05BCEF0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v372 = a1;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v338 = (uint64_t)&v337 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v355 = (char *)&v337 - v8;
  MEMORY[0x1F4188790](v9);
  v340 = (char *)&v337 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v339 = (uint64_t)&v337 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v341 = (uint64_t)&v337 - v14;
  MEMORY[0x1F4188790](v15);
  v366 = (char *)&v337 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v346 = (uint64_t)&v337 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v337 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v360 = (uint64_t)&v337 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v361 = (uint64_t)&v337 - v25;
  MEMORY[0x1F4188790](v26);
  v363 = (uint64_t *)((char *)&v337 - v27);
  MEMORY[0x1F4188790](v28);
  v358 = (char *)&v337 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v365 = (uint64_t)&v337 - v31;
  MEMORY[0x1F4188790](v32);
  v367 = (uint64_t *)((char *)&v337 - v33);
  MEMORY[0x1F4188790](v34);
  v369 = (uint64_t *)((char *)&v337 - v35);
  MEMORY[0x1F4188790](v36);
  v370 = (char *)&v337 - v37;
  MEMORY[0x1F4188790](v38);
  v373 = (uint64_t *)((char *)&v337 - v39);
  MEMORY[0x1F4188790](v40);
  v374 = (uint64_t *)((char *)&v337 - v41);
  MEMORY[0x1F4188790](v42);
  v375 = (uint64_t *)((char *)&v337 - v43);
  MEMORY[0x1F4188790](v44);
  v376 = (uint64_t *)((char *)&v337 - v45);
  MEMORY[0x1F4188790](v46);
  v377 = (uint64_t *)((char *)&v337 - v47);
  MEMORY[0x1F4188790](v48);
  uint64_t v379 = (uint64_t)&v337 - v49;
  MEMORY[0x1F4188790](v50);
  v378 = (uint64_t *)((char *)&v337 - v51);
  MEMORY[0x1F4188790](v52);
  uint64_t v380 = (uint64_t)&v337 - v53;
  MEMORY[0x1F4188790](v54);
  v381 = (uint64_t *)((char *)&v337 - v55);
  MEMORY[0x1F4188790](v56);
  v383 = (uint64_t *)((char *)&v337 - v57);
  MEMORY[0x1F4188790](v58);
  v386 = (uint64_t *)((char *)&v337 - v59);
  uint64_t v60 = type metadata accessor for FormatURL();
  uint64_t v384 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v342 = (uint64_t)&v337 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v62);
  uint64_t v352 = (uint64_t)&v337 - v63;
  MEMORY[0x1F4188790](v64);
  uint64_t v344 = (uint64_t)&v337 - v65;
  MEMORY[0x1F4188790](v66);
  uint64_t v354 = (uint64_t)&v337 - v67;
  MEMORY[0x1F4188790](v68);
  uint64_t v345 = (uint64_t)&v337 - v69;
  MEMORY[0x1F4188790](v70);
  uint64_t v347 = (uint64_t)&v337 - v71;
  MEMORY[0x1F4188790](v72);
  uint64_t v348 = (uint64_t)&v337 - v73;
  MEMORY[0x1F4188790](v74);
  v359 = (char *)&v337 - v75;
  MEMORY[0x1F4188790](v76);
  uint64_t v349 = (uint64_t)&v337 - v77;
  MEMORY[0x1F4188790](v78);
  uint64_t v350 = (uint64_t)&v337 - v79;
  MEMORY[0x1F4188790](v80);
  uint64_t v351 = (uint64_t)&v337 - v81;
  MEMORY[0x1F4188790](v82);
  uint64_t v353 = (uint64_t)&v337 - v83;
  MEMORY[0x1F4188790](v84);
  uint64_t v362 = (uint64_t)&v337 - v85;
  MEMORY[0x1F4188790](v86);
  v368 = (char *)&v337 - v87;
  MEMORY[0x1F4188790](v88);
  uint64_t v364 = (uint64_t)&v337 - v89;
  MEMORY[0x1F4188790](v90);
  v371 = (char *)&v337 - v91;
  MEMORY[0x1F4188790](v92);
  uint64_t v356 = (uint64_t)&v337 - v93;
  MEMORY[0x1F4188790](v94);
  uint64_t v357 = (uint64_t)&v337 - v95;
  MEMORY[0x1F4188790](v96);
  char v98 = (char *)&v337 - v97;
  MEMORY[0x1F4188790](v99);
  uint64_t v101 = (char *)&v337 - v100;
  MEMORY[0x1F4188790](v102);
  uint64_t v104 = (char *)&v337 - v103;
  MEMORY[0x1F4188790](v105);
  int v107 = (char *)&v337 - v106;
  sub_1BFF83CC4(v4, (uint64_t)&v337 - v106, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t v385 = v60;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v343 = v21;
    sub_1C05DDC60((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_7:
    uint64_t v110 = v385;
    uint64_t v109 = v4;
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v343 = v21;
    swift_bridgeObjectRelease();
    uint64_t v109 = v4;
    uint64_t v3 = v2;
    swift_bridgeObjectRelease();
    uint64_t v110 = v385;
    goto LABEL_8;
  }
  if (v107[24])
  {
    v343 = v21;
    goto LABEL_7;
  }
  uint64_t v337 = v4;
  uint64_t v123 = *((void *)v107 + 1);
  uint64_t v125 = *((void *)v107 + 2);
  uint64_t v387 = *(void *)v107;
  uint64_t v124 = v387;
  uint64_t v388 = v123;
  uint64_t v389 = v125;
  char v391 = 6;
  sub_1BFE86E48(v387, v123, v125, 0);
  uint64_t v126 = sub_1C12ECBDC(&v387, &v391);
  if (v2)
  {
    uint64_t v128 = v124;
    uint64_t v129 = v123;
    uint64_t v130 = v125;
    return sub_1BFD7418C(v128, v129, v130, 0);
  }
  uint64_t v127 = v126;
  swift_bridgeObjectRetain();
  v382 = (int *)v127;
  sub_1C0F49260(v124, v123, v127, 0);
  v343 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFD7418C(v124, v123, v125, 0);
  uint64_t v109 = v337;
  uint64_t v110 = v385;
LABEL_8:
  __int16 v111 = (int *)type metadata accessor for FormatRemoteVideo();
  sub_1BFF83CC4(v109 + v111[5], (uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v112 = swift_getEnumCaseMultiPayload();
  v382 = v111;
  if (v112)
  {
    if (v112 == 1)
    {
      swift_bridgeObjectRelease();
      __int16 v111 = v382;
      uint64_t v110 = v385;
      swift_bridgeObjectRelease();
    }
    else if (!v104[24])
    {
      uint64_t v337 = v109;
      uint64_t v145 = *(void *)v104;
      uint64_t v144 = *((void *)v104 + 1);
      uint64_t v146 = *((void *)v104 + 2);
      uint64_t v387 = v145;
      uint64_t v388 = v144;
      uint64_t v389 = v146;
      char v391 = 6;
      sub_1BFE86E48(v145, v144, v146, 0);
      uint64_t v147 = sub_1C12ECBDC(&v387, &v391);
      if (v3)
      {
LABEL_66:
        uint64_t v128 = v145;
        uint64_t v129 = v144;
        uint64_t v130 = v146;
        return sub_1BFD7418C(v128, v129, v130, 0);
      }
      uint64_t v148 = v147;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v145, v144, v148, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD7418C(v145, v144, v146, 0);
      uint64_t v109 = v337;
      uint64_t v110 = v385;
      __int16 v111 = v382;
    }
  }
  else
  {
    sub_1C05DDC60((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v113 = v109;
  sub_1BFF83CC4(v109 + v111[6], (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v114 = swift_getEnumCaseMultiPayload();
  uint64_t v115 = v3;
  if (!v114)
  {
    sub_1C05DDC60((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_18;
  }
  if (v114 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v116 = v384;
    goto LABEL_19;
  }
  if (v101[24]) {
    goto LABEL_18;
  }
  uint64_t v337 = v109;
  uint64_t v144 = *((void *)v101 + 1);
  uint64_t v146 = *((void *)v101 + 2);
  uint64_t v387 = *(void *)v101;
  uint64_t v145 = v387;
  uint64_t v388 = v144;
  uint64_t v389 = v146;
  char v391 = 6;
  sub_1BFE86E48(v387, v144, v146, 0);
  uint64_t v159 = sub_1C12ECBDC(&v387, &v391);
  if (v3) {
    goto LABEL_66;
  }
  uint64_t v160 = v159;
  swift_bridgeObjectRetain();
  sub_1C0F49260(v145, v144, v160, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFD7418C(v145, v144, v146, 0);
  uint64_t v113 = v337;
  uint64_t v115 = 0;
  uint64_t v116 = v384;
  uint64_t v110 = v385;
  __int16 v111 = v382;
LABEL_19:
  long long v117 = (unsigned int (*)(void, void, void))v386;
  sub_1BFFA1314(v113 + v111[7], (uint64_t)v386, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  __int16 v120 = *(uint64_t **)(v116 + 48);
  uint64_t v118 = v116 + 48;
  int v119 = v120;
  if (((unsigned int (*)(void, uint64_t, uint64_t))v120)(v117, 1, v110) == 1)
  {
    sub_1C05DDCC0((uint64_t)v117, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v121 = v115;
    goto LABEL_31;
  }
  sub_1BFF83CC4((uint64_t)v117, (uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v122 = swift_getEnumCaseMultiPayload();
  if (v122)
  {
    if (v122 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v98[24])
    {
      uint64_t v384 = v118;
      uint64_t v337 = v113;
      uint64_t v228 = *((void *)v98 + 1);
      uint64_t v230 = *((void *)v98 + 2);
      uint64_t v387 = *(void *)v98;
      uint64_t v229 = v387;
      uint64_t v388 = v228;
      uint64_t v389 = v230;
      char v391 = 6;
      sub_1BFE86E48(v387, v228, v230, 0);
      uint64_t v231 = sub_1C12ECBDC(&v387, &v391);
      if (v115)
      {
        sub_1BFD7418C(v229, v228, v230, 0);
        v325 = (unsigned int (*)(void, void, void))v386;
        return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      uint64_t v324 = v231;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v229, v228, v324, 0);
      uint64_t v121 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD7418C(v229, v228, v230, 0);
      uint64_t v113 = v337;
      uint64_t v118 = v384;
      uint64_t v110 = v385;
      __int16 v111 = v382;
      v131 = (unsigned int (*)(void, void, void))v386;
      goto LABEL_30;
    }
  }
  else
  {
    sub_1C05DDC60((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  v131 = (unsigned int (*)(void, void, void))v386;
  uint64_t v121 = v115;
LABEL_30:
  sub_1C05DDC60((uint64_t)v131, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_31:
  uint64_t v132 = (uint64_t)v383;
  sub_1BFFA1314(v113 + v111[8], (uint64_t)v383, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v386 = v119;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v119)(v132, 1, v110) == 1)
  {
    uint64_t v133 = v121;
    sub_1C05DDCC0(v132, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v135 = v379;
    uint64_t v134 = v380;
  }
  else
  {
    uint64_t v136 = v357;
    sub_1BFF83CC4(v132, v357, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v137 = swift_getEnumCaseMultiPayload();
    uint64_t v135 = v379;
    uint64_t v134 = v380;
    if (v137)
    {
      if (v137 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v136 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v236 = *(void *)(v136 + 8);
        uint64_t v238 = *(void *)(v136 + 16);
        uint64_t v387 = *(void *)v136;
        uint64_t v237 = v387;
        uint64_t v388 = v236;
        uint64_t v389 = v238;
        char v391 = 6;
        sub_1BFE86E48(v387, v236, v238, 0);
        uint64_t v239 = sub_1C12ECBDC(&v387, &v391);
        if (v121)
        {
          sub_1BFD7418C(v237, v236, v238, 0);
          v325 = (unsigned int (*)(void, void, void))v383;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v240 = v239;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v237, v236, v240, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v237, v236, v238, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v135 = v379;
        uint64_t v134 = v380;
      }
    }
    else
    {
      sub_1C05DDC60(v136, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v133 = v121;
    sub_1C05DDC60((uint64_t)v383, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v138 = (uint64_t)v381;
  sub_1BFFA1314(v113 + v111[9], (uint64_t)v381, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v386)(v138, 1, v110) == 1)
  {
    sub_1C05DDCC0(v138, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v139 = v133;
    uint64_t v140 = (uint64_t)v371;
    goto LABEL_50;
  }
  uint64_t v141 = v138;
  uint64_t v142 = v356;
  sub_1BFF83CC4(v141, v356, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v143 = swift_getEnumCaseMultiPayload();
  if (v143)
  {
    if (v143 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!*(unsigned char *)(v142 + 24))
    {
      uint64_t v384 = v118;
      uint64_t v241 = *(void *)(v142 + 8);
      uint64_t v243 = *(void *)(v142 + 16);
      uint64_t v387 = *(void *)v142;
      uint64_t v242 = v387;
      uint64_t v388 = v241;
      uint64_t v389 = v243;
      char v391 = 6;
      sub_1BFE86E48(v387, v241, v243, 0);
      uint64_t v244 = sub_1C12ECBDC(&v387, &v391);
      uint64_t v139 = v133;
      if (v133)
      {
        sub_1BFD7418C(v242, v241, v243, 0);
        v325 = (unsigned int (*)(void, void, void))v381;
        return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      uint64_t v245 = v244;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v242, v241, v245, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD7418C(v242, v241, v243, 0);
      uint64_t v118 = v384;
      uint64_t v110 = v385;
      uint64_t v149 = (uint64_t)v381;
      __int16 v111 = v382;
      uint64_t v135 = v379;
      uint64_t v134 = v380;
      goto LABEL_49;
    }
  }
  else
  {
    sub_1C05DDC60(v142, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v149 = (uint64_t)v381;
  uint64_t v139 = v133;
LABEL_49:
  uint64_t v140 = (uint64_t)v371;
  sub_1C05DDC60(v149, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_50:
  sub_1BFFA1314(v113 + v111[10], v134, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v386)(v134, 1, v110) == 1)
  {
    uint64_t v150 = v134;
    uint64_t v151 = v139;
    sub_1C05DDCC0(v150, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BFF83CC4(v134, v140, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v152 = swift_getEnumCaseMultiPayload();
    if (v152)
    {
      if (v152 == 1)
      {
        uint64_t v151 = v139;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (*(unsigned char *)(v140 + 24))
      {
        uint64_t v151 = v139;
      }
      else
      {
        uint64_t v384 = v118;
        uint64_t v246 = *(void *)(v140 + 8);
        uint64_t v248 = *(void *)(v140 + 16);
        uint64_t v387 = *(void *)v140;
        uint64_t v247 = v387;
        uint64_t v388 = v246;
        uint64_t v389 = v248;
        char v391 = 6;
        sub_1BFE86E48(v387, v246, v248, 0);
        uint64_t v249 = sub_1C12ECBDC(&v387, &v391);
        if (v139)
        {
          sub_1BFD7418C(v247, v246, v248, 0);
          goto LABEL_280;
        }
        uint64_t v250 = v249;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v247, v246, v250, 0);
        uint64_t v151 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v247, v246, v248, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v135 = v379;
      }
    }
    else
    {
      uint64_t v151 = v139;
      sub_1C05DDC60(v140, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60(v380, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v153 = (uint64_t)v378;
  sub_1BFFA1314(v113 + v111[11], (uint64_t)v378, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v386)(v153, 1, v110) == 1)
  {
    sub_1C05DDCC0(v153, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v154 = v151;
    uint64_t v155 = (uint64_t)v368;
  }
  else
  {
    uint64_t v156 = v153;
    uint64_t v157 = v364;
    sub_1BFF83CC4(v156, v364, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v158 = swift_getEnumCaseMultiPayload();
    if (v158)
    {
      uint64_t v154 = v151;
      if (v158 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v364 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v251 = *(void *)(v364 + 8);
        uint64_t v253 = *(void *)(v364 + 16);
        uint64_t v387 = *(void *)v364;
        uint64_t v252 = v387;
        uint64_t v388 = v251;
        uint64_t v389 = v253;
        char v391 = 6;
        sub_1BFE86E48(v387, v251, v253, 0);
        uint64_t v254 = sub_1C12ECBDC(&v387, &v391);
        if (v151)
        {
          sub_1BFD7418C(v252, v251, v253, 0);
          v325 = (unsigned int (*)(void, void, void))v378;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v255 = v254;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v252, v251, v255, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v252, v251, v253, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v135 = v379;
      }
      uint64_t v162 = (uint64_t)v378;
    }
    else
    {
      sub_1C05DDC60(v157, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v162 = (uint64_t)v378;
      uint64_t v154 = v151;
    }
    uint64_t v155 = (uint64_t)v368;
    sub_1C05DDC60(v162, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  sub_1BFFA1314(v113 + v111[12], v135, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v386)(v135, 1, v110) == 1)
  {
    uint64_t v163 = v154;
    sub_1C05DDCC0(v135, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v164 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v386;
    uint64_t v165 = (uint64_t)v370;
    goto LABEL_82;
  }
  sub_1BFF83CC4(v135, v155, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v166 = swift_getEnumCaseMultiPayload();
  if (v166)
  {
    if (v166 == 1)
    {
      uint64_t v163 = v154;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (!*(unsigned char *)(v155 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v256 = *(void *)(v155 + 8);
        uint64_t v258 = *(void *)(v155 + 16);
        uint64_t v387 = *(void *)v155;
        uint64_t v257 = v387;
        uint64_t v388 = v256;
        uint64_t v389 = v258;
        char v391 = 6;
        sub_1BFE86E48(v387, v256, v258, 0);
        uint64_t v259 = sub_1C12ECBDC(&v387, &v391);
        if (v154)
        {
          sub_1BFD7418C(v257, v256, v258, 0);
          v325 = (unsigned int (*)(void, void, void))v135;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v260 = v259;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v257, v256, v260, 0);
        uint64_t v163 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v257, v256, v258, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v165 = (uint64_t)v370;
        v164 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v386;
        goto LABEL_81;
      }
      uint64_t v163 = v154;
    }
  }
  else
  {
    uint64_t v163 = v154;
    sub_1C05DDC60(v155, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  v164 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v386;
  uint64_t v165 = (uint64_t)v370;
LABEL_81:
  sub_1C05DDC60(v379, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_82:
  uint64_t v167 = (uint64_t)v377;
  sub_1BFFA1314(v113 + v111[13], (uint64_t)v377, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v167, 1, v110) == 1)
  {
    sub_1C05DDCC0(v167, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v168 = v163;
  }
  else
  {
    uint64_t v169 = v167;
    uint64_t v170 = v362;
    sub_1BFF83CC4(v169, v362, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v171 = swift_getEnumCaseMultiPayload();
    if (v171)
    {
      uint64_t v168 = v163;
      if (v171 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v362 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v261 = *(void *)(v362 + 8);
        uint64_t v263 = *(void *)(v362 + 16);
        uint64_t v387 = *(void *)v362;
        uint64_t v262 = v387;
        uint64_t v388 = v261;
        uint64_t v389 = v263;
        char v391 = 6;
        sub_1BFE86E48(v387, v261, v263, 0);
        uint64_t v264 = sub_1C12ECBDC(&v387, &v391);
        if (v163)
        {
          sub_1BFD7418C(v262, v261, v263, 0);
          v325 = (unsigned int (*)(void, void, void))v377;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v265 = v264;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v262, v261, v265, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v262, v261, v263, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v165 = (uint64_t)v370;
      }
      uint64_t v172 = (uint64_t)v377;
    }
    else
    {
      sub_1C05DDC60(v170, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v172 = (uint64_t)v377;
      uint64_t v168 = v163;
    }
    sub_1C05DDC60(v172, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v173 = (uint64_t)v376;
  sub_1BFFA1314(v113 + v111[14], (uint64_t)v376, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v173, 1, v110) == 1)
  {
    sub_1C05DDCC0(v173, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v174 = v173;
    uint64_t v175 = v353;
    sub_1BFF83CC4(v174, v353, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v176 = swift_getEnumCaseMultiPayload();
    if (v176)
    {
      if (v176 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v175 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v267 = *(void *)v175;
        uint64_t v266 = *(void *)(v175 + 8);
        uint64_t v268 = *(void *)(v175 + 16);
        uint64_t v387 = v267;
        uint64_t v388 = v266;
        uint64_t v389 = v268;
        char v391 = 6;
        sub_1BFE86E48(v267, v266, v268, 0);
        uint64_t v269 = sub_1C12ECBDC(&v387, &v391);
        if (v168)
        {
          sub_1BFD7418C(v267, v266, v268, 0);
          v325 = (unsigned int (*)(void, void, void))v376;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v270 = v269;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v267, v266, v270, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v267, v266, v268, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v165 = (uint64_t)v370;
      }
    }
    else
    {
      sub_1C05DDC60(v175, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60((uint64_t)v376, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v177 = (uint64_t)v375;
  sub_1BFFA1314(v113 + v111[15], (uint64_t)v375, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v177, 1, v110) == 1)
  {
    sub_1C05DDCC0(v177, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v178 = v177;
    uint64_t v179 = v351;
    sub_1BFF83CC4(v178, v351, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v180 = swift_getEnumCaseMultiPayload();
    if (v180)
    {
      if (v180 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v179 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v272 = *(void *)v179;
        uint64_t v271 = *(void *)(v179 + 8);
        uint64_t v273 = *(void *)(v179 + 16);
        uint64_t v387 = v272;
        uint64_t v388 = v271;
        uint64_t v389 = v273;
        char v391 = 6;
        sub_1BFE86E48(v272, v271, v273, 0);
        uint64_t v274 = sub_1C12ECBDC(&v387, &v391);
        if (v168)
        {
          sub_1BFD7418C(v272, v271, v273, 0);
          v325 = (unsigned int (*)(void, void, void))v375;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v275 = v274;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v272, v271, v275, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v272, v271, v273, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v165 = (uint64_t)v370;
      }
    }
    else
    {
      sub_1C05DDC60(v179, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60((uint64_t)v375, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v181 = (uint64_t)v374;
  sub_1BFFA1314(v113 + v111[16], (uint64_t)v374, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v181, 1, v110) == 1)
  {
    sub_1C05DDCC0(v181, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v182 = v181;
    uint64_t v183 = v350;
    sub_1BFF83CC4(v182, v350, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v184 = swift_getEnumCaseMultiPayload();
    if (v184)
    {
      if (v184 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v183 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v277 = *(void *)v183;
        uint64_t v276 = *(void *)(v183 + 8);
        uint64_t v278 = *(void *)(v183 + 16);
        uint64_t v387 = v277;
        uint64_t v388 = v276;
        uint64_t v389 = v278;
        char v391 = 6;
        sub_1BFE86E48(v277, v276, v278, 0);
        uint64_t v279 = sub_1C12ECBDC(&v387, &v391);
        if (v168)
        {
          sub_1BFD7418C(v277, v276, v278, 0);
          v325 = (unsigned int (*)(void, void, void))v374;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v280 = v279;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v277, v276, v280, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v277, v276, v278, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v165 = (uint64_t)v370;
      }
    }
    else
    {
      sub_1C05DDC60(v183, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60((uint64_t)v374, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v185 = (uint64_t)v373;
  sub_1BFFA1314(v113 + v111[17], (uint64_t)v373, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v185, 1, v110) == 1)
  {
    sub_1C05DDCC0(v185, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v186 = (uint64_t)v359;
  }
  else
  {
    uint64_t v187 = v185;
    uint64_t v188 = v349;
    sub_1BFF83CC4(v187, v349, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v189 = swift_getEnumCaseMultiPayload();
    if (v189)
    {
      if (v189 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v188 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v282 = *(void *)v188;
        uint64_t v281 = *(void *)(v188 + 8);
        uint64_t v283 = *(void *)(v188 + 16);
        uint64_t v387 = v282;
        uint64_t v388 = v281;
        uint64_t v389 = v283;
        char v391 = 6;
        sub_1BFE86E48(v282, v281, v283, 0);
        uint64_t v284 = sub_1C12ECBDC(&v387, &v391);
        if (v168)
        {
          sub_1BFD7418C(v282, v281, v283, 0);
          v325 = (unsigned int (*)(void, void, void))v373;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v285 = v284;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v282, v281, v285, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v282, v281, v283, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v165 = (uint64_t)v370;
      }
    }
    else
    {
      sub_1C05DDC60(v188, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v186 = (uint64_t)v359;
    sub_1C05DDC60((uint64_t)v373, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  sub_1BFFA1314(v113 + v111[18], v165, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v165, 1, v110) == 1)
  {
    sub_1C05DDCC0(v165, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BFF83CC4(v165, v186, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v190 = swift_getEnumCaseMultiPayload();
    if (v190)
    {
      if (v190 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v186 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v287 = *(void *)v186;
        uint64_t v286 = *(void *)(v186 + 8);
        uint64_t v288 = *(void *)(v186 + 16);
        uint64_t v387 = v287;
        uint64_t v388 = v286;
        uint64_t v389 = v288;
        char v391 = 6;
        sub_1BFE86E48(v287, v286, v288, 0);
        uint64_t v289 = sub_1C12ECBDC(&v387, &v391);
        if (v168)
        {
          sub_1BFD7418C(v287, v286, v288, 0);
          v325 = (unsigned int (*)(void, void, void))v370;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v290 = v289;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v287, v286, v290, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v287, v286, v288, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
        uint64_t v165 = (uint64_t)v370;
      }
    }
    else
    {
      sub_1C05DDC60(v186, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60(v165, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v191 = (uint64_t)v369;
  sub_1BFFA1314(v113 + v111[19], (uint64_t)v369, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v191, 1, v110) == 1)
  {
    uint64_t v192 = v168;
    sub_1C05DDCC0(v191, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v193 = v191;
    uint64_t v194 = v348;
    sub_1BFF83CC4(v193, v348, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v195 = swift_getEnumCaseMultiPayload();
    if (v195)
    {
      if (v195 == 1)
      {
        uint64_t v192 = v168;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (*(unsigned char *)(v194 + 24))
      {
        uint64_t v192 = v168;
      }
      else
      {
        uint64_t v384 = v118;
        uint64_t v292 = *(void *)v194;
        uint64_t v291 = *(void *)(v194 + 8);
        uint64_t v293 = *(void *)(v194 + 16);
        uint64_t v387 = v292;
        uint64_t v388 = v291;
        uint64_t v389 = v293;
        char v391 = 6;
        sub_1BFE86E48(v292, v291, v293, 0);
        uint64_t v294 = sub_1C12ECBDC(&v387, &v391);
        if (v168)
        {
          sub_1BFD7418C(v292, v291, v293, 0);
          v325 = (unsigned int (*)(void, void, void))v369;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v295 = v294;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v292, v291, v295, 0);
        uint64_t v192 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v292, v291, v293, 0);
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        __int16 v111 = v382;
      }
    }
    else
    {
      uint64_t v192 = v168;
      sub_1C05DDC60(v194, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60((uint64_t)v369, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v196 = (uint64_t)v367;
  sub_1BFFA1314(v113 + v111[20], (uint64_t)v367, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v196, 1, v110) == 1)
  {
    sub_1C05DDCC0(v196, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v197 = v192;
    uint64_t v198 = (uint64_t)v358;
    goto LABEL_149;
  }
  uint64_t v199 = v196;
  uint64_t v200 = v347;
  sub_1BFF83CC4(v199, v347, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v201 = swift_getEnumCaseMultiPayload();
  if (v201)
  {
    if (v201 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!*(unsigned char *)(v200 + 24))
    {
      uint64_t v384 = v118;
      uint64_t v296 = *(void *)(v200 + 8);
      uint64_t v298 = *(void *)(v200 + 16);
      uint64_t v387 = *(void *)v200;
      uint64_t v297 = v387;
      uint64_t v388 = v296;
      uint64_t v389 = v298;
      char v391 = 6;
      sub_1BFE86E48(v387, v296, v298, 0);
      uint64_t v299 = sub_1C12ECBDC(&v387, &v391);
      uint64_t v197 = v192;
      if (v192)
      {
        sub_1BFD7418C(v297, v296, v298, 0);
        v325 = (unsigned int (*)(void, void, void))v367;
        return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
      }
      uint64_t v300 = v299;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v297, v296, v300, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD7418C(v297, v296, v298, 0);
      uint64_t v118 = v384;
      uint64_t v110 = v385;
      __int16 v111 = v382;
      uint64_t v198 = (uint64_t)v358;
      uint64_t v202 = (uint64_t)v367;
      goto LABEL_148;
    }
  }
  else
  {
    sub_1C05DDC60(v200, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v202 = (uint64_t)v367;
  uint64_t v197 = v192;
  uint64_t v198 = (uint64_t)v358;
LABEL_148:
  sub_1C05DDC60(v202, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_149:
  uint64_t v203 = v365;
  sub_1BFFA1314(v113 + v111[21], v365, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v203, 1, v110) == 1)
  {
    sub_1C05DDCC0(v203, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    goto LABEL_159;
  }
  uint64_t v204 = v203;
  uint64_t v205 = v345;
  sub_1BFF83CC4(v204, v345, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v206 = swift_getEnumCaseMultiPayload();
  if (v206)
  {
    if (v206 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_157:
      uint64_t v207 = v365;
      goto LABEL_158;
    }
    if (*(unsigned char *)(v205 + 24)) {
      goto LABEL_157;
    }
    uint64_t v384 = v118;
    uint64_t v301 = *(void *)(v205 + 8);
    uint64_t v303 = *(void *)(v205 + 16);
    uint64_t v387 = *(void *)v205;
    uint64_t v302 = v387;
    uint64_t v388 = v301;
    uint64_t v389 = v303;
    char v391 = 6;
    sub_1BFE86E48(v387, v301, v303, 0);
    uint64_t v304 = sub_1C12ECBDC(&v387, &v391);
    if (v197)
    {
      sub_1BFD7418C(v302, v301, v303, 0);
      v306 = &v393;
      goto LABEL_265;
    }
    uint64_t v305 = v304;
    swift_bridgeObjectRetain();
    sub_1C0F49260(v302, v301, v305, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFD7418C(v302, v301, v303, 0);
    uint64_t v118 = v384;
    uint64_t v110 = v385;
    __int16 v111 = v382;
    uint64_t v198 = (uint64_t)v358;
  }
  else
  {
    sub_1C05DDC60(v205, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v207 = v365;
LABEL_158:
  sub_1C05DDC60(v207, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_159:
  sub_1BFFA1314(v113 + v111[22], v198, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v198, 1, v110) == 1)
  {
    sub_1C05DDCC0(v198, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v134 = (uint64_t)v355;
    uint64_t v208 = (uint64_t)v366;
  }
  else
  {
    uint64_t v209 = v198;
    sub_1BFF83CC4(v198, v354, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v210 = swift_getEnumCaseMultiPayload();
    uint64_t v134 = (uint64_t)v355;
    uint64_t v208 = (uint64_t)v366;
    if (v210)
    {
      if (v210 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v208 = (uint64_t)v366;
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v354 + 24))
      {
        uint64_t v384 = v118;
        v307 = v355;
        uint64_t v308 = *(void *)(v354 + 8);
        uint64_t v310 = *(void *)(v354 + 16);
        uint64_t v387 = *(void *)v354;
        uint64_t v309 = v387;
        uint64_t v388 = v308;
        uint64_t v389 = v310;
        char v391 = 6;
        sub_1BFE86E48(v387, v308, v310, 0);
        uint64_t v311 = sub_1C12ECBDC(&v387, &v391);
        if (v197)
        {
          sub_1BFD7418C(v309, v308, v310, 0);
          v325 = (unsigned int (*)(void, void, void))v358;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v312 = v311;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v309, v308, v312, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v309, v308, v310, 0);
        uint64_t v134 = (uint64_t)v307;
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        uint64_t v208 = (uint64_t)v366;
        __int16 v111 = v382;
        uint64_t v209 = (uint64_t)v358;
      }
    }
    else
    {
      sub_1C05DDC60(v354, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60(v209, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v211 = (uint64_t)v363;
  sub_1BFFA1314(v113 + v111[23], (uint64_t)v363, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v211, 1, v110) == 1)
  {
    sub_1C05DDCC0(v211, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v212 = v211;
    uint64_t v213 = v344;
    sub_1BFF83CC4(v212, v344, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v214 = swift_getEnumCaseMultiPayload();
    if (v214)
    {
      if (v214 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v208 = (uint64_t)v366;
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v213 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v313 = v134;
        uint64_t v314 = *(void *)(v213 + 8);
        uint64_t v316 = *(void *)(v213 + 16);
        uint64_t v387 = *(void *)v213;
        uint64_t v315 = v387;
        uint64_t v388 = v314;
        uint64_t v389 = v316;
        char v391 = 6;
        sub_1BFE86E48(v387, v314, v316, 0);
        uint64_t v317 = sub_1C12ECBDC(&v387, &v391);
        if (v197)
        {
          sub_1BFD7418C(v315, v314, v316, 0);
          v325 = (unsigned int (*)(void, void, void))v363;
          return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
        uint64_t v318 = v317;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v315, v314, v318, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v315, v314, v316, 0);
        uint64_t v134 = v313;
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        uint64_t v208 = (uint64_t)v366;
        __int16 v111 = v382;
      }
    }
    else
    {
      sub_1C05DDC60(v213, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60((uint64_t)v363, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v215 = v361;
  sub_1BFFA1314(v113 + v111[24], v361, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v215, 1, v110) == 1)
  {
    sub_1C05DDCC0(v215, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    uint64_t v216 = v215;
    uint64_t v217 = v352;
    sub_1BFF83CC4(v216, v352, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v218 = swift_getEnumCaseMultiPayload();
    if (v218)
    {
      if (v218 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v208 = (uint64_t)v366;
        swift_bridgeObjectRelease();
      }
      else if (!*(unsigned char *)(v352 + 24))
      {
        uint64_t v384 = v118;
        uint64_t v319 = *(void *)(v352 + 8);
        uint64_t v321 = *(void *)(v352 + 16);
        uint64_t v387 = *(void *)v352;
        uint64_t v320 = v387;
        uint64_t v388 = v319;
        uint64_t v389 = v321;
        char v391 = 6;
        sub_1BFE86E48(v387, v319, v321, 0);
        uint64_t v322 = sub_1C12ECBDC(&v387, &v391);
        if (v197)
        {
          sub_1BFD7418C(v320, v319, v321, 0);
          v306 = &v392;
          goto LABEL_265;
        }
        uint64_t v323 = v322;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v320, v319, v323, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v320, v319, v321, 0);
        uint64_t v134 = (uint64_t)v355;
        uint64_t v118 = v384;
        uint64_t v110 = v385;
        uint64_t v208 = (uint64_t)v366;
        __int16 v111 = v382;
      }
      uint64_t v219 = v361;
    }
    else
    {
      sub_1C05DDC60(v217, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v219 = v361;
    }
    sub_1C05DDC60(v219, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  uint64_t v220 = v111[25];
  uint64_t v221 = v113;
  uint64_t v222 = v113 + v220;
  uint64_t v223 = v360;
  sub_1BFFA1314(v222, v360, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v223, 1, v110) == 1)
  {
    sub_1C05DDCC0(v223, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v224 = v382;
    goto LABEL_194;
  }
  uint64_t v225 = v223;
  uint64_t v226 = v342;
  sub_1BFF83CC4(v225, v342, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int v227 = swift_getEnumCaseMultiPayload();
  if (!v227)
  {
    sub_1C05DDC60(v226, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_193;
  }
  if (v227 != 1)
  {
    if (*(unsigned char *)(v226 + 24)) {
      goto LABEL_193;
    }
    uint64_t v384 = v118;
    uint64_t v326 = v221;
    uint64_t v327 = *(void *)(v226 + 8);
    uint64_t v329 = *(void *)(v226 + 16);
    uint64_t v387 = *(void *)v226;
    uint64_t v328 = v387;
    uint64_t v388 = v327;
    uint64_t v389 = v329;
    char v391 = 6;
    sub_1BFE86E48(v387, v327, v329, 0);
    uint64_t v330 = sub_1C12ECBDC(&v387, &v391);
    if (!v197)
    {
      uint64_t v331 = v330;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v328, v327, v331, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD7418C(v328, v327, v329, 0);
      uint64_t v221 = v326;
      uint64_t v134 = (uint64_t)v355;
      uint64_t v110 = v385;
      uint64_t v208 = (uint64_t)v366;
      goto LABEL_193;
    }
    sub_1BFD7418C(v328, v327, v329, 0);
    v306 = (uint64_t *)&v390;
LABEL_265:
    v325 = (unsigned int (*)(void, void, void))*(v306 - 32);
    return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  swift_bridgeObjectRelease();
  uint64_t v208 = (uint64_t)v366;
  swift_bridgeObjectRelease();
LABEL_193:
  v224 = v382;
  sub_1C05DDC60(v360, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_194:
  uint64_t v232 = v221 + v224[26];
  uint64_t v233 = (uint64_t)v343;
  sub_1BFFA1314(v232, (uint64_t)v343, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v233, 1, v110) == 1)
  {
    sub_1C05DDCC0(v233, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1C05B4968();
    v325 = (unsigned int (*)(void, void, void))v233;
    if (v197) {
      return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60(v233, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v110 = v385;
  }
  uint64_t v234 = v346;
  sub_1BFFA1314(v221 + v382[27], v346, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v234, 1, v110) == 1)
  {
    sub_1C05DDCC0(v234, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1C05B4968();
    if (v197) {
      goto LABEL_270;
    }
    sub_1C05DDC60(v234, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v110 = v385;
  }
  v235 = v382;
  sub_1BFFA1314(v221 + v382[28], v208, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v208, 1, v110) == 1)
  {
    sub_1C05DDCC0(v208, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1C05B4968();
    if (v197) {
      goto LABEL_212;
    }
    sub_1C05DDC60(v208, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v110 = v385;
    v235 = v382;
  }
  uint64_t v208 = v341;
  sub_1BFFA1314(v221 + v235[29], v341, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v208, 1, v110) == 1)
  {
    sub_1C05DDCC0(v208, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    goto LABEL_267;
  }
  sub_1C05B4968();
  if (v197)
  {
LABEL_212:
    v325 = (unsigned int (*)(void, void, void))v208;
    return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  sub_1C05DDC60(v208, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_267:
  uint64_t v234 = v339;
  uint64_t v332 = (uint64_t)v340;
  sub_1BFFA1314(v221 + v382[30], v339, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v234, 1, v385) == 1)
  {
    sub_1C05DDCC0(v234, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    goto LABEL_272;
  }
  sub_1C05B4968();
  if (v197)
  {
LABEL_270:
    v325 = (unsigned int (*)(void, void, void))v234;
    return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  sub_1C05DDC60(v234, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_272:
  v333 = v382;
  sub_1BFFA1314(v221 + v382[31], v332, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  uint64_t v334 = v385;
  if (v164(v332, 1, v385) == 1)
  {
    sub_1C05DDCC0(v332, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1C05B4968();
    if (v197)
    {
      v325 = (unsigned int (*)(void, void, void))v332;
      return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1C05DDC60(v332, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v334 = v385;
    v333 = v382;
  }
  sub_1BFFA1314(v221 + v333[32], v134, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v134, 1, v334) != 1)
  {
    sub_1C05B4968();
    if (!v197)
    {
      sub_1C05DDC60(v134, (uint64_t (*)(void))type metadata accessor for FormatURL);
      v333 = v382;
      goto LABEL_282;
    }
LABEL_280:
    v325 = (unsigned int (*)(void, void, void))v134;
    return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  sub_1C05DDCC0(v134, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
LABEL_282:
  uint64_t v335 = v221 + v333[33];
  uint64_t v336 = v338;
  sub_1BFFA1314(v335, v338, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v164(v336, 1, v385) == 1) {
    return sub_1C05DDCC0(v336, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  sub_1C05B4968();
  v325 = (unsigned int (*)(void, void, void))v336;
  return sub_1C05DDC60((uint64_t)v325, (uint64_t (*)(void))type metadata accessor for FormatURL);
}

uint64_t sub_1C05C08DC(uint64_t a1)
{
  return sub_1C05BCEF0(a1);
}

uint64_t sub_1C05C08F4(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 40) != 1
    || (uint64_t v4 = *(void *)(v1 + 32), swift_bridgeObjectRetain(), sub_1C059BA84(a1, v4), result = sub_1C0042624(v4, 1), !v2))
  {
    uint64_t v6 = *(void *)(v1 + 48);
    if (!v6 || (swift_bridgeObjectRetain(), sub_1C059BA84(a1, v6), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      uint64_t v7 = *(void *)(v1 + 56);
      if (!v7 || (swift_bridgeObjectRetain(), sub_1C059BA84(a1, v7), uint64_t result = swift_bridgeObjectRelease(), !v2))
      {
        uint64_t v8 = *(void *)(v1 + 64);
        if (!v8 || (swift_bridgeObjectRetain(), sub_1C059BA84(a1, v8), uint64_t result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          uint64_t v9 = *(void *)(v1 + 88);
          swift_bridgeObjectRetain();
          sub_1C05550B8(a1, v9);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05C0A34(uint64_t result)
{
  if (*(unsigned char *)(v1 + 8) == 1) {
    return sub_1C059BA84(result, *(void *)v1);
  }
  return result;
}

uint64_t sub_1C05C0A5C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v14 = a1;
    uint64_t v7 = (_OWORD *)(v5 + 56);
    while (1)
    {
      uint64_t v8 = *((void *)v7 - 1);
      if (v8)
      {
        uint64_t v9 = *((void *)v7 - 2);
        long long v15 = *v7;
        uint64_t v10 = *(void **)(a1 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1C0EE2410(0, v10[2] + 1, 1, v10);
        }
        unint64_t v12 = v10[2];
        unint64_t v11 = v10[3];
        if (v12 >= v11 >> 1) {
          uint64_t v10 = sub_1C0EE2410((void *)(v11 > 1), v12 + 1, 1, v10);
        }
        v10[2] = v12 + 1;
        uint64_t v13 = &v10[4 * v12];
        a1 = v14;
        v13[4] = v9;
        v13[5] = v8;
        *((_OWORD *)v13 + 3) = v15;
        *(void *)(v14 + 56) = v10;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1C05B4E6C(a1);
      if (v2) {
        break;
      }
      uint64_t v7 = (_OWORD *)((char *)v7 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v6) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05C0C28(uint64_t a1)
{
  return sub_1C05BCE40(a1);
}

uint64_t sub_1C05C0C40(uint64_t a1, uint64_t a2)
{
  return sub_1C05A215C(a1, a2);
}

uint64_t sub_1C05C0C58(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *((void *)v2 + 1);
  *(void *)&long long v15 = *(void *)v2;
  *((void *)&v15 + 1) = v10;
  uint64_t result = sub_1C11C4648(v11);
  if (!v3)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v2[*(int *)(a2 + 36)], v6);
    sub_1BFC845BC(0, &qword_1EA19C000);
    if (swift_dynamicCast())
    {
      uint64_t v13 = *((void *)&v16 + 1);
      uint64_t v14 = v17;
      __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v13, v14);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    }
    else
    {
      uint64_t v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      return sub_1BFE4D118((uint64_t)&v15, &qword_1EA19C008, &qword_1EA19C000);
    }
  }
  return result;
}

uint64_t sub_1C05C0DF4(uint64_t a1, uint64_t a2)
{
  return sub_1C05C0C58(a1, a2);
}

uint64_t sub_1C05C0E0C(uint64_t a1)
{
  return sub_1C05A2814(a1);
}

unint64_t sub_1C05C0E38(uint64_t a1)
{
  return sub_1C05B6E14(a1);
}

uint64_t sub_1C05C0E50(uint64_t a1)
{
  return sub_1C05A2ECC(a1);
}

uint64_t sub_1C05C0E68(uint64_t a1)
{
  return sub_1C054EE74(a1);
}

uint64_t sub_1C05C0E80(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = v3[8];
  swift_bridgeObjectRetain();
  sub_1C05550B8(a1, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v11 = v3[9];
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v14 = *(void *)(v6 + 72);
      v16[11] = v3[9];
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BFF83CC4(v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v16[1] = *((void *)v8 + 2);
        swift_retain();
        sub_1C05B8C90(a1);
        swift_release();
        sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v13 += v14;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t v15 = v3[11];
    swift_bridgeObjectRetain();
    sub_1C0561D78(a1, v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05C10B8(unint64_t a1)
{
  return sub_1C05C0E80(a1);
}

uint64_t sub_1C05C10DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C3F8C(a1, a2, a3, (uint64_t (*)(void))sub_1C05A2814, sub_1C05A2814);
}

uint64_t sub_1C05C111C(uint64_t result)
{
  uint64_t v3 = (_OWORD *)result;
  uint64_t v4 = *v1;
  if (*v1 < 0)
  {
    uint64_t v7 = *(void *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = v7 + 40; ; i += 16)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C059C1A0(v3);
        if (v2) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        if (!--v8) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else if (*(unsigned char *)(v4 + 40))
  {
    uint64_t v6 = *(void *)(v4 + 24);
    uint64_t v5 = *(void *)(v4 + 32);
    sub_1C00F64A4(v6, v5, 1);
    sub_1C05A1BA4((uint64_t)v3, v6, v5);
    return sub_1C00F64E0(v6, v5, 1);
  }
  return result;
}

uint64_t sub_1C05C1244(uint64_t a1)
{
  return sub_1C05C111C(a1);
}

uint64_t sub_1C05C125C(uint64_t result)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v2 = result;
    uint64_t v5 = v1 + 8;
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t v4 = *(void *)(v5 + 8);
    sub_1C00F64A4(v3, v4, 1);
    sub_1C05A1BA4(v2, v3, v4);
    return sub_1C00F64E0(v3, v4, 1);
  }
  return result;
}

uint64_t sub_1C05C12D4(uint64_t result)
{
  if (*(unsigned char *)(v1 + 16) == 1) {
    return sub_1C05A1BA4(result, *(void *)v1, *(void *)(v1 + 8));
  }
  return result;
}

uint64_t sub_1C05C12FC(uint64_t a1)
{
  return sub_1C05B6758(a1);
}

uint64_t sub_1C05C1320(uint64_t result)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(v1 + 64) != 1) {
    return sub_1C05A2814(result);
  }
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(*(void *)v1 + 16);
  if (!v6)
  {
LABEL_7:
    if (!v5) {
      return result;
    }
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8)
    {
      uint64_t v9 = swift_bridgeObjectRetain();
      sub_1BFDB3920(v9);
      swift_bridgeObjectRetain();
      uint64_t v10 = (unsigned char *)(v5 + 40);
      while (1)
      {
        if ((*v10 & 1) == 0)
        {
          uint64_t v11 = *((void *)v10 - 1);
          swift_retain_n();
          sub_1C02D349C(v3);
          sub_1BFF49984(v11, 0);
          sub_1BFF49984(v11, 0);
          if (v2) {
            break;
          }
        }
        v10 += 16;
        if (!--v8)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v12 = *(void *)(v4 + 16);
          if (v12) {
            goto LABEL_19;
          }
          return sub_1BFDB3960(v5);
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = *(void *)(v4 + 16);
      if (!v12) {
        return sub_1BFDB3960(v5);
      }
LABEL_19:
      swift_bridgeObjectRetain_n();
      uint64_t v13 = (unsigned char *)(v4 + 40);
      do
      {
        if ((*v13 & 1) == 0)
        {
          uint64_t v14 = *((void *)v13 - 1);
          swift_retain_n();
          sub_1C02D349C(v3);
          sub_1BFF49984(v14, 0);
          sub_1BFF49984(v14, 0);
          if (v2) {
            break;
          }
        }
        v13 += 16;
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease_n();
    return sub_1BFDB3960(v5);
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  while (1)
  {
    swift_retain();
    sub_1C05A2814(v3);
    if (v2) {
      break;
    }
    ++v7;
    swift_release();
    if (v6 == v7)
    {
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C05C1550(uint64_t a1)
{
  return sub_1C05A2F34(a1);
}

uint64_t sub_1C05C1568(uint64_t a1)
{
  return sub_1C05C1320(a1);
}

uint64_t sub_1C05C1580(uint64_t a1)
{
  return sub_1C05B7AE0(a1);
}

uint64_t sub_1C05C15A4(uint64_t a1)
{
  return sub_1C05B8A74(a1);
}

uint64_t sub_1C05C15C8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    if ((~v5 & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if ((~v4 & 0xF000000000000007) != 0) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

uint64_t sub_1C05C1654(uint64_t a1)
{
  return sub_1C05C15C8(a1);
}

uint64_t sub_1C05C166C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t result = sub_1C054EE74(a1);
  if (!v2 && (~v4 & 0xF000000000000007) != 0) {
    return sub_1C054EE74(a1);
  }
  return result;
}

void sub_1C05C16C4(uint64_t a1)
{
}

void sub_1C05C16DC(uint64_t a1)
{
}

uint64_t sub_1C05C16F4(uint64_t result)
{
  if ((*(unsigned char *)(v1 + 48) & 1) == 0)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t v5 = *(void *)(v1 + 32);
    uint64_t v6 = *(void *)(v1 + 40);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C05A70AC(v2);
    return sub_1BFEC41E8(v3, v4, v5, v6, 0);
  }
  return result;
}

uint64_t sub_1C05C17A0(uint64_t result)
{
  if ((*(unsigned char *)(v1 + 32) & 1) == 0)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)v1;
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = *(void *)(v1 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C05A70AC(v2);
    return sub_1BFEC41E8(v3, v4, v5, v6, 0);
  }
  return result;
}

uint64_t sub_1C05C184C(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t result = sub_1C054EE74(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v6 = v1[6];
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v7; ++i)
      {
        unint64_t v9 = *(void *)(v6 + 8 * i + 32);
        sub_1BFF32264(v9);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v9);
      }
      swift_bridgeObjectRelease_n();
    }
    sub_1C0565DD0(a1, v1[9]);
    uint64_t result = swift_beginAccess();
    unint64_t v10 = v1[11];
    if (v10 >> 62 == 1)
    {
      unint64_t v11 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFE6FA30(v3[11]);
      sub_1BFE6FA30(v11);
      swift_bridgeObjectRetain();
      sub_1C05A1AE0(a1, v11, v12);
      sub_1BFF0056C(v11);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFF0056C(v10);
    }
    uint64_t v13 = v3[13];
    if (v13)
    {
      swift_beginAccess();
      uint64_t v14 = *(void *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1C055478C(a1, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v15 = *(void *)(v13 + 88);
      swift_bridgeObjectRetain();
      sub_1C0592130(a1, v15);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C05C1A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C1AA4(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1C05550B8);
}

uint64_t sub_1C05C1AA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  a4(a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05C1AFC(unint64_t a1)
{
  uint64_t v5 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v6 = v1[8];
  swift_bridgeObjectRetain();
  sub_1C0561C48(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_bridgeObjectRetain();
    sub_1C0561D78(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C055DB28(a1, v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C05C1BA8(unint64_t a1)
{
  sub_1C059E410(a1);
  if (!v1) {
    sub_1C05AE364(a1);
  }
}

uint64_t sub_1C05C1BF0(unint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = v1[8];
  uint64_t v13 = v1[11];
  uint64_t v12 = v1[12];
  swift_bridgeObjectRetain();
  sub_1C05550B8(a1, v9);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v40 = v8;
  uint64_t v41 = v11;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_beginAccess();
    uint64_t v15 = *(void *)(v10 + 56);
    swift_bridgeObjectRetain();
    sub_1C05651E4(a1, v15);
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v10 + 74) != 255)
    {
      int v16 = *(unsigned __int16 *)(v10 + 72) | (*(unsigned __int8 *)(v10 + 74) << 16);
      uint64_t v45 = *(void *)(v10 + 64);
      LOWORD(v46) = v16;
      BYTE2(v46) = BYTE2(v16);
      sub_1C05AA1F8(a1);
    }
  }
  uint64_t v17 = v41;
  uint64_t v18 = *(void *)(v41 + 16);
  uint64_t v19 = v13;
  uint64_t v39 = v12;
  if (v18)
  {
    uint64_t v37 = v6;
    uint64_t v38 = v13;
    unint64_t v42 = a1;
    uint64_t v53 = 0;
    swift_bridgeObjectRetain_n();
    uint64_t v20 = (uint64_t *)(v17 + 48);
    while (1)
    {
      uint64_t v43 = v18;
      uint64_t v22 = *(v20 - 2);
      uint64_t v21 = *(v20 - 1);
      uint64_t v23 = *v20;
      uint64_t v24 = v20[1];
      uint64_t v26 = v20[2];
      uint64_t v25 = v20[3];
      unint64_t v28 = v20[4];
      uint64_t v27 = v20[5];
      uint64_t v45 = v22;
      uint64_t v46 = v21;
      uint64_t v47 = v23;
      uint64_t v48 = v24;
      uint64_t v49 = v26;
      uint64_t v50 = v25;
      unint64_t v51 = v28;
      uint64_t v52 = v27;
      uint64_t v44 = v27;
      sub_1BFF95098(v22, v21, v23, v24, v26, v25, v28);
      uint64_t v29 = v53;
      sub_1C05B7D38(v42);
      uint64_t v53 = v29;
      if (v29) {
        break;
      }
      v20 += 8;
      sub_1BFF94FE4(v22, v21, v23, v24, v26, v25, v28);
      uint64_t v18 = v43 - 1;
      if (v43 == 1)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v3 = v53;
        a1 = v42;
        uint64_t v6 = v37;
        uint64_t v19 = v38;
        goto LABEL_11;
      }
    }
    sub_1BFF94FE4(v22, v21, v23, v24, v26, v25, v28);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_11:
    uint64_t v30 = (uint64_t)v40;
    uint64_t v31 = *(void *)(v19 + 16);
    if (!v31)
    {
LABEL_16:
      uint64_t v35 = v39;
      swift_bridgeObjectRetain();
      sub_1C0561D78(a1, v35);
      return swift_bridgeObjectRelease();
    }
    uint64_t v32 = v6;
    uint64_t v33 = v19 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v34 = *(void *)(v32 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFF83CC4(v33, v30, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v45 = *(void *)(v30 + 16);
      swift_retain();
      sub_1C05B8C90(a1);
      if (v3) {
        break;
      }
      swift_release();
      sub_1C05DDC60(v30, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v33 += v34;
      if (!--v31)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
    }
    swift_release();
    sub_1C05DDC60(v30, (uint64_t (*)(void))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1C05C1FA0(unint64_t a1)
{
  return sub_1C05C1BF0(a1);
}

uint64_t sub_1C05C1FB8(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v40 = *(void *)(v1 + 48);
  uint64_t result = sub_1C054EE74(a1);
  uint64_t v10 = v2;
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v1 + 64);
    uint64_t v12 = *(void *)(v11 + 16);
    uint64_t v35 = v1;
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v12; ++i)
      {
        unint64_t v14 = *(void *)(v11 + 8 * i + 32);
        unint64_t v40 = v14;
        sub_1BFF32264(v14);
        sub_1C059B1D4(a1);
        sub_1BFF31E90(v14);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v3 = v35;
    }
    swift_beginAccess();
    uint64_t v15 = *(void *)(v3 + 72);
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v34 = v6;
    if (v16)
    {
      uint64_t v32 = v8;
      unint64_t v36 = a1;
      uint64_t v39 = 0;
      swift_bridgeObjectRetain_n();
      uint64_t v33 = v15;
      uint64_t v17 = (uint64_t *)(v15 + 48);
      while (1)
      {
        uint64_t v37 = v16;
        uint64_t v18 = *(v17 - 2);
        uint64_t v19 = *(v17 - 1);
        uint64_t v20 = *v17;
        uint64_t v21 = v17[1];
        uint64_t v23 = v17[2];
        uint64_t v22 = v17[3];
        unint64_t v25 = v17[4];
        uint64_t v24 = v17[5];
        unint64_t v40 = v18;
        uint64_t v41 = v19;
        uint64_t v42 = v20;
        uint64_t v43 = v21;
        uint64_t v44 = v23;
        uint64_t v45 = v22;
        unint64_t v46 = v25;
        uint64_t v47 = v24;
        uint64_t v38 = v24;
        sub_1BFF95098(v18, v19, v20, v21, v23, v22, v25);
        uint64_t v26 = v39;
        sub_1C05B7D38(v36);
        uint64_t v39 = v26;
        if (v26) {
          break;
        }
        v17 += 8;
        sub_1BFF94FE4(v18, v19, v20, v21, v23, v22, v25);
        uint64_t v16 = v37 - 1;
        if (v37 == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v10 = v39;
          uint64_t v3 = v35;
          a1 = v36;
          uint64_t v8 = v32;
          goto LABEL_11;
        }
      }
      sub_1BFF94FE4(v18, v19, v20, v21, v23, v22, v25);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      uint64_t result = swift_beginAccess();
      uint64_t v27 = *(void *)(v3 + 88);
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        uint64_t v29 = v27 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
        uint64_t v30 = *(void *)(v34 + 72);
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BFF83CC4(v29, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v48 = *((void *)v8 + 2);
          swift_retain();
          sub_1C05B8C90(a1);
          if (v10) {
            break;
          }
          swift_release();
          sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v29 += v30;
          if (!--v28) {
            return swift_bridgeObjectRelease_n();
          }
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

unint64_t sub_1C05C2350(unint64_t result)
{
  uint64_t v3 = result;
  unint64_t v4 = *(void *)v1;
  int v5 = *(unsigned __int8 *)(v1 + 8);
  if (*(unsigned char *)(v1 + 9))
  {
    if (v5 != 255) {
      return sub_1C05C2450(result);
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = (unsigned char *)(v4 + 40);
      do
      {
        if ((*v7 & 1) == 0)
        {
          uint64_t v8 = *((void *)v7 - 1);
          swift_retain_n();
          sub_1C02D349C(v3);
          sub_1BFF49984(v8, 0);
          sub_1BFF49984(v8, 0);
          if (v2) {
            break;
          }
        }
        v7 += 16;
        --v6;
      }
      while (v6);
      return sub_1BFFDF4D8(v4, v5, 0);
    }
  }
  return result;
}

unint64_t sub_1C05C2450(unint64_t result)
{
  unint64_t v3 = *(void *)v1;
  uint64_t v4 = result;
  switch(*(unsigned char *)(v1 + 8))
  {
    case 1:
      if (v3 >= 2)
      {
        uint64_t v16 = *(void *)(v3 + 16);
        if (v16)
        {
          sub_1BFE60260(*(void *)v1);
          uint64_t v17 = (unsigned char *)(v3 + 40);
          do
          {
            if ((*v17 & 1) == 0)
            {
              uint64_t v18 = *((void *)v17 - 1);
              swift_retain_n();
              sub_1C02D349C(v4);
              sub_1BFF49984(v18, 0);
              sub_1BFF49984(v18, 0);
              if (v2) {
                break;
              }
            }
            v17 += 16;
            --v16;
          }
          while (v16);
          unint64_t v8 = v3;
          unsigned __int8 v9 = 1;
          return sub_1BFFDF4B0(v8, v9);
        }
      }
      return result;
    case 2:
      if (v3 >= 2)
      {
        uint64_t v10 = *(void *)(v3 + 16);
        if (v10)
        {
          sub_1BFE60260(*(void *)v1);
          uint64_t v11 = (unsigned char *)(v3 + 40);
          do
          {
            if ((*v11 & 1) == 0)
            {
              uint64_t v12 = *((void *)v11 - 1);
              swift_retain_n();
              sub_1C02D349C(v4);
              sub_1BFF49984(v12, 0);
              sub_1BFF49984(v12, 0);
              if (v2) {
                break;
              }
            }
            v11 += 16;
            --v10;
          }
          while (v10);
          unint64_t v8 = v3;
          unsigned __int8 v9 = 2;
          return sub_1BFFDF4B0(v8, v9);
        }
      }
      return result;
    case 3:
      if (v3 < 2) {
        return result;
      }
      uint64_t v13 = *(void *)(v3 + 16);
      if (!v13) {
        return result;
      }
      sub_1BFE60260(*(void *)v1);
      unint64_t v14 = (unsigned char *)(v3 + 40);
      break;
    default:
      if (v3 >= 2)
      {
        uint64_t v5 = *(void *)(v3 + 16);
        if (v5)
        {
          sub_1BFE60260(*(void *)v1);
          uint64_t v6 = (unsigned char *)(v3 + 40);
          do
          {
            if ((*v6 & 1) == 0)
            {
              uint64_t v7 = *((void *)v6 - 1);
              swift_retain_n();
              sub_1C02D349C(v4);
              sub_1BFF49984(v7, 0);
              sub_1BFF49984(v7, 0);
              if (v2) {
                break;
              }
            }
            v6 += 16;
            --v5;
          }
          while (v5);
          unint64_t v8 = v3;
          unsigned __int8 v9 = 0;
          return sub_1BFFDF4B0(v8, v9);
        }
      }
      return result;
  }
  while (1)
  {
    if ((*v14 & 1) == 0)
    {
      uint64_t v15 = *((void *)v14 - 1);
      swift_retain_n();
      sub_1C02D349C(v4);
      if (v2)
      {
        sub_1BFF49984(v15, 0);
        sub_1BFF49984(v15, 0);
LABEL_31:
        unint64_t v8 = v3;
        unsigned __int8 v9 = 3;
        return sub_1BFFDF4B0(v8, v9);
      }
      sub_1BFF49984(v15, 0);
      sub_1BFF49984(v15, 0);
    }
    v14 += 16;
    if (!--v13) {
      goto LABEL_31;
    }
  }
}

unint64_t sub_1C05C26EC(unint64_t a1)
{
  return sub_1C05C2350(a1);
}

unint64_t sub_1C05C2704(unint64_t a1)
{
  return sub_1C05C2450(a1);
}

unint64_t sub_1C05C271C(unint64_t a1)
{
  return sub_1C05AA1F8(a1);
}

unint64_t sub_1C05C2734(unint64_t a1)
{
  return sub_1C05B8680(a1);
}

unint64_t sub_1C05C2758(unint64_t a1)
{
  int v4 = *(unsigned __int8 *)(v1 + 34);
  int v5 = *(unsigned __int16 *)(v1 + 32);
  unint64_t result = sub_1C11C4648(a1);
  if (!v2 && (v5 | (v4 << 16)) >> 16 <= 0xFE) {
    return sub_1C05AA1F8(a1);
  }
  return result;
}

uint64_t sub_1C05C27D8(uint64_t a1)
{
  return sub_1C059BFA0(a1);
}

void sub_1C05C27F0(_OWORD *a1)
{
}

uint64_t sub_1C05C2808(unint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v14 = a1;
    uint64_t v7 = (_OWORD *)(v5 + 56);
    while (1)
    {
      uint64_t v8 = *((void *)v7 - 1);
      if (v8)
      {
        uint64_t v9 = *((void *)v7 - 2);
        long long v15 = *v7;
        uint64_t v10 = *(void **)(a1 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1C0EE2410(0, v10[2] + 1, 1, v10);
        }
        unint64_t v12 = v10[2];
        unint64_t v11 = v10[3];
        if (v12 >= v11 >> 1) {
          uint64_t v10 = sub_1C0EE2410((void *)(v11 > 1), v12 + 1, 1, v10);
        }
        v10[2] = v12 + 1;
        uint64_t v13 = &v10[4 * v12];
        a1 = v14;
        v13[4] = v9;
        v13[5] = v8;
        *((_OWORD *)v13 + 3) = v15;
        *(void *)(v14 + 56) = v10;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1C05B4E6C(a1);
      if (v2) {
        break;
      }
      uint64_t v7 = (_OWORD *)((char *)v7 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v6) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C05C29D4(_OWORD *a1)
{
  uint64_t v4 = *v1;
  sub_1C059C1A0(a1);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v5 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    sub_1C05550B8((uint64_t)a1, v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C05C2A60(unint64_t a1)
{
  return sub_1C05C2808(a1);
}

uint64_t sub_1C05C2A84(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t sub_1C05C2AD8(uint64_t a1)
{
  return sub_1C05A156C(a1);
}

void sub_1C05C2AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v13 = *(void *)v2;
  sub_1C059C1A0(v10);
  if (!v3)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v2[*(int *)(a2 + 36)], v6);
    sub_1BFC845BC(0, &qword_1EA19C000);
    if (swift_dynamicCast())
    {
      uint64_t v11 = *((void *)&v14 + 1);
      uint64_t v12 = v15;
      __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, v11, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
      sub_1BFE4D118((uint64_t)&v13, &qword_1EA19C008, &qword_1EA19C000);
    }
  }
}

void sub_1C05C2C8C(uint64_t a1, uint64_t a2)
{
}

void sub_1C05C2CA4(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v1 + 16);
  switch(*(unsigned char *)(v1 + 17))
  {
    case 1:
      if (v4)
      {
        uint64_t v7 = *(void *)(v4 + 16);
        if (v7)
        {
          sub_1BFF61744(*(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), 1);
          swift_bridgeObjectRetain();
          uint64_t v8 = (unsigned char *)(v4 + 40);
          do
          {
            if ((*v8 & 1) == 0)
            {
              uint64_t v9 = *((void *)v8 - 1);
              swift_retain_n();
              sub_1C02D349C(a1);
              sub_1BFF49984(v9, 0);
              sub_1BFF49984(v9, 0);
              if (v2) {
                break;
              }
            }
            v8 += 16;
            --v7;
          }
          while (v7);
          sub_1BFF61770(v3, v4, v5, 1);
          uint64_t v10 = v3;
          uint64_t v11 = v4;
          uint64_t v12 = v5;
          char v13 = 1;
          goto LABEL_16;
        }
      }
      break;
    case 2:
      uint64_t v14 = *(void *)(v3 + 16);
      if (v14)
      {
        sub_1BFF61744(*(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), 2);
        swift_bridgeObjectRetain();
        uint64_t v15 = (unsigned char *)(v3 + 40);
        do
        {
          if ((*v15 & 1) == 0)
          {
            uint64_t v16 = *((void *)v15 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
            if (v2) {
              break;
            }
          }
          v15 += 16;
          --v14;
        }
        while (v14);
        sub_1BFF61770(v3, v4, v5, 2);
        uint64_t v10 = v3;
        uint64_t v11 = v4;
        uint64_t v12 = v5;
        char v13 = 2;
LABEL_16:
        sub_1BFF61770(v10, v11, v12, v13);
      }
      break;
    case 3:
    case 4:
      return;
    default:
      sub_1C05AB0E0(a1);
      break;
  }
}

void sub_1C05C2EA4(uint64_t a1)
{
}

void sub_1C05C2EBC(uint64_t a1)
{
}

uint64_t sub_1C05C2EE8(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 8);
  if (v2) {
    return sub_1C059B9C8(result, v2);
  }
  return result;
}

uint64_t sub_1C05C2F08(uint64_t a1)
{
  uint64_t result = sub_1C05A2814(a1);
  if (!v1) {
    return sub_1C05A2814(a1);
  }
  return result;
}

uint64_t sub_1C05C2F54(uint64_t result)
{
  uint64_t v3 = *v1;
  uint64_t v4 = result;
  switch((unint64_t)*v1 >> 62)
  {
    case 1uLL:
      return sub_1C05A2814(result);
    case 2uLL:
      uint64_t v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v7 + 24);
      sub_1BFF58F10(v8);
      swift_bridgeObjectRetain();
      sub_1C05A1FA4(v4, v8, v9);
      sub_1BFF07CD8(v8);
      return swift_bridgeObjectRelease();
    case 3uLL:
      return result;
    default:
      uint64_t v5 = *(void *)(*(void *)(v3 + 16) + 16);
      if (!v5) {
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      break;
  }
  while (1)
  {
    swift_retain();
    sub_1C05A2814(v4);
    if (v2) {
      break;
    }
    ++v6;
    swift_release();
    if (v5 == v6) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1C05C30A4(uint64_t a1)
{
}

uint64_t sub_1C05C30BC(uint64_t a1)
{
  return sub_1C05C2F54(a1);
}

void sub_1C05C30D4(uint64_t a1)
{
}

void sub_1C05C30EC(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 16) == 1 && (*(void *)v1 & 0xF000000000000007) != 0xF000000000000007) {
    sub_1C1131F08(a1);
  }
}

void sub_1C05C3130(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  sub_1C05AB0E0(a1);
  if (!v2)
  {
    uint64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v7 = (unsigned char *)(v4 + 40);
      do
      {
        if ((*v7 & 1) == 0)
        {
          uint64_t v8 = *((void *)v7 - 1);
          swift_retain_n();
          sub_1C02D349C(a1);
          sub_1BFF49984(v8, 0);
          sub_1BFF49984(v8, 0);
        }
        v7 += 16;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease_n();
    }
    uint64_t v9 = *(void *)(v5 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v10 = (unsigned char *)(v5 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          uint64_t v11 = *((void *)v10 - 1);
          swift_retain_n();
          sub_1C02D349C(a1);
          sub_1BFF49984(v11, 0);
          sub_1BFF49984(v11, 0);
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1C05C3298(uint64_t a1)
{
}

void sub_1C05C32B0(uint64_t a1)
{
}

void sub_1C05C32C8(uint64_t a1)
{
  if ((~*v1 & 0xF000000000000007) != 0) {
    sub_1C1131F08(a1);
  }
}

uint64_t sub_1C05C3300(uint64_t result)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v2 = *(void *)(v1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(v1 + 16);
  switch(v4 >> 6)
  {
    case 1u:
      if (v4)
      {
        sub_1C0223FA8(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
        uint64_t v5 = &unk_1F1B66038;
        goto LABEL_10;
      }
      break;
    case 2u:
      if (v4)
      {
        sub_1C0223FA8(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
        uint64_t v5 = &unk_1F1B66060;
        goto LABEL_10;
      }
      break;
    case 3u:
      if (v4)
      {
        sub_1C0223FA8(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
        uint64_t v5 = &unk_1F1B66088;
        goto LABEL_10;
      }
      break;
    default:
      if (v4)
      {
        sub_1C0223FA8(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
        uint64_t v5 = &unk_1F1B66010;
LABEL_10:
        uint64_t v6 = sub_1C00B857C((uint64_t)v5);
        sub_1C0F49260(v3, v2, v6, 0);
        swift_bridgeObjectRelease();
        uint64_t result = sub_1C0224254(v3, v2, v4);
      }
      break;
  }
  return result;
}

uint64_t sub_1C05C3438(uint64_t a1)
{
  return sub_1C05C3300(a1);
}

uint64_t sub_1C05C3450()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v2 = *(void *)v0;
    uint64_t v1 = *(void *)(v0 + 8);
    sub_1BFE94AB4(*(void *)v0, v1, 1);
    uint64_t v3 = sub_1C00B857C((uint64_t)&unk_1F1B662D0);
    sub_1C0F49260(v2, v1, v3, 0);
    swift_bridgeObjectRelease();
    return sub_1BFE94AD4(v2, v1, 1);
  }
  return result;
}

void sub_1C05C34F0(uint64_t a1)
{
}

void sub_1C05C3514(uint64_t a1)
{
}

void sub_1C05C3538(uint64_t a1)
{
}

void sub_1C05C355C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  int v5 = *(unsigned __int8 *)(v1 + 32);
  sub_1C05B3588(a1);
  if (!v2)
  {
    if (v5)
    {
      sub_1BFE94AB4(v4, v3, 1);
      uint64_t v6 = sub_1C00B857C((uint64_t)&unk_1F1B66578);
      sub_1C0F49260(v4, v3, v6, 0);
      swift_bridgeObjectRelease();
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      char v9 = 1;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      char v9 = 0;
    }
    sub_1BFE94AD4(v7, v8, v9);
  }
}

uint64_t sub_1C05C3624(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)v1;
  if (*(unsigned char *)(v1 + 8))
  {
    if (*(unsigned char *)(v1 + 8) != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
    sub_1C059BA84(v3, v4);
    uint64_t v5 = v4;
    unsigned __int8 v6 = 1;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 16);
    if (!v7) {
      return result;
    }
    sub_1C01EF338(*(void *)v1, 0);
    swift_bridgeObjectRetain();
    uint64_t v8 = (unsigned char *)(v4 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        uint64_t v9 = *((void *)v8 - 1);
        swift_retain_n();
        sub_1C02D349C(v3);
        sub_1BFF49984(v9, 0);
        sub_1BFF49984(v9, 0);
        if (v2) {
          break;
        }
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    sub_1C01EF35C(v4, 0);
    uint64_t v5 = v4;
    unsigned __int8 v6 = 0;
  }
  return sub_1C01EF35C(v5, v6);
}

void sub_1C05C3734(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v6 = (char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *v1;
  sub_1C1131F08(a1);
  if (!v2)
  {
    uint64_t v7 = type metadata accessor for FormatTextNodeLink();
    sub_1BFF83CC4((uint64_t)v1 + *(int *)(v7 + 20), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v6[24])
      {
        uint64_t v10 = *(void *)v6;
        uint64_t v9 = *((void *)v6 + 1);
        uint64_t v11 = *((void *)v6 + 2);
        v14[0] = v10;
        v14[1] = v9;
        v14[2] = v11;
        char v15 = 6;
        sub_1BFE86E48(v10, v9, v11, 0);
        uint64_t v12 = sub_1C12ECBDC(v14, &v15);
        swift_bridgeObjectRetain();
        sub_1C0F49260(v10, v9, v12, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFD7418C(v10, v9, v11, 0);
      }
    }
    else
    {
      sub_1C05DDC60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
  }
}

unint64_t sub_1C05C3904(unint64_t result)
{
  unint64_t v3 = *v1;
  unint64_t v4 = *v1 >> 62;
  if ((v4 - 2) >= 2)
  {
    if (v4)
    {
      return sub_1C05A98D8(result);
    }
    else if (!*(unsigned char *)(v3 + 40))
    {
      uint64_t v5 = *(void *)(v3 + 24);
      uint64_t v6 = *(void *)(v3 + 32);
      v11[0] = *(void *)(v3 + 16);
      uint64_t v7 = v11[0];
      v11[1] = v5;
      v11[2] = v6;
      char v10 = 1;
      sub_1BFF58F10(v3);
      sub_1BFE86E48(v11[0], v5, v6, 0);
      uint64_t v8 = sub_1C12ECBDC(v11, &v10);
      if (!v2)
      {
        uint64_t v9 = v8;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v7, v5, v9, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return sub_1BFF07CD8(v3);
    }
  }
  return result;
}

void sub_1C05C3A18(_OWORD *a1)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v5 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v7 = *(void *)(v5 + 16);
      unint64_t v6 = *(void *)(v5 + 24);
      swift_bridgeObjectRetain();
      sub_1BFF18D70(v6);
      sub_1C059233C(a1, v7);
      if (!v2) {
        sub_1C05C3A18(a1);
      }
      swift_bridgeObjectRelease();
      sub_1BFF18DA8(v6);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(*(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 16);
      if (v8)
      {
        uint64_t v9 = swift_bridgeObjectRetain() + 56;
        do
        {
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1C1131F08((uint64_t)a1);
          if (v2) {
            goto LABEL_17;
          }
          swift_release();
          swift_retain();
          sub_1C05C3D34((uint64_t)a1);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v9 += 32;
          --v8;
        }
        while (v8);
        goto LABEL_16;
      }
      break;
    case 3uLL:
      uint64_t v10 = *(void *)(*(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 16);
      if (v10)
      {
        uint64_t v11 = swift_bridgeObjectRetain() + 56;
        while (1)
        {
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1C1131F08((uint64_t)a1);
          if (v2) {
            break;
          }
          swift_release();
          swift_retain();
          sub_1C05C3D34((uint64_t)a1);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v11 += 32;
          if (!--v10)
          {
LABEL_16:
            swift_bridgeObjectRelease();
            return;
          }
        }
LABEL_17:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
      }
      break;
    case 4uLL:
    case 5uLL:
      sub_1C1131F08((uint64_t)a1);
      break;
    case 6uLL:
      return;
    default:
      sub_1C054EE74((uint64_t)a1);
      break;
  }
}

void sub_1C05C3D10(_OWORD *a1)
{
}

uint64_t sub_1C05C3D34(uint64_t result)
{
  uint64_t v3 = result;
  switch(*v1 >> 62)
  {
    case 1:
      uint64_t v4 = *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v6 = (unsigned char *)(v4 + 40);
        do
        {
          if ((*v6 & 1) == 0)
          {
            uint64_t v7 = *((void *)v6 - 1);
            swift_retain_n();
            sub_1C02D349C(v3);
            sub_1BFF49984(v7, 0);
            sub_1BFF49984(v7, 0);
            if (v2) {
              break;
            }
          }
          v6 += 16;
          --v5;
        }
        while (v5);
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      break;
    case 2:
    case 3:
      swift_retain();
      swift_retain();
      sub_1C05C3D34(v3);
      if (!v2) {
        sub_1C05C3D34(v3);
      }
      swift_release();
      uint64_t result = swift_release();
      break;
    default:
      uint64_t result = sub_1C05C3D34(result);
      break;
  }
  return result;
}

void sub_1C05C3EBC(uint64_t a1)
{
  sub_1C1131F08(a1);
  if (!v1) {
    sub_1C05C3D34(a1);
  }
}

uint64_t sub_1C05C3F08(uint64_t a1)
{
  return sub_1C05C3D34(a1);
}

uint64_t sub_1C05C3F20(uint64_t a1)
{
  return sub_1C05C3D34(a1);
}

uint64_t sub_1C05C3F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C3F8C(a1, a2, a3, (uint64_t (*)(void))sub_1C05C3D34, sub_1C05C3D34);
}

uint64_t sub_1C05C3F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t result = a4();
  if (!v5) {
    return a5(a1);
  }
  return result;
}

void sub_1C05C3FEC(uint64_t a1)
{
}

unint64_t sub_1C05C4004(unint64_t a1)
{
  return sub_1C05C3904(a1);
}

uint64_t sub_1C05C401C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C405C(a1, a2, a3, (uint64_t (*)(void))sub_1C1131F08, sub_1C058CEA4);
}

uint64_t sub_1C05C405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v9 = *(void *)(v5 + 8);
  uint64_t result = a4();
  if (!v6) {
    return a5(a1, v9);
  }
  return result;
}

void sub_1C05C40B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 24);
  sub_1C1131F08(a1);
  if (!v2)
  {
    if (v4) {
      sub_1C05AB7D8(a1);
    }
  }
}

void sub_1C05C4104(uint64_t a1)
{
}

uint64_t sub_1C05C411C(uint64_t a1)
{
  return sub_1C05C3624(a1);
}

void sub_1C05C4134(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v28 = v1[2];
  sub_1C05DC640((uint64_t)(v1 + 3), (uint64_t)v27, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  uint64_t v24 = v1[19];
  int v23 = *((unsigned __int8 *)v1 + 240);
  uint64_t v21 = v1[59];
  uint64_t v22 = v1[24];
  uint64_t v6 = v1[61];
  uint64_t v20 = v1[60];
  uint64_t v7 = v1[62];
  uint64_t v8 = v1[63];
  uint64_t v9 = v1[65];
  v26[0] = v4;
  v26[1] = v5;
  uint64_t v10 = a1;
  sub_1C11C4648(a1);
  if (!v2)
  {
    uint64_t v18 = v8;
    uint64_t v19 = v7;
    if ((~v28 & 0xF000000000000007) != 0)
    {
      v26[0] = v28;
      sub_1C05AB0E0(a1);
    }
    sub_1C05DC640((uint64_t)v27, (uint64_t)v26, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    if (sub_1C044587C((uint64_t)v26) != 1)
    {
      sub_1BFF6530C((uint64_t)v26, (uint64_t)v25);
      sub_1C05AAE60(a1);
    }
    if (v24) {
      sub_1C05529C4(a1, v24);
    }
    if (v23 != 254)
    {
      v25[0] = v22;
      sub_1C05A2814(a1);
    }
    uint64_t v11 = v20;
    if (v21)
    {
      uint64_t v12 = *(void *)(v21 + 16);
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        char v13 = (unsigned char *)(v21 + 40);
        do
        {
          if ((*v13 & 1) == 0)
          {
            v25[0] = *((void *)v13 - 1);
            uint64_t v14 = v25[0];
            swift_retain_n();
            sub_1C02D349C(v10);
            sub_1BFF49984(v14, 0);
            sub_1BFF49984(v14, 0);
          }
          v13 += 16;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease_n();
        uint64_t v11 = v20;
      }
    }
    if (v11 != 9)
    {
      if ((~v6 & 0xF000000000000007) != 0)
      {
        v25[0] = v6;
        sub_1C05A2814(v10);
      }
      else
      {
        sub_1BFEF8750(v11, v6);
      }
    }
    if (v19 != 9)
    {
      if ((~v18 & 0xF000000000000007) != 0)
      {
        v25[0] = v18;
        sub_1C05A2814(v10);
      }
      else
      {
        sub_1BFEF8750(v19, v18);
      }
    }
    if (v9)
    {
      uint64_t v15 = *(void *)(v9 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v16 = (unsigned char *)(v9 + 40);
        do
        {
          if ((*v16 & 1) == 0)
          {
            v25[0] = *((void *)v16 - 1);
            uint64_t v17 = v25[0];
            swift_retain_n();
            sub_1C02D349C(v10);
            sub_1BFF49984(v17, 0);
            sub_1BFF49984(v17, 0);
          }
          v16 += 16;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1C05C44D4(uint64_t a1)
{
}

void sub_1C05C44EC(_OWORD *a1)
{
}

uint64_t sub_1C05C4504(uint64_t a1)
{
  return sub_1C05B4DEC(a1);
}

void sub_1C05C451C(unint64_t a1)
{
  unint64_t v65 = a1;
  sub_1BFF7185C(0, &qword_1EB88E9A8, (void (*)(void))sub_1C006F9DC);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v61 = (uint64_t)&v50 - v4;
  sub_1BFF7185C(0, &qword_1EB88E9B0, (void (*)(void))sub_1C0084C58);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t)&v50 - v6;
  sub_1BFF7185C(0, &qword_1EB88E998, (void (*)(void))sub_1C00738F0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v59 = (uint64_t)&v50 - v8;
  sub_1BFF7185C(0, &qword_1EB88E9A0, (void (*)(void))sub_1C0036630);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v58 = (uint64_t)&v50 - v10;
  sub_1BFF7185C(0, &qword_1EB88E9B8, (void (*)(void))sub_1C003F2E8);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (char *)&v50 - v12;
  uint64_t v14 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v50 - v19;
  unsigned int v21 = *(unsigned __int8 *)(v1 + 48);
  if (!(v21 >> 6)) {
    return;
  }
  uint64_t v22 = *(void *)v1;
  uint64_t v23 = *(void *)(v1 + 8);
  uint64_t v56 = *(void *)(v1 + 16);
  uint64_t v24 = *(void *)(v1 + 32);
  uint64_t v57 = *(void *)(v1 + 24);
  uint64_t v25 = *(void *)(v1 + 40);
  if (v21 >> 6 == 1)
  {
    if ((v21 & 1) == 0)
    {
      uint64_t v27 = v56;
      uint64_t v26 = v57;
      uint64_t v28 = *(void *)(v56 + 32);
      __int16 v29 = *(_WORD *)(v56 + 40);
      long long v62 = *(_OWORD *)(v56 + 16);
      uint64_t v63 = v28;
      __int16 v64 = v29;
      uint64_t v30 = v22;
      uint64_t v31 = v23;
      sub_1BFF1DB64(v22, v23, v56, v57, v24, v25, v21);
      sub_1BFF429DC(v27, v26, v24, v25, 0);
      sub_1C05A70AC(v65);
      sub_1BFEC41E8(v27, v26, v24, v25, 0);
      uint64_t v32 = v30;
      uint64_t v33 = v31;
      uint64_t v34 = v27;
      uint64_t v35 = v26;
      uint64_t v36 = v24;
      uint64_t v37 = v25;
      unsigned __int8 v38 = v21;
      goto LABEL_32;
    }
    return;
  }
  uint64_t v55 = v24;
  uint64_t v39 = *(void *)(v22 + 16);
  if (!v39) {
    return;
  }
  uint64_t v52 = v23;
  uint64_t v53 = v25;
  unsigned int v54 = v21;
  uint64_t v40 = v22 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v41 = *(void *)(v18 + 72);
  uint64_t v51 = v22;
  swift_bridgeObjectRetain();
  while (2)
  {
    sub_1BFF83CC4(v40, (uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
    sub_1BFF83CC4((uint64_t)v20, (uint64_t)v16, type metadata accessor for FormatPropertyDefinition);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1C05DC640((uint64_t)v16, (uint64_t)v13, (uint64_t)&qword_1EB88E9B8, (uint64_t)sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*((void *)v13 + 9) & 0xF000000000000007) == 0
          || (*(void *)&long long v62 = *((void *)v13 + 9), sub_1C05A2814(v65), !v2))
        {
          sub_1C05DD154((uint64_t)v13, (uint64_t)&qword_1EB88E9B8, (uint64_t)sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(void))sub_1BFF7185C);
          goto LABEL_8;
        }
        unint64_t v46 = &qword_1EB88E9B8;
        uint64_t v47 = &type metadata for FormatColor;
        uint64_t v48 = sub_1C003F2E8;
        uint64_t v49 = (uint64_t)v13;
        goto LABEL_30;
      case 8u:
        uint64_t v43 = v58;
        sub_1C05DC640((uint64_t)v16, v58, (uint64_t)&qword_1EB88E9A0, (uint64_t)sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v43 + 72) & 0xF000000000000007) != 0)
        {
          *(void *)&long long v62 = *(void *)(v43 + 72);
          sub_1C059E410(v65);
          if (v2)
          {
            unint64_t v46 = &qword_1EB88E9A0;
            uint64_t v47 = &type metadata for FormatAsyncImageContent;
            uint64_t v48 = sub_1C0036630;
            uint64_t v49 = v58;
            goto LABEL_30;
          }
        }
        sub_1C05DD154(v58, (uint64_t)&qword_1EB88E9A0, (uint64_t)sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(void))sub_1BFF7185C);
        goto LABEL_8;
      case 9u:
        uint64_t v44 = v59;
        sub_1C05DC640((uint64_t)v16, v59, (uint64_t)&qword_1EB88E998, (uint64_t)sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v44 + 72) & 0xF000000000000007) != 0)
        {
          *(void *)&long long v62 = *(void *)(v44 + 72);
          sub_1C05B918C(v65);
          if (v2)
          {
            unint64_t v46 = &qword_1EB88E998;
            uint64_t v47 = &type metadata for FormatVideoNodeContent;
            uint64_t v48 = sub_1C00738F0;
            uint64_t v49 = v59;
            goto LABEL_30;
          }
        }
        sub_1C05DD154(v59, (uint64_t)&qword_1EB88E998, (uint64_t)sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(void))sub_1BFF7185C);
        goto LABEL_8;
      case 0xAu:
        uint64_t v45 = v60;
        sub_1C05DC640((uint64_t)v16, v60, (uint64_t)&qword_1EB88E9B0, (uint64_t)sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v45 + 72) & 0xF000000000000007) != 0)
        {
          *(void *)&long long v62 = *(void *)(v45 + 72);
          sub_1C05AB0E0(v65);
          if (v2)
          {
            unint64_t v46 = &qword_1EB88E9B0;
            uint64_t v47 = &type metadata for FormatFont;
            uint64_t v48 = sub_1C0084C58;
            uint64_t v49 = v60;
            goto LABEL_30;
          }
        }
        sub_1C05DD154(v60, (uint64_t)&qword_1EB88E9B0, (uint64_t)sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(void))sub_1BFF7185C);
        goto LABEL_8;
      case 0xBu:
        uint64_t v42 = v61;
        sub_1C05DC640((uint64_t)v16, v61, (uint64_t)&qword_1EB88E9A8, (uint64_t)sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
        if ((~*(void *)(v42 + 72) & 0xF000000000000007) == 0
          || (*(void *)&long long v62 = *(void *)(v42 + 72), sub_1C05B9520(v65), !v2))
        {
          sub_1C05DD154(v61, (uint64_t)&qword_1EB88E9A8, (uint64_t)sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(void))sub_1BFF7185C);
LABEL_8:
          sub_1C05DDC60((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
          v40 += v41;
          if (!--v39) {
            goto LABEL_31;
          }
          continue;
        }
        unint64_t v46 = &qword_1EB88E9A8;
        uint64_t v47 = &type metadata for FormatVideoPlayerContent;
        uint64_t v48 = sub_1C006F9DC;
        uint64_t v49 = v61;
LABEL_30:
        sub_1C05DD154(v49, (uint64_t)v46, (uint64_t)v48, (uint64_t)v47, (uint64_t (*)(void))sub_1BFF7185C);
        sub_1C05DDC60((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
LABEL_31:
        uint64_t v32 = v51;
        uint64_t v33 = v52;
        uint64_t v34 = v56;
        uint64_t v35 = v57;
        uint64_t v36 = v55;
        uint64_t v37 = v53;
        unsigned __int8 v38 = v54;
LABEL_32:
        sub_1BFEC28BC(v32, v33, v34, v35, v36, v37, v38);
        return;
      default:
        sub_1C05DDC60((uint64_t)v16, type metadata accessor for FormatPropertyDefinition);
        goto LABEL_8;
    }
  }
}

void sub_1C05C4EF0(unint64_t a1)
{
}

void sub_1C05C4F34(unint64_t a1)
{
}

uint64_t sub_1C05C4F4C()
{
  return sub_1C05B4968();
}

uint64_t sub_1C05C4F64(uint64_t a1, uint64_t a2)
{
  return sub_1C05A6A08(a1, a2);
}

uint64_t sub_1C05C4F7C(uint64_t result)
{
  if ((~*(void *)(v1 + 8) & 0xF000000000000007) != 0) {
    return sub_1C05A2814(result);
  }
  return result;
}

uint64_t sub_1C05C4FB4(uint64_t a1, uint64_t a2)
{
  return sub_1C05A1704(a1, a2);
}

uint64_t sub_1C05C4FCC(uint64_t a1)
{
  return sub_1C05B5EE4(a1, (uint64_t)&unk_1F1B66618);
}

uint64_t sub_1C05C4FF8(uint64_t a1)
{
  return sub_1C05B60BC(a1, (uint64_t)&unk_1F1B665C8);
}

uint64_t sub_1C05C5024(uint64_t result)
{
  int v3 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  int v6 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 64);
  int v8 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v22 = *(void *)(v1 + 80);
  uint64_t v23 = *(void *)(v1 + 56);
  uint64_t v21 = *(void *)(v1 + 88);
  int v24 = *(unsigned __int8 *)(v1 + 96);
  if (v3 != 255)
  {
    uint64_t v19 = *(void *)(v1 + 40);
    uint64_t v20 = *(void *)(v1 + 64);
    int v9 = *(unsigned __int8 *)(v1 + 72);
    uint64_t v11 = *(void *)(v1 + 8);
    uint64_t v10 = *(void *)(v1 + 16);
    if (v3)
    {
      sub_1BFFC8784(*(void *)(v1 + 8), *(void *)(v1 + 16), v3);
      uint64_t v12 = sub_1C00B857C((uint64_t)&unk_1F1B663E8);
      sub_1C0F49260(v11, v10, v12, 0);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFFC879C(v11, v10, v3);
      int v8 = v9;
      uint64_t v4 = v19;
      uint64_t v7 = v20;
      if (v2) {
        return result;
      }
    }
    else
    {
      uint64_t result = sub_1BFFC879C(*(void *)(v1 + 8), *(void *)(v1 + 16), v3);
      int v8 = v9;
      uint64_t v4 = v19;
      uint64_t v7 = v20;
    }
  }
  if (v6 != 255)
  {
    if (v6)
    {
      uint64_t v13 = v4;
      sub_1BFFC8784(v5, v4, v6);
      uint64_t v14 = sub_1C00B857C((uint64_t)&unk_1F1B66410);
      sub_1C0F49260(v5, v13, v14, 0);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFFC879C(v5, v13, v6);
      if (v2) {
        return result;
      }
    }
    else
    {
      uint64_t result = sub_1BFFC879C(v5, v4, v6);
    }
  }
  if (v8 != 255)
  {
    if (v8)
    {
      sub_1BFFC8784(v23, v7, v8);
      uint64_t v15 = sub_1C00B857C((uint64_t)&unk_1F1B66438);
      sub_1C0F49260(v23, v7, v15, 0);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFFC879C(v23, v7, v8);
      if (v2) {
        return result;
      }
    }
    else
    {
      uint64_t result = sub_1BFFC879C(v23, v7, v8);
    }
  }
  if (v24 != 255)
  {
    if (v24)
    {
      sub_1BFFC8784(v22, v21, v24);
      uint64_t v18 = sub_1C00B857C((uint64_t)&unk_1F1B66460);
      sub_1C0F49260(v22, v21, v18, 0);
      swift_bridgeObjectRelease();
      uint64_t v16 = v22;
      uint64_t v17 = v21;
    }
    else
    {
      uint64_t v17 = v21;
      uint64_t v16 = v22;
    }
    return sub_1BFFC879C(v16, v17, v24);
  }
  return result;
}

uint64_t sub_1C05C52C8(uint64_t a1)
{
  return sub_1C05B6B54(a1);
}

uint64_t sub_1C05C52EC(uint64_t a1)
{
  return sub_1C05B918C(a1);
}

uint64_t sub_1C05C5304(uint64_t a1)
{
  return sub_1C05B8738(a1);
}

uint64_t sub_1C05C5328(uint64_t a1)
{
  return sub_1C05C55C4(a1);
}

uint64_t sub_1C05C5340(uint64_t a1)
{
  return sub_1C05B9520(a1);
}

uint64_t sub_1C05C5358(uint64_t result)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v1 + 24))
  {
    if ((v5 & 1) == 0) {
      return result;
    }
    sub_1C0074D84(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), 1);
    uint64_t v6 = sub_1C00B857C((uint64_t)&unk_1F1B664D8);
    sub_1C0F49260(v4, v3, v6, 0);
    sub_1C0074DE4(v4, v3, v5, 1);
  }
  else
  {
    v8[0] = *(void *)v1;
    v8[1] = v3;
    v8[2] = v5;
    char v9 = 0;
    sub_1C0074D84(v4, v3, v5, 0);
    uint64_t result = sub_1C12ECBDC(v8, &v9);
    if (v2) {
      return result;
    }
    uint64_t v7 = result;
    swift_bridgeObjectRetain();
    sub_1C0F49260(v4, v3, v7, 0);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05C5488(uint64_t a1)
{
  return sub_1C05C5358(a1);
}

void sub_1C05C54A0(unint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  int v7 = *(unsigned __int8 *)(v1 + 48);
  sub_1C059E410(a1);
  if (!v2)
  {
    sub_1C05BC738(a1);
    if (v4) {
      sub_1C05AE364(a1);
    }
    if (v7)
    {
      sub_1BFE94AB4(v5, v6, 1);
      uint64_t v8 = sub_1C00B857C((uint64_t)&unk_1F1B665A0);
      sub_1C0F49260(v5, v6, v8, 0);
      swift_bridgeObjectRelease();
      sub_1BFE94AD4(v5, v6, 1);
    }
  }
}

void sub_1C05C55A0(unint64_t a1)
{
}

uint64_t sub_1C05C55C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  int v7 = *(unsigned __int8 *)(v1 + 144);
  uint64_t v8 = *(void *)(v1 + 152);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    if (v4)
    {
      int v14 = v7;
      uint64_t v10 = *(void *)(v4 + 16);
      if (v10)
      {
        uint64_t v13 = v8;
        swift_bridgeObjectRetain_n();
        uint64_t v11 = (unsigned char *)(v4 + 40);
        do
        {
          if ((*v11 & 1) == 0)
          {
            uint64_t v12 = *((void *)v11 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v12, 0);
            sub_1BFF49984(v12, 0);
          }
          v11 += 16;
          --v10;
        }
        while (v10);
        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v8 = v13;
      }
      int v7 = v14;
    }
    if ((~v5 & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2350(a1);
    }
    if (v6) {
      uint64_t result = sub_1C05529C4(a1, v6);
    }
    if (v7 != 254) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if ((~v8 & 0xF000000000000007) != 0) {
      return sub_1C05A2814(a1);
    }
  }
  return result;
}

void sub_1C05C5770(unint64_t a1)
{
}

uint64_t sub_1C05C5788(uint64_t a1)
{
  return sub_1C05C5024(a1);
}

unint64_t sub_1C05C57A0(uint64_t a1)
{
  return sub_1C05B6294(a1);
}

uint64_t sub_1C05C57C4(uint64_t a1)
{
  return sub_1C05B84E8(a1);
}

uint64_t sub_1C05C57E8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  int v6 = *(unsigned __int8 *)(v1 + 136);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t result = sub_1C11C4648(a1);
  if (!v2)
  {
    if ((~v5 & 0xF000000000000007) != 0) {
      uint64_t result = sub_1C05A2350(a1);
    }
    if (v4) {
      uint64_t result = sub_1C05529C4(a1, v4);
    }
    if (v6 != 254) {
      uint64_t result = sub_1C05A2814(a1);
    }
    if (v7)
    {
      uint64_t v9 = *(void *)(v7 + 16);
      if (v9)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v10 = (unsigned char *)(v7 + 40);
        do
        {
          if ((*v10 & 1) == 0)
          {
            uint64_t v11 = *((void *)v10 - 1);
            swift_retain_n();
            sub_1C02D349C(a1);
            sub_1BFF49984(v11, 0);
            sub_1BFF49984(v11, 0);
          }
          v10 += 16;
          --v9;
        }
        while (v9);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1C05C5944(uint64_t a1)
{
  return sub_1C05C57E8(a1);
}

uint64_t sub_1C05C595C(uint64_t result)
{
  if (*v1 >> 62 == 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = *v1 & 0x3FFFFFFFFFFFFFFFLL;
    unint64_t v4 = *(void *)(v3 + 0x10);
    uint64_t v5 = *(void *)(v3 + 24);
    sub_1BFE6FA30(*(void *)(v3 + 16));
    swift_bridgeObjectRetain();
    sub_1C05A1AE0(v2, v4, v5);
    sub_1BFF0056C(v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C05C59DC(uint64_t a1)
{
}

uint64_t sub_1C05C5A18(uint64_t a1)
{
  return sub_1C05ACA48(a1);
}

uint64_t sub_1C05C5A30(uint64_t result)
{
  uint64_t v3 = result;
  uint64_t v4 = *v1;
  unint64_t v5 = (unint64_t)*v1 >> 62;
  if (v5)
  {
    if (v5 != 1)
    {
      uint64_t v6 = v4 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v8 = *(void *)(v6 + 16);
      uint64_t v7 = *(void *)(v6 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05A1E20(v3, v8, v7);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else if (*(unsigned char *)(v4 + 40))
  {
    uint64_t v10 = *(void *)(v4 + 24);
    uint64_t v9 = *(void *)(v4 + 32);
    uint64_t v11 = *(void *)(v4 + 16);
    v14[0] = v11;
    v14[1] = v10;
    v14[2] = v9;
    char v13 = 6;
    sub_1C05DD1B4(v11, v10, v9, 1);
    uint64_t result = sub_1C12ECBDC(v14, &v13);
    if (!v2)
    {
      uint64_t v12 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v11, v10, v12, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unint64_t sub_1C05C5B50(uint64_t a1)
{
  return sub_1C05B6860(a1);
}

uint64_t sub_1C05C5B74(uint64_t a1)
{
  return sub_1C05C5A30(a1);
}

uint64_t sub_1C05C5B8C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 96);
  swift_bridgeObjectRetain();
  sub_1C0554E9C(a1, v4);
  return swift_bridgeObjectRelease();
}

void sub_1C05C5C04(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05C5C48(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a2;
  sub_1BFF8449C(a1, a2);
  if (!v5)
  {
    uint64_t v10 = *(void *)(a4 + 16);
    if (v10)
    {
      uint64_t v17 = v8;
      uint64_t v16 = a5;
      swift_bridgeObjectRetain();
      uint64_t v11 = (void *)(a4 + 56);
      do
      {
        uint64_t v12 = *(v11 - 3);
        uint64_t v13 = *(v11 - 2);
        char v14 = *((unsigned char *)v11 - 8);
        uint64_t v15 = *v11;
        sub_1BFF5B7E0(v12, v13, v14);
        swift_retain_n();
        sub_1C05CF6A8(a1, v17, v15);
        v11 += 4;
        swift_release();
        sub_1BFF5B7CC(v12, v13, v14);
        swift_release();
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      a5 = v16;
      uint64_t v8 = v17;
    }
    swift_retain();
    sub_1C05CF6A8(a1, v8, a5);
    swift_release();
  }
}

void sub_1C05C5DBC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFF8449C(a1, a2);
  if (!v4)
  {
    sub_1C0007F58(a1, a2, a4);
    sub_1BFE2FB6C(a1, a2);
  }
}

void sub_1C05C5E4C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v14 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = a2[12];
  uint64_t v18 = *(void *)(*(void *)v2 + 32);
  __int16 v19 = *(_WORD *)(*(void *)v2 + 40);
  long long v45 = *(_OWORD *)(*(void *)v2 + 16);
  uint64_t v46 = v18;
  __int16 v47 = v19;
  uint64_t v31 = v4;
  char v23 = v5;
  char v32 = v5;
  char v33 = v6;
  uint64_t v34 = v8;
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  uint64_t v37 = v10;
  uint64_t v38 = v12;
  uint64_t v39 = v11;
  uint64_t v28 = v13;
  uint64_t v29 = v11;
  uint64_t v40 = v13;
  uint64_t v41 = v14;
  uint64_t v26 = v15;
  uint64_t v27 = v14;
  uint64_t v42 = v15;
  uint64_t v43 = v16;
  uint64_t v24 = v17;
  uint64_t v25 = v16;
  uint64_t v44 = v17;
  uint64_t v48 = a1;
  sub_1BFF8449C(a1, (uint64_t)&v31);
  if (!v3)
  {
    uint64_t v20 = *(void *)(v30 + 8);
    uint64_t v31 = v4;
    char v32 = v23;
    char v33 = v6;
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    uint64_t v36 = v9;
    uint64_t v37 = v10;
    uint64_t v38 = v12;
    uint64_t v39 = v29;
    uint64_t v40 = v28;
    uint64_t v41 = v27;
    uint64_t v42 = v26;
    uint64_t v43 = v25;
    uint64_t v44 = v24;
    uint64_t v21 = type metadata accessor for FormatCommandValue.CaseValue();
    sub_1C14F458C((uint64_t)v48, (uint64_t)&v31, v20, v21, (uint64_t)&off_1F1BAC390);
    uint64_t v31 = v4;
    char v32 = v23;
    char v33 = v6;
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    uint64_t v36 = v9;
    uint64_t v37 = v10;
    uint64_t v38 = v12;
    uint64_t v39 = v29;
    uint64_t v40 = v28;
    uint64_t v41 = v27;
    uint64_t v42 = v26;
    uint64_t v43 = v25;
    uint64_t v44 = v24;
    uint64_t v22 = type metadata accessor for FormatCommandValue.DefaultValue();
    sub_1C05C65E8((uint64_t)v48, (uint64_t)&v31, v22);
  }
}

uint64_t sub_1C05C6024(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v3;
  uint64_t v14 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *v2;
  unint64_t v7 = (unint64_t)*v2 >> 62;
  v13[2] = *(_OWORD *)(a2 + 32);
  uint64_t v13[3] = v5;
  if (v7 == 1)
  {
    uint64_t v8 = (unint64_t *)result;
    uint64_t v9 = (void *)(v6 & 0x3FFFFFFFFFFFFFFFLL);
    uint64_t v10 = v9[2];
    uint64_t v11 = v9[3];
    unint64_t v12 = v9[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BFFA2240(v8, v13, v10, v11, v12);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C05C60F4(uint64_t result, uint64_t a2)
{
  uint64_t v4 = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v5;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v7;
  if ((*v2 & 0x8000000000000000) != 0)
  {
    uint64_t v8 = result;
    uint64_t v9 = *(void *)(*(void *)((*v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 24);
    swift_retain();
    sub_1C113787C(v8, (uint64_t)v10, v9);
    if (!v4) {
      sub_1C05C60F4(v8, v10);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C05C61AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v3;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  char v8 = *((unsigned char *)a2 + 9);
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = a2[12];
  uint64_t v19 = *(void *)(v2 + 24);
  uint64_t v31 = a2[4];
  uint64_t v32 = *a2;
  char v33 = v7;
  char v34 = v8;
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  uint64_t v37 = v31;
  uint64_t v38 = v11;
  uint64_t v29 = v12;
  uint64_t v30 = v11;
  uint64_t v39 = v12;
  uint64_t v40 = v13;
  uint64_t v27 = v14;
  uint64_t v28 = v13;
  uint64_t v41 = v14;
  uint64_t v42 = v15;
  uint64_t v25 = v16;
  uint64_t v26 = v15;
  uint64_t v43 = v16;
  uint64_t v44 = v17;
  uint64_t v23 = v18;
  uint64_t v24 = v17;
  uint64_t v45 = v18;
  uint64_t v20 = type metadata accessor for FormatCommandActionValue.CaseValue();
  uint64_t v46 = a1;
  uint64_t result = sub_1C14F458C(a1, (uint64_t)&v32, v19, v20, (uint64_t)&off_1F1BAC3B0);
  if (!v4)
  {
    uint64_t v32 = v6;
    char v33 = v7;
    char v34 = v8;
    uint64_t v35 = v9;
    uint64_t v36 = v10;
    uint64_t v37 = v31;
    uint64_t v38 = v30;
    uint64_t v39 = v29;
    uint64_t v40 = v28;
    uint64_t v41 = v27;
    uint64_t v42 = v26;
    uint64_t v43 = v25;
    uint64_t v44 = v24;
    uint64_t v45 = v23;
    uint64_t v22 = type metadata accessor for FormatCommandActionValue.DefaultValue();
    return sub_1C05C65E8(v46, (uint64_t)&v32, v22);
  }
  return result;
}

uint64_t sub_1C05C6330(uint64_t a1, uint64_t a2)
{
  return sub_1C05C60F4(a1, a2);
}

void sub_1C05C6364(unint64_t *a1, uint64_t *a2)
{
}

unint64_t sub_1C05C6388(unint64_t a1, uint64_t a2)
{
  return sub_1BFF0DDEC(a1, a2);
}

void sub_1C05C63FC(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05C6488(uint64_t a1, uint64_t *a2)
{
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v7 = *v2;
  uint64_t v12 = *a2;
  char v13 = v4;
  char v14 = v5;
  long long v8 = *((_OWORD *)a2 + 2);
  long long v15 = *((_OWORD *)a2 + 1);
  long long v16 = v8;
  long long v9 = *((_OWORD *)a2 + 4);
  long long v17 = *((_OWORD *)a2 + 3);
  long long v18 = v9;
  long long v19 = *((_OWORD *)a2 + 5);
  uint64_t v20 = v6;
  uint64_t v10 = type metadata accessor for FormatEquationToken();
  return sub_1C14F458C(a1, (uint64_t)&v12, v7, v10, (uint64_t)&off_1F1BAB4B0);
}

uint64_t sub_1C05C652C(uint64_t a1, uint64_t *a2)
{
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v7 = *v2;
  uint64_t v12 = *a2;
  char v13 = v4;
  char v14 = v5;
  long long v8 = *((_OWORD *)a2 + 2);
  long long v15 = *((_OWORD *)a2 + 1);
  long long v16 = v8;
  long long v9 = *((_OWORD *)a2 + 4);
  long long v17 = *((_OWORD *)a2 + 3);
  long long v18 = v9;
  long long v19 = *((_OWORD *)a2 + 5);
  uint64_t v20 = v6;
  uint64_t v10 = type metadata accessor for FormatSwitchListValue.CaseValue();
  return sub_1C14F458C(a1, (uint64_t)&v12, v7, v10, (uint64_t)&off_1F1BAC330);
}

uint64_t sub_1C05C65D0(uint64_t a1, uint64_t a2)
{
  return sub_1BFF0D378(a1, a2);
}

uint64_t sub_1C05C65E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v3 = *(void *)(a3 + 16);
  __n128 v4 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = *v6;
  char v8 = *((unsigned char *)v6 + 8);
  char v9 = *((unsigned char *)v6 + 9);
  uint64_t v10 = v6[2];
  uint64_t v11 = v6[3];
  uint64_t v13 = v6[4];
  uint64_t v12 = v6[5];
  uint64_t v26 = v6[6];
  uint64_t v27 = v12;
  uint64_t v25 = v6[7];
  uint64_t v24 = v6[8];
  uint64_t v23 = v6[9];
  uint64_t v22 = v6[10];
  uint64_t v21 = v6[11];
  uint64_t v20 = v6[12];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v3, v4);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v16 = *((void *)&v43 + 1);
    uint64_t v17 = v44;
    __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
    uint64_t v28 = v7;
    char v29 = v8;
    char v30 = v9;
    uint64_t v31 = v10;
    uint64_t v32 = v11;
    uint64_t v33 = v13;
    uint64_t v34 = v27;
    uint64_t v35 = v26;
    uint64_t v36 = v25;
    uint64_t v37 = v24;
    uint64_t v38 = v23;
    uint64_t v39 = v22;
    uint64_t v40 = v21;
    uint64_t v41 = v20;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v17 + 8))(v45, &v28, v16, v17);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  }
  else
  {
    uint64_t v44 = 0;
    long long v42 = 0u;
    long long v43 = 0u;
    return sub_1BFE4D118((uint64_t)&v42, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

uint64_t sub_1C05C6830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C65E8(a1, a2, a3);
}

uint64_t sub_1C05C6884(uint64_t a1, uint64_t *a2)
{
  return sub_1C05D6744(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_1BFF0C6A0);
}

uint64_t sub_1C05C68B0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  v17[5] = v4;
  uint64_t v18 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 62;
  v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v6;
  if (v8)
  {
    if (v8 == 1)
    {
      swift_retain();
      sub_1C002F4A8();
    }
    else
    {
      uint64_t v10 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)(v10 + 16);
      swift_retain();
      sub_1C0000E48(a1, (uint64_t)v17, v11);
      if (!v3)
      {
        uint64_t v12 = MEMORY[0x1E4FBB718];
        sub_1C05DC640(v10 + 24, (uint64_t)v14, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
        sub_1C05DC640((uint64_t)v14, (uint64_t)v15, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, v12, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
        if (sub_1C00F6584(v15) != 1 && (v16 & 1) == 0) {
          sub_1C006F0EC(v15[10], v15[11], v15[12], v15[13], v16);
        }
      }
    }
  }
  else
  {
    swift_retain();
    sub_1C05C6A24();
  }
  return swift_release();
}

void sub_1C05C6A24()
{
  if (*(unsigned char *)(v0 + 64) != 4 || v1 == 0)
  {
    uint64_t v3 = MEMORY[0x1E4FBB718];
    sub_1C05DC640(v0 + 120, (uint64_t)v4, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    sub_1C05DC640((uint64_t)v4, (uint64_t)v5, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, v3, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    if (sub_1C00F6584(v5) != 1 && (v6 & 1) == 0) {
      sub_1C006F0EC(v5[10], v5[11], v5[12], v5[13], v6);
    }
  }
}

uint64_t sub_1C05C6B34(uint64_t a1, uint64_t a2)
{
  return sub_1C05C68B0(a1, a2);
}

uint64_t sub_1C05C6B4C()
{
  if ((*(unsigned char *)(v0 + 112) & 1) == 0) {
    return sub_1C006F0EC(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  }
  return result;
}

void sub_1C05C6B84()
{
}

uint64_t sub_1C05C6BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  long long v5 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v5;
  uint64_t v13 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v7;
  uint64_t result = sub_1C0000E48(a1, (uint64_t)v12, *(void *)(v4 + 16));
  if (!v3)
  {
    uint64_t v9 = MEMORY[0x1E4FBB718];
    sub_1C05DC640(v4 + 24, (uint64_t)v10, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    sub_1C05DC640((uint64_t)v10, (uint64_t)&v11, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, v9, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    uint64_t result = sub_1C00F6584((uint64_t *)&v11);
    if (result != 1) {
      return sub_1C05C6B4C();
    }
  }
  return result;
}

uint64_t sub_1C05C6CD4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v50 = a1;
  uint64_t v56 = a3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_1C151FD8C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - v11;
  __n128 v14 = MEMORY[0x1F4188790](v13);
  unsigned __int8 v16 = (char *)&v36 - v15;
  uint64_t v49 = *a2;
  int v52 = *((unsigned __int8 *)a2 + 8);
  int v48 = *((unsigned __int8 *)a2 + 9);
  uint64_t v47 = a2[2];
  uint64_t v46 = a2[3];
  uint64_t v45 = a2[4];
  uint64_t v44 = a2[5];
  uint64_t v43 = a2[6];
  uint64_t v42 = a2[7];
  uint64_t v41 = a2[8];
  uint64_t v40 = a2[9];
  uint64_t v39 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = a2[12];
  uint64_t v38 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v74 = v4;
  uint64_t v55 = v19;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v19)((char *)&v36 - v15, v4, v7, v14);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  int v21 = v20(v16, 1, v6);
  uint64_t v53 = v8;
  uint64_t v37 = v18;
  if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
LABEL_7:
    uint64_t v73 = 0;
    long long v71 = 0u;
    long long v72 = 0u;
    uint64_t v23 = v51;
    goto LABEL_8;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (!swift_dynamicCast()) {
    goto LABEL_7;
  }
  uint64_t v22 = *((void *)&v72 + 1);
  uint64_t v23 = v51;
  if (!*((void *)&v72 + 1))
  {
LABEL_8:
    sub_1BFE4D118((uint64_t)&v71, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
    goto LABEL_9;
  }
  uint64_t v24 = v73;
  __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
  uint64_t v57 = v49;
  char v58 = v52;
  char v59 = v48;
  uint64_t v60 = v47;
  uint64_t v61 = v46;
  uint64_t v62 = v45;
  uint64_t v63 = v44;
  uint64_t v64 = v43;
  uint64_t v65 = v42;
  uint64_t v66 = v41;
  uint64_t v67 = v40;
  uint64_t v68 = v39;
  uint64_t v69 = v38;
  uint64_t v70 = v37;
  uint64_t v25 = v54;
  (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 8))(v50, &v57, v22, v24);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
  uint64_t v54 = v25;
  if (v25) {
    return result;
  }
  uint64_t v23 = v51;
LABEL_9:
  uint64_t v27 = v53;
  v55(v12, v74 + *(int *)(v56 + 36), v7);
  if (v20(v12, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v7);
LABEL_15:
    uint64_t v73 = 0;
    long long v71 = 0u;
    long long v72 = 0u;
    char v29 = v52;
    goto LABEL_16;
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (!swift_dynamicCast()) {
    goto LABEL_15;
  }
  uint64_t v28 = *((void *)&v72 + 1);
  char v29 = v52;
  if (!*((void *)&v72 + 1))
  {
LABEL_16:
    sub_1BFE4D118((uint64_t)&v71, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
    uint64_t v33 = v50;
    goto LABEL_17;
  }
  uint64_t v30 = v73;
  __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
  uint64_t v57 = v49;
  char v58 = v29;
  char v59 = v48;
  uint64_t v60 = v47;
  uint64_t v61 = v46;
  uint64_t v62 = v45;
  uint64_t v63 = v44;
  uint64_t v64 = v43;
  uint64_t v65 = v42;
  uint64_t v66 = v41;
  uint64_t v67 = v40;
  uint64_t v68 = v39;
  uint64_t v69 = v38;
  uint64_t v70 = v37;
  uint64_t v31 = v50;
  uint64_t v32 = v54;
  (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v30 + 8))(v50, &v57, v28, v30);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
  uint64_t v54 = v32;
  if (v32) {
    return result;
  }
  uint64_t v33 = v31;
  char v29 = v52;
  uint64_t v23 = v51;
LABEL_17:
  v55(v23, v74 + *(int *)(v56 + 40), v7);
  if (v20(v23, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v7);
LABEL_22:
    uint64_t v73 = 0;
    long long v71 = 0u;
    long long v72 = 0u;
    return sub_1BFE4D118((uint64_t)&v71, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (!swift_dynamicCast()) {
    goto LABEL_22;
  }
  uint64_t v34 = *((void *)&v72 + 1);
  if (*((void *)&v72 + 1))
  {
    uint64_t v35 = v73;
    __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
    uint64_t v57 = v49;
    char v58 = v29;
    char v59 = v48;
    uint64_t v60 = v47;
    uint64_t v61 = v46;
    uint64_t v62 = v45;
    uint64_t v63 = v44;
    uint64_t v64 = v43;
    uint64_t v65 = v42;
    uint64_t v66 = v41;
    uint64_t v67 = v40;
    uint64_t v68 = v39;
    uint64_t v69 = v38;
    uint64_t v70 = v37;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v35 + 8))(v33, &v57, v34, v35);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
  }
  return sub_1BFE4D118((uint64_t)&v71, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
}

uint64_t sub_1C05C7430(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1C05C74D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C05C6CD4(a1, a2, a3);
}

void sub_1C05C74F0()
{
}

uint64_t sub_1C05C7514(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(a2 + 80);
  v14[4] = *(_OWORD *)(a2 + 64);
  v14[5] = v5;
  uint64_t v15 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  uint64_t v14[3] = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 72);
  if (!v8
    || (swift_bridgeObjectRetain(), sub_1C0000E48(a1, (uint64_t)v14, v8), uint64_t result = swift_bridgeObjectRelease(), !v3))
  {
    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v2 + 88);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = (uint64_t *)(v10 + 72); ; i += 7)
      {
        uint64_t v13 = *i;
        if (*i)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C0000E48(a1, (uint64_t)v14, v13);
          if (v3)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (!--v11) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05C767C(uint64_t a1, uint64_t a2)
{
  return sub_1C05C7514(a1, a2);
}

uint64_t sub_1C05C76A0(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  uint64_t v6 = *(void *)(v2 + 40);
  if (v6) {
    return sub_1C0000E48(result, (uint64_t)v7, v6);
  }
  return result;
}

void sub_1C05C76EC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 == 1 && (a4 & 0xF000000000000007) != 0xF000000000000007) {
    sub_1BFE2F328(a1, a2);
  }
}

uint64_t sub_1C05C7734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05D4634(a1, a2, a3);
}

void sub_1C05C7798(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v18 = *v2;
  uint64_t v17 = v2[1];
  uint64_t v20 = v2[2];
  uint64_t v19 = v2[3];
  unsigned int v21 = *((unsigned __int8 *)v2 + 40);
  uint64_t v22 = v2[4];
  switch((v21 >> 1) & 0xF)
  {
    case 2u:
      uint64_t v37 = v18;
      uint64_t v38 = v17;
      uint64_t v39 = v20;
      uint64_t v40 = v19;
      uint64_t v41 = v22;
      char v42 = v21 & 0xE1;
      uint64_t v23 = v3;
      char v24 = v4;
      char v25 = v5;
      uint64_t v26 = v7;
      uint64_t v27 = v6;
      uint64_t v28 = v8;
      uint64_t v29 = v9;
      uint64_t v30 = v11;
      uint64_t v31 = v10;
      uint64_t v32 = v13;
      uint64_t v33 = v12;
      uint64_t v34 = v15;
      uint64_t v35 = v14;
      uint64_t v36 = v16;
      sub_1C002603C(a1, (uint64_t)&v23);
      break;
    case 3u:
      uint64_t v37 = v18;
      uint64_t v38 = v17;
      uint64_t v39 = v20;
      uint64_t v40 = v19;
      uint64_t v23 = v3;
      char v24 = v4;
      char v25 = v5;
      uint64_t v26 = v7;
      uint64_t v27 = v6;
      uint64_t v28 = v8;
      uint64_t v29 = v9;
      uint64_t v30 = v11;
      uint64_t v31 = v10;
      uint64_t v32 = v13;
      uint64_t v33 = v12;
      uint64_t v34 = v15;
      uint64_t v35 = v14;
      uint64_t v36 = v16;
      sub_1C003030C(a1, &v23);
      break;
    case 8u:
      uint64_t v37 = v18;
      uint64_t v38 = v17;
      uint64_t v39 = v20;
      uint64_t v40 = v19;
      uint64_t v41 = v22;
      char v42 = v21 & 1;
      uint64_t v23 = v3;
      char v24 = v4;
      char v25 = v5;
      uint64_t v26 = v7;
      uint64_t v27 = v6;
      uint64_t v28 = v8;
      uint64_t v29 = v9;
      uint64_t v30 = v11;
      uint64_t v31 = v10;
      uint64_t v32 = v13;
      uint64_t v33 = v12;
      uint64_t v34 = v15;
      uint64_t v35 = v14;
      uint64_t v36 = v16;
      sub_1C05CC5B0(a1, (uint64_t)&v23);
      break;
    default:
      return;
  }
}

uint64_t sub_1C05C7914(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v3;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 9);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v14 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = a2[12];
  uint64_t v18 = *v2;
  uint64_t v19 = a2[2];
  char v23 = *((unsigned char *)a2 + 8);
  char v34 = v23;
  char v35 = v7;
  uint64_t v36 = v19;
  uint64_t v37 = v8;
  uint64_t v31 = v9;
  uint64_t v32 = v8;
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  uint64_t v29 = v11;
  uint64_t v30 = v10;
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v12;
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  uint64_t v25 = v15;
  uint64_t v26 = v14;
  uint64_t v44 = v15;
  uint64_t v45 = v16;
  uint64_t v24 = v16;
  uint64_t v46 = v17;
  uint64_t v20 = type metadata accessor for FormatSwitchValue.CaseValue();
  uint64_t v47 = a1;
  uint64_t result = sub_1C14F458C(a1, (uint64_t)&v33, v18, v20, (uint64_t)&off_1F1BAC320);
  if (!v4)
  {
    uint64_t v33 = v6;
    char v34 = v23;
    char v35 = v7;
    uint64_t v36 = v19;
    uint64_t v37 = v32;
    uint64_t v38 = v31;
    uint64_t v39 = v30;
    uint64_t v40 = v29;
    uint64_t v41 = v28;
    uint64_t v42 = v27;
    uint64_t v43 = v26;
    uint64_t v44 = v25;
    uint64_t v45 = v24;
    uint64_t v46 = v17;
    uint64_t v22 = type metadata accessor for FormatSwitchValue.DefaultValue();
    return sub_1C05C65E8(v47, (uint64_t)&v33, v22);
  }
  return result;
}

uint64_t sub_1C05C7A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a1;
  uint64_t v32 = a3;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = *v9;
  int v11 = *((unsigned __int8 *)v9 + 8);
  int v43 = *((unsigned __int8 *)v9 + 9);
  uint64_t v12 = v9[2];
  uint64_t v41 = v9[3];
  uint64_t v42 = v12;
  uint64_t v40 = v9[4];
  uint64_t v34 = v9[5];
  uint64_t v39 = v9[6];
  uint64_t v38 = v9[7];
  uint64_t v35 = v9[8];
  uint64_t v37 = v9[9];
  uint64_t v13 = v9[11];
  uint64_t v36 = v9[10];
  uint64_t v14 = v9[12];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v33 = v17;
  uint64_t v30 = v15;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v15)((char *)&v25 - v16, v17, v4, v8);
  uint64_t v29 = sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v28 = v3;
    uint64_t v18 = *((void *)&v59 + 1);
    uint64_t v19 = v60;
    __swift_project_boxed_opaque_existential_1(&v58, *((uint64_t *)&v59 + 1));
    uint64_t v25 = v10;
    uint64_t v44 = v10;
    int v26 = v11;
    char v45 = v11;
    char v46 = v43;
    uint64_t v47 = v42;
    uint64_t v48 = v41;
    uint64_t v49 = v40;
    uint64_t v50 = v34;
    uint64_t v51 = v39;
    uint64_t v52 = v38;
    uint64_t v53 = v35;
    uint64_t v54 = v37;
    uint64_t v55 = v36;
    uint64_t v56 = v13;
    uint64_t v57 = v14;
    uint64_t v20 = v28;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v19 + 8))(v61, &v44, v18, v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    if (v20) {
      return result;
    }
    uint64_t v27 = v14;
    uint64_t v28 = v13;
    LOBYTE(v11) = v26;
    uint64_t v10 = v25;
  }
  else
  {
    uint64_t v27 = v14;
    uint64_t v28 = v13;
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    sub_1BFE4D118((uint64_t)&v58, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
  v30(v31, v33 + *(int *)(v32 + 36), v4);
  if (swift_dynamicCast())
  {
    uint64_t v22 = v10;
    uint64_t v23 = *((void *)&v59 + 1);
    uint64_t v24 = v60;
    __swift_project_boxed_opaque_existential_1(&v58, *((uint64_t *)&v59 + 1));
    uint64_t v44 = v22;
    char v45 = v11;
    char v46 = v43;
    uint64_t v47 = v42;
    uint64_t v48 = v41;
    uint64_t v49 = v40;
    uint64_t v50 = v34;
    uint64_t v51 = v39;
    uint64_t v52 = v38;
    uint64_t v53 = v35;
    uint64_t v54 = v37;
    uint64_t v55 = v36;
    uint64_t v56 = v28;
    uint64_t v57 = v27;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 8))(v61, &v44, v23, v24);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  }
  else
  {
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    return sub_1BFE4D118((uint64_t)&v58, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

void sub_1C05C7EF8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v22 = a2[8];
  uint64_t v38 = *v2;
  uint64_t v24 = v4;
  char v17 = v5;
  char v25 = v5;
  char v26 = v6;
  uint64_t v27 = v7;
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  uint64_t v31 = v12;
  uint64_t v32 = v11;
  uint64_t v33 = v22;
  uint64_t v34 = v13;
  uint64_t v20 = v14;
  uint64_t v21 = v13;
  uint64_t v35 = v14;
  uint64_t v36 = v15;
  uint64_t v18 = v16;
  uint64_t v19 = v15;
  uint64_t v37 = v16;
  sub_1BFF5B7F4(a1, (uint64_t)&v24);
  if (!v3)
  {
    uint64_t v24 = v4;
    char v25 = v17;
    char v26 = v6;
    uint64_t v27 = v7;
    uint64_t v28 = v8;
    uint64_t v29 = v9;
    uint64_t v30 = v10;
    uint64_t v31 = v12;
    uint64_t v32 = v11;
    uint64_t v33 = v22;
    uint64_t v34 = v21;
    uint64_t v35 = v20;
    uint64_t v36 = v19;
    uint64_t v37 = v18;
    sub_1BFF42EB8((unint64_t)a1, (uint64_t)&v24);
  }
}

uint64_t sub_1C05C7FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a1;
  uint64_t v29 = a3;
  uint64_t v5 = *(void *)(a3 + 16);
  __n128 v6 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = *v8;
  int v10 = *((unsigned __int8 *)v8 + 8);
  int v11 = *((unsigned __int8 *)v8 + 9);
  uint64_t v12 = v8[2];
  uint64_t v30 = v8[3];
  uint64_t v31 = v8[4];
  uint64_t v13 = v8[5];
  uint64_t v37 = v8[6];
  uint64_t v38 = v13;
  uint64_t v36 = v8[7];
  uint64_t v35 = v8[8];
  uint64_t v34 = v8[9];
  uint64_t v33 = v8[10];
  uint64_t v14 = v8[12];
  uint64_t v32 = v8[11];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5, v6);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v27 = v3;
    uint64_t v28 = v4;
    uint64_t v17 = *((void *)&v54 + 1);
    uint64_t v16 = v55;
    __swift_project_boxed_opaque_existential_1(&v53, *((uint64_t *)&v54 + 1));
    uint64_t v23 = v9;
    uint64_t v39 = v9;
    int v26 = v10;
    char v40 = v10;
    int v25 = v11;
    char v41 = v11;
    uint64_t v24 = v12;
    uint64_t v42 = v12;
    uint64_t v43 = v30;
    uint64_t v44 = v31;
    uint64_t v45 = v38;
    uint64_t v46 = v37;
    uint64_t v47 = v36;
    uint64_t v48 = v35;
    uint64_t v49 = v34;
    uint64_t v50 = v33;
    uint64_t v51 = v32;
    uint64_t v52 = v14;
    uint64_t v18 = v28;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v16 + 8))(v56, &v39, v17, v16);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    if (v18) {
      return result;
    }
    LOBYTE(v10) = v26;
    uint64_t v28 = v14;
    uint64_t v20 = v30;
    LOBYTE(v11) = v25;
    uint64_t v9 = v23;
    uint64_t v12 = v24;
  }
  else
  {
    uint64_t v28 = v14;
    uint64_t v20 = v30;
    uint64_t v55 = 0;
    long long v53 = 0u;
    long long v54 = 0u;
    sub_1BFE4D118((uint64_t)&v53, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
  uint64_t v21 = sub_1BFE3177C(v29);
  uint64_t v39 = v9;
  char v40 = v10;
  char v41 = v11;
  uint64_t v42 = v12;
  uint64_t v43 = v20;
  uint64_t v44 = v31;
  uint64_t v45 = v38;
  uint64_t v46 = v37;
  uint64_t v47 = v36;
  uint64_t v48 = v35;
  uint64_t v49 = v34;
  uint64_t v50 = v33;
  uint64_t v51 = v32;
  uint64_t v52 = v28;
  uint64_t v22 = type metadata accessor for FormatSelectorValueSelector();
  swift_bridgeObjectRetain();
  sub_1C14F458C(v56, (uint64_t)&v39, v21, v22, (uint64_t)&off_1F1BABCA0);
  return swift_bridgeObjectRelease();
}

void sub_1C05C8390(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05C83A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v34 = a1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *a2;
  int v32 = *((unsigned __int8 *)a2 + 8);
  int v31 = *((unsigned __int8 *)a2 + 9);
  uint64_t v30 = a2[2];
  uint64_t v29 = a2[3];
  uint64_t v28 = a2[4];
  uint64_t v27 = a2[5];
  uint64_t v26 = a2[6];
  uint64_t v25 = a2[7];
  uint64_t v24 = a2[8];
  uint64_t v23 = a2[9];
  uint64_t v9 = a2[11];
  uint64_t v22 = a2[10];
  uint64_t v10 = a2[12];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v19 = v2;
    uint64_t v20 = v6;
    swift_bridgeObjectRetain_n();
    uint64_t v21 = v11;
    uint64_t v13 = v11 + 48;
    while (1)
    {
      uint64_t v35 = *(void *)(v13 - 16);
      uint64_t v36 = v33;
      char v37 = v32;
      char v38 = v31;
      uint64_t v39 = v30;
      uint64_t v40 = v29;
      uint64_t v41 = v28;
      uint64_t v42 = v27;
      uint64_t v43 = v26;
      uint64_t v44 = v25;
      uint64_t v45 = v24;
      uint64_t v46 = v23;
      uint64_t v47 = v22;
      uint64_t v48 = v9;
      uint64_t v49 = v10;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(v34, (uint64_t)&v36);
      if (v3) {
        break;
      }
      v13 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v20;
        uint64_t v2 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    uint64_t result = *(void *)(v2 + 48);
    uint64_t v15 = *(void *)(result + 16);
    if (v15)
    {
      uint64_t v16 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v17 = *(void *)(v6 + 72);
      uint64_t v21 = *(void *)(v2 + 48);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFF83CC4(v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v50 = *((void *)v8 + 2);
        uint64_t v36 = v33;
        char v37 = v32;
        char v38 = v31;
        uint64_t v39 = v30;
        uint64_t v40 = v29;
        uint64_t v41 = v28;
        uint64_t v42 = v27;
        uint64_t v43 = v26;
        uint64_t v44 = v25;
        uint64_t v45 = v24;
        uint64_t v46 = v23;
        uint64_t v47 = v22;
        uint64_t v48 = v9;
        uint64_t v49 = v10;
        swift_retain();
        sub_1BFF2871C(v34, (uint64_t)&v36);
        if (v3) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v16 += v17;
        if (!--v15) {
          return swift_bridgeObjectRelease_n();
        }
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1C05C87EC(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05C83A8(a1, a2);
}

uint64_t sub_1C05C8874(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v13 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v17 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(v2 + 16);
  int v20 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v57 = *(void *)(v2 + 88);
  uint64_t v26 = *(void *)(v2 + 96);
  long long v28 = *(_OWORD *)(v2 + 120);
  long long v29 = *(_OWORD *)(v2 + 104);
  long long v27 = *(_OWORD *)(v2 + 136);
  int v37 = *(unsigned __int8 *)(v2 + 152);
  uint64_t v35 = v16;
  uint64_t v36 = v18;
  uint64_t v33 = v14;
  uint64_t v34 = v17;
  uint64_t v31 = v12;
  uint64_t v32 = v15;
  uint64_t v30 = v13;
  if (v20 == 1)
  {
    uint64_t v21 = *(void *)(v2 + 24);
    uint64_t v52 = v19;
    uint64_t v53 = v21;
    long long v22 = *(_OWORD *)(v2 + 48);
    long long v54 = *(_OWORD *)(v2 + 32);
    long long v23 = *(_OWORD *)(v2 + 64);
    long long v55 = v22;
    long long v56 = v23;
    uint64_t v38 = v5;
    char v39 = v6;
    char v40 = v7;
    uint64_t v41 = v9;
    uint64_t v42 = v8;
    uint64_t v43 = v11;
    uint64_t v44 = v10;
    uint64_t v45 = v13;
    uint64_t v46 = v12;
    uint64_t v47 = v15;
    uint64_t v48 = v14;
    uint64_t v49 = v17;
    uint64_t v50 = v16;
    uint64_t v51 = v18;
    uint64_t v24 = v10;
    uint64_t result = sub_1BFF7B500(a1, &v38);
    if (v3) {
      return result;
    }
  }
  else
  {
    uint64_t v52 = v19;
    uint64_t v38 = v5;
    char v39 = v6;
    char v40 = v7;
    uint64_t v41 = v9;
    uint64_t v42 = v8;
    uint64_t v43 = v11;
    uint64_t v44 = v10;
    uint64_t v45 = v13;
    uint64_t v46 = v12;
    uint64_t v47 = v15;
    uint64_t v48 = v14;
    uint64_t v49 = v17;
    uint64_t v50 = v16;
    uint64_t v51 = v18;
    uint64_t v24 = v10;
    uint64_t result = sub_1BFF79540(a1, (uint64_t)&v38);
    if (v3) {
      return result;
    }
  }
  if (v37)
  {
    uint64_t v52 = v57;
    uint64_t v53 = v26;
    long long v54 = v29;
    long long v55 = v28;
    long long v56 = v27;
    uint64_t v38 = v5;
    char v39 = v6;
    char v40 = v7;
    uint64_t v41 = v9;
    uint64_t v42 = v8;
    uint64_t v43 = v11;
    uint64_t v44 = v24;
    uint64_t v45 = v30;
    uint64_t v46 = v31;
    uint64_t v47 = v32;
    uint64_t v48 = v33;
    uint64_t v49 = v34;
    uint64_t v50 = v35;
    uint64_t v51 = v36;
    return sub_1BFF7B500(a1, &v38);
  }
  else
  {
    uint64_t v52 = v57;
    uint64_t v38 = v5;
    char v39 = v6;
    char v40 = v7;
    uint64_t v41 = v9;
    uint64_t v42 = v8;
    uint64_t v43 = v11;
    uint64_t v44 = v24;
    uint64_t v45 = v30;
    uint64_t v46 = v31;
    uint64_t v47 = v32;
    uint64_t v48 = v33;
    uint64_t v49 = v34;
    uint64_t v50 = v35;
    uint64_t v51 = v36;
    return sub_1BFF79540(a1, (uint64_t)&v38);
  }
}

void sub_1C05C8A70(unint64_t *a1, uint64_t *a2)
{
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v12 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = *v2;
  uint64_t v25 = v2[1];
  uint64_t v26 = *a2;
  uint64_t v40 = v17;
  uint64_t v23 = v26;
  char v21 = v5;
  char v22 = v4;
  char v27 = v4;
  char v28 = v5;
  uint64_t v19 = v7;
  uint64_t v20 = v6;
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  uint64_t v18 = v8;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v11;
  uint64_t v34 = v10;
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  sub_1BFF5B7F4(a1, (uint64_t)&v26);
  if (!v3)
  {
    if (v25)
    {
      uint64_t v26 = v23;
      char v27 = v22;
      char v28 = v21;
      uint64_t v29 = v20;
      uint64_t v30 = v19;
      uint64_t v31 = v18;
      uint64_t v32 = v9;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      uint64_t v35 = v12;
      uint64_t v36 = v13;
      uint64_t v37 = v14;
      uint64_t v38 = v15;
      uint64_t v39 = v16;
      sub_1BFF42EB8((unint64_t)a1, (uint64_t)&v26);
    }
  }
}

uint64_t sub_1C05C8B84(uint64_t a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v16[4] = *(_OWORD *)(a2 + 64);
  v16[5] = v6;
  uint64_t v17 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v16[2] = *(_OWORD *)(a2 + 32);
  v16[3] = v8;
  unint64_t v9 = *v2;
  sub_1C05DC640((uint64_t)(v2 + 1), (uint64_t)v18, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  if (v9 >> 62)
  {
    if (v9 >> 62 == 1)
    {
      uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      v14[0] = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C05CFE68(a1, a2);
      if (v3)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
      v14[0] = v10;
      sub_1C05CFE68(a1, a2);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v12 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      v14[0] = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C05CFE68(a1, a2);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_bridgeObjectRetain();
      sub_1C1141404(a1, v16, v13);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
  sub_1C05DC640((uint64_t)v18, (uint64_t)v14, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  uint64_t result = sub_1C00F6584(v14);
  if (result != 1 && (v15 & 1) == 0) {
    return sub_1C006F0EC(v14[10], v14[11], v14[12], v14[13], v15);
  }
  return result;
}

uint64_t sub_1C05C8E10(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF7ACAC(a1, a2);
}

uint64_t sub_1C05C8E28(uint64_t a1)
{
  return nullsub_1(a1);
}

void sub_1C05C8E84()
{
}

uint64_t sub_1C05C8E9C(uint64_t result, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v18 = v2[1];
  uint64_t v19 = v2[2];
  if (*v2 >> 62 != 1) {
    goto LABEL_3;
  }
  uint64_t v44 = *(void *)((*v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v30 = v4;
  char v31 = v5;
  char v32 = v6;
  uint64_t v33 = v8;
  uint64_t v34 = v7;
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  uint64_t v37 = v12;
  uint64_t v38 = v11;
  uint64_t v39 = v14;
  uint64_t v40 = v13;
  uint64_t v41 = v16;
  uint64_t v42 = v15;
  uint64_t v43 = v17;
  uint64_t v23 = v17;
  uint64_t v24 = v15;
  uint64_t v20 = result;
  char v27 = v6;
  uint64_t v25 = v7;
  uint64_t v26 = v13;
  char v21 = v18;
  uint64_t v22 = v19;
  uint64_t v18 = v9;
  uint64_t v28 = v11;
  uint64_t v29 = v10;
  sub_1BFFDD9B8(result, &v30);
  uint64_t v19 = v22;
  uint64_t v17 = v23;
  uint64_t v15 = v24;
  uint64_t v7 = v25;
  uint64_t v13 = v26;
  uint64_t v11 = v28;
  uint64_t v10 = v29;
  uint64_t v9 = v18;
  LOBYTE(v18) = v21;
  char v6 = v27;
  uint64_t result = v20;
  if (!v3)
  {
LABEL_3:
    if ((v18 & 0xFE) != 0xC && (v19 & 0xC000000000000000) == 0x4000000000000000)
    {
      uint64_t v44 = *(void *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v30 = v4;
      char v31 = v5;
      char v32 = v6;
      uint64_t v33 = v8;
      uint64_t v34 = v7;
      uint64_t v35 = v9;
      uint64_t v36 = v10;
      uint64_t v37 = v12;
      uint64_t v38 = v11;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v16;
      uint64_t v42 = v15;
      uint64_t v43 = v17;
      return sub_1BFFDD9B8(result, &v30);
    }
  }
  return result;
}

uint64_t sub_1C05C8FEC(uint64_t a1, uint64_t a2)
{
  return sub_1C05C8E9C(a1, a2);
}

uint64_t sub_1C05C9004(uint64_t result, uint64_t a2)
{
  if ((*v2 & 0xFELL) != 0xC)
  {
    uint64_t v3 = *(void *)(a2 + 96);
    char v4 = *(unsigned char *)(a2 + 9);
    char v5 = *(unsigned char *)(a2 + 8);
    uint64_t v6 = *(void *)a2;
    uint64_t v18 = v2[1];
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *(_OWORD *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 16);
    long long v13 = v7;
    long long v8 = *(_OWORD *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 48);
    long long v15 = v8;
    long long v16 = *(_OWORD *)(a2 + 80);
    uint64_t v17 = v3;
    return sub_1BFFDD9B8(result, &v9);
  }
  return result;
}

uint64_t sub_1C05C908C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(v2 + 8);
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 80);
  uint64_t v18 = v6;
  return sub_1BFFDD9B8(a1, &v10);
}

void sub_1C05C9170(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05C9188(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v7 = *((void *)v2 + 4);
  char v8 = *((unsigned char *)v2 + 40);
  long long v9 = v2[1];
  long long v21 = *v2;
  long long v22 = v9;
  uint64_t v23 = v7;
  char v24 = v8;
  uint64_t v12 = v3;
  char v13 = v4;
  char v14 = v5;
  long long v10 = *((_OWORD *)a2 + 2);
  long long v15 = *((_OWORD *)a2 + 1);
  long long v16 = v10;
  long long v11 = *((_OWORD *)a2 + 4);
  long long v17 = *((_OWORD *)a2 + 3);
  long long v18 = v11;
  long long v19 = *((_OWORD *)a2 + 5);
  uint64_t v20 = v6;
  sub_1C05C7798(a1, (uint64_t)&v12);
}

uint64_t sub_1C05C9230(unint64_t *a1, uint64_t *a2)
{
  uint64_t v34 = a1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *a2;
  int v32 = *((unsigned __int8 *)a2 + 8);
  int v31 = *((unsigned __int8 *)a2 + 9);
  uint64_t v30 = a2[2];
  uint64_t v29 = a2[3];
  uint64_t v28 = a2[4];
  uint64_t v27 = a2[5];
  uint64_t v26 = a2[6];
  uint64_t v25 = a2[7];
  uint64_t v24 = a2[8];
  uint64_t v23 = a2[9];
  uint64_t v9 = a2[11];
  uint64_t v22 = a2[10];
  uint64_t v10 = a2[12];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v19 = v2;
    uint64_t v20 = v6;
    swift_bridgeObjectRetain_n();
    uint64_t v21 = v11;
    uint64_t v13 = v11 + 48;
    while (1)
    {
      uint64_t v35 = *(void *)(v13 - 16);
      uint64_t v36 = v33;
      char v37 = v32;
      char v38 = v31;
      uint64_t v39 = v30;
      uint64_t v40 = v29;
      uint64_t v41 = v28;
      uint64_t v42 = v27;
      uint64_t v43 = v26;
      uint64_t v44 = v25;
      uint64_t v45 = v24;
      uint64_t v46 = v23;
      uint64_t v47 = v22;
      uint64_t v48 = v9;
      uint64_t v49 = v10;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(v34, (uint64_t)&v36);
      if (v3) {
        break;
      }
      v13 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v20;
        uint64_t v2 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    uint64_t result = *(void *)(v2 + 40);
    uint64_t v15 = *(void *)(result + 16);
    if (v15)
    {
      uint64_t v16 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v17 = *(void *)(v6 + 72);
      uint64_t v21 = *(void *)(v2 + 40);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFF83CC4(v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v50 = *((void *)v8 + 2);
        uint64_t v36 = v33;
        char v37 = v32;
        char v38 = v31;
        uint64_t v39 = v30;
        uint64_t v40 = v29;
        uint64_t v41 = v28;
        uint64_t v42 = v27;
        uint64_t v43 = v26;
        uint64_t v44 = v25;
        uint64_t v45 = v24;
        uint64_t v46 = v23;
        uint64_t v47 = v22;
        uint64_t v48 = v9;
        uint64_t v49 = v10;
        swift_retain();
        sub_1BFF2871C(v34, (uint64_t)&v36);
        if (v3) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v16 += v17;
        if (!--v15) {
          return swift_bridgeObjectRelease_n();
        }
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1C05C9674(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05C9230(a1, a2);
}

uint64_t sub_1C05C9698(unint64_t *a1, uint64_t *a2)
{
  uint64_t v30 = a1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *a2;
  int v9 = *((unsigned __int8 *)a2 + 8);
  int v27 = *((unsigned __int8 *)a2 + 9);
  int v28 = v9;
  uint64_t v10 = a2[2];
  uint64_t v25 = a2[3];
  uint64_t v26 = v10;
  uint64_t v24 = a2[4];
  uint64_t v23 = a2[5];
  uint64_t v22 = a2[6];
  uint64_t v21 = a2[7];
  uint64_t v20 = a2[8];
  uint64_t v19 = a2[9];
  uint64_t v11 = a2[11];
  uint64_t v18 = a2[10];
  uint64_t v12 = a2[12];
  swift_beginAccess();
  uint64_t result = *(void *)(v2 + 56);
  uint64_t v14 = *(void *)(result + 16);
  if (v14)
  {
    uint64_t v15 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v16 = *(void *)(v6 + 72);
    uint64_t v17 = *(void *)(v2 + 56);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFF83CC4(v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v45 = *((void *)v8 + 2);
      uint64_t v31 = v29;
      char v32 = v28;
      char v33 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v25;
      uint64_t v36 = v24;
      uint64_t v37 = v23;
      uint64_t v38 = v22;
      uint64_t v39 = v21;
      uint64_t v40 = v20;
      uint64_t v41 = v19;
      uint64_t v42 = v18;
      uint64_t v43 = v11;
      uint64_t v44 = v12;
      swift_retain();
      sub_1BFF2871C(v30, (uint64_t)&v31);
      if (v3) {
        break;
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v15 += v16;
      if (!--v14) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_release();
    sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1C05C993C(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05C9698(a1, a2);
}

uint64_t sub_1C05C9960(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v19 = *(void *)(v2 + 8);
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v14 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v15 = *((_OWORD *)a2 + 3);
  long long v16 = v8;
  long long v17 = *((_OWORD *)a2 + 5);
  uint64_t v18 = v6;
  return sub_1BFF79540(a1, (uint64_t)&v10);
}

void sub_1C05C99D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v18 = *(void *)(*(void *)v2 + 64);
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v12 = *((_OWORD *)a2 + 1);
  long long v13 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v14 = *((_OWORD *)a2 + 3);
  long long v15 = v8;
  long long v16 = *((_OWORD *)a2 + 5);
  uint64_t v17 = v6;
  sub_1BFF0B0B8(a1, (uint64_t)&v9);
}

void sub_1C05C9AA4(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05C9AC8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  long long v6 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v6;
  uint64_t v16 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  uint64_t v15[3] = v8;
  uint64_t v10 = *v2;
  uint64_t v9 = v2[1];
  if (*v2 && (uint64_t v11 = *(void *)(v10 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (1)
    {
      unint64_t v14 = *(void *)(v10 + 8 * v13 + 32);
      swift_retain();
      sub_1C05CF6A8(a1, a2, v14);
      if (v4) {
        break;
      }
      ++v13;
      swift_release();
      if (v11 == v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    if (v9) {
      sub_1C0001134(a1, v15, v9);
    }
  }
}

void sub_1C05C9BCC(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05C9BE4(uint64_t result, uint64_t *a2)
{
  if (!*((unsigned char *)v2 + 56)
    && (v2[6] & 0xF000000000000007) != 0xD000000000000007
    && (*v2 & 0xF000000000000007) != 0xF000000000000007)
  {
    uint64_t v4 = *a2;
    char v5 = *((unsigned char *)a2 + 8);
    char v6 = *((unsigned char *)a2 + 9);
    long long v7 = *((_OWORD *)a2 + 1);
    long long v8 = *((_OWORD *)a2 + 2);
    long long v9 = *((_OWORD *)a2 + 3);
    long long v10 = *((_OWORD *)a2 + 4);
    long long v11 = *((_OWORD *)a2 + 5);
    uint64_t v12 = a2[12];
    uint64_t v22 = *v2;
    uint64_t v13 = v4;
    char v14 = v5;
    char v15 = v6;
    long long v16 = v7;
    long long v17 = v8;
    long long v18 = v9;
    long long v19 = v10;
    long long v20 = v11;
    uint64_t v21 = v12;
    return sub_1BFF79540(result, (uint64_t)&v13);
  }
  return result;
}

uint64_t sub_1C05C9C88(uint64_t result, uint64_t *a2)
{
  if ((~*v2 & 0xF000000000000007) != 0)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v6 = *a2;
    uint64_t v18 = *v2;
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 3);
    long long v15 = v8;
    long long v16 = *((_OWORD *)a2 + 5);
    uint64_t v17 = v3;
    return sub_1BFF79540(result, (uint64_t)&v9);
  }
  return result;
}

uint64_t sub_1C05C9D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BFFF0EE8(a1, a2);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v9 = *(void *)(a4 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v10 = a4 + 48;
      do
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFFF0EE8(a1, a2);
        swift_bridgeObjectRelease();
        swift_release_n();
        v10 += 24;
        --v9;
      }
      while (v9);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    return sub_1BFFF0EE8(a1, a2);
  }
}

uint64_t sub_1C05C9E90(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BFF79540(a1, a2);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1BFF799B0(a1, a2, a4);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1BFF79540(a1, a2);
  }
}

uint64_t sub_1C05C9F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = a1;
  uint64_t v34 = *(void *)(a3 + 24);
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](a1);
  char v33 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  __n128 v11 = MEMORY[0x1F4188790](v10);
  uint64_t v64 = *v13;
  int v14 = *((unsigned __int8 *)v13 + 8);
  int v43 = *((unsigned __int8 *)v13 + 9);
  int v44 = v14;
  uint64_t v46 = v13[2];
  uint64_t v42 = v13[3];
  uint64_t v41 = v13[4];
  uint64_t v40 = v13[5];
  uint64_t v39 = v13[6];
  uint64_t v38 = v13[7];
  uint64_t v37 = v13[8];
  uint64_t v15 = v13[10];
  uint64_t v36 = v13[9];
  uint64_t v16 = v13[11];
  uint64_t v17 = v13[12];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v9, v11);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v29 = v4;
    uint64_t v19 = v6;
    uint64_t v21 = *((void *)&v62 + 1);
    uint64_t v20 = v63;
    __swift_project_boxed_opaque_existential_1(&v61, *((uint64_t *)&v62 + 1));
    uint64_t v47 = v64;
    char v48 = v44;
    char v49 = v43;
    uint64_t v50 = v46;
    uint64_t v51 = v42;
    uint64_t v52 = v41;
    uint64_t v53 = v40;
    uint64_t v54 = v39;
    uint64_t v55 = v38;
    uint64_t v56 = v37;
    uint64_t v57 = v36;
    uint64_t v58 = v15;
    uint64_t v59 = v16;
    uint64_t v60 = v17;
    uint64_t v22 = v45;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v20 + 8))(v19, &v47, v21, v20);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
    if (v22) {
      return result;
    }
    uint64_t v30 = v17;
    uint64_t v31 = v16;
    uint64_t v32 = v15;
    uint64_t v24 = v46;
    uint64_t v25 = v64;
    uint64_t v6 = v19;
    uint64_t v4 = v29;
  }
  else
  {
    uint64_t v30 = v17;
    uint64_t v31 = v16;
    uint64_t v32 = v15;
    uint64_t v24 = v46;
    uint64_t v25 = v64;
    uint64_t v63 = 0;
    long long v61 = 0u;
    long long v62 = 0u;
    sub_1BFE4D118((uint64_t)&v61, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v33, v4 + *(int *)(a3 + 52), v34);
  if (swift_dynamicCast())
  {
    uint64_t v26 = v6;
    uint64_t v27 = *((void *)&v62 + 1);
    uint64_t v28 = v63;
    __swift_project_boxed_opaque_existential_1(&v61, *((uint64_t *)&v62 + 1));
    uint64_t v47 = v25;
    char v48 = v44;
    char v49 = v43;
    uint64_t v50 = v24;
    uint64_t v51 = v42;
    uint64_t v52 = v41;
    uint64_t v53 = v40;
    uint64_t v54 = v39;
    uint64_t v55 = v38;
    uint64_t v56 = v37;
    uint64_t v57 = v36;
    uint64_t v58 = v32;
    uint64_t v59 = v31;
    uint64_t v60 = v30;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v28 + 8))(v26, &v47, v27, v28);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
  }
  else
  {
    uint64_t v63 = 0;
    long long v61 = 0u;
    long long v62 = 0u;
    return sub_1BFE4D118((uint64_t)&v61, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

uint64_t sub_1C05CA404(uint64_t a1, uint64_t a2)
{
  return sub_1BFF79540(a1, a2);
}

uint64_t sub_1C05CA41C(uint64_t a1, uint64_t *a2)
{
  return sub_1C05D6744(a1, a2, sub_1BFF7B258);
}

uint64_t sub_1C05CA45C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v19 = *v2;
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v14 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v15 = *((_OWORD *)a2 + 3);
  long long v16 = v8;
  long long v17 = *((_OWORD *)a2 + 5);
  uint64_t v18 = v6;
  return sub_1BFF79540(a1, (uint64_t)&v10);
}

uint64_t sub_1C05CA4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D7224(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BFF7B258, sub_1BFF799B0);
}

uint64_t sub_1C05CA514(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF7B258(a1, a2);
}

uint64_t sub_1C05CA52C(uint64_t result, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v14[4] = *(_OWORD *)(a2 + 64);
  v14[5] = v4;
  uint64_t v15 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 61;
  v14[2] = *(_OWORD *)(a2 + 32);
  uint64_t v14[3] = v6;
  uint64_t v9 = v3;
  uint64_t v11 = result;
  switch(v8)
  {
    case 2uLL:
      uint64_t v12 = v7 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v12 + 24);
      uint64_t v16 = *(void *)(v12 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF7B258(v11, (uint64_t *)a2);
      if (!v9) {
        sub_1BFF799B0(v11, v14, v13);
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    case 3uLL:
    case 4uLL:
      uint64_t v16 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t result = sub_1BFF79540(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05CA65C(uint64_t a1, uint64_t a2)
{
  return sub_1C05CA52C(a1, a2);
}

void sub_1C05CA698(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v7 = *(void *)(*(void *)v2 + 32);
  __int16 v8 = *(_WORD *)(*(void *)v2 + 40);
  long long v20 = *(_OWORD *)(*(void *)v2 + 16);
  uint64_t v21 = v7;
  __int16 v22 = v8;
  uint64_t v11 = v3;
  char v12 = v4;
  char v13 = v5;
  long long v9 = *((_OWORD *)a2 + 2);
  long long v14 = *((_OWORD *)a2 + 1);
  long long v15 = v9;
  long long v10 = *((_OWORD *)a2 + 4);
  long long v16 = *((_OWORD *)a2 + 3);
  long long v17 = v10;
  long long v18 = *((_OWORD *)a2 + 5);
  uint64_t v19 = v6;
  sub_1BFF8449C(a1, (uint64_t)&v11);
}

uint64_t sub_1C05CA724(uint64_t a1, uint64_t a2, void *a3)
{
  long long v15 = a3;
  sub_1BFC3D764();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  id v6 = a3;
  if (swift_dynamicCast())
  {
    uint64_t v7 = *((void *)&v17 + 1);
    uint64_t v8 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
    long long v9 = *(_OWORD *)(a2 + 80);
    v13[4] = *(_OWORD *)(a2 + 64);
    v13[5] = v9;
    uint64_t v14 = *(void *)(a2 + 96);
    long long v10 = *(_OWORD *)(a2 + 16);
    v13[0] = *(_OWORD *)a2;
    v13[1] = v10;
    long long v11 = *(_OWORD *)(a2 + 48);
    v13[2] = *(_OWORD *)(a2 + 32);
    uint64_t v13[3] = v11;
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(v8 + 8))(a1, v13, v7, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  }
  else
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
    return sub_1BFE4D118((uint64_t)&v16, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

uint64_t sub_1C05CA854(uint64_t a1, uint64_t *a2)
{
  return sub_1C05C61AC(a1, a2);
}

uint64_t sub_1C05CA878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  __n128 v5 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = *v7;
  char v9 = *((unsigned char *)v7 + 8);
  char v10 = *((unsigned char *)v7 + 9);
  uint64_t v12 = v7[2];
  uint64_t v11 = v7[3];
  uint64_t v13 = v7[4];
  uint64_t v26 = v7[5];
  uint64_t v27 = v13;
  uint64_t v25 = v7[6];
  uint64_t v24 = v7[7];
  uint64_t v23 = v7[8];
  uint64_t v22 = v7[9];
  uint64_t v21 = v7[10];
  uint64_t v20 = v7[11];
  uint64_t v19 = v7[12];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v14 + 28), v4, v5);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v16 = *((void *)&v43 + 1);
    uint64_t v17 = v44;
    __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
    uint64_t v28 = v8;
    char v29 = v9;
    char v30 = v10;
    uint64_t v31 = v12;
    uint64_t v32 = v11;
    uint64_t v33 = v27;
    uint64_t v34 = v26;
    uint64_t v35 = v25;
    uint64_t v36 = v24;
    uint64_t v37 = v23;
    uint64_t v38 = v22;
    uint64_t v39 = v21;
    uint64_t v40 = v20;
    uint64_t v41 = v19;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v17 + 8))(v45, &v28, v16, v17);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  }
  else
  {
    uint64_t v44 = 0;
    long long v42 = 0u;
    long long v43 = 0u;
    return sub_1BFE4D118((uint64_t)&v42, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

uint64_t sub_1C05CAAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05CA878(a1, a2, a3);
}

void sub_1C05CAAF8(unint64_t *a1, uint64_t *a2)
{
  if (*((unsigned char *)v2 + 16) == 1 && (*v2 & 0xF000000000000007) != 0xF000000000000007)
  {
    uint64_t v4 = a2[12];
    char v5 = *((unsigned char *)a2 + 9);
    char v6 = *((unsigned char *)a2 + 8);
    uint64_t v7 = *a2;
    uint64_t v19 = *v2;
    uint64_t v10 = v7;
    char v11 = v6;
    char v12 = v5;
    long long v8 = *((_OWORD *)a2 + 2);
    long long v13 = *((_OWORD *)a2 + 1);
    long long v14 = v8;
    long long v9 = *((_OWORD *)a2 + 4);
    long long v15 = *((_OWORD *)a2 + 3);
    long long v16 = v9;
    long long v17 = *((_OWORD *)a2 + 5);
    uint64_t v18 = v4;
    sub_1BFE2F328(a1, (uint64_t)&v10);
  }
}

void sub_1C05CAB88(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v12 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v14 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = *v2;
  unsigned int v18 = *((unsigned __int8 *)v2 + 24);
  if (v18 >> 6 > 1)
  {
    if ((v18 & 0x3F) != 1) {
      return;
    }
    uint64_t v17 = v2[1];
  }
  else if (*((unsigned char *)v2 + 16) != 1)
  {
    return;
  }
  if ((v17 & 0xF000000000000007) != 0xF000000000000007)
  {
    uint64_t v33 = v17;
    uint64_t v19 = v3;
    char v20 = v4;
    char v21 = v5;
    uint64_t v22 = v6;
    uint64_t v23 = v7;
    uint64_t v24 = v9;
    uint64_t v25 = v8;
    uint64_t v26 = v11;
    uint64_t v27 = v10;
    uint64_t v28 = v13;
    uint64_t v29 = v12;
    uint64_t v30 = v15;
    uint64_t v31 = v14;
    uint64_t v32 = v16;
    sub_1BFE2F328(a1, (uint64_t)&v19);
  }
}

void sub_1C05CAC4C(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CAC64(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05CAC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  __n128 v5 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = *v7;
  char v9 = *((unsigned char *)v7 + 8);
  char v10 = *((unsigned char *)v7 + 9);
  uint64_t v12 = v7[2];
  uint64_t v11 = v7[3];
  uint64_t v13 = v7[4];
  uint64_t v26 = v7[5];
  uint64_t v27 = v13;
  uint64_t v25 = v7[6];
  uint64_t v24 = v7[7];
  uint64_t v23 = v7[8];
  uint64_t v22 = v7[9];
  uint64_t v21 = v7[10];
  uint64_t v20 = v7[11];
  uint64_t v19 = v7[12];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v14 + 44), v4, v5);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v16 = *((void *)&v43 + 1);
    uint64_t v17 = v44;
    __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
    uint64_t v28 = v8;
    char v29 = v9;
    char v30 = v10;
    uint64_t v31 = v12;
    uint64_t v32 = v11;
    uint64_t v33 = v27;
    uint64_t v34 = v26;
    uint64_t v35 = v25;
    uint64_t v36 = v24;
    uint64_t v37 = v23;
    uint64_t v38 = v22;
    uint64_t v39 = v21;
    uint64_t v40 = v20;
    uint64_t v41 = v19;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v17 + 8))(v45, &v28, v16, v17);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  }
  else
  {
    uint64_t v44 = 0;
    long long v42 = 0u;
    long long v43 = 0u;
    return sub_1BFE4D118((uint64_t)&v42, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

uint64_t sub_1C05CAED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05CAC7C(a1, a2, a3);
}

void sub_1C05CAEEC(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05CAF04(uint64_t result, uint64_t *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (unint64_t *)result;
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 9);
    long long v18 = *((_OWORD *)a2 + 2);
    long long v19 = *((_OWORD *)a2 + 1);
    long long v16 = *((_OWORD *)a2 + 4);
    long long v17 = *((_OWORD *)a2 + 3);
    long long v15 = *((_OWORD *)a2 + 5);
    uint64_t v9 = a2[12];
    char v10 = *((unsigned char *)a2 + 8);
    uint64_t v11 = *(void *)(type metadata accessor for FormatPropertyDefinition(0) - 8);
    uint64_t v12 = v4;
    uint64_t v13 = v4 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v29 = v12;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v20 = v7;
      char v21 = v10;
      char v22 = v8;
      long long v23 = v19;
      long long v24 = v18;
      long long v25 = v17;
      long long v26 = v16;
      long long v27 = v15;
      uint64_t v28 = v9;
      sub_1C05D3CE0(v6, (uint64_t)&v20);
      if (v3) {
        break;
      }
      v13 += v14;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05CB054(uint64_t a1, uint64_t *a2)
{
  return sub_1C05CAF04(a1, a2);
}

void sub_1C05CB06C(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05CB090(unint64_t *a1, uint64_t a2)
{
  return sub_1C003EB00(a1, a2);
}

uint64_t sub_1C05CB0B4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v31 = a1;
  uint64_t v5 = type metadata accessor for FormatOption() - 8;
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(v2 + 24);
  if (result)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t v30 = *a2;
      int v11 = *((unsigned __int8 *)a2 + 8);
      int v28 = *((unsigned __int8 *)a2 + 9);
      int v29 = v11;
      uint64_t v12 = a2[2];
      uint64_t v26 = a2[3];
      uint64_t v27 = v12;
      uint64_t v13 = a2[4];
      uint64_t v24 = a2[5];
      uint64_t v25 = v13;
      uint64_t v23 = a2[6];
      uint64_t v22 = a2[7];
      uint64_t v21 = a2[8];
      uint64_t v20 = a2[9];
      uint64_t v14 = a2[11];
      uint64_t v19 = a2[10];
      uint64_t v15 = a2[12];
      uint64_t v16 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v17 = *(void *)(v6 + 72);
      v18[1] = result;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BFF83CC4(v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v46 = *((void *)v8 + 2);
        uint64_t v32 = v30;
        char v33 = v29;
        char v34 = v28;
        uint64_t v35 = v27;
        uint64_t v36 = v26;
        uint64_t v37 = v25;
        uint64_t v38 = v24;
        uint64_t v39 = v23;
        uint64_t v40 = v22;
        uint64_t v41 = v21;
        uint64_t v42 = v20;
        uint64_t v43 = v19;
        uint64_t v44 = v14;
        uint64_t v45 = v15;
        swift_retain();
        sub_1BFF2871C(v31, (uint64_t)&v32);
        if (v3) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v16 += v17;
        if (!--v10) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C05CB324(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05CB0B4(a1, a2);
}

uint64_t sub_1C05CB33C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 96);
  char v4 = *(unsigned char *)(a2 + 9);
  char v5 = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)a2;
  uint64_t v19 = *(void *)(v2 + 8);
  uint64_t v10 = v6;
  char v11 = v5;
  char v12 = v4;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 80);
  uint64_t v18 = v3;
  return sub_1BFFDD9B8(a1, &v10);
}

uint64_t sub_1C05CB3BC(uint64_t a1, uint64_t *a2)
{
  return sub_1BFFDD9B8(a1, a2);
}

uint64_t sub_1C05CB3D4(uint64_t a1, uint64_t a2)
{
  return sub_1C05CB33C(a1, a2);
}

unint64_t *sub_1C05CB3EC(unint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a2;
  int v9 = *((unsigned __int8 *)a2 + 8);
  int v10 = *((unsigned __int8 *)a2 + 9);
  uint64_t v11 = a2[2];
  uint64_t v12 = a2[3];
  uint64_t v13 = a2[4];
  uint64_t v14 = a2[5];
  uint64_t v15 = a2[6];
  uint64_t v16 = a2[7];
  uint64_t v18 = a2[8];
  uint64_t v17 = a2[9];
  uint64_t v20 = a2[10];
  uint64_t v19 = a2[11];
  uint64_t v21 = a2[12];
  uint64_t v22 = *(void *)(v2 + 48);
  uint64_t v39 = *(void *)(v2 + 80);
  uint64_t v38 = *(unint64_t **)(v2 + 96);
  int v36 = *(unsigned __int8 *)(v2 + 106);
  int v35 = *(unsigned __int16 *)(v2 + 104);
  uint64_t v67 = v22;
  uint64_t v52 = v8;
  uint64_t v53 = v8;
  int v50 = v10;
  int v51 = v9;
  char v54 = v9;
  char v55 = v10;
  uint64_t v48 = v12;
  uint64_t v49 = v11;
  uint64_t v56 = v11;
  uint64_t v57 = v12;
  uint64_t v46 = v14;
  uint64_t v47 = v13;
  uint64_t v58 = v13;
  uint64_t v59 = v14;
  uint64_t v44 = v16;
  uint64_t v45 = v15;
  uint64_t v60 = v15;
  uint64_t v61 = v16;
  uint64_t v62 = v18;
  uint64_t v63 = v17;
  uint64_t v64 = v20;
  uint64_t v65 = v19;
  uint64_t v66 = v21;
  uint64_t v23 = v43;
  uint64_t result = sub_1BFFF0EE8(a1, (uint64_t)&v53);
  if (!v23)
  {
    uint64_t v34 = v21;
    uint64_t v41 = v19;
    uint64_t v42 = v20;
    uint64_t v43 = v18;
    uint64_t v25 = *(void *)(v39 + 16);
    if (v25)
    {
      uint64_t v26 = v17;
      uint64_t v40 = a1;
      uint64_t v27 = v39 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
      uint64_t v28 = *(void *)(v37 + 72);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = v34;
      do
      {
        sub_1BFF83CC4(v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v67 = *((void *)v7 + 2);
        uint64_t v53 = v52;
        char v54 = v51;
        char v55 = v50;
        uint64_t v56 = v49;
        uint64_t v57 = v48;
        uint64_t v58 = v47;
        uint64_t v59 = v46;
        uint64_t v60 = v45;
        uint64_t v61 = v44;
        uint64_t v62 = v43;
        uint64_t v63 = v26;
        uint64_t v64 = v42;
        uint64_t v65 = v41;
        uint64_t v66 = v29;
        swift_retain();
        sub_1BFF2871C(v40, (uint64_t)&v53);
        swift_release();
        sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v27 += v28;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease_n();
      uint64_t result = v38;
      int v30 = v36;
      int v31 = v35;
    }
    else
    {
      int v30 = v36;
      int v31 = v35;
      uint64_t result = v38;
    }
    uint64_t v32 = v31 | (v30 << 16);
    if (BYTE2(v32) != 255
      && (v32 & 0xFFFFFF) >= 0x20000
      && BYTE1(v31) != 255
      && (_BYTE)v31 == 0xFF
      && (v31 & 0x100) != 0)
    {
      return (unint64_t *)sub_1BFFA742C((uint64_t)result, v32, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    }
  }
  return result;
}

uint64_t sub_1C05CB7CC()
{
  if (*(unsigned __int8 *)(v0 + 10) >= 2u)
  {
    uint64_t v1 = *(unsigned __int16 *)(v0 + 8);
    if (v1 >> 8 <= 0xFE && (v1 & 0x100) != 0 && (_BYTE)v1 == 0xFF) {
      return sub_1BFFA742C(*(void *)v0, v1, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    }
  }
  return result;
}

unint64_t *sub_1C05CB850(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05CB3EC(a1, a2);
}

unint64_t *sub_1C05CB868(unint64_t *a1, uint64_t a2)
{
  return sub_1BFFF0EE8(a1, a2);
}

uint64_t sub_1C05CB880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v18 = v2[1];
  uint64_t v19 = *(void *)(a2 + 96);
  uint64_t v40 = *v2;
  uint64_t v26 = v4;
  char v27 = v5;
  char v28 = v6;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  uint64_t v32 = v10;
  uint64_t v33 = v12;
  uint64_t v34 = v11;
  uint64_t v23 = v13;
  uint64_t v24 = v11;
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  uint64_t v21 = v15;
  uint64_t v22 = v14;
  uint64_t v37 = v15;
  uint64_t v38 = v16;
  uint64_t v20 = v16;
  uint64_t v39 = v19;
  uint64_t result = sub_1BFF0DB9C(a1, &v26);
  if (!v3)
  {
    uint64_t v40 = v18;
    uint64_t v26 = v4;
    char v27 = v5;
    char v28 = v6;
    uint64_t v29 = v7;
    uint64_t v30 = v8;
    uint64_t v31 = v9;
    uint64_t v32 = v10;
    uint64_t v33 = v12;
    uint64_t v34 = v24;
    uint64_t v35 = v23;
    uint64_t v36 = v22;
    uint64_t v37 = v21;
    uint64_t v38 = v20;
    uint64_t v39 = v19;
    return sub_1BFF0DB9C(a1, &v26);
  }
  return result;
}

uint64_t sub_1C05CB984(uint64_t a1, uint64_t a2)
{
  return sub_1C05CB880(a1, a2);
}

uint64_t sub_1C05CB99C(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF0DB9C(a1, a2);
}

uint64_t sub_1C05CB9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  int v40 = *(unsigned __int8 *)(a2 + 9);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v22 = *(void *)(a2 + 40);
  uint64_t v23 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v20 = *(void *)(a2 + 72);
  uint64_t v21 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(a2 + 88);
  sub_1C00F6034(v2, (uint64_t)v38);
  sub_1C00F6034((uint64_t)v38, (uint64_t)v39);
  int v11 = sub_1C00F6090((uint64_t)v39);
  uint64_t result = sub_1C00F609C((uint64_t)v39);
  if (v11 == 1)
  {
    uint64_t v17 = v9;
    uint64_t v18 = v7;
    uint64_t v13 = *(void *)(*(void *)(result + 112) + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      while (1)
      {
        uint64_t v24 = v4;
        char v25 = v5;
        char v26 = v40;
        uint64_t v27 = v15;
        uint64_t v28 = v23;
        uint64_t v29 = v6;
        uint64_t v30 = v22;
        uint64_t v31 = v18;
        uint64_t v32 = v21;
        uint64_t v33 = v8;
        uint64_t v34 = v20;
        uint64_t v35 = v17;
        uint64_t v36 = v19;
        uint64_t v37 = v10;
        swift_retain();
        sub_1BFF79540(a1, (uint64_t)&v24);
        if (v3) {
          break;
        }
        ++v14;
        swift_release();
        if (v13 == v14) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    uint64_t v24 = v4;
    char v25 = v5;
    char v26 = v40;
    uint64_t v27 = v15;
    uint64_t v28 = v23;
    uint64_t v29 = v6;
    uint64_t v30 = v22;
    uint64_t v31 = v7;
    uint64_t v32 = v21;
    uint64_t v33 = v8;
    uint64_t v34 = v20;
    uint64_t v35 = v9;
    uint64_t v36 = v19;
    uint64_t v37 = v10;
    return sub_1BFF7B500(a1, &v24);
  }
  return result;
}

uint64_t sub_1C05CBBD0(uint64_t a1, uint64_t a2)
{
  return sub_1C05CB9B4(a1, a2);
}

uint64_t sub_1C05CBBE8(uint64_t a1, uint64_t *a2)
{
  return sub_1C05C6488(a1, a2);
}

uint64_t sub_1C05CBC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v42 = *(void *)(a3 + 16);
  uint64_t v44 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v41 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)&v26 - v5;
  __n128 v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *v10;
  int v39 = *((unsigned __int8 *)v10 + 8);
  int v37 = *((unsigned __int8 *)v10 + 9);
  uint64_t v36 = v10[2];
  uint64_t v35 = v10[3];
  uint64_t v34 = v10[4];
  uint64_t v11 = v10[6];
  uint64_t v33 = v10[5];
  uint64_t v13 = v10[7];
  uint64_t v12 = v10[8];
  uint64_t v15 = v10[9];
  uint64_t v14 = v10[10];
  uint64_t v16 = v10[11];
  uint64_t v17 = v10[12];
  (*(void (**)(char *, uint64_t, __n128))(v18 + 16))(v9, v19, v7);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    uint64_t v26 = v17;
    uint64_t v27 = v16;
    uint64_t v28 = v14;
    uint64_t v29 = v15;
    uint64_t v30 = v12;
    uint64_t v31 = v13;
    uint64_t v32 = v11;
    uint64_t v21 = v43;
    uint64_t v22 = v44;
    uint64_t v23 = v42;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v9, v42);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v41, v21, v23);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
    if (swift_dynamicCast())
    {
      uint64_t v24 = *((void *)&v60 + 1);
      uint64_t v25 = v61;
      __swift_project_boxed_opaque_existential_1(&v59, *((uint64_t *)&v60 + 1));
      uint64_t v45 = v38;
      char v46 = v39;
      char v47 = v37;
      uint64_t v48 = v36;
      uint64_t v49 = v35;
      uint64_t v50 = v34;
      uint64_t v51 = v33;
      uint64_t v52 = v32;
      uint64_t v53 = v31;
      uint64_t v54 = v30;
      uint64_t v55 = v29;
      uint64_t v56 = v28;
      uint64_t v57 = v27;
      uint64_t v58 = v26;
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v25 + 8))(v40, &v45, v24, v25);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
    }
    else
    {
      uint64_t v61 = 0;
      long long v59 = 0u;
      long long v60 = 0u;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
      return sub_1BFE4D118((uint64_t)&v59, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
    }
  }
  return result;
}

uint64_t sub_1C05CBFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05CBC00(a1, a2, a3);
}

void sub_1C05CC00C(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05CC034(uint64_t a1, uint64_t a2)
{
  return sub_1BFF79180(a1, a2);
}

void sub_1C05CC060(unint64_t *a1, uint64_t *a2)
{
}

void sub_1C05CC078(unint64_t *a1, uint64_t *a2)
{
  if (*v2)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v8 = *a2;
    char v9 = v5;
    char v10 = v4;
    long long v6 = *((_OWORD *)a2 + 2);
    long long v11 = *((_OWORD *)a2 + 1);
    long long v12 = v6;
    long long v7 = *((_OWORD *)a2 + 4);
    long long v13 = *((_OWORD *)a2 + 3);
    long long v14 = v7;
    long long v15 = *((_OWORD *)a2 + 5);
    uint64_t v16 = v3;
    sub_1BFF7855C(a1, (uint64_t)&v8);
  }
}

uint64_t sub_1C05CC0EC(uint64_t result, uint64_t *a2)
{
  int v3 = *(char *)(v2 + 24);
  if (v3 < 0)
  {
    char v4 = (unint64_t *)result;
    uint64_t v6 = *(void *)(v2 + 8);
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v7 = *(void *)v2;
    uint64_t v8 = a2[12];
    char v9 = *((unsigned char *)a2 + 9);
    char v10 = *((unsigned char *)a2 + 8);
    uint64_t v13 = *a2;
    char v14 = v10;
    char v15 = v9;
    long long v11 = *((_OWORD *)a2 + 2);
    long long v16 = *((_OWORD *)a2 + 1);
    long long v17 = v11;
    long long v12 = *((_OWORD *)a2 + 4);
    long long v18 = *((_OWORD *)a2 + 3);
    long long v19 = v12;
    long long v20 = *((_OWORD *)a2 + 5);
    uint64_t v21 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BFF7855C(v4, (uint64_t)&v13);
    return sub_1C033D994(v7, v6, v5, v3);
  }
  return result;
}

uint64_t sub_1C05CC1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v7 = *(void *)(v2 + 32);
  char v8 = *(unsigned char *)(v2 + 40);
  long long v21 = *(_OWORD *)(v2 + 16);
  uint64_t v22 = v7;
  char v23 = v8;
  uint64_t v12 = v3;
  char v13 = v4;
  char v14 = v5;
  long long v9 = *(_OWORD *)(a2 + 32);
  long long v15 = *(_OWORD *)(a2 + 16);
  long long v16 = v9;
  long long v10 = *(_OWORD *)(a2 + 64);
  long long v17 = *(_OWORD *)(a2 + 48);
  long long v18 = v10;
  long long v19 = *(_OWORD *)(a2 + 80);
  uint64_t v20 = v6;
  return sub_1C05CC0EC(a1, &v12);
}

uint64_t sub_1C05CC240(uint64_t a1, uint64_t *a2)
{
  return sub_1C05CC0EC(a1, a2);
}

void sub_1C05CC258(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a2[12];
  char v3 = *((unsigned char *)a2 + 9);
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v7 = *a2;
  char v8 = v4;
  char v9 = v3;
  long long v5 = *((_OWORD *)a2 + 2);
  long long v10 = *((_OWORD *)a2 + 1);
  long long v11 = v5;
  long long v6 = *((_OWORD *)a2 + 4);
  long long v12 = *((_OWORD *)a2 + 3);
  long long v13 = v6;
  long long v14 = *((_OWORD *)a2 + 5);
  uint64_t v15 = v2;
  sub_1BFF7855C(a1, (uint64_t)&v7);
}

void sub_1C05CC2C8(unint64_t *a1, uint64_t *a2)
{
  char v3 = *((unsigned char *)a2 + 8);
  char v4 = *((unsigned char *)a2 + 9);
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[4];
  uint64_t v7 = a2[5];
  uint64_t v8 = a2[6];
  uint64_t v9 = a2[7];
  uint64_t v10 = a2[8];
  uint64_t v11 = a2[9];
  uint64_t v12 = a2[10];
  uint64_t v13 = a2[11];
  uint64_t v14 = a2[12];
  uint64_t v29 = a2[3];
  uint64_t v30 = *a2;
  uint64_t v32 = *a2;
  char v20 = v3;
  char v33 = v3;
  char v31 = v4;
  char v34 = v4;
  uint64_t v19 = v5;
  uint64_t v35 = v5;
  uint64_t v36 = v29;
  uint64_t v27 = v7;
  uint64_t v28 = v6;
  uint64_t v37 = v6;
  uint64_t v38 = v7;
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  uint64_t v42 = v11;
  uint64_t v43 = v12;
  uint64_t v44 = v13;
  uint64_t v45 = v14;
  sub_1BFF0D1B8(a1, (uint64_t)&v32);
  if (!v2)
  {
    uint64_t v23 = v14;
    uint64_t v24 = v12;
    uint64_t v25 = v10;
    uint64_t v26 = v8;
    swift_beginAccess();
    uint64_t v15 = *(void *)(v22 + 40);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v16; ++i)
      {
        unint64_t v18 = *(void *)(v15 + 8 * i + 32);
        unint64_t v46 = v18;
        uint64_t v32 = v30;
        char v33 = v20;
        char v34 = v31;
        uint64_t v35 = v19;
        uint64_t v36 = v29;
        uint64_t v37 = v28;
        uint64_t v38 = v27;
        uint64_t v39 = v26;
        uint64_t v40 = v9;
        uint64_t v41 = v25;
        uint64_t v42 = v11;
        uint64_t v43 = v24;
        uint64_t v44 = v13;
        uint64_t v45 = v23;
        sub_1BFF32264(v18);
        sub_1BFF0D378((uint64_t)a1, (uint64_t)&v32);
        sub_1BFF31E90(v18);
      }
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1C05CC490(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05CC4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  long long v5 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v5;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v4 + 56);
  swift_bridgeObjectRetain();
  sub_1C11332A8(a1, (uint64_t)v10, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05CC550(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF7B500(a1, a2);
}

uint64_t sub_1C05CC568(unint64_t *a1, uint64_t a2)
{
  return sub_1BFFEFCE4(a1, a2);
}

void sub_1C05CC580(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05CC5B0(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = v2[1];
  if (*((unsigned char *)v2 + 40)) {
    int v18 = 2;
  }
  else {
    int v18 = 0;
  }
  unsigned int v19 = v18 & 0xFFFFFFFE | (v17 >> 1) & 1;
  uint64_t v21 = v2[2];
  uint64_t v20 = v2[3];
  if (v19)
  {
    if (v19 != 1)
    {
      uint64_t v22 = v2[4];
      uint64_t v38 = v2[1];
      uint64_t v39 = v21;
      uint64_t v40 = v20;
      uint64_t v41 = v22;
      goto LABEL_9;
    }
    v17 &= ~2uLL;
  }
  uint64_t v38 = *v2;
  uint64_t v39 = v17;
  uint64_t v40 = v21;
  uint64_t v41 = v20;
LABEL_9:
  uint64_t v24 = v3;
  char v25 = v4;
  char v26 = v5;
  uint64_t v27 = v6;
  uint64_t v28 = v7;
  uint64_t v29 = v9;
  uint64_t v30 = v8;
  uint64_t v31 = v11;
  uint64_t v32 = v10;
  uint64_t v33 = v13;
  uint64_t v34 = v12;
  uint64_t v35 = v15;
  uint64_t v36 = v14;
  uint64_t v37 = v16;
  return sub_1C003030C(a1, &v24);
}

void sub_1C05CC674(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CC68C(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CC6C0(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05CC6E4(uint64_t result, uint64_t a2)
{
  switch(*((unsigned char *)v2 + 64))
  {
    case 1:
      uint64_t result = nullsub_1();
      break;
    case 2:
      uint64_t v3 = v2[1];
      uint64_t v4 = *(void *)(a2 + 96);
      char v5 = *(unsigned char *)(a2 + 9);
      char v6 = *(unsigned char *)(a2 + 8);
      uint64_t v7 = *(void *)a2;
      uint64_t v21 = *v2;
      uint64_t v22 = v3;
      long long v8 = *((_OWORD *)v2 + 2);
      long long v23 = *((_OWORD *)v2 + 1);
      long long v9 = *((_OWORD *)v2 + 3);
      long long v24 = v8;
      long long v25 = v9;
      uint64_t v12 = v7;
      char v13 = v6;
      char v14 = v5;
      long long v10 = *(_OWORD *)(a2 + 32);
      long long v15 = *(_OWORD *)(a2 + 16);
      long long v16 = v10;
      long long v11 = *(_OWORD *)(a2 + 64);
      long long v17 = *(_OWORD *)(a2 + 48);
      long long v18 = v11;
      long long v19 = *(_OWORD *)(a2 + 80);
      uint64_t v20 = v4;
      uint64_t result = sub_1BFF7B500(result, &v12);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05CC7B4(uint64_t a1, uint64_t a2)
{
  return sub_1BFFE6E74(a1, a2);
}

uint64_t sub_1C05CC7D8(uint64_t result, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v37 = result;
  uint64_t v21 = *(void *)a2;
  char v22 = *(unsigned char *)(a2 + 8);
  char v20 = *(unsigned char *)(a2 + 9);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 88);
  uint64_t v6 = *(void *)(v2 + 88);
  int v7 = *(unsigned __int8 *)(v2 + 176);
  switch(*(unsigned char *)(v2 + 80))
  {
    case 1:
      uint64_t result = nullsub_1();
      goto LABEL_4;
    case 2:
      uint64_t v23 = *(void *)a2;
      char v24 = v22;
      char v25 = v20;
      uint64_t v26 = v19;
      uint64_t v27 = v5;
      uint64_t v28 = v18;
      uint64_t v29 = v17;
      uint64_t v30 = v16;
      uint64_t v31 = v15;
      uint64_t v32 = v14;
      uint64_t v33 = v13;
      uint64_t v34 = v12;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      uint64_t result = sub_1BFF7B500(v37, &v23);
LABEL_4:
      uint64_t v4 = v3;
      if (!v3) {
        goto LABEL_5;
      }
      return result;
    case 3:
      uint64_t result = sub_1BFFE54B8(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), 3u);
      if (!v6) {
        goto LABEL_12;
      }
      goto LABEL_6;
    default:
LABEL_5:
      if (!v6) {
        goto LABEL_12;
      }
LABEL_6:
      uint64_t v8 = *(void *)(v6 + 16);
      if (!v8) {
        goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      uint64_t v9 = v6 + 64;
      break;
  }
  do
  {
    uint64_t v23 = v21;
    char v24 = v22;
    char v25 = v20;
    uint64_t v26 = v19;
    uint64_t v27 = v5;
    uint64_t v28 = v18;
    uint64_t v29 = v17;
    uint64_t v30 = v16;
    uint64_t v31 = v15;
    uint64_t v32 = v14;
    uint64_t v33 = v13;
    uint64_t v34 = v12;
    uint64_t v35 = v11;
    uint64_t v36 = v10;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BFF79540(v37, (uint64_t)&v23);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    v9 += 40;
    --v8;
  }
  while (v8);
  uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
  if (v7 != 254)
  {
    uint64_t v23 = v21;
    char v24 = v22;
    char v25 = v20;
    uint64_t v26 = v19;
    uint64_t v27 = v5;
    uint64_t v28 = v18;
    uint64_t v29 = v17;
    uint64_t v30 = v16;
    uint64_t v31 = v15;
    uint64_t v32 = v14;
    uint64_t v33 = v13;
    uint64_t v34 = v12;
    uint64_t v35 = v11;
    uint64_t v36 = v10;
    return sub_1BFF79540(v37, (uint64_t)&v23);
  }
  return result;
}

uint64_t sub_1C05CCB44(uint64_t a1, uint64_t a2)
{
  return sub_1C05CC7D8(a1, a2);
}

uint64_t sub_1C05CCB5C(uint64_t a1, uint64_t a2)
{
  return sub_1C0023908(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BFFF23FC);
}

uint64_t sub_1C05CCB94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v23 = *((unsigned char *)a2 + 9);
  char v24 = *((unsigned char *)a2 + 8);
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[2];
  uint64_t v19 = a2[5];
  uint64_t v20 = a2[4];
  uint64_t v17 = a2[7];
  uint64_t v18 = a2[6];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[8];
  uint64_t v13 = a2[11];
  uint64_t v14 = a2[10];
  uint64_t v12 = a2[12];
  uint64_t result = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 80);
  int v7 = *(unsigned __int8 *)(v2 + 128);
  if (result && (uint64_t v8 = *(void *)(result + 16)) != 0)
  {
    int v10 = *(unsigned __int8 *)(v2 + 128);
    uint64_t v11 = *(void *)(v2 + 80);
    uint64_t v9 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      uint64_t v40 = *(void *)(v9 - 24);
      uint64_t v26 = v4;
      char v27 = v24;
      char v28 = v23;
      uint64_t v29 = v22;
      uint64_t v30 = v21;
      uint64_t v31 = v20;
      uint64_t v32 = v19;
      uint64_t v33 = v18;
      uint64_t v34 = v17;
      uint64_t v35 = v16;
      uint64_t v36 = v15;
      uint64_t v37 = v14;
      uint64_t v38 = v13;
      uint64_t v39 = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFF79540(a1, (uint64_t)&v26);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v9 += 40;
      if (!--v8)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v6 = v11;
        int v7 = v10;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_7:
    if (v7 != 254)
    {
      uint64_t v40 = v6;
      uint64_t v26 = v4;
      char v27 = v24;
      char v28 = v23;
      uint64_t v29 = v22;
      uint64_t v30 = v21;
      uint64_t v31 = v20;
      uint64_t v32 = v19;
      uint64_t v33 = v18;
      uint64_t v34 = v17;
      uint64_t v35 = v16;
      uint64_t v36 = v15;
      uint64_t v37 = v14;
      uint64_t v38 = v13;
      uint64_t v39 = v12;
      return sub_1BFF79540(a1, (uint64_t)&v26);
    }
  }
  return result;
}

uint64_t sub_1C05CCE00(uint64_t a1, uint64_t *a2)
{
  return sub_1C05CCB94(a1, a2);
}

void sub_1C05CCE18(unint64_t *a1, uint64_t *a2)
{
}

void sub_1C05CCE3C(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05CCE60(uint64_t result, uint64_t *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 8);
  char v7 = *((unsigned char *)a2 + 9);
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v13 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = *v2;
  uint64_t v19 = a2[12];
  unint64_t v20 = result;
  switch((unint64_t)*v2 >> 61)
  {
    case 2uLL:
      uint64_t v21 = *(void *)(*(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 24);
      uint64_t v64 = a2[4];
      uint64_t v67 = a2[7];
      uint64_t v61 = a2[2];
      char v55 = *((unsigned char *)a2 + 8);
      char v58 = *((unsigned char *)a2 + 9);
      uint64_t v44 = *a2;
      uint64_t v41 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      if (!*(void *)(v21 + 16))
      {
        uint64_t v40 = a2[5];
        uint64_t v29 = a2[3];
        swift_retain();
        uint64_t v33 = v44;
        char v32 = v55;
        char v31 = v58;
        uint64_t v30 = v61;
        uint64_t v27 = v64;
        uint64_t v28 = v40;
        uint64_t v34 = v41;
        uint64_t v26 = v67;
        goto LABEL_13;
      }
      uint64_t v70 = *(void *)(v21 + 16);
      uint64_t v46 = a2[3];
      uint64_t v49 = a2[5];
      uint64_t v52 = a2[6];
      uint64_t v54 = a2[8];
      uint64_t v42 = a2[9];
      unint64_t v43 = result;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v22 = (void *)(v21 + 56);
      while (1)
      {
        uint64_t v23 = *(v22 - 3);
        uint64_t v24 = *(v22 - 2);
        char v25 = *((unsigned char *)v22 - 8);
        uint64_t v86 = *v22;
        uint64_t v72 = v44;
        char v73 = v55;
        char v74 = v58;
        uint64_t v75 = v61;
        uint64_t v76 = v46;
        uint64_t v77 = v64;
        uint64_t v78 = v49;
        uint64_t v79 = v52;
        uint64_t v80 = v67;
        uint64_t v81 = v54;
        uint64_t v82 = v42;
        uint64_t v83 = v16;
        uint64_t v84 = v17;
        uint64_t v85 = v19;
        sub_1BFF5B7E0(v23, v24, v25);
        swift_retain();
        sub_1C05CCE60(v43, &v72);
        if (v4) {
          break;
        }
        v22 += 4;
        sub_1BFF5B7CC(v23, v24, v25);
        swift_release();
        if (!--v70)
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = v42;
          unint64_t v20 = v43;
          uint64_t v13 = v52;
          uint64_t v14 = v54;
          uint64_t v27 = v64;
          uint64_t v26 = v67;
          uint64_t v29 = v46;
          uint64_t v28 = v49;
          uint64_t v30 = v61;
          char v32 = v55;
          char v31 = v58;
          uint64_t v33 = v44;
          uint64_t v34 = v41;
LABEL_13:
          uint64_t v86 = *(void *)(v34 + 32);
          uint64_t v72 = v33;
          char v73 = v32;
          char v74 = v31;
          uint64_t v75 = v30;
          uint64_t v76 = v29;
          uint64_t v77 = v27;
          uint64_t v78 = v28;
          uint64_t v79 = v13;
          uint64_t v80 = v26;
          uint64_t v81 = v14;
          uint64_t v82 = v15;
          uint64_t v83 = v16;
          uint64_t v84 = v17;
          uint64_t v85 = v19;
          sub_1C05CCE60(v20, &v72);
          return swift_release();
        }
      }
      sub_1BFF5B7CC(v23, v24, v25);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 4uLL:
      uint64_t v35 = v18 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v36 = *(void *)(v35 + 24);
      uint64_t v86 = *(void *)(v35 + 16);
      uint64_t v72 = v5;
      char v73 = v6;
      char v74 = v7;
      uint64_t v75 = v9;
      uint64_t v76 = v8;
      uint64_t v77 = v11;
      uint64_t v78 = v10;
      uint64_t v79 = v13;
      uint64_t v80 = v12;
      uint64_t v81 = v14;
      uint64_t v82 = v15;
      uint64_t v83 = v16;
      uint64_t v84 = v17;
      uint64_t v85 = v19;
      char v56 = v6;
      char v59 = v7;
      uint64_t v65 = v11;
      uint64_t v68 = v12;
      uint64_t v47 = v8;
      uint64_t v50 = v10;
      uint64_t v62 = v9;
      uint64_t v45 = v5;
      swift_retain();
      swift_retain();
      sub_1C05CCE60(v20, &v72);
      if (!v4)
      {
        uint64_t v86 = v36;
        uint64_t v72 = v45;
        char v73 = v56;
        char v74 = v59;
        uint64_t v75 = v62;
        uint64_t v76 = v47;
        uint64_t v77 = v65;
        uint64_t v78 = v50;
        uint64_t v79 = v13;
        uint64_t v80 = v68;
        uint64_t v81 = v14;
        uint64_t v82 = v15;
        uint64_t v83 = v16;
        uint64_t v84 = v17;
        uint64_t v85 = v19;
        sub_1C05CCE60(v20, &v72);
      }
      goto LABEL_11;
    case 5uLL:
      uint64_t v37 = v18 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v38 = *(void *)(v37 + 24);
      uint64_t v86 = *(void *)(v37 + 16);
      uint64_t v71 = v38;
      uint64_t v72 = v5;
      char v73 = v6;
      char v74 = v7;
      uint64_t v75 = v9;
      uint64_t v76 = v8;
      uint64_t v77 = v11;
      uint64_t v78 = v10;
      uint64_t v79 = v13;
      uint64_t v80 = v12;
      uint64_t v81 = v14;
      uint64_t v82 = v15;
      uint64_t v83 = v16;
      uint64_t v84 = v17;
      uint64_t v53 = v13;
      uint64_t v85 = v19;
      char v57 = v6;
      char v60 = v7;
      uint64_t v66 = v11;
      uint64_t v69 = v12;
      uint64_t v48 = v8;
      uint64_t v51 = v10;
      uint64_t v63 = v9;
      uint64_t v39 = v5;
      swift_retain();
      swift_retain();
      sub_1C05CCE60(v20, &v72);
      if (v4)
      {
LABEL_11:
        swift_release();
      }
      else if (v71)
      {
        uint64_t v72 = v39;
        char v73 = v57;
        char v74 = v60;
        uint64_t v75 = v63;
        uint64_t v76 = v48;
        uint64_t v77 = v66;
        uint64_t v78 = v51;
        uint64_t v79 = v53;
        uint64_t v80 = v69;
        uint64_t v81 = v14;
        uint64_t v82 = v15;
        uint64_t v83 = v16;
        uint64_t v84 = v17;
        uint64_t v85 = v19;
        swift_retain();
        sub_1BFF42EB8(v20, (uint64_t)&v72);
        swift_release();
        return swift_release_n();
      }
      return swift_release();
    default:
      return result;
  }
}

uint64_t sub_1C05CD328(uint64_t a1, uint64_t *a2)
{
  return sub_1C05CCE60(a1, a2);
}

uint64_t sub_1C05CD340(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v20 = *(void *)(a2 + 24);
  uint64_t v21 = *(void *)(a2 + 32);
  uint64_t v22 = *(void *)(a2 + 40);
  uint64_t v23 = *(void *)(a2 + 48);
  uint64_t v24 = *(void *)(a2 + 56);
  uint64_t v25 = *(void *)(a2 + 64);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v58 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  sub_1C00F5BA4(v2, (uint64_t)v56);
  sub_1C00F5BA4((uint64_t)v56, (uint64_t)v57);
  int v11 = sub_1C00F5C00((uint64_t)v57);
  if (v11)
  {
    if (v11 == 1)
    {
      uint64_t v12 = sub_1C00F5EAC((uint64_t)v57);
      sub_1BFCF2D74(v12, (uint64_t)v55);
      if (sub_1C00F5F20((uint64_t)v55) == 1)
      {
        uint64_t v27 = *(void *)sub_1C00F5F2C((uint64_t)v55);
        uint64_t v41 = v5;
        char v42 = v6;
        char v43 = v7;
        uint64_t v44 = v8;
        uint64_t v45 = v20;
        uint64_t v46 = v21;
        uint64_t v47 = v22;
        uint64_t v48 = v23;
        uint64_t v49 = v24;
        uint64_t v50 = v25;
        uint64_t v51 = v26;
        uint64_t v52 = v58;
        uint64_t v53 = v9;
        uint64_t v54 = v10;
        return sub_1BFF79540(a1, (uint64_t)&v41);
      }
      else
      {
        uint64_t v15 = sub_1C00F5F2C((uint64_t)v55);
        sub_1C00F6034(v15, (uint64_t)&v41);
        int v16 = sub_1C00F6090((uint64_t)&v41);
        uint64_t result = sub_1C00F609C((uint64_t)&v41);
        if (v16 == 1)
        {
          uint64_t v19 = *(void *)(*(void *)(result + 112) + 16);
          if (v19)
          {
            uint64_t v18 = a1;
            swift_bridgeObjectRetain();
            uint64_t v17 = 0;
            while (1)
            {
              uint64_t v27 = v5;
              char v28 = v6;
              char v29 = v7;
              uint64_t v30 = v8;
              uint64_t v31 = v20;
              uint64_t v32 = v21;
              uint64_t v33 = v22;
              uint64_t v34 = v23;
              uint64_t v35 = v24;
              uint64_t v36 = v25;
              uint64_t v37 = v26;
              uint64_t v38 = v58;
              uint64_t v39 = v9;
              uint64_t v40 = v10;
              swift_retain();
              sub_1BFF79540(v18, (uint64_t)&v27);
              if (v3) {
                break;
              }
              ++v17;
              swift_release();
              if (v19 == v17) {
                return swift_bridgeObjectRelease();
              }
            }
            swift_bridgeObjectRelease();
            return swift_release();
          }
        }
        else
        {
          uint64_t v27 = v5;
          char v28 = v6;
          char v29 = v7;
          uint64_t v30 = v8;
          uint64_t v31 = v20;
          uint64_t v32 = v21;
          uint64_t v33 = v22;
          uint64_t v34 = v23;
          uint64_t v35 = v24;
          uint64_t v36 = v25;
          uint64_t v37 = v26;
          uint64_t v38 = v58;
          uint64_t v39 = v9;
          uint64_t v40 = v10;
          return sub_1BFF7B500(a1, &v27);
        }
      }
    }
    else
    {
      return sub_1C00F5EAC((uint64_t)v57);
    }
  }
  else
  {
    uint64_t v14 = sub_1C00F5EAC((uint64_t)v57);
    sub_1C00F61EC(v14, (uint64_t)v55);
    uint64_t v41 = v5;
    char v42 = v6;
    char v43 = v7;
    uint64_t v44 = v8;
    uint64_t v45 = v20;
    uint64_t v46 = v21;
    uint64_t v47 = v22;
    uint64_t v48 = v23;
    uint64_t v49 = v24;
    uint64_t v50 = v25;
    uint64_t v51 = v26;
    uint64_t v52 = v58;
    uint64_t v53 = v9;
    uint64_t v54 = v10;
    return sub_1C05CD68C(a1, (uint64_t)&v41);
  }
  return result;
}

uint64_t sub_1C05CD68C(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = *(void *)a2;
  char v16 = *(unsigned char *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 9);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v22 = *(void *)(a2 + 48);
  uint64_t v23 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v20 = *(void *)(a2 + 96);
  uint64_t v21 = *(void *)(a2 + 64);
  sub_1C00F61EC(v2, (uint64_t)v38);
  sub_1C00F61EC((uint64_t)v38, (uint64_t)v39);
  sub_1C00F6034((uint64_t)v39, (uint64_t)v40);
  int v11 = sub_1C00F6090((uint64_t)v40);
  uint64_t result = sub_1C00F609C((uint64_t)v40);
  if (v11 == 1)
  {
    uint64_t v19 = v9;
    uint64_t v13 = *(void *)(*(void *)(result + 112) + 16);
    if (v13)
    {
      char v18 = v4;
      swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      while (1)
      {
        uint64_t v24 = v41;
        char v25 = v16;
        char v26 = v18;
        uint64_t v27 = v15;
        uint64_t v28 = v5;
        uint64_t v29 = v23;
        uint64_t v30 = v6;
        uint64_t v31 = v22;
        uint64_t v32 = v7;
        uint64_t v33 = v21;
        uint64_t v34 = v8;
        uint64_t v35 = v10;
        uint64_t v36 = v19;
        uint64_t v37 = v20;
        swift_retain();
        sub_1BFF79540(a1, (uint64_t)&v24);
        if (v3) {
          break;
        }
        ++v14;
        swift_release();
        if (v13 == v14) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    uint64_t v24 = v41;
    char v25 = v16;
    char v26 = v4;
    uint64_t v27 = v15;
    uint64_t v28 = v5;
    uint64_t v29 = v23;
    uint64_t v30 = v6;
    uint64_t v31 = v22;
    uint64_t v32 = v7;
    uint64_t v33 = v21;
    uint64_t v34 = v8;
    uint64_t v35 = v10;
    uint64_t v36 = v9;
    uint64_t v37 = v20;
    return sub_1BFF7B500(a1, &v24);
  }
  return result;
}

uint64_t sub_1C05CD8C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v14 = a2[7];
  uint64_t v15 = a2[8];
  uint64_t v16 = a2[9];
  uint64_t v17 = a2[10];
  uint64_t v18 = a2[11];
  uint64_t v19 = a2[12];
  sub_1BFCF2D74(v2, (uint64_t)v49);
  sub_1BFCF2D74((uint64_t)v49, (uint64_t)v50);
  int v11 = sub_1C00F5F20((uint64_t)v50);
  uint64_t v12 = (uint64_t *)sub_1C00F5F2C((uint64_t)v50);
  if (v11 == 1)
  {
    uint64_t v21 = *v12;
    uint64_t v35 = v3;
    char v36 = v4;
    char v37 = v5;
    uint64_t v38 = v7;
    uint64_t v39 = v6;
    uint64_t v40 = v9;
    uint64_t v41 = v8;
    uint64_t v42 = v10;
    uint64_t v43 = v14;
    uint64_t v44 = v15;
    uint64_t v45 = v16;
    uint64_t v46 = v17;
    uint64_t v47 = v18;
    uint64_t v48 = v19;
    return sub_1BFF79540(a1, (uint64_t)&v35);
  }
  else
  {
    sub_1C00F6034((uint64_t)v12, (uint64_t)&v35);
    uint64_t v21 = v3;
    char v22 = v4;
    char v23 = v5;
    uint64_t v24 = v7;
    uint64_t v25 = v6;
    uint64_t v26 = v9;
    uint64_t v27 = v8;
    uint64_t v28 = v10;
    uint64_t v29 = v14;
    uint64_t v30 = v15;
    uint64_t v31 = v16;
    uint64_t v32 = v17;
    uint64_t v33 = v18;
    uint64_t v34 = v19;
    return sub_1C05CB9B4(a1, (uint64_t)&v21);
  }
}

uint64_t sub_1C05CDA28(uint64_t a1, uint64_t a2)
{
  return sub_1C05CD340(a1, a2);
}

uint64_t sub_1C05CDA40(uint64_t a1, uint64_t *a2)
{
  return sub_1C05CD8C4(a1, a2);
}

uint64_t sub_1C05CDA58(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D66C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t *))sub_1BFF79540);
}

uint64_t sub_1C05CDA84(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  long long v12 = *((_OWORD *)a2 + 2);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v10 = *((_OWORD *)a2 + 4);
  long long v11 = *((_OWORD *)a2 + 3);
  long long v9 = *((_OWORD *)a2 + 5);
  uint64_t v7 = a2[12];
  sub_1C00F6034(v2, (uint64_t)v24);
  sub_1C00F6034((uint64_t)v24, (uint64_t)v23);
  uint64_t v14 = v4;
  char v15 = v5;
  char v16 = v6;
  long long v17 = v13;
  long long v18 = v12;
  long long v19 = v11;
  long long v20 = v10;
  long long v21 = v9;
  uint64_t v22 = v7;
  return sub_1C05CB9B4(a1, (uint64_t)&v14);
}

uint64_t sub_1C05CDB5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  long long v12 = *((_OWORD *)a2 + 2);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v10 = *((_OWORD *)a2 + 4);
  long long v11 = *((_OWORD *)a2 + 3);
  long long v9 = *((_OWORD *)a2 + 5);
  uint64_t v7 = a2[12];
  sub_1C00F61EC(v2, (uint64_t)v24);
  sub_1C00F61EC((uint64_t)v24, (uint64_t)v25);
  sub_1C00F6034((uint64_t)v25, (uint64_t)v23);
  uint64_t v14 = v4;
  char v15 = v5;
  char v16 = v6;
  long long v17 = v13;
  long long v18 = v12;
  long long v19 = v11;
  long long v20 = v10;
  long long v21 = v9;
  uint64_t v22 = v7;
  return sub_1C05CB9B4(a1, (uint64_t)&v14);
}

void sub_1C05CDC40(unint64_t *a1, uint64_t *a2)
{
}

void sub_1C05CDC58(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CDC7C(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CDCAC()
{
}

uint64_t sub_1C05CDCC4(uint64_t a1)
{
  return sub_1C1149778(a1);
}

uint64_t sub_1C05CDCE0(unint64_t a1, uint64_t a2)
{
  return sub_1BFF42EB8(a1, a2);
}

uint64_t sub_1C05CDD04(unint64_t a1, uint64_t a2)
{
  return sub_1BFF43310(a1, a2);
}

unint64_t sub_1C05CDD1C(unint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v3;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v5;
  uint64_t v6 = *v2;
  if ((unint64_t)*v2 >= 3)
  {
    unint64_t v7 = result;
    unint64_t v8 = *(void *)(v6 + 16);
    unint64_t v9 = *(void *)(v6 + 24);
    sub_1BFEF6A90(v8);
    sub_1BFEF6A90(v9);
    sub_1BFFB3BF0(v7, (uint64_t)v10, v8, v9);
    sub_1BFEF70CC(v8);
    return sub_1BFEF70CC(v9);
  }
  return result;
}

uint64_t sub_1C05CDDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D4444(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))sub_1C1144AF8);
}

void sub_1C05CDDEC(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05CDE10(uint64_t a1, uint64_t a2)
{
  return sub_1C0023908(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BFF9479C);
}

uint64_t sub_1C05CDE48(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v23 = *((unsigned char *)a2 + 9);
  char v24 = *((unsigned char *)a2 + 8);
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[2];
  uint64_t v19 = a2[5];
  uint64_t v20 = a2[4];
  uint64_t v17 = a2[7];
  uint64_t v18 = a2[6];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[8];
  uint64_t v13 = a2[11];
  uint64_t v14 = a2[10];
  uint64_t v12 = a2[12];
  uint64_t result = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 88);
  int v7 = *(unsigned __int8 *)(v2 + 136);
  if (result && (uint64_t v8 = *(void *)(result + 16)) != 0)
  {
    int v10 = *(unsigned __int8 *)(v2 + 136);
    uint64_t v11 = *(void *)(v2 + 88);
    uint64_t v9 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      uint64_t v40 = *(void *)(v9 - 24);
      uint64_t v26 = v4;
      char v27 = v24;
      char v28 = v23;
      uint64_t v29 = v22;
      uint64_t v30 = v21;
      uint64_t v31 = v20;
      uint64_t v32 = v19;
      uint64_t v33 = v18;
      uint64_t v34 = v17;
      uint64_t v35 = v16;
      uint64_t v36 = v15;
      uint64_t v37 = v14;
      uint64_t v38 = v13;
      uint64_t v39 = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFF79540(a1, (uint64_t)&v26);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v9 += 40;
      if (!--v8)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v6 = v11;
        int v7 = v10;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_7:
    if (v7 != 254)
    {
      uint64_t v40 = v6;
      uint64_t v26 = v4;
      char v27 = v24;
      char v28 = v23;
      uint64_t v29 = v22;
      uint64_t v30 = v21;
      uint64_t v31 = v20;
      uint64_t v32 = v19;
      uint64_t v33 = v18;
      uint64_t v34 = v17;
      uint64_t v35 = v16;
      uint64_t v36 = v15;
      uint64_t v37 = v14;
      uint64_t v38 = v13;
      uint64_t v39 = v12;
      return sub_1BFF79540(a1, (uint64_t)&v26);
    }
  }
  return result;
}

uint64_t sub_1C05CE0B4(uint64_t a1, uint64_t *a2)
{
  return sub_1C05CDE48(a1, a2);
}

uint64_t sub_1C05CE0CC(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  char v55 = a1;
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(a2 + 80);
  v53[4] = *(_OWORD *)(a2 + 64);
  v53[5] = v9;
  uint64_t v54 = *(void *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 16);
  v53[0] = *(_OWORD *)a2;
  v53[1] = v10;
  long long v12 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 48);
  uint64_t v44 = a2;
  v53[2] = v12;
  v53[3] = v11;
  uint64_t v14 = v2[9];
  uint64_t v13 = v2[10];
  uint64_t v15 = v2[11];
  uint64_t v16 = v2[13];
  uint64_t v37 = v2[14];
  uint64_t v17 = *(void *)(v14 + 16);
  if (v17)
  {
    uint64_t v40 = v15;
    uint64_t v38 = v16;
    uint64_t v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = v14 + 48;
    while (1)
    {
      uint64_t v45 = *(void *)(v18 - 16);
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(v55, v44);
      if (v3) {
        break;
      }
      v18 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v17)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v8 = v39;
        uint64_t v16 = v38;
        uint64_t v15 = v40;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    if (!v13 || (uint64_t result = sub_1C0037CE4(v55, v44), !v3))
    {
      uint64_t v20 = *(void *)(v15 + 16);
      if (v20)
      {
        uint64_t v38 = v16;
        uint64_t v39 = v8;
        uint64_t v43 = v3;
        swift_bridgeObjectRetain_n();
        uint64_t v40 = v15;
        uint64_t v21 = (uint64_t *)(v15 + 48);
        while (1)
        {
          uint64_t v41 = v20;
          uint64_t v22 = *(v21 - 2);
          uint64_t v23 = *(v21 - 1);
          uint64_t v24 = *v21;
          uint64_t v25 = v21[1];
          uint64_t v27 = v21[2];
          uint64_t v26 = v21[3];
          unint64_t v29 = v21[4];
          uint64_t v28 = v21[5];
          uint64_t v45 = v22;
          uint64_t v46 = v23;
          uint64_t v47 = v24;
          uint64_t v48 = v25;
          uint64_t v49 = v27;
          uint64_t v50 = v26;
          unint64_t v51 = v29;
          uint64_t v52 = v28;
          uint64_t v42 = v28;
          sub_1BFF95098(v22, v23, v24, v25, v27, v26, v29);
          uint64_t v30 = v43;
          sub_1C05D2144(v55, v44);
          uint64_t v43 = v30;
          if (v30) {
            break;
          }
          v21 += 8;
          sub_1BFF94FE4(v22, v23, v24, v25, v27, v26, v29);
          uint64_t v20 = v41 - 1;
          if (v41 == 1)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v4 = v43;
            uint64_t v8 = v39;
            uint64_t v16 = v38;
            goto LABEL_13;
          }
        }
        sub_1BFF94FE4(v22, v23, v24, v25, v27, v26, v29);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_13:
        uint64_t v31 = *(void *)(v16 + 16);
        if (v31)
        {
          uint64_t v32 = v16 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
          uint64_t v33 = *(void *)(v36 + 72);
          swift_bridgeObjectRetain_n();
          while (1)
          {
            sub_1BFF83CC4(v32, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
            uint64_t v45 = *((void *)v8 + 2);
            swift_retain();
            sub_1BFF2871C(v55, v44);
            if (v4) {
              break;
            }
            swift_release();
            sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
            v32 += v33;
            if (!--v31)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_18;
            }
          }
          swift_release();
          sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
          return swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_18:
          uint64_t v34 = v37;
          swift_bridgeObjectRetain();
          sub_1BFF11C38(v55, (uint64_t)v53, v34);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05CE550(unint64_t *a1, uint64_t a2)
{
  return sub_1C05CE0CC(a1, a2);
}

uint64_t sub_1C05CE568(unint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for FormatOption();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  long long v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = *a2;
  int v55 = *((unsigned __int8 *)a2 + 8);
  int v54 = *((unsigned __int8 *)a2 + 9);
  uint64_t v53 = a2[2];
  uint64_t v52 = a2[3];
  uint64_t v51 = a2[4];
  uint64_t v50 = a2[5];
  uint64_t v49 = a2[6];
  uint64_t v48 = a2[7];
  uint64_t v47 = a2[8];
  uint64_t v46 = a2[9];
  uint64_t v45 = a2[10];
  uint64_t v44 = a2[11];
  uint64_t v43 = a2[12];
  swift_beginAccess();
  uint64_t v11 = v2[7];
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v38 = v2;
  if (v12)
  {
    uint64_t v13 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFF83CC4(v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v57 = *((void *)v10 + 2);
      uint64_t v65 = v56;
      char v66 = v55;
      char v67 = v54;
      uint64_t v68 = v53;
      uint64_t v69 = v52;
      uint64_t v70 = v51;
      uint64_t v71 = v50;
      uint64_t v72 = v49;
      uint64_t v73 = v48;
      uint64_t v74 = v47;
      uint64_t v75 = v46;
      uint64_t v76 = v45;
      uint64_t v77 = v44;
      uint64_t v78 = v43;
      swift_retain();
      sub_1BFF2871C(a1, (uint64_t)&v65);
      if (v3) {
        break;
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v2 = v38;
        goto LABEL_6;
      }
    }
    swift_release();
    sub_1C05DDC60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    uint64_t v15 = v2[8];
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v39 = a1;
      uint64_t v42 = v3;
      swift_bridgeObjectRetain_n();
      v37[1] = v15;
      uint64_t v17 = (uint64_t *)(v15 + 48);
      while (1)
      {
        uint64_t v40 = v16;
        uint64_t v18 = *(v17 - 1);
        uint64_t v19 = *v17;
        uint64_t v20 = v17[1];
        uint64_t v21 = v17[2];
        uint64_t v22 = v17[3];
        unint64_t v23 = v17[4];
        uint64_t v24 = v17[5];
        uint64_t v57 = *(v17 - 2);
        uint64_t v58 = v18;
        uint64_t v59 = v19;
        uint64_t v60 = v20;
        uint64_t v61 = v21;
        uint64_t v62 = v22;
        unint64_t v63 = v23;
        uint64_t v64 = v24;
        uint64_t v65 = v56;
        char v66 = v55;
        char v67 = v54;
        uint64_t v68 = v53;
        uint64_t v69 = v52;
        uint64_t v70 = v51;
        uint64_t v71 = v50;
        uint64_t v72 = v49;
        uint64_t v73 = v48;
        uint64_t v74 = v47;
        uint64_t v75 = v46;
        uint64_t v76 = v45;
        uint64_t v77 = v44;
        uint64_t v78 = v43;
        uint64_t v25 = v57;
        uint64_t v26 = v18;
        uint64_t v27 = v19;
        uint64_t v28 = v20;
        uint64_t v29 = v21;
        uint64_t v30 = v22;
        unint64_t v31 = v23;
        uint64_t v41 = v24;
        sub_1BFF95098(v57, v18, v19, v20, v21, v22, v23);
        uint64_t v32 = v42;
        sub_1C05D2144(v39, (uint64_t)&v65);
        uint64_t v42 = v32;
        if (v32) {
          break;
        }
        v17 += 8;
        sub_1BFF94FE4(v25, v26, v27, v28, v29, v30, v31);
        uint64_t v16 = v40 - 1;
        if (v40 == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v4 = v42;
          a1 = v39;
          uint64_t v2 = v38;
          goto LABEL_11;
        }
      }
      sub_1BFF94FE4(v25, v26, v27, v28, v29, v30, v31);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      uint64_t result = swift_beginAccess();
      uint64_t v34 = v2[9];
      uint64_t v35 = *(void *)(v34 + 16);
      if (v35)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v36 = v34 + 48;
        while (1)
        {
          uint64_t v79 = *(void *)(v36 - 16);
          uint64_t v65 = v56;
          char v66 = v55;
          char v67 = v54;
          uint64_t v68 = v53;
          uint64_t v69 = v52;
          uint64_t v70 = v51;
          uint64_t v71 = v50;
          uint64_t v72 = v49;
          uint64_t v73 = v48;
          uint64_t v74 = v47;
          uint64_t v75 = v46;
          uint64_t v76 = v45;
          uint64_t v77 = v44;
          uint64_t v78 = v43;
          swift_bridgeObjectRetain();
          swift_retain_n();
          sub_1BFF0B0B8(a1, (uint64_t)&v65);
          if (v4) {
            break;
          }
          v36 += 40;
          swift_bridgeObjectRelease();
          swift_release_n();
          if (!--v35) {
            return swift_bridgeObjectRelease_n();
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
    }
  }
  return result;
}

uint64_t sub_1C05CEBEC(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05CE568(a1, a2);
}

void sub_1C05CEC10(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05CEC34(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a1;
  uint64_t v5 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *a2;
  int v28 = *((unsigned __int8 *)a2 + 8);
  int v25 = *((unsigned __int8 *)a2 + 9);
  uint64_t v26 = a2[2];
  uint64_t v24 = a2[3];
  uint64_t v23 = a2[4];
  uint64_t v22 = a2[5];
  uint64_t v8 = a2[7];
  uint64_t v21 = a2[6];
  uint64_t v10 = a2[8];
  uint64_t v9 = a2[9];
  uint64_t v11 = a2[10];
  uint64_t v12 = a2[11];
  uint64_t v13 = a2[12];
  sub_1BFF83CC4(v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 2) >= 6)
  {
    if (result)
    {
      return sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
    }
    else
    {
      uint64_t v15 = *((void *)v7 + 1);
      uint64_t v18 = *(void *)v7;
      uint64_t v19 = v15;
      uint64_t v16 = *((void *)v7 + 2);
      int v20 = v7[25];
      unsigned int v17 = v7[24];
      uint64_t v44 = v18;
      uint64_t v45 = v15;
      uint64_t v46 = v16;
      char v47 = v17;
      char v48 = v20;
      uint64_t v30 = v27;
      char v31 = v28;
      char v32 = v25;
      uint64_t v33 = v26;
      uint64_t v34 = v24;
      uint64_t v35 = v23;
      uint64_t v36 = v22;
      uint64_t v37 = v21;
      uint64_t v38 = v8;
      uint64_t v39 = v10;
      uint64_t v40 = v9;
      uint64_t v41 = v11;
      uint64_t v42 = v12;
      uint64_t v43 = v13;
      sub_1BFF8449C(v29, (uint64_t)&v30);
      return sub_1C05D881C(v18, v19, v16, v17, v20, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
    }
  }
  return result;
}

uint64_t sub_1C05CEEA8(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05CEC34(a1, a2);
}

void sub_1C05CEEC0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v7 = *((void *)v2 + 2);
  __int16 v8 = *((_WORD *)v2 + 12);
  long long v20 = *v2;
  uint64_t v21 = v7;
  __int16 v22 = v8;
  uint64_t v11 = v3;
  char v12 = v4;
  char v13 = v5;
  long long v9 = *((_OWORD *)a2 + 2);
  long long v14 = *((_OWORD *)a2 + 1);
  long long v15 = v9;
  long long v10 = *((_OWORD *)a2 + 4);
  long long v16 = *((_OWORD *)a2 + 3);
  long long v17 = v10;
  long long v18 = *((_OWORD *)a2 + 5);
  uint64_t v19 = v6;
  sub_1BFF8449C(a1, (uint64_t)&v11);
}

uint64_t sub_1C05CEF48(unint64_t *a1, uint64_t a2)
{
  return sub_1C0037CE4(a1, a2);
}

unint64_t sub_1C05CEF6C(unint64_t *a1, uint64_t *a2)
{
  return sub_1BFF94228(a1, a2);
}

void sub_1C05CEF84(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05CEFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D4444(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))sub_1C1144990);
}

uint64_t sub_1C05CEFD4(uint64_t a1, uint64_t a2)
{
  return sub_1BFF7BDF8(a1, a2);
}

uint64_t sub_1C05CEFF8(uint64_t result, uint64_t a2)
{
  uint64_t v5 = result;
  long long v6 = *(_OWORD *)(a2 + 80);
  v16[4] = *(_OWORD *)(a2 + 64);
  v16[5] = v6;
  uint64_t v17 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v16[2] = *(_OWORD *)(a2 + 32);
  v16[3] = v8;
  uint64_t v9 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 96);
  int v11 = *(unsigned __int8 *)(v2 + 144);
  uint64_t v12 = *(void *)(v2 + 200);
  if ((~*(void *)(v2 + 24) & 0xF000000000000007) == 0
    || (uint64_t v18 = *(void *)(v2 + 24), result = sub_1BFF7ACAC(result, (uint64_t *)a2), !v3))
  {
    if (v9 && (uint64_t v13 = *(void *)(v9 + 16)) != 0)
    {
      uint64_t v15 = v5;
      swift_bridgeObjectRetain();
      uint64_t v14 = v9 + 64;
      while (1)
      {
        uint64_t v18 = *(void *)(v14 - 24);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFF79540(v15, a2);
        if (v3) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v14 += 40;
        if (!--v13)
        {
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v5 = v15;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    else
    {
LABEL_9:
      if (v11 == 254 || (uint64_t v18 = v10, result = sub_1BFF79540(v5, a2), !v3))
      {
        if (v12) {
          return sub_1C1132C68(v5, (uint64_t)v16, v12);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C05CF1E0(uint64_t a1, uint64_t a2)
{
  return sub_1C05CEFF8(a1, a2);
}

uint64_t sub_1C05CF1F8()
{
  return sub_1C05C6B4C();
}

void sub_1C05CF210(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CF228(unint64_t *a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v6;
  uint64_t v14 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  uint64_t v13[3] = v8;
  uint64_t v9 = v2[4];
  uint64_t v10 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v12 = v2[8];
  if ((~v2[1] & 0xF000000000000007) == 0 && (v2[3] & 7) == 7 || (sub_1C05CF384(a1, a2), !v3))
  {
    if ((~(v9 & v11) & 0x3000000000000007) == 0)
    {
LABEL_5:
      sub_1C0001134(a1, v13, v12);
      return;
    }
    if ((v11 & 0x2000000000000000) != 0)
    {
      sub_1BFE2FB6C(a1, a2);
      if (!v3) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_1C0007EEC(v9, v10, v11);
      sub_1C05C5DBC(a1, (uint64_t)v13, v9, v10);
      sub_1C05DD1F8(v9, v10, v11);
      if (!v3) {
        goto LABEL_5;
      }
    }
  }
}

void sub_1C05CF384(unint64_t *a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v5;
  uint64_t v13 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v7;
  uint64_t v8 = *v2;
  uint64_t v9 = v2[3];
  if ((v9 & 4) != 0)
  {
    sub_1BFE2F328(a1, a2);
  }
  else
  {
    uint64_t v10 = v2[1];
    uint64_t v11 = v2[2];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C000D760(a1, v12, v8);
    if (!v3)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BFF84328(a1, (uint64_t)v12, v10, v11, v9, sub_1BFE2F328);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    sub_1C0007E38(v8, v10, v11, v9);
  }
}

void sub_1C05CF4C4(unint64_t *a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v4;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v6;
  uint64_t v7 = *v2;
  uint64_t v8 = v2[2];
  if ((v8 & 0x2000000000000000) != 0)
  {
    sub_1BFE2FB6C(a1, a2);
  }
  else
  {
    uint64_t v9 = v2[1];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C05C5DBC(a1, (uint64_t)v10, v7, v9);
    sub_1C0007E9C(v7, v9, v8);
  }
}

void sub_1C05CF584(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CF59C(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v5;
  uint64_t v13 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v7;
  int v8 = *(unsigned __int8 *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 56);
  if (v8 != 255 && (v8 & 1) != 0)
  {
    uint64_t v10 = *(void *)(v2 + 24);
    uint64_t v11 = *(void *)(v10 + 24);
    sub_1C01DCFFC((void *)v10, 1);
    sub_1C1137418(a1, (uint64_t)v12, v11);
    if (v3)
    {
      sub_1C05DCEE4((void *)v10, v8);
      return;
    }
    sub_1C05CA724(a1, (uint64_t)v12, *(void **)(v10 + 32));
    sub_1C05DCEE4((void *)v10, v8);
  }
  sub_1C1136FC4(a1, v12, v9);
}

void sub_1C05CF690(uint64_t a1, uint64_t a2)
{
}

void sub_1C05CF6A8(unint64_t *a1, uint64_t a2, unint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v4;
  uint64_t v14 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  uint64_t v13[3] = v6;
  switch(a3 >> 61)
  {
    case 1uLL:
      sub_1C05CF228(a1, a2);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v9 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C1138B88((uint64_t)a1, v13, v8);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
        sub_1C05CF6A8(a1, v13, v9);
        swift_bridgeObjectRelease();
        swift_release_n();
      }
      break;
    case 3uLL:
      uint64_t v10 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v12 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05C5C48(a1, (uint64_t)v13, v10, v11, v12);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 4uLL:
      return;
    default:
      sub_1C05CF890(a1, a2);
      break;
  }
}

void sub_1C05CF890(unint64_t *a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v6;
  uint64_t v14 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  uint64_t v13[3] = v8;
  uint64_t v9 = v2[4];
  uint64_t v10 = v2[5];
  uint64_t v12 = v2[6];
  unint64_t v11 = v2[7];
  sub_1C05CF384(a1, a2);
  if (!v3)
  {
    if ((v12 & 0x2000000000000000) != 0)
    {
      sub_1BFE2FB6C(a1, a2);
    }
    else
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05C5DBC(a1, (uint64_t)v13, v9, v10);
      sub_1C0007E9C(v9, v10, v12);
    }
    sub_1C05CFCF8(a1, (uint64_t)v13, v11);
  }
}

void sub_1C05CF9A8(unint64_t *a1, uint64_t a2)
{
  sub_1C05CF6A8(a1, a2, *v2);
}

void sub_1C05CF9C4(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v14[4] = *(_OWORD *)(a2 + 64);
  v14[5] = v4;
  uint64_t v15 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 61;
  v14[2] = *(_OWORD *)(a2 + 32);
  uint64_t v14[3] = v6;
  uint64_t v9 = v3;
  switch(v8)
  {
    case 1uLL:
      sub_1C05CF59C(a1, a2);
      break;
    case 2uLL:
      uint64_t v13 = *(void *)(*(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 24);
      swift_retain();
      sub_1C11333C8(a1, v14, v13);
      if (!v9) {
        sub_1C05CF9C4(a1, v14);
      }
      swift_release();
      break;
    case 3uLL:
    case 4uLL:
      return;
    default:
      if (*(unsigned char *)(v7 + 48))
      {
        uint64_t v11 = *(void *)(v7 + 40);
        uint64_t v12 = *(void *)(v11 + 24);
        swift_retain();
        sub_1C1137418(a1, (uint64_t)v14, v12);
        if (!v9) {
          sub_1C05CA724(a1, (uint64_t)v14, *(void **)(v11 + 32));
        }
        sub_1C01DD018((void *)v11, 1);
      }
      break;
  }
}

void sub_1C05CFB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  v11[4] = *(_OWORD *)(a2 + 64);
  v11[5] = v5;
  uint64_t v12 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  uint64_t v11[3] = v7;
  if (*(unsigned char *)(v2 + 32) == 1)
  {
    uint64_t v9 = *(void *)(v2 + 24);
    uint64_t v10 = *(void *)(v9 + 24);
    swift_retain();
    sub_1C1137418(a1, (uint64_t)v11, v10);
    if (!v4) {
      sub_1C05CA724(a1, (uint64_t)v11, *(void **)(v9 + 32));
    }
    sub_1C01DD018((void *)v9, 1);
  }
}

void sub_1C05CFC14(uint64_t a1, uint64_t a2)
{
}

void sub_1C05CFC2C(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CFC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  v11[4] = *(_OWORD *)(a2 + 64);
  v11[5] = v5;
  uint64_t v12 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  uint64_t v11[3] = v7;
  if (v2[8] == 1)
  {
    uint64_t v9 = *(void ***)v2;
    uint64_t v10 = *(void *)(*(void *)v2 + 24);
    swift_retain();
    sub_1C1137418(a1, (uint64_t)v11, v10);
    if (!v4) {
      sub_1C05CA724(a1, (uint64_t)v11, v9[4]);
    }
    sub_1C01DD018(v9, 1);
  }
}

void sub_1C05CFCF8(unint64_t *a1, uint64_t a2, unint64_t a3)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v9[4] = *(_OWORD *)(a2 + 64);
  v9[5] = v3;
  uint64_t v10 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  uint64_t v9[3] = v5;
  switch(a3 >> 62)
  {
    case 1uLL:
      sub_1BFF8449C(a1, a2);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v8 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C1144648(a1, (uint64_t)v9, v7, v8);
      swift_release();
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

void sub_1C05CFE04(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05CFE1C(unint64_t *a1, uint64_t a2)
{
  sub_1C05CFCF8(a1, a2, *v2);
}

void sub_1C05CFE38(uint64_t a1, uint64_t a2)
{
}

void sub_1C05CFE50(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05CFE68(uint64_t result, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v14[4] = *(_OWORD *)(a2 + 64);
  v14[5] = v4;
  uint64_t v15 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 62;
  v14[2] = *(_OWORD *)(a2 + 32);
  uint64_t v14[3] = v6;
  if (v8)
  {
    uint64_t v10 = result;
    uint64_t v11 = v7 & 0x3FFFFFFFFFFFFFFFLL;
    if (v8 == 1)
    {
      uint64_t v12 = *(void *)(v11 + 24);
      uint64_t v16 = *(void *)(v11 + 16);
      swift_retain();
      swift_retain();
      sub_1C05CFE68(v10, a2);
      if (!v3)
      {
        uint64_t v16 = v12;
        sub_1C05CFE68(v10, a2);
      }
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 24);
      uint64_t v16 = *(void *)(v11 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05CFE68(v10, a2);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C1141404(v10, v14, v13);
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1C05CFFD4(uint64_t a1, uint64_t a2)
{
  return sub_1C05C8B84(a1, a2);
}

void sub_1C05CFFEC(unint64_t *a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v21[4] = *(_OWORD *)(a2 + 64);
  v21[5] = v6;
  uint64_t v22 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v21[0] = *(_OWORD *)a2;
  v21[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v21[2] = *(_OWORD *)(a2 + 32);
  uint64_t v21[3] = v8;
  v18[0] = v2[4];
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v9 = v2[6];
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v10; ++i)
      {
        v18[0] = *(void *)(v9 + 8 * i + 32);
        sub_1BFF32264(v18[0]);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v18[0]);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7]) {
      sub_1C0023908((uint64_t)a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1C11421D4);
    }
    uint64_t v20 = v2[8];
    sub_1C05CFE68((uint64_t)a1, a2);
    uint64_t v12 = MEMORY[0x1E4FBB718];
    sub_1C05DC640((uint64_t)(v2 + 9), (uint64_t)v17, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    sub_1C05DC640((uint64_t)v17, (uint64_t)v18, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, v12, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    if (sub_1C00F6584(v18) != 1 && (v19 & 1) == 0) {
      sub_1C006F0EC(v18[10], v18[11], v18[12], v18[13], v19);
    }
    swift_beginAccess();
    unint64_t v13 = v2[29];
    if (v13 >> 62 == 1)
    {
      uint64_t v14 = v13 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v14 + 24);
      sub_1BFE6FA30(v15);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v21, v15, v16);
      sub_1BFF0056C(v15);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C05D026C(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D0290(uint64_t a1, uint64_t a2)
{
  return sub_1C05CFE68(a1, a2);
}

uint64_t sub_1C05D02A8(uint64_t a1, uint64_t a2)
{
  return sub_1C0023908(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1C11421D4);
}

uint64_t sub_1C05D02E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a1;
  uint64_t v32 = a3;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  char v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = *v9;
  int v11 = *((unsigned __int8 *)v9 + 8);
  int v43 = *((unsigned __int8 *)v9 + 9);
  uint64_t v12 = v9[2];
  uint64_t v41 = v9[3];
  uint64_t v42 = v12;
  uint64_t v40 = v9[4];
  uint64_t v34 = v9[5];
  uint64_t v39 = v9[6];
  uint64_t v38 = v9[7];
  uint64_t v35 = v9[8];
  uint64_t v37 = v9[9];
  uint64_t v13 = v9[11];
  uint64_t v36 = v9[10];
  uint64_t v14 = v9[12];
  unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v33 = v17;
  uint64_t v30 = v15;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v15)((char *)&v25 - v16, v17, v4, v8);
  uint64_t v29 = sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v28 = v3;
    uint64_t v18 = *((void *)&v59 + 1);
    uint64_t v19 = v60;
    __swift_project_boxed_opaque_existential_1(&v58, *((uint64_t *)&v59 + 1));
    uint64_t v25 = v10;
    uint64_t v44 = v10;
    int v26 = v11;
    char v45 = v11;
    char v46 = v43;
    uint64_t v47 = v42;
    uint64_t v48 = v41;
    uint64_t v49 = v40;
    uint64_t v50 = v34;
    uint64_t v51 = v39;
    uint64_t v52 = v38;
    uint64_t v53 = v35;
    uint64_t v54 = v37;
    uint64_t v55 = v36;
    uint64_t v56 = v13;
    uint64_t v57 = v14;
    uint64_t v20 = v28;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v19 + 8))(v61, &v44, v18, v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    if (v20) {
      return result;
    }
    uint64_t v27 = v14;
    uint64_t v28 = v13;
    LOBYTE(v11) = v26;
    uint64_t v10 = v25;
  }
  else
  {
    uint64_t v27 = v14;
    uint64_t v28 = v13;
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    sub_1BFE4D118((uint64_t)&v58, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
  v30(v31, v33 + *(int *)(v32 + 52), v4);
  if (swift_dynamicCast())
  {
    uint64_t v22 = v10;
    uint64_t v23 = *((void *)&v59 + 1);
    uint64_t v24 = v60;
    __swift_project_boxed_opaque_existential_1(&v58, *((uint64_t *)&v59 + 1));
    uint64_t v44 = v22;
    char v45 = v11;
    char v46 = v43;
    uint64_t v47 = v42;
    uint64_t v48 = v41;
    uint64_t v49 = v40;
    uint64_t v50 = v34;
    uint64_t v51 = v39;
    uint64_t v52 = v38;
    uint64_t v53 = v35;
    uint64_t v54 = v37;
    uint64_t v55 = v36;
    uint64_t v56 = v28;
    uint64_t v57 = v27;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 8))(v61, &v44, v23, v24);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  }
  else
  {
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    return sub_1BFE4D118((uint64_t)&v58, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

uint64_t sub_1C05D0740(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v14 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = a2[12];
  uint64_t v30 = *a2;
  char v20 = v5;
  char v31 = v5;
  char v32 = v6;
  uint64_t v33 = v7;
  uint64_t v34 = v8;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  uint64_t v26 = v12;
  uint64_t v27 = v11;
  uint64_t v37 = v11;
  uint64_t v38 = v12;
  uint64_t v24 = v14;
  uint64_t v25 = v13;
  uint64_t v39 = v13;
  uint64_t v40 = v14;
  uint64_t v22 = v16;
  uint64_t v23 = v15;
  uint64_t v41 = v15;
  uint64_t v42 = v16;
  uint64_t v21 = v17;
  uint64_t v43 = v17;
  uint64_t v18 = type metadata accessor for FormatRange();
  uint64_t v44 = a1;
  uint64_t result = sub_1C05D02E0(a1, (uint64_t)&v30, v18);
  if (!v2)
  {
    uint64_t v30 = v4;
    char v31 = v20;
    char v32 = v6;
    uint64_t v33 = v7;
    uint64_t v34 = v8;
    uint64_t v35 = v29;
    uint64_t v36 = v28;
    uint64_t v37 = v27;
    uint64_t v38 = v26;
    uint64_t v39 = v25;
    uint64_t v40 = v24;
    uint64_t v41 = v23;
    uint64_t v42 = v22;
    uint64_t v43 = v21;
    return sub_1C05D02E0(v44, (uint64_t)&v30, v18);
  }
  return result;
}

void sub_1C05D0928(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v26 = *((unsigned char *)a2 + 9);
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[6];
  uint64_t v24 = a2[5];
  uint64_t v25 = a2[4];
  uint64_t v8 = a2[7];
  uint64_t v9 = a2[9];
  uint64_t v22 = a2[10];
  uint64_t v23 = a2[8];
  uint64_t v10 = a2[11];
  uint64_t v21 = a2[12];
  swift_beginAccess();
  uint64_t v27 = v3;
  char v16 = v4;
  char v28 = v4;
  char v29 = v26;
  uint64_t v30 = v5;
  uint64_t v31 = v6;
  uint64_t v32 = v25;
  uint64_t v33 = v24;
  uint64_t v20 = v7;
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  uint64_t v36 = v23;
  uint64_t v37 = v9;
  uint64_t v38 = v22;
  uint64_t v39 = v10;
  uint64_t v40 = v21;
  sub_1BFF0D1B8(a1, (uint64_t)&v27);
  if (!v18)
  {
    uint64_t v15 = v5;
    uint64_t v19 = v8;
    swift_beginAccess();
    uint64_t v11 = *(void *)(v2 + 40);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v12; ++i)
      {
        unint64_t v14 = *(void *)(v11 + 8 * i + 32);
        unint64_t v41 = v14;
        uint64_t v27 = v3;
        char v28 = v16;
        char v29 = v26;
        uint64_t v30 = v15;
        uint64_t v31 = v6;
        uint64_t v32 = v25;
        uint64_t v33 = v24;
        uint64_t v34 = v20;
        uint64_t v35 = v19;
        uint64_t v36 = v23;
        uint64_t v37 = v9;
        uint64_t v38 = v22;
        uint64_t v39 = v10;
        uint64_t v40 = v21;
        sub_1BFF32264(v14);
        sub_1BFF0D378((uint64_t)a1, (uint64_t)&v27);
        sub_1BFF31E90(v14);
      }
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1C05D0B24(unint64_t *a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(a2 + 80);
  v22[4] = *(_OWORD *)(a2 + 64);
  v22[5] = v10;
  uint64_t v23 = *(void *)(a2 + 96);
  long long v11 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  v22[2] = *(_OWORD *)(a2 + 32);
  v22[3] = v12;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v2 + 88);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v20 = v2;
    uint64_t v15 = v13 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v16 = *(void *)(v7 + 72);
    uint64_t v24 = v13;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFF83CC4(v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v21 = *((void *)v9 + 2);
      swift_retain();
      sub_1BFF2871C(a1, a2);
      if (v3) {
        break;
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v15 += v16;
      if (!--v14)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v2 = v20;
        goto LABEL_6;
      }
    }
    swift_release();
    sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    unint64_t v17 = *(void *)(v2 + 96);
    swift_bridgeObjectRetain();
    sub_1BFF0CA38(a1, v22, v17);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C05D0D4C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v34 = a1;
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *a2;
  int v32 = *((unsigned __int8 *)a2 + 8);
  int v31 = *((unsigned __int8 *)a2 + 9);
  uint64_t v30 = a2[2];
  uint64_t v29 = a2[3];
  uint64_t v28 = a2[4];
  uint64_t v27 = a2[5];
  uint64_t v26 = a2[6];
  uint64_t v25 = a2[7];
  uint64_t v24 = a2[8];
  uint64_t v23 = a2[9];
  uint64_t v9 = a2[11];
  uint64_t v22 = a2[10];
  uint64_t v10 = a2[12];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v2 + 40);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v19 = v2;
    uint64_t v20 = v6;
    swift_bridgeObjectRetain_n();
    uint64_t v21 = v11;
    uint64_t v13 = v11 + 48;
    while (1)
    {
      uint64_t v35 = *(void *)(v13 - 16);
      uint64_t v36 = v33;
      char v37 = v32;
      char v38 = v31;
      uint64_t v39 = v30;
      uint64_t v40 = v29;
      uint64_t v41 = v28;
      uint64_t v42 = v27;
      uint64_t v43 = v26;
      uint64_t v44 = v25;
      uint64_t v45 = v24;
      uint64_t v46 = v23;
      uint64_t v47 = v22;
      uint64_t v48 = v9;
      uint64_t v49 = v10;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(v34, (uint64_t)&v36);
      if (v3) {
        break;
      }
      v13 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v20;
        uint64_t v2 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    uint64_t result = *(void *)(v2 + 56);
    uint64_t v15 = *(void *)(result + 16);
    if (v15)
    {
      uint64_t v16 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v17 = *(void *)(v6 + 72);
      uint64_t v21 = *(void *)(v2 + 56);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFF83CC4(v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v50 = *((void *)v8 + 2);
        uint64_t v36 = v33;
        char v37 = v32;
        char v38 = v31;
        uint64_t v39 = v30;
        uint64_t v40 = v29;
        uint64_t v41 = v28;
        uint64_t v42 = v27;
        uint64_t v43 = v26;
        uint64_t v44 = v25;
        uint64_t v45 = v24;
        uint64_t v46 = v23;
        uint64_t v47 = v22;
        uint64_t v48 = v9;
        uint64_t v49 = v10;
        swift_retain();
        sub_1BFF2871C(v34, (uint64_t)&v36);
        if (v3) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v16 += v17;
        if (!--v15) {
          return swift_bridgeObjectRelease_n();
        }
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1C05D1190(unint64_t *a1, uint64_t *a2)
{
  int v32 = a1;
  uint64_t v5 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *a2;
  int v30 = *((unsigned __int8 *)a2 + 8);
  int v29 = *((unsigned __int8 *)a2 + 9);
  uint64_t v28 = a2[2];
  uint64_t v27 = a2[3];
  uint64_t v26 = a2[4];
  uint64_t v25 = a2[5];
  uint64_t v24 = a2[6];
  uint64_t v23 = a2[7];
  uint64_t v22 = a2[8];
  uint64_t v21 = a2[9];
  uint64_t v9 = a2[11];
  uint64_t v20 = a2[10];
  uint64_t v10 = a2[12];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    v19[0] = v2;
    uint64_t v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v14 = *(void *)(v6 + 72);
    v19[1] = v11;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BFF83CC4(v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      uint64_t v33 = v31;
      char v34 = v30;
      char v35 = v29;
      uint64_t v36 = v28;
      uint64_t v37 = v27;
      uint64_t v38 = v26;
      uint64_t v39 = v25;
      uint64_t v40 = v24;
      uint64_t v41 = v23;
      uint64_t v42 = v22;
      uint64_t v43 = v21;
      uint64_t v44 = v20;
      uint64_t v45 = v9;
      uint64_t v46 = v10;
      sub_1BFF816A8(v32, (uint64_t)&v33);
      if (v3) {
        break;
      }
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v19[0];
        goto LABEL_6;
      }
    }
    sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    uint64_t result = swift_beginAccess();
    uint64_t v16 = *(void *)(v2 + 40);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v18 = v16 + 48;
      while (1)
      {
        uint64_t v47 = *(void *)(v18 - 16);
        uint64_t v33 = v31;
        char v34 = v30;
        char v35 = v29;
        uint64_t v36 = v28;
        uint64_t v37 = v27;
        uint64_t v38 = v26;
        uint64_t v39 = v25;
        uint64_t v40 = v24;
        uint64_t v41 = v23;
        uint64_t v42 = v22;
        uint64_t v43 = v21;
        uint64_t v44 = v20;
        uint64_t v45 = v9;
        uint64_t v46 = v10;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BFF0B0B8(v32, (uint64_t)&v33);
        if (v3) {
          break;
        }
        v18 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        if (!--v17) {
          return swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
  }
  return result;
}

void sub_1C05D15A4(unint64_t *a1, uint64_t a2)
{
  char v4 = v2;
  long long v7 = *(_OWORD *)(a2 + 80);
  v24[4] = *(_OWORD *)(a2 + 64);
  v24[5] = v7;
  uint64_t v25 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v24[0] = *(_OWORD *)a2;
  v24[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  v24[2] = *(_OWORD *)(a2 + 32);
  uint64_t v24[3] = v9;
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v10 = v2[6];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(v10 + 8 * i + 32);
        sub_1BFF32264(v13);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7]) {
      sub_1C001BF30((uint64_t)a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1C001C168);
    }
    uint64_t v14 = v2[8];
    if (v14)
    {
      swift_beginAccess();
      uint64_t v15 = *(void *)(v14 + 72);
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1C0000E48((uint64_t)a1, (uint64_t)v24, v15);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v16 = *(void *)(v14 + 88);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v18 = (uint64_t *)(v16 + 72);
        do
        {
          uint64_t v19 = *v18;
          if (*v18)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C0000E48((uint64_t)a1, (uint64_t)v24, v19);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v18 += 7;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease_n();
      }
    }
    sub_1C05D3050((uint64_t)a1, (uint64_t)v24);
    swift_beginAccess();
    unint64_t v20 = v4[11];
    if (v20 >> 62 == 1)
    {
      uint64_t v21 = v20 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v22 = *(void *)(v21 + 16);
      uint64_t v23 = *(void *)(v21 + 24);
      sub_1BFE6FA30(v22);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v24, v22, v23);
      sub_1BFF0056C(v22);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C05D1890(unint64_t *a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  v17[5] = v6;
  uint64_t v18 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v8;
  swift_beginAccess();
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(v2 + 48);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v10; ++i)
      {
        unint64_t v12 = *(void *)(v9 + 8 * i + 32);
        sub_1BFF32264(v12);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (*(__int16 *)(v2 + 96) < 0) {
      sub_1BFF8449C(a1, a2);
    }
    swift_beginAccess();
    if (*(void *)(v2 + 112))
    {
      swift_retain();
      sub_1C05D2B84((uint64_t)a1, a2);
      swift_release();
    }
    swift_beginAccess();
    swift_beginAccess();
    unint64_t v13 = *(void *)(v2 + 184);
    if (v13 >> 62 == 1)
    {
      uint64_t v14 = v13 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v14 + 24);
      sub_1BFE6FA30(v15);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v17, v15, v16);
      sub_1BFF0056C(v15);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C05D1AE0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v44 = a1;
  uint64_t v29 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  long long v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *a2;
  int v8 = *((unsigned __int8 *)a2 + 8);
  int v26 = *((unsigned __int8 *)a2 + 9);
  int v27 = v8;
  uint64_t v9 = a2[2];
  uint64_t v24 = a2[3];
  uint64_t v25 = v9;
  uint64_t v23 = a2[4];
  uint64_t v22 = a2[5];
  uint64_t v21 = a2[6];
  uint64_t v20 = a2[7];
  uint64_t v19 = a2[8];
  uint64_t v10 = a2[10];
  uint64_t v18 = a2[9];
  uint64_t v12 = a2[11];
  uint64_t v11 = a2[12];
  swift_beginAccess();
  uint64_t result = *(void *)(v2 + 32);
  uint64_t v14 = *(void *)(result + 16);
  if (v14)
  {
    uint64_t v15 = result + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v16 = *(void *)(v5 + 72);
    v17[1] = *(void *)(v2 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BFF83CC4(v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      uint64_t v30 = v28;
      char v31 = v27;
      char v32 = v26;
      uint64_t v33 = v25;
      uint64_t v34 = v24;
      uint64_t v35 = v23;
      uint64_t v36 = v22;
      uint64_t v37 = v21;
      uint64_t v38 = v20;
      uint64_t v39 = v19;
      uint64_t v40 = v18;
      uint64_t v41 = v10;
      uint64_t v42 = v12;
      uint64_t v43 = v11;
      sub_1BFF816A8(v44, (uint64_t)&v30);
      sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      if (v3) {
        break;
      }
      v15 += v16;
      --v14;
    }
    while (v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C05D1D38(unint64_t *a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v20[4] = *(_OWORD *)(a2 + 64);
  v20[5] = v6;
  uint64_t v21 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v20[0] = *(_OWORD *)a2;
  v20[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v20[2] = *(_OWORD *)(a2 + 32);
  v20[3] = v8;
  swift_beginAccess();
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v9 = v2[8];
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v10; ++i)
      {
        unint64_t v12 = *(void *)(v9 + 8 * i + 32);
        sub_1BFF32264(v12);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v13 = v2[9];
    if (v13 < 0)
    {
      uint64_t v14 = *(void *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C11449D0((uint64_t)a1, (uint64_t)v20, v14, v15);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    unint64_t v16 = v2[20];
    if (v16 >> 62 == 1)
    {
      uint64_t v17 = v16 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = *(void *)(v17 + 24);
      sub_1BFE6FA30(v18);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v20, v18, v19);
      sub_1BFF0056C(v18);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C05D1F54(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v7 = *(_OWORD *)(a2 + 80);
  v18[4] = *(_OWORD *)(a2 + 64);
  v18[5] = v7;
  uint64_t v19 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  void v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v9;
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v10 = *(void *)(v2 + 48);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(v10 + 8 * i + 32);
        sub_1BFF32264(v13);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unint64_t v14 = *(void *)(v2 + 56);
    if (v14 >> 62 == 1)
    {
      uint64_t v15 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      sub_1BFE6FA30(v16);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v18, v16, v17);
      sub_1BFF0056C(v16);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (*(void *)(v4 + 96))
    {
      swift_retain();
      sub_1C05D2C88((uint64_t)a1, (uint64_t)v18);
      swift_release();
    }
  }
}

void sub_1C05D212C(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D2144(unint64_t *a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  long long v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(a2 + 80);
  v70[4] = *(_OWORD *)(a2 + 64);
  v70[5] = v10;
  uint64_t v71 = *(void *)(a2 + 96);
  long long v11 = *(_OWORD *)(a2 + 16);
  v70[0] = *(_OWORD *)a2;
  v70[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  v70[2] = *(_OWORD *)(a2 + 32);
  v70[3] = v12;
  uint64_t v14 = *v2;
  uint64_t v13 = v2[1];
  uint64_t v15 = v2[2];
  uint64_t v16 = v2[3];
  unint64_t v17 = v2[6];
  uint64_t v72 = v2[7];
  uint64_t v18 = v2[4];
  uint64_t v19 = v2[5];
  switch(v17 >> 59)
  {
    case 1uLL:
      uint64_t v68 = v18;
      uint64_t v20 = v16;
      uint64_t v21 = v15;
      uint64_t v22 = v13;
      swift_retain();
      uint64_t v25 = a1;
      uint64_t v24 = v19;
      sub_1BFF7855C(v25, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v68 = v18;
      uint64_t v20 = v16;
      uint64_t v21 = v15;
      uint64_t v22 = v13;
      swift_retain();
      unint64_t v26 = (unint64_t)a1;
      uint64_t v24 = v19;
      sub_1BFF42EB8(v26, a2);
      goto LABEL_6;
    case 3uLL:
      uint64_t v68 = v18;
      uint64_t v20 = v16;
      uint64_t v21 = v15;
      uint64_t v22 = v13;
      swift_retain();
      int v27 = a1;
      uint64_t v24 = v19;
      sub_1C0037CE4(v27, a2);
      goto LABEL_6;
    case 4uLL:
    case 0x10uLL:
      return;
    case 5uLL:
      uint64_t v34 = *(void *)(v14 + 56);
      uint64_t v66 = v19;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v63 = v15;
      uint64_t v65 = v13;
      if (v34)
      {
        unint64_t v62 = v17;
        uint64_t v35 = *(void *)(v34 + 16);
        if (v35)
        {
          uint64_t v36 = v34 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
          uint64_t v61 = v34;
          sub_1BFF95098(v14, v13, v15, v16, v18, v19, v62);
          uint64_t v64 = *(void *)(v7 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1BFF83CC4(v36, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
            uint64_t v69 = *((void *)v9 + 2);
            swift_retain();
            sub_1BFF2871C(a1, a2);
            if (v3)
            {
              swift_release();
              sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
              goto LABEL_50;
            }
            swift_release();
            sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
            v36 += v64;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain();
        }
        unint64_t v17 = v62;
      }
      else
      {
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v59 = *(void *)(v14 + 64);
      swift_bridgeObjectRetain();
      sub_1C003ED08(a1, (uint64_t)v70, v59);
      swift_bridgeObjectRelease();
      uint64_t v28 = v14;
      uint64_t v29 = v65;
      uint64_t v30 = v63;
LABEL_28:
      uint64_t v31 = v67;
      uint64_t v32 = v68;
      uint64_t v33 = v66;
      goto LABEL_29;
    case 6uLL:
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      uint64_t v39 = v16;
      uint64_t v40 = v18;
      swift_beginAccess();
      uint64_t v41 = v19;
      uint64_t v42 = *(void *)(v14 + 56);
      uint64_t v65 = v37;
      uint64_t v63 = v38;
      uint64_t v43 = v38;
      uint64_t v44 = v41;
      uint64_t v67 = v39;
      uint64_t v45 = v39;
      uint64_t v46 = v40;
      sub_1BFF95098(v14, v37, v43, v45, v40, v41, v17);
      swift_bridgeObjectRetain();
      sub_1C002FF30((uint64_t)a1, v42);
      if (v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v28 = v14;
        uint64_t v29 = v65;
        uint64_t v30 = v63;
        uint64_t v31 = v67;
        goto LABEL_34;
      }
      uint64_t v54 = v63;
      uint64_t v52 = v67;
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v14 + 74) == 255)
      {
        uint64_t v28 = v14;
        uint64_t v29 = v65;
        uint64_t v30 = v54;
        goto LABEL_33;
      }
      uint64_t v60 = *(unsigned __int16 *)(v14 + 72) | (*(unsigned __int8 *)(v14 + 74) << 16);
      uint64_t v32 = v46;
      uint64_t v31 = v52;
      uint64_t v30 = v54;
      if (v60 >= 0x20000
        && HIBYTE(*(_WORD *)(v14 + 72)) != 255
        && *(_WORD *)(v14 + 72) == 0xFF
        && (*(_WORD *)(v14 + 72) & 0x100) != 0)
      {
        sub_1BFFA742C(*(void *)(v14 + 64), v60, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        uint64_t v30 = v54;
        uint64_t v31 = v52;
        uint64_t v32 = v46;
      }
      uint64_t v28 = v14;
      uint64_t v29 = v65;
      uint64_t v33 = v44;
      goto LABEL_29;
    case 7uLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      uint64_t v49 = sub_1C11421D4;
      goto LABEL_19;
    case 8uLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      sub_1BFF7BDF8((uint64_t)a1, a2);
      goto LABEL_27;
    case 9uLL:
    case 0xEuLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      sub_1C001BF30((uint64_t)a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1C001C168);
      goto LABEL_27;
    case 0xAuLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      uint64_t v49 = sub_1BFF9479C;
      goto LABEL_19;
    case 0xBuLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      uint64_t v49 = sub_1BFFF23FC;
LABEL_19:
      sub_1C0023908((uint64_t)a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))v49);
      goto LABEL_27;
    case 0xCuLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      sub_1BFFE6E74((uint64_t)a1, a2);
      goto LABEL_27;
    case 0xDuLL:
      uint64_t v65 = v13;
      uint64_t v63 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_beginAccess();
      uint64_t v50 = *(void *)(v14 + 72);
      if (!v50)
      {
        unint64_t v62 = v17;
        swift_retain();
        goto LABEL_38;
      }
      uint64_t v51 = v63;
      uint64_t v52 = v67;
      uint64_t v46 = v68;
      uint64_t v44 = v66;
      sub_1BFF95098(v14, v65, v63, v67, v68, v66, v17);
      swift_bridgeObjectRetain();
      sub_1C0000E48((uint64_t)a1, (uint64_t)v70, v50);
      if (!v3)
      {
        unint64_t v62 = v17;
        swift_bridgeObjectRelease();
LABEL_38:
        swift_beginAccess();
        uint64_t v55 = *(void *)(v14 + 88);
        uint64_t v56 = *(void *)(v55 + 16);
        if (v56)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v57 = (uint64_t *)(v55 + 72);
          do
          {
            uint64_t v58 = *v57;
            if (*v57)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C0000E48((uint64_t)a1, (uint64_t)v70, v58);
              if (v3)
              {
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
LABEL_50:
                swift_bridgeObjectRelease();
                goto LABEL_51;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v57 += 7;
            --v56;
          }
          while (v56);
          swift_bridgeObjectRelease_n();
        }
LABEL_51:
        uint64_t v28 = v14;
        uint64_t v29 = v65;
        uint64_t v30 = v63;
        uint64_t v31 = v67;
        uint64_t v32 = v68;
        uint64_t v33 = v66;
        unint64_t v53 = v62;
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = v14;
      uint64_t v29 = v65;
      uint64_t v30 = v51;
LABEL_33:
      uint64_t v31 = v52;
LABEL_34:
      uint64_t v32 = v46;
      uint64_t v33 = v44;
LABEL_29:
      unint64_t v53 = v17;
LABEL_30:
      sub_1BFF94FE4(v28, v29, v30, v31, v32, v33, v53);
      return;
    case 0xFuLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      sub_1C05D2B84((uint64_t)a1, a2);
      goto LABEL_27;
    case 0x11uLL:
      uint64_t v47 = v13;
      uint64_t v48 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v66 = v19;
      swift_retain();
      sub_1C05D2C88((uint64_t)a1, a2);
LABEL_27:
      uint64_t v28 = v14;
      uint64_t v29 = v47;
      uint64_t v30 = v48;
      goto LABEL_28;
    default:
      uint64_t v68 = v18;
      uint64_t v20 = v16;
      uint64_t v21 = v15;
      uint64_t v22 = v13;
      swift_retain();
      uint64_t v23 = (uint64_t)a1;
      uint64_t v24 = v19;
      sub_1BFF43E18(v23, a2);
LABEL_6:
      uint64_t v28 = v14;
      uint64_t v29 = v22;
      uint64_t v30 = v21;
      uint64_t v31 = v20;
      uint64_t v32 = v68;
      uint64_t v33 = v24;
      goto LABEL_29;
  }
}

uint64_t sub_1C05D2A98(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  sub_1C002FF30(a1, v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2 && *(unsigned __int8 *)(v1 + 74) != 255)
  {
    uint64_t v6 = *(unsigned __int16 *)(v1 + 72) | (*(unsigned __int8 *)(v1 + 74) << 16);
    if (v6 >= 0x20000
      && HIBYTE(*(_WORD *)(v1 + 72)) != 255
      && ~*(unsigned char *)(v1 + 72) == 0
      && (*(_WORD *)(v1 + 72) & 0x100) != 0)
    {
      return sub_1BFFA742C(*(void *)(v1 + 64), v6, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
    }
  }
  return result;
}

uint64_t sub_1C05D2B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v6 = *(_OWORD *)(a2 + 80);
  v11[4] = *(_OWORD *)(a2 + 64);
  v11[5] = v6;
  uint64_t v12 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  uint64_t v11[3] = v8;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1C1141218(a1, v11, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    if ((~*(void *)(v4 + 64) & 0xF000000000000007) != 0)
    {
      uint64_t v13 = *(void *)(v4 + 64);
      uint64_t result = sub_1BFF79540(a1, (uint64_t)v11);
    }
    if ((~*(void *)(v4 + 72) & 0xF000000000000007) != 0)
    {
      uint64_t v13 = *(void *)(v4 + 72);
      return sub_1BFF79540(a1, (uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_1C05D2C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v6 = *(_OWORD *)(a2 + 80);
  v11[4] = *(_OWORD *)(a2 + 64);
  v11[5] = v6;
  uint64_t v12 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  uint64_t v11[3] = v8;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1C1141044(a1, v11, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    if ((~*(void *)(v4 + 56) & 0xF000000000000007) != 0)
    {
      uint64_t v13 = *(void *)(v4 + 56);
      uint64_t result = sub_1BFF79540(a1, (uint64_t)v11);
    }
    if ((~*(void *)(v4 + 64) & 0xF000000000000007) != 0)
    {
      uint64_t v13 = *(void *)(v4 + 64);
      return sub_1BFF79540(a1, (uint64_t)v11);
    }
  }
  return result;
}

void sub_1C05D2D8C(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D2DA4(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v18 = *v2;
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  long long v13 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v15 = v8;
  long long v16 = *(_OWORD *)(a2 + 80);
  uint64_t v17 = v6;
  sub_1BFF0C6A0(a1, &v9);
}

void sub_1C05D2E54(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v18 = *(void *)(v2 + 16);
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v12 = *((_OWORD *)a2 + 1);
  long long v13 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v14 = *((_OWORD *)a2 + 3);
  long long v15 = v8;
  long long v16 = *((_OWORD *)a2 + 5);
  uint64_t v17 = v6;
  sub_1BFF2871C(a1, (uint64_t)&v9);
}

void sub_1C05D2ECC(unint64_t *a1, uint64_t *a2)
{
  if ((v2[2] & 1) == 0)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v6 = *a2;
    uint64_t v18 = *v2;
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 3);
    long long v15 = v8;
    long long v16 = *((_OWORD *)a2 + 5);
    uint64_t v17 = v3;
    sub_1BFF2871C(a1, (uint64_t)&v9);
  }
}

void sub_1C05D2F4C(unint64_t *a1, uint64_t *a2)
{
  if ((*(_WORD *)(v2 + 32) & 0x8001) == 0)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v6 = *a2;
    uint64_t v18 = *(void *)(v2 + 16);
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 3);
    long long v15 = v8;
    long long v16 = *((_OWORD *)a2 + 5);
    uint64_t v17 = v3;
    sub_1BFF2871C(a1, (uint64_t)&v9);
  }
}

void sub_1C05D2FD0(unint64_t *a1, uint64_t *a2)
{
  if ((*(unsigned char *)(v2 + 32) & 1) == 0)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v6 = *a2;
    uint64_t v18 = *(void *)(v2 + 16);
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 3);
    long long v15 = v8;
    long long v16 = *((_OWORD *)a2 + 5);
    uint64_t v17 = v3;
    sub_1BFF2871C(a1, (uint64_t)&v9);
  }
}

uint64_t sub_1C05D3050(uint64_t result, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v18[4] = *(_OWORD *)(a2 + 64);
  v18[5] = v4;
  uint64_t v19 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 61;
  void v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v6;
  uint64_t v10 = result;
  switch(v8)
  {
    case 1uLL:
      uint64_t v11 = v7 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v12 = *(void *)(v11 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C1140BF4(v10, v18, v13);
      if (!v3)
      {
        uint64_t v20 = v12;
        sub_1C05D3050(v10, v18);
      }
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2uLL:
      uint64_t v14 = v7 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v15 = *(void *)(v14 + 24);
      uint64_t v20 = *(void *)(v14 + 16);
      swift_retain();
      swift_retain();
      sub_1C05D3050(v10, a2);
      if (!v3)
      {
        uint64_t v20 = v15;
        sub_1C05D3050(v10, a2);
      }
      swift_release();
      uint64_t result = swift_release();
      break;
    case 4uLL:
      uint64_t v16 = v7 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(v16 + 24);
      uint64_t v20 = *(void *)(v16 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05D3050(v10, a2);
      if (v3)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C1140780(v10, (uint64_t)v18, v17);
        swift_release();
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C05D3250(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D3268(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05D1190(a1, a2);
}

uint64_t sub_1C05D3338(unint64_t *a1, uint64_t *a2)
{
  char v2 = *((unsigned char *)a2 + 8);
  char v3 = *((unsigned char *)a2 + 9);
  uint64_t v4 = a2[12];
  uint64_t v8 = *a2;
  char v9 = v2;
  char v10 = v3;
  long long v5 = *((_OWORD *)a2 + 2);
  long long v11 = *((_OWORD *)a2 + 1);
  long long v12 = v5;
  long long v6 = *((_OWORD *)a2 + 4);
  long long v13 = *((_OWORD *)a2 + 3);
  long long v14 = v6;
  long long v15 = *((_OWORD *)a2 + 5);
  uint64_t v16 = v4;
  return sub_1BFF816A8(a1, (uint64_t)&v8);
}

uint64_t sub_1C05D33AC(unint64_t *a1, uint64_t a2)
{
  return sub_1BFF816A8(a1, a2);
}

uint64_t sub_1C05D33C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = v3;
  uint64_t v46 = a1;
  uint64_t v6 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  int v10 = *((unsigned __int8 *)a2 + 8);
  int v11 = *((unsigned __int8 *)a2 + 9);
  uint64_t v13 = a2[2];
  uint64_t v12 = a2[3];
  uint64_t v15 = a2[4];
  uint64_t v14 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v16 = a2[7];
  uint64_t v19 = a2[8];
  uint64_t v18 = a2[9];
  uint64_t v21 = a2[10];
  uint64_t v20 = a2[11];
  uint64_t v22 = a2[12];
  uint64_t v23 = *v2;
  uint64_t v44 = v20;
  uint64_t v45 = v14;
  uint64_t v43 = v21;
  if (v23 < 0)
  {
    uint64_t v32 = *(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v31 = *(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v61 = v32;
    uint64_t v37 = v9;
    uint64_t v47 = v9;
    int v38 = v10;
    char v48 = v10;
    LODWORD(v39) = v11;
    char v49 = v11;
    uint64_t v40 = v13;
    uint64_t v50 = v13;
    uint64_t v51 = v12;
    uint64_t v36 = v12;
    uint64_t v41 = v15;
    uint64_t v52 = v15;
    uint64_t v53 = v45;
    uint64_t v54 = v17;
    uint64_t v55 = v16;
    uint64_t v56 = v19;
    uint64_t v57 = v18;
    uint64_t v58 = v21;
    uint64_t v59 = v20;
    uint64_t v33 = v32 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v34 = v31;
    uint64_t v60 = v22;
    swift_retain();
    uint64_t v42 = v33;
    swift_retain();
    sub_1C05D33C4(v46, &v47);
    if (!v4)
    {
      uint64_t v61 = v34;
      uint64_t v47 = v37;
      char v48 = v38;
      char v49 = v39;
      uint64_t v50 = v40;
      uint64_t v51 = v36;
      uint64_t v52 = v41;
      uint64_t v53 = v45;
      uint64_t v54 = v17;
      uint64_t v55 = v16;
      uint64_t v56 = v19;
      uint64_t v57 = v18;
      uint64_t v58 = v43;
      uint64_t v59 = v44;
      uint64_t v60 = v22;
      sub_1C05D33C4(v46, &v47);
    }
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v40 = v18;
    uint64_t v41 = v22;
    uint64_t v39 = v19;
    uint64_t v42 = v3;
    uint64_t v24 = v15;
    uint64_t v25 = v12;
    char v26 = v11;
    char v27 = v10;
    uint64_t v28 = v9;
    uint64_t v29 = swift_projectBox();
    sub_1BFF83CC4(v29, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
    uint64_t v47 = v28;
    char v48 = v27;
    char v49 = v26;
    uint64_t v50 = v13;
    uint64_t v51 = v25;
    uint64_t v52 = v24;
    uint64_t v53 = v45;
    uint64_t v54 = v17;
    uint64_t v55 = v16;
    uint64_t v56 = v39;
    uint64_t v57 = v40;
    uint64_t v58 = v43;
    uint64_t v59 = v44;
    uint64_t v60 = v41;
    sub_1BFFAE9AC(v46);
    return sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
  }
}

uint64_t sub_1C05D3648(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(v2 + 8);
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 80);
  uint64_t v18 = v6;
  return sub_1C05D33C4(a1, &v10);
}

uint64_t sub_1C05D36C0(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05D33C4(a1, a2);
}

uint64_t sub_1C05D36D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v49 = a1;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_1C151FD8C();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v20 - v10;
  uint64_t v12 = *a2;
  int v13 = *((unsigned __int8 *)a2 + 8);
  int v30 = *((unsigned __int8 *)a2 + 9);
  int v31 = v13;
  uint64_t v14 = a2[2];
  uint64_t v28 = a2[3];
  uint64_t v29 = v14;
  uint64_t v27 = a2[4];
  uint64_t v26 = a2[5];
  uint64_t v25 = a2[6];
  uint64_t v24 = a2[7];
  uint64_t v23 = a2[8];
  uint64_t v22 = a2[9];
  uint64_t v21 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v20 = v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v3 + *(int *)(a3 + 52), v7, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v11, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
LABEL_6:
    uint64_t v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
    return sub_1BFE4D118((uint64_t)&v46, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (!swift_dynamicCast()) {
    goto LABEL_6;
  }
  uint64_t v17 = *((void *)&v47 + 1);
  if (*((void *)&v47 + 1))
  {
    uint64_t v18 = v48;
    __swift_project_boxed_opaque_existential_1(&v46, *((uint64_t *)&v47 + 1));
    uint64_t v32 = v12;
    char v33 = v31;
    char v34 = v30;
    uint64_t v35 = v29;
    uint64_t v36 = v28;
    uint64_t v37 = v27;
    uint64_t v38 = v26;
    uint64_t v39 = v25;
    uint64_t v40 = v24;
    uint64_t v41 = v23;
    uint64_t v42 = v22;
    uint64_t v43 = v21;
    uint64_t v44 = v20;
    uint64_t v45 = v16;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v18 + 8))(v49, &v32, v17, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  }
  return sub_1BFE4D118((uint64_t)&v46, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
}

uint64_t sub_1C05D39CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C05D36D8(a1, a2, a3);
}

uint64_t sub_1C05D39E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D7224(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BFF79540, sub_1BFF799B0);
}

void sub_1C05D3A24(unint64_t *a1, uint64_t *a2)
{
  int v3 = *(__int16 *)(v2 + 40);
  if (v3 < 0)
  {
    uint64_t v4 = *(void *)(v2 + 32);
    uint64_t v5 = a2[12];
    char v6 = *((unsigned char *)a2 + 9);
    char v7 = *((unsigned char *)a2 + 8);
    uint64_t v8 = *a2;
    long long v20 = *(_OWORD *)(v2 + 16);
    uint64_t v21 = v4;
    __int16 v22 = v3 & 0x7FFF;
    uint64_t v11 = v8;
    char v12 = v7;
    char v13 = v6;
    long long v9 = *((_OWORD *)a2 + 2);
    long long v14 = *((_OWORD *)a2 + 1);
    long long v15 = v9;
    long long v10 = *((_OWORD *)a2 + 4);
    long long v16 = *((_OWORD *)a2 + 3);
    long long v17 = v10;
    long long v18 = *((_OWORD *)a2 + 5);
    uint64_t v19 = v5;
    sub_1BFF8449C(a1, (uint64_t)&v11);
  }
}

void sub_1C05D3AB8(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D3ADC(unint64_t *a1, uint64_t *a2)
{
  int v3 = *((__int16 *)v2 + 12);
  if (v3 < 0)
  {
    uint64_t v4 = *((void *)v2 + 2);
    uint64_t v5 = a2[12];
    char v6 = *((unsigned char *)a2 + 9);
    char v7 = *((unsigned char *)a2 + 8);
    uint64_t v8 = *a2;
    long long v20 = *v2;
    uint64_t v21 = v4;
    __int16 v22 = v3 & 0x7FFF;
    uint64_t v11 = v8;
    char v12 = v7;
    char v13 = v6;
    long long v9 = *((_OWORD *)a2 + 2);
    long long v14 = *((_OWORD *)a2 + 1);
    long long v15 = v9;
    long long v10 = *((_OWORD *)a2 + 4);
    long long v16 = *((_OWORD *)a2 + 3);
    long long v17 = v10;
    long long v18 = *((_OWORD *)a2 + 5);
    uint64_t v19 = v5;
    sub_1BFF8449C(a1, (uint64_t)&v11);
  }
}

void sub_1C05D3B70(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05D3B88(uint64_t a1, uint64_t a2)
{
  return sub_1C05D2B84(a1, a2);
}

uint64_t sub_1C05D3BAC(uint64_t result, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v14 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = a2[12];
  uint64_t v18 = *(void *)(v2 + 32);
  uint64_t v25 = v11;
  uint64_t v26 = result;
  uint64_t v23 = v13;
  uint64_t v24 = v12;
  uint64_t v21 = v15;
  uint64_t v22 = v14;
  uint64_t v19 = v17;
  uint64_t v20 = v16;
  if ((~*(void *)(v2 + 24) & 0xF000000000000007) == 0) {
    goto LABEL_3;
  }
  uint64_t v41 = *(void *)(v2 + 24);
  uint64_t v27 = v4;
  char v28 = v5;
  char v29 = v6;
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  uint64_t result = sub_1BFF79540(result, (uint64_t)&v27);
  if (!v3)
  {
LABEL_3:
    if ((~v18 & 0xF000000000000007) != 0)
    {
      uint64_t v41 = v18;
      uint64_t v27 = v4;
      char v28 = v5;
      char v29 = v6;
      uint64_t v30 = v7;
      uint64_t v31 = v8;
      uint64_t v32 = v9;
      uint64_t v33 = v10;
      uint64_t v34 = v25;
      uint64_t v35 = v24;
      uint64_t v36 = v23;
      uint64_t v37 = v22;
      uint64_t v38 = v21;
      uint64_t v39 = v20;
      uint64_t v40 = v19;
      return sub_1BFF79540(v26, (uint64_t)&v27);
    }
  }
  return result;
}

uint64_t sub_1C05D3CC8(uint64_t a1, uint64_t *a2)
{
  return sub_1C05D3BAC(a1, a2);
}

uint64_t sub_1C05D3CE0(unint64_t *a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v3 = v2;
  sub_1BFF7185C(0, &qword_1EB88E9A8, (void (*)(void))sub_1C006F9DC);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v35 - v6;
  sub_1BFF7185C(0, &qword_1EB88E9B0, (void (*)(void))sub_1C0084C58);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v35 - v9;
  sub_1BFF7185C(0, &qword_1EB88E998, (void (*)(void))sub_1C00738F0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v35 - v12;
  sub_1BFF7185C(0, &qword_1EB88E9A0, (void (*)(void))sub_1C0036630);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v35 - v15;
  sub_1BFF7185C(0, &qword_1EB88E9B8, (void (*)(void))sub_1C003F2E8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)v35 - v18;
  uint64_t v20 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = *(_OWORD *)(a2 + 80);
  v35[4] = *(_OWORD *)(a2 + 64);
  v35[5] = v23;
  uint64_t v36 = *(void *)(a2 + 96);
  long long v24 = *(_OWORD *)(a2 + 16);
  v35[0] = *(_OWORD *)a2;
  v35[1] = v24;
  long long v25 = *(_OWORD *)(a2 + 48);
  v35[2] = *(_OWORD *)(a2 + 32);
  v35[3] = v25;
  sub_1BFF83CC4(v3, (uint64_t)v22, type metadata accessor for FormatPropertyDefinition);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C05DC640((uint64_t)v22, (uint64_t)v19, (uint64_t)&qword_1EB88E9B8, (uint64_t)sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v19 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v37 = *((void *)v19 + 9);
        sub_1BFF79540((uint64_t)v34, a2);
      }
      uint64_t v30 = &qword_1EB88E9B8;
      uint64_t v31 = &type metadata for FormatColor;
      uint64_t v32 = sub_1C003F2E8;
      uint64_t v33 = (uint64_t)v19;
      goto LABEL_22;
    case 8u:
      sub_1C05DC640((uint64_t)v22, (uint64_t)v16, (uint64_t)&qword_1EB88E9A0, (uint64_t)sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v16 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v37 = *((void *)v16 + 9);
        sub_1BFF5B7F4(v34, a2);
      }
      uint64_t v30 = &qword_1EB88E9A0;
      uint64_t v31 = &type metadata for FormatAsyncImageContent;
      uint64_t v32 = sub_1C0036630;
      uint64_t v33 = (uint64_t)v16;
      goto LABEL_22;
    case 9u:
      sub_1C05DC640((uint64_t)v22, (uint64_t)v13, (uint64_t)&qword_1EB88E998, (uint64_t)sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v13 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v37 = *((void *)v13 + 9);
        sub_1C05D3050((uint64_t)v34, a2);
      }
      uint64_t v30 = &qword_1EB88E998;
      uint64_t v31 = &type metadata for FormatVideoNodeContent;
      uint64_t v32 = sub_1C00738F0;
      uint64_t v33 = (uint64_t)v13;
      goto LABEL_22;
    case 0xAu:
      sub_1C05DC640((uint64_t)v22, (uint64_t)v10, (uint64_t)&qword_1EB88E9B0, (uint64_t)sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      if ((~*((void *)v10 + 9) & 0xF000000000000007) != 0)
      {
        uint64_t v37 = *((void *)v10 + 9);
        sub_1BFF79C34(v34, (uint64_t *)a2);
      }
      uint64_t v30 = &qword_1EB88E9B0;
      uint64_t v31 = &type metadata for FormatFont;
      uint64_t v32 = sub_1C0084C58;
      uint64_t v33 = (uint64_t)v10;
      goto LABEL_22;
    case 0xBu:
      sub_1C05DC640((uint64_t)v22, (uint64_t)v7, (uint64_t)&qword_1EB88E9A8, (uint64_t)sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF7185C);
      uint64_t v27 = *((void *)v7 + 9);
      if ((v27 & 0x8000000000000000) == 0)
      {
        uint64_t v29 = *(void *)(v27 + 16);
        uint64_t v28 = *(void *)(v27 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C00389F8((uint64_t)v34, (uint64_t)v35, v29, v28);
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v30 = &qword_1EB88E9A8;
      uint64_t v31 = &type metadata for FormatVideoPlayerContent;
      uint64_t v32 = sub_1C006F9DC;
      uint64_t v33 = (uint64_t)v7;
LABEL_22:
      uint64_t result = sub_1C05DD154(v33, (uint64_t)v30, (uint64_t)v32, (uint64_t)v31, (uint64_t (*)(void))sub_1BFF7185C);
      break;
    default:
      uint64_t result = sub_1C05DDC60((uint64_t)v22, type metadata accessor for FormatPropertyDefinition);
      break;
  }
  return result;
}

uint64_t sub_1C05D43DC(unint64_t *a1, uint64_t a2)
{
  return sub_1C05D3CE0(a1, a2);
}

void sub_1C05D43F4(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D4418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D4444(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))sub_1C11449D0);
}

uint64_t sub_1C05D4444(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _OWORD *, uint64_t, uint64_t))
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v14[4] = *(_OWORD *)(a2 + 64);
  v14[5] = v6;
  uint64_t v15 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  uint64_t v14[3] = v8;
  if ((*v5 & 0x8000000000000000) != 0)
  {
    uint64_t v10 = result;
    uint64_t v11 = *v5 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v12 = *(void *)(v11 + 0x10);
    uint64_t v13 = *(void *)(v11 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    a5(v10, v14, v12, v13);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C05D44FC(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  return sub_1C1138294(a1, (uint64_t)v7, *(void *)(v2 + 112));
}

uint64_t sub_1C05D4544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05D02E0(a1, a2, a3);
}

uint64_t sub_1C05D455C(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF45B48(a1, a2);
}

uint64_t sub_1C05D4580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  long long v5 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v5;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  sub_1C11332A8(a1, (uint64_t)v10, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05D461C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C7FF8(a1, a2, a3);
}

uint64_t sub_1C05D4634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  __n128 v5 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = *v7;
  char v9 = *((unsigned char *)v7 + 8);
  char v10 = *((unsigned char *)v7 + 9);
  uint64_t v12 = v7[2];
  uint64_t v11 = v7[3];
  uint64_t v13 = v7[4];
  uint64_t v26 = v7[5];
  uint64_t v27 = v13;
  uint64_t v25 = v7[6];
  uint64_t v24 = v7[7];
  uint64_t v23 = v7[8];
  uint64_t v22 = v7[9];
  uint64_t v21 = v7[10];
  uint64_t v20 = v7[11];
  uint64_t v19 = v7[12];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v14 + 36), v4, v5);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
  if (swift_dynamicCast())
  {
    uint64_t v16 = *((void *)&v43 + 1);
    uint64_t v17 = v44;
    __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
    uint64_t v28 = v8;
    char v29 = v9;
    char v30 = v10;
    uint64_t v31 = v12;
    uint64_t v32 = v11;
    uint64_t v33 = v27;
    uint64_t v34 = v26;
    uint64_t v35 = v25;
    uint64_t v36 = v24;
    uint64_t v37 = v23;
    uint64_t v38 = v22;
    uint64_t v39 = v21;
    uint64_t v40 = v20;
    uint64_t v41 = v19;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v17 + 8))(v45, &v28, v16, v17);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  }
  else
  {
    uint64_t v44 = 0;
    long long v42 = 0u;
    long long v43 = 0u;
    return sub_1BFE4D118((uint64_t)&v42, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
  }
}

uint64_t sub_1C05D488C(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF7BD80(a1, a2);
}

void sub_1C05D48A4(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D48BC(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF90A18(a1, a2);
}

void sub_1C05D48D4(unint64_t *a1, uint64_t *a2)
{
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v12 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = *v2;
  uint64_t v25 = v2[1];
  uint64_t v26 = *a2;
  uint64_t v40 = v17;
  uint64_t v23 = v26;
  char v21 = v5;
  char v22 = v4;
  char v27 = v4;
  char v28 = v5;
  uint64_t v19 = v7;
  uint64_t v20 = v6;
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  uint64_t v18 = v8;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  sub_1BFF0D1B8(a1, (uint64_t)&v26);
  if (!v3 && (~v25 & 0xF000000000000007) != 0)
  {
    uint64_t v40 = v25;
    uint64_t v26 = v23;
    char v27 = v22;
    char v28 = v21;
    uint64_t v29 = v20;
    uint64_t v30 = v19;
    uint64_t v31 = v18;
    uint64_t v32 = v9;
    uint64_t v33 = v10;
    uint64_t v34 = v11;
    uint64_t v35 = v12;
    uint64_t v36 = v13;
    uint64_t v37 = v14;
    uint64_t v38 = v15;
    uint64_t v39 = v16;
    sub_1BFF0D1B8(a1, (uint64_t)&v26);
  }
}

void sub_1C05D49F4(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D4A0C(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05D0D4C(a1, a2);
}

uint64_t sub_1C05D4A30(unint64_t *a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(a2 + 80);
  v27[4] = *(_OWORD *)(a2 + 64);
  v27[5] = v10;
  uint64_t v28 = *(void *)(a2 + 96);
  long long v11 = *(_OWORD *)(a2 + 16);
  v27[0] = *(_OWORD *)a2;
  v27[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  v27[2] = *(_OWORD *)(a2 + 32);
  v27[3] = v12;
  swift_beginAccess();
  uint64_t v13 = v2[8];
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v29 = v2;
  if (v14)
  {
    uint64_t v23 = v7;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = v13;
    uint64_t v15 = v13 + 48;
    while (1)
    {
      uint64_t v26 = *(void *)(v15 - 16);
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(a1, a2);
      if (v3) {
        break;
      }
      v15 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v14)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v2 = v29;
        uint64_t v7 = v23;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    uint64_t v16 = v2[9];
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v19 = *(void *)(v7 + 72);
      uint64_t v24 = v2[9];
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFF83CC4(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v25 = *((void *)v9 + 2);
        swift_retain();
        sub_1BFF2871C(a1, a2);
        if (v3) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v18 += v19;
        if (!--v17)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v2 = v29;
          goto LABEL_11;
        }
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      uint64_t v20 = v2[11];
      swift_bridgeObjectRetain();
      sub_1BFF11C38(a1, (uint64_t)v27, v20);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C05D4D58(unint64_t *a1, uint64_t a2)
{
  return sub_1C05D4A30(a1, a2);
}

uint64_t sub_1C05D4D7C(unint64_t *a1, uint64_t a2)
{
  return sub_1C05D0B24(a1, a2);
}

uint64_t sub_1C05D4DA0(uint64_t a1, uint64_t *a2)
{
  return sub_1C05D6744(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_1BFF79540);
}

uint64_t sub_1C05D4DCC(uint64_t result, uint64_t a2)
{
  char v4 = (unint64_t *)result;
  long long v5 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v5;
  uint64_t v16 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  uint64_t v15[3] = v7;
  uint64_t v8 = *v2;
  if (*v2 < 0)
  {
    uint64_t v11 = *(void *)((v8 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = v11 + 40; ; i += 16)
      {
        uint64_t v17 = *(void *)(i - 8);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BFF0C6A0(v4, (uint64_t *)a2);
        if (v3) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        if (!--v12) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else if (*(unsigned char *)(v8 + 40))
  {
    uint64_t v10 = *(void *)(v8 + 24);
    uint64_t v9 = *(void *)(v8 + 32);
    sub_1C00F64A4(v10, v9, 1);
    sub_1C1144818((uint64_t)v4, (uint64_t)v15, v10, v9);
    return sub_1C00F64E0(v10, v9, 1);
  }
  return result;
}

uint64_t sub_1C05D4F28(uint64_t a1, uint64_t a2)
{
  return sub_1C05D4DCC(a1, a2);
}

uint64_t sub_1C05D4F40(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v3;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v5;
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    uint64_t v6 = result;
    uint64_t v9 = v2 + 8;
    uint64_t v7 = *(void *)(v2 + 8);
    uint64_t v8 = *(void *)(v9 + 8);
    sub_1C00F64A4(v7, v8, 1);
    sub_1C1144818(v6, (uint64_t)v10, v7, v8);
    return sub_1C00F64E0(v7, v8, 1);
  }
  return result;
}

uint64_t sub_1C05D4FE4(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v6[4] = *(_OWORD *)(a2 + 64);
  v6[5] = v3;
  uint64_t v7 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v6[0] = *(_OWORD *)a2;
  v6[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v6[2] = *(_OWORD *)(a2 + 32);
  v6[3] = v5;
  if (*(unsigned char *)(v2 + 16) == 1) {
    return sub_1C1144818(result, (uint64_t)v6, *(void *)v2, *(void *)(v2 + 8));
  }
  return result;
}

void sub_1C05D5038(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05D505C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  if (*((unsigned char *)v2 + 64) == 1)
  {
    uint64_t v17 = v2[1];
    uint64_t v35 = *v2;
    uint64_t v36 = v17;
    long long v18 = *((_OWORD *)v2 + 2);
    long long v37 = *((_OWORD *)v2 + 1);
    long long v19 = *((_OWORD *)v2 + 3);
    long long v38 = v18;
    long long v39 = v19;
    uint64_t v21 = v3;
    char v22 = v4;
    char v23 = v5;
    uint64_t v24 = v6;
    uint64_t v25 = v7;
    uint64_t v26 = v9;
    uint64_t v27 = v8;
    uint64_t v28 = v11;
    uint64_t v29 = v10;
    uint64_t v30 = v13;
    uint64_t v31 = v12;
    uint64_t v32 = v15;
    uint64_t v33 = v14;
    uint64_t v34 = v16;
    return sub_1BFF7B500(a1, &v21);
  }
  else
  {
    uint64_t v35 = *v2;
    uint64_t v21 = v3;
    char v22 = v4;
    char v23 = v5;
    uint64_t v24 = v6;
    uint64_t v25 = v7;
    uint64_t v26 = v9;
    uint64_t v27 = v8;
    uint64_t v28 = v11;
    uint64_t v29 = v10;
    uint64_t v30 = v13;
    uint64_t v31 = v12;
    uint64_t v32 = v15;
    uint64_t v33 = v14;
    uint64_t v34 = v16;
    return sub_1BFF79540(a1, (uint64_t)&v21);
  }
}

uint64_t sub_1C05D5138(uint64_t a1, uint64_t a2)
{
  return sub_1C05C8874(a1, a2);
}

uint64_t sub_1C05D5150(uint64_t a1, uint64_t a2)
{
  return sub_1C05D505C(a1, a2);
}

void sub_1C05D5168(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D518C(uint64_t a1, uint64_t a2)
{
  return sub_1C05D2C88(a1, a2);
}

uint64_t sub_1C05D51B0(uint64_t result, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v14 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = a2[12];
  uint64_t v18 = *(void *)(v2 + 24);
  uint64_t v25 = v11;
  uint64_t v26 = result;
  uint64_t v23 = v13;
  uint64_t v24 = v12;
  uint64_t v21 = v15;
  uint64_t v22 = v14;
  uint64_t v19 = v17;
  uint64_t v20 = v16;
  if ((~*(void *)(v2 + 16) & 0xF000000000000007) == 0) {
    goto LABEL_3;
  }
  uint64_t v41 = *(void *)(v2 + 16);
  uint64_t v27 = v4;
  char v28 = v5;
  char v29 = v6;
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  uint64_t result = sub_1BFF79540(result, (uint64_t)&v27);
  if (!v3)
  {
LABEL_3:
    if ((~v18 & 0xF000000000000007) != 0)
    {
      uint64_t v41 = v18;
      uint64_t v27 = v4;
      char v28 = v5;
      char v29 = v6;
      uint64_t v30 = v7;
      uint64_t v31 = v8;
      uint64_t v32 = v9;
      uint64_t v33 = v10;
      uint64_t v34 = v25;
      uint64_t v35 = v24;
      uint64_t v36 = v23;
      uint64_t v37 = v22;
      uint64_t v38 = v21;
      uint64_t v39 = v20;
      uint64_t v40 = v19;
      return sub_1BFF79540(v26, (uint64_t)&v27);
    }
  }
  return result;
}

uint64_t sub_1C05D52CC(uint64_t a1, uint64_t *a2)
{
  return sub_1C05D51B0(a1, a2);
}

void sub_1C05D52E4(unint64_t *a1, uint64_t *a2)
{
}

void sub_1C05D52FC(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05D5314(unint64_t *a1, uint64_t a2)
{
  return sub_1C05CC5B0(a1, a2);
}

uint64_t sub_1C05D532C(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v3;
  uint64_t v13 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v5;
  if ((*(unsigned char *)(v2 + 48) & 1) == 0)
  {
    char v6 = (unint64_t *)result;
    uint64_t v8 = *(void *)(v2 + 32);
    uint64_t v7 = *(void *)(v2 + 40);
    uint64_t v11 = v2 + 16;
    uint64_t v9 = *(void *)(v2 + 16);
    uint64_t v10 = *(void *)(v11 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C05C5C04(v6, (uint64_t)v12);
    return sub_1BFEC41E8(v9, v10, v8, v7, 0);
  }
  return result;
}

uint64_t sub_1C05D53F0(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v3;
  uint64_t v13 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v5;
  if ((*(unsigned char *)(v2 + 32) & 1) == 0)
  {
    char v6 = (unint64_t *)result;
    uint64_t v8 = *(void *)(v2 + 16);
    uint64_t v7 = *(void *)(v2 + 24);
    uint64_t v11 = v2;
    uint64_t v9 = *(void *)v2;
    uint64_t v10 = *(void *)(v11 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C05C5C04(v6, (uint64_t)v12);
    return sub_1BFEC41E8(v9, v10, v8, v7, 0);
  }
  return result;
}

void sub_1C05D54B4(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D54D8(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v9[4] = *(_OWORD *)(a2 + 64);
  v9[5] = v4;
  uint64_t v10 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  uint64_t v9[3] = v6;
  uint64_t v7 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_1C11332A8(a1, (uint64_t)v9, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05D554C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for FormatOption();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *(_OWORD *)(a2 + 80);
  v51[4] = *(_OWORD *)(a2 + 64);
  v51[5] = v11;
  uint64_t v52 = *(void *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 16);
  v51[0] = *(_OWORD *)a2;
  v51[1] = v12;
  long long v14 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 48);
  uint64_t v40 = a2;
  void v51[2] = v14;
  v51[3] = v13;
  uint64_t v16 = v2[6];
  uint64_t v15 = v2[7];
  uint64_t v17 = v2[8];
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    uint64_t v34 = v15;
    uint64_t v35 = v8;
    uint64_t v36 = v17;
    uint64_t v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = a1;
    uint64_t v53 = v3;
    swift_bridgeObjectRetain_n();
    uint64_t v38 = v16;
    uint64_t v19 = (uint64_t *)(v16 + 48);
    while (1)
    {
      uint64_t v41 = v18;
      uint64_t v21 = *(v19 - 2);
      uint64_t v20 = *(v19 - 1);
      uint64_t v22 = *v19;
      uint64_t v23 = v19[1];
      uint64_t v25 = v19[2];
      uint64_t v24 = v19[3];
      unint64_t v27 = v19[4];
      uint64_t v26 = v19[5];
      uint64_t v43 = v21;
      uint64_t v44 = v20;
      uint64_t v45 = v22;
      uint64_t v46 = v23;
      uint64_t v47 = v25;
      uint64_t v48 = v24;
      unint64_t v49 = v27;
      uint64_t v50 = v26;
      uint64_t v42 = v26;
      sub_1BFF95098(v21, v20, v22, v23, v25, v24, v27);
      uint64_t v28 = v53;
      sub_1C05D2144(v39, v40);
      uint64_t v53 = v28;
      if (v28) {
        break;
      }
      v19 += 8;
      sub_1BFF94FE4(v21, v20, v22, v23, v25, v24, v27);
      uint64_t v18 = v41 - 1;
      if (v41 == 1)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v4 = v53;
        a1 = v39;
        uint64_t v10 = v37;
        uint64_t v17 = v36;
        uint64_t v8 = v35;
        uint64_t v15 = v34;
        goto LABEL_6;
      }
    }
    sub_1BFF94FE4(v21, v20, v22, v23, v25, v24, v27);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_1BFF11C38(a1, (uint64_t)v51, v15);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4)
    {
      uint64_t v30 = *(void *)(v17 + 16);
      if (v30)
      {
        uint64_t v31 = v17 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        uint64_t v32 = *(void *)(v8 + 72);
        swift_bridgeObjectRetain_n();
        do
        {
          sub_1BFF83CC4(v31, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v43 = *((void *)v10 + 2);
          swift_retain();
          sub_1BFF2871C(a1, (uint64_t)v51);
          swift_release();
          sub_1C05DDC60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v31 += v32;
          --v30;
        }
        while (v30);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1C05D58BC(unint64_t *a1, uint64_t a2)
{
  return sub_1C05D554C(a1, a2);
}

void sub_1C05D58D4(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05D58EC(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for FormatOption();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(a2 + 64);
  long long v11 = *(_OWORD *)(a2 + 80);
  long long v12 = *(_OWORD *)(a2 + 32);
  v57[3] = *(_OWORD *)(a2 + 48);
  v57[4] = v10;
  v57[5] = v11;
  long long v13 = *(_OWORD *)(a2 + 16);
  v57[0] = *(_OWORD *)a2;
  v57[1] = v13;
  uint64_t v59 = a2;
  uint64_t v58 = *(void *)(a2 + 96);
  v57[2] = v12;
  uint64_t v15 = v2[6];
  uint64_t v14 = v2[7];
  uint64_t v16 = v2[8];
  uint64_t v17 = v2[11];
  uint64_t v41 = v2[12];
  uint64_t v18 = *(void *)(v15 + 16);
  if (v18)
  {
    uint64_t v48 = v14;
    uint64_t v44 = v16;
    uint64_t v42 = v17;
    uint64_t v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v19 = a1;
    swift_bridgeObjectRetain_n();
    uint64_t v20 = v15 + 48;
    while (1)
    {
      uint64_t v49 = *(void *)(v20 - 16);
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(v19, v59);
      if (v3) {
        break;
      }
      v20 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v18)
      {
        swift_bridgeObjectRelease_n();
        a1 = v19;
        uint64_t v9 = v43;
        uint64_t v17 = v42;
        uint64_t v16 = v44;
        uint64_t v14 = v48;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    if (v14)
    {
      swift_beginAccess();
      uint64_t v21 = v14;
      uint64_t v22 = *(void *)(v14 + 56);
      swift_bridgeObjectRetain();
      sub_1C002FF30((uint64_t)a1, v22);
      uint64_t result = swift_bridgeObjectRelease();
      if (v3) {
        return result;
      }
      if (*(unsigned __int8 *)(v21 + 74) != 255)
      {
        uint64_t v24 = *(unsigned __int16 *)(v21 + 72) | (*(unsigned __int8 *)(v21 + 74) << 16);
        if (v24 >= 0x20000
          && HIBYTE(*(_WORD *)(v21 + 72)) != 255
          && *(_WORD *)(v21 + 72) == 0xFF
          && (*(_WORD *)(v21 + 72) & 0x100) != 0)
        {
          sub_1BFFA742C(*(void *)(v21 + 64), v24, 2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        }
      }
    }
    uint64_t v25 = *(void *)(v16 + 16);
    if (v25)
    {
      uint64_t v42 = v17;
      uint64_t v43 = v9;
      uint64_t v45 = a1;
      uint64_t v48 = v3;
      swift_bridgeObjectRetain_n();
      uint64_t v44 = v16;
      uint64_t v26 = (uint64_t *)(v16 + 48);
      while (1)
      {
        uint64_t v46 = v25;
        uint64_t v27 = *(v26 - 2);
        uint64_t v28 = *(v26 - 1);
        uint64_t v29 = *v26;
        uint64_t v30 = v26[1];
        uint64_t v32 = v26[2];
        uint64_t v31 = v26[3];
        unint64_t v34 = v26[4];
        uint64_t v33 = v26[5];
        uint64_t v49 = v27;
        uint64_t v50 = v28;
        uint64_t v51 = v29;
        uint64_t v52 = v30;
        uint64_t v53 = v32;
        uint64_t v54 = v31;
        unint64_t v55 = v34;
        uint64_t v56 = v33;
        uint64_t v47 = v33;
        sub_1BFF95098(v27, v28, v29, v30, v32, v31, v34);
        uint64_t v35 = v48;
        sub_1C05D2144(v45, v59);
        uint64_t v48 = v35;
        if (v35) {
          break;
        }
        v26 += 8;
        sub_1BFF94FE4(v27, v28, v29, v30, v32, v31, v34);
        uint64_t v25 = v46 - 1;
        if (v46 == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v4 = v48;
          a1 = v45;
          uint64_t v9 = v43;
          uint64_t v17 = v42;
          goto LABEL_19;
        }
      }
      sub_1BFF94FE4(v27, v28, v29, v30, v32, v31, v34);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_19:
      uint64_t v36 = *(void *)(v17 + 16);
      if (v36)
      {
        uint64_t v37 = v17 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
        uint64_t v38 = *(void *)(v40 + 72);
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BFF83CC4(v37, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v49 = *((void *)v9 + 2);
          swift_retain();
          sub_1BFF2871C(a1, v59);
          if (v4) {
            break;
          }
          swift_release();
          sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v37 += v38;
          if (!--v36)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_24;
          }
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_24:
        uint64_t v39 = v41;
        swift_bridgeObjectRetain();
        sub_1BFF11C38(a1, (uint64_t)v57, v39);
        return swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_1C05D5E40(unint64_t *a1, uint64_t a2)
{
  return sub_1C05D58EC(a1, a2);
}

void sub_1C05D5E58(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D5E7C()
{
  return sub_1C05CB7CC();
}

uint64_t sub_1C05D5E94(uint64_t a1)
{
  return sub_1C05D2A98(a1);
}

void sub_1C05D5EB8()
{
  if (*(unsigned __int8 *)(v0 + 34) != 255)
  {
    uint64_t v1 = *(unsigned __int16 *)(v0 + 32) | (*(unsigned __int8 *)(v0 + 34) << 16);
    if (!WORD1(v1) || (WORD1(v1) != 1 ? (BOOL v2 = (~v1 & 0xFF00) == 0) : (BOOL v2 = 0), v2)) {
      sub_1BFF9C84C(*(void *)(v0 + 24), v1);
    }
  }
}

void sub_1C05D5F18()
{
}

uint64_t sub_1C05D5F30(uint64_t a1, uint64_t *a2)
{
  return sub_1C05C652C(a1, a2);
}

void sub_1C05D5F48(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D5F60(unint64_t *a1, uint64_t a2)
{
  return sub_1BFF0AC50(a1, a2);
}

void sub_1C05D5F84(unint64_t *a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 9);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v31 = *(void *)a2;
  uint64_t v32 = *(void *)a2;
  char v29 = v4;
  char v30 = v3;
  char v33 = v3;
  char v34 = v4;
  uint64_t v27 = v6;
  uint64_t v28 = v5;
  uint64_t v35 = v5;
  uint64_t v36 = v6;
  uint64_t v25 = v9;
  uint64_t v26 = v7;
  uint64_t v37 = v7;
  uint64_t v38 = v8;
  uint64_t v39 = v9;
  uint64_t v40 = v10;
  uint64_t v41 = v11;
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  uint64_t v44 = v14;
  uint64_t v45 = v15;
  sub_1BFF0C6A0(a1, &v32);
  if (!v2)
  {
    uint64_t v23 = v15;
    uint64_t v24 = v12;
    uint64_t v20 = v10;
    swift_beginAccess();
    uint64_t v17 = *(void *)(v22 + 24);
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v19 = v17 + 48;
      do
      {
        uint64_t v46 = *(void *)(v19 - 16);
        uint64_t v32 = v31;
        char v33 = v30;
        char v34 = v29;
        uint64_t v35 = v28;
        uint64_t v36 = v27;
        uint64_t v37 = v26;
        uint64_t v38 = v21;
        uint64_t v39 = v25;
        uint64_t v40 = v20;
        uint64_t v41 = v11;
        uint64_t v42 = v24;
        uint64_t v43 = v13;
        uint64_t v44 = v14;
        uint64_t v45 = v23;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BFF0B0B8(a1, (uint64_t)&v32);
        v19 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1C05D617C(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D61A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  long long v5 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v5;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();
  sub_1C11332A8(a1, (uint64_t)v10, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05D623C(uint64_t a1, uint64_t *a2)
{
  return sub_1C05C7914(a1, a2);
}

void sub_1C05D6254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v61 = *(void *)(a3 + 16);
  uint64_t v40 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v42 = v3;
  uint64_t v43 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v6;
  int v8 = *(unsigned __int8 *)(v6 + 8);
  int v9 = *(unsigned __int8 *)(v6 + 9);
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t v11 = *(void *)(v6 + 24);
  uint64_t v12 = *(void *)(v6 + 32);
  uint64_t v13 = *(void *)(v6 + 40);
  uint64_t v15 = *(void *)(v6 + 48);
  uint64_t v14 = *(void *)(v6 + 56);
  uint64_t v17 = *(void *)(v6 + 64);
  uint64_t v16 = *(void *)(v6 + 72);
  uint64_t v18 = *(void *)(v6 + 80);
  uint64_t v19 = *(void *)(v6 + 88);
  uint64_t v20 = *(void *)(v6 + 96);
  *(void *)&long long v44 = *(void *)v3;
  uint64_t v38 = v7;
  uint64_t v47 = v7;
  int v33 = v8;
  char v48 = v8;
  int v37 = v9;
  char v49 = v9;
  uint64_t v36 = v10;
  uint64_t v50 = v10;
  uint64_t v51 = v11;
  uint64_t v35 = v11;
  uint64_t v34 = v12;
  uint64_t v52 = v12;
  uint64_t v53 = v13;
  uint64_t v54 = v15;
  uint64_t v55 = v14;
  uint64_t v56 = v17;
  uint64_t v57 = v16;
  uint64_t v58 = v18;
  uint64_t v59 = v19;
  uint64_t v60 = v20;
  uint64_t v39 = v21;
  sub_1BFF0C6A0(v21, &v47);
  if (!v4)
  {
    uint64_t v25 = v20;
    uint64_t v26 = v19;
    uint64_t v27 = v18;
    uint64_t v28 = v16;
    uint64_t v29 = v17;
    uint64_t v30 = v14;
    uint64_t v31 = v15;
    uint64_t v32 = v13;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, &v42[*(int *)(v41 + 36)], v61);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EA19C010);
    if (swift_dynamicCast())
    {
      uint64_t v22 = *((void *)&v45 + 1);
      uint64_t v23 = v46;
      __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
      uint64_t v47 = v38;
      char v48 = v33;
      char v49 = v37;
      uint64_t v50 = v36;
      uint64_t v51 = v35;
      uint64_t v52 = v34;
      uint64_t v53 = v32;
      uint64_t v54 = v31;
      uint64_t v55 = v30;
      uint64_t v56 = v29;
      uint64_t v57 = v28;
      uint64_t v58 = v27;
      uint64_t v59 = v26;
      uint64_t v60 = v25;
      (*(void (**)(unint64_t *, uint64_t *, uint64_t, uint64_t))(v23 + 8))(v39, &v47, v22, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    }
    else
    {
      uint64_t v46 = 0;
      long long v44 = 0u;
      long long v45 = 0u;
      sub_1BFE4D118((uint64_t)&v44, &qword_1EA19C018, (unint64_t *)&qword_1EA19C010);
    }
  }
}

void sub_1C05D6574(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C05D658C(unint64_t *a1, uint64_t a2)
{
  if (!*((unsigned char *)v2 + 17))
  {
    uint64_t v3 = *(void *)(a2 + 96);
    char v4 = *(unsigned char *)(a2 + 9);
    char v5 = *(unsigned char *)(a2 + 8);
    uint64_t v6 = *(void *)a2;
    uint64_t v18 = *v2;
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *(_OWORD *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 16);
    long long v13 = v7;
    long long v8 = *(_OWORD *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 48);
    long long v15 = v8;
    long long v16 = *(_OWORD *)(a2 + 80);
    uint64_t v17 = v3;
    sub_1BFF79C34(a1, &v9);
  }
}

void sub_1C05D660C(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v18 = *v2;
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  long long v13 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v15 = v8;
  long long v16 = *(_OWORD *)(a2 + 80);
  uint64_t v17 = v6;
  sub_1BFF79C34(a1, &v9);
}

void sub_1C05D6684(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D669C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D66C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t *))sub_1BFF79C34);
}

uint64_t sub_1C05D66C8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t *))
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  char v8 = *((unsigned char *)a2 + 9);
  uint64_t v9 = a2[12];
  uint64_t v22 = *v5;
  uint64_t v13 = v6;
  char v14 = v7;
  char v15 = v8;
  long long v10 = *((_OWORD *)a2 + 2);
  long long v16 = *((_OWORD *)a2 + 1);
  long long v17 = v10;
  long long v11 = *((_OWORD *)a2 + 4);
  long long v18 = *((_OWORD *)a2 + 3);
  long long v19 = v11;
  long long v20 = *((_OWORD *)a2 + 5);
  uint64_t v21 = v9;
  return a5(a1, &v13);
}

uint64_t sub_1C05D6744(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t *))
{
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 8);
  char v7 = *((unsigned char *)a2 + 9);
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = a2[12];
  uint64_t v20 = v3[1];
  uint64_t v43 = *v3;
  uint64_t v29 = v5;
  char v21 = v6;
  char v30 = v6;
  char v31 = v7;
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  uint64_t v34 = v10;
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  uint64_t v37 = v13;
  uint64_t v25 = v15;
  uint64_t v26 = v14;
  uint64_t v38 = v14;
  uint64_t v39 = v15;
  uint64_t v23 = v17;
  uint64_t v24 = v16;
  uint64_t v40 = v16;
  uint64_t v41 = v17;
  uint64_t v22 = v18;
  uint64_t v42 = v18;
  uint64_t result = a3(a1, &v29);
  if (!v4)
  {
    uint64_t v43 = v20;
    uint64_t v29 = v5;
    char v30 = v21;
    char v31 = v7;
    uint64_t v32 = v8;
    uint64_t v33 = v9;
    uint64_t v34 = v10;
    uint64_t v35 = v11;
    uint64_t v36 = v12;
    uint64_t v37 = v13;
    uint64_t v38 = v26;
    uint64_t v39 = v25;
    uint64_t v40 = v24;
    uint64_t v41 = v23;
    uint64_t v42 = v22;
    return a3(a1, &v29);
  }
  return result;
}

uint64_t sub_1C05D6858(uint64_t result, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v16[4] = *(_OWORD *)(a2 + 64);
  v16[5] = v4;
  uint64_t v17 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 62;
  v16[2] = *(_OWORD *)(a2 + 32);
  v16[3] = v6;
  uint64_t v10 = result;
  switch(v8)
  {
    case 1uLL:
      return sub_1BFF79540(result, a2);
    case 2uLL:
      uint64_t v13 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v15 = *(void *)(v13 + 16);
      uint64_t v14 = *(void *)(v13 + 24);
      sub_1BFF58F10(v15);
      swift_bridgeObjectRetain();
      sub_1C05D6858(v10, a2);
      if (!v3)
      {
        swift_bridgeObjectRetain();
        sub_1C113EC6C(v10, v16, v14);
        swift_bridgeObjectRelease();
      }
      sub_1BFF07CD8(v15);
      return swift_bridgeObjectRelease();
    case 3uLL:
      return result;
    default:
      uint64_t v11 = *(void *)(*(void *)(v7 + 16) + 16);
      if (!v11) {
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      break;
  }
  while (1)
  {
    swift_retain();
    sub_1BFF79540(v10, a2);
    if (v3) {
      break;
    }
    ++v12;
    swift_release();
    if (v11 == v12) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1C05D6A0C(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D6A24(uint64_t a1, uint64_t a2)
{
  return sub_1C05D6858(a1, a2);
}

void sub_1C05D6A3C(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D6A54(unint64_t *a1, uint64_t *a2)
{
  if ((~*v2 & 0xF000000000000007) != 0)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v6 = *a2;
    uint64_t v18 = *v2;
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 3);
    long long v15 = v8;
    long long v16 = *((_OWORD *)a2 + 5);
    uint64_t v17 = v3;
    sub_1BFE2F328(a1, (uint64_t)&v9);
  }
}

void sub_1C05D6AE8(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v18 = *(void *)(v2 + 8);
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  long long v13 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v15 = v8;
  long long v16 = *(_OWORD *)(a2 + 80);
  uint64_t v17 = v6;
  sub_1BFF79C34(a1, &v9);
}

void sub_1C05D6B60(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D6B78(unint64_t *a1, uint64_t *a2)
{
  char v2 = *((unsigned char *)a2 + 8);
  char v3 = *((unsigned char *)a2 + 9);
  uint64_t v4 = a2[12];
  uint64_t v7 = *a2;
  char v8 = v2;
  char v9 = v3;
  long long v5 = *((_OWORD *)a2 + 2);
  long long v10 = *((_OWORD *)a2 + 1);
  long long v11 = v5;
  long long v6 = *((_OWORD *)a2 + 4);
  long long v12 = *((_OWORD *)a2 + 3);
  long long v13 = v6;
  long long v14 = *((_OWORD *)a2 + 5);
  uint64_t v15 = v4;
  sub_1BFF7855C(a1, (uint64_t)&v7);
}

void sub_1C05D6BE8(unint64_t *a1, uint64_t *a2)
{
  char v2 = *((unsigned char *)a2 + 8);
  char v3 = *((unsigned char *)a2 + 9);
  uint64_t v4 = a2[12];
  uint64_t v7 = *a2;
  char v8 = v2;
  char v9 = v3;
  long long v5 = *((_OWORD *)a2 + 2);
  long long v10 = *((_OWORD *)a2 + 1);
  long long v11 = v5;
  long long v6 = *((_OWORD *)a2 + 4);
  long long v12 = *((_OWORD *)a2 + 3);
  long long v13 = v6;
  long long v14 = *((_OWORD *)a2 + 5);
  uint64_t v15 = v4;
  sub_1BFF7855C(a1, (uint64_t)&v7);
}

void sub_1C05D6C58(unint64_t *a1, uint64_t *a2)
{
  char v2 = *((unsigned char *)a2 + 8);
  char v3 = *((unsigned char *)a2 + 9);
  uint64_t v4 = a2[12];
  uint64_t v7 = *a2;
  char v8 = v2;
  char v9 = v3;
  long long v5 = *((_OWORD *)a2 + 2);
  long long v10 = *((_OWORD *)a2 + 1);
  long long v11 = v5;
  long long v6 = *((_OWORD *)a2 + 4);
  long long v12 = *((_OWORD *)a2 + 3);
  long long v13 = v6;
  long long v14 = *((_OWORD *)a2 + 5);
  uint64_t v15 = v4;
  sub_1BFF7855C(a1, (uint64_t)&v7);
}

void sub_1C05D6CC8(unint64_t *a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(a2 + 80);
  v9[4] = *(_OWORD *)(a2 + 64);
  v9[5] = v5;
  uint64_t v10 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  uint64_t v9[3] = v7;
  uint64_t v8 = v2[1];
  uint64_t v11 = *v2;
  sub_1BFE2F328(a1, a2);
  if (!v3) {
    sub_1BFE2F7E0((uint64_t)a1, v9, v8);
  }
}

void sub_1C05D6D3C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v18 = *v2;
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v12 = *((_OWORD *)a2 + 1);
  long long v13 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v14 = *((_OWORD *)a2 + 3);
  long long v15 = v8;
  long long v16 = *((_OWORD *)a2 + 5);
  uint64_t v17 = v6;
  sub_1BFE2FB6C(a1, (uint64_t)&v9);
}

void sub_1C05D6DB4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v18 = *v2;
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v12 = *((_OWORD *)a2 + 1);
  long long v13 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v14 = *((_OWORD *)a2 + 3);
  long long v15 = v8;
  long long v16 = *((_OWORD *)a2 + 5);
  uint64_t v17 = v6;
  sub_1BFE2F328(a1, (uint64_t)&v9);
}

uint64_t sub_1C05D6E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v19 = *v2;
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 80);
  uint64_t v18 = v6;
  return sub_1BFFDD9B8(a1, &v10);
}

void sub_1C05D6EAC(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D6EE0(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D6F04(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v18 = *(void *)(v2 + 24);
  uint64_t v40 = *(void *)(v2 + 16);
  uint64_t v26 = v4;
  char v19 = v5;
  char v27 = v5;
  char v28 = v6;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  uint64_t v32 = v10;
  uint64_t v33 = v12;
  uint64_t v34 = v11;
  uint64_t v23 = v14;
  uint64_t v24 = v13;
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  uint64_t v21 = v16;
  uint64_t v22 = v15;
  uint64_t v37 = v15;
  uint64_t v38 = v16;
  uint64_t v20 = v17;
  uint64_t v39 = v17;
  sub_1BFE2F328(a1, (uint64_t)&v26);
  if (!v3)
  {
    uint64_t v40 = v18;
    uint64_t v26 = v4;
    char v27 = v19;
    char v28 = v6;
    uint64_t v29 = v7;
    uint64_t v30 = v8;
    uint64_t v31 = v9;
    uint64_t v32 = v10;
    uint64_t v33 = v12;
    uint64_t v34 = v11;
    uint64_t v35 = v24;
    uint64_t v36 = v23;
    uint64_t v37 = v22;
    uint64_t v38 = v21;
    uint64_t v39 = v20;
    sub_1BFF91718((uint64_t)a1, &v26);
  }
}

void sub_1C05D701C(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D7034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v19 = v2[1];
  uint64_t v41 = *v2;
  uint64_t v27 = v4;
  char v20 = v5;
  char v28 = v5;
  char v29 = v6;
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  uint64_t v34 = v12;
  uint64_t v35 = v11;
  uint64_t v24 = v14;
  uint64_t v25 = v13;
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  uint64_t v22 = v16;
  uint64_t v23 = v15;
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  uint64_t v21 = v17;
  uint64_t v40 = v17;
  uint64_t result = sub_1BFF91718(a1, &v27);
  if (!v3)
  {
    uint64_t v41 = v19;
    uint64_t v27 = v4;
    char v28 = v20;
    char v29 = v6;
    uint64_t v30 = v7;
    uint64_t v31 = v8;
    uint64_t v32 = v9;
    uint64_t v33 = v10;
    uint64_t v34 = v12;
    uint64_t v35 = v11;
    uint64_t v36 = v25;
    uint64_t v37 = v24;
    uint64_t v38 = v23;
    uint64_t v39 = v22;
    uint64_t v40 = v21;
    return sub_1BFF91718(a1, &v27);
  }
  return result;
}

uint64_t sub_1C05D713C(uint64_t a1, uint64_t *a2)
{
  return sub_1BFF91718(a1, a2);
}

uint64_t sub_1C05D7154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(v2 + 16);
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 80);
  uint64_t v18 = v6;
  return sub_1BFF91718(a1, &v10);
}

uint64_t sub_1C05D71CC(uint64_t a1, uint64_t a2)
{
  return sub_1C05D7034(a1, a2);
}

uint64_t sub_1C05D71E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C05D7224(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BFE2F328, sub_1BFE2F7E0);
}

uint64_t sub_1C05D7224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t, _OWORD *, uint64_t))
{
  long long v10 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v10;
  uint64_t v16 = *(void *)(a2 + 96);
  long long v11 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  uint64_t v15[3] = v12;
  uint64_t v13 = *(void *)(v6 + 8);
  uint64_t result = a5();
  if (!v7) {
    return a6(a1, v15, v13);
  }
  return result;
}

void sub_1C05D72A4(unint64_t *a1, uint64_t *a2)
{
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v12 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = *(void *)(v2 + 16);
  uint64_t v25 = *(void *)(v2 + 24);
  uint64_t v26 = *a2;
  uint64_t v40 = v17;
  uint64_t v23 = v26;
  char v21 = v5;
  char v22 = v4;
  char v27 = v4;
  char v28 = v5;
  uint64_t v19 = v7;
  uint64_t v20 = v6;
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  uint64_t v18 = v8;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v11;
  uint64_t v34 = v10;
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  sub_1BFE2F328(a1, (uint64_t)&v26);
  if (!v3)
  {
    if (v25)
    {
      uint64_t v26 = v23;
      char v27 = v22;
      char v28 = v21;
      uint64_t v29 = v20;
      uint64_t v30 = v19;
      uint64_t v31 = v18;
      uint64_t v32 = v9;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      uint64_t v35 = v12;
      uint64_t v36 = v13;
      uint64_t v37 = v14;
      uint64_t v38 = v15;
      uint64_t v39 = v16;
      sub_1BFF7855C(a1, (uint64_t)&v26);
    }
  }
}

void sub_1C05D73B8(unint64_t *a1, uint64_t *a2)
{
}

void sub_1C05D73D0(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D73F4(unint64_t *a1, uint64_t a2)
{
}

void sub_1C05D740C(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D7424(uint64_t a1, uint64_t *a2)
{
  return sub_1C05D0740(a1, a2);
}

void sub_1C05D743C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v71 = a1;
  uint64_t v5 = type metadata accessor for FormatPropertyDefinition(0) - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v9 = *(unsigned __int8 *)(v2 + 48);
  if (v9 >> 6)
  {
    uint64_t v10 = *a2;
    char v11 = *((unsigned char *)a2 + 8);
    char v12 = *((unsigned char *)a2 + 9);
    uint64_t v13 = a2[3];
    uint64_t v52 = a2[2];
    uint64_t v53 = v10;
    uint64_t v14 = a2[4];
    uint64_t v50 = a2[5];
    uint64_t v51 = v14;
    uint64_t v49 = a2[6];
    uint64_t v48 = a2[7];
    uint64_t v47 = a2[8];
    uint64_t v46 = a2[9];
    uint64_t v45 = a2[10];
    uint64_t v44 = a2[11];
    uint64_t v43 = a2[12];
    uint64_t v15 = *(void *)v2;
    uint64_t v16 = *(void *)(v2 + 8);
    uint64_t v17 = *(void *)(v2 + 16);
    uint64_t v42 = *(void *)(v2 + 24);
    uint64_t v18 = *(void *)(v2 + 32);
    uint64_t v19 = *(void *)(v2 + 40);
    if (v9 >> 6 == 1)
    {
      if (v9) {
        return;
      }
      uint64_t v20 = *(void *)(v17 + 32);
      __int16 v21 = *(_WORD *)(v17 + 40);
      long long v54 = *(_OWORD *)(v17 + 16);
      uint64_t v55 = v20;
      __int16 v56 = v21;
      uint64_t v57 = v53;
      char v58 = v11;
      char v59 = v12;
      uint64_t v60 = v52;
      uint64_t v61 = v13;
      uint64_t v62 = v51;
      uint64_t v63 = v50;
      uint64_t v64 = v49;
      uint64_t v65 = v48;
      uint64_t v66 = v47;
      uint64_t v67 = v46;
      uint64_t v68 = v45;
      uint64_t v69 = v44;
      uint64_t v70 = v43;
      uint64_t v22 = v15;
      uint64_t v23 = v16;
      uint64_t v24 = v17;
      uint64_t v25 = v42;
      sub_1BFF1DB64(v15, v16, v17, v42, v18, v19, v9);
      sub_1BFF429DC(v24, v25, v18, v19, 0);
      sub_1BFF8449C(v71, (uint64_t)&v57);
      sub_1BFEC41E8(v24, v25, v18, v19, 0);
      uint64_t v26 = v22;
      uint64_t v27 = v23;
      uint64_t v28 = v24;
      uint64_t v29 = v25;
      uint64_t v30 = v18;
      uint64_t v31 = v19;
      unsigned __int8 v32 = v9;
    }
    else
    {
      uint64_t v41 = *(void *)(v2 + 32);
      uint64_t v33 = *(void *)(v15 + 16);
      if (!v33) {
        return;
      }
      uint64_t v37 = v16;
      uint64_t v38 = v17;
      uint64_t v39 = v19;
      unsigned int v40 = v9;
      uint64_t v34 = v15 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v35 = *(void *)(v6 + 72);
      uint64_t v36 = v15;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BFF83CC4(v34, (uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
        uint64_t v57 = v53;
        char v58 = v11;
        char v59 = v12;
        uint64_t v60 = v52;
        uint64_t v61 = v13;
        uint64_t v62 = v51;
        uint64_t v63 = v50;
        uint64_t v64 = v49;
        uint64_t v65 = v48;
        uint64_t v66 = v47;
        uint64_t v67 = v46;
        uint64_t v68 = v45;
        uint64_t v69 = v44;
        uint64_t v70 = v43;
        sub_1C05D3CE0(v71, (uint64_t)&v57);
        if (v3) {
          break;
        }
        sub_1C05DDC60((uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
        v34 += v35;
        if (!--v33) {
          goto LABEL_11;
        }
      }
      sub_1C05DDC60((uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
LABEL_11:
      uint64_t v26 = v36;
      uint64_t v27 = v37;
      uint64_t v28 = v38;
      uint64_t v29 = v42;
      uint64_t v30 = v41;
      uint64_t v31 = v39;
      unsigned __int8 v32 = v40;
    }
    sub_1BFEC28BC(v26, v27, v28, v29, v30, v31, v32);
  }
}

void sub_1C05D7838(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  char v7 = *(unsigned char *)(v2 + 80);
  long long v8 = *(_OWORD *)(v2 + 48);
  long long v20 = *(_OWORD *)(v2 + 32);
  long long v21 = v8;
  long long v22 = *(_OWORD *)(v2 + 64);
  char v23 = v7;
  uint64_t v11 = v3;
  char v12 = v4;
  char v13 = v5;
  long long v9 = *(_OWORD *)(a2 + 32);
  long long v14 = *(_OWORD *)(a2 + 16);
  long long v15 = v9;
  long long v10 = *(_OWORD *)(a2 + 64);
  long long v16 = *(_OWORD *)(a2 + 48);
  long long v17 = v10;
  long long v18 = *(_OWORD *)(a2 + 80);
  uint64_t v19 = v6;
  sub_1C05D743C(a1, &v11);
}

void sub_1C05D78C0(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05D78D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C9F64(a1, a2, a3);
}

uint64_t sub_1C05D78F0(uint64_t result, uint64_t *a2)
{
  if ((~*(void *)(v2 + 8) & 0xF000000000000007) != 0)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v6 = *a2;
    uint64_t v18 = *(void *)(v2 + 8);
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 3);
    long long v15 = v8;
    long long v16 = *((_OWORD *)a2 + 5);
    uint64_t v17 = v3;
    return sub_1BFF79540(result, (uint64_t)&v9);
  }
  return result;
}

uint64_t sub_1C05D7974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05C7A98(a1, a2, a3);
}

uint64_t sub_1C05D798C(unint64_t *a1, uint64_t *a2)
{
  return sub_1C05D1AE0(a1, a2);
}

void sub_1C05D79B0(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D79D4(uint64_t a1, uint64_t a2)
{
  return sub_1C05D3050(a1, a2);
}

uint64_t sub_1C05D79EC(uint64_t a1, uint64_t a2)
{
  return sub_1C001BF30(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1C001C168);
}

uint64_t sub_1C05D7A24(uint64_t a1, uint64_t a2)
{
  return sub_1C05D7B04(a1, a2);
}

uint64_t sub_1C05D7A3C(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v3;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v5;
  uint64_t v6 = *v2;
  if ((*v2 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(v6 + 16);
    uint64_t v9 = *(void *)(v6 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C00389F8(v7, (uint64_t)v10, v8, v9);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C05D7AE0(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D7B04(uint64_t result, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v18 = *(void *)(v2 + 32);
  uint64_t v19 = *(void *)(v2 + 96);
  int v20 = *(unsigned __int8 *)(v2 + 144);
  uint64_t v34 = *(void *)(v2 + 152);
  uint64_t v42 = result;
  uint64_t v43 = v10;
  char v41 = v6;
  uint64_t v39 = v7;
  uint64_t v40 = v8;
  uint64_t v37 = v17;
  uint64_t v38 = v9;
  if ((~*(void *)(v2 + 24) & 0xF000000000000007) != 0)
  {
    uint64_t v31 = *(void *)(v2 + 96);
    uint64_t v33 = *(void *)(v2 + 32);
    int v29 = *(unsigned __int8 *)(v2 + 144);
    uint64_t v58 = *(void *)(v2 + 24);
    uint64_t v44 = v4;
    char v45 = v5;
    char v46 = v6;
    uint64_t v47 = v8;
    uint64_t v48 = v7;
    uint64_t v49 = v9;
    uint64_t v50 = v10;
    uint64_t v51 = v11;
    uint64_t v52 = v12;
    uint64_t v53 = v13;
    uint64_t v54 = v14;
    uint64_t v55 = v15;
    uint64_t v56 = v16;
    uint64_t v57 = v17;
    uint64_t v21 = v16;
    uint64_t v22 = v15;
    uint64_t v23 = v14;
    uint64_t v24 = v13;
    uint64_t v25 = v12;
    uint64_t v26 = v11;
    uint64_t result = sub_1BFF7ACAC(result, &v44);
    if (v3) {
      return result;
    }
    uint64_t v11 = v26;
    uint64_t v12 = v25;
    uint64_t v13 = v24;
    uint64_t v14 = v23;
    uint64_t v15 = v22;
    uint64_t v16 = v21;
    uint64_t v17 = v37;
    uint64_t v9 = v38;
    uint64_t v19 = v31;
    uint64_t v18 = v33;
    int v20 = v29;
    uint64_t result = v42;
    uint64_t v10 = v43;
    char v6 = v41;
    uint64_t v7 = v39;
    uint64_t v8 = v40;
  }
  uint64_t v36 = v11;
  if (!v18)
  {
LABEL_10:
    if (v20 != 254) {
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v18 + 16);
  if (!v27)
  {
    uint64_t v10 = v43;
    uint64_t v17 = v37;
    if (v20 != 254)
    {
LABEL_13:
      uint64_t v58 = v19;
      uint64_t v44 = v4;
      char v45 = v5;
      char v46 = v6;
      uint64_t v47 = v8;
      uint64_t v48 = v7;
      uint64_t v49 = v9;
      uint64_t v50 = v10;
      uint64_t v51 = v11;
      uint64_t v52 = v12;
      uint64_t v53 = v13;
      uint64_t v54 = v14;
      uint64_t v55 = v15;
      uint64_t v56 = v16;
      uint64_t v57 = v17;
      uint64_t result = sub_1BFF79540(result, (uint64_t)&v44);
      if (v3) {
        return result;
      }
    }
LABEL_14:
    if ((~v34 & 0xF000000000000007) != 0)
    {
      uint64_t v58 = v34;
      uint64_t v44 = v4;
      char v45 = v5;
      char v46 = v41;
      uint64_t v47 = v40;
      uint64_t v48 = v39;
      uint64_t v49 = v38;
      uint64_t v50 = v43;
      uint64_t v51 = v36;
      uint64_t v52 = v12;
      uint64_t v53 = v13;
      uint64_t v54 = v14;
      uint64_t v55 = v15;
      uint64_t v56 = v16;
      uint64_t v57 = v17;
      return sub_1BFF79540(v42, (uint64_t)&v44);
    }
    return result;
  }
  int v30 = v20;
  uint64_t v32 = v19;
  uint64_t v35 = v12;
  uint64_t v28 = swift_bridgeObjectRetain() + 64;
  while (1)
  {
    uint64_t v58 = *(void *)(v28 - 24);
    uint64_t v44 = v4;
    char v45 = v5;
    char v46 = v41;
    uint64_t v47 = v40;
    uint64_t v48 = v39;
    uint64_t v49 = v38;
    uint64_t v50 = v43;
    uint64_t v51 = v36;
    uint64_t v52 = v35;
    uint64_t v53 = v13;
    uint64_t v54 = v14;
    uint64_t v55 = v15;
    uint64_t v56 = v16;
    uint64_t v57 = v37;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BFF79540(v42, (uint64_t)&v44);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v3 = 0;
    v28 += 40;
    if (!--v27)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = 0;
      uint64_t result = v42;
      uint64_t v10 = v43;
      char v6 = v41;
      uint64_t v7 = v39;
      uint64_t v8 = v40;
      uint64_t v17 = v37;
      uint64_t v9 = v38;
      uint64_t v12 = v35;
      uint64_t v11 = v36;
      uint64_t v19 = v32;
      int v20 = v30;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void sub_1C05D7E5C(unint64_t *a1, uint64_t *a2)
{
}

void sub_1C05D7E74(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D7E98(uint64_t a1, uint64_t a2)
{
  return sub_1BFF43E18(a1, a2);
}

uint64_t sub_1C05D7EBC(uint64_t result, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v18 = *(void *)(v2 + 24);
  uint64_t v27 = *(void *)(v2 + 88);
  int v19 = *(unsigned __int8 *)(v2 + 136);
  uint64_t v46 = v10;
  if ((~*(void *)(v2 + 16) & 0xF000000000000007) == 0) {
    goto LABEL_15;
  }
  uint64_t v61 = *(void *)(v2 + 16);
  uint64_t v47 = v4;
  char v48 = v5;
  char v49 = v6;
  uint64_t v50 = v8;
  uint64_t v51 = v7;
  uint64_t v52 = v9;
  uint64_t v53 = v10;
  uint64_t v54 = v11;
  uint64_t v55 = v12;
  uint64_t v56 = v13;
  uint64_t v57 = v14;
  uint64_t v58 = v15;
  uint64_t v59 = v16;
  uint64_t v60 = v17;
  uint64_t v20 = result;
  uint64_t v36 = v13;
  uint64_t v38 = v11;
  uint64_t v28 = v18;
  uint64_t v21 = v12;
  uint64_t v32 = v17;
  uint64_t v34 = v15;
  uint64_t v22 = v16;
  uint64_t v40 = v9;
  uint64_t v42 = v7;
  char v44 = v6;
  sub_1BFF7ACAC(result, &v47);
  uint64_t v9 = v40;
  uint64_t v7 = v42;
  char v6 = v44;
  uint64_t result = v20;
  uint64_t v17 = v32;
  uint64_t v15 = v34;
  uint64_t v16 = v22;
  uint64_t v13 = v36;
  uint64_t v11 = v38;
  uint64_t v12 = v21;
  uint64_t v18 = v28;
  if (!v3)
  {
LABEL_15:
    if (v18 && (uint64_t v23 = *(void *)(v18 + 16)) != 0)
    {
      int v26 = v19;
      uint64_t v33 = v17;
      uint64_t v35 = v15;
      uint64_t v29 = v16;
      uint64_t v37 = v13;
      uint64_t v39 = v11;
      uint64_t v30 = v12;
      uint64_t v41 = v9;
      uint64_t v43 = v7;
      char v45 = v6;
      uint64_t v31 = result;
      swift_bridgeObjectRetain();
      uint64_t v24 = v18 + 64;
      do
      {
        uint64_t v61 = *(void *)(v24 - 24);
        uint64_t v47 = v4;
        char v48 = v5;
        char v49 = v45;
        uint64_t v50 = v8;
        uint64_t v51 = v43;
        uint64_t v52 = v41;
        uint64_t v53 = v46;
        uint64_t v54 = v39;
        uint64_t v55 = v30;
        uint64_t v56 = v37;
        uint64_t v57 = v14;
        uint64_t v58 = v35;
        uint64_t v59 = v29;
        uint64_t v60 = v33;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFF79540(v31, (uint64_t)&v47);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release_n();
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        uint64_t v3 = 0;
        v24 += 40;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      uint64_t result = v31;
      char v6 = v45;
      uint64_t v9 = v41;
      uint64_t v7 = v43;
      uint64_t v25 = v46;
      uint64_t v13 = v37;
      uint64_t v11 = v39;
      uint64_t v12 = v30;
      uint64_t v17 = v33;
      uint64_t v15 = v35;
      uint64_t v16 = v29;
      if (v26 != 254) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v25 = v46;
      if (v19 != 254)
      {
LABEL_11:
        uint64_t v61 = v27;
        uint64_t v47 = v4;
        char v48 = v5;
        char v49 = v6;
        uint64_t v50 = v8;
        uint64_t v51 = v7;
        uint64_t v52 = v9;
        uint64_t v53 = v25;
        uint64_t v54 = v11;
        uint64_t v55 = v12;
        uint64_t v56 = v13;
        uint64_t v57 = v14;
        uint64_t v58 = v15;
        uint64_t v59 = v16;
        uint64_t v60 = v17;
        return sub_1BFF79540(result, (uint64_t)&v47);
      }
    }
  }
  return result;
}

uint64_t sub_1C05D819C(uint64_t a1, uint64_t a2)
{
  return sub_1C05D7EBC(a1, a2);
}

uint64_t sub_1C05D81B4(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v3;
  uint64_t v13 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *v2;
  unint64_t v7 = (unint64_t)*v2 >> 62;
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v5;
  if (v7 == 1)
  {
    uint64_t v8 = result;
    uint64_t v9 = v6 & 0x3FFFFFFFFFFFFFFFLL;
    unint64_t v10 = *(void *)(v9 + 16);
    uint64_t v11 = *(void *)(v9 + 24);
    sub_1BFE6FA30(v10);
    swift_bridgeObjectRetain();
    sub_1C1144E0C(v8, (uint64_t)v12, v10, v11);
    sub_1BFF0056C(v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C05D8260(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  __int16 v7 = *((_WORD *)v2 + 8);
  long long v19 = *v2;
  __int16 v20 = v7;
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v8 = *((_OWORD *)a2 + 2);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v14 = v8;
  long long v9 = *((_OWORD *)a2 + 4);
  long long v15 = *((_OWORD *)a2 + 3);
  long long v16 = v9;
  long long v17 = *((_OWORD *)a2 + 5);
  uint64_t v18 = v6;
  sub_1C05D658C(a1, (uint64_t)&v10);
}

void sub_1C05D82E0(unint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1C05D8304(uint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v10[4] = *(_OWORD *)(a2 + 64);
  v10[5] = v3;
  uint64_t v11 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v5;
  if ((*v2 & 0x8000000000000000) != 0)
  {
    uint64_t v6 = result;
    uint64_t v7 = *v2 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v8 = *(void *)(v7 + 0x10);
    uint64_t v9 = *(void *)(v7 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C1144B38(v6, (uint64_t)v10, v8, v9);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1C05D83AC(uint64_t a1)
{
  v22[1] = a1;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v3 - 8);
  long long v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v22 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v22 - v10;
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)v22 - v13;
  uint64_t v15 = *(void *)v1;
  uint64_t v16 = *(void *)(v1 + 8);
  unsigned int v17 = *(unsigned __int8 *)(v1 + 16);
  switch(v17 >> 6)
  {
    case 1u:
      if (v17)
      {
        sub_1BFE94AB4(*(void *)v1, *(void *)(v1 + 8), 1);
        uint64_t v21 = sub_1C00B857C((uint64_t)&unk_1F1B6CFB8);
        sub_1C0EC63F8(v15, v16, v21, 1, (uint64_t)v11);
        long long v14 = v11;
        if (v2) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
      break;
    case 2u:
      if (v17)
      {
        sub_1BFE94AB4(*(void *)v1, *(void *)(v1 + 8), 1);
        uint64_t v19 = sub_1C00B857C((uint64_t)&unk_1F1B6CFE0);
        sub_1C0EC63F8(v15, v16, v19, 1, (uint64_t)v8);
        long long v14 = v8;
        if (v2) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
      break;
    case 3u:
      if (v17)
      {
        sub_1BFE94AB4(*(void *)v1, *(void *)(v1 + 8), 1);
        uint64_t v20 = sub_1C00B857C((uint64_t)&unk_1F1B6D008);
        sub_1C0EC63F8(v15, v16, v20, 1, (uint64_t)v5);
        long long v14 = v5;
        if (v2) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
      break;
    default:
      if (v17)
      {
        sub_1BFE94AB4(*(void *)v1, *(void *)(v1 + 8), 1);
        uint64_t v18 = sub_1C00B857C((uint64_t)&unk_1F1B6CF90);
        sub_1C0EC63F8(v15, v16, v18, 1, (uint64_t)v14);
        if (!v2) {
LABEL_10:
        }
          sub_1C05DDCC0((uint64_t)v14, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
LABEL_11:
        swift_bridgeObjectRelease();
        sub_1C0224254(v15, v16, v17);
      }
      break;
  }
}

uint64_t sub_1C05D867C(uint64_t result)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v2 = *(void *)(v1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v5 = result;
  switch(*(unsigned char *)(v1 + 17))
  {
    case 1:
      if (v4 <= 0xFD)
      {
        sub_1C02240E8(v3, v2, v4);
        sub_1C05D83AC(v5);
        uint64_t v6 = v3;
        uint64_t v7 = v2;
        char v8 = v4;
        unsigned __int8 v9 = 1;
        goto LABEL_10;
      }
      break;
    case 2:
      if (v4 <= 0xFD)
      {
        sub_1C02240E8(v3, v2, v4);
        sub_1C05D83AC(v5);
        uint64_t v6 = v3;
        uint64_t v7 = v2;
        char v8 = v4;
        unsigned __int8 v9 = 2;
        goto LABEL_10;
      }
      break;
    case 3:
      if (v4 <= 0xFD)
      {
        sub_1C02240E8(v3, v2, v4);
        sub_1C05D83AC(v5);
        uint64_t v6 = v3;
        uint64_t v7 = v2;
        char v8 = v4;
        unsigned __int8 v9 = 3;
        goto LABEL_10;
      }
      break;
    case 4:
      return result;
    default:
      if (v4 <= 0xFD)
      {
        sub_1C02240E8(v3, v2, v4);
        sub_1C05D83AC(v5);
        uint64_t v6 = v3;
        uint64_t v7 = v2;
        char v8 = v4;
        unsigned __int8 v9 = 0;
LABEL_10:
        uint64_t result = sub_1C022422C(v6, v7, v8, v9);
      }
      break;
  }
  return result;
}

uint64_t sub_1C05D881C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, void))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      uint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      uint64_t result = a7();
      break;
    case 6u:
      uint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t result = a8(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C05D88D4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1BFF35EA4(result);
  }
  return result;
}

unint64_t sub_1C05D88E8(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1BFF322A8(result);
  }
  return result;
}

unint64_t sub_1C05D88FC(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  switch((a14 >> 18) & 4 | ((unsigned __int16)a14 >> 14))
  {
    case 0u:
      uint64_t result = sub_1BFF2B584(result, a2, a3, a4, a5, a6);
      break;
    case 1u:
      sub_1BFF2A99C(result, a2, a3, a4, a5, a6, a7, SHIBYTE(a7));
      uint64_t result = sub_1BFF2B090(a8, a9, a10, a11, a12, a13, a14 & 0xFFEF3FFF);
      break;
    case 5u:
      uint64_t result = sub_1BFE86E48(result, a2, a3, a4);
      break;
    case 6u:
      sub_1BFF58F10(result);
      uint64_t result = sub_1BFF8401C(a2, a3);
      break;
    case 7u:
      uint64_t result = sub_1C05D8AD4(a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05D8AD4(uint64_t result)
{
  if ((result & 0xFE) != 0xC) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C05D8B28(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, unint64_t, unint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch(a6 >> 5)
  {
    case 1:
    case 4:
      uint64_t result = a7();
      break;
    case 3:
      uint64_t result = a8(result, a2, a3, a3 >> 8);
      break;
    case 5:
      uint64_t result = sub_1C05D8BC0(result, a2, a3, a4, a5, a6 & 1, a9);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05D8BC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a6) {
    int v7 = 2;
  }
  else {
    int v7 = 0;
  }
  unsigned int v8 = v7 & 0xFFFFFFFE | (a2 >> 1) & 1;
  switch(v8)
  {
    case 2u:
      return a7(a2, a3, a4, a5);
    case 1u:
      return ((uint64_t (*)(uint64_t, unint64_t))a7)(result, a2 & 0xFFFFFFFFFFFFFFFDLL);
    case 0u:
      return ((uint64_t (*)(void))a7)();
  }
  return result;
}

uint64_t sub_1C05D8C14(uint64_t result)
{
  if ((result & 0xFE) != 0xC) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C05D8C2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05D8CF0()
{
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v22[-1] - v3;
  uint64_t v5 = type metadata accessor for FormatURL();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22[-1] - v10;
  uint64_t v12 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1F4188790](v12 - 8);
  long long v14 = (char *)&v22[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF83CC4(v0, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 2, v5);
  if (!result)
  {
    sub_1BFCCD5B8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatURL);
    sub_1BFF83CC4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v8[24])
      {
        uint64_t v18 = *(void *)v8;
        uint64_t v17 = *((void *)v8 + 1);
        uint64_t v19 = *((void *)v8 + 2);
        v22[0] = v18;
        v22[1] = v17;
        void v22[2] = v19;
        char v23 = 6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1C12ECBDC(v22, &v23);
        if (!v1)
        {
          sub_1C0EC63F8(v18, v17, v20, 1, (uint64_t)v4);
          sub_1C05DDCC0((uint64_t)v4, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
          swift_bridgeObjectRelease();
        }
        sub_1BFD7418C(v18, v17, v19, 0);
      }
    }
    else
    {
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    return sub_1C05DDC60((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  return result;
}

uint64_t sub_1C05D9014()
{
  sub_1BFF2E5E0(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v16[-1] - v3;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16[-1] - v6;
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v8 = *(void *)(v0 + 8);
    uint64_t v10 = *(void *)(v0 + 16);
    v16[0] = *(void *)v0;
    uint64_t v9 = v16[0];
    v16[1] = v8;
    v16[2] = v10;
    char v17 = 5;
    sub_1BFDEB94C(v16[0], v8, v10, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C12ECBDC(v16, &v17);
    if (v1) {
      return sub_1BFDEB9E0(v9, v8, v10, 1);
    }
    sub_1C0EC63F8(v9, v8, v11, 1, (uint64_t)v7);
    sub_1C05DDCC0((uint64_t)v7, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BFDEB9E0(v9, v8, v10, 1);
  }
  uint64_t v13 = type metadata accessor for FormatPurchaseLandingPage();
  sub_1BFFA1314(v0 + *(int *)(v13 + 20), (uint64_t)v4, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  uint64_t v14 = type metadata accessor for FormatPostPurchase();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14) == 1) {
    return sub_1C05DDCC0((uint64_t)v4, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  }
  sub_1C05D8CF0();
  return sub_1C05DDC60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
}

uint64_t sub_1C05D92D8(uint64_t a1)
{
  uint64_t v2 = v1;
  v33[1] = a1;
  uint64_t v3 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1F4188790](v3);
  v33[0] = (uint64_t)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v33 - v9;
  sub_1BFF2E5E0(0, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v33 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v33 - v18;
  uint64_t v20 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF83CC4(v2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatPurchaseAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      sub_1C05DD778((uint64_t)v22, (uint64_t)v10, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      sub_1BFFA1314((uint64_t)v10, (uint64_t)v7, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v30 = type metadata accessor for FormatPurchaseLandingPage();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v7, 1, v30) == 1)
      {
        sub_1C05DDCC0((uint64_t)v10, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        uint64_t v25 = (uint64_t)v7;
        int v26 = &qword_1EB87BA78;
        uint64_t v27 = type metadata accessor for FormatPurchaseLandingPage;
        return sub_1C05DDCC0(v25, v26, (void (*)(uint64_t))v27);
      }
      sub_1C05D9014();
      sub_1C05DDCC0((uint64_t)v10, &qword_1EB87BA78, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
      uint64_t v31 = (uint64_t (*)(void))type metadata accessor for FormatPurchaseLandingPage;
      uint64_t v32 = (uint64_t)v7;
      return sub_1C05DDC60(v32, v31);
    case 2:
      uint64_t v28 = v33[0];
      sub_1BFCCD5B8((uint64_t)v22, v33[0], type metadata accessor for FormatOsloSheetPurchaseDataModel);
      sub_1BFFA1314(v28 + *(int *)(v3 + 20), (uint64_t)v13, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      uint64_t v29 = type metadata accessor for FormatPostPurchase();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v13, 1, v29) == 1)
      {
        sub_1C05DDCC0((uint64_t)v13, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      }
      else
      {
        sub_1C05D8CF0();
        sub_1C05DDC60((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
      }
      uint64_t v31 = type metadata accessor for FormatOsloSheetPurchaseDataModel;
      uint64_t v32 = v28;
      return sub_1C05DDC60(v32, v31);
    case 3:
    case 4:
      return result;
    default:
      sub_1C05DD778((uint64_t)v22, (uint64_t)v19, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      sub_1BFFA1314((uint64_t)v19, (uint64_t)v16, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      uint64_t v24 = type metadata accessor for FormatPostPurchase();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v16, 1, v24) == 1)
      {
        sub_1C05DDCC0((uint64_t)v19, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        uint64_t v25 = (uint64_t)v16;
        int v26 = &qword_1EB87EBC8;
        uint64_t v27 = type metadata accessor for FormatPostPurchase;
        return sub_1C05DDCC0(v25, v26, (void (*)(uint64_t))v27);
      }
      else
      {
        sub_1C05D8CF0();
        sub_1C05DDCC0((uint64_t)v19, &qword_1EB87EBC8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        uint64_t v31 = (uint64_t (*)(void))type metadata accessor for FormatPostPurchase;
        uint64_t v32 = (uint64_t)v16;
        return sub_1C05DDC60(v32, v31);
      }
  }
}

uint64_t sub_1C05D9884()
{
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v14[-v3];
  uint64_t v5 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for FormatRemoteFont();
  sub_1BFF83CC4(v0 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result) {
    return sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v7[24])
  {
    uint64_t v11 = *(void *)v7;
    uint64_t v10 = *((void *)v7 + 1);
    uint64_t v12 = *((void *)v7 + 2);
    v16[0] = v11;
    v16[1] = v10;
    v16[2] = v12;
    char v15 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C12ECBDC(v16, &v15);
    if (!v1)
    {
      sub_1C0EC63F8(v11, v10, v13, 1, (uint64_t)v4);
      sub_1C05DDCC0((uint64_t)v4, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    return sub_1BFD7418C(v11, v10, v12, 0);
  }
  return result;
}

uint64_t sub_1C05D9AA0(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 72);
  long long v13 = *(_OWORD *)(a1 + 104);
  long long v14 = *(_OWORD *)(a1 + 88);
  long long v12 = *(_OWORD *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 136);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 144);
  swift_release();
  sub_1BFC5A634(v16, v2, v3, v4, v5, v6, v7, v8, v15, BYTE8(v15), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1C05D9B78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  char v8 = *(unsigned char *)(a1 + 80);
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 144);
  uint64_t v14 = *(void *)(a1 + 136);
  char v9 = *(unsigned char *)(a1 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C03596EC(v12, v11, v2, v3, v4, v5, v6, v7, v8);
  sub_1C03596EC(v20, v19, v18, v17, v16, v15, v14, v13, v9);
  return a1;
}

uint64_t sub_1C05D9C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 3:
      goto LABEL_4;
    case 4:
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05D9D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 3:
      goto LABEL_4;
    case 4:
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C05D9E24(uint64_t a1)
{
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v111 = (uint64_t)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v112 = (uint64_t)&v103 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v113 = (uint64_t)&v103 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v114 = (uint64_t)&v103 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v115 = (uint64_t)&v103 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v116 = (uint64_t)&v103 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v117 = (uint64_t)&v103 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v119 = (uint64_t)&v103 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v118 = (uint64_t)&v103 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v121 = (uint64_t)&v103 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v120 = (uint64_t)&v103 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v124 = (char *)&v103 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v122 = (uint64_t)&v103 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v129 = (char *)&v103 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v123 = (uint64_t)&v103 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v125 = (uint64_t)&v103 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v126 = (uint64_t)&v103 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v127 = (uint64_t)&v103 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v128 = (uint64_t)&v103 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v103 - v41;
  MEMORY[0x1F4188790](v43);
  char v45 = (char *)&v103 - v44;
  MEMORY[0x1F4188790](v46);
  char v48 = (char *)&v103 - v47;
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v103 - v50;
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v103 - v53;
  MEMORY[0x1F4188790](v55);
  uint64_t v57 = (char *)&v103 - v56;
  MEMORY[0x1F4188790](v58);
  uint64_t v60 = (char *)&v103 - v59;
  MEMORY[0x1F4188790](v61);
  uint64_t v63 = (char *)&v103 - v62;
  uint64_t v130 = a1;
  uint64_t v64 = (uint64_t)v131;
  uint64_t result = sub_1BFD05368();
  if (!v64)
  {
    v131 = v63;
    uint64_t v110 = v60;
    uint64_t v109 = v57;
    __int16 v108 = v54;
    int v107 = v51;
    uint64_t v106 = v48;
    uint64_t v105 = v45;
    uint64_t v104 = v42;
    uint64_t v66 = (int *)type metadata accessor for FormatRemoteVideo();
    uint64_t v67 = v132;
    sub_1BFD05368();
    sub_1BFD05368();
    uint64_t v68 = (uint64_t)v131;
    sub_1BFFA1314(v67 + v66[7], (uint64_t)v131, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    uint64_t v69 = type metadata accessor for FormatURL();
    uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48);
    if (v70(v68, 1, v69) == 1)
    {
      sub_1C05DDCC0(v68, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v68, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v71 = (uint64_t)v110;
    sub_1BFFA1314(v67 + v66[8], (uint64_t)v110, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v71, 1, v69) == 1)
    {
      sub_1C05DDCC0(v71, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v71, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v72 = (uint64_t)v129;
    uint64_t v73 = (uint64_t)v109;
    sub_1BFFA1314(v67 + v66[9], (uint64_t)v109, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v73, 1, v69) == 1)
    {
      sub_1C05DDCC0(v73, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v73, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v74 = (uint64_t)v108;
    sub_1BFFA1314(v67 + v66[10], (uint64_t)v108, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v74, 1, v69) == 1)
    {
      sub_1C05DDCC0(v74, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v74, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v75 = (uint64_t)v107;
    sub_1BFFA1314(v67 + v66[11], (uint64_t)v107, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v75, 1, v69) == 1)
    {
      sub_1C05DDCC0(v75, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v75, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v76 = (uint64_t)v106;
    sub_1BFFA1314(v67 + v66[12], (uint64_t)v106, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v76, 1, v69) == 1)
    {
      sub_1C05DDCC0(v76, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v76, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v77 = (uint64_t)v105;
    sub_1BFFA1314(v67 + v66[13], (uint64_t)v105, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v77, 1, v69) == 1)
    {
      sub_1C05DDCC0(v77, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v77, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v78 = (uint64_t)v104;
    sub_1BFFA1314(v67 + v66[14], (uint64_t)v104, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v78, 1, v69) == 1)
    {
      sub_1C05DDCC0(v78, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v78, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v79 = v128;
    sub_1BFFA1314(v67 + v66[15], v128, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v79, 1, v69) == 1)
    {
      sub_1C05DDCC0(v79, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v79, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v80 = v127;
    sub_1BFFA1314(v67 + v66[16], v127, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v80, 1, v69) == 1)
    {
      sub_1C05DDCC0(v80, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v80, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v81 = v126;
    sub_1BFFA1314(v67 + v66[17], v126, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v81, 1, v69) == 1)
    {
      sub_1C05DDCC0(v81, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v81, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v82 = v125;
    sub_1BFFA1314(v67 + v66[18], v125, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v82, 1, v69) == 1)
    {
      sub_1C05DDCC0(v82, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v82, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    uint64_t v83 = v123;
    sub_1BFFA1314(v67 + v66[19], v123, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    unsigned int v84 = v70(v83, 1, v69);
    uint64_t v85 = (uint64_t)v124;
    if (v84 == 1)
    {
      sub_1C05DDCC0(v83, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v83, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v72 = (uint64_t)v129;
    }
    sub_1BFFA1314(v67 + v66[20], v72, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v72, 1, v69) == 1)
    {
      sub_1C05DDCC0(v72, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v72, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v86 = v122;
    sub_1BFFA1314(v67 + v66[21], v122, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v86, 1, v69) == 1)
    {
      sub_1C05DDCC0(v86, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v86, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    sub_1BFFA1314(v67 + v66[22], v85, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v85, 1, v69) == 1)
    {
      sub_1C05DDCC0(v85, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v85, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v87 = v120;
    sub_1BFFA1314(v67 + v66[23], v120, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v87, 1, v69) == 1)
    {
      sub_1C05DDCC0(v87, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v87, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v88 = v121;
    sub_1BFFA1314(v67 + v66[24], v121, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v88, 1, v69) == 1)
    {
      sub_1C05DDCC0(v88, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v121, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v89 = v118;
    sub_1BFFA1314(v67 + v66[25], v118, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v89, 1, v69) == 1)
    {
      sub_1C05DDCC0(v89, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v118, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v90 = v119;
    sub_1BFFA1314(v67 + v66[26], v119, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v90, 1, v69) == 1)
    {
      sub_1C05DDCC0(v119, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v119, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v91 = v117;
    sub_1BFFA1314(v67 + v66[27], v117, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v91, 1, v69) == 1)
    {
      sub_1C05DDCC0(v117, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v117, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v92 = v116;
    sub_1BFFA1314(v67 + v66[28], v116, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v92, 1, v69) == 1)
    {
      sub_1C05DDCC0(v116, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BFD05368();
      sub_1C05DDC60(v116, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v93 = v115;
    sub_1BFFA1314(v67 + v66[29], v115, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v93, 1, v69) == 1)
    {
      sub_1C05DDCC0(v115, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      uint64_t v94 = v115;
      sub_1BFD05368();
      sub_1C05DDC60(v94, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v95 = v114;
    sub_1BFFA1314(v67 + v66[30], v114, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v95, 1, v69) == 1)
    {
      sub_1C05DDCC0(v114, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      uint64_t v96 = v114;
      sub_1BFD05368();
      sub_1C05DDC60(v96, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v97 = v113;
    sub_1BFFA1314(v67 + v66[31], v113, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v97, 1, v69) == 1)
    {
      sub_1C05DDCC0(v113, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      uint64_t v98 = v113;
      sub_1BFD05368();
      sub_1C05DDC60(v98, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v99 = v112;
    sub_1BFFA1314(v67 + v66[32], v112, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v99, 1, v69) == 1)
    {
      sub_1C05DDCC0(v112, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      uint64_t v100 = v112;
      sub_1BFD05368();
      sub_1C05DDC60(v100, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
    uint64_t v101 = v111;
    sub_1BFFA1314(v67 + v66[33], v111, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v70(v101, 1, v69) == 1)
    {
      return sub_1C05DDCC0(v111, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      uint64_t v102 = v111;
      sub_1BFD05368();
      return sub_1C05DDC60(v102, (uint64_t (*)(void))type metadata accessor for FormatURL);
    }
  }
  return result;
}

void sub_1C05DB68C()
{
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10[-1] - v3;
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v6 = *(void *)(v0 + 8);
    uint64_t v5 = *(void *)(v0 + 16);
    v10[0] = *(void *)v0;
    uint64_t v7 = v10[0];
    v10[1] = v6;
    v10[2] = v5;
    char v11 = 5;
    sub_1BFDEB94C(v10[0], v6, v5, 1);
    uint64_t v8 = sub_1C12ECBDC(v10, &v11);
    if (!v1)
    {
      sub_1C0EC63F8(v7, v6, v8, 1, (uint64_t)v4);
      sub_1C05DDCC0((uint64_t)v4, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C05DB7D4()
{
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v20[-v3];
  uint64_t v5 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v20[-v9];
  uint64_t v11 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF83CC4(v0, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
  sub_1BFCCD5B8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFF83CC4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v7[24])
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v15 = *((void *)v7 + 1);
      uint64_t v17 = *((void *)v7 + 2);
      v22[0] = v16;
      v22[1] = v15;
      void v22[2] = v17;
      char v21 = 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C12ECBDC(v22, &v21);
      if (!v1)
      {
        sub_1C0EC63F8(v16, v15, v18, 1, (uint64_t)v4);
        sub_1C05DDCC0((uint64_t)v4, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
      sub_1BFD7418C(v16, v15, v17, 0);
    }
  }
  else
  {
    sub_1C05DDC60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
  }
  return sub_1C05DDC60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatURL);
}

void sub_1C05DBAA4()
{
  uint64_t v2 = v1;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v14[-v7];
  uint64_t v10 = *(void *)v0;
  uint64_t v9 = *(void *)(v0 + 8);
  uint64_t v11 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24))
  {
    if (v11)
    {
      uint64_t v12 = sub_1C00B857C((uint64_t)&unk_1F1B6D7D0);
      sub_1C0EC63F8(v10, v9, v12, 1, (uint64_t)v5);
      uint64_t v8 = v5;
      if (v2)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_4:
      sub_1C05DDCC0((uint64_t)v8, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      goto LABEL_5;
    }
  }
  else
  {
    v16[0] = *(void *)v0;
    v16[1] = v9;
    v16[2] = v11;
    char v15 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C12ECBDC(v16, &v15);
    if (!v2)
    {
      sub_1C0EC63F8(v10, v9, v13, 1, (uint64_t)v8);
      goto LABEL_4;
    }
  }
}

uint64_t sub_1C05DBC50(char *a1)
{
  uint64_t v3 = v2;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v61 = (uint64_t)&v51 - v9;
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v51 - v13;
  int v15 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v16 = *(void *)(v1 + 40);
  int v18 = *(unsigned __int8 *)(v1 + 48);
  uint64_t result = *(void *)(v1 + 56);
  int v20 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v21 = *(void *)(v1 + 80);
  uint64_t v22 = *(void *)(v1 + 88);
  uint64_t v59 = *(void *)(v1 + 64);
  uint64_t v60 = v21;
  int v23 = *(unsigned __int8 *)(v1 + 96);
  if (v15 == 255)
  {
LABEL_4:
    int v34 = v20;
    uint64_t v35 = v61;
    if (v18 == 255) {
      goto LABEL_14;
    }
    goto LABEL_5;
  }
  int v56 = *(unsigned __int8 *)(v1 + 96);
  uint64_t v57 = v7;
  uint64_t v25 = *(void *)(v1 + 8);
  uint64_t v24 = *(void *)(v1 + 16);
  if ((v15 & 1) == 0)
  {
    uint64_t v26 = result;
    uint64_t v27 = v25;
    uint64_t v28 = v16;
    uint64_t v29 = v24;
    int v30 = v18;
    unsigned __int8 v31 = v15;
    uint64_t v32 = v17;
    uint64_t v33 = v12;
    sub_1BFFC879C(v27, v29, v31);
    uint64_t v12 = v33;
    uint64_t v17 = v32;
    uint64_t v16 = v28;
    int v18 = v30;
    uint64_t result = v26;
    uint64_t v3 = v2;
    uint64_t v7 = v57;
    int v23 = v56;
    goto LABEL_4;
  }
  uint64_t v51 = v12;
  uint64_t v52 = v17;
  uint64_t v53 = v16;
  int v54 = v18;
  uint64_t v58 = result;
  uint64_t v55 = v22;
  sub_1BFE94AB4(v25, v24, 1);
  uint64_t v44 = sub_1C00B857C((uint64_t)&unk_1F1B6D7F8);
  sub_1C0EC63F8(v25, v24, v44, 1, (uint64_t)v14);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return sub_1BFFC879C(v25, v24, v15);
  }
  sub_1C05DDCC0((uint64_t)v14, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1BFFC879C(v25, v24, v15);
  uint64_t v3 = 0;
  uint64_t v7 = v57;
  uint64_t result = v58;
  int v23 = v56;
  uint64_t v22 = v55;
  int v34 = v20;
  uint64_t v35 = v61;
  int v18 = v54;
  uint64_t v17 = v52;
  uint64_t v16 = v53;
  uint64_t v12 = v51;
  if (v54 == 255)
  {
LABEL_14:
    uint64_t v45 = v60;
    if (v34 != 255)
    {
      if (v34)
      {
        uint64_t v55 = v22;
        uint64_t v47 = result;
        uint64_t v48 = v59;
        sub_1BFE94AB4(result, v59, 1);
        uint64_t v49 = sub_1C00B857C((uint64_t)&unk_1F1B6D848);
        sub_1C0EC63F8(v47, v48, v49, 1, v35);
        if (v3)
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = v47;
          uint64_t v42 = v48;
          unsigned __int8 v43 = v34;
          return sub_1BFFC879C(v41, v42, v43);
        }
        sub_1C05DDCC0(v61, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        uint64_t v22 = v55;
        uint64_t v46 = v48;
        uint64_t result = v47;
        uint64_t v45 = v60;
      }
      else
      {
        uint64_t v46 = v59;
      }
      uint64_t result = sub_1BFFC879C(result, v46, v34);
    }
    if (v23 == 255) {
      return result;
    }
    if (v23)
    {
      sub_1BFE94AB4(v45, v22, 1);
      uint64_t v50 = sub_1C00B857C((uint64_t)&unk_1F1B6D870);
      sub_1C0EC63F8(v45, v22, v50, 1, (uint64_t)v7);
      if (v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = v45;
        uint64_t v42 = v22;
LABEL_27:
        unsigned __int8 v43 = v23;
        return sub_1BFFC879C(v41, v42, v43);
      }
      sub_1C05DDCC0((uint64_t)v7, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    uint64_t v41 = v45;
    uint64_t v42 = v22;
    goto LABEL_27;
  }
LABEL_5:
  uint64_t v58 = result;
  if ((v18 & 1) == 0)
  {
LABEL_13:
    sub_1BFFC879C(v17, v16, v18);
    uint64_t result = v58;
    goto LABEL_14;
  }
  int v54 = v18;
  uint64_t v55 = v22;
  uint64_t v36 = v16;
  uint64_t v37 = a1;
  uint64_t v38 = v17;
  uint64_t v39 = v12;
  sub_1BFE94AB4(v17, v16, 1);
  uint64_t v40 = sub_1C00B857C((uint64_t)&unk_1F1B6D820);
  uint64_t v57 = v37;
  sub_1C0EC63F8(v38, v36, v40, 1, v39);
  if (!v3)
  {
    sub_1C05DDCC0(v39, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    uint64_t v22 = v55;
    uint64_t v35 = v61;
    LOBYTE(v18) = v54;
    uint64_t v16 = v36;
    uint64_t v17 = v38;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = v38;
  uint64_t v42 = v36;
  unsigned __int8 v43 = v54;
  return sub_1BFFC879C(v41, v42, v43);
}

void sub_1C05DC11C()
{
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10[-1] - v3;
  if (!*(unsigned char *)(v0 + 24))
  {
    uint64_t v5 = *(void *)(v0 + 8);
    uint64_t v7 = *(void *)(v0 + 16);
    v10[0] = *(void *)v0;
    uint64_t v6 = v10[0];
    v10[1] = v5;
    v10[2] = v7;
    HIBYTE(v9) = 6;
    sub_1BFE86E48(v10[0], v5, v7, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C12ECBDC(v10, (char *)&v9 + 7);
    if (!v1)
    {
      sub_1C0EC63F8(v6, v5, v8, 1, (uint64_t)v4);
      sub_1C05DDCC0((uint64_t)v4, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    sub_1BFD7418C(v6, v5, v7, 0);
  }
}

uint64_t sub_1C05DC288(uint64_t result)
{
  if ((result & 0xF000000000000007) != 0xD000000000000007) {
    return sub_1BFEF68C0(result);
  }
  return result;
}

uint64_t sub_1C05DC2A4(uint64_t result)
{
  if ((result & 0xF000000000000007) != 0xD000000000000007) {
    return sub_1BFEF683C(result);
  }
  return result;
}

uint64_t sub_1C05DC2C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DC300(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DC340(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 72);
  long long v10 = *(_OWORD *)(a1 + 104);
  long long v11 = *(_OWORD *)(a1 + 88);
  long long v9 = *(_OWORD *)(a1 + 120);
  uint64_t v24 = *(void *)(a1 + 168);
  uint64_t v25 = *(void *)(a1 + 160);
  uint64_t v22 = *(void *)(a1 + 184);
  uint64_t v23 = *(void *)(a1 + 176);
  uint64_t v21 = *(void *)(a1 + 192);
  uint64_t v19 = *(void *)(a1 + 208);
  uint64_t v20 = *(void *)(a1 + 200);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v18 = *(void *)(a1 + 216);
  uint64_t v6 = *(void *)(a1 + 232);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 240);
  uint64_t v26 = *(void *)(a1 + 488);
  uint64_t v27 = *(void *)(a1 + 480);
  uint64_t v28 = *(void *)(a1 + 504);
  uint64_t v29 = *(void *)(a1 + 496);
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v2);
  sub_1BFEF8768(v17, v16, v15, v3, v4, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((unint64_t *)&v9 + 1));
  swift_bridgeObjectRetain();
  sub_1BFEF8708(v25, v24, v23, v22, v21, v20, v19, v18, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF8720(v27, v26);
  sub_1BFEF8720(v29, v28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C05DC4C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 72);
  long long v10 = *(_OWORD *)(a1 + 104);
  long long v11 = *(_OWORD *)(a1 + 88);
  long long v9 = *(_OWORD *)(a1 + 120);
  uint64_t v24 = *(void *)(a1 + 168);
  uint64_t v25 = *(void *)(a1 + 160);
  uint64_t v22 = *(void *)(a1 + 184);
  uint64_t v23 = *(void *)(a1 + 176);
  uint64_t v21 = *(void *)(a1 + 192);
  uint64_t v19 = *(void *)(a1 + 208);
  uint64_t v20 = *(void *)(a1 + 200);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 232);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 240);
  uint64_t v18 = *(void *)(a1 + 216);
  uint64_t v26 = *(void *)(a1 + 488);
  uint64_t v27 = *(void *)(a1 + 480);
  uint64_t v28 = *(void *)(a1 + 504);
  uint64_t v29 = *(void *)(a1 + 496);
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(v2);
  sub_1BFEF88A0(v17, v16, v15, v3, v4, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((unint64_t *)&v9 + 1));
  swift_bridgeObjectRelease();
  sub_1BFEF8738(v25, v24, v23, v22, v21, v20, v19, v18, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF8750(v27, v26);
  sub_1BFEF8750(v29, v28);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C05DC640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C05DC6FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 80);
  uint64_t v21 = *(void *)(a1 + 104);
  uint64_t v22 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 120);
  uint64_t v20 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 136);
  uint64_t v18 = *(void *)(a1 + 128);
  uint64_t v15 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(a1 + 168);
  uint64_t v12 = *(void *)(a1 + 160);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 176);
  swift_bridgeObjectRetain();
  sub_1BFFE54A0(v14, v13, v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRetain();
  sub_1BFEF8708(v22, v21, v20, v19, v18, v17, v16, v15, v12, v9, v10);
  return a1;
}

uint64_t sub_1C05DC7FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 80);
  uint64_t v21 = *(void *)(a1 + 104);
  uint64_t v22 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 120);
  uint64_t v20 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 136);
  uint64_t v18 = *(void *)(a1 + 128);
  uint64_t v15 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(a1 + 168);
  uint64_t v12 = *(void *)(a1 + 160);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 176);
  swift_bridgeObjectRelease();
  sub_1BFFE54B8(v14, v13, v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  sub_1BFEF8738(v22, v21, v20, v19, v18, v17, v16, v15, v12, v9, v10);
  return a1;
}

uint64_t sub_1C05DC8FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 112);
  unint64_t v19 = *(void *)(a1 + 160);
  uint64_t v20 = *(void *)(a1 + 184);
  char v9 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v2);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v3, v4, v9);
  sub_1BFEF8708(v18, v17, v16, v15, v5, v14, v13, v12, v6, v7, v8);
  sub_1BFDC11A4(v11);
  sub_1BFEF6854(v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6864(v20);
  return a1;
}

uint64_t sub_1C05DCA1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 112);
  unint64_t v19 = *(void *)(a1 + 160);
  uint64_t v20 = *(void *)(a1 + 184);
  char v9 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(v2);
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v3, v4, v9);
  sub_1BFEF8738(v18, v17, v16, v15, v5, v14, v13, v12, v6, v7, v8);
  sub_1BFDC11BC(v11);
  sub_1BFEF68D8(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68E8(v20);
  return a1;
}

uint64_t sub_1C05DCB3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  int v17 = (a17 >> 5) & 3;
  if (v17 == 1) {
    return sub_1BFF92710(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 0x9F);
  }
  if (!v17) {
    return sub_1C00F5DC0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return result;
}

uint64_t sub_1C05DCB94(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

unint64_t sub_1C05DCC00(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1C05DCC44(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05DCC88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 136);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 144);
  uint64_t v11 = *(void *)(a1 + 160);
  uint64_t v12 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 184);
  uint64_t v23 = *(void *)(a1 + 176);
  char v8 = *(unsigned char *)(a1 + 56);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 168);
  unsigned __int8 v21 = *(unsigned char *)(a1 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v2);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v3, v4, v8);
  sub_1BFEF8708(v20, v19, v18, v17, v16, v15, v14, v13, v5, v6, v7);
  sub_1BFFC8784(v12, v11, v10);
  sub_1BFFC8784(v23, v22, v21);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C05DCDB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 136);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 144);
  uint64_t v11 = *(void *)(a1 + 160);
  uint64_t v12 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 184);
  uint64_t v23 = *(void *)(a1 + 176);
  char v8 = *(unsigned char *)(a1 + 56);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 168);
  unsigned __int8 v21 = *(unsigned char *)(a1 + 192);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(v2);
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v3, v4, v8);
  sub_1BFEF8738(v20, v19, v18, v17, v16, v15, v14, v13, v5, v6, v7);
  sub_1BFFC879C(v12, v11, v10);
  sub_1BFFC879C(v23, v22, v21);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C05DCEE4(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1C01DD018(a1, a2 & 1);
  }
}

uint64_t sub_1C05DCEFC(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1C04B5360(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1C05DCF14(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1C04B5340(result, a2, a3 & 1);
  }
  return result;
}

id sub_1C05DCF2C(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1C01DCFFC(result, a2 & 1);
  }
  return result;
}

void sub_1C05DCF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, void (*a14)(uint64_t, uint64_t, uint64_t))
{
  if (a4 != 254)
  {
    a14(a2, a3, a4);
    a14(a5, a6, a7);
    a14(a8, a9, a10);
    a14(a11, a12, a13);
  }
}

uint64_t sub_1C05DD058(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C05DD064(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05DD070(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 0x80) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BFE94AD4(a2, a3, a4 & 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05DD0F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a9)(void))
{
  int v9 = (unsigned __int16)a7 >> 13;
  if (v9 == 4 || v9 == 3) {
    return a9();
  }
  if (v9 == 2)
  {
    return a8(result, a2, a3, a4, a5, a6, a7, (a7 >> 8) & 0x1F);
  }
  return result;
}

uint64_t sub_1C05DD154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C05DD1B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C05DD1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~(a1 & a3) & 0x3000000000000007) != 0) {
    return sub_1C0007E9C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C05DD214(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((~a2 & 0xF000000000000007) != 0 || (a4 & 7) != 7) {
    return sub_1C0007E38(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_1C05DD234(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((~a2 & 0xF000000000000007) != 0 || (a4 & 7) != 7) {
    return sub_1C0007DB4(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_1C05DD254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~(a1 & a3) & 0x3000000000000007) != 0) {
    return sub_1C0007EEC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C05DD270()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C05DD2A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C05DD304(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DD344(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DD384()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C05DD3C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C05DD404()
{
  if (!qword_1EB87B1A8)
  {
    sub_1C151631C();
    sub_1BFF87774((unint64_t *)&qword_1EB884D00, MEMORY[0x1E4F27928]);
    unint64_t v0 = type metadata accessor for FormatSelectorValueSelector();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87B1A8);
    }
  }
}

void sub_1C05DD498()
{
  if (!qword_1EB87B1A0)
  {
    sub_1C1515FDC();
    sub_1BFF87774(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v0 = type metadata accessor for FormatSelectorValueSelector();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87B1A0);
    }
  }
}

void *sub_1C05DD52C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C05DD590(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 6 < 6 || a3 == 12) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05DD5B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 112);
  char v9 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v2);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v3, v4, v9);
  sub_1BFEF8708(v17, v16, v15, v14, v5, v13, v12, v11, v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C05DD698(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 112);
  char v9 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(v2);
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v3, v4, v9);
  sub_1BFEF8738(v17, v16, v15, v14, v5, v13, v12, v11, v6, v7, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C05DD778(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF2E5E0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C05DD7E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 128);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 136);
  char v8 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v2, v3, v8);
  sub_1BFEF8708(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  return a1;
}

uint64_t sub_1C05DD8B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 128);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 136);
  char v8 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v2, v3, v8);
  sub_1BFEF8738(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  return a1;
}

uint64_t sub_1C05DD98C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 136);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 144);
  uint64_t v10 = *(void *)(a1 + 152);
  char v8 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v2);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v3, v4, v8);
  sub_1BFEF8708(v18, v17, v16, v15, v14, v13, v12, v11, v5, v6, v7);
  sub_1BFDC11A4(v10);
  return a1;
}

uint64_t sub_1C05DDA78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 136);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 144);
  uint64_t v10 = *(void *)(a1 + 152);
  char v8 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(v2);
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v3, v4, v8);
  sub_1BFEF8738(v18, v17, v16, v15, v14, v13, v12, v11, v5, v6, v7);
  sub_1BFDC11BC(v10);
  return a1;
}

uint64_t sub_1C05DDB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEF6828(a5, a6, a7);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C05DDBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(a5, a6, a7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C05DDC60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C05DDCC0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF2E5E0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C05DDD1C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C05DDD78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DDDAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DDDE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C05DDE3C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C05DDE98(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C05DDEF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DDF24(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DDF54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C05DDFB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C05DE00C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DE040(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C05DE074(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C05DE0D0(unint64_t *a1, uint64_t *a2)
{
}

void sub_1C05DE0E8(unint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C05DE100(uint64_t a1)
{
  return sub_1C05C5304(a1);
}

uint64_t FormatBindingFont.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatURLBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatSymbolName.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatInteger.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatColorComponentExpression.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatDateTimeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatSourceMapNode.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatBoolean.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatVideoNodeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatVideoPlayerLiveBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatVideoPlayerNodeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatWebEmbedNodeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t sub_1C05DE238(uint64_t a1, uint64_t a2)
{
  return sub_1C053578C(a1, a2);
}

uint64_t sub_1C05DE250(uint64_t a1)
{
  return sub_1C05CDCC4(a1);
}

uint64_t sub_1C05DE268(uint64_t a1)
{
  return sub_1C05ABC30(a1);
}

uint64_t sub_1C05DE280(uint64_t a1)
{
  return sub_1C05BADDC(a1);
}

uint64_t sub_1C05DE298(uint64_t a1, uint64_t a2)
{
  return sub_1C054D4C0(a1, a2);
}

uint64_t sub_1C05DE2B0(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB280], 0xD000000000000021, 0x80000001C1613940, (uint64_t *)&unk_1EB86EF60);
}

uint64_t static Settings.NewsFeedModule.Features.useNewReportConcern.getter()
{
  return sub_1BFC387A8(&qword_1EB86EF70);
}

uint64_t sub_1C05DE300(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD00000000000001ELL, 0x80000001C1613920, &qword_1EB884D28);
}

uint64_t static Settings.NewsFeedModule.Features.useMoreToReadEOA.getter()
{
  return sub_1BFC387A8(&qword_1EB882B28);
}

uint64_t sub_1C05DE350(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000021, 0x80000001C16138F0, &qword_1EB861148);
}

uint64_t static Settings.NewsFeedModule.Features.useMoreFromIssueEOA.getter()
{
  return sub_1BFC387A8(&qword_1EB861150);
}

uint64_t sub_1C05DE3A0(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000022, 0x80000001C16138C0, &qword_1EA19C028);
}

uint64_t static Settings.NewsFeedModule.Features.useMultipleNativeAds.getter()
{
  return sub_1BFC387A8(&qword_1EA194468);
}

uint64_t sub_1C05DE3F0(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD00000000000001FLL, 0x80000001C16138A0, &qword_1EB8637A0);
}

uint64_t static Settings.NewsFeedModule.Features.useSportsNativeAds.getter()
{
  return sub_1BFC387A8(qword_1EB8614B0);
}

uint64_t sub_1C05DE440(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000027, 0x80000001C1613850, &qword_1EA19C030);
}

uint64_t static Settings.NewsFeedModule.Features.usePuzzlesArchiveFetchAPI.getter()
{
  return sub_1BFC387A8(&qword_1EA194470);
}

uint64_t sub_1C05DE490(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB280], 0xD000000000000027, 0x80000001C1613820, &qword_1EA19C038);
}

uint64_t static Settings.NewsFeedModule.Features.useNavigationImprovements.getter()
{
  return sub_1BFC387A8(&qword_1EA194478);
}

uint64_t sub_1C05DE4E0(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB280], 0xD00000000000002ALL, 0x80000001C16137F0, &qword_1EB8637D0);
}

uint64_t static Settings.NewsFeedModule.Features.useArticleViewerImprovements.getter()
{
  return sub_1BFC387A8(&qword_1EB8614C0);
}

uint64_t static Settings.NewsFeedModule.Features.enableExperimental.getter()
{
  return sub_1BFC387A8(&qword_1EB884D38);
}

uint64_t sub_1C05DE554()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB400], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C040 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Features.experimentalFeatures.getter()
{
  return sub_1BFC387A8(&qword_1EA194480);
}

uint64_t sub_1C05DE740(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD00000000000001ELL, 0x80000001C1613700, &qword_1EA19C048);
}

uint64_t static Settings.NewsFeedModule.Features.useWelcomeSeries.getter()
{
  return sub_1BFC387A8(qword_1EA194488);
}

uint64_t sub_1C05DE790(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB280], 0xD000000000000027, 0x80000001C16136D0, &qword_1EB86C1E8);
}

uint64_t static Settings.NewsFeedModule.Features.enableSponsoredSuperfeeds.getter()
{
  return sub_1BFC387A8(&qword_1EB86C1F0);
}

uint64_t sub_1C05DE7E0(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB288], 0xD000000000000033, 0x80000001C1613690, &qword_1EA19C050);
}

uint64_t static Settings.NewsFeedModule.Features.overrideSponsoredSuperfeedEligibility.getter()
{
  return sub_1BFC387A8(qword_1EA194498);
}

uint64_t sub_1C05DE830(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB288], 0xD000000000000033, 0x80000001C1613650, &qword_1EB86C1F8);
}

uint64_t static Settings.NewsFeedModule.Features.overrideSponsoredSuperfeedBundleCheck.getter()
{
  return sub_1BFC387A8(&qword_1EB86C200);
}

uint64_t sub_1C05DE880(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB288], 0xD000000000000028, 0x80000001C1613620, &qword_1EB881290);
}

uint64_t static Settings.NewsFeedModule.Features.useFeedDifferentiationMode.getter()
{
  return sub_1BFC387A8(&qword_1EB884828);
}

uint64_t sub_1C05DE8D0(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000029, 0x80000001C16135C0, &qword_1EA19C058);
}

uint64_t static Settings.NewsFeedModule.Features.widgetUpsellFeaturesEnabled.getter()
{
  return sub_1BFC387A8(&qword_1EA1944A8);
}

uint64_t sub_1C05DE920(uint64_t a1)
{
  return sub_1BFC60B6C(a1, 0xD000000000000025, 0x80000001C1613590, &qword_1EA19C060);
}

uint64_t static Settings.NewsFeedModule.Content.showFakeTimestamps.getter()
{
  return sub_1BFC387A8(&qword_1EA1944B0);
}

uint64_t sub_1C05DE968(uint64_t a1)
{
  return sub_1BFCC2124(a1, 0, 0xD00000000000002DLL, 0x80000001C1613560, &qword_1EA19C068);
}

uint64_t static Settings.NewsFeedModule.Content.highlightEvergreenArticles.getter()
{
  return sub_1BFC387A8(qword_1EA1944B8);
}

uint64_t sub_1C05DE9B4(uint64_t a1)
{
  return sub_1BFCC2124(a1, 0, 0xD00000000000003BLL, 0x80000001C1613520, (uint64_t *)&unk_1EB85F0E0);
}

uint64_t static Settings.NewsFeedModule.Content.disableFilteringSharedWithYouArticles.getter()
{
  return sub_1BFC387A8(&qword_1EB85F250);
}

uint64_t static Settings.NewsFeedModule.Layout.feedScaleValue.getter()
{
  return sub_1BFC387A8(&qword_1EB87C678);
}

uint64_t static Settings.NewsFeedModule.Layout.enableVisualDebugging.getter()
{
  return sub_1BFC387A8(&qword_1EB87B0E0);
}

uint64_t sub_1C05DEA48(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000033, 0x80000001C1613480, &qword_1EB8931F0);
}

uint64_t static Settings.NewsFeedModule.Layout.disableInternalLayoutErrorViews.getter()
{
  return sub_1BFC387A8(&qword_1EB8931F8);
}

uint64_t sub_1C05DEA94(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB280], 0xD000000000000023, 0x80000001C1613420, &qword_1EB890B18);
}

uint64_t static Settings.NewsFeedModule.Layout.layoutTransitions.getter()
{
  return sub_1BFC387A8(&qword_1EB890B28);
}

uint64_t static Settings.NewsFeedModule.OfflineMode.unavailableItemAlpha.getter()
{
  return sub_1BFC387A8(&qword_1EB8829D0);
}

uint64_t sub_1C05DEB08(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000030, 0x80000001C16133B0, &qword_1EA19C070);
}

uint64_t static Settings.NewsFeedModule.OfflineMode.dimNonSubscriberContentOffline.getter()
{
  return sub_1BFC387A8(&qword_1EA1944C8);
}

uint64_t static Settings.NewsFeedModule.Badging.forcePremiumBadging.getter()
{
  return sub_1BFC387A8(&qword_1EB87AF20);
}

uint64_t static Settings.NewsFeedModule.Weather.requestTimeout.getter()
{
  return sub_1BFC387A8(&qword_1EB85E4A8);
}

uint64_t static Settings.NewsFeedModule.Database.clearOnLaunch.getter()
{
  return sub_1BFC387A8(&qword_1EB85E7A0);
}

uint64_t static Settings.NewsFeedModule.Database.clearOnNextLaunch.getter()
{
  return sub_1BFC387A8(&qword_1EB85E7A8);
}

uint64_t sub_1C05DEBE8(uint64_t a1)
{
  return sub_1BFCC2124(a1, 1, 0xD000000000000021, 0x80000001C16132C0, &qword_1EB86C1D8);
}

uint64_t static Settings.NewsFeedModule.Database.cleanupEnabled.getter()
{
  return sub_1BFC387A8(&qword_1EB86C1E0);
}

uint64_t static Settings.NewsFeedModule.Database.enabled.getter()
{
  return sub_1BFC387A8(&qword_1EB85E7B8);
}

uint64_t sub_1C05DEC58(uint64_t a1)
{
  return sub_1BFCC2124(a1, 0, 0xD000000000000024, 0x80000001C1613270, &qword_1EA19C078);
}

uint64_t static Settings.NewsFeedModule.Database.persistentJournal.getter()
{
  return sub_1BFC387A8(&qword_1EA1944D0);
}

uint64_t sub_1C05DECA4(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000022, 0x80000001C1613240, &qword_1EA19C080);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showColumns.getter()
{
  return sub_1BFC387A8(&qword_1EA1944D8);
}

uint64_t sub_1C05DECF0(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000029, 0x80000001C1613210, &qword_1EA19C088);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showLayoutMargins.getter()
{
  return sub_1BFC387A8(&qword_1EA1944E0);
}

uint64_t sub_1C05DED3C(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000021, 0x80000001C16131E0, &qword_1EA19C090);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showBounds.getter()
{
  return sub_1BFC387A8(&qword_1EA1944E8);
}

uint64_t sub_1C05DED88(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000026, 0x80000001C16131B0, &qword_1EA19C098);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showCellBounds.getter()
{
  return sub_1BFC387A8(&qword_1EA1944F0);
}

uint64_t sub_1C05DEDD4(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002ELL, 0x80000001C1613180, &qword_1EA19C0A0);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showCellContentBounds.getter()
{
  return sub_1BFC387A8(&qword_1EA1944F8);
}

uint64_t sub_1C05DEE20()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB8711D8);
  v5[2] = 0x3FD0000000000000;
  v5[3] = 0x3FF0000000000000;
  v5[1] = 0x3FF0000000000000;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  uint64_t result = sub_1C15171FC();
  qword_1EA19C0A8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.scale.getter()
{
  return sub_1BFC387A8(&qword_1EA194500);
}

uint64_t sub_1C05DEF80(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000026, 0x80000001C1613130, (uint64_t *)&unk_1EB863768);
}

uint64_t static Settings.NewsFeedModule.Debug.WebEmbed.showDebugger.getter()
{
  return sub_1BFC387A8(&qword_1EB863778);
}

uint64_t sub_1C05DEFCC(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000025, 0x80000001C1613100, &qword_1EB8628F8);
}

uint64_t static Settings.NewsFeedModule.Debug.WebEmbed.ignoreCache.getter()
{
  return sub_1BFC387A8(&qword_1EB862900);
}

uint64_t sub_1C05DF018()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0x2E302E302E373231;
  v9[1] = 0xE900000000000031;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C0B0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.host.getter()
{
  return sub_1BFC387A8(&qword_1EA194508);
}

uint64_t sub_1C05DF218()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 808988728;
  v9[1] = 0xE400000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C0B8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.port.getter()
{
  return sub_1BFC387A8(&qword_1EA194510);
}

uint64_t sub_1C05DF410()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 825765944;
  v9[1] = 0xE400000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C0C0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.socket.getter()
{
  return sub_1BFC387A8(&qword_1EA194518);
}

uint64_t sub_1C05DF608()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  v5[2] = 6;
  v5[3] = 6;
  v5[1] = 18;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  uint64_t result = sub_1C15171FC();
  qword_1EA19C0C8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.columns.getter()
{
  return sub_1BFC387A8(&qword_1EA194520);
}

uint64_t sub_1C05DF768(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000022, 0x80000001C1613050, &qword_1EA19C0D0);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showColumns.getter()
{
  return sub_1BFC387A8(&qword_1EA194528);
}

uint64_t sub_1C05DF7B4(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000029, 0x80000001C1613020, &qword_1EA19C0D8);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showLayoutMargins.getter()
{
  return sub_1BFC387A8(&qword_1EA194530);
}

uint64_t sub_1C05DF800(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000030, 0x80000001C1612FE0, &qword_1EA19C0E0);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showContentFrameOverlay.getter()
{
  return sub_1BFC387A8(&qword_1EA194538);
}

uint64_t sub_1C05DF84C(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000028, 0x80000001C1612FB0, &qword_1EA19C0E8);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showDragPreviews.getter()
{
  return sub_1BFC387A8(&qword_1EA194540);
}

uint64_t sub_1C05DF898(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000032, 0x80000001C1612F70, &qword_1EA19C0F0);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showLayoutPaneOnSnapshot.getter()
{
  return sub_1BFC387A8(&qword_1EA194548);
}

uint64_t sub_1C05DF8E4(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000030, 0x80000001C1612F30, &qword_1EA19C0F8);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.clearCacheOnNextLaunch.getter()
{
  return sub_1BFC387A8(&qword_1EA194550);
}

uint64_t sub_1C05DF930(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000034, 0x80000001C1612EF0, &qword_1EA19C100);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.clearRunModeCacheOnLayout.getter()
{
  return sub_1BFC387A8(&qword_1EA194558);
}

uint64_t sub_1C05DF97C(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002ELL, 0x80000001C1612280, &qword_1EA2B4F58);
}

uint64_t sub_1C05DF9A4(uint64_t a1)
{
  return sub_1C05DF9EC(a1, 0xD000000000000025, 0x80000001C16123D0, &qword_1EA2B4F60);
}

uint64_t sub_1C05DF9C8(uint64_t a1)
{
  return sub_1C05DF9EC(a1, 0xD00000000000002ALL, 0x80000001C16123A0, &qword_1EA2B4F68);
}

uint64_t sub_1C05DF9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1C151719C();
  __n128 v10 = MEMORY[0x1F4188790](v9);
  (*(void (**)(unsigned char *, void, __n128))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB3F8], v5);
  v14[15] = 0;
  sub_1C05E7388(0, &qword_1EA19C2F8, (void (*)(void))sub_1C05E6EC4);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a4 = result;
  return result;
}

uint64_t sub_1C05DFBC8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4F70 = result;
  return result;
}

uint64_t sub_1C05DFD90()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C108 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorPinnedIdentifiers.getter()
{
  return sub_1BFC387A8(&qword_1EA194580);
}

uint64_t sub_1C05DFF7C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C110 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.hiddenInventoryIdentifiers.getter()
{
  return sub_1BFC387A8(&qword_1EA194588);
}

uint64_t sub_1C05E0168()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C118 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorLayoutIdentifier.getter()
{
  return sub_1BFC387A8(&qword_1EA194590);
}

uint64_t sub_1C05E0354()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C120 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorBackgroundLayoutIdentifier.getter()
{
  return sub_1BFC387A8(&qword_1EA194598);
}

uint64_t sub_1C05E0540()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C128 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorThemeIdentifiers.getter()
{
  return sub_1BFC387A8(&qword_1EA1945A0);
}

uint64_t sub_1C05E072C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C130 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorGroupIdentifier.getter()
{
  return sub_1BFC387A8(&qword_1EA1945A8);
}

uint64_t sub_1C05E0918()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C138 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorBackgroundGroupIdentifier.getter()
{
  return sub_1BFC387A8(&qword_1EA1945B0);
}

uint64_t sub_1C05E0B04()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C140 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorBindingIdentifier.getter()
{
  return sub_1BFC387A8(&qword_1EA1945B8);
}

uint64_t sub_1C05E0CF0()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C148 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorCompilePackageIdentifiers.getter()
{
  return sub_1BFC387A8(&qword_1EA1945C0);
}

uint64_t sub_1C05E0EDC()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[1] = 1;
  sub_1C05E72F4();
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C150 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorUserInterfaceStyle.getter()
{
  return sub_1BFC387A8(&qword_1EA1945C8);
}

uint64_t sub_1C05E10B0()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[1] = 0;
  sub_1C05E7260();
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C158 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorInterfaceLayoutDirection.getter()
{
  return sub_1BFC387A8(&qword_1EA1945D0);
}

uint64_t sub_1C05E1280()
{
  sub_1C05E743C(0, &qword_1EA19C250, (uint64_t)&type metadata for DebugFormatLocation, MEMORY[0x1E4FAB418]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v18 - v3;
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C151719C();
  uint64_t v9 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v25 = 0;
  uint64_t v12 = qword_1F1B6A4E8;
  if (qword_1F1B6A4E8)
  {
    uint64_t v19 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = v6;
    uint64_t v21 = v5;
    uint64_t v22 = v8;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C05F7624(0, qword_1F1B6A4E8, 0);
    uint64_t v13 = v24;
    uint64_t v14 = &byte_1F1B6A4F8;
    do
    {
      ++v14;
      sub_1C12F5FF8();
      uint64_t v24 = v13;
      unint64_t v16 = *(void *)(v13 + 16);
      unint64_t v15 = *(void *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1C05F7624(v15 > 1, v16 + 1, 1);
        uint64_t v13 = v24;
      }
      *(void *)(v13 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v13+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v16, v4, v1);
      --v12;
    }
    while (v12);
    uint64_t v5 = v21;
    char v8 = v22;
    uint64_t v11 = v19;
    uint64_t v6 = v20;
  }
  sub_1C05E7388(0, &qword_1EA19C258, (void (*)(void))sub_1C05E6AB4);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB410], v23);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB3F8], v5);
  sub_1C05E6B08();
  uint64_t result = sub_1C15171CC();
  qword_1EA2B4F78 = result;
  return result;
}

uint64_t sub_1C05E15D4()
{
  sub_1C01F0924(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E743C(0, &qword_1EA19C238, (uint64_t)&type metadata for DebugFormatWeather, MEMORY[0x1E4FAB418]);
  uint64_t v34 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_1C151718C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151719C();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v42 = 0;
  uint64_t v14 = qword_1F1B6A058;
  if (qword_1F1B6A058)
  {
    uint64_t v26 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = v8;
    uint64_t v28 = v7;
    uint64_t v29 = v10;
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1C05F765C(0, qword_1F1B6A058, 0);
    uint64_t v15 = v41;
    unint64_t v16 = &byte_1F1B6A068;
    unint64_t v32 = 0x80000001C1611CB0;
    unint64_t v33 = 0x80000001C1611CD0;
    uint64_t v17 = v34;
    do
    {
      int v19 = *v16++;
      char v18 = v19;
      switch(v19)
      {
        case 0:
          char v35 = 0;
          goto LABEL_12;
        case 22:
          char v36 = 22;
          goto LABEL_12;
        case 23:
          char v37 = 23;
          goto LABEL_12;
        case 24:
          char v38 = 24;
          goto LABEL_12;
        case 25:
          char v39 = 25;
LABEL_12:
          sub_1C15171AC();
          break;
        default:
          sub_1C1226620(v18, (uint64_t)v2);
          uint64_t v20 = type metadata accessor for FeedWeather(0);
          int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v2, 1, v20);
          uint64_t v22 = (uint64_t (*)(void))sub_1C01F0924;
          if (v21 != 1)
          {
            swift_bridgeObjectRetain();
            uint64_t v22 = type metadata accessor for FeedWeather;
          }
          sub_1BFDE1080((uint64_t)v2, v22);
          char v40 = v18;
          sub_1C15171AC();
          uint64_t v17 = v34;
          break;
      }
      uint64_t v41 = v15;
      unint64_t v24 = *(void *)(v15 + 16);
      unint64_t v23 = *(void *)(v15 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1C05F765C(v23 > 1, v24 + 1, 1);
        uint64_t v15 = v41;
      }
      *(void *)(v15 + 16) = v24 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v24, v6, v17);
      --v14;
    }
    while (v14);
    uint64_t v7 = v28;
    uint64_t v10 = v29;
    uint64_t v13 = v26;
    uint64_t v8 = v27;
  }
  sub_1C05E7388(0, &qword_1EA19C240, (void (*)(void))sub_1C05E6A0C);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v13, *MEMORY[0x1E4FAB410], v31);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB3F8], v7);
  sub_1C05E6A60();
  uint64_t result = sub_1C15171CC();
  qword_1EA2B4F80 = result;
  return result;
}

uint64_t sub_1C05E1BB4(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD00000000000002CLL, 0x80000001C1612C60, &qword_1EA19C160);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.alwaysBounceVertical.getter()
{
  return sub_1BFC387A8(&qword_1EA1945E8);
}

uint64_t sub_1C05E1C00(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002ELL, 0x80000001C1612C30, &qword_1EA19C168);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.alwaysBounceHorizontal.getter()
{
  return sub_1BFC387A8(&qword_1EA1945F0);
}

uint64_t sub_1C05E1C4C(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002CLL, 0x80000001C1612C00, &qword_1EA19C170);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.wildcardSlotFallback.getter()
{
  return sub_1BFC387A8(&qword_1EA1945F8);
}

uint64_t sub_1C05E1C98(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000032, 0x80000001C1612BC0, &qword_1EA19C178);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showMissingOptionBindings.getter()
{
  return sub_1BFC387A8(&qword_1EA194600);
}

uint64_t sub_1C05E1CE4()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[15] = 1;
  sub_1C05E7388(0, &qword_1EA19C3A8, (void (*)(void))sub_1C05E720C);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C180 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.layoutOrder.getter()
{
  return sub_1BFC387A8(&qword_1EA194608);
}

uint64_t sub_1C05E1EDC()
{
  uint64_t v9 = sub_1C151718C();
  uint64_t v0 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1C151719C();
  uint64_t v3 = *(void *)(v8[0] - 8);
  MEMORY[0x1F4188790](v8[0]);
  __n128 v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E7388(0, &qword_1EA19C388, (void (*)(void))sub_1C022F5D0);
  v8[1] = v6;
  char v13 = 0;
  sub_1C05E6BB0(0, &qword_1EA19C390, &qword_1EA19C398, (uint64_t)&type metadata for DebugFormatUploadTarget);
  sub_1C05E743C(0, &qword_1EA19C398, (uint64_t)&type metadata for DebugFormatUploadTarget, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152C7F0;
  char v12 = 1;
  sub_1C15171AC();
  char v11 = 2;
  sub_1C15171AC();
  char v10 = 0;
  sub_1C15171AC();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB410], v8[0]);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v9);
  sub_1C05E71B8();
  uint64_t result = sub_1C15171CC();
  qword_1EA19C188 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.uploadTarget.getter()
{
  return sub_1BFC387A8(&qword_1EA194610);
}

uint64_t sub_1C05E2254(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD00000000000002CLL, 0x80000001C1612B30, &qword_1EA19C190);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.uploadDiffingEnabled.getter()
{
  return sub_1BFC387A8(&qword_1EA194618);
}

uint64_t sub_1C05E22A0()
{
  uint64_t v9 = sub_1C151718C();
  uint64_t v0 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1C151719C();
  uint64_t v3 = *(void *)(v8[0] - 8);
  MEMORY[0x1F4188790](v8[0]);
  __n128 v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E7388(0, &qword_1EA19C368, (void (*)(void))sub_1C022F57C);
  v8[1] = v6;
  char v13 = 0;
  sub_1C05E6BB0(0, &qword_1EA19C370, &qword_1EA19C378, (uint64_t)&type metadata for DebugFormatBackendEnvironment);
  sub_1C05E743C(0, &qword_1EA19C378, (uint64_t)&type metadata for DebugFormatBackendEnvironment, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152C7F0;
  char v12 = 0;
  sub_1C15171AC();
  char v11 = 1;
  sub_1C15171AC();
  char v10 = 2;
  sub_1C15171AC();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB410], v8[0]);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v9);
  sub_1C05E7164();
  uint64_t result = sub_1C15171CC();
  qword_1EA19C198 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.backendEnvironment.getter()
{
  return sub_1BFC387A8(&qword_1EA194620);
}

uint64_t sub_1C05E2608()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C1A0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.assetServerUsername.getter()
{
  return sub_1BFC387A8(&qword_1EA194628);
}

uint64_t sub_1C05E27F4()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C1A8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.assetServerPassword.getter()
{
  return sub_1BFC387A8(&qword_1EA194630);
}

uint64_t sub_1C05E29E0()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4F88 = result;
  return result;
}

uint64_t sub_1C05E2BA8()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[15] = 30;
  sub_1C05E7388(0, &qword_1EA19C328, (void (*)(void))sub_1C05E7068);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4F90 = result;
  return result;
}

uint64_t sub_1C05E2D7C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[15] = 0;
  sub_1C05E7388(0, &qword_1EA19C320, (void (*)(void))sub_1C05E7014);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4F98 = result;
  return result;
}

uint64_t sub_1C05E2F4C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[15] = 3;
  sub_1C05E7388(0, &qword_1EA19C318, (void (*)(void))sub_1C05E6FC0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4FA0 = result;
  return result;
}

uint64_t sub_1C05E3120(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002ELL, 0x80000001C1612520, &qword_1EA2B4FA8);
}

uint64_t sub_1C05E3148(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000026, 0x80000001C16124F0, &qword_1EA2B4FB0);
}

uint64_t sub_1C05E3170(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000003BLL, 0x80000001C16124B0, &qword_1EA2B4FB8);
}

uint64_t sub_1C05E3198()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C05E7388(0, &qword_1EA19C308, (void (*)(void))sub_1C05E6F18);
  v9[15] = 0;
  sub_1C0DFF414();
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB410], v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  sub_1C05E6F6C();
  uint64_t result = sub_1C15171CC();
  qword_1EA2B4FC0 = result;
  return result;
}

uint64_t sub_1C05E3388()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0x666666666666;
  v9[1] = 0xE600000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4FC8 = result;
  return result;
}

uint64_t sub_1C05E3558()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0x303030303030;
  v9[1] = 0xE600000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B4FD0 = result;
  return result;
}

uint64_t sub_1C05E3728(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000020, 0x80000001C1612310, &qword_1EA2B4FD8);
}

uint64_t sub_1C05E3750(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000022, 0x80000001C16122E0, &qword_1EA2B4FE0);
}

uint64_t sub_1C05E3778(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000025, 0x80000001C1612340, &qword_1EA2B4FE8);
}

uint64_t sub_1C05E37A0(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000020, 0x80000001C1612180, &qword_1EA2B4FF0);
}

uint64_t sub_1C05E37CC(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD00000000000002DLL, 0x80000001C1612150, &qword_1EA2B4FF8);
}

uint64_t sub_1C05E37F8(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000026, 0x80000001C1612120, &qword_1EA2B5000);
}

uint64_t sub_1C05E3824(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD00000000000002ALL, 0x80000001C16120F0, &qword_1EA2B5008);
}

uint64_t sub_1C05E3850()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  v5[2] = 0;
  v5[3] = 5;
  v5[1] = 0x7FFFFFFFFFFFFFFFLL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  uint64_t result = sub_1C15171FC();
  qword_1EA2B5010 = result;
  return result;
}

uint64_t sub_1C05E398C()
{
  uint64_t v9 = sub_1C151718C();
  uint64_t v0 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1C151719C();
  uint64_t v3 = *(void *)(v8[0] - 8);
  MEMORY[0x1F4188790](v8[0]);
  __n128 v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E7388(0, &qword_1EA19C290, (void (*)(void))sub_1C05E6C70);
  v8[1] = v6;
  char v12 = 1;
  sub_1C05E6BB0(0, &qword_1EA19C2A0, &qword_1EA19C2A8, (uint64_t)&type metadata for DebugFormatTestRun);
  sub_1C05E743C(0, &qword_1EA19C2A8, (uint64_t)&type metadata for DebugFormatTestRun, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1527210;
  char v11 = 1;
  sub_1C15171AC();
  char v10 = 0;
  sub_1C15171AC();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB410], v8[0]);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v9);
  sub_1C05E6CC4();
  uint64_t result = sub_1C15171CC();
  qword_1EA2B5018 = result;
  return result;
}

uint64_t sub_1C05E3CB4(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002DLL, 0x80000001C1612090, &qword_1EA2B5020);
}

uint64_t sub_1C05E3CDC()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB8711D8);
  v5[3] = 0x3FE4CCCCCCCCCCCDLL;
  v5[2] = 0x3FD3333333333333;
  v5[1] = 0x3FF0000000000000;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  uint64_t result = sub_1C15171FC();
  qword_1EA2B5028 = result;
  return result;
}

uint64_t sub_1C05E3E2C()
{
  uint64_t v10 = sub_1C151718C();
  uint64_t v0 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C151719C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E7388(0, &qword_1EA19C2B8, (void (*)(void))sub_1C05E6D18);
  v9[1] = v7;
  char v13 = 0;
  sub_1C05E6BB0(0, &qword_1EA19C2C8, &qword_1EA19C2D0, (uint64_t)&type metadata for DebugFormatTestScope);
  sub_1C05E743C(0, &qword_1EA19C2D0, (uint64_t)&type metadata for DebugFormatTestScope, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1527210;
  char v12 = 0;
  sub_1C15171AC();
  char v11 = 1;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAB410], v3);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v10);
  sub_1C05E6D6C();
  uint64_t result = sub_1C15171CC();
  qword_1EA2B5030 = result;
  return result;
}

uint64_t sub_1C05E4158()
{
  uint64_t v9 = sub_1C151718C();
  uint64_t v0 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1C151719C();
  uint64_t v3 = *(void *)(v8[0] - 8);
  MEMORY[0x1F4188790](v8[0]);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E7388(0, &qword_1EA19C268, (void (*)(void))sub_1C05E6B5C);
  v8[1] = v6;
  char v13 = 2;
  sub_1C05E6BB0(0, &qword_1EA19C278, &qword_1EA19C280, (uint64_t)&type metadata for DebugFormatTestSubject);
  sub_1C05E743C(0, &qword_1EA19C280, (uint64_t)&type metadata for DebugFormatTestSubject, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152C7F0;
  char v12 = 0;
  sub_1C15171AC();
  char v11 = 2;
  sub_1C15171AC();
  char v10 = 1;
  sub_1C15171AC();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB410], v8[0]);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v9);
  sub_1C05E6C1C();
  uint64_t result = sub_1C15171CC();
  qword_1EA2B5038 = result;
  return result;
}

uint64_t sub_1C05E44B0(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD00000000000002CLL, 0x80000001C1611E70, &qword_1EA2B5040);
}

uint64_t sub_1C05E44D8(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD00000000000002DLL, 0x80000001C1611E40, &qword_1EA2B5048);
}

uint64_t sub_1C05E4500(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000027, 0x80000001C1611E10, &qword_1EA2B5050);
}

uint64_t sub_1C05E4528(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000028, 0x80000001C1611DE0, &qword_1EA2B5058);
}

uint64_t sub_1C05E4550(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000028, 0x80000001C1611DB0, &qword_1EA2B5060);
}

uint64_t sub_1C05E4578(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000028, 0x80000001C1611D80, &qword_1EA2B5068);
}

uint64_t sub_1C05E45A0(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000027, 0x80000001C1611D50, &qword_1EA2B5070);
}

uint64_t sub_1C05E45C8(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000025, 0x80000001C1611D20, &qword_1EA2B5078);
}

uint64_t sub_1C05E45F0(uint64_t a1)
{
  return sub_1BFC45598(0.0, a1, 0xD000000000000041, 0x80000001C1611C30, &qword_1EA2B5080);
}

uint64_t sub_1C05E4618()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C05E7388(0, &qword_1EA19C228, (void (*)(void))sub_1C05E6964);
  v9[15] = 0;
  _s8NewsFeed0B4KindO7optionsSay11TeaSettings6OptionVyACGGvgZ_0();
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB410], v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  sub_1C05E69B8();
  uint64_t result = sub_1C15171CC();
  qword_1EA2B5088 = result;
  return result;
}

uint64_t sub_1C05E4808(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD00000000000002BLL, 0x80000001C1611C00, &qword_1EA2B5090);
}

uint64_t sub_1C05E4830(uint64_t a1)
{
  return sub_1C05E4878(a1, 0xD00000000000002ELL, 0x80000001C16121F0, &qword_1EA2B5098);
}

uint64_t sub_1C05E4854(uint64_t a1)
{
  return sub_1C05E4878(a1, 0xD000000000000037, 0x80000001C16121B0, &qword_1EA2B50A0);
}

uint64_t sub_1C05E4878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151719C();
  __n128 v10 = MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, void, __n128))(v12 + 104))((char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB3F8], v5);
  v14[1] = MEMORY[0x1E4FBC860];
  sub_1C05E6DC0();
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a4 = result;
  return result;
}

uint64_t sub_1C05E4A38()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[1] = MEMORY[0x1E4FBC860];
  sub_1C05E7388(0, &qword_1EA19C218, (void (*)(void))sub_1C05E6910);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B50A8 = result;
  return result;
}

uint64_t sub_1C05E4C10(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000033, 0x80000001C1611BA0, &qword_1EA2B50B0);
}

uint64_t sub_1C05E4C38(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD000000000000035, 0x80000001C1611B60, &qword_1EA2B50B8);
}

uint64_t sub_1C05E4C60()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B50C0 = result;
  return result;
}

uint64_t sub_1C05E4E28()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA2B50C8 = result;
  return result;
}

uint64_t sub_1C05E4FF0(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000029, 0x80000001C16125F0, &qword_1EA2B50D0);
}

uint64_t sub_1C05E5018(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 1, 0xD00000000000002BLL, 0x80000001C1612A70, &qword_1EB85C788);
}

uint64_t static Settings.NewsFeedModule.Demo.enableMotionOnIssueCovers.getter()
{
  return sub_1BFC387A8(&qword_1EB85E798);
}

uint64_t sub_1C05E5064(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002ALL, 0x80000001C1612A40, &qword_1EB8711B0);
}

uint64_t static Settings.NewsFeedModule.Format.ignorePackageCache.getter()
{
  return sub_1BFC387A8(&qword_1EB87AF00);
}

uint64_t sub_1C05E50B0(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000003DLL, 0x80000001C1612A00, &qword_1EB8711B8);
}

uint64_t static Settings.NewsFeedModule.Format.loadPackagesFromDebugServerDropbox.getter()
{
  return sub_1BFC387A8(&qword_1EB87AF08);
}

uint64_t sub_1C05E50FC(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000025, 0x80000001C16129D0, &qword_1EA19C1B0);
}

uint64_t static Settings.NewsFeedModule.Format.prefetchWebArchives.getter()
{
  return sub_1BFC387A8(&qword_1EA194790);
}

uint64_t sub_1C05E5148(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD000000000000027, 0x80000001C16129A0, &qword_1EA19C1B8);
}

uint64_t static Settings.NewsFeedModule.Format.prefetchDataResources.getter()
{
  return sub_1BFC387A8(qword_1EA194798);
}

uint64_t static Settings.NewsFeedModule.Format.forcePrereleaseVersion.getter()
{
  return sub_1BFC387A8(&qword_1EB884820);
}

uint64_t sub_1C05E51B8(uint64_t a1)
{
  return sub_1BFCC1F50(a1, 0, 0xD00000000000002DLL, 0x80000001C1612940, &qword_1EB882B30);
}

uint64_t static Settings.NewsFeedModule.Resources.ignorePackageCache.getter()
{
  return sub_1BFC387A8(&qword_1EB884D48);
}

uint64_t sub_1C05E5204(uint64_t a1)
{
  return sub_1BFC93668(a1, MEMORY[0x1E4FAB278], 0xD000000000000024, 0x80000001C1612910, &qword_1EB863750);
}

uint64_t static Settings.NewsFeedModule.Clustering.splitTopicGroups.getter()
{
  return sub_1BFC387A8(&qword_1EB863760);
}

uint64_t sub_1C05E5254(uint64_t a1)
{
  return sub_1BFC60B6C(a1, 0xD00000000000003FLL, 0x80000001C16128D0, &qword_1EA19C1C0);
}

uint64_t static Settings.NewsFeedModule.Clustering.allowAnyChannelForTodayChannelGroups.getter()
{
  return sub_1BFC387A8(&qword_1EA1947A8);
}

uint64_t sub_1C05E529C(uint64_t a1)
{
  return sub_1BFC60B6C(a1, 0xD00000000000003CLL, 0x80000001C1612890, &qword_1EB863720);
}

uint64_t static Settings.NewsFeedModule.Clustering.recordCandidatesInClusteringJournal.getter()
{
  return sub_1BFC387A8(&qword_1EB863730);
}

uint64_t sub_1C05E52E4(uint64_t a1)
{
  return sub_1BFCC2124(a1, 0, 0xD00000000000003CLL, 0x80000001C1612850, &qword_1EB863738);
}

uint64_t static Settings.NewsFeedModule.Clustering.logTopicPruningForImprovedManagedTopicGrouping.getter()
{
  return sub_1BFC387A8(&qword_1EB863748);
}

uint64_t sub_1C05E5330(uint64_t a1)
{
  return sub_1BFC60B6C(a1, 0xD00000000000002DLL, 0x80000001C1612820, &qword_1EA19C1C8);
}

uint64_t static Settings.NewsFeedModule.Personalization.scoreExclusivelyUsingEmbeddings.getter()
{
  return sub_1BFC387A8(&qword_1EA1947B0);
}

uint64_t sub_1C05E5378(uint64_t a1)
{
  return sub_1BFC60B6C(a1, 0xD000000000000027, 0x80000001C16127F0, &qword_1EA19C1D0);
}

uint64_t static Settings.NewsFeedModule.Personalization.scoreExclusivelyUsingTabi.getter()
{
  return sub_1BFC387A8(qword_1EA1947B8);
}

uint64_t sub_1C05E53C0()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E7388(0, &qword_1EA19C3D8, (void (*)(void))sub_1C05E73E8);
  uint64_t v10 = v8;
  char v13 = 1;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  sub_1C05E6BB0(0, &qword_1EA19C3E8, &qword_1EA19C3F0, (uint64_t)&type metadata for BundleSessionStrategy);
  sub_1C05E743C(0, &qword_1EA19C3F0, (uint64_t)&type metadata for BundleSessionStrategy, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1527210;
  char v12 = 1;
  sub_1C15171AC();
  char v11 = 2;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  sub_1C05E7488();
  uint64_t result = sub_1C15171CC();
  qword_1EA19C1D8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.BundleSession.ConfigOverrides.bundleSessionStrategy.getter()
{
  return sub_1BFC387A8(&qword_1EA1947C8);
}

uint64_t sub_1C05E56EC()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[1] = 0;
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C1E0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.BundleSession.ConfigOverrides.fixedBundleSession.getter()
{
  return sub_1BFC387A8(&qword_1EA1947D0);
}

uint64_t Settings.NewsFeedModule.BundleSession.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8NewsFeedE0cD6ModuleV13BundleSessionV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C05E5910(uint64_t a1)
{
  return sub_1C05E65A0(a1, 0xD000000000000030, 0x80000001C16139C0, &qword_1EB86F9A0);
}

uint64_t static Settings.NewsFeedModule.BundleSession.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB86F9A8);
}

uint64_t sub_1C05E5958()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1E4FBB550];
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  v11[1] = v9;
  uint64_t v13 = 0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  sub_1C05E6BB0(0, (unint64_t *)&qword_1EA19C358, (unint64_t *)&qword_1EA19C360, v8);
  sub_1C05E743C(0, (unint64_t *)&qword_1EA19C360, v8, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C15445C0;
  uint64_t v12 = 0;
  sub_1C15171AC();
  uint64_t v12 = 1;
  sub_1C15171AC();
  uint64_t v12 = 2;
  sub_1C15171AC();
  uint64_t v12 = 3;
  sub_1C15171AC();
  uint64_t v12 = 4;
  sub_1C15171AC();
  uint64_t v12 = 5;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  uint64_t result = sub_1C15171CC();
  qword_1EA19C1E8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.BundleSession.simulateNewSubscriptionDetection.getter()
{
  return sub_1BFC387A8(&qword_1EA1947E0);
}

uint64_t sub_1C05E5DA4()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05E7388(0, &qword_1EA19C330, (void (*)(void))sub_1C05E70BC);
  uint64_t v10 = v8;
  char v15 = 0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  sub_1C05E6BB0(0, &qword_1EA19C340, &qword_1EA19C348, (uint64_t)&type metadata for BundleSessionFamilyStatus);
  sub_1C05E743C(0, &qword_1EA19C348, (uint64_t)&type metadata for BundleSessionFamilyStatus, MEMORY[0x1E4FAB418]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152A660;
  char v14 = 0;
  sub_1C15171AC();
  char v13 = 1;
  sub_1C15171AC();
  char v12 = 2;
  sub_1C15171AC();
  char v11 = 3;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  sub_1C05E7110();
  uint64_t result = sub_1C15171CC();
  qword_1EA19C1F0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.BundleSession.FamilyStatusOverrides.bundleSessionFamilyStatus.getter()
{
  return sub_1BFC387A8(&qword_1EA1947E8);
}

uint64_t sub_1C05E6150()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB400], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  v9[1] = 0;
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA19C1F8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.BundleSession.FamilyStatusOverrides.bundleSessionFamilyPlanNumberOfMembers.getter()
{
  return sub_1BFC387A8(&qword_1EA1947F0);
}

uint64_t _s11TeaSettings0B0C8NewsFeedE0cD6ModuleV13BundleSessionV15ConfigOverridesC3key12defaultValue6accessAJSSSg_SbAA6AccessOtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  uint64_t v9 = sub_1C151700C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t _s11TeaSettings0B0C8NewsFeedE0cD6ModuleV13BundleSessionV15ConfigOverridesC3key12defaultValue6accessAJSSSg_SbAA6AccessOtcfc_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  uint64_t v9 = sub_1C151700C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t sub_1C05E657C(uint64_t a1)
{
  return sub_1C05E65A0(a1, 0xD000000000000037, 0x80000001C1612620, &qword_1EA19C200);
}

uint64_t sub_1C05E65A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1C151719C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1C151718C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Settings.NewsFeedModule.BundleSession.ConfigOverrides(0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FAB400], v9);
  *uint64_t v8 = sub_1C151E62C();
  v8[1] = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB408], v5);
  uint64_t result = sub_1C1516FFC();
  *a4 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.BundleSession.familyStatusOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EA1947F8);
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule()
{
  return &type metadata for Settings.NewsFeedModule;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Features()
{
  return &type metadata for Settings.NewsFeedModule.Features;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Content()
{
  return &type metadata for Settings.NewsFeedModule.Content;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Layout()
{
  return &type metadata for Settings.NewsFeedModule.Layout;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.OfflineMode()
{
  return &type metadata for Settings.NewsFeedModule.OfflineMode;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Badging()
{
  return &type metadata for Settings.NewsFeedModule.Badging;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Weather()
{
  return &type metadata for Settings.NewsFeedModule.Weather;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Database()
{
  return &type metadata for Settings.NewsFeedModule.Database;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug()
{
  return &type metadata for Settings.NewsFeedModule.Debug;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug.Layout()
{
  return &type metadata for Settings.NewsFeedModule.Debug.Layout;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug.WebEmbed()
{
  return &type metadata for Settings.NewsFeedModule.Debug.WebEmbed;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug.Format()
{
  return &type metadata for Settings.NewsFeedModule.Debug.Format;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Demo()
{
  return &type metadata for Settings.NewsFeedModule.Demo;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Format()
{
  return &type metadata for Settings.NewsFeedModule.Format;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Resources()
{
  return &type metadata for Settings.NewsFeedModule.Resources;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Clustering()
{
  return &type metadata for Settings.NewsFeedModule.Clustering;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Personalization()
{
  return &type metadata for Settings.NewsFeedModule.Personalization;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.BundleSession()
{
  return &type metadata for Settings.NewsFeedModule.BundleSession;
}

uint64_t type metadata accessor for Settings.NewsFeedModule.BundleSession.ConfigOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB86F990);
}

uint64_t sub_1C05E68C8()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C05E68D4()
{
  return type metadata accessor for Settings.NewsFeedModule.BundleSession.ConfigOverrides(0);
}

uint64_t type metadata accessor for Settings.NewsFeedModule.BundleSession.FamilyStatusOverrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA19C208);
}

uint64_t sub_1C05E68FC()
{
  return sub_1BFC394A8();
}

uint64_t sub_1C05E6908()
{
  return type metadata accessor for Settings.NewsFeedModule.BundleSession.FamilyStatusOverrides(0);
}

unint64_t sub_1C05E6910()
{
  unint64_t result = qword_1EA19C220;
  if (!qword_1EA19C220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C220);
  }
  return result;
}

unint64_t sub_1C05E6964()
{
  unint64_t result = qword_1EA1A3D60;
  if (!qword_1EA1A3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3D60);
  }
  return result;
}

unint64_t sub_1C05E69B8()
{
  unint64_t result = qword_1EA19C230;
  if (!qword_1EA19C230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C230);
  }
  return result;
}

unint64_t sub_1C05E6A0C()
{
  unint64_t result = qword_1EA1A5320;
  if (!qword_1EA1A5320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5320);
  }
  return result;
}

unint64_t sub_1C05E6A60()
{
  unint64_t result = qword_1EA19C248;
  if (!qword_1EA19C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C248);
  }
  return result;
}

unint64_t sub_1C05E6AB4()
{
  unint64_t result = qword_1EA1A5330;
  if (!qword_1EA1A5330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5330);
  }
  return result;
}

unint64_t sub_1C05E6B08()
{
  unint64_t result = qword_1EA19C260;
  if (!qword_1EA19C260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C260);
  }
  return result;
}

unint64_t sub_1C05E6B5C()
{
  unint64_t result = qword_1EA19C270;
  if (!qword_1EA19C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C270);
  }
  return result;
}

void sub_1C05E6BB0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C05E743C(255, a3, a4, MEMORY[0x1E4FAB418]);
    unint64_t v5 = sub_1C152089C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C05E6C1C()
{
  unint64_t result = qword_1EA19C288;
  if (!qword_1EA19C288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C288);
  }
  return result;
}

unint64_t sub_1C05E6C70()
{
  unint64_t result = qword_1EA19C298;
  if (!qword_1EA19C298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C298);
  }
  return result;
}

unint64_t sub_1C05E6CC4()
{
  unint64_t result = qword_1EA19C2B0;
  if (!qword_1EA19C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C2B0);
  }
  return result;
}

unint64_t sub_1C05E6D18()
{
  unint64_t result = qword_1EA19C2C0;
  if (!qword_1EA19C2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C2C0);
  }
  return result;
}

unint64_t sub_1C05E6D6C()
{
  unint64_t result = qword_1EA19C2D8;
  if (!qword_1EA19C2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C2D8);
  }
  return result;
}

void sub_1C05E6DC0()
{
  if (!qword_1EA19C2E0)
  {
    sub_1C05E743C(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C05E6E48();
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C2E0);
    }
  }
}

unint64_t sub_1C05E6E48()
{
  unint64_t result = qword_1EA19C2E8;
  if (!qword_1EA19C2E8)
  {
    sub_1C05E743C(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C2E8);
  }
  return result;
}

unint64_t sub_1C05E6EC4()
{
  unint64_t result = qword_1EA19C300;
  if (!qword_1EA19C300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C300);
  }
  return result;
}

unint64_t sub_1C05E6F18()
{
  unint64_t result = qword_1EA1A3C30;
  if (!qword_1EA1A3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3C30);
  }
  return result;
}

unint64_t sub_1C05E6F6C()
{
  unint64_t result = qword_1EA19C310;
  if (!qword_1EA19C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C310);
  }
  return result;
}

unint64_t sub_1C05E6FC0()
{
  unint64_t result = qword_1EA1A3C20;
  if (!qword_1EA1A3C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3C20);
  }
  return result;
}

unint64_t sub_1C05E7014()
{
  unint64_t result = qword_1EA1A3C10;
  if (!qword_1EA1A3C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3C10);
  }
  return result;
}

unint64_t sub_1C05E7068()
{
  unint64_t result = qword_1EA1A3C00;
  if (!qword_1EA1A3C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3C00);
  }
  return result;
}

unint64_t sub_1C05E70BC()
{
  unint64_t result = qword_1EA19C338;
  if (!qword_1EA19C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C338);
  }
  return result;
}

unint64_t sub_1C05E7110()
{
  unint64_t result = qword_1EA19C350;
  if (!qword_1EA19C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C350);
  }
  return result;
}

unint64_t sub_1C05E7164()
{
  unint64_t result = qword_1EA19C380;
  if (!qword_1EA19C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C380);
  }
  return result;
}

unint64_t sub_1C05E71B8()
{
  unint64_t result = qword_1EA19C3A0;
  if (!qword_1EA19C3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C3A0);
  }
  return result;
}

unint64_t sub_1C05E720C()
{
  unint64_t result = qword_1EA19C3B0;
  if (!qword_1EA19C3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C3B0);
  }
  return result;
}

void sub_1C05E7260()
{
  if (!qword_1EA19C3B8)
  {
    type metadata accessor for UIUserInterfaceLayoutDirection(255);
    sub_1BFC938AC(&qword_1EA19C3C0, type metadata accessor for UIUserInterfaceLayoutDirection);
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C3B8);
    }
  }
}

void sub_1C05E72F4()
{
  if (!qword_1EA19C3C8)
  {
    type metadata accessor for UIUserInterfaceStyle(255);
    sub_1BFC938AC(&qword_1EA19C3D0, type metadata accessor for UIUserInterfaceStyle);
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C3C8);
    }
  }
}

void sub_1C05E7388(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C151720C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C05E73E8()
{
  unint64_t result = qword_1EA19C3E0;
  if (!qword_1EA19C3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C3E0);
  }
  return result;
}

void sub_1C05E743C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C05E7488()
{
  unint64_t result = qword_1EA19C3F8;
  if (!qword_1EA19C3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C3F8);
  }
  return result;
}

BOOL static WebEmbedDataSourceManagerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WebEmbedDataSourceManagerError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t WebEmbedDataSourceManagerError.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C05E7570()
{
  unint64_t result = qword_1EA19C400;
  if (!qword_1EA19C400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C400);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WebEmbedDataSourceManagerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C05E7690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataSourceManagerError()
{
  return &type metadata for WebEmbedDataSourceManagerError;
}

uint64_t initializeBufferWithCopyOfBuffer for SportsEventSearchKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for SportsStandingDataVisualizationMetadata()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for SportsEventSearchKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsEventSearchKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsEventSearchKey()
{
  return &type metadata for SportsEventSearchKey;
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.prepare(visualizations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C005E7F4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.add(observer:visualization:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.remove(observer:visualization:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.datastore(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.datastores(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.datastoresMap()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.observedDatastoresMap()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.failures(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.record(for:standing:standingRecordConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 72)
                                                                                     + **(int **)(a6 + 72));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1BFC542F4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C05E7A50(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *(void *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C05E7B0C, 0, 0);
}

uint64_t sub_1C05E7B0C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v0[7];
    unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v6 = v1 + v5;
    uint64_t v7 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v8 = v0[8];
      sub_1BFED387C(v6, v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1C05F4668(0, &qword_1EB86BB70, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBBE00]);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
      sub_1BFED387C(v8, v9 + v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v10 = sub_1C10137B8();
      sub_1BFDDFF34(v10);
      sub_1BFED60E8(v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFDDFF34(v9);
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v2 = v23;
  }
  if (*(void *)(v2 + 16))
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C01E8998(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    v0[9] = v12;
    v0[10] = v14;
    if (qword_1EB866C98 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_1EB93C4D0;
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    v0[11] = v16;
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v18 = sub_1BFE9C558();
    v0[12] = v18;
    *(void *)(v17 + 64) = v18;
    *(void *)(v17 + 32) = v12;
    *(void *)(v17 + 40) = v14;
    id v19 = v15;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();

    v0[13] = sub_1C05E81E8(v2);
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[14] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1C05E7E68;
    return MEMORY[0x1F415EBC8](v20);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    int v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_1C05E7E68()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C05E8070;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C05E7F84;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C05E7F84()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = (void *)qword_1EB93C4D0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = v1;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  id v6 = v4;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1C05E8070()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[9];
  swift_release();
  id v5 = (id)qword_1EB93C4D0;
  sub_1C151F36C();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = v2;
  v0[2] = 0;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  v0[3] = 0xE000000000000000;
  v0[4] = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v8 = v0[2];
  uint64_t v9 = v0[3];
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 104) = v2;
  *(void *)(v6 + 72) = v8;
  *(void *)(v6 + 80) = v9;
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C05E81E8(uint64_t a1)
{
  swift_retain();
  sub_1C05F2F3C(a1, v1);
  swift_release();
  sub_1C05F4668(0, &qword_1EB86DDC8, type metadata accessor for WebEmbedDataVisualizationDataRequest, MEMORY[0x1E4FBB320]);
  sub_1C1515FDC();
  sub_1C05F327C();
  sub_1C05F3304((unint64_t *)&qword_1EB871100, MEMORY[0x1E4F276F0]);
  uint64_t v3 = sub_1C151E92C();
  uint64_t v4 = swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16))
  {
    MEMORY[0x1F4188790](v4);
    sub_1C05F3368();
    sub_1C151932C();
    swift_bridgeObjectRelease();
    *(void *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain();
    id v5 = (void *)sub_1C1518E7C();
    uint64_t v6 = sub_1C151900C();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EB866C98 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EB93C4D0;
    sub_1C151F38C();
    sub_1C15197BC();

    MEMORY[0x1F4188790](v8);
    sub_1BFD43E2C(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151911C();
  }
  return v6;
}

uint64_t sub_1C05E852C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v54 = a2;
  uint64_t v7 = *v3;
  sub_1C05F4668(0, &qword_1EB8675C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v51 = (char *)&v47 - v9;
  uint64_t v10 = type metadata accessor for WebEmbedDatastoreUpdate();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v48 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v50 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v55 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = sub_1C151E24C();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (uint64_t *)((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v22 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E4FBCBF0], v19);
  unint64_t v23 = sub_1C151E26C();
  (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1BFED387C(a3, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  swift_beginAccess();
  uint64_t v24 = v4[7];
  if (*(void *)(v24 + 16) && (unint64_t v25 = sub_1C1052524((uint64_t)v18), (v26 & 1) != 0))
  {
    unint64_t v23 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  unint64_t v58 = v23;
  swift_endAccess();
  sub_1BFED60E8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  uint64_t v49 = a3;
  uint64_t v47 = v7;
  if (v23 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain();
    uint64_t v27 = sub_1C15204BC();
    if (v27) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
  uint64_t v27 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  if (v27)
  {
LABEL_8:
    uint64_t v28 = 4;
    do
    {
      uint64_t v29 = v28 - 4;
      if ((v23 & 0xC000000000000001) != 0)
      {
        uint64_t v30 = MEMORY[0x1C18C7CB0](v28 - 4, v23);
        uint64_t v31 = v28 - 3;
        if (__OFADD__(v29, 1)) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(v23 + 8 * v28);
        swift_retain();
        uint64_t v31 = v28 - 3;
        if (__OFADD__(v29, 1))
        {
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      uint64_t v32 = MEMORY[0x1C18C9C60](v30 + 16);
      swift_release();
      if (v32)
      {
        swift_unknownObjectRelease();
        if (v32 == a1)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
      }
      ++v28;
    }
    while (v31 != v27);
  }
LABEL_21:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v35 = v49;
  uint64_t v34 = v50;
  sub_1BFED387C(v49, v50, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  type metadata accessor for WeakWebEmbedDataSourceManagerObserver();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v36 + 24) = v54;
  swift_unknownObjectWeakAssign();
  uint64_t v37 = sub_1C05F234C(v34, v36 + OBJC_IVAR____TtC8NewsFeed37WeakWebEmbedDataSourceManagerObserver_dataVisualization, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1C18C66D0](v37);
  if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C151EC8C();
  }
  sub_1C151ECEC();
  sub_1C151EBEC();
  uint64_t v38 = v55;
  sub_1BFED387C(v35, v55, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v39 = v58;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v57 = v4[7];
  v4[7] = 0x8000000000000000;
  sub_1C1067CA8(v39, v38, isUniquelyReferenced_nonNull_native);
  v4[7] = v57;
  swift_bridgeObjectRelease();
  sub_1BFED60E8(v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  swift_endAccess();
  sub_1BFED387C(v35, v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v41 = (uint64_t)v51;
  sub_1C1518DCC();
  sub_1BFED60E8(v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v41, 1, v53) == 1)
  {
    sub_1C05F22DC(v41, &qword_1EB8675C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate);
  }
  else
  {
    uint64_t v42 = v48;
    sub_1C05F234C(v41, v48, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
    uint64_t ObjectType = swift_getObjectType();
    v56[3] = v47;
    v56[4] = &off_1F1BAC8E8;
    v56[0] = v4;
    uint64_t v44 = v54;
    uint64_t v45 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8);
    swift_retain();
    v45(v56, v35, v42, ObjectType, v44);
    sub_1BFED60E8(v42, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  sub_1C05E8CD0(v35);
  sub_1C0FD7480(v35);
  uint64_t v46 = v55;
  sub_1BFED387C(v35, v55, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C0FD9AC0(v46, 0, 0);
  return sub_1BFED60E8(v46, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
}

uint64_t sub_1C05E8CD0(uint64_t a1)
{
  uint64_t v166 = sub_1C151631C();
  uint64_t v2 = *(void *)(v166 - 8);
  MEMORY[0x1F4188790](v166);
  uint64_t v155 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v154 = (char *)&v141 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v153 = (char *)&v141 - v7;
  MEMORY[0x1F4188790](v8);
  int v152 = (char *)&v141 - v9;
  uint64_t v165 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1F4188790](v165);
  uint64_t v151 = (uint64_t)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v150 = (uint64_t)&v141 - v12;
  sub_1C05F4668(0, &qword_1EB8688C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v141 - v14;
  uint64_t v177 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  uint64_t v16 = *(void *)(v177 - 8);
  MEMORY[0x1F4188790](v177);
  v164 = (uint64_t *)((char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v163 = (uint64_t *)((char *)&v141 - v19);
  MEMORY[0x1F4188790](v20);
  uint64_t v174 = (uint64_t)&v141 - v21;
  uint64_t v142 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v142);
  uint64_t v162 = (uint64_t)&v141 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v141 = (uint64_t)&v141 - v24;
  uint64_t v175 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v25 = *(void *)(v175 - 8);
  MEMORY[0x1F4188790](v175);
  uint64_t v149 = (uint64_t *)((char *)&v141 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v27);
  uint64_t v148 = (uint64_t *)((char *)&v141 - v28);
  MEMORY[0x1F4188790](v29);
  v161 = (char *)&v141 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v186 = (uint64_t)&v141 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v185 = (uint64_t)&v141 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (uint64_t *)((char *)&v141 - v36);
  MEMORY[0x1F4188790](v38);
  char v40 = (char *)&v141 - v39;
  sub_1C05F4668(0, &qword_1EB86BB70, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBBE00]);
  uint64_t v41 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v42 = (v41 + 32) & ~v41;
  uint64_t v147 = *(void *)(v25 + 72);
  uint64_t v172 = v42 + v147;
  uint64_t v173 = v43;
  uint64_t v171 = v41 | 7;
  uint64_t v44 = swift_allocObject();
  long long v170 = xmmword_1C1529AE0;
  *(_OWORD *)(v44 + 16) = xmmword_1C1529AE0;
  sub_1BFED387C(a1, v44 + v42, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v180 = a1;
  uint64_t v45 = sub_1C10137B8();
  uint64_t v188 = v44;
  sub_1BFDDFF34(v45);
  uint64_t v46 = v188;
  uint64_t v146 = *(void *)(v188 + 16);
  if (v146)
  {
    unint64_t v47 = 0;
    uint64_t v169 = v42;
    uint64_t v145 = v188 + v42;
    uint64_t v168 = (uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v160 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v159 = (void (**)(char *, uint64_t))(v2 + 8);
    long long v158 = xmmword_1C1527210;
    long long v157 = xmmword_1C152C7F0;
    uint64_t v167 = v15;
    uint64_t v48 = v174;
    uint64_t v144 = v37;
    uint64_t v179 = v40;
    uint64_t v143 = v188;
    while (1)
    {
      if (v47 >= *(void *)(v46 + 16))
      {
        __break(1u);
LABEL_87:
        __break(1u);
        JUMPOUT(0x1C05EA4ACLL);
      }
      sub_1BFED387C(v145 + v47 * v147, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFED387C(v180, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v49 = v141;
        sub_1C05F234C((uint64_t)v37, v141, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
        unint64_t v50 = *(void *)(v49 + *(int *)(v142 + 24));
        swift_bridgeObjectRetain();
        sub_1BFED60E8(v49, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      }
      else
      {
        uint64_t v51 = *v37;
        switch(*v37 >> 61)
        {
          case 1:
            uint64_t v52 = *(void *)((v51 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v53 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources;
            goto LABEL_15;
          case 2:
            swift_retain();
            unint64_t v50 = SportsBracketGroupDataVisualization.urlDataSources.getter();
            swift_release();
            goto LABEL_17;
          case 3:
            uint64_t v52 = *(void *)((v51 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v53 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources;
            goto LABEL_15;
          case 4:
            uint64_t v52 = *(void *)((v51 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v53 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources;
            goto LABEL_15;
          case 5:
            uint64_t v52 = *(void *)((v51 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v53 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources;
            goto LABEL_15;
          case 6:
            uint64_t v52 = *(void *)((v51 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v53 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources;
LABEL_15:
            unint64_t v50 = *(void *)(v52 + *v53);
            break;
          default:
            unint64_t v50 = *(void *)(*(void *)(v51 + 16)
                            + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_urlDataSources);
            break;
        }
        swift_bridgeObjectRetain();
LABEL_17:
        swift_release();
      }
      if (v50 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (!v54) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v54 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v54) {
          goto LABEL_3;
        }
      }
      if (v54 < 1) {
        goto LABEL_87;
      }
      uint64_t v55 = 0;
      uint64_t v187 = *(void *)(v178 + 72);
      unint64_t v182 = v50 & 0xC000000000000001;
      unint64_t v183 = v50;
      unint64_t v184 = v47;
      uint64_t v181 = v54;
      do
      {
        if (v182)
        {
          uint64_t v59 = MEMORY[0x1C18C7CB0](v55, v50);
        }
        else
        {
          uint64_t v59 = *(void *)(v50 + 8 * v55 + 32);
          swift_retain();
        }
        uint64_t v60 = v59 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
        sub_1C1518DCC();
        if (v188)
        {
          int v56 = *(os_unfair_lock_s **)(v188 + 16);
          swift_retain();
          os_unfair_lock_lock(v56 + 6);
          uint64_t v57 = v186;
          sub_1BFED387C(v180, v186, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          uint64_t v58 = v185;
          sub_1C02B90E4(v185, v57);
          sub_1BFED60E8(v58, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          unint64_t v47 = v184;
          os_unfair_lock_unlock(v56 + 6);
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          sub_1C1518DCC();
          int v61 = (*v168)(v15, 1, v177);
          uint64_t v176 = v59;
          if (v61 == 1)
          {
            sub_1C05F22DC((uint64_t)v15, &qword_1EB8688C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry);
            uint64_t v62 = (unint64_t *)v161;
            if (qword_1EB866C98 != -1) {
              swift_once();
            }
            uint64_t v63 = (void *)qword_1EB93C4D0;
            sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v64 = swift_allocObject();
            *(_OWORD *)(v64 + 16) = v158;
            uint64_t v65 = (uint64_t)v179;
            sub_1BFED387C((uint64_t)v179, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1C05F234C((uint64_t)v62, v162, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
              uint64_t v66 = v149;
              sub_1BFED387C(v65, (uint64_t)v149, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v67 = v63;
                id v68 = v63;
                sub_1BFED60E8((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
                unint64_t v69 = 0xE700000000000000;
                uint64_t v70 = 0x636972656E6567;
              }
              else
              {
                switch(*v66 >> 61)
                {
                  case 1:
                    uint64_t v67 = v63;
                    id v128 = v63;
                    swift_release();
                    unint64_t v69 = 0xE800000000000000;
                    uint64_t v70 = 0x676E69646E617473;
                    break;
                  case 2:
                    uint64_t v67 = v63;
                    id v129 = v63;
                    swift_release();
                    unint64_t v69 = 0xE700000000000000;
                    uint64_t v70 = 0x74656B63617262;
                    break;
                  case 3:
                    uint64_t v67 = v63;
                    id v130 = v63;
                    swift_release();
                    unint64_t v69 = 0xE800000000000000;
                    uint64_t v70 = 0x65726F6353786F62;
                    break;
                  case 4:
                    uint64_t v67 = v63;
                    id v131 = v63;
                    swift_release();
                    uint64_t v70 = 0x726F6353656E696CLL;
                    unint64_t v69 = 0xE900000000000065;
                    break;
                  case 5:
                    uint64_t v67 = v63;
                    id v132 = v63;
                    swift_release();
                    uint64_t v70 = 0x65527972756A6E69;
                    unint64_t v69 = 0xEC00000074726F70;
                    break;
                  case 6:
                    uint64_t v67 = v63;
                    id v133 = v63;
                    swift_release();
                    unint64_t v69 = 0xE900000000000072;
                    uint64_t v70 = 0x6579616C5079656BLL;
                    break;
                  default:
                    uint64_t v67 = v63;
                    id v115 = v63;
                    swift_release();
                    unint64_t v69 = 0xE500000000000000;
                    uint64_t v70 = 0x65726F6373;
                    break;
                }
              }
              uint64_t v188 = v70;
              unint64_t v189 = v69;
              sub_1C151E80C();
              uint64_t v71 = v162;
              swift_bridgeObjectRetain();
              sub_1C151E80C();
              swift_bridgeObjectRelease();
              uint64_t v72 = v188;
              unint64_t v73 = v189;
              sub_1BFED60E8(v71, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
              uint64_t v63 = v67;
            }
            else
            {
              unint64_t v90 = *v62;
              uint64_t v91 = v65;
              uint64_t v92 = v148;
              sub_1BFED387C(v91, (uint64_t)v148, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                id v93 = v63;
                sub_1BFED60E8((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
                unint64_t v94 = 0xE700000000000000;
                uint64_t v95 = 0x636972656E6567;
              }
              else
              {
                switch(*v92 >> 61)
                {
                  case 1:
                    id v134 = v63;
                    swift_release();
                    unint64_t v94 = 0xE800000000000000;
                    uint64_t v95 = 0x676E69646E617473;
                    break;
                  case 2:
                    id v135 = v63;
                    swift_release();
                    unint64_t v94 = 0xE700000000000000;
                    uint64_t v95 = 0x74656B63617262;
                    break;
                  case 3:
                    id v136 = v63;
                    swift_release();
                    unint64_t v94 = 0xE800000000000000;
                    uint64_t v95 = 0x65726F6353786F62;
                    break;
                  case 4:
                    id v137 = v63;
                    swift_release();
                    uint64_t v95 = 0x726F6353656E696CLL;
                    unint64_t v94 = 0xE900000000000065;
                    break;
                  case 5:
                    id v138 = v63;
                    swift_release();
                    uint64_t v95 = 0x65527972756A6E69;
                    unint64_t v94 = 0xEC00000074726F70;
                    break;
                  case 6:
                    id v139 = v63;
                    swift_release();
                    unint64_t v94 = 0xE900000000000072;
                    uint64_t v95 = 0x6579616C5079656BLL;
                    break;
                  default:
                    id v116 = v63;
                    swift_release();
                    unint64_t v94 = 0xE500000000000000;
                    uint64_t v95 = 0x65726F6373;
                    break;
                }
              }
              uint64_t v188 = v95;
              unint64_t v189 = v94;
              sub_1C151E80C();
              switch(v90 >> 61)
              {
                case 2uLL:
                  swift_retain();
                  SportsBracketGroupDataVisualization.umcCanonicalId.getter();
                  swift_release();
                  break;
                default:
                  swift_bridgeObjectRetain();
                  break;
              }
              sub_1C151E80C();
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v72 = v188;
              unint64_t v73 = v189;
              uint64_t v15 = v167;
            }
            uint64_t v117 = MEMORY[0x1E4FBB1A0];
            *(void *)(v64 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v118 = sub_1BFE9C558();
            *(void *)(v64 + 64) = v118;
            *(void *)(v64 + 32) = v72;
            *(void *)(v64 + 40) = v73;
            uint64_t v119 = sub_1C1515E2C();
            *(void *)(v64 + 96) = v117;
            *(void *)(v64 + 104) = v118;
            *(void *)(v64 + 72) = v119;
            *(void *)(v64 + 80) = v120;
            sub_1C151F38C();
            sub_1C15197BC();

            swift_bridgeObjectRelease();
            uint64_t v121 = swift_allocObject();
            *(_OWORD *)(v121 + 16) = v170;
            uint64_t v122 = v121 + v169;
            sub_1BFED387C((uint64_t)v179, v121 + v169, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            sub_1C05F3304(&qword_1EB867CA0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            uint64_t v188 = sub_1C151EFFC();
            uint64_t v123 = v186;
            sub_1BFED387C(v122, v186, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            uint64_t v124 = v185;
            sub_1C02B90E4(v185, v123);
            sub_1BFED60E8(v124, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1C05EF3C4(v60, v188, 0, 1);
            swift_bridgeObjectRelease();
            uint64_t v48 = v174;
          }
          else
          {
            sub_1C05F234C((uint64_t)v15, v48, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
            uint64_t v74 = v48;
            if (qword_1EB866C98 != -1) {
              swift_once();
            }
            uint64_t v75 = (void *)qword_1EB93C4D0;
            sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v76 = swift_allocObject();
            *(_OWORD *)(v76 + 16) = v157;
            id v77 = v75;
            uint64_t v78 = sub_1C05ED068();
            uint64_t v80 = v79;
            *(void *)(v76 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v81 = sub_1BFE9C558();
            *(void *)(v76 + 64) = v81;
            *(void *)(v76 + 32) = v78;
            *(void *)(v76 + 40) = v80;
            uint64_t v82 = v163;
            sub_1BFED387C(v74, (uint64_t)v163, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v156 = v60;
              uint64_t v83 = *v82 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate;
              unsigned int v84 = v153;
              uint64_t v85 = v166;
              (*v160)(v153, v83, v166);
              uint64_t v86 = v152;
              sub_1C151620C();
              uint64_t v87 = *v159;
              (*v159)(v84, v85);
              sub_1C151627C();
              double v89 = v88;
              swift_release();
              if (v89 < 0.0) {
                double v89 = 0.0;
              }
              v87(v86, v85);
              uint64_t v60 = v156;
            }
            else
            {
              uint64_t v96 = v150;
              sub_1C05F234C((uint64_t)v82, v150, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
              sub_1C151627C();
              if (v97 < 0.0) {
                double v89 = 0.0;
              }
              else {
                double v89 = v97;
              }
              sub_1BFED60E8(v96, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
            }
            *(void *)(v76 + 96) = MEMORY[0x1E4FBB3D0];
            *(void *)(v76 + 104) = MEMORY[0x1E4FBB460];
            *(double *)(v76 + 72) = v89;
            uint64_t v98 = v60;
            uint64_t v99 = sub_1C1515E2C();
            *(void *)(v76 + 136) = MEMORY[0x1E4FBB1A0];
            *(void *)(v76 + 144) = v81;
            *(void *)(v76 + 112) = v99;
            *(void *)(v76 + 120) = v100;
            sub_1C151F38C();
            sub_1C15197BC();

            swift_bridgeObjectRelease();
            uint64_t v101 = v164;
            sub_1BFED387C(v174, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v102 = v155;
              uint64_t v103 = v166;
              (*v160)(v155, *v101 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate, v166);
              uint64_t v104 = v154;
              sub_1C151620C();
              uint64_t v105 = *v159;
              (*v159)(v102, v103);
              sub_1C151627C();
              double v107 = v106;
              swift_release();
              if (v107 < 0.0) {
                double v107 = 0.0;
              }
              v105(v104, v103);
            }
            else
            {
              uint64_t v108 = v151;
              sub_1C05F234C((uint64_t)v101, v151, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
              sub_1C151627C();
              if (v109 < 0.0) {
                double v107 = 0.0;
              }
              else {
                double v107 = v109;
              }
              sub_1BFED60E8(v108, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
            }
            uint64_t v110 = v169;
            uint64_t v111 = swift_allocObject();
            *(_OWORD *)(v111 + 16) = v170;
            uint64_t v112 = v111 + v110;
            sub_1BFED387C((uint64_t)v179, v111 + v110, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            sub_1C05F3304(&qword_1EB867CA0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            uint64_t v188 = sub_1C151EFFC();
            uint64_t v113 = v186;
            sub_1BFED387C(v112, v186, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            uint64_t v114 = v185;
            sub_1C02B90E4(v185, v113);
            sub_1BFED60E8(v114, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1C05EF3C4(v98, v188, *(uint64_t *)&v107, 0);
            swift_bridgeObjectRelease();
            uint64_t v48 = v174;
            sub_1BFED60E8(v174, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
            uint64_t v15 = v167;
          }
          sub_1C1518DCC();
          if (v188)
          {
            uint64_t v125 = *(os_unfair_lock_s **)(v188 + 16);
            swift_retain();
            os_unfair_lock_lock(v125 + 6);
            uint64_t v126 = v186;
            sub_1BFED387C(v180, v186, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            uint64_t v127 = v185;
            sub_1C02B90E4(v185, v126);
            sub_1BFED60E8(v127, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
            os_unfair_lock_unlock(v125 + 6);
            swift_release();
            swift_release();
          }
          swift_release();
          unint64_t v47 = v184;
        }
        ++v55;
        unint64_t v50 = v183;
      }
      while (v181 != v55);
LABEL_3:
      ++v47;
      swift_bridgeObjectRelease();
      char v40 = v179;
      sub_1BFED60E8((uint64_t)v179, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v37 = v144;
      uint64_t v46 = v143;
      if (v47 == v146) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05EA51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v79 = sub_1C1515FDC();
  uint64_t v72 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05F4668(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v83 = (uint64_t)&v70 - v9;
  uint64_t v71 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v71);
  uint64_t v70 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v73 = (void (**)(char *, uint64_t, uint64_t))type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v73);
  uint64_t v80 = (uint64_t *)((char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v82 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v85 = (unint64_t)&v70 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v70 - v17;
  unint64_t v19 = sub_1C151E24C();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (uint64_t *)((char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v22 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, unint64_t))(v20 + 104))(v22, *MEMORY[0x1E4FBCBF0], v19);
  char v23 = sub_1C151E26C();
  uint64_t v25 = *(void (**)(uint64_t *, unint64_t))(v20 + 8);
  unint64_t v24 = v20 + 8;
  v25(v22, v19);
  if ((v23 & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1BFED387C(a3, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v81 = v4 + 56;
  swift_beginAccess();
  uint64_t v26 = *(void *)(v4 + 56);
  uint64_t v27 = MEMORY[0x1E4FBC860];
  unint64_t v24 = a3;
  if (*(void *)(v26 + 16))
  {
    unint64_t v28 = sub_1C1052524((uint64_t)v18);
    if (v29)
    {
      unint64_t v19 = *(void *)(*(void *)(v26 + 56) + 8 * v28);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v19 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    unint64_t v19 = MEMORY[0x1E4FBC860];
  }
  swift_endAccess();
  sub_1BFED60E8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  v87[0] = v27;
  if (v19 >> 62)
  {
LABEL_25:
    swift_unknownObjectRetain();
    uint64_t v30 = sub_1C15204BC();
    unint64_t v84 = v24;
    if (v30) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
  uint64_t v30 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  unint64_t v84 = a3;
  if (v30)
  {
LABEL_9:
    uint64_t v77 = v4;
    unint64_t v24 = 0;
    uint64_t v4 = v19 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        uint64_t v31 = MEMORY[0x1C18C7CB0](v24, v19);
        unint64_t v32 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_21:
          __break(1u);
LABEL_22:
          uint64_t v35 = v87[0];
          unint64_t v24 = v84;
          uint64_t v4 = v77;
          goto LABEL_27;
        }
      }
      else
      {
        if (v24 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_24;
        }
        uint64_t v31 = *(void *)(v19 + 8 * v24 + 32);
        swift_retain();
        unint64_t v32 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_21;
        }
      }
      uint64_t v33 = MEMORY[0x1C18C9C60](v31 + 16);
      if (v33 && (uint64_t v34 = v33, swift_unknownObjectRelease(), v34 == a1) || !MEMORY[0x1C18C9C60](v31 + 16))
      {
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
        sub_1C152025C();
        sub_1C152029C();
        sub_1C15202AC();
        sub_1C152026C();
      }
      ++v24;
      if (v32 == v30) {
        goto LABEL_22;
      }
    }
  }
LABEL_26:
  uint64_t v35 = MEMORY[0x1E4FBC860];
LABEL_27:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v36 = v85;
  sub_1BFED387C(v24, v85, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if ((v35 & 0x8000000000000000) == 0 && (v35 & 0x4000000000000000) == 0)
  {
    uint64_t v38 = v81;
    uint64_t v37 = (uint64_t)v82;
    if (*(void *)(v35 + 16)) {
      goto LABEL_30;
    }
LABEL_33:
    swift_release();
    swift_beginAccess();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1C15204BC();
  swift_release();
  uint64_t v38 = v81;
  uint64_t v37 = (uint64_t)v82;
  if (!v40) {
    goto LABEL_33;
  }
LABEL_30:
  swift_beginAccess();
  if (!v35)
  {
LABEL_34:
    sub_1C0353DB0(v36);
    sub_1BFED60E8(v36, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v86 = *(void *)v38;
  *(void *)uint64_t v38 = 0x8000000000000000;
  sub_1C1067CA8(v35, v36, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v38 = v86;
  swift_bridgeObjectRelease();
  sub_1BFED60E8(v36, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
LABEL_35:
  swift_endAccess();
  sub_1BFED387C(v24, v37, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  swift_beginAccess();
  if (*(void *)(*(void *)v38 + 16))
  {
    sub_1C1052524(v37);
    if (v41)
    {
      swift_endAccess();
      return sub_1BFED60E8(v37, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    }
  }
  swift_endAccess();
  sub_1BFED60E8(v37, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v77 = v43;
  uint64_t v44 = swift_allocObject();
  long long v76 = xmmword_1C1529AE0;
  *(_OWORD *)(v44 + 16) = xmmword_1C1529AE0;
  uint64_t v45 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v47 = v46;
  *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v75 = sub_1BFE9C558();
  *(void *)(v44 + 64) = v75;
  *(void *)(v44 + 32) = v45;
  *(void *)(v44 + 40) = v47;
  uint64_t v74 = sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
  uint64_t v48 = (void *)sub_1C151FD3C();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  sub_1C0FD2DE4(v24);
  uint64_t v49 = v80;
  sub_1BFED387C(v24, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v50 = (uint64_t)v49;
    uint64_t v51 = v70;
    sub_1C05F234C(v50, v70, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    unint64_t v52 = *(void *)(v51 + *(int *)(v71 + 24));
    swift_bridgeObjectRetain();
    sub_1BFED60E8(v51, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v87[0] = *v49;
    unint64_t v52 = SportsDataVisualization.urlDataSources.getter();
    swift_release();
  }
  if (v52 >> 62)
  {
LABEL_58:
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v53) {
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v53)
    {
LABEL_43:
      uint64_t v54 = *(void *)(v4 + 72);
      unint64_t v85 = v52 & 0xC000000000000001;
      unint64_t v73 = (void (**)(char *, uint64_t, uint64_t))(v72 + 16);
      uint64_t v55 = 4;
      uint64_t v81 = v53;
      uint64_t v82 = (char *)v52;
      uint64_t v80 = (uint64_t *)v54;
      do
      {
        uint64_t v56 = v55 - 4;
        if (v85)
        {
          uint64_t v4 = MEMORY[0x1C18C7CB0](v55 - 4, v52);
          uint64_t v57 = v55 - 3;
          if (__OFADD__(v56, 1)) {
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v4 = *(void *)(v52 + 8 * v55);
          swift_retain();
          uint64_t v57 = v55 - 3;
          if (__OFADD__(v56, 1))
          {
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
        }
        uint64_t v58 = v4 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
        sub_1C1518DCC();
        uint64_t v59 = v87[0];
        if (v87[0])
        {
          uint64_t v60 = *(os_unfair_lock_s **)(v87[0] + 16);
          swift_retain();
          os_unfair_lock_lock(v60 + 6);
          uint64_t v61 = v83;
          sub_1C05F0C88(v84, v83);
          sub_1C05F22DC(v61, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          os_unfair_lock_unlock(v60 + 6);
          swift_release();
          uint64_t v62 = *(void *)(v59 + 16);
          swift_retain();
          os_unfair_lock_lock((os_unfair_lock_t)(v62 + 24));
          sub_1C03C7558((void *)(v62 + 16), v87);
          os_unfair_lock_unlock((os_unfair_lock_t)(v62 + 24));
          uint64_t v63 = v87[0];
          swift_release();
          uint64_t v64 = *(void *)(v63 + 16);
          swift_bridgeObjectRelease();
          if (v64)
          {
            swift_release();
            swift_release();
            uint64_t v53 = v81;
            unint64_t v52 = (unint64_t)v82;
          }
          else
          {
            uint64_t v65 = swift_allocObject();
            *(_OWORD *)(v65 + 16) = v76;
            uint64_t v66 = sub_1C1515E2C();
            unint64_t v67 = v75;
            *(void *)(v65 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v65 + 64) = v67;
            *(void *)(v65 + 32) = v66;
            *(void *)(v65 + 40) = v68;
            unint64_t v69 = (void *)sub_1C151FD3C();
            sub_1C151F38C();
            sub_1C15197BC();
            swift_bridgeObjectRelease();

            sub_1C1518DCC();
            uint64_t v53 = v81;
            if (v87[0])
            {
              swift_retain();
              swift_release();
              sub_1C151E22C();
              swift_release();
            }
            (*v73)(v78, v58, v79);
            v87[0] = 0;
            sub_1C1518DDC();
            swift_release();
            swift_release();
            unint64_t v52 = (unint64_t)v82;
          }
        }
        else
        {
          swift_release();
        }
        ++v55;
      }
      while (v57 != v53);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05EB084(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05F4668(0, &qword_1EB8675C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - v6;
  sub_1BFED387C(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C1518DCC();
  sub_1BFED60E8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  uint64_t v8 = type metadata accessor for WebEmbedDatastoreUpdate();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_1C05F22DC((uint64_t)v7, &qword_1EB8675C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate);
    return 0;
  }
  else
  {
    uint64_t v9 = *(void *)&v7[*(int *)(v8 + 20)];
    swift_retain();
    sub_1BFED60E8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
  }
  return v9;
}

uint64_t sub_1C05EB258(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for WebEmbedDatastoreUpdate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *((unsigned char *)a1 + 8);
  uint64_t v13 = *a1;
  char v14 = v6;
  unint64_t v7 = sub_1C0FD50A4((uint64_t)&v13);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v9 = v7 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    do
    {
      sub_1BFED387C(v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
      swift_retain();
      sub_1BFED60E8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      v9 += v10;
      --v8;
    }
    while (v8);
    uint64_t v11 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v11;
}

uint64_t sub_1C05EB410()
{
  uint64_t v66 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v1 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v60 = (char *)&v55 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v55 - v7;
  sub_1C05F3BF4();
  uint64_t v64 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v63 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v68 = (uint64_t)&v55 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v62 = (uint64_t)&v55 - v14;
  int64_t v67 = *(void *)(v0 + 64);
  sub_1C1518D6C();
  uint64_t v57 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v65 = type metadata accessor for WebEmbedDatastoreUpdate();
  uint64_t v61 = type metadata accessor for WebEmbedDatastore();
  sub_1C05F3304(&qword_1EB88BFB8, (void (*)(uint64_t))type metadata accessor for WebEmbedDatastoreCacheKey);
  uint64_t v15 = sub_1C05F3304(&qword_1EB867CA0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v56 = sub_1C151E36C();
  swift_bridgeObjectRelease();
  sub_1C1518D6C();
  uint64_t v54 = v15;
  uint64_t v16 = v57;
  sub_1C151E36C();
  uint64_t v55 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t)v69;
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + 56);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v58 = v18 + 64;
  uint64_t v71 = MEMORY[0x1E4FBC870];
  uint64_t v20 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v59 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v61 = v16 - 8;
  uint64_t v65 = v18;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v24 = 0;
  unint64_t v69 = v3;
  while (1)
  {
    if (v22)
    {
      uint64_t v66 = (v22 - 1) & v22;
      int64_t v67 = v24;
      unint64_t v25 = __clz(__rbit64(v22)) | (v24 << 6);
    }
    else
    {
      int64_t v26 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_41;
      }
      if (v26 >= v59)
      {
LABEL_39:
        swift_release();
        uint64_t v50 = swift_bridgeObjectRelease();
        uint64_t v51 = v56;
        uint64_t v52 = v71;
        MEMORY[0x1F4188790](v50);
        uint64_t v54 = v52;
        uint64_t v53 = sub_1C05F3F44(v51, (uint64_t (*)(char *, uint64_t))sub_1C05F3C98, (uint64_t)(&v55 - 4));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v53;
      }
      unint64_t v27 = *(void *)(v58 + 8 * v26);
      int64_t i = v24 + 1;
      if (!v27)
      {
        int64_t i = v24 + 2;
        if (v24 + 2 >= v59) {
          goto LABEL_39;
        }
        unint64_t v27 = *(void *)(v58 + 8 * i);
        if (!v27)
        {
          int64_t i = v24 + 3;
          if (v24 + 3 >= v59) {
            goto LABEL_39;
          }
          unint64_t v27 = *(void *)(v58 + 8 * i);
          if (!v27)
          {
            int64_t i = v24 + 4;
            if (v24 + 4 >= v59) {
              goto LABEL_39;
            }
            unint64_t v27 = *(void *)(v58 + 8 * i);
            if (!v27)
            {
              uint64_t v29 = v24 + 5;
              if (v24 + 5 >= v59) {
                goto LABEL_39;
              }
              unint64_t v27 = *(void *)(v58 + 8 * v29);
              for (int64_t i = v24 + 5; !v27; ++v29)
              {
                int64_t i = v29 + 1;
                if (__OFADD__(v29, 1)) {
                  goto LABEL_42;
                }
                if (i >= v59) {
                  goto LABEL_39;
                }
                unint64_t v27 = *(void *)(v58 + 8 * i);
              }
            }
          }
        }
      }
      uint64_t v66 = (v27 - 1) & v27;
      int64_t v67 = i;
      unint64_t v25 = __clz(__rbit64(v27)) + (i << 6);
    }
    uint64_t v30 = v65;
    uint64_t v31 = v62;
    sub_1BFED387C(*(void *)(v65 + 48) + *(void *)(*(void *)v61 + 72) * v25, v62, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    uint64_t v32 = *(void *)(*(void *)(v30 + 56) + 8 * v25);
    uint64_t v33 = v64;
    *(void *)(v31 + *(int *)(v64 + 48)) = v32;
    uint64_t v34 = v31;
    uint64_t v35 = v68;
    sub_1C05F234C(v34, v68, (uint64_t (*)(void))sub_1C05F3BF4);
    uint64_t v36 = *(int *)(v33 + 48);
    uint64_t v37 = v63;
    sub_1BFED387C(v35, v63, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    unint64_t v38 = *(void *)(v35 + v36);
    *(void *)(v37 + v36) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFED60E8(v37, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v39)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v41 = MEMORY[0x1E4FBC860];
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v39) {
        goto LABEL_34;
      }
    }
    uint64_t v70 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F61B0(0, v39 & ~(v39 >> 63), 0);
    if (v39 < 0) {
      break;
    }
    uint64_t v40 = 0;
    uint64_t v41 = v70;
    do
    {
      if ((v38 & 0xC000000000000001) != 0)
      {
        uint64_t v42 = MEMORY[0x1C18C7CB0](v40, v38);
        sub_1BFED387C(v42 + OBJC_IVAR____TtC8NewsFeed37WeakWebEmbedDataSourceManagerObserver_dataVisualization, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1BFED387C(*(void *)(v38 + 8 * v40 + 32)+ OBJC_IVAR____TtC8NewsFeed37WeakWebEmbedDataSourceManagerObserver_dataVisualization, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      }
      uint64_t v70 = v41;
      unint64_t v44 = *(void *)(v41 + 16);
      unint64_t v43 = *(void *)(v41 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_1C05F61B0(v43 > 1, v44 + 1, 1);
        uint64_t v41 = v70;
      }
      ++v40;
      *(void *)(v41 + 16) = v44 + 1;
      uint64_t v45 = v41
          + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
          + *(void *)(v1 + 72) * v44;
      uint64_t v3 = v69;
      sub_1C05F234C((uint64_t)v69, v45, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    while (v39 != v40);
    swift_bridgeObjectRelease();
LABEL_35:
    uint64_t v46 = (uint64_t)v60;
    uint64_t v47 = *(void *)(v41 + 16);
    if (v47)
    {
      uint64_t v48 = v41 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      uint64_t v49 = *(void *)(v1 + 72);
      do
      {
        sub_1BFED387C(v48, v46, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1C02B90E4((uint64_t)v8, v46);
        sub_1BFED60E8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        v48 += v49;
        --v47;
      }
      while (v47);
    }
    swift_bridgeObjectRelease();
    unint64_t v22 = v66;
    int64_t v24 = v67;
    uint64_t result = sub_1BFED60E8(v68, (uint64_t (*)(void))sub_1C05F3BF4);
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C05EBBF8(uint64_t a1)
{
  uint64_t v63 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1F4188790](v63);
  uint64_t v3 = (char *)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v53 - v5;
  uint64_t v7 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v53 - v11;
  uint64_t v13 = type metadata accessor for WebEmbedDatastoreProperty();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v56 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v53 - v17;
  uint64_t v66 = MEMORY[0x1E4FBC860];
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents);
  uint64_t v62 = v15;
  if (v19)
  {
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      v53[1] = v19;
      uint64_t v54 = a1;
      uint64_t v65 = &v18[*(int *)(v56 + 20)];
      uint64_t v57 = (void *)(v64 + 16);
      uint64_t v21 = v19 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      uint64_t v61 = *(void **)(v55 + 72);
      swift_bridgeObjectRetain();
      int64_t v59 = v6;
      uint64_t v60 = v12;
      uint64_t v58 = v18;
      do
      {
        sub_1BFED387C(v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreProperty);
        sub_1BFED387C((uint64_t)v65, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
        sub_1BFED60E8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreProperty);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v22 = swift_retain();
          MEMORY[0x1C18C66D0](v22);
          if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          swift_release();
        }
        else
        {
          char v23 = v3;
          sub_1C05F234C((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
          int64_t v24 = __swift_project_boxed_opaque_existential_1(v57, *(void *)(v64 + 40));
          uint64_t v25 = *(int *)(v63 + 32);
          uint64_t v26 = *v24;
          sub_1C1517E7C();
          unint64_t v27 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses);
          swift_beginAccess();
          uint64_t v28 = *v27;
          if (*(void *)(v28 + 16) && (uint64_t v29 = sub_1C10521B0((uint64_t)&v6[v25]), (v30 & 1) != 0))
          {
            uint64_t v31 = *(void *)(*(void *)(v28 + 56) + 8 * v29);
            swift_retain();
          }
          else
          {
            uint64_t v31 = 0;
          }
          uint64_t v3 = v23;
          swift_endAccess();
          sub_1C1517E8C();
          uint64_t v18 = v58;
          if (v31)
          {
            uint64_t v32 = swift_retain();
            MEMORY[0x1C18C66D0](v32);
            if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
            swift_release();
          }
          uint64_t v6 = v59;
          sub_1BFED60E8((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
        }
        uint64_t v12 = v60;
        v21 += (uint64_t)v61;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      uint64_t v15 = v62;
      a1 = v54;
    }
  }
  uint64_t v33 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents);
  if (v33 && (uint64_t v58 = *(char **)(v33 + 16)) != 0)
  {
    uint64_t v61 = (void *)(v64 + 16);
    uint64_t v57 = (void *)(v33 + 32);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v35 = 0;
    uint64_t v54 = result;
    while ((unint64_t)v35 < *(void *)(result + 16))
    {
      uint64_t v36 = v57[(void)v35];
      uint64_t v37 = *(void *)(v36 + 16);
      if (v37)
      {
        int64_t v59 = (char *)v57[(void)v35];
        uint64_t v60 = v35;
        uint64_t v38 = v55;
        uint64_t v65 = &v15[*(int *)(v56 + 20)];
        uint64_t v39 = v36 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
        swift_bridgeObjectRetain();
        uint64_t v40 = *(void *)(v38 + 72);
        do
        {
          sub_1BFED387C(v39, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreProperty);
          sub_1BFED387C((uint64_t)v65, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
          sub_1BFED60E8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreProperty);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v41 = swift_retain();
            MEMORY[0x1C18C66D0](v41);
            if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
            swift_release();
          }
          else
          {
            uint64_t v42 = v7;
            sub_1C05F234C((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
            unint64_t v43 = __swift_project_boxed_opaque_existential_1(v61, *(void *)(v64 + 40));
            uint64_t v44 = *(int *)(v63 + 32);
            uint64_t v45 = *v43;
            sub_1C1517E7C();
            uint64_t v46 = (uint64_t *)(v45 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses);
            swift_beginAccess();
            uint64_t v47 = *v46;
            if (*(void *)(*v46 + 16) && (uint64_t v48 = sub_1C10521B0((uint64_t)&v3[v44]), (v49 & 1) != 0))
            {
              uint64_t v50 = *(void *)(*(void *)(v47 + 56) + 8 * v48);
              swift_retain();
            }
            else
            {
              uint64_t v50 = 0;
            }
            uint64_t v7 = v42;
            uint64_t v15 = v62;
            swift_endAccess();
            sub_1C1517E8C();
            if (v50)
            {
              uint64_t v51 = swift_retain();
              MEMORY[0x1C18C66D0](v51);
              if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1C151EC8C();
              }
              sub_1C151ECEC();
              sub_1C151EBEC();
              swift_release();
            }
            sub_1BFED60E8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
          }
          v39 += v40;
          --v37;
        }
        while (v37);
        swift_bridgeObjectRelease();
        uint64_t result = v54;
        uint64_t v35 = v60;
      }
      if (++v35 == v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_42:
    uint64_t v52 = v66;
    type metadata accessor for WebEmbedDatastoreFailures();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v52;
  }
  return result;
}

uint64_t sub_1C05EC324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  uint64_t v7 = sub_1C151E68C();
  *(void *)(v5 + 56) = v7;
  *(void *)(v5 + 64) = *(void *)(v7 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  *(void *)(v5 + 80) = type metadata accessor for WebEmbedDataSourceJson();
  *(void *)(v5 + 88) = swift_task_alloc();
  sub_1C05F4668(0, &qword_1EB8688C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, MEMORY[0x1E4FBB718]);
  *(void *)(v5 + 96) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  *(void *)(v5 + 104) = v8;
  *(void *)(v5 + 112) = *(void *)(v8 - 8);
  *(void *)(v5 + 120) = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *a4;
  uint64_t v11 = a4[1];
  *(void *)(v5 + 128) = v9;
  *(void *)(v5 + 136) = v10;
  *(void *)(v5 + 144) = v11;
  *(_OWORD *)(v5 + 152) = *((_OWORD *)a4 + 1);
  return MEMORY[0x1F4188298](sub_1C05EC4F4, 0, 0);
}

uint64_t sub_1C05EC4F4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1C05F4668(0, &qword_1EB86BB70, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = type metadata accessor for WebEmbedDataVisualization();
  *(void *)(v0 + 168) = v2;
  int v3 = *(_DWORD *)(*(void *)(v2 - 8) + 80);
  *(_DWORD *)(v0 + 192) = v3;
  unint64_t v4 = (v3 + 32) & ~(unint64_t)v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 176) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v5 + v4) = v6 | 0x2000000000000000;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C05EC69C;
  return sub_1C05E7A50(v5);
}

uint64_t sub_1C05EC69C()
{
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return MEMORY[0x1F4188298](sub_1C05EC800, 0, 0);
}

uint64_t sub_1C05EC800()
{
  uint64_t v44 = v0;
  unint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
  if (v1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_retain();
  if (!v2)
  {
LABEL_27:
    uint64_t v15 = v39;
    swift_bridgeObjectRelease_n();
    sub_1C05F2288();
    swift_allocError();
    *uint64_t v35 = 0;
    swift_willThrow();
    swift_release();
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v15 + 8);
    goto LABEL_29;
  }
  while (1)
  {
    uint64_t v3 = 0;
LABEL_6:
    if ((v1 & 0xC000000000000001) != 0) {
      break;
    }
    uint64_t v5 = *(void *)(v1 + 8 * v3 + 32);
    swift_retain();
    uint64_t v6 = v3 + 1;
    if (!__OFADD__(v3, 1)) {
      goto LABEL_11;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v2 = sub_1C15204BC();
    if (!v2) {
      goto LABEL_27;
    }
  }
  uint64_t v5 = MEMORY[0x1C18C7CB0](v3, v1);
  uint64_t v6 = v3 + 1;
  if (__OFADD__(v3, 1)) {
    goto LABEL_25;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = 0x617453746E657665;
  unint64_t v10 = 0xEF61746144636974;
  switch(v8)
  {
    case 0uLL:
      goto LABEL_13;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      goto LABEL_4;
    case 4uLL:
      sub_1C04452EC(*(void *)(v5 + 16), 4uLL);
      sub_1C04452EC(0, 0);
      goto LABEL_5;
    default:
      uint64_t v9 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
LABEL_13:
      if (v9 != 0x617453746E657665 || v10 != 0xEF61746144636974)
      {
LABEL_4:
        char v4 = sub_1C1520A9C();
        sub_1C025F810(v7, v8);
        swift_bridgeObjectRelease();
        if (v4) {
          goto LABEL_18;
        }
LABEL_5:
        swift_release();
        ++v3;
        if (v6 == v2) {
          goto LABEL_27;
        }
        goto LABEL_6;
      }
      sub_1C025F810(*(void *)(v5 + 16), *(void *)(v5 + 24));
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease_n();
      uint64_t v12 = *(void *)(v39 + 104);
      uint64_t v11 = *(void *)(v39 + 112);
      uint64_t v13 = *(void *)(v39 + 96);
      swift_retain();
      sub_1C1518DCC();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) == 1)
      {
        sub_1C05F22DC(*(void *)(v39 + 96), &qword_1EB8688C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry);
        sub_1C05F2288();
        swift_allocError();
        *uint64_t v14 = 0;
        swift_willThrow();
        swift_release_n();
        swift_release();
        uint64_t v15 = v39;
        goto LABEL_28;
      }
      uint64_t v17 = *(void *)(v39 + 120);
      uint64_t v16 = *(void *)(v39 + 128);
      sub_1C05F234C(*(void *)(v39 + 96), v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
      sub_1BFED387C(v16, v17, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
      uint64_t v15 = v39;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = *(void *)(v39 + 128);
        sub_1BFED60E8(*(void *)(v39 + 120), (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
        sub_1C05F2288();
        swift_allocError();
        *uint64_t v19 = 0;
        swift_willThrow();
        swift_release_n();
        swift_release();
        sub_1BFED60E8(v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
        goto LABEL_28;
      }
      uint64_t v20 = *(void *)(v39 + 64);
      uint64_t v21 = *(void *)(v39 + 72);
      uint64_t v22 = *(void *)(v39 + 56);
      sub_1C05F234C(*(void *)(v39 + 120), *(void *)(v39 + 88), (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
      swift_bridgeObjectRetain();
      sub_1C151E67C();
      uint64_t v23 = sub_1C151E63C();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
      if (v25 >> 60 == 15)
      {
        uint64_t v26 = *(void *)(v39 + 128);
        uint64_t v27 = *(void *)(v39 + 88);
        sub_1C05F2288();
        swift_allocError();
        *uint64_t v28 = 1;
        swift_willThrow();
        swift_release_n();
        swift_release();
        sub_1BFED60E8(v27, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
        sub_1BFED60E8(v26, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
        uint64_t v15 = v39;
        goto LABEL_28;
      }
      sub_1C1517DCC();
      swift_allocObject();
      sub_1C1517DBC();
      sub_1C05F23B4();
      sub_1C1517D9C();
      uint64_t v30 = *(void *)(v39 + 152);
      uint64_t v29 = *(void *)(v39 + 160);
      long long v37 = *(_OWORD *)(v39 + 136);
      uint64_t v31 = *(void *)(v39 + 24);
      uint64_t v38 = *(void *)(v39 + 32);
      swift_release();
      uint64_t v40 = *(void *)(v39 + 16);
      long long v41 = v37;
      uint64_t v42 = v30;
      uint64_t v43 = v29;
      sub_1C03CBE5C(v38, &v40, (uint64_t)&v41, v31);
      uint64_t v32 = *(void *)(v39 + 128);
      uint64_t v33 = *(void *)(v39 + 88);
      sub_1BFE95878(v23, v25);
      swift_release_n();
      swift_release();
      sub_1BFED60E8(v33, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
      sub_1BFED60E8(v32, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v34 = *(uint64_t (**)(void))(v39 + 8);
LABEL_29:
      return v34();
  }
}

uint64_t sub_1C05ED068()
{
  uint64_t v1 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFED387C(v0, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C05F234C((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    uint64_t v13 = WebEmbedDataVisualization.kind.getter();
    uint64_t v14 = v7;
    sub_1C151E80C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v8 = v13;
    sub_1BFED60E8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    uint64_t v9 = *v6;
    uint64_t v13 = WebEmbedDataVisualization.kind.getter();
    uint64_t v14 = v10;
    sub_1C151E80C();
    v12[1] = v9;
    SportsDataVisualization.umcCanonicalId.getter();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_release();
    return v13;
  }
  return v8;
}

uint64_t sub_1C05ED224()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C05ED284(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1BFC542F4;
  return sub_1C05E7A50(a1);
}

uint64_t sub_1C05ED31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05E852C(a1, a2, a3);
}

uint64_t sub_1C05ED340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C05EA51C(a1, a2, a3);
}

uint64_t sub_1C05ED364(uint64_t a1)
{
  return sub_1C05EB084(a1);
}

uint64_t sub_1C05ED388(uint64_t *a1)
{
  return sub_1C05EB258(a1);
}

uint64_t sub_1C05ED3AC()
{
  sub_1C1518D6C();
  type metadata accessor for WebEmbedDatastoreCacheKey();
  type metadata accessor for WebEmbedDatastoreUpdate();
  type metadata accessor for WebEmbedDataVisualization();
  type metadata accessor for WebEmbedDatastore();
  sub_1C05F3304(&qword_1EB88BFB8, (void (*)(uint64_t))type metadata accessor for WebEmbedDatastoreCacheKey);
  sub_1C05F3304(&qword_1EB867CA0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v0 = sub_1C151E36C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C05ED4DC()
{
  return sub_1C05EB410();
}

uint64_t sub_1C05ED500(uint64_t a1)
{
  return sub_1C05EBBF8(a1);
}

uint64_t sub_1C05ED524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1BFC542F4;
  return sub_1C05EC324(a1, a2, a3, a4);
}

uint64_t sub_1C05ED5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) + 24);
  uint64_t v4 = sub_1C1515FDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1C05ED668(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1C05F3480(a1, a2);
  swift_release();
  uint64_t v4 = (void *)sub_1C1518E7C();
  uint64_t v5 = sub_1C151940C();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1C05ED6F8(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v31 = *v1;
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v11 = a1 + *(int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) + 24);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v26 = v10;
  v12(v10, v11, v4);
  uint64_t v27 = (void (*)(char *, char *, uint64_t))v12;
  uint64_t v29 = v3;
  uint64_t v30 = a1;
  v22[1] = type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  v22[0] = sub_1C151932C();
  v12(v7, (uint64_t)v10, v4);
  uint64_t v28 = v5;
  uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = (v13 + 16) & ~v13;
  uint64_t v24 = v13 | 7;
  uint64_t v25 = v14 + v6;
  uint64_t v15 = swift_allocObject();
  uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v23(v15 + v14, v7, v4);
  uint64_t v16 = (void *)sub_1C1518E7C();
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v17 = v26;
  v27(v7, v26, v4);
  uint64_t v18 = swift_allocObject();
  v23(v18 + v14, v7, v4);
  uint64_t v19 = (void *)sub_1C1518E7C();
  uint64_t v20 = sub_1C151904C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v4);
  return v20;
}

uint64_t sub_1C05ED9D8()
{
  if (qword_1EB866C98 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB93C4D0;
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  id v2 = v0;
  uint64_t v3 = sub_1C1515E2C();
  uint64_t v5 = v4;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v5;
  sub_1C151F38C();
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05EDB0C()
{
  if (qword_1EB866C98 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C4D0;
  sub_1C151F36C();
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1527210;
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  uint64_t v2 = sub_1C1515E2C();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1BFE9C558();
  *(void *)(v1 + 64) = v6;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v1 + 96) = v5;
  *(void *)(v1 + 104) = v6;
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 80) = 0xE000000000000000;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05EDCA4()
{
  return sub_1C151911C();
}

uint64_t sub_1C05EDD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v36 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFED387C(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C05F234C((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    unint64_t v14 = *(void *)&v10[*(int *)(v8 + 24)];
    swift_bridgeObjectRetain();
    sub_1BFED60E8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    uint64_t v38 = *v13;
    unint64_t v14 = SportsDataVisualization.urlDataSources.getter();
    swift_release();
  }
  if (!(v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_17:
    uint64_t v25 = v33;
    swift_retain();
    sub_1C05F2408(v18, v25);
    uint64_t v27 = v26;
    uint64_t v28 = swift_release();
    MEMORY[0x1F4188790](v28);
    *(&v30 - 2) = v25;
    *(&v30 - 1) = a1;
    uint64_t v29 = sub_1C0184470((void (*)(uint64_t))sub_1C05F3BD4, (uint64_t)(&v30 - 4), v27, (uint64_t)v37);
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v29;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v38 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F61F8(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v3;
    uint64_t v31 = a1;
    uint64_t v32 = a3;
    uint64_t v17 = 0;
    uint64_t v18 = v38;
    unint64_t v34 = v14 & 0xC000000000000001;
    uint64_t v19 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    unint64_t v20 = v14;
    uint64_t v21 = v15;
    do
    {
      if (v34)
      {
        uint64_t v22 = MEMORY[0x1C18C7CB0](v17, v14);
        (*v19)(v35, v22 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v36);
        swift_unknownObjectRelease();
      }
      else
      {
        (*v19)(v35, *(void *)(v14 + 8 * v17 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v36);
      }
      uint64_t v38 = v18;
      unint64_t v24 = *(void *)(v18 + 16);
      unint64_t v23 = *(void *)(v18 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1C05F61F8(v23 > 1, v24 + 1, 1);
        uint64_t v18 = v38;
      }
      ++v17;
      *(void *)(v18 + 16) = v24 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v24, v35, v36);
      unint64_t v14 = v20;
    }
    while (v21 != v17);
    swift_bridgeObjectRelease();
    a1 = v31;
    a3 = v32;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1C05EE168(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v36 = sub_1C151635C();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1C1515FDC();
  uint64_t v29 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1518DCC();
  if (!v39)
  {
    uint64_t v37 = v3;
    uint64_t v27 = MEMORY[0x1E4FBC870];
    goto LABEL_5;
  }
  uint64_t v11 = a1;
  uint64_t v12 = *(void *)(v39 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
  sub_1C03C7558((void *)(v12 + 16), &v38);
  uint64_t v37 = v3;
  uint64_t v13 = (os_unfair_lock_s *)(v12 + 24);
  if (!v3)
  {
    os_unfair_lock_unlock(v13);
    uint64_t v27 = v38;
    swift_release();
    swift_release();
    a1 = v11;
LABEL_5:
    uint64_t v14 = v32;
    sub_1BFED387C(v32, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    BOOL v28 = swift_getEnumCaseMultiPayload() == 1;
    sub_1BFED60E8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v15 = v29;
    uint64_t v16 = v30;
    uint64_t v17 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, a1, v35);
    sub_1C05F4668(0, &qword_1EB86BB70, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBBE00]);
    unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
    sub_1BFED387C(v14, v19 + v18, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v20 = sub_1C01B2644(v19, v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v21 = v33;
    sub_1C151634C();
    uint64_t v22 = sub_1C151633C();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v36);
    uint64_t v25 = v31;
    *uint64_t v31 = v22;
    v25[1] = v24;
    *((unsigned char *)v25 + 16) = v28;
    uint64_t v26 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v25 + *(int *)(v26 + 24), v16, v17);
    *(uint64_t *)((char *)v25 + *(int *)(v26 + 28)) = v20;
    return;
  }
  os_unfair_lock_unlock(v13);
  __break(1u);
}

void sub_1C05EE578(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1518DCC();
  if (v19)
  {
    uint64_t v5 = *(void *)(v19 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    sub_1C03C7558((void *)(v5 + 16), &v18);
    if (v2)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
      __break(1u);
      return;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
    uint64_t v6 = v18;
    swift_release();
    swift_release();
    uint64_t v7 = sub_1C01E9268(v6);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v9 = 0xE700000000000000;
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  uint64_t v17 = a1;
  if (qword_1EB866C98 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EB93C4D0;
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1BFE9C558();
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v9;
  id v14 = v10;
  uint64_t v15 = sub_1C1515E2C();
  *(void *)(v11 + 96) = v12;
  *(void *)(v11 + 104) = v13;
  *(void *)(v11 + 72) = v15;
  *(void *)(v11 + 80) = v16;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C0FD60DC(v17);
  sub_1BFED387C((uint64_t)v17, a2, type metadata accessor for WebEmbedDataVisualizationDataResult);
}

uint64_t sub_1C05EE7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1518DCC();
  if (v18)
  {
    uint64_t v6 = *(void *)(v18 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
    sub_1C03C7558((void *)(v6 + 16), &v19);
    os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
    uint64_t v7 = v19;
    swift_release();
    swift_release();
    uint64_t v8 = sub_1C01E9268(v7);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v10 = 0xE700000000000000;
    uint64_t v8 = 0x6E776F6E6B6E75;
  }
  if (qword_1EB866C98 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB93C4D0;
  sub_1C151F36C();
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C152C7F0;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1BFE9C558();
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v10;
  uint64_t v15 = sub_1C1515E2C();
  *(void *)(v12 + 96) = v13;
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 72) = v15;
  *(void *)(v12 + 80) = v16;
  uint64_t v19 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v12 + 136) = v13;
  *(void *)(v12 + 144) = v14;
  *(void *)(v12 + 112) = 0;
  *(void *)(v12 + 120) = 0xE000000000000000;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  uint64_t result = sub_1C01E7754(a3);
  if (result)
  {
    sub_1C0FD660C(a3, result, 30);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C05EEA0C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v22 = *v1;
  uint64_t v23 = v1;
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v3;
  uint64_t v25 = a1;
  uint64_t v21 = a1;
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  sub_1C151932C();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v7, a1, v4);
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (v8 + 16) & ~v8;
  uint64_t v18 = v8 | 7;
  uint64_t v19 = v9 + v6;
  uint64_t v10 = swift_allocObject();
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v17(v10 + v9, v7, v4);
  id v11 = (void *)sub_1C1518E7C();
  sub_1C151901C();
  swift_release();
  swift_release();

  v20(v7, v21, v4);
  uint64_t v12 = swift_allocObject();
  v17(v12 + v9, v7, v4);
  uint64_t v13 = (void *)sub_1C1518E7C();
  uint64_t v14 = sub_1C151904C();
  swift_release();
  swift_release();

  return v14;
}

void sub_1C05EEC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151635C();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1C1515FDC();
  uint64_t v43 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  MEMORY[0x1F4188790](v41);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C05F4668(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (os_unfair_lock_s *)((char *)&v37 - v10);
  uint64_t v12 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v46 = (uint64_t)&v37 - v17;
  uint64_t v40 = a2;
  sub_1C1518DCC();
  uint64_t v18 = v49;
  if (!v49) {
    goto LABEL_5;
  }
  uint64_t v38 = v4;
  uint64_t v39 = a1;
  uint64_t v19 = *(void *)(v49 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
  uint64_t v20 = v45;
  sub_1C03C7558((void *)(v19 + 16), &v49);
  uint64_t v45 = v20;
  uint64_t v21 = (os_unfair_lock_s *)(v19 + 24);
  if (v20)
  {
    os_unfair_lock_unlock(v21);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v21);
    uint64_t v22 = v49;
    swift_release();
    sub_1C0295854(v22, (uint64_t)v11);
    swift_bridgeObjectRelease();
    int v23 = (*(uint64_t (**)(os_unfair_lock_s *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    uint64_t v24 = v48;
    if (v23 == 1)
    {
      swift_release();
      sub_1C05F22DC((uint64_t)v11, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_5:
      sub_1C05F2288();
      swift_allocError();
      *uint64_t v25 = 2;
      swift_willThrow();
      return;
    }
    uint64_t v26 = v46;
    sub_1C05F234C((uint64_t)v11, v46, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    sub_1BFED387C(v26, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1BFED60E8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v28 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v47, v40, v24);
    uint64_t v29 = *(void *)(v18 + 16);
    id v11 = (os_unfair_lock_s *)(v29 + 24);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
    uint64_t v30 = v45;
    sub_1C03C7558((void *)(v29 + 16), &v49);
    if (!v30)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
      uint64_t v31 = v49;
      swift_release();
      uint64_t v32 = v42;
      sub_1C151634C();
      uint64_t v33 = sub_1C151633C();
      uint64_t v35 = v34;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v38);
      *(void *)uint64_t v8 = v33;
      *((void *)v8 + 1) = v35;
      v8[16] = EnumCaseMultiPayload == 1;
      uint64_t v36 = v41;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v8[*(int *)(v41 + 24)], v47, v48);
      *(void *)&v8[*(int *)(v36 + 28)] = v31;
      sub_1C05ED6F8((uint64_t)v8);
      swift_release();
      sub_1BFED60E8((uint64_t)v8, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      sub_1BFED60E8(v46, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      return;
    }
  }
  os_unfair_lock_unlock(v11);
  __break(1u);
}

void sub_1C05EF1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1518DCC();
  if (!v14)
  {
LABEL_6:
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    uint64_t v9 = sub_1C1515E2C();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 64) = sub_1BFE9C558();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    uint64_t v12 = (void *)sub_1C151FD3C();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v6 = *(void *)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1C03C7558((void *)(v6 + 16), &v13);
  if (!v3)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
    uint64_t v7 = v13;
    swift_release();
    swift_release();
    if (*(void *)(v7 + 16))
    {
      ((void (*)(void, void, void, void))sub_1C05EF3C4)(a3, v7, (double)*(uint64_t *)(a1 + 16), 0);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  __break(1u);
}

void sub_1C05EF3C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v58 = a4;
  uint64_t v8 = sub_1C151E20C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  if (*(void *)(a2 + 16))
  {
    uint64_t v54 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v55 = v18;
    uint64_t v59 = a1;
    uint64_t v49 = v11;
    uint64_t v50 = v14;
    uint64_t v56 = v4;
    double v57 = *(double *)&a3;
    uint64_t v51 = v9;
    uint64_t v52 = v8;
    if (qword_1EB866C98 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)qword_1EB93C4D0;
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C152C7F0;
    id v21 = v19;
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C01E9268(v22);
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBB1A0];
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v27 = sub_1BFE9C558();
    unint64_t v28 = v27;
    *(void *)(v20 + 32) = v23;
    *(void *)(v20 + 40) = v25;
    uint64_t v29 = MEMORY[0x1E4FBB460];
    *(void *)(v20 + 96) = MEMORY[0x1E4FBB3D0];
    *(void *)(v20 + 104) = v29;
    BOOL v30 = (v58 & 1) == 0;
    v58 &= 1u;
    double v31 = v57;
    if (!v30) {
      double v31 = 0.0;
    }
    *(void *)(v20 + 64) = v27;
    *(double *)(v20 + 72) = v31;
    uint64_t v32 = v59;
    uint64_t v33 = sub_1C1515E2C();
    *(void *)(v20 + 136) = v26;
    *(void *)(v20 + 144) = v28;
    *(void *)(v20 + 112) = v33;
    *(void *)(v20 + 120) = v34;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v36 = v54;
    uint64_t v37 = v32;
    uint64_t v38 = v55;
    v53(v54, v37, v55);
    unint64_t v39 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v35;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v40 + v39, v36, v38);
    aBlock[4] = sub_1C05F426C;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_29;
    uint64_t v41 = _Block_copy(aBlock);
    type metadata accessor for WebEmbedDataSourceWorkItem();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v42 = sub_1C1394C74(a2, v41);
    _Block_release(v41);
    swift_release();
    swift_release();
    v53(v36, v59, v38);
    aBlock[0] = v42;
    swift_retain();
    sub_1C1518DDC();
    if (v58)
    {
      swift_retain();
      sub_1C151F59C();
      swift_release();
    }
    else
    {
      double v43 = v57;
      uint64_t v44 = v49;
      sub_1C151E1FC();
      uint64_t v45 = v50;
      MEMORY[0x1C18C5D90](v44, v43);
      uint64_t v46 = *(void (**)(char *, uint64_t))(v51 + 8);
      uint64_t v47 = v44;
      uint64_t v48 = v52;
      v46(v47, v52);
      sub_1C151F54C();
      v46(v45, v48);
    }
    swift_release();
  }
}

void sub_1C05EF8A8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C1518DCC();
  if (v14)
  {
    uint64_t v5 = *(void *)(v14 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    sub_1C03C7558((void *)(v5 + 16), &v13);
    os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
    uint64_t v6 = v13;
    swift_release();
    swift_release();
    if (*(void *)(v6 + 16))
    {
      double v7 = sub_1C05F44B4(a1, 30);
      sub_1C05EF3C4(a3, v6, *(void *)&v7, 0);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  uint64_t v9 = sub_1C1515E2C();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1BFE9C558();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
  uint64_t v12 = (void *)sub_1C151FD3C();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C05EFA68(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C05EEA0C(a2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C05EFAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  sub_1BFED387C(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 56);
  if (!*(void *)(v7 + 16) || (unint64_t v8 = sub_1C1052524((uint64_t)v6), (v9 & 1) == 0))
  {
    swift_endAccess();
    return sub_1BFED60E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  }
  unint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  swift_endAccess();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1BFED60E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v12 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v13 = 0;
  unint64_t v14 = v10 & 0xC000000000000001;
  unint64_t v23 = v10 & 0xC000000000000001;
  do
  {
    if (v14)
    {
      uint64_t v15 = MEMORY[0x1C18C7CB0](v13, v10);
    }
    else
    {
      uint64_t v15 = *(void *)(v10 + 8 * v13 + 32);
      swift_retain();
    }
    uint64_t v16 = MEMORY[0x1C18C9C60](v15 + 16);
    swift_unknownObjectRelease();
    if (v16)
    {
      uint64_t v25[3] = type metadata accessor for WebEmbedDataSourceManager();
      v25[4] = &off_1F1BAC8E8;
      v25[0] = a1;
      if (MEMORY[0x1C18C9C60](v15 + 16))
      {
        unint64_t v17 = v10;
        uint64_t v18 = *(void *)(v15 + 24);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v20 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
        swift_retain_n();
        uint64_t v21 = v18;
        unint64_t v10 = v17;
        unint64_t v14 = v23;
        v20(v25, v24, v24, ObjectType, v21);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      swift_release();
    }
    swift_release();
    ++v13;
  }
  while (v12 != v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C05EFD60(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1520DBC();
  sub_1BFED387C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C05F234C((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    sub_1C151E77C();
    sub_1BFED60E8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    uint64_t v15 = *v12;
    SportsDataVisualization.identifier.getter();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_1C1520E0C();
  unint64_t v13 = sub_1C151FFDC();
  *(void *)((char *)a3 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v13;
  uint64_t result = sub_1C05F234C(a1, a3[6] + *(void *)(v10 + 72) * v13, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  *(void *)(a3[7] + 8 * v13) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1C05EFFAC(char a1, uint64_t a2, char a3, void *a4)
{
  sub_1C1520DBC();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  sub_1C1520E0C();
  unint64_t result = sub_1C151FFDC();
  *(void *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a1;
  uint64_t v9 = a4[7] + 16 * result;
  *(void *)uint64_t v9 = a2;
  *(unsigned char *)(v9 + 8) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_1C05F0148(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v26 - v13;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_1C05F40BC();
  uint64_t result = sub_1C152050C();
  uint64_t v16 = (void *)result;
  unint64_t v27 = a1;
  if (a2 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *a1;
  }
  uint64_t v18 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v18 << 6);
    }
    else
    {
      uint64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_30;
      }
      if (v21 >= a2) {
        return (uint64_t)v16;
      }
      unint64_t v22 = v27[v21];
      ++v18;
      if (!v22)
      {
        uint64_t v18 = v21 + 1;
        if (v21 + 1 >= a2) {
          return (uint64_t)v16;
        }
        unint64_t v22 = v27[v18];
        if (!v22)
        {
          uint64_t v18 = v21 + 2;
          if (v21 + 2 >= a2) {
            return (uint64_t)v16;
          }
          unint64_t v22 = v27[v18];
          if (!v22)
          {
            uint64_t v23 = v21 + 3;
            if (v23 >= a2) {
              return (uint64_t)v16;
            }
            unint64_t v22 = v27[v23];
            if (!v22)
            {
              while (1)
              {
                uint64_t v18 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_31;
                }
                if (v18 >= a2) {
                  return (uint64_t)v16;
                }
                unint64_t v22 = v27[v18];
                ++v23;
                if (v22) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v18 = v23;
          }
        }
      }
LABEL_24:
      unint64_t v17 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    }
    sub_1BFED387C(a4[6] + *(void *)(v9 + 72) * v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v24 = *(void *)(a4[7] + 8 * v20);
    sub_1C05F234C((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    swift_retain();
    uint64_t result = sub_1C05EFD60((uint64_t)v11, v24, v16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      return (uint64_t)v16;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C05F03C0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v40 = a1;
  uint64_t v7 = type metadata accessor for SharedItem();
  uint64_t v44 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  MEMORY[0x1F4188790](v8);
  double v43 = (char *)&v38 - v10;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v42 = v9;
  sub_1C05F46CC(0, (unint64_t *)&qword_1EA19C468, (void (*)(uint64_t))type metadata accessor for SharedItem);
  uint64_t result = sub_1C152050C();
  uint64_t v12 = result;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *v40;
  }
  uint64_t v14 = 0;
  uint64_t v15 = result + 64;
  uint64_t v16 = v42;
  uint64_t v17 = (uint64_t)v43;
  uint64_t v41 = a4;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v14 << 6);
    }
    else
    {
      uint64_t v20 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v20 >= v39) {
        return v12;
      }
      unint64_t v21 = v40[v20];
      ++v14;
      if (!v21)
      {
        uint64_t v14 = v20 + 1;
        if (v20 + 1 >= v39) {
          return v12;
        }
        unint64_t v21 = v40[v14];
        if (!v21)
        {
          uint64_t v14 = v20 + 2;
          if (v20 + 2 >= v39) {
            return v12;
          }
          unint64_t v21 = v40[v14];
          if (!v21)
          {
            uint64_t v22 = v20 + 3;
            if (v22 >= v39) {
              return v12;
            }
            unint64_t v21 = v40[v22];
            if (!v21)
            {
              while (1)
              {
                uint64_t v14 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v39) {
                  return v12;
                }
                unint64_t v21 = v40[v14];
                ++v22;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v22;
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v14 << 6);
    }
    uint64_t v23 = a4[7];
    uint64_t v24 = (uint64_t *)(a4[6] + 16 * v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void *)(v44 + 72);
    sub_1BFED387C(v23 + v27 * v19, v17, (uint64_t (*)(void))type metadata accessor for SharedItem);
    sub_1C05F234C(v17, v16, (uint64_t (*)(void))type metadata accessor for SharedItem);
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v16 = v42;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      uint64_t v16 = v42;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t v36 = (void *)(*(void *)(v12 + 48) + 16 * v31);
    *uint64_t v36 = v25;
    v36[1] = v26;
    uint64_t result = sub_1C05F234C(v16, *(void *)(v12 + 56) + v31 * v27, (uint64_t (*)(void))type metadata accessor for SharedItem);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v41;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C05F078C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1C1520A9C() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1C1520A9C() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BFF009B0();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1C05F15FC(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C05F091C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C1520DAC();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C02C6754();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_1C05F17C4(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C05F0A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = *v2;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C0F9A008((uint64_t)v24);
  uint64_t v10 = sub_1C1520E0C();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1BFED387C(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      char v15 = sub_1C0F9C380((uint64_t)v8, a1);
      sub_1BFED60E8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    BOOL v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    v24[0] = *v17;
    *BOOL v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C02C756C();
      uint64_t v19 = v24[0];
    }
    a2 = v22;
    sub_1C05F234C(*(void *)(v19 + 48) + v14 * v12, v22, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1C05F194C(v12);
    *BOOL v17 = v24[0];
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1C05F0C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v4 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v41 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v38 - v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x1F4188790](v15);
  BOOL v17 = (uint64_t *)((char *)&v38 - v16);
  uint64_t v18 = *v2;
  sub_1C1520DBC();
  uint64_t v48 = a1;
  sub_1BFED387C(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v39 = v2;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C05F234C((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    sub_1BFED60E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    uint64_t v49 = *v17;
    swift_bridgeObjectRetain();
    SportsDataVisualization.identifier.getter();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v20 = sub_1C1520E0C();
  uint64_t v21 = -1 << *(unsigned char *)(v18 + 32);
  unint64_t v22 = v20 & ~v21;
  uint64_t v44 = v18 + 56;
  if (((*(void *)(v18 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v32 = 1;
    uint64_t v33 = v40;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v33, v32, 1, v7);
  }
  uint64_t v42 = ~v21;
  uint64_t v45 = *(void *)(v41 + 72);
  uint64_t v46 = v18;
  while (1)
  {
    unint64_t v23 = v45 * v22;
    sub_1BFED387C(*(void *)(v18 + 48) + v45 * v22, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    sub_1BFED387C((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    int v24 = swift_getEnumCaseMultiPayload();
    unint64_t v43 = v23;
    if (v24 == 1)
    {
      sub_1C05F234C((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      uint64_t v50 = 0x3A636972656E6567;
      unint64_t v51 = 0xE90000000000003ALL;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v26 = v50;
      unint64_t v25 = v51;
      sub_1BFED60E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      uint64_t v49 = *v11;
      uint64_t v50 = 0x3A3A7374726F7073;
      unint64_t v51 = 0xE800000000000000;
      SportsDataVisualization.identifier.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v26 = v50;
      unint64_t v25 = v51;
    }
    uint64_t v27 = v47;
    sub_1BFED387C(v48, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v28 = v7;
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_1C05F234C((uint64_t)v27, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    uint64_t v50 = 0x3A636972656E6567;
    unint64_t v51 = 0xE90000000000003ALL;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v30 = v50;
    unint64_t v29 = v51;
    sub_1BFED60E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    if (v26 == v30) {
      goto LABEL_13;
    }
LABEL_14:
    char v31 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFED60E8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v7 = v28;
    if (v31) {
      goto LABEL_18;
    }
    unint64_t v22 = (v22 + 1) & v42;
    uint64_t v18 = v46;
    if (((*(void *)(v44 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v49 = *v27;
  uint64_t v50 = 0x3A3A7374726F7073;
  unint64_t v51 = 0xE800000000000000;
  SportsDataVisualization.identifier.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v29 = v51;
  if (v26 != v50) {
    goto LABEL_14;
  }
LABEL_13:
  if (v25 != v29) {
    goto LABEL_14;
  }
  swift_bridgeObjectRelease_n();
  sub_1BFED60E8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v7 = v28;
LABEL_18:
  swift_bridgeObjectRelease();
  BOOL v34 = v39;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v36 = *v34;
  uint64_t v50 = *v34;
  *BOOL v34 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1C02C75C0();
    uint64_t v36 = v50;
  }
  uint64_t v33 = v40;
  sub_1C05F234C(*(void *)(v36 + 48) + v43, v40, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C05F1BEC(v22);
  *BOOL v34 = v50;
  swift_bridgeObjectRelease();
  uint64_t v32 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v33, v32, 1, v7);
}

uint64_t sub_1C05F12C8@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C044FF80();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_27:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = 7;
    return result;
  }
  uint64_t v10 = ~v8;
  while (2)
  {
    unint64_t v11 = 0xE600000000000000;
    uint64_t v12 = 0x74756F79616CLL;
    switch(*(unsigned char *)(*(void *)(v6 + 48) + v9))
    {
      case 1:
        uint64_t v12 = 0x726564616568;
        break;
      case 2:
        uint64_t v12 = 0x7265746F6F66;
        break;
      case 3:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x6C6C6177796170;
        break;
      case 4:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x656D656874;
        break;
      case 5:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x7972617262696CLL;
        break;
      case 6:
        uint64_t v12 = 0x756F72676B636162;
        unint64_t v11 = 0xEA0000000000646ELL;
        break;
      default:
        break;
    }
    unint64_t v13 = 0xE600000000000000;
    uint64_t v14 = 0x74756F79616CLL;
    switch(a1)
    {
      case 1:
        uint64_t v15 = 1684104552;
        goto LABEL_13;
      case 2:
        uint64_t v15 = 1953460070;
LABEL_13:
        if (v12 != (v15 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
          goto LABEL_22;
        }
        goto LABEL_21;
      case 3:
        unint64_t v13 = 0xE700000000000000;
        if (v12 != 0x6C6C6177796170) {
          goto LABEL_22;
        }
        goto LABEL_21;
      case 4:
        unint64_t v13 = 0xE500000000000000;
        if (v12 != 0x656D656874) {
          goto LABEL_22;
        }
        goto LABEL_21;
      case 5:
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x7972617262696CLL;
        goto LABEL_20;
      case 6:
        unint64_t v13 = 0xEA0000000000646ELL;
        if (v12 != 0x756F72676B636162) {
          goto LABEL_22;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (v12 != v14) {
          goto LABEL_22;
        }
LABEL_21:
        if (v11 != v13)
        {
LABEL_22:
          char v16 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_29;
          }
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_27;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_29:
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = *v3;
        uint64_t v20 = *v3;
        *uint64_t v3 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C02C7BF8();
          uint64_t v19 = v20;
        }
        *a2 = *(unsigned char *)(*(void *)(v19 + 48) + v9);
        sub_1C05F1FD0(v9);
        *uint64_t v3 = v20;
        return swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1C05F15FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v10 = sub_1C1520E0C();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *unint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1C05F17C4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_1C1520DAC() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1C05F194C(unint64_t a1)
{
  uint64_t v25 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v3 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = *v1 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    int v24 = v1;
    uint64_t v10 = ~v8;
    swift_retain();
    uint64_t v11 = sub_1C151FFCC();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      uint64_t v12 = v3;
      unint64_t v13 = (v11 + 1) & v10;
      uint64_t v14 = *(void *)(v12 + 72);
      while (1)
      {
        int64_t v15 = v14 * v9;
        sub_1BFED387C(*(void *)(v6 + 48) + v14 * v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
        sub_1C1520DBC();
        sub_1C0F9A008((uint64_t)v26);
        uint64_t v16 = sub_1C1520E0C();
        sub_1BFED60E8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
        unint64_t v17 = v16 & v10;
        if ((uint64_t)a1 >= (uint64_t)v13) {
          break;
        }
        if (v17 < v13) {
          goto LABEL_11;
        }
LABEL_12:
        unint64_t v18 = v14 * a1;
        if ((uint64_t)(v14 * a1) < v15 || *(void *)(v6 + 48) + v14 * a1 >= *(void *)(v6 + 48) + v15 + v14)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v18 == v15) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        unint64_t v9 = (v9 + 1) & v10;
        if (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v17 < v13) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v17) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_16:
    *(void *)(v7 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    uint64_t v1 = v24;
  }
  else
  {
    *(void *)(v7 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v19 = *v1;
  uint64_t v20 = *(void *)(*v1 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v19 + 16) = v22;
    ++*(_DWORD *)(v19 + 36);
  }
}

void sub_1C05F1BEC(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v33);
  uint64_t v6 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = *v1;
  uint64_t v12 = *v1 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v30 = v8;
    char v31 = v1;
    uint64_t v15 = ~v13;
    swift_retain();
    uint64_t v16 = sub_1C151FFCC();
    uint64_t v35 = v12;
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v34 = (v16 + 1) & v15;
      uint64_t v17 = *(void *)(v30 + 72);
      uint64_t v18 = v15;
      while (1)
      {
        uint64_t v19 = v18;
        uint64_t v20 = v17;
        int64_t v21 = v17 * v14;
        sub_1BFED387C(*(void *)(v11 + 48) + v17 * v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1C1520DBC();
        sub_1BFED387C((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v22 = v32;
          sub_1C05F234C((uint64_t)v6, v32, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
          sub_1C151E77C();
          sub_1BFED60E8(v22, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
        }
        else
        {
          uint64_t v36 = *v6;
          SportsDataVisualization.identifier.getter();
          sub_1C151E77C();
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v23 = sub_1C1520E0C();
        sub_1BFED60E8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v18 = v19;
        unint64_t v24 = v23 & v19;
        if ((uint64_t)a1 >= (uint64_t)v34) {
          break;
        }
        uint64_t v17 = v20;
        if (v24 < v34) {
          goto LABEL_14;
        }
LABEL_15:
        unint64_t v25 = v17 * a1;
        if ((uint64_t)(v17 * a1) < v21 || *(void *)(v11 + 48) + v17 * a1 >= *(void *)(v11 + 48) + v21 + v17)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v14;
          if (v25 == v21) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v18 = v19;
        a1 = v14;
LABEL_6:
        unint64_t v14 = (v14 + 1) & v18;
        if (((*(void *)(v35 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_19;
        }
      }
      uint64_t v17 = v20;
      if (v24 < v34) {
        goto LABEL_6;
      }
LABEL_14:
      if ((uint64_t)a1 < (uint64_t)v24) {
        goto LABEL_6;
      }
      goto LABEL_15;
    }
LABEL_19:
    *(void *)(v35 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
}

unint64_t sub_1C05F1FD0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1C1520DBC();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        unint64_t v10 = sub_1C1520E0C() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v2);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x1C05F2234);
  }
  *(void *)(v3 + 16) = v16;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_1C05F2250()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1C05F2288()
{
  unint64_t result = qword_1EB86C048;
  if (!qword_1EB86C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C048);
  }
  return result;
}

uint64_t sub_1C05F22DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C05F4668(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C05F234C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C05F23B4()
{
  unint64_t result = qword_1EA19C440;
  if (!qword_1EA19C440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C440);
  }
  return result;
}

void sub_1C05F2408(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a2;
  uint64_t v60 = sub_1C151631C();
  uint64_t v3 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v54 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v53 = &v47[-v6];
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = &v47[-v8];
  uint64_t v52 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1F4188790](v52);
  unint64_t v51 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C05F4668(0, &qword_1EB8688C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v47[-v12];
  uint64_t v14 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v58 = &v47[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v61 = &v47[-v18];
  sub_1C05F4668(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v10);
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v73 = &v47[-v20];
  uint64_t v21 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v21);
  uint64_t v74 = &v47[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v25 = MEMORY[0x1F4188790](v23);
  unint64_t v75 = &v47[-v26];
  uint64_t v77 = MEMORY[0x1E4FBC860];
  uint64_t v70 = *(void *)(a1 + 16);
  if (v70)
  {
    unint64_t v27 = 0;
    uint64_t v72 = v24 + 56;
    uint64_t v67 = v24 + 48;
    uint64_t v68 = v24 + 16;
    long long v76 = (void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 32);
    uint64_t v64 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v56 = (void (**)(unsigned char *, uint64_t))(v3 + 8);
    uint64_t v49 = (void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v69 = v24;
    uint64_t v48 = (void (**)(unsigned char *, uint64_t))(v24 + 8);
    uint64_t v65 = v14;
    uint64_t v66 = a1;
    uint64_t v28 = (uint64_t)v73;
    double v57 = v13;
    uint64_t v50 = v21;
    while (1)
    {
      if (v27 >= *(void *)(a1 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v29 = v69;
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v31 = *(void *)(v69 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v69 + 16))(v28, a1 + v30 + v31 * v27, v21, v25);
      uint64_t v63 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56);
      v63(v28, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v28, 1, v21) == 1) {
        goto LABEL_20;
      }
      uint64_t v32 = (void (*)(void, void, void))*v76;
      (*v76)(v75, v28, v21);
      sub_1C1518DCC();
      if ((*v64)(v13, 1, v14) == 1) {
        break;
      }
      uint64_t v62 = v32;
      uint64_t v33 = v61;
      sub_1C05F234C((uint64_t)v13, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
      unint64_t v34 = v58;
      sub_1BFED387C((uint64_t)v33, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v35 = *v34 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate;
        uint64_t v36 = v54;
        uint64_t v37 = v60;
        (*v49)(v54, v35, v60);
        uint64_t v38 = v53;
        sub_1C151620C();
        uint64_t v39 = *v56;
        (*v56)(v36, v37);
        uint64_t v40 = v59;
        sub_1C151630C();
        int v55 = sub_1C151622C();
        swift_release();
        v39(v40, v37);
        v39(v38, v37);
        uint64_t v21 = v50;
        uint64_t v14 = v65;
        sub_1BFED60E8((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
        uint64_t v13 = v57;
        uint64_t v32 = v62;
        if (v55) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v41 = v51;
        sub_1C05F234C((uint64_t)v34, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
        uint64_t v42 = v59;
        sub_1C151630C();
        char v43 = sub_1C151622C();
        (*v56)(v42, v60);
        sub_1BFED60E8((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceJson);
        sub_1BFED60E8((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for WebEmbedDataSourceCacheEntry);
        uint64_t v13 = v57;
        uint64_t v32 = v62;
        if (v43) {
          goto LABEL_13;
        }
      }
      (*v48)(v75, v21);
LABEL_4:
      ++v27;
      a1 = v66;
      uint64_t v28 = (uint64_t)v73;
      if (v70 == v27)
      {
        ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))v63)(v73, 1, 1, v21, v25);
        goto LABEL_20;
      }
    }
    sub_1C05F22DC((uint64_t)v13, &qword_1EB8688C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry);
LABEL_13:
    v32(v74, v75, v21);
    uint64_t v44 = v77;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F61F8(0, *(void *)(v44 + 16) + 1, 1);
      uint64_t v44 = v77;
    }
    unint64_t v46 = *(void *)(v44 + 16);
    unint64_t v45 = *(void *)(v44 + 24);
    if (v46 >= v45 >> 1)
    {
      sub_1C05F61F8(v45 > 1, v46 + 1, 1);
      uint64_t v44 = v77;
    }
    *(void *)(v44 + 16) = v46 + 1;
    v32(v44 + v30 + v46 * v31, v74, v21);
    uint64_t v77 = v44;
    uint64_t v14 = v65;
    goto LABEL_4;
  }
  uint64_t v28 = (uint64_t)v73;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v24 + 56))(v73, 1, 1, v21, v25);
LABEL_20:
  swift_bridgeObjectRelease();
  sub_1C05F22DC(v28, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C05F2CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  unint64_t v8 = MEMORY[0x1E4FBC860];
  while (1)
  {
    sub_1C05EDD28(v6, a2, &v31);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    uint64_t v9 = v31;
    uint64_t v10 = *(void *)(v31 + 16);
    int64_t v11 = *(void *)(v8 + 16);
    int64_t v12 = v11 + v10;
    if (__OFADD__(v11, v10)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v12 <= *(void *)(v8 + 24) >> 1)
    {
      if (*(void *)(v9 + 16)) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= v12) {
        int64_t v14 = v11 + v10;
      }
      else {
        int64_t v14 = v11;
      }
      unint64_t v8 = sub_1C0EE0510(isUniquelyReferenced_nonNull_native, v14, 1, v8);
      if (*(void *)(v9 + 16))
      {
LABEL_15:
        uint64_t v15 = *(void *)(v8 + 16);
        uint64_t v16 = (*(void *)(v8 + 24) >> 1) - v15;
        uint64_t v17 = *(void *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
        uint64_t v18 = *(void *)(v17 + 72);
        if (v16 < v10) {
          goto LABEL_30;
        }
        unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
        unint64_t v20 = v8 + v19 + v18 * v15;
        unint64_t v21 = v9 + v19;
        uint64_t v22 = v18 * v10;
        unint64_t v23 = v20 + v22;
        unint64_t v24 = v21 + v22;
        if (v21 < v23 && v20 < v24) {
          goto LABEL_32;
        }
        swift_arrayInitWithCopy();
        if (v10)
        {
          uint64_t v26 = *(void *)(v8 + 16);
          BOOL v27 = __OFADD__(v26, v10);
          uint64_t v28 = v26 + v10;
          if (v27) {
            goto LABEL_31;
          }
          *(void *)(v8 + 16) = v28;
        }
        goto LABEL_4;
      }
    }
    if (v10) {
      goto LABEL_29;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v6 += v7;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F2F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = *(void *)(v5 + 72);
  sub_1C05F4668(0, &qword_1EB86BB70, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBBE00]);
  unint64_t v34 = v6;
  uint64_t v33 = v8;
  swift_bridgeObjectRetain();
  unint64_t v9 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    sub_1BFED387C(v7, v10 + v34, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v11 = sub_1C10137B8();
    sub_1BFDDFF34(v11);
    swift_retain();
    uint64_t v12 = sub_1C05F2CAC(v10, a2);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v13 = *(void *)(v12 + 16);
    int64_t v14 = *(void *)(v9 + 16);
    int64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= *(void *)(v9 + 24) >> 1)
    {
      if (*(void *)(v12 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v14 <= v15) {
        int64_t v17 = v14 + v13;
      }
      else {
        int64_t v17 = v14;
      }
      unint64_t v9 = sub_1C0EE0510(isUniquelyReferenced_nonNull_native, v17, 1, v9);
      if (*(void *)(v12 + 16))
      {
LABEL_14:
        uint64_t v18 = *(void *)(v9 + 16);
        uint64_t v19 = (*(void *)(v9 + 24) >> 1) - v18;
        uint64_t v20 = *(void *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
        uint64_t v21 = *(void *)(v20 + 72);
        if (v19 < v13) {
          goto LABEL_28;
        }
        unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
        unint64_t v23 = v9 + v22 + v21 * v18;
        unint64_t v24 = v12 + v22;
        uint64_t v25 = v21 * v13;
        unint64_t v26 = v23 + v25;
        unint64_t v27 = v24 + v25;
        if (v24 < v26 && v23 < v27) {
          goto LABEL_30;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v29 = *(void *)(v9 + 16);
          BOOL v30 = __OFADD__(v29, v13);
          uint64_t v31 = v29 + v13;
          if (v30) {
            goto LABEL_29;
          }
          *(void *)(v9 + 16) = v31;
        }
        goto LABEL_4;
      }
    }
    if (v13) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v7 += v33;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

unint64_t sub_1C05F327C()
{
  unint64_t result = qword_1EB86DDD0;
  if (!qword_1EB86DDD0)
  {
    sub_1C05F4668(255, &qword_1EB86DDC8, type metadata accessor for WebEmbedDataVisualizationDataRequest, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86DDD0);
  }
  return result;
}

uint64_t sub_1C05F3304(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C05F334C()
{
  return sub_1C05ED668(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C05F3368()
{
  if (!qword_1EB86B350)
  {
    sub_1BFD43E2C(255, &qword_1EB85DF70, MEMORY[0x1E4FBB320]);
    sub_1BFEE7F14(255, (unint64_t *)&qword_1EB879FD0, (unint64_t *)&qword_1EB87A930, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86B350);
    }
  }
}

uint64_t sub_1C05F3424()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C05F345C()
{
  return sub_1C05EDCA4();
}

uint64_t sub_1C05F3478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0FD9D1C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C05F3480(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v36 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  uint64_t v4 = *(void *)(v36 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v6)
  {
    v28[0] = v2;
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v9 = a1 + ((v8 + 32) & ~v8);
    if (qword_1EB866C98 != -1) {
      swift_once();
    }
    uint64_t v34 = *(void *)(v4 + 72);
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v32 = (v8 + 16) & ~v8;
    uint64_t v33 = v10;
    uint64_t v31 = v32 + v5;
    uint64_t v30 = v8 | 7;
    long long v29 = xmmword_1C1529AE0;
    v28[1] = MEMORY[0x1E4FBC848] + 8;
    do
    {
      uint64_t v11 = (void *)qword_1EB93C4D0;
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = v29;
      id v13 = v11;
      uint64_t v14 = sub_1C1515E2C();
      uint64_t v16 = v15;
      *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v12 + 64) = sub_1BFE9C558();
      *(void *)(v12 + 32) = v14;
      *(void *)(v12 + 40) = v16;
      sub_1C151F38C();
      sub_1C15197BC();

      uint64_t v17 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v17);
      v28[-2] = v37;
      v28[-1] = v9;
      type metadata accessor for WebEmbedDataVisualizationDataResult(0);
      sub_1C151932C();
      uint64_t v18 = v9;
      uint64_t v40 = v9;
      uint64_t v19 = v35;
      sub_1BFED387C(v18, v35, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      uint64_t v20 = swift_allocObject();
      uint64_t v39 = v6;
      uint64_t v21 = v32;
      sub_1C05F234C(v19, v20 + v32, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      unint64_t v22 = (void *)sub_1C1518E7C();
      uint64_t v38 = sub_1C1518FFC();
      swift_release();
      swift_release();

      sub_1BFED387C(v40, v19, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      uint64_t v23 = swift_allocObject() + v21;
      uint64_t v24 = v19;
      uint64_t v25 = v39;
      uint64_t v26 = v40;
      sub_1C05F234C(v24, v23, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      unint64_t v27 = (void *)sub_1C1518E7C();
      sub_1C151903C();
      swift_release();

      swift_release();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      uint64_t v9 = v26 + v34;
      uint64_t v6 = v25 - 1;
    }
    while (v6);
    return v41;
  }
  return result;
}

uint64_t sub_1C05F3898()
{
  return sub_1C05ED6F8(*(void *)(v0 + 24));
}

uint64_t sub_1C05F38C4()
{
  return sub_1C05ED9D8();
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C05F3A44()
{
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  return sub_1C05EDB0C();
}

uint64_t sub_1C05F3AB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v3 = (uint64_t (*)(uint64_t))off_1F1B92578;
  type metadata accessor for WebEmbedDataVisualizationDataService(0);
  return v3(v2);
}

void sub_1C05F3B34(char *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1C05F3BBC(uint64_t a1, uint64_t a2)
{
  return sub_1C05F4420(a1, a2, sub_1C05EE7A4);
}

void sub_1C05F3BD4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C05EE168(a1, *(void *)(v2 + 24), a2);
}

void sub_1C05F3BF4()
{
  if (!qword_1EA19C448)
  {
    type metadata accessor for WebEmbedDatastoreCacheKey();
    sub_1C05F4668(255, &qword_1EB8900E0, (uint64_t (*)(uint64_t))type metadata accessor for WeakWebEmbedDataSourceManagerObserver, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19C448);
    }
  }
}

uint64_t sub_1C05F3C98(uint64_t a1)
{
  return sub_1C04531C4(a1, *(void *)(v1 + 16));
}

void sub_1C05F3CA0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v22 = a2;
  unint64_t v27 = a4;
  uint64_t v23 = a1;
  uint64_t v5 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v24 = 0;
  uint64_t v25 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v26) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_1BFED387C(*(void *)(a3 + 48) + *(void *)(v6 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v16 = *(void *)(*(void *)(a3 + 56) + 8 * v15);
    swift_retain();
    char v17 = v27(v8, v16);
    swift_release();
    sub_1BFED60E8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (v17)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1C05F0148(v23, v22, v24, (void *)a3);
        return;
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v26) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v26) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1C05F3F44(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1C05F3CA0((void *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_1C05F3CA0((unint64_t *)v11, v8, v6, a2);
    a3 = v12;
    MEMORY[0x1C18C9B00](v11, -1, -1);
  }
  return a3;
}

void sub_1C05F40BC()
{
  if (!qword_1EA19C458)
  {
    type metadata accessor for WebEmbedDataVisualization();
    type metadata accessor for WebEmbedDatastore();
    sub_1C05F3304(&qword_1EB867CA0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C458);
    }
  }
}

uint64_t sub_1C05F4168()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C05F41A0()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C05F426C()
{
  uint64_t v1 = *(void *)(sub_1C1515FDC() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C05EFA68(v2, v3);
}

void sub_1C05F42D0()
{
  sub_1C05EEC7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C05F42F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C1515FDC() - 8);
  sub_1C05EF1EC(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v1 = sub_1C1515FDC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C05F4408(uint64_t a1, uint64_t a2)
{
  return sub_1C05F4420(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C05EF8A8);
}

uint64_t sub_1C05F4420(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_1C1515FDC() - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a3(a1, a2, v7);
}

double sub_1C05F44B4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  id v7 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!v6[8]) {
        a2 = *(void *)v6;
      }
    }
    else
    {
      sub_1BFED60E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
    }
  }

  return (double)a2;
}

void sub_1C05F45D0()
{
  if (!qword_1EB880E50)
  {
    sub_1C05F4668(255, (unint64_t *)&qword_1EB880DC0, (uint64_t (*)(uint64_t))sub_1C0063AD8, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880E50);
    }
  }
}

void sub_1C05F4668(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C05F46CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C152051C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C05F4730()
{
  if (!qword_1EA19C470)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C470);
    }
  }
}

uint64_t sub_1C05F47A0(uint64_t a1)
{
  uint64_t v1 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  char v17 = (void *)MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_7;
  }
LABEL_4:
  for (v4 &= v4 - 1; ; uint64_t v4 = (v10 - 1) & v10)
  {
    sub_1BFF27ECC();
    swift_bridgeObjectRetain();
    unint64_t v8 = (void *)sub_1C151FE4C();
    if (v8[2] == 2)
    {
      uint64_t v16 = v8[6];
      uint64_t v12 = v8[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1BFEF9B68(0, v17[2] + 1, 1, v17);
        char v17 = (void *)result;
      }
      unint64_t v14 = v17[2];
      unint64_t v13 = v17[3];
      if (v14 >= v13 >> 1)
      {
        uint64_t result = (uint64_t)sub_1BFEF9B68((void *)(v13 > 1), v14 + 1, 1, v17);
        char v17 = (void *)result;
      }
      void v17[2] = v14 + 1;
      unint64_t v15 = &v17[2 * v14];
      v15[4] = v16;
      v15[5] = v12;
      if (v4) {
        goto LABEL_4;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v5) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_29;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_29;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_29;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v17;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C05F4A34(unint64_t *a1, void *a2, void *a3)
{
  unint64_t v5 = *a1;
  sub_1C05F54C4(0);
  swift_retain();
  swift_retain();
  sub_1C05F54F8(v5, a2, a3);
  swift_release();
  swift_release();
  uint64_t v6 = (void *)sub_1C1518E7C();
  sub_1C05F5808(0);
  sub_1C05F587C(&qword_1EA19C490, sub_1C05F5808);
  uint64_t v7 = sub_1C1518FAC();
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t sub_1C05F4B40(void *a1, uint64_t a2)
{
  v17[1] = a2;
  uint64_t v3 = sub_1C151D8BC();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  MEMORY[0x1F4188790](v3);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151D4FC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151D51C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F7AC48], v6);
  sub_1C151D50C();
  sub_1C05F587C(&qword_1EB871730, MEMORY[0x1E4F7AC60]);
  sub_1C151D7EC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unknownObjectRetain();
  uint64_t v14 = v17[0];
  sub_1C151D8AC();
  sub_1C05F587C(&qword_1EA19C498, MEMORY[0x1E4F7AEB8]);
  uint64_t v15 = v18;
  sub_1C151D7EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v14, v15);
}

uint64_t sub_1C05F4E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_1C151829C();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v30 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151D6DC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - v10;
  sub_1BFFB5314(0, (unint64_t *)&unk_1EB8812B0, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FAB160]);
  __n128 v13 = MEMORY[0x1F4188790](v12 - 8);
  unint64_t v27 = (char *)&v24 - v14;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v15(v11, a1, v5, v13);
  ((void (*)(char *, char *, uint64_t))v15)(v8, v11, v5);
  uint64_t v25 = sub_1C151D63C();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C151D66C();
  uint64_t v20 = v19;
  int64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v8, v5);
  ((void (*)(char *, char *, uint64_t))v15)(v8, v11, v5);
  if (qword_1EB862940 != -1) {
    swift_once();
  }
  uint64_t v21 = v29;
  uint64_t v22 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB861180);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v30, v22, v21);
  sub_1C05F52A8(v25, v17, v18, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151945C();
  v26(v11, v5);
  return sub_1C151807C();
}

uint64_t sub_1C05F5170(uint64_t a1)
{
  sub_1C05F47A0(a1);
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1BFFB5314(0, (unint64_t *)&qword_1EB879F90, (uint64_t (*)(uint64_t))sub_1BFFB52BC, MEMORY[0x1E4FBB320]);
  sub_1C151932C();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1BFFB5314(0, &qword_1EB85C2F8, MEMORY[0x1E4FAA920], v1);
  uint64_t v3 = sub_1C151900C();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_1C05F52A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF661B8(0, 2, 0);
  uint64_t v8 = v17;
  unint64_t v10 = *(void *)(v17 + 16);
  unint64_t v9 = *(void *)(v17 + 24);
  unint64_t v11 = v10 + 1;
  swift_bridgeObjectRetain();
  if (v10 >= v9 >> 1)
  {
    sub_1BFF661B8(v9 > 1, v10 + 1, 1);
    uint64_t v8 = v17;
  }
  *(void *)(v8 + 16) = v11;
  uint64_t v12 = v8 + 16 * v10;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  unint64_t v13 = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  if (v11 >= v13 >> 1)
  {
    sub_1BFF661B8(v13 > 1, v10 + 2, 1);
    uint64_t v8 = v17;
  }
  *(void *)(v8 + 16) = v10 + 2;
  uint64_t v14 = v8 + 16 * v11;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFED9C20();
  sub_1C05F587C((unint64_t *)&qword_1EB879F30, (void (*)(uint64_t))sub_1BFED9C20);
  uint64_t v15 = sub_1C151E55C();
  swift_release();
  return v15;
}

uint64_t sub_1C05F5434()
{
  return sub_1C05F52A8(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C05F5440()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v4);
}

uint64_t sub_1C05F54A8(unint64_t *a1, void *a2)
{
  return sub_1C05F4A34(a1, a2, v2);
}

void sub_1C05F54C4(uint64_t a1)
{
}

uint64_t sub_1C05F54F8(unint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v29 = a3;
  uint64_t v30 = a2;
  uint64_t v28 = *a3;
  uint64_t v27 = sub_1C151635C();
  uint64_t v6 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  int64_t v26 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v8) {
      break;
    }
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C152028C();
    if (v8 < 0)
    {
      __break(1u);
      return result;
    }
    v20[1] = v4;
    uint64_t v4 = 0;
    uint64_t v22 = v30 + 2;
    unint64_t v23 = a1 & 0xC000000000000001;
    uint64_t v21 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v24 = v8;
    unint64_t v25 = a1;
    while (v8 != v4)
    {
      if (v23)
      {
        uint64_t v10 = MEMORY[0x1C18C7CB0](v4, a1);
      }
      else
      {
        uint64_t v10 = *(void *)(a1 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      ++v4;
      uint64_t v12 = v30[5];
      uint64_t v11 = v30[6];
      __swift_project_boxed_opaque_existential_1(v22, v12);
      unint64_t v13 = v26;
      sub_1C151634C();
      uint64_t v14 = sub_1C151633C();
      uint64_t v16 = v15;
      (*v21)(v13, v27);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v10;
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v11 + 8);
      swift_unknownObjectRetain();
      v18(v14, v16, sub_1C05F5874, v17, v12, v11);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v19 = (void *)sub_1C1518E7C();
      sub_1C151808C();
      sub_1C151901C();
      swift_unknownObjectRelease();
      swift_release();

      sub_1C152025C();
      uint64_t v6 = *(void *)(v31 + 16);
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      uint64_t v8 = v24;
      a1 = v25;
      if (v24 == v4) {
        return v31;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C05F5808(uint64_t a1)
{
}

uint64_t sub_1C05F583C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C05F5874(void *a1)
{
  return sub_1C05F4B40(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C05F587C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedSponsorshipAdReference()
{
  return &type metadata for FeedSponsorshipAdReference;
}

uint64_t sub_1C05F58D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPatternMode.init(from:)(a1, a2);
}

uint64_t sub_1C05F58F0(void *a1)
{
  return FormatPatternMode.encode(to:)(a1);
}

uint64_t _s8NewsFeed17FormatPatternModeO2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((v2 & 0x80000000) == 0)
  {
    if ((v3 & 0x80000000) == 0)
    {
      return sub_1C1489860(v2, v3);
    }
    return 0;
  }
  if ((v3 & 0x80000000) == 0) {
    return 0;
  }
  BOOL v5 = (v2 & 1) == 0;
  if (v2) {
    uint64_t v6 = 0x6F546D6F74746F62;
  }
  else {
    uint64_t v6 = 0x746F426F54706F74;
  }
  if (v5) {
    unint64_t v7 = 0xEB000000006D6F74;
  }
  else {
    unint64_t v7 = 0xEB00000000706F54;
  }
  if (v3) {
    uint64_t v8 = 0x6F546D6F74746F62;
  }
  else {
    uint64_t v8 = 0x746F426F54706F74;
  }
  if (v3) {
    unint64_t v9 = 0xEB00000000706F54;
  }
  else {
    unint64_t v9 = 0xEB000000006D6F74;
  }
  if (v6 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v11 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11 & 1;
  }
}

unint64_t sub_1C05F5A04(uint64_t a1)
{
  unint64_t result = sub_1C05F5A2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C05F5A2C()
{
  unint64_t result = qword_1EA19C4A0;
  if (!qword_1EA19C4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C4A0);
  }
  return result;
}

unint64_t sub_1C05F5A80(void *a1)
{
  a1[1] = sub_1C05F5AB8();
  a1[2] = sub_1C05F5B0C();
  unint64_t result = sub_1C05F5B60();
  a1[3] = result;
  return result;
}

unint64_t sub_1C05F5AB8()
{
  unint64_t result = qword_1EB85D278;
  if (!qword_1EB85D278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D278);
  }
  return result;
}

unint64_t sub_1C05F5B0C()
{
  unint64_t result = qword_1EB85B968;
  if (!qword_1EB85B968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B968);
  }
  return result;
}

unint64_t sub_1C05F5B60()
{
  unint64_t result = qword_1EA19C4A8;
  if (!qword_1EA19C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C4A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatPatternMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 225 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 225) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1E)
  {
    unsigned int v6 = ((a2 - 31) >> 8) + 1;
    *unint64_t result = a2 - 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C05F5C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternMode()
{
  return &type metadata for FormatPatternMode;
}

uint64_t FeedAppConfigManager.__allocating_init(appConfigManager:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  type metadata accessor for FormatFeedConfigManager();
  swift_allocObject();
  *(void *)(v2 + 24) = sub_1C01A923C();
  return v2;
}

uint64_t sub_1C05F5D28@<X0>(void *a1@<X8>)
{
  return FeedAppConfigManagerType.feedEditionConfig.getter(a1);
}

uint64_t FeedAppConfigManagerType.feedEditionConfig.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB8815C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = unk_1EB885C20;
  *a1 = qword_1EB885C18;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedAppConfigManager.init(appConfigManager:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for FormatFeedConfigManager();
  swift_allocObject();
  *(void *)(v1 + 24) = sub_1C01A923C();
  return v1;
}

id FeedAppConfigManager.timesOfDayConfiguration.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_timesOfDayConfiguration))
  {
    id v2 = objc_msgSend(v1, sel_timesOfDayConfiguration);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v2;
}

double FeedAppConfigManager.feedEditionConfig.getter@<D0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  FCNewsAppConfigurationManager.todayFeedEditionConfig.getter(&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t FeedAppConfigManager.formatFeedConfig.getter@<X0>(void *a1@<X8>)
{
  sub_1C01A8EBC(objc_msgSend(*(id *)(v1 + 16), sel_possiblyUnfetchedAppConfiguration), a1);
  return swift_unknownObjectRelease();
}

unint64_t FeedAppConfigManager.puzzleRanksByPuzzleTypeID.getter()
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + 16), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_puzzleRanksByPuzzleTypeID);

  if (v2)
  {
    sub_1BFEE02A4();
    uint64_t v3 = sub_1C151E33C();

    return v3;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    return sub_1C018EF9C(v5);
  }
}

uint64_t FeedAppConfigManager.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedAppConfigManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C05F6074@<X0>(void *a1@<X8>)
{
  sub_1C01A8EBC(objc_msgSend(*(id *)(*(void *)v1 + 16), sel_possiblyUnfetchedAppConfiguration), a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C05F60D8()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1C05F6138()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t sub_1C05F6164@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *a1 = *(void *)(*(void *)v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C05F61A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C05F61B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605628, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F61F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C060565C, MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6240(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06086E8, type metadata accessor for FormatVersioningModeSelection);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6288(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605B40, MEMORY[0x1E4FAA8E8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F62D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605B74, (uint64_t (*)(void))sub_1C0181BEC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6318(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FDBD8(a1, a2, a3, (void *)*v3, &qword_1EA19C610, (unint64_t *)&unk_1EA19C618, (uint64_t)&type metadata for FormatInspectionGroup);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6350(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE2B8(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C01B2D70, sub_1C01004A4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6398(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605794, (uint64_t (*)(void))type metadata accessor for FormatSection);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F63E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8D8C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6400(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605B0C, (uint64_t (*)(void))sub_1C00BE41C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6448(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8F30(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6468(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F90F0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6488(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F92A0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F64A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F9478(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F64C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F9644(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F64E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06076CC, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6530(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F97C4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6550(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06087B8, type metadata accessor for FormatService.ThemePackage);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6598(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6602C(a1, a2, a3, *v3, &qword_1EB86BB00, (uint64_t)&type metadata for SportsDataVisualization);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F65C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0602344(a1, a2, a3, *v3, &qword_1EB86BEE0, (uint64_t)&type metadata for SportsDataVisualizationRequest);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F65F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF019A4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C060824C, qword_1EB871820);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F663C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C060692C, type metadata accessor for FormatDerivedDataResultOptionReference);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6684(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F99A8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F66A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF8F9CC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F66C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0028FA4, (uint64_t (*)(void))type metadata accessor for FormatOption);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F670C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F9D28(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F672C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF9529C(a1, a2, a3, (void *)*v3, &qword_1EB87A6B8, (uint64_t (*)(uint64_t))sub_1BFF951E4, (void (*)(void))sub_1BFF951E4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F677C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606094, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F67C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F9EC0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F67E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FA094(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6804(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FA220(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6824(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6602C(a1, a2, a3, *v3, (unint64_t *)&unk_1EB860E80, (uint64_t)&type metadata for FormatMenuGroupableData);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6854(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FA3C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6874(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605BA8, type metadata accessor for FormatInspectionItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F68BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06060C8, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6904(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06060FC, (uint64_t (*)(void))type metadata accessor for FormatJson);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F694C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0608218, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6994(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FA5C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F69B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FA754(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F69D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FA8E0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F69F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FAA88(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6A14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0608784, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6A5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605A48, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6AA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FAC5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6AC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FAFB8(a1, a2, a3, *v3, &qword_1EB85E1C8, (uint64_t)&type metadata for LayeredMediaLayerRenderable);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6AF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FAE00(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6B14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFCDA110(a1, a2, a3, *v3, &qword_1EA19C590, (uint64_t)&type metadata for FormatBindResult);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6B44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF019A4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C0605F28, (unint64_t *)&qword_1EA1974E0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6B88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FAFB8(a1, a2, a3, *v3, (unint64_t *)&unk_1EB85E170, (uint64_t)&type metadata for FeedIssue);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6BB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB310(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6BD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB4B8(a1, a2, a3, *v3, (unint64_t *)&qword_1EA19C918, (uint64_t)&type metadata for DebugFormatUploadConfirmItem);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6C08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCC50(a1, a2, a3, *v3, &qword_1EA19C910, (uint64_t)&type metadata for DebugFormatUploadConfirmSection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6C38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB640(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6C58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB7CC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6C78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFE39118(a1, a2, a3, *v3, &qword_1EA19C7E8, (uint64_t)&type metadata for DebugFormatLayoutFeedItem);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6CA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB978(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6CC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFE74F34(a1, a2, a3, *v3, (unint64_t *)&unk_1EA19C5D0, (uint64_t)&type metadata for FormatDerivedDataCompilerMode);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6CF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06059E0, type metadata accessor for SportsDataServiceRequest);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6D40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFE74F34(a1, a2, a3, *v3, &qword_1EB85E190, (uint64_t)&type metadata for IssueCoverTraits);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6D70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C060871C, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6DB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE954(a1, a2, a3, (void *)*v3, &qword_1EA19CA98, &qword_1EA19CAA0, (uint64_t)&type metadata for FeedKind);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6DF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06085D4, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6E38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C060853C, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6E80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FBD1C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6EA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FC06C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6EC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0608360, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6F08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FC400(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6F28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FC750(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6F48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6239C(a1, a2, a3, *v3, (unint64_t *)&unk_1EA19C568, (uint64_t)&type metadata for PuzzleHistoryServiceChange);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F6F78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606960, type metadata accessor for FormatCompilingSlotDefinition);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F6FC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606610, type metadata accessor for FormatPropertyDefinition);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7008(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06065DC, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7050(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C060572C, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7098(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF5CAFC(a1, a2, a3, (void *)*v3, &qword_1EB861B18, (unint64_t *)&unk_1EB8617D0, (uint64_t)&type metadata for FormatAccessibilityData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F70D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FC904(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F70F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605FF8, (uint64_t (*)(void))type metadata accessor for FormatTextLink.Link);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7138(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCAAC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7158(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCC50(a1, a2, a3, *v3, (unint64_t *)&qword_1EA19C720, (uint64_t)&type metadata for DebugInspectionDataSection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7188(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCDF8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F71A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FFEE8(a1, a2, a3, (void *)*v3, &qword_1EA19C788, (uint64_t (*)(uint64_t))sub_1C0606644, sub_1C0606644);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F71F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06066DC, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7240(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCF84(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7260(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FD230(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7280(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FD4DC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F72A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FD788(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F72C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606368, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataWarningError);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7308(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606678, (uint64_t (*)(void))sub_1C06066AC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7350(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606230, (uint64_t (*)(void))type metadata accessor for DebugJournalGroupItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7398(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCC50(a1, a2, a3, *v3, (unint64_t *)&unk_1EA1B09A0, (uint64_t)&type metadata for DebugJournalGroupSection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F73C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF019A4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C06077B4, &qword_1EB8715F0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F740C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FDA34(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F742C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FDBD8(a1, a2, a3, (void *)*v3, &qword_1EA19C5B8, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7464(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FDDA8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7484(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FDF50(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F74A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE104(a1, a2, a3, (void *)*v3, sub_1C0606130, (void (*)(void))sub_1C024AB54);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F74EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE104(a1, a2, a3, (void *)*v3, sub_1C0606164, (void (*)(void))sub_1C024AC58);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7534(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE2B8(a1, a2, a3, (void *)*v3, sub_1C0607A88, (void (*)(void))sub_1C01EE344);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F757C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE468(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F759C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE610(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F75BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605EF4, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7604(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE7B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7624(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE954(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_1EA19C5F0, &qword_1EA19C250, (uint64_t)&type metadata for DebugFormatLocation);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F765C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FE954(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_1EA19C5E0, &qword_1EA19C238, (uint64_t)&type metadata for DebugFormatWeather);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7694(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605760, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F76DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606300, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7724(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF019A4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C00626B4, (unint64_t *)&qword_1EB887280);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7768(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FEBEC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7788(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06057C8, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F77D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C060518C, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7818(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FEE04(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7838(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FF4C4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7858(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FF81C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7878(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06057FC, type metadata accessor for FeedItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F78C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06087EC, type metadata accessor for PluginLayout.Context);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7908(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FFB80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7928(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0604E94(a1, a2, a3, *v3, (unint64_t *)&qword_1EA1A8720, (uint64_t)&type metadata for FormatInspectionGroup);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7958(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0600760(a1, a2, a3, (void *)*v3, &qword_1EA19C700, (uint64_t (*)(uint64_t))sub_1C0606200, sub_1C0606200);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F79A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605830, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F79F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FFD2C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7A10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6239C(a1, a2, a3, *v3, &qword_1EA19C920, (uint64_t)&type metadata for DebugFormatCreatePackageItem);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7A40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFE74F34(a1, a2, a3, *v3, &qword_1EA19C650, (uint64_t)&type metadata for DebugFormatTestCaseResultSeverity);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7A70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FFEE8(a1, a2, a3, (void *)*v3, &qword_1EA19C7D8, (uint64_t (*)(uint64_t))sub_1C0606994, sub_1C0606994);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7AC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0600098(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7AE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C060024C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7B00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06062CC, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7B48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06003D4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7B68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB4B8(a1, a2, a3, *v3, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7B98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607630, MEMORY[0x1E4F7AD70]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7BE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605F90, (uint64_t (*)(void))type metadata accessor for ZIndexable);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7C28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605BDC, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7C70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605864, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7CB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB4B8(a1, a2, a3, *v3, (unint64_t *)&qword_1EA19C600, (uint64_t)&type metadata for DebugPersonalizationItem);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7CE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605978, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7D30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06059AC, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7D78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06005B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7D98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6602C(a1, a2, a3, *v3, &qword_1EA1A4D40, (uint64_t)&type metadata for FormatInspection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7DC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0600760(a1, a2, a3, (void *)*v3, &qword_1EA19C8D0, (uint64_t (*)(uint64_t))sub_1C0607488, (void (*)(void))sub_1C0607488);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7E18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606264, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7E60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606298, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7EA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF019A4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C0607420, (unint64_t *)&qword_1EA1A5350);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7EEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607378, (uint64_t (*)(void))sub_1C06073AC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7F34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0600FF4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F7F54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606334, (uint64_t (*)(void))type metadata accessor for DebugFormatBindingItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7F9C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C060133C(a1, a2, a3, (void *)*v3, &qword_1EA19CA08, (uint64_t (*)(uint64_t))sub_1C0608038, (void (*)(void))sub_1C0608038);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F7FEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C060133C(a1, a2, a3, (void *)*v3, &qword_1EA19C9D0, (uint64_t (*)(uint64_t))sub_1C0607E40, (void (*)(void))sub_1C0607E40);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F803C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607F70, (uint64_t (*)(void))sub_1C0607FA4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8084(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C060133C(a1, a2, a3, (void *)*v3, &qword_1EA19C9B8, (uint64_t (*)(uint64_t))sub_1C0607DAC, (void (*)(void))sub_1C0607DAC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F80D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0601180(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F80F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C060133C(a1, a2, a3, (void *)*v3, &qword_1EA19C978, (uint64_t (*)(uint64_t))sub_1C0607B24, (void (*)(void))sub_1C0607B24);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8144(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06014EC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8164(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06016B4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8184(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607ABC, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F81CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607AF0, type metadata accessor for FormatLayoutSectionDescriptor.Header);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8214(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFEC4E00(a1, a2, a3, *v3, &qword_1EB87A758, (uint64_t)&type metadata for FormatContentSlot.Resolved);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F8244(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0608750, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F828C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607A54, MEMORY[0x1E4F7ADE8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F82D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB4B8(a1, a2, a3, *v3, (unint64_t *)&qword_1EA1A8840, (uint64_t)&type metadata for DebugFormatHistoryItem);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F8304(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607884, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F834C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607850, type metadata accessor for FormatContentSidecarPlacement);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8394(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C060781C, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F83DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCC50(a1, a2, a3, *v3, (unint64_t *)&unk_1EA19C950, (uint64_t)&type metadata for FormatContentSubgroupSection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F840C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6602C(a1, a2, a3, *v3, (unint64_t *)&unk_1EB86BB10, (uint64_t)&type metadata for SportsTaxonomyGraphNode);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F843C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0601868(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F845C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0601A10(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F847C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0601BE4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F849C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0601D80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F84BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FB4B8(a1, a2, a3, *v3, (unint64_t *)&unk_1EB87A5F0, (uint64_t)&type metadata for FeedLayoutResult);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F84EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0601F0C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F850C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06021B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F852C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0602344(a1, a2, a3, *v3, (unint64_t *)&unk_1EA19C8A0, (uint64_t)&type metadata for DebugFormatFile);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F855C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06024CC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F857C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FFEE8(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_1EA19C810, (uint64_t (*)(uint64_t))sub_1BFD48758, sub_1BFD48758);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F85CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0602A24(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F85EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0602CD0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F860C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0602F7C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F862C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606D6C, (uint64_t (*)(void))sub_1BFF1D9F4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8674(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0603228(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8694(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06034D4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F86B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0603780(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F86D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0603A2C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F86F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0603CD8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8714(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0603F84(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8734(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0604230(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8754(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607190, (uint64_t (*)(void))sub_1C06071C4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F879C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C06044DC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F87BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0604788(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F87DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605A14, MEMORY[0x1E4FAD040]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8824(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF5CAFC(a1, a2, a3, (void *)*v3, &qword_1EA19C660, (unint64_t *)&unk_1EA19C668, (uint64_t)&type metadata for FormatMenuGroupableData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F885C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607524, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F88A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05FCC50(a1, a2, a3, *v3, &qword_1EA19C900, (uint64_t)&type metadata for DebugFormatUploadHiddenSection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F88D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0604A34(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F88F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6602C(a1, a2, a3, *v3, (unint64_t *)&unk_1EA19C6F0, (uint64_t)&type metadata for DebugFormatHistorySection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F8924(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0607664, (uint64_t (*)(void))sub_1C0607698);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F896C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0604BE8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F898C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFE74F34(a1, a2, a3, *v3, &qword_1EA19C638, (uint64_t)&type metadata for DebugFormatDevice);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F89BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0605690, MEMORY[0x1E4F81D40]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8A04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C06056C4, (uint64_t (*)(void))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8A4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C0604E94(a1, a2, a3, *v3, (unint64_t *)&unk_1EA1A3B30, (uint64_t)&type metadata for DebugFormatCompilerSection);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C05F8A7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1C0606198, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C05F8AC4(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  a5(0);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  uint64_t v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F8D10(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, &qword_1EA1967B0, (uint64_t)&type metadata for SportsDataConfigurationEventStatus);
}

uint64_t sub_1C05F8D24(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, &qword_1EB890428, (uint64_t)&type metadata for FormatResizeAutoMask);
}

uint64_t sub_1C05F8D38(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BAE0, (uint64_t)&type metadata for FormatJsonConfigKey);
}

uint64_t sub_1C05F8D4C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C06082B4, (uint64_t (*)(void))type metadata accessor for FormatRegex);
}

uint64_t sub_1C05F8D78(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, &qword_1EA1968F8, (uint64_t)&type metadata for FormatPrintNodeValue);
}

uint64_t sub_1C05F8D8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB890430, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F8F30(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0606824();
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 3 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1BFD8B470(0, &qword_1EB87CB30, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F90F0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C06067A0();
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1BFD8B470(0, &qword_1EB8718B0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F92A0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0606710();
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1C060815C(0, &qword_1EB87CB28, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F9478(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C06068A8();
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1BFD8B470(0, (unint64_t *)&unk_1EB87CB50, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F9644(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EA19CA18, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F97C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB85C708, (uint64_t)&type metadata for WebArchiveRequest, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F9950(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C06087B8, type metadata accessor for FormatService.ThemePackage);
}

uint64_t sub_1C05F997C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C06056F8, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
}

uint64_t sub_1C05F99A8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0606B38();
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BFD8B470(0, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F9B58(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EB8710C8, (uint64_t (*)(uint64_t))sub_1C060866C, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    sub_1C060866C();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F9D28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB860E70, (uint64_t)&type metadata for FormatImageAdjustment, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 136 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05F9EC0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF5CCCC(0, (unint64_t *)&unk_1EB890450, &qword_1EB88B358, (uint64_t)&type metadata for FormatStateMachineEvent, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1BFF66364(0, &qword_1EB88B358, (uint64_t)&type metadata for FormatStateMachineEvent, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FA094(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C688, (uint64_t)&type metadata for LayeredMediaFilter, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FA220(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C690, (uint64_t)&type metadata for FormatLayeredMediaFilter, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FA3C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EA19C7C8, (uint64_t)&type metadata for AnyFormatSelectorValueSelector, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FA570(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0605470, (uint64_t (*)(void))sub_1C06054A4);
}

uint64_t sub_1C05FA59C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0608218, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
}

uint64_t sub_1C05FA5C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB87A600, (uint64_t)&type metadata for FeedScoredHeadline, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FA754(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19CA30, (uint64_t)&type metadata for FeedScoredIssue, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FA8E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19CA28, (uint64_t)&type metadata for FeedScoredTag, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FAA88(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB87A5E0, (uint64_t)&type metadata for FeedScoredItem, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FAC30(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0608784, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
}

uint64_t sub_1C05FAC5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB85E1C0, (uint64_t)&type metadata for LayeredMediaVideoVariant, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FAE00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EA19C6D8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FAF8C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C06054D4, (uint64_t (*)(void))sub_1C0605508);
}

uint64_t sub_1C05FAFB8(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 144);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v14 = v12 + 32;
  unint64_t v15 = a4 + 32;
  size_t v16 = 144 * v10;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FB158(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0605380();
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  size_t v13 = a4 + 4;
  size_t v14 = 19 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1C06084E8(0, &qword_1EA19C4F8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FB310(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB85E1A8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 392);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  size_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[392 * v8]) {
      memmove(v12, v13, 392 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[392 * v8] || v12 >= &v13[392 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FB4B8(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = _swift_stdlib_malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 + 31;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 6);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = v12 + 32;
  size_t v16 = a4 + 32;
  size_t v17 = v10 << 6;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[v17]) {
      memmove(v15, v16, v17);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FB640(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C8E0, (uint64_t)&type metadata for DebugFormatUploadSection, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FB7CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EA19C628, (uint64_t)&type metadata for DebugFormatAlert, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FB978(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB87A8E0, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FBAF8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EA1967D8, (uint64_t (*)(uint64_t))sub_1C00BB3B4, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1C00BB3B4();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FBCC4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0608608, (uint64_t (*)(void))sub_1C060863C);
}

uint64_t sub_1C05FBCF0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0608570, (uint64_t (*)(void))sub_1C06085A4);
}

uint64_t sub_1C05FBD1C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA196918, (uint64_t)&type metadata for FeedPuzzleType, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FBEA8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0608470();
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8) {
      memmove(v10 + 4, a4 + 4, 72 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    sub_1C06084E8(0, (unint64_t *)&unk_1EA19CA58);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FC06C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB86BA90, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 208);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[208 * v8]) {
      memmove(v12, v13, 208 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[208 * v8] || v12 >= &v13[208 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FC214(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C06083F8();
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 216);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 216 * v8) {
      memmove(v10 + 4, a4 + 4, 216 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 216 * v8 || v12 >= v13 + 216 * v8)
  {
    sub_1C06084E8(0, &qword_1EB861440);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FC3D4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0608394, (uint64_t (*)(void))sub_1C06083C8);
}

uint64_t sub_1C05FC400(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB86BA80, (uint64_t)&type metadata for FeedTag, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 152 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FC5A0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C06082E8();
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 20 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1C06084E8(0, &qword_1EB86B3F0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FC750(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C560, (uint64_t)&type metadata for PuzzleDatastoreRelatedPuzzleInfo, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 88 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FC8F0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFF6239C(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BA68, (uint64_t)&type metadata for FeedGroupEmitterRuleResult);
}

uint64_t sub_1C05FC904(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB85E160, (uint64_t)&type metadata for FeedTopicCluster, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FCAAC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB86BA78, (uint64_t)&type metadata for FeedGroupEmitterRuleOutputDescription, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FCC50(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    unint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v14 = v12 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[24 * v10]) {
      memmove(v14, v15, 24 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[24 * v10] || v14 >= &v15[24 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FCDF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C7C0, (uint64_t)&type metadata for FormatDerivedDataResultItemReference, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FCF84(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C060639C();
  sub_1C060815C(0, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  unint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FD230(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C060642C();
  sub_1C060815C(0, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  unint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FD4DC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C06064BC();
  sub_1C060815C(0, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  unint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FD788(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C060654C();
  sub_1C060815C(0, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  unint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FDA34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB85E1B0, (uint64_t)&type metadata for FormatLocalizationString, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  size_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FDBD8(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v11 = a4[3];
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = a4[2];
  if (v12 <= v13) {
    uint64_t v14 = a4[2];
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    sub_1BFF5CCCC(0, a5, a6, a7, MEMORY[0x1E4FBB320]);
    unint64_t v15 = (void *)swift_allocObject();
    int64_t v16 = _swift_stdlib_malloc_size(v15);
    uint64_t v17 = v16 - 32;
    if (v16 < 32) {
      uint64_t v17 = v16 - 25;
    }
    v15[2] = v13;
    uint64_t v15[3] = 2 * (v17 >> 3);
  }
  else
  {
    unint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v18 = (unint64_t)(v15 + 4);
  unint64_t v19 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v15 != a4 || v18 >= v19 + 8 * v13) {
      memmove(v15 + 4, a4 + 4, 8 * v13);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v19 >= v18 + 8 * v13 || v18 >= v19 + 8 * v13)
  {
    sub_1BFF66364(0, a6, a7, MEMORY[0x1E4FBB320]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v15;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FDDA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB8903E0, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FDF50(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, (unint64_t *)&unk_1EA19C698, (uint64_t (*)(uint64_t))sub_1C024AA50, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 4;
  uint64_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1C024AA50();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FE104(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), void (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    a5(0);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    uint64_t v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11) {
      memmove(v13 + 4, a4 + 4, 24 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FE2B8(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), void (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    a5(0);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    uint64_t v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FE468(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB8945B0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FE610(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB8945B8, (uint64_t)&type metadata for FormatContentSlot, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FE7B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EA19C930, (uint64_t)&type metadata for DebugFormatRulerIndicatorView.Selection, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FE954(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v11 = a4[3];
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = a4[2];
  if (v12 <= v13) {
    uint64_t v14 = a4[2];
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  unint64_t v15 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FAB418];
  sub_1BFF5CCCC(0, a5, a6, a7, MEMORY[0x1E4FAB418]);
  sub_1BFF66364(0, a6, a7, v15);
  uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 72);
  unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
  unint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v20 - v18 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_34;
  }
  void v19[2] = v13;
  uint64_t v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  sub_1BFF66364(0, a6, a7, MEMORY[0x1E4FAB418]);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (char *)v19 + v24;
  int64_t v26 = (char *)a4 + v24;
  if (a1)
  {
    if (v19 < a4 || v25 >= &v26[*(void *)(v23 + 72) * v13])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v27 = *(void *)(v23 + 72) * v13;
  uint64_t v28 = &v25[v27];
  unint64_t v29 = (unint64_t)&v26[v27];
  if (v26 >= v28 || (unint64_t)v25 >= v29)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v19;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FEBEC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF5CCCC(0, &qword_1EB86BB30, &qword_1EB867618, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1BFF66364(0, &qword_1EB867618, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FEDD8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C06051C0, (uint64_t (*)(void))sub_1C06051F4);
}

uint64_t sub_1C05FEE04(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB86F6B0, (uint64_t)&type metadata for FeedGapOffline, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FEFAC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C06055B0();
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 96 * v8) {
      memmove(v10 + 4, a4 + 4, 96 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 96 * v8 || v12 >= v13 + 96 * v8)
  {
    sub_1C06084E8(0, &qword_1EA19C548);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FF16C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0605538();
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  uint64_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1C06084E8(0, (unint64_t *)&unk_1EA19C530);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FF310(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EA19C4D8, (uint64_t (*)(uint64_t))sub_1C060529C, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C060529C(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FF4C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EA19C510, (uint64_t)&type metadata for FeedCatalogItem, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 288);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 288 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FF664(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C06053F8();
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 296);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 37 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1C06084E8(0, &qword_1EA19C508);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FF81C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB85F000, (uint64_t)&type metadata for FeedCategory, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[152 * v8]) {
      memmove(v12, v13, 152 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[152 * v8] || v12 >= &v13[152 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FF9C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0605224();
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 160 * v8) {
      memmove(v10 + 4, a4 + 4, 160 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 160 * v8 || v12 >= v13 + 160 * v8)
  {
    sub_1C06084E8(0, (unint64_t *)&unk_1EA19C4C8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FFB80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB85E748, (uint64_t)&type metadata for CategoryViewLayout.Context, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 200);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[200 * v8]) {
      memmove(v12, v13, 200 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[200 * v8] || v12 >= &v13[200 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FFD2C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C928, (uint64_t)&type metadata for DebugFormatCreatePackageSection, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C05FFED4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, &qword_1EA19C650, (uint64_t)&type metadata for DebugFormatTestCaseResultSeverity);
}

uint64_t sub_1C05FFEE8(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_1BFF95518(0, a5, a6, MEMORY[0x1E4FBBE00]);
    size_t v14 = (void *)swift_allocObject();
    int64_t v15 = _swift_stdlib_malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 25;
    }
    void v14[2] = v12;
    uint64_t v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    size_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v17 = (unint64_t)(v14 + 4);
  unint64_t v18 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v12) {
      memmove(v14 + 4, a4 + 4, 8 * v12);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v12 || v17 >= v18 + 8 * v12)
  {
    a7(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600098(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EA19C8E8, (uint64_t (*)(uint64_t))sub_1C024AD08, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C024AD08();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C060024C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&qword_1EA1A2110, (uint64_t)&type metadata for DebugFormatUploadItem, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06003D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C5C0, (uint64_t)&type metadata for FormatDebuggerBreakpoint, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600560(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0605FC4, type metadata accessor for DebugFormatTestCaseResult);
}

uint64_t sub_1C060058C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C0605F90, (uint64_t (*)(void))type metadata accessor for ZIndexable);
}

uint64_t sub_1C06005B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB86EE00, (uint64_t)&type metadata for FeedChannelCluster, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600760(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_1BFF95518(0, a5, a6, MEMORY[0x1E4FBBE00]);
    unint64_t v14 = (void *)swift_allocObject();
    int64_t v15 = _swift_stdlib_malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 17;
    }
    void v14[2] = v12;
    uint64_t v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v17 = (unint64_t)(v14 + 4);
  unint64_t v18 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v12) {
      memmove(v14 + 4, a4 + 4, 16 * v12);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v12 || v17 >= v18 + 16 * v12)
  {
    a7(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600910(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EA19C800, (uint64_t (*)(uint64_t))sub_1C00BB490, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1C00BB490();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600AE0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C06069C8();
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1C06084E8(0, (unint64_t *)&qword_1EA1967F0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600C84(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA1A8960, (uint64_t)&type metadata for FormatInspectionIssue, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600E28(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, (unint64_t *)&unk_1EB87A900, (uint64_t (*)(uint64_t))sub_1C0607558, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    sub_1C0607558();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0600FF4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EA19C730, (uint64_t)&type metadata for DebugFormatInventorySection, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0601180(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C0607D1C();
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C060815C(0, &qword_1EA19C9B0, (uint64_t (*)(void))sub_1C0607C34, (uint64_t)&type metadata for FeedItemFilterTagMatcher, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemFilterApplicator);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C060133C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_1BFF95518(0, a5, a6, MEMORY[0x1E4FBBE00]);
    unint64_t v14 = (void *)swift_allocObject();
    int64_t v15 = _swift_stdlib_malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 17;
    }
    void v14[2] = v12;
    uint64_t v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v17 = (unint64_t)(v14 + 4);
  unint64_t v18 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v12) {
      memmove(v14 + 4, a4 + 4, 16 * v12);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v12 || v17 >= v18 + 16 * v12)
  {
    a7(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06014EC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EA19C998, (uint64_t (*)(uint64_t))sub_1C0607C88, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 7 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1C0607C88();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06016B4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, (unint64_t *)&unk_1EB86BB38, (uint64_t (*)(uint64_t))sub_1C060602C, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1C060602C();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0601868(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EA19C940, (uint64_t)&type metadata for DebugTextAttachment, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0601A10(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF5CCCC(0, (unint64_t *)&qword_1EB87A898, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BFF66364(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0601BE4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C598, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 96 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0601D80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA19C5A0, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0601F0C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C06080CC();
  sub_1C060815C(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06021B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EA1A5250, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0602344(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = _swift_stdlib_malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 1;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 5);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v15 = v12 + 32;
  uint64_t v16 = a4 + 32;
  size_t v17 = 32 * v10;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[v17]) {
      memmove(v15, v16, v17);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06024CC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606AA8();
  sub_1C060815C(0, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0602778(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1BFFFE5C0();
  sub_1C060815C(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0602A24(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606BBC();
  sub_1C060815C(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0602CD0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606C4C();
  sub_1C060815C(0, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0602F7C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606CDC();
  sub_1C060815C(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0603228(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606DA0();
  sub_1C060815C(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06034D4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606E30();
  sub_1C060815C(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0603780(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606EC0();
  sub_1C060815C(0, &qword_1EA19C828, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EA19C828, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0603A2C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606F50();
  sub_1C060815C(0, &qword_1EA19C838, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EA19C838, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0603CD8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0606FE0();
  sub_1C060815C(0, &qword_1EA19C848, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EA19C848, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0603F84(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0607070();
  sub_1C060815C(0, &qword_1EA19C858, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EA19C858, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0604230(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0607100();
  sub_1C060815C(0, &qword_1EA19C868, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EA19C868, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06044DC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0607258();
  sub_1C060815C(0, &qword_1EA19C888, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EA19C888, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0604788(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C06072E8();
  sub_1C060815C(0, &qword_1EA19C898, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EA19C898, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0604A34(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF95518(0, &qword_1EB860EB0, (uint64_t (*)(uint64_t))sub_1C0607700, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C0607700(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0604BE8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C0605A7C();
  sub_1C060815C(0, (unint64_t *)&qword_1EB864270, (uint64_t (*)(void))sub_1C007D02C, (uint64_t)&type metadata for FormatLayoutModel, MEMORY[0x1E4FAC4C8]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, (unint64_t *)&qword_1EB864270, (uint64_t (*)(void))sub_1C007D02C, (uint64_t)&type metadata for FormatLayoutModel, MEMORY[0x1E4FAC4C8]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0604E94(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    unint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 40);
  }
  else
  {
    unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v14 = v12 + 32;
  int64_t v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[40 * v10]) {
      memmove(v14, v15, 40 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[40 * v10] || v14 >= &v15[40 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0605038(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C05F8AC4(a1, a2, a3, a4, sub_1C06075FC, MEMORY[0x1E4FB7550]);
}

uint64_t sub_1C0605064(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C151EFFC();
  uint64_t v7 = result;
  if (v2)
  {
    unsigned int v4 = (unsigned int *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1BFEDE668(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t dispatch thunk of FeedAppConfigManagerType.segmentSetIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.timesOfDayConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.feedEditionConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.formatFeedConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.puzzleRanksByPuzzleTypeID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t method lookup function for FeedAppConfigManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedAppConfigManager);
}

uint64_t dispatch thunk of FeedAppConfigManager.__allocating_init(appConfigManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for NoopFeedAppConfigManager()
{
  return self;
}

void sub_1C060518C(uint64_t a1)
{
}

void sub_1C06051C0(uint64_t a1)
{
}

void sub_1C06051F4(uint64_t a1)
{
}

void sub_1C0605224()
{
  if (!qword_1EA19C4C0)
  {
    sub_1C06084E8(255, (unint64_t *)&unk_1EA19C4C8);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C4C0);
    }
  }
}

void sub_1C060529C(uint64_t a1)
{
}

uint64_t sub_1C06052CC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int64_t v4 = a3 >> 1;
  uint64_t result = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1C151EFFC();
  uint64_t v12 = result;
  uint64_t v7 = v4 - a2;
  if (v4 == a2) {
    return result;
  }
  if (v4 <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  unint64_t v8 = (uint64_t *)(a1 + 16 * a2 + 8);
  do
  {
    uint64_t v9 = *(v8 - 1);
    uint64_t v10 = *v8;
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(&v11, v9, v10);
    swift_bridgeObjectRelease();
    v8 += 2;
    --v7;
  }
  while (v7);
  return v12;
}

void sub_1C0605380()
{
  if (!qword_1EA19C4F0)
  {
    sub_1C06084E8(255, &qword_1EA19C4F8);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C4F0);
    }
  }
}

void sub_1C06053F8()
{
  if (!qword_1EA19C500)
  {
    sub_1C06084E8(255, &qword_1EA19C508);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C500);
    }
  }
}

void sub_1C0605470(uint64_t a1)
{
}

void sub_1C06054A4(uint64_t a1)
{
}

void sub_1C06054D4(uint64_t a1)
{
}

void sub_1C0605508(uint64_t a1)
{
}

void sub_1C0605538()
{
  if (!qword_1EA19C528)
  {
    sub_1C06084E8(255, (unint64_t *)&unk_1EA19C530);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C528);
    }
  }
}

void sub_1C06055B0()
{
  if (!qword_1EA19C540)
  {
    sub_1C06084E8(255, &qword_1EA19C548);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C540);
    }
  }
}

void sub_1C0605628(uint64_t a1)
{
}

void sub_1C060565C(uint64_t a1)
{
}

void sub_1C0605690(uint64_t a1)
{
}

void sub_1C06056C4(uint64_t a1)
{
}

void sub_1C06056F8(uint64_t a1)
{
}

void sub_1C060572C(uint64_t a1)
{
}

void sub_1C0605760(uint64_t a1)
{
}

void sub_1C0605794(uint64_t a1)
{
}

void sub_1C06057C8(uint64_t a1)
{
}

void sub_1C06057FC(uint64_t a1)
{
}

void sub_1C0605830(uint64_t a1)
{
}

void sub_1C0605864(uint64_t a1)
{
}

uint64_t sub_1C0605898(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for UIUserInterfaceIdiom(0);
  sub_1C0605DEC((unint64_t *)&qword_1EA19C6D0, type metadata accessor for UIUserInterfaceIdiom);
  uint64_t result = sub_1C151EFFC();
  uint64_t v7 = result;
  if (v2)
  {
    int64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1C02B5D54(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1C0605944(uint64_t a1)
{
  return sub_1BFDFC1AC(a1, (void (*)(void))sub_1C02CDB34, (uint64_t)&type metadata for FormatDerivedDataCompilerMode, (void (*)(char *, void))sub_1C02B665C);
}

void sub_1C0605978(uint64_t a1)
{
}

void sub_1C06059AC(uint64_t a1)
{
}

void sub_1C06059E0(uint64_t a1)
{
}

void sub_1C0605A14(uint64_t a1)
{
}

void sub_1C0605A48(uint64_t a1)
{
}

void sub_1C0605A7C()
{
  if (!qword_1EB86BA28)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EB864270, (uint64_t (*)(void))sub_1C007D02C, (uint64_t)&type metadata for FormatLayoutModel, MEMORY[0x1E4FAC4C8]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BA28);
    }
  }
}

void sub_1C0605B0C(uint64_t a1)
{
}

void sub_1C0605B40(uint64_t a1)
{
}

void sub_1C0605B74(uint64_t a1)
{
}

void sub_1C0605BA8(uint64_t a1)
{
}

void sub_1C0605BDC(uint64_t a1)
{
}

uint64_t sub_1C0605C10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C151EFFC();
  uint64_t v7 = result;
  if (v2)
  {
    int64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1BFE4EA54(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1C0605C84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedGroupItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1C0605DEC(&qword_1EB8739B0, (void (*)(uint64_t))type metadata accessor for FeedGroupItem);
  uint64_t result = sub_1C151EFFC();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1C0605E34(v11, (uint64_t)v5);
      sub_1BFED30EC((uint64_t)v8, (uint64_t)v5);
      sub_1C0605E98((uint64_t)v8);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1C0605DEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0605E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0605E98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedGroupItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0605EF4(uint64_t a1)
{
}

void sub_1C0605F28()
{
  if (!qword_1EA1974C0)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EA1974E0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1974C0);
    }
  }
}

void sub_1C0605F90(uint64_t a1)
{
}

void sub_1C0605FC4(uint64_t a1)
{
}

void sub_1C0605FF8(uint64_t a1)
{
}

void sub_1C060602C()
{
  if (!qword_1EB867620)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A300);
    unint64_t v0 = type metadata accessor for FormatCommandActionValue.CaseValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB867620);
    }
  }
}

void sub_1C0606094(uint64_t a1)
{
}

void sub_1C06060C8(uint64_t a1)
{
}

void sub_1C06060FC(uint64_t a1)
{
}

void sub_1C0606130(uint64_t a1)
{
}

void sub_1C0606164(uint64_t a1)
{
}

void sub_1C0606198(uint64_t a1)
{
}

uint64_t sub_1C06061CC(uint64_t a1)
{
  return sub_1BFDFC1AC(a1, (void (*)(void))sub_1C02CDC74, (uint64_t)&type metadata for FormatGroupLayoutFactoryOption, (void (*)(char *, void))sub_1C02B9C54);
}

void sub_1C0606200(uint64_t a1)
{
}

void sub_1C0606230(uint64_t a1)
{
}

void sub_1C0606264(uint64_t a1)
{
}

void sub_1C0606298(uint64_t a1)
{
}

void sub_1C06062CC(uint64_t a1)
{
}

void sub_1C0606300(uint64_t a1)
{
}

void sub_1C0606334(uint64_t a1)
{
}

void sub_1C0606368(uint64_t a1)
{
}

void sub_1C060639C()
{
  if (!qword_1EA19C768)
  {
    sub_1C060815C(255, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C768);
    }
  }
}

void sub_1C060642C()
{
  if (!qword_1EA19C770)
  {
    sub_1C060815C(255, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C770);
    }
  }
}

void sub_1C06064BC()
{
  if (!qword_1EA19C778)
  {
    sub_1C060815C(255, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C778);
    }
  }
}

void sub_1C060654C()
{
  if (!qword_1EA19C780)
  {
    sub_1C060815C(255, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C780);
    }
  }
}

void sub_1C06065DC(uint64_t a1)
{
}

void sub_1C0606610(uint64_t a1)
{
}

void sub_1C0606644(uint64_t a1)
{
}

void sub_1C0606678(uint64_t a1)
{
}

void sub_1C06066AC(uint64_t a1)
{
}

void sub_1C06066DC(uint64_t a1)
{
}

void sub_1C0606710()
{
  if (!qword_1EA19C7A0)
  {
    sub_1C060815C(255, &qword_1EB87CB28, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C7A0);
    }
  }
}

void sub_1C06067A0()
{
  if (!qword_1EB8710B8)
  {
    sub_1BFD8B470(255, &qword_1EB8718B0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8710B8);
    }
  }
}

void sub_1C0606824()
{
  if (!qword_1EA19C7A8)
  {
    sub_1BFD8B470(255, &qword_1EB87CB30, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C7A8);
    }
  }
}

void sub_1C06068A8()
{
  if (!qword_1EA19C7B8)
  {
    sub_1BFD8B470(255, (unint64_t *)&unk_1EB87CB50, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C7B8);
    }
  }
}

void sub_1C060692C(uint64_t a1)
{
}

void sub_1C0606960(uint64_t a1)
{
}

void sub_1C0606994(uint64_t a1)
{
}

void sub_1C06069C8()
{
  if (!qword_1EA19C7F0)
  {
    sub_1C06084E8(255, (unint64_t *)&qword_1EA1967F0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C7F0);
    }
  }
}

unint64_t sub_1C0606A40()
{
  unint64_t result = qword_1EB87A150;
  if (!qword_1EB87A150)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87A150);
  }
  return result;
}

void sub_1C0606AA8()
{
  if (!qword_1EB87A6E0)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A6E0);
    }
  }
}

void sub_1C0606B38()
{
  if (!qword_1EA19C808)
  {
    sub_1BFD8B470(255, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C808);
    }
  }
}

void sub_1C0606BBC()
{
  if (!qword_1EB87A708)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A708);
    }
  }
}

void sub_1C0606C4C()
{
  if (!qword_1EB87A6F0)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A6F0);
    }
  }
}

void sub_1C0606CDC()
{
  if (!qword_1EB87A720)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A720);
    }
  }
}

void sub_1C0606D6C(uint64_t a1)
{
}

void sub_1C0606DA0()
{
  if (!qword_1EB87A700)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A700);
    }
  }
}

void sub_1C0606E30()
{
  if (!qword_1EB87A710)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A710);
    }
  }
}

void sub_1C0606EC0()
{
  if (!qword_1EA19C820)
  {
    sub_1C060815C(255, &qword_1EA19C828, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C820);
    }
  }
}

void sub_1C0606F50()
{
  if (!qword_1EA19C830)
  {
    sub_1C060815C(255, &qword_1EA19C838, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C830);
    }
  }
}

void sub_1C0606FE0()
{
  if (!qword_1EA19C840)
  {
    sub_1C060815C(255, &qword_1EA19C848, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C840);
    }
  }
}

void sub_1C0607070()
{
  if (!qword_1EA19C850)
  {
    sub_1C060815C(255, &qword_1EA19C858, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C850);
    }
  }
}

void sub_1C0607100()
{
  if (!qword_1EA19C860)
  {
    sub_1C060815C(255, &qword_1EA19C868, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C860);
    }
  }
}

void sub_1C0607190(uint64_t a1)
{
}

void sub_1C06071C4()
{
  if (!qword_1EA19C878)
  {
    type metadata accessor for FormatSnippet();
    sub_1C0605DEC(&qword_1EB891140, (void (*)(uint64_t))type metadata accessor for FormatSnippet);
    unint64_t v0 = type metadata accessor for DebugFormatObject();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C878);
    }
  }
}

void sub_1C0607258()
{
  if (!qword_1EA19C880)
  {
    sub_1C060815C(255, &qword_1EA19C888, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C880);
    }
  }
}

void sub_1C06072E8()
{
  if (!qword_1EA19C890)
  {
    sub_1C060815C(255, &qword_1EA19C898, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C890);
    }
  }
}

void sub_1C0607378(uint64_t a1)
{
}

void sub_1C06073AC()
{
  if (!qword_1EA1A5A60)
  {
    sub_1C151677C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA1A5A60);
    }
  }
}

void sub_1C0607420()
{
  if (!qword_1EA19C8C0)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EA1A5350);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C8C0);
    }
  }
}

void sub_1C0607488()
{
  if (!qword_1EA19C8D8)
  {
    sub_1BFF95518(255, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19C8D8);
    }
  }
}

void sub_1C0607524(uint64_t a1)
{
}

void sub_1C0607558()
{
  if (!qword_1EB87A080)
  {
    sub_1BFF66364(255, &qword_1EB87A090, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    type metadata accessor for CGRect(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EB87A080);
    }
  }
}

void sub_1C06075FC(uint64_t a1)
{
}

void sub_1C0607630(uint64_t a1)
{
}

void sub_1C0607664(uint64_t a1)
{
}

void sub_1C0607698(uint64_t a1)
{
}

void sub_1C06076CC(uint64_t a1)
{
}

void sub_1C0607700(uint64_t a1)
{
}

void sub_1C0607734()
{
  if (!qword_1EB860D40)
  {
    sub_1BFC39268(255, &qword_1EB85F200);
    sub_1BFD355A8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB860D40);
    }
  }
}

void sub_1C06077B4()
{
  if (!qword_1EB85E150)
  {
    sub_1BFC845BC(255, &qword_1EB8715F0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E150);
    }
  }
}

void sub_1C060781C(uint64_t a1)
{
}

void sub_1C0607850(uint64_t a1)
{
}

void sub_1C0607884(uint64_t a1)
{
}

uint64_t sub_1C06078B8(uint64_t a1)
{
  uint64_t v2 = sub_1C151D77C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1C0605DEC((unint64_t *)&unk_1EA19C960, MEMORY[0x1E4F7ADE8]);
  uint64_t result = sub_1C151EFFC();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v5, v14, v2);
      sub_1C02BA4F8((uint64_t)v8, v5);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

void sub_1C0607A54(uint64_t a1)
{
}

void sub_1C0607A88(uint64_t a1)
{
}

void sub_1C0607ABC(uint64_t a1)
{
}

void sub_1C0607AF0(uint64_t a1)
{
}

void sub_1C0607B24()
{
  if (!qword_1EA19C980)
  {
    sub_1C0607BB8();
    sub_1C0605DEC(&qword_1EA19C990, (void (*)(uint64_t))sub_1C0607BB8);
    unint64_t v0 = type metadata accessor for FeedItemFilterApplicator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C980);
    }
  }
}

void sub_1C0607BB8()
{
  if (!qword_1EA1A60E0)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB86B430);
    sub_1C0607C34();
    unint64_t v0 = type metadata accessor for FeedItemFilterWrapperMatcher();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A60E0);
    }
  }
}

unint64_t sub_1C0607C34()
{
  unint64_t result = qword_1EA19C988;
  if (!qword_1EA19C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C988);
  }
  return result;
}

void sub_1C0607C88()
{
  if (!qword_1EA19C9A0)
  {
    sub_1C0607BB8();
    sub_1C0605DEC(&qword_1EA19C990, (void (*)(uint64_t))sub_1C0607BB8);
    unint64_t v0 = type metadata accessor for FeedItemFilter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C9A0);
    }
  }
}

void sub_1C0607D1C()
{
  if (!qword_1EA19C9A8)
  {
    sub_1C060815C(255, &qword_1EA19C9B0, (uint64_t (*)(void))sub_1C0607C34, (uint64_t)&type metadata for FeedItemFilterTagMatcher, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemFilterApplicator);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C9A8);
    }
  }
}

void sub_1C0607DAC()
{
  if (!qword_1EA19C9C0)
  {
    type metadata accessor for FeedItemFilterIssueMatcher();
    sub_1C0605DEC(&qword_1EA19C9C8, (void (*)(uint64_t))type metadata accessor for FeedItemFilterIssueMatcher);
    unint64_t v0 = type metadata accessor for FeedItemFilterApplicator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C9C0);
    }
  }
}

void sub_1C0607E40()
{
  if (!qword_1EA19C9D8)
  {
    sub_1C0607ED4();
    sub_1C0605DEC(&qword_1EA19C9F0, (void (*)(uint64_t))sub_1C0607ED4);
    unint64_t v0 = type metadata accessor for FeedItemFilterApplicator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C9D8);
    }
  }
}

void sub_1C0607ED4()
{
  if (!qword_1EA19C9E0)
  {
    type metadata accessor for FeedItemFilterHeadlineMatcher();
    sub_1C0605DEC(&qword_1EA19C9E8, (void (*)(uint64_t))type metadata accessor for FeedItemFilterHeadlineMatcher);
    unint64_t v0 = type metadata accessor for FeedItemFilterWrapperMatcher();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C9E0);
    }
  }
}

void sub_1C0607F70(uint64_t a1)
{
}

void sub_1C0607FA4()
{
  if (!qword_1EA19CA00)
  {
    sub_1C0607ED4();
    sub_1C0605DEC(&qword_1EA19C9F0, (void (*)(uint64_t))sub_1C0607ED4);
    unint64_t v0 = type metadata accessor for FeedItemFilter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CA00);
    }
  }
}

void sub_1C0608038()
{
  if (!qword_1EA19CA10)
  {
    type metadata accessor for FeedItemFilterHeadlineMatcher();
    sub_1C0605DEC(&qword_1EA19C9E8, (void (*)(uint64_t))type metadata accessor for FeedItemFilterHeadlineMatcher);
    unint64_t v0 = type metadata accessor for FeedItemFilterApplicator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CA10);
    }
  }
}

void sub_1C06080CC()
{
  if (!qword_1EA19CA38)
  {
    sub_1C060815C(255, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CA38);
    }
  }
}

void sub_1C060815C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C06081C4()
{
  unint64_t result = qword_1EA1AE600;
  if (!qword_1EA1AE600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE600);
  }
  return result;
}

void sub_1C0608218(uint64_t a1)
{
}

void sub_1C060824C()
{
  if (!qword_1EB87A5D0)
  {
    sub_1BFC845BC(255, qword_1EB871820);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A5D0);
    }
  }
}

void sub_1C06082B4(uint64_t a1)
{
}

void sub_1C06082E8()
{
  if (!qword_1EB86BC18)
  {
    sub_1C06084E8(255, &qword_1EB86B3F0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BC18);
    }
  }
}

void sub_1C0608360(uint64_t a1)
{
}

void sub_1C0608394(uint64_t a1)
{
}

void sub_1C06083C8(uint64_t a1)
{
}

void sub_1C06083F8()
{
  if (!qword_1EA19CA48)
  {
    sub_1C06084E8(255, &qword_1EB861440);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CA48);
    }
  }
}

void sub_1C0608470()
{
  if (!qword_1EA19CA50)
  {
    sub_1C06084E8(255, (unint64_t *)&unk_1EA19CA58);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CA50);
    }
  }
}

void sub_1C06084E8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C060853C(uint64_t a1)
{
}

void sub_1C0608570(uint64_t a1)
{
}

void sub_1C06085A4(uint64_t a1)
{
}

void sub_1C06085D4(uint64_t a1)
{
}

void sub_1C0608608(uint64_t a1)
{
}

void sub_1C060863C(uint64_t a1)
{
}

void sub_1C060866C()
{
  if (!qword_1EB871050)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB873868);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB871050);
    }
  }
}

void sub_1C06086E8(uint64_t a1)
{
}

void sub_1C060871C(uint64_t a1)
{
}

void sub_1C0608750(uint64_t a1)
{
}

void sub_1C0608784(uint64_t a1)
{
}

void sub_1C06087B8(uint64_t a1)
{
}

void sub_1C06087EC(uint64_t a1)
{
}

unint64_t sub_1C0608820(uint64_t a1)
{
  unint64_t result = sub_1C0092008();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0608848()
{
  unint64_t result = qword_1EB8713A8;
  if (!qword_1EB8713A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8713A8);
  }
  return result;
}

uint64_t sub_1C060889C(uint64_t a1)
{
  uint64_t result = sub_1BFF877BC(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C06088F4(uint64_t a1)
{
  uint64_t result = sub_1BFF877BC((unint64_t *)&qword_1EB884D00, MEMORY[0x1E4F27928]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C060894C(uint64_t a1)
{
  uint64_t result = sub_1BFF877BC(&qword_1EA19A3A0, MEMORY[0x1E4FAB0A8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C06089A4(void *a1)
{
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4FAB0A8];
  a1[1] = sub_1BFF877BC(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
  a1[2] = sub_1BFF877BC(&qword_1EB85C8B0, v2);
  uint64_t result = sub_1BFF877BC(&qword_1EB85C8B8, v2);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0608A50(void *a1)
{
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  a1[1] = sub_1BFF877BC(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  a1[2] = sub_1BFF877BC((unint64_t *)&qword_1EB884FD0, v2);
  uint64_t result = sub_1BFF877BC(&qword_1EA196BE0, v2);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0608AFC(void *a1)
{
  return sub_1C0608B7C(a1);
}

uint64_t sub_1C0608B3C(void *a1)
{
  return sub_1C0608B7C(a1);
}

uint64_t sub_1C0608B7C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0608C14(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t destroy for FormatAttributedStringStyle(id *a1)
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FormatAttributedStringStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  unint64_t v8 = *(void **)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  unint64_t v10 = *(void **)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  id v12 = v3;
  id v13 = v4;
  id v14 = v6;
  id v15 = v8;
  id v16 = v10;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatAttributedStringStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  unint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  unint64_t v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  uint64_t v13 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v13;
  id v14 = *(void **)(a1 + 40);
  id v15 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v15;
  id v16 = v15;

  uint64_t v17 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v17;
  unint64_t v18 = *(void **)(a1 + 64);
  unint64_t v19 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v19;
  id v20 = v19;

  uint64_t v21 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v21;
  LOBYTE(v21) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = v21;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for FormatAttributedStringStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAttributedStringStyle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 121)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAttributedStringStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAttributedStringStyle()
{
  return &type metadata for FormatAttributedStringStyle;
}

uint64_t *sub_1C0609070(id a1, int a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (a4)
  {
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = *(void *)(a4 + 56);
    if ((~v9 & 0xF000000000000007) != 0)
    {
      uint64_t v20 = *(void *)(a3 + 56);
      if ((~v10 & 0xF000000000000007) == 0)
      {
        sub_1BFEF683C(v9);
        sub_1BFEF683C(v9);
        swift_retain();
        swift_release();
        goto LABEL_7;
      }
      uint64_t v19 = v10;
      sub_1BFEF683C(v9);
      sub_1BFEF683C(v9);
      swift_retain();
      char v11 = static FormatFont.== infix(_:_:)(&v20, (unint64_t *)&v19);
      swift_release();
      sub_1BFEF68C0(v9);
      if ((v11 & 1) == 0) {
        goto LABEL_13;
      }
      swift_release();
    }
    else if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
LABEL_7:
      sub_1BFEF683C(v10);
      sub_1BFEF68C0(v9);
      sub_1BFEF68C0(v10);
LABEL_13:
      uint64_t v17 = sub_1BFF636C0(a4, a5);
      swift_release();
      return v17;
    }
  }
  id v12 = objc_msgSend(a1, sel_fontDescriptor);
  unsigned int v13 = objc_msgSend(v12, sel_symbolicTraits);

  uint64_t v14 = v13 | a2;
  id v15 = objc_msgSend(a1, sel_fontDescriptor);
  id v16 = objc_msgSend(v15, sel_fontDescriptorWithSymbolicTraits_, v14);

  if (!v16) {
    return (uint64_t *)a1;
  }
  uint64_t v17 = (uint64_t *)objc_msgSend(self, sel_fontWithDescriptor_size_, v16, 0.0);

  if (!v17) {
    return (uint64_t *)a1;
  }
  return v17;
}

void sub_1C0609264()
{
}

void sub_1C0609280()
{
}

void sub_1C060929C()
{
}

void sub_1C06092B8()
{
}

void sub_1C06092D4()
{
}

void sub_1C06092F0()
{
}

void sub_1C060930C()
{
}

void sub_1C0609328()
{
}

void sub_1C0609344()
{
}

void sub_1C0609360()
{
}

id sub_1C0609380(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0870]), sel_init);
  id v5 = sub_1C06095D0();
  id v6 = objc_msgSend(a1, sel_imageWithConfiguration_, v5);

  objc_msgSend(v4, sel_setImage_, v6);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A260);
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v4);
  id v8 = objc_msgSend(v7, sel_length);
  objc_msgSend(v7, sel_addAttribute_value_range_, *MEMORY[0x1E4FB06F8], *v2, 0, v8);
  sub_1BFF66964(v2[13] + 296, (uint64_t)v16, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)v16, (uint64_t)v17, (unint64_t *)&qword_1EB876CA0);
  if (sub_1C01CDAD8((uint64_t)v17) != 1)
  {
    v13[10] = v17[10];
    v13[11] = v17[11];
    __int16 v14 = v18;
    _OWORD v13[6] = v17[6];
    v13[7] = v17[7];
    _OWORD v13[8] = v17[8];
    v13[9] = v17[9];
    v13[2] = v17[2];
    uint64_t v13[3] = v17[3];
    v13[4] = v17[4];
    v13[5] = v17[5];
    v13[0] = v17[0];
    v13[1] = v17[1];
    uint64_t v9 = FormatParagraphStyle.paragraphStyle.getter();
    objc_msgSend(v7, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0738], v9, 0, v8, *(void *)&v13[0]);
  }
  sub_1BFF66964((uint64_t)(v2 + 11), (uint64_t)v15, &qword_1EB8713C0);
  sub_1BFF66964((uint64_t)v15, (uint64_t)v13, &qword_1EB8713C0);
  if ((BYTE8(v13[0]) & 1) == 0)
  {
    uint64_t v10 = *MEMORY[0x1E4FB06C8];
    char v11 = (void *)sub_1C1517D2C();
    objc_msgSend(v7, sel_addAttribute_value_range_, v10, v11, 0, v8);
  }
  return v7;
}

id sub_1C06095D0()
{
  uint64_t v1 = v0;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v2 = (void *)v0[1];
  if (v2)
  {
    id v3 = v2;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
  }
  id v4 = (void *)v0[2];
  if (v4)
  {
    id v5 = self;
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_clearColor);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    char v8 = sub_1C151FB6C();

    if ((v8 & 1) == 0)
    {
      id v9 = v6;
      MEMORY[0x1C18C66D0]();
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
    }
  }
  uint64_t v10 = *v1;
  char v11 = self;
  id v12 = objc_msgSend(v11, sel_configurationWithFont_, v10);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  unsigned int v13 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v11, sel_configurationWithPaletteColors_, v13);

  id v15 = objc_msgSend(v12, sel_configurationByApplyingConfiguration_, v14);
  return v15;
}

id sub_1C06097FC(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0870]), sel_init);
  objc_msgSend(v4, sel_setImage_, a1);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A260);
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v4);
  id v6 = objc_msgSend(v5, sel_length);
  objc_msgSend(v5, sel_addAttribute_value_range_, *MEMORY[0x1E4FB06F8], *v2, 0, v6);
  sub_1BFF66964(v2[13] + 296, (uint64_t)v19, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)v19, (uint64_t)v20, (unint64_t *)&qword_1EB876CA0);
  if (sub_1C01CDAD8((uint64_t)v20) != 1)
  {
    v14[10] = v20[10];
    v14[11] = v20[11];
    __int16 v15 = v21;
    _OWORD v14[6] = v20[6];
    unsigned char v14[7] = v20[7];
    v14[8] = v20[8];
    v14[9] = v20[9];
    void v14[2] = v20[2];
    uint64_t v14[3] = v20[3];
    v14[4] = v20[4];
    v14[5] = v20[5];
    v14[0] = v20[0];
    v14[1] = v20[1];
    id v7 = FormatParagraphStyle.paragraphStyle.getter();
    objc_msgSend(v5, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0738], v7, 0, v6, *(void *)&v14[0]);
  }
  sub_1BFF66964((uint64_t)(v2 + 11), (uint64_t)v17, &qword_1EB8713C0);
  sub_1BFF66964((uint64_t)v17, (uint64_t)v14, &qword_1EB8713C0);
  if ((BYTE8(v14[0]) & 1) == 0)
  {
    uint64_t v8 = *MEMORY[0x1E4FB06C8];
    id v9 = (void *)sub_1C1517D2C();
    objc_msgSend(v5, sel_addAttribute_value_range_, v8, v9, 0, v6);
  }
  sub_1BFF674B0((uint64_t)(v2 + 1), (uint64_t)v16);
  sub_1BFF674B0((uint64_t)v16, (uint64_t)&v18);
  if (v18) {
    objc_msgSend(v5, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0700], v18, 0, v6);
  }
  uint64_t v10 = (void *)v2[2];
  if (v10)
  {
    uint64_t v11 = *MEMORY[0x1E4FB06C0];
    id v12 = v10;
    objc_msgSend(v5, sel_addAttribute_value_range_, v11, v12, 0, v6);
  }
  return v5;
}

void sub_1C0609AC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, double *a5@<X8>, double a6@<D0>)
{
  if (!BYTE2(a4))
  {
    uint64_t v16 = sub_1C151C36C();
    if (a3) {
      uint64_t v17 = (unsigned int *)MEMORY[0x1E4FAD3B8];
    }
    else {
      uint64_t v17 = (unsigned int *)MEMORY[0x1E4FAD3B0];
    }
    (*(void (**)(double *, void, uint64_t))(*(void *)(v16 - 8) + 104))(a5, *v17, v16);
    uint64_t v18 = (unsigned int *)MEMORY[0x1E4FAD3C0];
    goto LABEL_16;
  }
  char v12 = a4;
  if (BYTE2(a4) == 1)
  {
    if ((a4 & 0x100) != 0)
    {
      int v19 = ~(_BYTE)a4;
      double Height = CGRectGetHeight(*(CGRect *)&a6);
      double v15 = Height + Height;
      if (v19)
      {
        double v21 = sub_1C060A7D0(Height + Height, a1, a2, a3, v12);
        if (v9) {
          return;
        }
        double v15 = v21;
      }
    }
    else
    {
      type metadata accessor for FormatDecorationContext();
      sub_1C1517EFC();
      double v15 = sub_1BFF493E4(v28, a3);
      swift_release();
      if (v9) {
        return;
      }
    }
    *a5 = v15;
    uint64_t v18 = (unsigned int *)MEMORY[0x1E4FAD3D0];
    goto LABEL_16;
  }
  if (BYTE1(a4) > 0xFEu)
  {
    uint64_t v18 = (unsigned int *)MEMORY[0x1E4FAD3D8];
LABEL_16:
    uint64_t v22 = *v18;
    uint64_t v23 = sub_1C151C37C();
    (*(void (**)(double *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a5, v22, v23);
    return;
  }
  if ((a4 & 0x100) != 0)
  {
    int v25 = ~(_BYTE)a4;
    double v26 = CGRectGetHeight(*(CGRect *)&a6);
    double v24 = v26 + v26;
    if (v25)
    {
      double v27 = sub_1C060A7D0(v26 + v26, a1, a2, a3, v12);
      if (v9) {
        return;
      }
      double v24 = v27;
    }
LABEL_24:
    *a5 = v24;
    uint64_t v18 = (unsigned int *)MEMORY[0x1E4FAD3A8];
    goto LABEL_16;
  }
  type metadata accessor for FormatDecorationContext();
  sub_1C1517EFC();
  double v24 = sub_1BFF493E4(v28, a3);
  swift_release();
  if (!v9) {
    goto LABEL_24;
  }
}

uint64_t FormatSupplementaryNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0609DB8(unint64_t a1)
{
  unint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  swift_beginAccess();
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  swift_beginAccess();
  unint64_t v7 = v1[12];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0F497F0(v3, v4, 2, v5, v6, v7, a1, v1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSupplementaryNode.blocks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.supplementaryIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t FormatSupplementaryNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 48);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatSupplementaryNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatSupplementaryNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.styles.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.styles.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.blocks.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.blocks.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.zIndex.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t FormatSupplementaryNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSupplementaryNode.__deallocating_deinit()
{
  FormatSupplementaryNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C060A3E0(void *a1, void *a2)
{
  return static FormatSupplementaryNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C060A3EC(unint64_t a1)
{
  return sub_1C0609DB8(a1);
}

uint64_t sub_1C060A410(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFF7578(&qword_1EA19CAB8, a2, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C060A468(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFFF7578(&qword_1EB87F928, a2, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNode);
  a1[2] = sub_1BFFF7578(&qword_1EB8606B0, v3, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNode);
  uint64_t result = sub_1BFFF7578(&qword_1EA19CAC0, v4, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C060A514(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFF7578(&qword_1EA19CAC8, a2, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C060A56C(unint64_t a1, uint64_t a2)
{
  return FormatSupplementaryNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C060A590@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C060A5E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C060A630@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C060A680@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C060A6D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C060A720@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSupplementaryNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSupplementaryNode);
}

uint64_t sub_1C060A788()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1C060A7D0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 1:
      if (!a4)
      {
        sub_1C151756C();
        goto LABEL_20;
      }
      if (a4 == 1)
      {
        sub_1C151755C();
LABEL_20:
        double v13 = v9;
        return a1 - v13;
      }
      type metadata accessor for FormatDecorationContext();
      sub_1C1517EFC();
      double v13 = sub_1BFF493E4(v17, a4);
      swift_release();
      if (!v5) {
        return a1 - v13;
      }
      return a1;
    case 2:
      if (a4)
      {
        if (a4 != 1)
        {
          type metadata accessor for FormatDecorationContext();
          sub_1C1517EFC();
          double v14 = sub_1BFF493E4(v17, a4);
          swift_release();
          if (v5) {
            return a1;
          }
          return v14 * a1;
        }
        sub_1C151755C();
      }
      else
      {
        sub_1C151756C();
      }
      double v14 = v10;
      return v14 * a1;
    case 3:
      if (!a4)
      {
        sub_1C151756C();
        goto LABEL_30;
      }
      if (a4 == 1)
      {
        sub_1C151755C();
LABEL_30:
        double v15 = v11;
        goto LABEL_31;
      }
      type metadata accessor for FormatDecorationContext();
      sub_1C1517EFC();
      double v15 = sub_1BFF493E4(v17, a4);
      swift_release();
      if (v5) {
        return a1;
      }
LABEL_31:
      if (v15 != 0.0) {
        return a1 / v15;
      }
      return a1;
    default:
      if (!a4)
      {
        sub_1C151756C();
        goto LABEL_15;
      }
      if (a4 == 1)
      {
        sub_1C151755C();
LABEL_15:
        double v12 = v8;
        return v12 + a1;
      }
      type metadata accessor for FormatDecorationContext();
      sub_1C1517EFC();
      double v12 = sub_1BFF493E4(v17, a4);
      swift_release();
      if (!v5) {
        return v12 + a1;
      }
      return a1;
  }
}

uint64_t sub_1C060AA0C()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

BOOL static SharingIssueActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SharingIssueActivity.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SharingIssueActivity.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C060AAE0()
{
  unint64_t result = qword_1EA19CAD0;
  if (!qword_1EA19CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CAD0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharingIssueActivity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C060AC00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void sub_1C060AC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 8);
  id v5 = objc_msgSend(self, sel_generalPasteboard);
  if (v4) {
    uint64_t v6 = sub_1C151E5EC();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  objc_msgSend(v5, sel_setString_);
}

uint64_t sub_1C060ACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 8);
  sub_1C15180CC();
  return sub_1C151809C() & (v4 != 0);
}

uint64_t FormatShareAttributionNodeContent.sharedItem(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v5[3] = type metadata accessor for FormatNodeContext();
  void v5[4] = &off_1F1BFC148;
  v5[0] = a1;
  swift_retain();
  sub_1BFEDD4CC(v5, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t static FormatShareAttributionNodeContent.== infix(_:_:)()
{
  return 1;
}

unint64_t sub_1C060AD80(uint64_t a1)
{
  unint64_t result = sub_1C060ADA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C060ADA8()
{
  unint64_t result = qword_1EA19CAD8;
  if (!qword_1EA19CAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CAD8);
  }
  return result;
}

unint64_t sub_1C060ADFC(void *a1)
{
  a1[1] = sub_1C00687E0();
  a1[2] = sub_1C060AE34();
  unint64_t result = sub_1C060AE88();
  a1[3] = result;
  return result;
}

unint64_t sub_1C060AE34()
{
  unint64_t result = qword_1EB860AB0;
  if (!qword_1EB860AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860AB0);
  }
  return result;
}

unint64_t sub_1C060AE88()
{
  unint64_t result = qword_1EA19CAE0;
  if (!qword_1EA19CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CAE0);
  }
  return result;
}

uint64_t sub_1C060AEDC(void *a1)
{
  return FormatShareAttributionNodeContent.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatShareAttributionNodeContent()
{
  return &type metadata for FormatShareAttributionNodeContent;
}

void destroy for DebugFormatLogSeverity(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void *_s8NewsFeed22DebugFormatLogSeverityOwCP_0(void *a1, void **a2)
{
  int v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for DebugFormatLogSeverity(void **a1, void **a2)
{
  int v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      id v11 = v7;
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v9 = v7;
    double v10 = *a1;
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for DebugFormatLogSeverity(void **a1, void **a2)
{
  int v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatLogSeverity(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 5) {
    return (v3 - 4);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatLogSeverity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_1C060B164(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1C060B184(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *unint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLogSeverity()
{
  return &type metadata for DebugFormatLogSeverity;
}

id sub_1C060B1C4(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      id v1 = objc_msgSend(self, sel_systemBlueColor);
      id v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
      goto LABEL_9;
    case 2:
      id v3 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
      return v3;
    case 3:
      id v1 = objc_msgSend(self, sel_systemOrangeColor);
      id v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
      goto LABEL_9;
    case 4:
      id v1 = objc_msgSend(self, sel_systemYellowColor);
      id v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
      goto LABEL_9;
    default:
      id v1 = objc_msgSend(self, sel_systemRedColor);
      id v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
LABEL_9:
      id v5 = v2;

      return v5;
  }
}

uint64_t FeedServiceState.__allocating_init(feed:)(uint64_t *a1)
{
  uint64_t v2 = swift_allocObject();
  FeedServiceState.init(feed:)(a1);
  return v2;
}

uint64_t FeedServiceState.init(feed:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[3];
  char v5 = *((unsigned char *)a1 + 32);
  sub_1BFCC56A8(0, &qword_1EB871418);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1C15184BC();
  sub_1BFCC56A8(0, &qword_1EB890B00);
  swift_allocObject();
  *(void *)(v1 + 24) = sub_1C15184BC();
  *(void *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 1);
  *(void *)(v1 + 56) = v4;
  *(unsigned char *)(v1 + 64) = v5;
  return v1;
}

Swift::Void __swiftcall FeedServiceState.markGapOnScreen(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall FeedServiceState.commitNextRevision()()
{
}

void *sub_1C060B4EC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*result == -1) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

uint64_t FeedServiceState.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 48);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedServiceState.__deallocating_deinit()
{
  FeedServiceState.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C060B588()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedServiceState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FeedServiceState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedServiceState);
}

uint64_t dispatch thunk of FeedServiceState.__allocating_init(feed:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C060B620(uint64_t a1, uint64_t a2)
{
  sub_1C060B68C();
  char v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

void sub_1C060B68C()
{
  if (!qword_1EB863D58)
  {
    type metadata accessor for SportsDataVisualizationResponseData();
    sub_1C060C108(&qword_1EB8649A0, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseData);
    sub_1C060C108(&qword_1EB864998, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseData);
    unint64_t v0 = sub_1C151852C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863D58);
    }
  }
}

uint64_t sub_1C060B758(uint64_t a1)
{
  sub_1C060B68C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1C060B7BC(uint64_t a1, uint64_t a2)
{
  sub_1C060B68C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C060B820(uint64_t a1, uint64_t a2)
{
  sub_1C060B68C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C060B884(uint64_t a1, uint64_t a2)
{
  sub_1C060B68C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C060B8E8(uint64_t a1, uint64_t a2)
{
  sub_1C060B68C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C060B94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C060B960);
}

uint64_t sub_1C060B960(uint64_t a1, uint64_t a2)
{
  sub_1C060B68C();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C060B9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C060B9E0);
}

uint64_t sub_1C060B9E0(uint64_t a1, uint64_t a2)
{
  sub_1C060B68C();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SportsDataVisualizationResponse()
{
  uint64_t result = qword_1EB8694D0;
  if (!qword_1EB8694D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C060BA9C()
{
  sub_1C060B68C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C060BB28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C060B68C();
  uint64_t v5 = v4;
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v21 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C060C0A4(0, &qword_1EB86B730, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  double v10 = (char *)&v17 - v9;
  uint64_t v11 = type metadata accessor for SportsDataVisualizationResponse();
  MEMORY[0x1F4188790](v11 - 8);
  double v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C060BFEC();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v14 = v19;
    uint64_t v15 = v20;
    sub_1C060C108(&qword_1EB863D50, (void (*)(uint64_t))sub_1C060B68C);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v8);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v21, v5);
    sub_1C060C040((uint64_t)v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C060BDD4(uint64_t a1)
{
  unint64_t v2 = sub_1C060BFEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C060BE10(uint64_t a1)
{
  unint64_t v2 = sub_1C060BFEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C060BE4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C060BB28(a1, a2);
}

uint64_t sub_1C060BE64(void *a1)
{
  sub_1C060C0A4(0, &qword_1EA19CAE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C060BFEC();
  sub_1C1520F0C();
  sub_1C060B68C();
  sub_1C060C108(&qword_1EA19CAF0, (void (*)(uint64_t))sub_1C060B68C);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C060BFEC()
{
  unint64_t result = qword_1EB8694A8;
  if (!qword_1EB8694A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8694A8);
  }
  return result;
}

uint64_t sub_1C060C040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C060C0A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C060BFEC();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponse.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C060C108(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C060C1ECLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponse.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponse.CodingKeys;
}

unint64_t sub_1C060C228()
{
  unint64_t result = qword_1EA19CAF8;
  if (!qword_1EA19CAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CAF8);
  }
  return result;
}

unint64_t sub_1C060C280()
{
  unint64_t result = qword_1EB8694B8;
  if (!qword_1EB8694B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8694B8);
  }
  return result;
}

unint64_t sub_1C060C2D8()
{
  unint64_t result = qword_1EB8694B0;
  if (!qword_1EB8694B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8694B0);
  }
  return result;
}

uint64_t sub_1C060C32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  if (v4 != 3)
  {
    if (*(unsigned char *)(a1 + 72) && v4 != 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v6 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        uint64_t v5 = &unk_1F1B65E00;
      }
    }
  }
  sub_1C1517EFC();
  uint64_t v7 = sub_1BFF88E38();
  swift_release();
  uint64_t v8 = sub_1BFFEEC2C((uint64_t)v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a1 + 56);
  double v10 = *(void **)(a1 + 64);
  id v11 = v10;
  swift_unknownObjectRetain();
  PuzzleShareData.init(puzzleHistoryItem:)(v10, (uint64_t)&v18);
  uint64_t v12 = v18;
  uint64_t v13 = v19;
  long long v17 = v20;
  char v14 = v21;
  if (v4 == 3)
  {
    swift_unknownObjectRetain();
    char v15 = 0;
  }
  else
  {
    if (v4 > 1) {
      char v15 = 0;
    }
    else {
      char v15 = sub_1C1520A9C() ^ 1;
    }
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(_OWORD *)(a2 + 24) = v17;
  *(unsigned char *)(a2 + 40) = v14;
  *(unsigned char *)(a2 + 41) = 13;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  *(unsigned char *)(a2 + 64) = v15 & 1 | 0x20;
  type metadata accessor for FormatAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FormatPuzzleBinding.Action.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatPuzzleBinding.Action.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleBinding.Action.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C060C5C8()
{
  unint64_t result = qword_1EA19CB00;
  if (!qword_1EA19CB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CB00);
  }
  return result;
}

unint64_t sub_1C060C61C(uint64_t a1)
{
  unint64_t result = sub_1C060C644();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C060C644()
{
  unint64_t result = qword_1EA19CB08;
  if (!qword_1EA19CB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CB08);
  }
  return result;
}

unint64_t sub_1C060C698(void *a1)
{
  a1[1] = sub_1C0079800();
  a1[2] = sub_1C060C6D0();
  unint64_t result = sub_1C060C5C8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C060C6D0()
{
  unint64_t result = qword_1EB866900;
  if (!qword_1EB866900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866900);
  }
  return result;
}

uint64_t sub_1C060C724(void *a1)
{
  return FormatPuzzleBinding.Action.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Action()
{
  return &type metadata for FormatPuzzleBinding.Action;
}

uint64_t sub_1C060C774@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v53 = (void *)((char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_1C151D18C();
  uint64_t v6 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int v58 = (char *)v45 - v9;
  uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (void *)((char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)v45 - v14;
  uint64_t v16 = sub_1C151D1BC();
  int64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (v17)
  {
    uint64_t v46 = a1;
    uint64_t v47 = a2;
    uint64_t v61 = MEMORY[0x1E4FBC860];
    sub_1C05F6874(0, v17, 0);
    long long v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v19 = v6 + 16;
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64);
    v45[1] = v16;
    unint64_t v22 = v16 + v21;
    uint64_t v50 = *(void *)(v19 + 56);
    unint64_t v51 = v20;
    uint64_t v52 = v19;
    uint64_t v48 = v19 - 8;
    uint64_t v49 = v12 + 2;
    uint64_t v24 = v57;
    uint64_t v23 = v58;
    int v25 = (void (**)(char *, uint64_t))(v19 - 8);
    do
    {
      unint64_t v59 = v22;
      int64_t v60 = v17;
      double v26 = v51;
      ((void (*)(char *))v51)(v23);
      double v27 = v56;
      v26(v56, v23, v24);
      *uint64_t v12 = sub_1C151D16C();
      v12[1] = v28;
      unint64_t v29 = v49;
      *uint64_t v49 = 0;
      v29[1] = 0;
      uint64_t v30 = sub_1C151D17C();
      uint64_t v32 = v31;
      uint64_t v33 = *v25;
      (*v25)(v27, v24);
      uint64_t v34 = (uint64_t)v12;
      uint64_t v35 = v53;
      *uint64_t v53 = v30;
      v35[1] = v32;
      uint64_t v36 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
      uint64_t v37 = v55;
      uint64_t v38 = (uint64_t)v35;
      uint64_t v12 = (void *)v34;
      sub_1C060D15C(v38, v34 + *(int *)(v55 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v39 = v34 + *(int *)(v37 + 28);
      *(void *)uint64_t v39 = 0;
      *(void *)(v39 + 8) = 0;
      *(unsigned char *)(v39 + 16) = -1;
      sub_1C060D15C(v34, (uint64_t)v15, type metadata accessor for FormatInspectionItem);
      v33(v23, v24);
      uint64_t v18 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6874(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v61;
      }
      unint64_t v41 = *(void *)(v18 + 16);
      unint64_t v40 = *(void *)(v18 + 24);
      int64_t v42 = v60;
      if (v41 >= v40 >> 1)
      {
        sub_1C05F6874(v40 > 1, v41 + 1, 1);
        uint64_t v18 = v61;
      }
      *(void *)(v18 + 16) = v41 + 1;
      sub_1C060D15C((uint64_t)v15, v18+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v41, type metadata accessor for FormatInspectionItem);
      unint64_t v22 = v59 + v50;
      int64_t v17 = v42 - 1;
    }
    while (v17);
    a1 = v46;
    a2 = v47;
  }
  uint64_t v43 = sub_1C151D1EC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(a1, v43);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = 0xD000000000000019;
  a2[1] = 0x80000001C1614300;
  a2[2] = 0;
  a2[3] = 0;
  a2[4] = v18;
  return result;
}

void sub_1C060CC10(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v57 = sub_1C151D6FC();
  uint64_t v4 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0444DD4(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v49 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = sub_1C151D1AC();
  uint64_t v8 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1C151D1EC();
  uint64_t v10 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v50 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  int64_t v17 = (char *)&v41 - v16;
  int64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (v18)
  {
    unint64_t v41 = a2;
    uint64_t v58 = MEMORY[0x1E4FBC860];
    sub_1C05F6874(0, v18, 0);
    unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v20 = v10 + 16;
    uint64_t v22 = a1 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v46 = v14 + 2;
    uint64_t v47 = v21;
    uint64_t v23 = *(void *)(v20 + 56);
    uint64_t v44 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v45 = v23;
    int64_t v42 = (void (**)(char *, uint64_t))(v20 - 8);
    uint64_t v43 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v48 = v20;
    uint64_t v24 = v50;
    uint64_t v25 = v54;
    do
    {
      v47(v24, v22, v25);
      uint64_t v26 = (uint64_t)v17;
      double v27 = v53;
      sub_1C151D1CC();
      *uint64_t v14 = sub_1C151D1DC();
      v14[1] = v28;
      unint64_t v29 = v46;
      *uint64_t v46 = 0;
      v29[1] = 0;
      uint64_t v30 = v56;
      sub_1C151D19C();
      uint64_t v31 = sub_1C151D6EC();
      uint64_t v33 = v32;
      uint64_t v34 = v27;
      int64_t v17 = (char *)v26;
      (*v44)(v34, v55);
      (*v43)(v30, v57);
      uint64_t v35 = (uint64_t)v49;
      *uint64_t v49 = v31;
      *(void *)(v35 + 8) = v33;
      uint64_t v36 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
      uint64_t v37 = v52;
      sub_1C060D15C(v35, (uint64_t)v14 + *(int *)(v52 + 24), (uint64_t (*)(void))sub_1C0444DD4);
      uint64_t v38 = (char *)v14 + *(int *)(v37 + 28);
      *(void *)uint64_t v38 = 0;
      *((void *)v38 + 1) = 0;
      v38[16] = -1;
      sub_1C060D15C((uint64_t)v14, v26, type metadata accessor for FormatInspectionItem);
      (*v42)(v24, v25);
      uint64_t v19 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6874(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v58;
      }
      unint64_t v40 = *(void *)(v19 + 16);
      unint64_t v39 = *(void *)(v19 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1C05F6874(v39 > 1, v40 + 1, 1);
        uint64_t v19 = v58;
      }
      *(void *)(v19 + 16) = v40 + 1;
      sub_1C060D15C(v26, v19+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v40, type metadata accessor for FormatInspectionItem);
      v22 += v45;
      --v18;
    }
    while (v18);
    a2 = v41;
  }
  *a2 = 0x79726F74736948;
  a2[1] = 0xE700000000000000;
  a2[2] = 0;
  a2[3] = 0;
  a2[4] = v19;
}

uint64_t sub_1C060D15C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL FCTagProviding.traits.getter@<W0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = qword_1F1B64968;
  id v4 = objc_msgSend(v1, sel_asSports);
  swift_unknownObjectRelease();
  uint64_t v5 = (v3 >> 24) & 1;
  if (!v4) {
    LODWORD(v5) = 1;
  }
  if (v5) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v3 | 0x1000000;
  }
  if ((objc_msgSend(v1, sel_isLocal) & ((v6 & 0x2000000) == 0)) != 0) {
    v6 |= 0x2000000uLL;
  }
  id v7 = objc_msgSend(v1, sel_isNewspaper);
  if ((v7 & ((v6 & 0x4000000) == 0)) != 0) {
    v6 |= 0x4000000uLL;
  }
  BOOL v8 = FCTagProviding.isTopic.getter((uint64_t)v7);
  if (v8 && (v6 & 0x8000000) == 0) {
    v6 |= 0x8000000uLL;
  }
  BOOL result = FCTagProviding.isChannel.getter(v8);
  if (result && (v6 & 0x10000000) == 0) {
    uint64_t v10 = v6 | 0x10000000;
  }
  else {
    uint64_t v10 = v6;
  }
  *a1 = v10;
  return result;
}

id FCTagProviding.iconColor.getter()
{
  id v1 = objc_msgSend(v0, sel_asSports);
  if (v1 && (id v2 = objc_msgSend(v1, sel_sportsType), swift_unknownObjectRelease(), v2 == (id)4))
  {
    id v3 = objc_msgSend(self, sel_systemGray2Color);
    return v3;
  }
  else
  {
    id v5 = objc_msgSend(v0, sel_asSports);
    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_sportsTheme);
      if (v6)
      {
        id v7 = objc_msgSend(v6, sel_sportsPrimaryColor);
        swift_unknownObjectRelease();
        if (v7)
        {
          id v8 = objc_msgSend(v7, sel_ne_color);
          swift_unknownObjectRelease();

          return v8;
        }
      }
      id v9 = objc_msgSend(self, sel_blackColor);
      swift_unknownObjectRelease();
    }
    else
    {
      id v10 = objc_msgSend(v0, sel_groupTitleColor);
      if (v10)
      {
        id v11 = v10;
        id v12 = objc_msgSend(v10, sel_ne_color);
      }
      else
      {
        id v11 = objc_msgSend(v0, sel_identifier);
        if (!v11)
        {
          sub_1C151E62C();
          id v11 = (id)sub_1C151E5EC();
          swift_bridgeObjectRelease();
        }
        id v12 = objc_msgSend(self, sel_nu_safeColorForIdentifier_, v11);
      }
      id v9 = v12;
    }
    return v9;
  }
}

uint64_t FCTagProviding.localizedTagType.getter()
{
  id v1 = objc_msgSend(v0, sel_asSportsEvent);
  swift_unknownObjectRelease();
  if (v1) {
    goto LABEL_2;
  }
  id v6 = objc_msgSend(v0, sel_asSports);
  if (!v6)
  {
LABEL_7:
    if (!FCTagProviding.isChannel.getter((uint64_t)v6) || (objc_msgSend(v0, sel_isLocal) & 1) != 0)
    {
      objc_msgSend(v0, sel_isPuzzleType);
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      goto LABEL_3;
    }
LABEL_2:
    type metadata accessor for Localized();
    uint64_t v2 = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, v2);
LABEL_3:
    uint64_t v4 = sub_1C1515B8C();

    return v4;
  }
  id v7 = objc_msgSend(v6, sel_sportsType);
  id v6 = (id)swift_unknownObjectRelease();
  switch((unint64_t)v7)
  {
    case 0uLL:
      goto LABEL_7;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      goto LABEL_2;
    default:
      if (FCTagProviding.isChannel.getter((uint64_t)v6) && (objc_msgSend(v0, sel_isLocal) & 1) == 0
        || (objc_msgSend(v0, sel_isPuzzleType) & 1) == 0)
      {
        goto LABEL_2;
      }
      uint64_t v4 = 0;
      break;
  }
  return v4;
}

BOOL FCTagProviding.isChannel.getter(uint64_t a1)
{
  return sub_1BFFB12C0(a1, (SEL *)&selRef_asChannel);
}

BOOL FCTagProviding.isSports.getter(uint64_t a1)
{
  return sub_1BFFB12C0(a1, (SEL *)&selRef_asSports);
}

uint64_t FCTagProviding.topKArticleListID.getter()
{
  uint64_t result = (uint64_t)objc_msgSend(v0, sel_feedIDForBin_, 3);
  if (result)
  {
    uint64_t v2 = (void *)result;
    sub_1C151E62C();

    sub_1C151E80C();
    swift_bridgeObjectRelease();
    return 21068;
  }
  return result;
}

double FallbackTagImageStyle.cornerRadius.getter()
{
  return *(double *)v0;
}

id FallbackTagImageStyle.tileColor.getter()
{
  return *(id *)(v0 + 8);
}

id FallbackTagImageStyle.titleFont.getter()
{
  return *(id *)(v0 + 16);
}

double FallbackTagImageStyle.padding.getter()
{
  return *(double *)(v0 + 24);
}

void FallbackTagImageStyle.init(cornerRadius:tileColor:titleFont:padding:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  id v10 = self;
  id v11 = objc_msgSend(v10, sel_whiteColor);
  unsigned int v12 = objc_msgSend(a1, sel__isSimilarToColor_withinPercentage_, v11, 0.12);

  if (v12)
  {
    id v13 = objc_msgSend(v10, sel_blackColor);

    a1 = v13;
  }
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = a1;
  *(void *)(a3 + 16) = a2;
  *(double *)(a3 + 24) = a5;
}

uint64_t FCTagProviding.createTagImage(imageSize:style:)(uint64_t *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *a1;
  id v11 = (void *)a1[1];
  id v10 = (void *)a1[2];
  uint64_t v12 = a1[3];
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, a3, a4);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(double *)(v14 + 24) = a3;
  *(double *)(v14 + 32) = a4;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 48) = v11;
  *(void *)(v14 + 56) = v10;
  *(void *)(v14 + 64) = v12;
  *(void *)(v14 + 72) = v5;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1C060F1A0;
  *(void *)(v15 + 24) = v14;
  v21[4] = sub_1BFD2E71C;
  v21[5] = v15;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 1107296256;
  v21[2] = sub_1BFD2E6D0;
  uint64_t v21[3] = &block_descriptor_30;
  uint64_t v16 = _Block_copy(v21);
  id v17 = v11;
  id v18 = v10;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v13, sel_imageWithActions_, v16);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v13 & 1) == 0) {
    return (uint64_t)v19;
  }
  __break(1u);
  return result;
}

void sub_1C060E044(void *a1, void *a2, uint64_t a3, void *a4, double a5, double a6, double a7, double a8)
{
  long long v76 = a4;
  double v73 = a8;
  uint64_t v75 = a3;
  double v77 = a7;
  uint64_t v12 = sub_1C1517D1C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_mainScreen);
  objc_msgSend(v17, sel_scale);
  double v19 = v18;

  BOOL v20 = v19 <= 0.0;
  double v21 = 1.0;
  if (!v20)
  {
    id v22 = objc_msgSend(v16, sel_mainScreen);
    objc_msgSend(v22, sel_scale);
    double v21 = v23;
  }
  double v24 = 1.0 / v21;
  double v25 = a5;
  double v26 = a5 - 1.0 / v21;
  double v27 = a6;
  double v28 = a6 - 1.0 / v21;
  v79.origin.CGFloat x = v24 * 0.5;
  v79.origin.CGFloat y = v24 * 0.5;
  v79.size.width = v26;
  v79.size.CGFloat height = a6 - v24;
  double Width = CGRectGetWidth(v79);
  v80.origin.CGFloat x = v24 * 0.5;
  v80.origin.CGFloat y = v24 * 0.5;
  v80.size.width = v26;
  v80.size.CGFloat height = v28;
  BOOL v30 = Width == CGRectGetHeight(v80);
  double v31 = v77;
  double v74 = v27;
  if (v30
    && (v81.origin.CGFloat x = v24 * 0.5,
        v81.origin.CGFloat y = v24 * 0.5,
        v81.size.width = v26,
        v81.size.CGFloat height = v28,
        CGRectGetWidth(v81) * 0.5 == v31))
  {
    id v32 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v24 * 0.5, v24 * 0.5, v26, v28, v31);
  }
  else
  {
    id v32 = objc_msgSend(self, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, -1, v24 * 0.5, v24 * 0.5, v26, v28, v31, v31);
  }
  double v33 = v25;
  double v34 = v73;
  id v35 = v32;
  id v36 = a2;
  uint64_t v37 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetLineWidth(v37, 1.0 / v24);

  uint64_t v38 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  double v77 = *(double *)&v35;
  unint64_t v39 = (const CGPath *)objc_msgSend(v35, sel_CGPath);
  CGContextAddPath(v38, v39);

  unint64_t v40 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  unint64_t v41 = (CGColor *)objc_msgSend(v36, sel_CGColor);
  CGContextSetStrokeColorWithColor(v40, v41);

  int64_t v42 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  uint64_t v43 = (CGColor *)objc_msgSend(v36, sel_CGColor);
  CGContextSetFillColorWithColor(v42, v43);

  uint64_t v44 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextClosePath(v44);

  id v45 = objc_msgSend(a1, sel_CGContext);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F1DA40], v12);
  sub_1C151F27C();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C060E75C(v76);
  sub_1C060E868();
  if (v46) {
    swift_bridgeObjectRelease();
  }
  *(double *)uint64_t v78 = v31;
  v78[1] = v36;
  v78[2] = v75;
  *(double *)&v78[3] = v34;
  id v47 = sub_1C060EA70(v78);
  id v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v48, sel_setAlignment_, 1);
  objc_msgSend(v48, sel_setLineBreakMode_, 4);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  uint64_t v50 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0738];
  uint64_t v51 = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 40) = v48;
  uint64_t v52 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = v51;
  *(void *)(inited + 72) = v52;
  uint64_t v53 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 80) = v47;
  long long v76 = v36;
  uint64_t v54 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 104) = v53;
  *(void *)(inited + 112) = v54;
  uint64_t v55 = self;
  id v56 = v50;
  id v57 = v48;
  id v58 = v52;
  id v59 = v47;
  id v60 = v54;
  id v61 = objc_msgSend(v55, sel_whiteColor);
  *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 120) = v61;
  sub_1BFF991DC(inited);
  id v62 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v63 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C060F364((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
  uint64_t v64 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v65 = objc_msgSend(v62, sel_initWithString_attributes_, v63, v64);

  double v66 = v25 - v34;
  sub_1C151F60C();
  CGFloat x = v82.origin.x;
  CGFloat y = v82.origin.y;
  CGFloat v69 = v82.size.width;
  CGFloat height = v82.size.height;
  double v71 = (v74 - CGRectGetHeight(v82)) * 0.5;
  v83.origin.CGFloat x = x;
  v83.origin.CGFloat y = y;
  v83.size.width = v69;
  v83.size.CGFloat height = height;
  objc_msgSend(v65, sel_drawWithRect_options_context_, 1, 0, (v33 - v66) * 0.5, v71, v66, CGRectGetHeight(v83));
}

uint64_t sub_1C060E75C(void *a1)
{
  objc_msgSend(a1, sel_tagType);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_1C1515B8C();

  return v3;
}

uint64_t sub_1C060E868()
{
  uint64_t v1 = sub_1C15154CC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_1C060EAD4();
  if (v9) {
    return v8;
  }
  id v11 = objc_msgSend(v0, sel_displayName);
  sub_1C151E62C();

  uint64_t v12 = sub_1C151E6CC();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v23 = v12;
  uint64_t v24 = v14;
  sub_1C15153FC();
  sub_1C151548C();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v7, v1);
  sub_1BFF27ECC();
  uint64_t v16 = sub_1C151FE9C();
  unint64_t v18 = v17;
  v15(v4, v1);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1BFE7E4D4(v16, v18);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21) {
    return 0;
  }
  uint64_t v23 = v19;
  uint64_t v24 = v21;
  uint64_t v10 = sub_1C151FE5C();
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1C060EA70(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = (void *)a1[2];
  uint64_t v3 = a1[3];
  v6[0] = *a1;
  v6[1] = v2;
  v6[2] = v1;
  id v5 = v1;
  v6[3] = v3;
  id result = sub_1C060F0B8((uint64_t)v6);
  if (!result)
  {
    return v5;
  }
  return result;
}

uint64_t sub_1C060EAD4()
{
  uint64_t v1 = sub_1C15154CC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v6 = MEMORY[0x1F4188790](v5).n128_u64[0];
  uint64_t v8 = (char *)&v56 - v7;
  id v9 = objc_msgSend(v0, sel_asSports, v6);
  if (!v9) {
    return 0;
  }
  id v10 = objc_msgSend(v9, sel_sportsType);
  swift_unknownObjectRelease();
  if (v10 != (id)4) {
    return 0;
  }
  id v11 = objc_msgSend(v0, sel_name);
  sub_1C151E62C();

  uint64_t v12 = sub_1C151E6CC();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  *(void *)&long long v58 = v12;
  *((void *)&v58 + 1) = v14;
  sub_1BFF27ECC();
  uint64_t v15 = sub_1C151FF1C();
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16) >= 2uLL) {
    int64_t v16 = 2;
  }
  else {
    int64_t v16 = *(void *)(v15 + 16);
  }
  if (v16)
  {
    id v61 = (void *)MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v16, 0);
    uint64_t v17 = *(void *)(v15 + 48);
    uint64_t v18 = *(void *)(v15 + 56);
    long long v58 = *(_OWORD *)(v15 + 32);
    uint64_t v59 = v17;
    uint64_t v60 = v18;
    swift_bridgeObjectRetain();
    sub_1C15153FC();
    sub_1C151548C();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v19 = (void (**)(char *, uint64_t))(v2 + 8);
    v20(v8, v1);
    sub_1C046D770();
    uint64_t v57 = sub_1C151FE9C();
    uint64_t v22 = v21;
    v20(v4, v1);
    swift_bridgeObjectRelease();
    uint64_t v23 = v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BFF661B8(0, v23[2] + 1, 1);
      uint64_t v23 = v61;
    }
    unint64_t v25 = v23[2];
    unint64_t v24 = v23[3];
    unint64_t v26 = v25 + 1;
    if (v25 >= v24 >> 1)
    {
      unint64_t v56 = v25 + 1;
      sub_1BFF661B8(v24 > 1, v25 + 1, 1);
      unint64_t v26 = v56;
      uint64_t v23 = v61;
    }
    v23[2] = v26;
    double v27 = &v23[2 * v25];
    v27[4] = v57;
    v27[5] = v22;
    if (v16 != 1)
    {
      uint64_t v28 = *(void *)(v15 + 80);
      uint64_t v29 = *(void *)(v15 + 88);
      long long v58 = *(_OWORD *)(v15 + 64);
      uint64_t v59 = v28;
      uint64_t v60 = v29;
      swift_bridgeObjectRetain();
      sub_1C15153FC();
      sub_1C151548C();
      BOOL v30 = *v19;
      (*v19)(v8, v1);
      sub_1C046D770();
      uint64_t v31 = sub_1C151FE9C();
      uint64_t v33 = v32;
      v30(v4, v1);
      swift_bridgeObjectRelease();
      uint64_t v23 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, v23[2] + 1, 1);
        uint64_t v23 = v61;
      }
      unint64_t v35 = v23[2];
      unint64_t v34 = v23[3];
      if (v35 >= v34 >> 1)
      {
        sub_1BFF661B8(v34 > 1, v35 + 1, 1);
        uint64_t v23 = v61;
      }
      v23[2] = v35 + 1;
      id v36 = &v23[2 * v35];
      v36[4] = v31;
      v36[5] = v33;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v23[2] != 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v37 = v23[5];
  if ((v37 & 0x2000000000000000) != 0) {
    uint64_t v38 = HIBYTE(v37) & 0xF;
  }
  else {
    uint64_t v38 = v23[4] & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (v38)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1C151E8BC();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    int64_t v42 = (void *)MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v42 = sub_1C0EE5CEC(0, v42[2] + 1, 1, v42);
    }
    unint64_t v44 = v42[2];
    unint64_t v43 = v42[3];
    if (v44 >= v43 >> 1) {
      int64_t v42 = sub_1C0EE5CEC((void *)(v43 > 1), v44 + 1, 1, v42);
    }
    v42[2] = v44 + 1;
    id v45 = &v42[2 * v44];
    v45[4] = v39;
    v45[5] = v41;
  }
  else
  {
    int64_t v42 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v48 = v23[7];
  uint64_t v49 = HIBYTE(v48) & 0xF;
  if ((v48 & 0x2000000000000000) == 0) {
    uint64_t v49 = v23[6] & 0xFFFFFFFFFFFFLL;
  }
  if (v49)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1C151E8BC();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v42 = sub_1C0EE5CEC(0, v42[2] + 1, 1, v42);
    }
    unint64_t v54 = v42[2];
    unint64_t v53 = v42[3];
    if (v54 >= v53 >> 1) {
      int64_t v42 = sub_1C0EE5CEC((void *)(v53 > 1), v54 + 1, 1, v42);
    }
    v42[2] = v54 + 1;
    uint64_t v55 = &v42[2 * v54];
    v55[4] = v50;
    v55[5] = v52;
  }
  swift_bridgeObjectRelease_n();
  *(void *)&long long v58 = v42;
  sub_1C060F30C();
  sub_1C060F364(&qword_1EA19CB18, (void (*)(uint64_t))sub_1C060F30C);
  sub_1C151E8CC();
  uint64_t v46 = sub_1C151E6DC();
  swift_bridgeObjectRelease();
  return v46;
}

id sub_1C060F0B8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  id result = objc_msgSend(v1, sel_asSports);
  if (result)
  {
    id v4 = objc_msgSend(result, sel_sportsType);
    swift_unknownObjectRelease();
    if (v4 == (id)4)
    {
      objc_msgSend(v2, sel_pointSize);
      return objc_msgSend(v2, sel_fontWithSize_, v5 + -4.0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C060F158()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C060F1A0(void *a1)
{
  sub_1C060E044(a1, *(void **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 72), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 64));
}

uint64_t sub_1C060F1BC()
{
  return swift_deallocObject();
}

void destroy for FallbackTagImageStyle(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

void *initializeWithCopy for FallbackTagImageStyle(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  double v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for FallbackTagImageStyle(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  double v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  id v7 = (void *)a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for FallbackTagImageStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for FallbackTagImageStyle()
{
  return &type metadata for FallbackTagImageStyle;
}

void sub_1C060F30C()
{
  if (!qword_1EA19CB10)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CB10);
    }
  }
}

uint64_t sub_1C060F364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C060F3AC(void *a1, void *a2)
{
  uint64_t v4 = sub_1C151794C();
  objc_msgSend(a1, sel_bounds, MEMORY[0x1F4188790](v4 - 8).n128_f64[0]);
  sub_1C151F32C();
  sub_1C151F7DC();
  id v5 = objc_msgSend(a1, sel_window);
  if (!v5) {
    id v5 = (id)sub_1C151F8DC();
  }
  id v6 = v5;
  objc_msgSend(v5, sel_bounds);

  id v7 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v7, sel_nativeBounds);

  id v8 = objc_msgSend(a1, sel_traitCollection);
  objc_msgSend(a1, sel_layoutMargins);
  objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  id v9 = objc_msgSend(a1, sel_traitCollection);
  id v10 = objc_msgSend(v9, sel_preferredContentSizeCategory);

  objc_msgSend(a2, sel_safeAreaInsets);
  if (qword_1EB87CC48 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  return sub_1C151763C();
}

uint64_t sub_1C060F650(void *a1, void *a2)
{
  uint64_t v4 = sub_1C151794C();
  objc_msgSend(a1, sel_bounds, MEMORY[0x1F4188790](v4 - 8).n128_f64[0]);
  objc_msgSend(a1, sel_bounds);
  sub_1C151F7DC();
  sub_1C1517D4C();
  sub_1C151F7EC();
  sub_1C151F32C();
  sub_1C151F7DC();
  id v5 = objc_msgSend(a1, sel_window);
  if (!v5) {
    id v5 = (id)sub_1C151F8DC();
  }
  id v6 = v5;
  objc_msgSend(v5, sel_bounds);

  id v7 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v7, sel_nativeBounds);

  id v8 = objc_msgSend(a1, sel_traitCollection);
  objc_msgSend(a1, sel_layoutMargins);
  objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  id v9 = objc_msgSend(a1, sel_traitCollection);
  id v10 = objc_msgSend(v9, sel_preferredContentSizeCategory);

  objc_msgSend(a2, sel_safeAreaInsets);
  if (qword_1EB87CC48 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  return sub_1C151763C();
}

BOOL ContentAvailability.isAvailable.getter()
{
  return *v0 == 2;
}

uint64_t ContentAvailability.description.getter()
{
  if (*v0 == 2) {
    return 0x6C62616C69617641;
  }
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t ContentAvailability.UnavailableReason.description.getter()
{
  if (*v0) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0x6863614320746F4ELL;
  }
}

BOOL static ContentAvailability.UnavailableReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContentAvailability.UnavailableReason.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t ContentAvailability.UnavailableReason.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C060FAEC()
{
  unint64_t result = qword_1EA19CB20;
  if (!qword_1EA19CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CB20);
  }
  return result;
}

uint64_t dispatch thunk of ContentAvailabilityValidatorType.validate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContentAvailabilityValidatorType.isAvailableOffline(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ContentAvailabilityValidatorType.unavailableOffline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t getEnumTagSinglePayload for ContentAvailability(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C060FC28);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = v7 - 2;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ContentAvailability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C060FD10);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentAvailability()
{
  return &type metadata for ContentAvailability;
}

unsigned char *storeEnumTagSinglePayload for ContentAvailability.UnavailableReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C060FE14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentAvailability.UnavailableReason()
{
  return &type metadata for ContentAvailability.UnavailableReason;
}

char *initializeBufferWithCopyOfBuffer for ContentValidationType(char *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unsigned int v7 = (char *)*a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
    return a1;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      *(void *)a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_204;
    case 5u:
      BOOL v8 = (char *)*a2;
      *(void *)a1 = *a2;
      unsigned int v9 = v8;
      goto LABEL_204;
    case 6u:
      uint64_t v11 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v12;
          uint64_t v13 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v13;
          a1[32] = *((unsigned char *)a2 + 32);
          uint64_t v14 = a2 + 5;
          unint64_t v15 = a2[6];
          swift_bridgeObjectRetain();
          if (v15 >= 0x11)
          {
            *((void *)a1 + 5) = *v14;
            *((void *)a1 + 6) = v15;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)v14;
          }
          goto LABEL_203;
        case 1u:
          uint64_t v52 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v52;
          uint64_t v53 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v53;
          a1[32] = *((unsigned char *)a2 + 32);
          uint64_t v54 = a2[6];
          *((void *)a1 + 5) = a2[5];
          *((void *)a1 + 6) = v54;
          uint64_t v55 = a2[8];
          *((void *)a1 + 7) = a2[7];
          *((void *)a1 + 8) = v55;
          unint64_t v56 = a2 + 9;
          unint64_t v57 = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v57 >= 0x11)
          {
            *((void *)a1 + 9) = *v56;
            *((void *)a1 + 10) = v57;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)v56;
          }
          goto LABEL_203;
        case 2u:
          uint64_t v16 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v16;
          uint64_t v17 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v18 = v17[5];
          uint64_t v19 = &a1[v18];
          uint64_t v20 = (char *)a2 + v18;
          uint64_t v21 = sub_1C151DBAC();
          uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v22(v19, v20, v21);
          *(void *)&a1[v17[6]] = *(void *)((char *)a2 + v17[6]);
          uint64_t v23 = v17[7];
          unint64_t v24 = &a1[v23];
          unint64_t v25 = (char *)a2 + v23;
          *(void *)unint64_t v24 = *(void *)v25;
          v24[8] = v25[8];
          uint64_t v26 = v17[8];
          double v27 = &a1[v26];
          uint64_t v28 = (char *)a2 + v26;
          unint64_t v29 = *((void *)v28 + 1);
          if (v29 >= 0x11) {
            goto LABEL_44;
          }
          *(_OWORD *)double v27 = *(_OWORD *)v28;
          goto LABEL_203;
        case 3u:
          uint64_t v58 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v58;
          *((void *)a1 + 2) = a2[2];
          a1[24] = *((unsigned char *)a2 + 24);
          uint64_t v59 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v59;
          *((void *)a1 + 6) = a2[6];
          a1[56] = *((unsigned char *)a2 + 56);
          v398 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v60 = v398[10];
          id v61 = &a1[v60];
          id v62 = (char *)a2 + v60;
          *id v61 = *((unsigned char *)a2 + v60);
          v61[1] = *((unsigned char *)a2 + v60 + 1);
          v394 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v63 = v394[6];
          __dst = &v61[v63];
          uint64_t v64 = &v62[v63];
          id v65 = (int *)type metadata accessor for SharedItem();
          uint64_t v379 = *((void *)v65 - 1);
          double v66 = *(unsigned int (**)(char *, uint64_t, int *))(v379 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v66(v64, 1, v65))
          {
            uint64_t v67 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v64, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            uint64_t v182 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(__dst, v64, v182);
            __dst[v65[5]] = v64[v65[5]];
            uint64_t v183 = v65[6];
            unint64_t v184 = *(void **)&v64[v183];
            *(void *)&__dst[v183] = v184;
            uint64_t v185 = v65[7];
            uint64_t v384 = &v64[v185];
            uint64_t v389 = &__dst[v185];
            uint64_t v186 = sub_1C1515FDC();
            v378 = *(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16);
            id v187 = v184;
            v378(v389, v384, v186);
            (*(void (**)(char *, void, uint64_t, int *))(v379 + 56))(__dst, 0, 1, v65);
          }
          v61[v394[7]] = v62[v394[7]];
          v61[v394[8]] = v62[v394[8]];
          v61[v394[9]] = v62[v394[9]];
          v61[v394[10]] = v62[v394[10]];
          uint64_t v188 = v398[11];
          unint64_t v189 = &a1[v188];
          int v190 = (char *)a2 + v188;
          uint64_t v191 = sub_1C151D2DC();
          uint64_t v192 = *(void *)(v191 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v190, 1, v191))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v189, v190, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v189, v190, v191);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v192 + 56))(v189, 0, 1, v191);
          }
          uint64_t v200 = v398[12];
          int v201 = &a1[v200];
          uint64_t v202 = (void *)((char *)a2 + v200);
          unint64_t v203 = v202[1];
          if (v203 >= 0x11)
          {
            *(void *)int v201 = *v202;
            *((void *)v201 + 1) = v203;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)int v201 = *(_OWORD *)v202;
          }
          uint64_t v204 = v398[13];
          unint64_t v205 = *(void *)((char *)a2 + v204);
          if (v205 >= 2)
          {
            if (v205 == 2)
            {
              *(void *)&a1[v204] = 2;
            }
            else
            {
              *(void *)&a1[v204] = v205;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)&a1[v204] = v205;
          }
          uint64_t v242 = v398[14];
          uint64_t v243 = *(void **)((char *)a2 + v242);
          *(void *)&a1[v242] = v243;
          id v244 = v243;
          goto LABEL_203;
        case 4u:
          uint64_t v30 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v30;
          a1[16] = *((unsigned char *)a2 + 16);
          uint64_t v31 = a2 + 3;
          unint64_t v32 = a2[4];
          if (v32 >= 0x11)
          {
            *((void *)a1 + 3) = *v31;
            *((void *)a1 + 4) = v32;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v31;
          }
          uint64_t v117 = a2[6];
          *((void *)a1 + 5) = a2[5];
          *((void *)a1 + 6) = v117;
          unint64_t v118 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v119 = v118[8];
          uint64_t v120 = &a1[v119];
          uint64_t v121 = (char *)a2 + v119;
          uint64_t v122 = sub_1C1515FDC();
          uint64_t v123 = *(void *)(v122 - 8);
          uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
          swift_bridgeObjectRetain();
          v124(v120, v121, v122);
          v400 = v118;
          uint64_t v125 = v118[9];
          uint64_t v126 = &a1[v125];
          uint64_t v127 = (char *)a2 + v125;
          uint64_t v388 = (void *)v122;
          __dsta = (void (*)(char *, char *, void *))v124;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))((char *)a2 + v125, 1, v122))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
          }
          else
          {
            v124(v126, v127, v122);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v126, 0, 1, v122);
          }
          *(void *)&a1[v118[10]] = *(void *)((char *)a2 + v118[10]);
          *(void *)&a1[v118[11]] = *(void *)((char *)a2 + v118[11]);
          uint64_t v160 = v118[12];
          v161 = &a1[v160];
          v395 = (void *)((char *)a2 + v160);
          uint64_t v162 = type metadata accessor for FeedHeadline(0);
          uint64_t v163 = *(void *)(v162 - 8);
          v164 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v163 + 48);
          swift_retain();
          swift_retain();
          if (v164(v395, 1, v162))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v161, v395, *(void *)(*(void *)(v165 - 8) + 64));
          }
          else
          {
            v377 = (int *)v162;
            uint64_t v171 = v395[1];
            *(void *)v161 = *v395;
            *((void *)v161 + 1) = v171;
            *((void *)v161 + 2) = v395[2];
            v161[24] = *((unsigned char *)v395 + 24);
            uint64_t v172 = v395[5];
            *((void *)v161 + 4) = v395[4];
            *((void *)v161 + 5) = v172;
            *((void *)v161 + 6) = v395[6];
            v161[56] = *((unsigned char *)v395 + 56);
            uint64_t v173 = *(int *)(v162 + 40);
            uint64_t v380 = v161;
            uint64_t v174 = &v161[v173];
            uint64_t v175 = (char *)v395 + v173;
            *uint64_t v174 = *((unsigned char *)v395 + v173);
            v174[1] = *((unsigned char *)v395 + v173 + 1);
            v376 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v176 = v376[6];
            v375 = &v174[v176];
            uint64_t v177 = &v175[v176];
            uint64_t v178 = (int *)type metadata accessor for SharedItem();
            uint64_t v374 = *((void *)v178 - 1);
            uint64_t v179 = *(unsigned int (**)(char *, uint64_t, int *))(v374 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v179(v177, 1, v178))
            {
              uint64_t v180 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v375, v177, *(void *)(*(void *)(v180 - 8) + 64));
            }
            else
            {
              uint64_t v268 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v375, v177, v268);
              v375[v178[5]] = v177[v178[5]];
              uint64_t v269 = v178[6];
              uint64_t v270 = *(void **)&v177[v269];
              *(void *)&v375[v269] = v270;
              uint64_t v271 = v178[7];
              uint64_t v272 = &v375[v271];
              uint64_t v273 = &v177[v271];
              id v274 = v270;
              __dsta(v272, v273, v388);
              (*(void (**)(char *, void, uint64_t, int *))(v374 + 56))(v375, 0, 1, v178);
            }
            v174[v376[7]] = v175[v376[7]];
            v174[v376[8]] = v175[v376[8]];
            v174[v376[9]] = v175[v376[9]];
            v174[v376[10]] = v175[v376[10]];
            uint64_t v275 = v377[11];
            uint64_t v276 = (char *)v380 + v275;
            uint64_t v277 = (char *)v395 + v275;
            uint64_t v278 = sub_1C151D2DC();
            uint64_t v279 = *(void *)(v278 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v279 + 48))(v277, 1, v278))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v276, v277, *(void *)(*(void *)(v280 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v279 + 16))(v276, v277, v278);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v279 + 56))(v276, 0, 1, v278);
            }
            uint64_t v281 = v377[12];
            uint64_t v282 = (void *)((char *)v380 + v281);
            uint64_t v283 = (void *)((char *)v395 + v281);
            unint64_t v284 = v283[1];
            if (v284 >= 0x11)
            {
              *uint64_t v282 = *v283;
              v282[1] = v284;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v282 = *(_OWORD *)v283;
            }
            uint64_t v285 = v377[13];
            unint64_t v286 = *(void *)((char *)v395 + v285);
            if (v286 >= 2)
            {
              if (v286 == 2)
              {
                *(void *)((char *)v380 + v285) = 2;
              }
              else
              {
                *(void *)((char *)v380 + v285) = v286;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v380 + v285) = v286;
            }
            uint64_t v309 = v377[14];
            uint64_t v310 = *(void **)((char *)v395 + v309);
            *(void *)((char *)v380 + v309) = v310;
            uint64_t v311 = *(void (**)(void *, void, uint64_t, int *))(v163 + 56);
            id v312 = v310;
            v311(v380, 0, 1, v377);
          }
          uint64_t v313 = v400[13];
          uint64_t v314 = &a1[v313];
          uint64_t v315 = (void *)((char *)a2 + v313);
          uint64_t v316 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v317 = *(void *)(v316 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v317 + 48))(v315, 1, v316))
          {
            sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v314, v315, *(void *)(*(void *)(v318 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v320 = *v315;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v321 = v315[1];
              *(void *)uint64_t v314 = v320;
              *((void *)v314 + 1) = v321;
              uint64_t v322 = type metadata accessor for GenericDataVisualization();
              uint64_t v323 = *(int *)(v322 + 20);
              v396 = &v314[v323];
              uint64_t v324 = (char *)v315 + v323;
              swift_bridgeObjectRetain();
              __dsta(v396, v324, v388);
              *(void *)&v314[*(int *)(v322 + 24)] = *(uint64_t *)((char *)v315 + *(int *)(v322 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              *(void *)uint64_t v314 = v320;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v317 + 56))(v314, 0, 1, v316);
          }
          a1[v400[14]] = *((unsigned char *)a2 + v400[14]);
          goto LABEL_203;
        case 5u:
          uint64_t v68 = (char *)*a2;
          uint64_t v69 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v69;
          *((void *)a1 + 2) = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          *((void *)a1 + 4) = a2[4];
          a1[40] = *((unsigned char *)a2 + 40);
          uint64_t v70 = (void *)a2[7];
          *((void *)a1 + 6) = a2[6];
          *((void *)a1 + 7) = v70;
          a1[64] = *((unsigned char *)a2 + 64);
          uint64_t v71 = a2[10];
          uint64_t v72 = v68;
          swift_bridgeObjectRetain();
          id v73 = v70;
          if (v71 == 1)
          {
            long long v74 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v74;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *((void *)a1 + 9) = a2[9];
            *((void *)a1 + 10) = v71;
            uint64_t v130 = a2[12];
            *((void *)a1 + 11) = a2[11];
            *((void *)a1 + 12) = v130;
            id v132 = (void *)a2[13];
            uint64_t v131 = a2[14];
            *((void *)a1 + 13) = v132;
            *((void *)a1 + 14) = v131;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v133 = v132;
          }
          id v134 = a2 + 15;
          unint64_t v135 = a2[16];
          if (v135 >= 0x11)
          {
            *((void *)a1 + 15) = *v134;
            *((void *)a1 + 16) = v135;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v134;
          }
          a1[136] = *((unsigned char *)a2 + 136);
          goto LABEL_203;
        case 6u:
          int v75 = *((unsigned __int8 *)a2 + 281);
          if (v75 == 2)
          {
            uint64_t v212 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v212;
            *((void *)a1 + 2) = a2[2];
            a1[24] = *((unsigned char *)a2 + 24);
            *((void *)a1 + 4) = a2[4];
            a1[40] = *((unsigned char *)a2 + 40);
            uint64_t v213 = a2[7];
            *((void *)a1 + 6) = a2[6];
            *((void *)a1 + 7) = v213;
            uint64_t v214 = a2[9];
            *((void *)a1 + 8) = a2[8];
            *((void *)a1 + 9) = v214;
            uint64_t v215 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v215 != 1)
            {
              *((void *)a1 + 10) = a2[10];
              *((void *)a1 + 11) = v215;
              uint64_t v252 = a2[15];
              swift_bridgeObjectRetain();
              if (v252)
              {
                uint64_t v253 = a2[16];
                *((void *)a1 + 15) = v252;
                *((void *)a1 + 16) = v253;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v252 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 12), v252);
                *((void *)a1 + 17) = a2[17];
              }
              else
              {
                long long v343 = *((_OWORD *)a2 + 7);
                *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
                *((_OWORD *)a1 + 7) = v343;
                *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
              }
              a1[144] = *((unsigned char *)a2 + 144);
              goto LABEL_174;
            }
            uint64_t v216 = a1 + 80;
            uint64_t v217 = a2 + 10;
            long long v218 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v218;
            a1[144] = *((unsigned char *)a2 + 144);
          }
          else
          {
            if (v75 != 1)
            {
              uint64_t v219 = (char *)*a2;
              uint64_t v220 = a2[1];
              *(void *)a1 = *a2;
              *((void *)a1 + 1) = v220;
              *((void *)a1 + 2) = a2[2];
              *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
              *((void *)a1 + 4) = a2[4];
              a1[40] = *((unsigned char *)a2 + 40);
              uint64_t v221 = (void *)a2[7];
              *((void *)a1 + 6) = a2[6];
              *((void *)a1 + 7) = v221;
              a1[64] = *((unsigned char *)a2 + 64);
              uint64_t v222 = a2[10];
              uint64_t v223 = v219;
              swift_bridgeObjectRetain();
              id v224 = v221;
              if (v222 == 1)
              {
                long long v225 = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
                *(_OWORD *)(a1 + 88) = v225;
                *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
              }
              else
              {
                *((void *)a1 + 9) = a2[9];
                *((void *)a1 + 10) = v222;
                uint64_t v254 = a2[12];
                *((void *)a1 + 11) = a2[11];
                *((void *)a1 + 12) = v254;
                uint64_t v256 = (void *)a2[13];
                uint64_t v255 = a2[14];
                *((void *)a1 + 13) = v256;
                *((void *)a1 + 14) = v255;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v257 = v256;
              }
              uint64_t v258 = a2 + 15;
              unint64_t v259 = a2[16];
              if (v259 >= 0x11)
              {
                *((void *)a1 + 15) = *v258;
                *((void *)a1 + 16) = v259;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)v258;
              }
              a1[136] = *((unsigned char *)a2 + 136);
              goto LABEL_174;
            }
            long long v76 = (char *)*a2;
            uint64_t v77 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v77;
            *((void *)a1 + 2) = a2[2];
            *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
            *((void *)a1 + 4) = a2[4];
            a1[40] = *((unsigned char *)a2 + 40);
            uint64_t v78 = (void *)a2[7];
            *((void *)a1 + 6) = a2[6];
            *((void *)a1 + 7) = v78;
            a1[64] = *((unsigned char *)a2 + 64);
            uint64_t v79 = a2[10];
            CGRect v80 = v76;
            swift_bridgeObjectRetain();
            id v81 = v78;
            if (v79 == 1)
            {
              long long v82 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 88) = v82;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              *((void *)a1 + 9) = a2[9];
              *((void *)a1 + 10) = v79;
              uint64_t v246 = a2[12];
              *((void *)a1 + 11) = a2[11];
              *((void *)a1 + 12) = v246;
              uint64_t v248 = (void *)a2[13];
              uint64_t v247 = a2[14];
              *((void *)a1 + 13) = v248;
              *((void *)a1 + 14) = v247;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v249 = v248;
            }
            uint64_t v250 = a2 + 15;
            unint64_t v251 = a2[16];
            if (v251 >= 0x11)
            {
              *((void *)a1 + 15) = *v250;
              *((void *)a1 + 16) = v251;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v250;
            }
            uint64_t v217 = a2 + 18;
            uint64_t v260 = (void *)a2[18];
            a1[136] = *((unsigned char *)a2 + 136);
            if (v260)
            {
              uint64_t v261 = a2[19];
              uint64_t v262 = a2[20];
              *((void *)a1 + 18) = v260;
              *((void *)a1 + 19) = v261;
              *((void *)a1 + 20) = v262;
              *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
              *((void *)a1 + 22) = a2[22];
              a1[184] = *((unsigned char *)a2 + 184);
              uint64_t v263 = (void *)a2[25];
              *((void *)a1 + 24) = a2[24];
              *((void *)a1 + 25) = v263;
              a1[208] = *((unsigned char *)a2 + 208);
              uint64_t v264 = a2[28];
              id v265 = v260;
              swift_bridgeObjectRetain();
              id v266 = v263;
              if (v264 == 1)
              {
                long long v267 = *(_OWORD *)(a2 + 29);
                *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
                *(_OWORD *)(a1 + 232) = v267;
                *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
              }
              else
              {
                *((void *)a1 + 27) = a2[27];
                *((void *)a1 + 28) = v264;
                uint64_t v291 = a2[30];
                *((void *)a1 + 29) = a2[29];
                *((void *)a1 + 30) = v291;
                uint64_t v293 = (void *)a2[31];
                uint64_t v292 = a2[32];
                *((void *)a1 + 31) = v293;
                *((void *)a1 + 32) = v292;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v294 = v293;
              }
              uint64_t v295 = a2 + 33;
              unint64_t v296 = a2[34];
              if (v296 >= 0x11)
              {
                *((void *)a1 + 33) = *v295;
                *((void *)a1 + 34) = v296;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 264) = *(_OWORD *)v295;
              }
              a1[280] = *((unsigned char *)a2 + 280);
LABEL_174:
              a1[281] = v75;
              goto LABEL_203;
            }
            uint64_t v216 = a1 + 144;
            long long v287 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v287;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            long long v288 = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
            *((_OWORD *)a1 + 12) = v288;
            long long v289 = *((_OWORD *)a2 + 14);
            *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 14) = v289;
          }
          long long v290 = v217[1];
          *uint64_t v216 = *v217;
          v216[1] = v290;
          goto LABEL_174;
        case 7u:
          uint64_t v83 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v83;
          *((void *)a1 + 2) = a2[2];
          a1[24] = *((unsigned char *)a2 + 24);
          *((void *)a1 + 4) = a2[4];
          a1[40] = *((unsigned char *)a2 + 40);
          uint64_t v84 = a2[7];
          *((void *)a1 + 6) = a2[6];
          *((void *)a1 + 7) = v84;
          uint64_t v85 = a2[9];
          *((void *)a1 + 8) = a2[8];
          *((void *)a1 + 9) = v85;
          uint64_t v86 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v86 == 1)
          {
            long long v87 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v87;
            a1[144] = *((unsigned char *)a2 + 144);
            long long v88 = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 6) = v88;
          }
          else
          {
            *((void *)a1 + 10) = a2[10];
            *((void *)a1 + 11) = v86;
            uint64_t v136 = a2[15];
            swift_bridgeObjectRetain();
            if (v136)
            {
              uint64_t v137 = a2[16];
              *((void *)a1 + 15) = v136;
              *((void *)a1 + 16) = v137;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v136 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 12), v136);
              *((void *)a1 + 17) = a2[17];
            }
            else
            {
              long long v245 = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 7) = v245;
              *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            }
            a1[144] = *((unsigned char *)a2 + 144);
          }
          goto LABEL_203;
        case 8u:
          uint64_t v89 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v89;
          uint64_t v90 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          uint64_t v91 = &a1[v90];
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = *(void *)((char *)a2 + v90 + 8);
          *(void *)uint64_t v91 = *(void *)((char *)a2 + v90);
          *((void *)v91 + 1) = v93;
          uint64_t v94 = *(void *)((char *)a2 + v90 + 24);
          *((void *)v91 + 2) = *(void *)((char *)a2 + v90 + 16);
          *((void *)v91 + 3) = v94;
          uint64_t v399 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v95 = *(int *)(v399 + 24);
          uint64_t v387 = &v91[v95];
          uint64_t v96 = &v92[v95];
          uint64_t v97 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v383 = *(void *)(v97 - 8);
          uint64_t v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v383 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v98(v96, 1, v97))
          {
            sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v387, v96, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            uint64_t v194 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16))(v387, v96, v194);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v383 + 56))(v387, 0, 1, v97);
          }
          *(void *)&v91[*(int *)(v399 + 28)] = *(void *)&v92[*(int *)(v399 + 28)];
          swift_bridgeObjectRetain();
          goto LABEL_203;
        case 9u:
          uint64_t v33 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v33;
          uint64_t v34 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v34;
          uint64_t v35 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v35)
          {
            uint64_t v36 = a2[8];
            *((void *)a1 + 7) = v35;
            *((void *)a1 + 8) = v36;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 4), v35);
          }
          else
          {
            long long v155 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v155;
            *((void *)a1 + 8) = a2[8];
          }
          uint64_t v156 = a1 + 72;
          long long v157 = a2 + 9;
          uint64_t v158 = a2[12];
          if (v158)
          {
            uint64_t v159 = a2[13];
            *((void *)a1 + 12) = v158;
            *((void *)a1 + 13) = v159;
            (**(void (***)(_OWORD *, _OWORD *))(v158 - 8))(v156, v157);
          }
          else
          {
            long long v166 = *(_OWORD *)(a2 + 11);
            *uint64_t v156 = *v157;
            *(_OWORD *)(a1 + 88) = v166;
            *((void *)a1 + 13) = a2[13];
          }
          uint64_t v167 = a1 + 112;
          uint64_t v168 = a2 + 14;
          uint64_t v169 = a2[17];
          if (v169)
          {
            uint64_t v170 = a2[18];
            *((void *)a1 + 17) = v169;
            *((void *)a1 + 18) = v170;
            (**(void (***)(_OWORD *, _OWORD *))(v169 - 8))(v167, v168);
          }
          else
          {
            long long v181 = *((_OWORD *)a2 + 8);
            *uint64_t v167 = *v168;
            *((_OWORD *)a1 + 8) = v181;
            *((void *)a1 + 18) = a2[18];
          }
          goto LABEL_203;
        case 0xAu:
          uint64_t v100 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v100;
          uint64_t v101 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v102 = v101[5];
          uint64_t v103 = &a1[v102];
          uint64_t v104 = (char *)a2 + v102;
          uint64_t v105 = sub_1C151959C();
          double v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
          swift_bridgeObjectRetain();
          v106(v103, v104, v105);
          *(void *)&a1[v101[6]] = *(void *)((char *)a2 + v101[6]);
          uint64_t v107 = v101[7];
          uint64_t v108 = &a1[v107];
          double v109 = (char *)a2 + v107;
          *(void *)uint64_t v108 = *(void *)v109;
          v108[8] = v109[8];
          uint64_t v110 = v101[8];
          double v27 = &a1[v110];
          uint64_t v28 = (char *)a2 + v110;
          unint64_t v29 = *((void *)v28 + 1);
          if (v29 >= 0x11)
          {
LABEL_44:
            *(void *)double v27 = *(void *)v28;
            *((void *)v27 + 1) = v29;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)double v27 = *(_OWORD *)v28;
          }
          goto LABEL_203;
        case 0xBu:
          *(void *)a1 = *a2;
          swift_retain();
          goto LABEL_203;
        case 0xCu:
          uint64_t v37 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v37;
          uint64_t v38 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v38;
          a1[32] = *((unsigned char *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_203;
        case 0xDu:
          uint64_t v111 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v111;
          a1[16] = *((unsigned char *)a2 + 16);
          uint64_t v112 = a2 + 3;
          unint64_t v113 = a2[4];
          if (v113 >= 0x11)
          {
            *((void *)a1 + 3) = *v112;
            *((void *)a1 + 4) = v113;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v112;
          }
          uint64_t v138 = a2[6];
          *((void *)a1 + 5) = a2[5];
          *((void *)a1 + 6) = v138;
          id v139 = (void *)a2[8];
          *((void *)a1 + 7) = a2[7];
          *((void *)a1 + 8) = v139;
          a1[72] = *((unsigned char *)a2 + 72);
          *((void *)a1 + 10) = a2[10];
          uint64_t v140 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v141 = v139;
          swift_bridgeObjectRetain();
          if (v140)
          {
            uint64_t v142 = a2[15];
            *((void *)a1 + 14) = v140;
            *((void *)a1 + 15) = v142;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v140 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 11), v140);
          }
          else
          {
            long long v195 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 104) = v195;
            *((void *)a1 + 15) = a2[15];
          }
          uint64_t v196 = a1 + 128;
          uint64_t v197 = a2 + 16;
          uint64_t v198 = a2[19];
          if (v198)
          {
            uint64_t v199 = a2[20];
            *((void *)a1 + 19) = v198;
            *((void *)a1 + 20) = v199;
            (**(void (***)(_OWORD *, _OWORD *))(v198 - 8))(v196, v197);
          }
          else
          {
            long long v206 = *((_OWORD *)a2 + 9);
            *uint64_t v196 = *v197;
            *((_OWORD *)a1 + 9) = v206;
            *((void *)a1 + 20) = a2[20];
          }
          uint64_t v207 = a1 + 168;
          uint64_t v208 = a2 + 21;
          uint64_t v209 = a2[24];
          if (v209)
          {
            uint64_t v210 = a2[25];
            *((void *)a1 + 24) = v209;
            *((void *)a1 + 25) = v210;
            (**(void (***)(_OWORD *, _OWORD *))(v209 - 8))(v207, v208);
          }
          else
          {
            long long v211 = *(_OWORD *)(a2 + 23);
            *uint64_t v207 = *v208;
            *(_OWORD *)(a1 + 184) = v211;
            *((void *)a1 + 25) = a2[25];
          }
          goto LABEL_203;
        case 0xEu:
          uint64_t v39 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v39;
          a1[16] = *((unsigned char *)a2 + 16);
          uint64_t v40 = a2 + 3;
          unint64_t v41 = a2[4];
          if (v41 >= 0x11)
          {
            *((void *)a1 + 3) = *v40;
            *((void *)a1 + 4) = v41;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v40;
          }
          uint64_t v129 = a2[6];
          *((void *)a1 + 5) = a2[5];
          *((void *)a1 + 6) = v129;
          *((void *)a1 + 7) = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_203;
        case 0xFu:
          uint64_t v114 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v114;
          a1[16] = *((unsigned char *)a2 + 16);
          id v115 = a2 + 3;
          unint64_t v116 = a2[4];
          if (v116 >= 0x11)
          {
            *((void *)a1 + 3) = *v115;
            *((void *)a1 + 4) = v116;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v115;
          }
          break;
        case 0x10u:
          uint64_t v42 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v42;
          uint64_t v397 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v397;
          uint64_t v43 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v43;
          *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
          uint64_t v44 = a2[10];
          *((void *)a1 + 9) = a2[9];
          *((void *)a1 + 10) = v44;
          uint64_t v45 = a2[12];
          *((void *)a1 + 11) = a2[11];
          *((void *)a1 + 12) = v45;
          *((void *)a1 + 13) = a2[13];
          a1[112] = *((unsigned char *)a2 + 112);
          uint64_t v46 = a2[16];
          *((void *)a1 + 15) = a2[15];
          *((void *)a1 + 16) = v46;
          a1[136] = *((unsigned char *)a2 + 136);
          uint64_t v47 = a2[19];
          *((void *)a1 + 18) = a2[18];
          *((void *)a1 + 19) = v47;
          uint64_t v48 = a2[21];
          *((void *)a1 + 20) = a2[20];
          *((void *)a1 + 21) = v48;
          a1[184] = *((unsigned char *)a2 + 184);
          *((void *)a1 + 22) = a2[22];
          uint64_t v49 = a2[25];
          *((void *)a1 + 24) = a2[24];
          *((void *)a1 + 25) = v49;
          a1[224] = *((unsigned char *)a2 + 224);
          uint64_t v50 = a2[27];
          *((void *)a1 + 26) = a2[26];
          *((void *)a1 + 27) = v50;
          v386 = a2 + 29;
          unint64_t v51 = a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v51 >= 0x11)
          {
            *((void *)a1 + 29) = *v386;
            *((void *)a1 + 30) = v51;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 232) = *(_OWORD *)v386;
          }
          goto LABEL_203;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_204;
      }
      break;
    case 7u:
      uint64_t v10 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v10;
      swift_bridgeObjectRetain();
      goto LABEL_204;
    default:
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v6;
      *((void *)a1 + 2) = a2[2];
      swift_bridgeObjectRetain();
      goto LABEL_204;
  }
  uint64_t v143 = a2[6];
  *((void *)a1 + 5) = a2[5];
  *((void *)a1 + 6) = v143;
  uint64_t v144 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v145 = &a1[v144];
  uint64_t v146 = (void *)((char *)a2 + v144);
  *(void *)&a1[v144] = *v146;
  uint64_t v147 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v148 = &v145[v147];
  uint64_t v149 = (void *)((char *)v146 + v147);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v229 = type metadata accessor for PuzzleStatisticValue(0);
      int v230 = swift_getEnumCaseMultiPayload();
      if (v230 == 5)
      {
        uint64_t v231 = type metadata accessor for PuzzleStreak();
        uint64_t v232 = *(void *)(v231 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v232 + 48))(v149, 1, v231))
        {
LABEL_112:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v148, v149, *(void *)(*(void *)(v233 - 8) + 64));
          goto LABEL_181;
        }
      }
      else
      {
        if (v230 != 4)
        {
          memcpy(v148, v149, *(void *)(*(void *)(v229 - 8) + 64));
          goto LABEL_182;
        }
        uint64_t v231 = type metadata accessor for PuzzleStreak();
        uint64_t v232 = *(void *)(v231 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v232 + 48))(v149, 1, v231)) {
          goto LABEL_112;
        }
      }
      uint64_t v351 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v351 - 8) + 16))(v148, v149, v351);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v232 + 56))(v148, 0, 1, v231);
LABEL_181:
      swift_storeEnumTagMultiPayload();
LABEL_182:
      uint64_t v352 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v353 = *(int *)(v352 + 20);
      uint64_t v354 = &v148[v353];
      v355 = (char *)v149 + v353;
      int v356 = swift_getEnumCaseMultiPayload();
      if (v356 == 5)
      {
        uint64_t v393 = v148;
        uint64_t v360 = type metadata accessor for PuzzleStreak();
        uint64_t v361 = *(void *)(v360 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v361 + 48))(v355, 1, v360))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v354, v355, *(void *)(*(void *)(v362 - 8) + 64));
        }
        else
        {
          uint64_t v364 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 16))(v354, v355, v364);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v361 + 56))(v354, 0, 1, v360);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v148 = v393;
      }
      else if (v356 == 4)
      {
        uint64_t v392 = v148;
        uint64_t v357 = type metadata accessor for PuzzleStreak();
        uint64_t v358 = *(void *)(v357 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v358 + 48))(v355, 1, v357))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v354, v355, *(void *)(*(void *)(v359 - 8) + 64));
        }
        else
        {
          uint64_t v363 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v363 - 8) + 16))(v354, v355, v363);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v358 + 56))(v354, 0, 1, v357);
        }
        uint64_t v148 = v392;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v354, v355, *(void *)(*(void *)(v229 - 8) + 64));
      }
      uint64_t v365 = *(int *)(v352 + 24);
      v366 = &v148[v365];
      v367 = (char *)v149 + v365;
      int v368 = swift_getEnumCaseMultiPayload();
      if (v368 == 5)
      {
        uint64_t v369 = type metadata accessor for PuzzleStreak();
        uint64_t v370 = *(void *)(v369 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v370 + 48))(v367, 1, v369))
        {
LABEL_198:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v366, v367, *(void *)(*(void *)(v371 - 8) + 64));
          goto LABEL_201;
        }
      }
      else
      {
        if (v368 != 4)
        {
          memcpy(v366, v367, *(void *)(*(void *)(v229 - 8) + 64));
          goto LABEL_202;
        }
        uint64_t v369 = type metadata accessor for PuzzleStreak();
        uint64_t v370 = *(void *)(v369 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v370 + 48))(v367, 1, v369)) {
          goto LABEL_198;
        }
      }
      uint64_t v372 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v366, v367, v372);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v370 + 56))(v366, 0, 1, v369);
      goto LABEL_201;
    case 2u:
      uint64_t v226 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v227 = *((void *)v226 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v227 + 48))(v149, 1, v226))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v148, v149, *(void *)(*(void *)(v228 - 8) + 64));
      }
      else
      {
        uint64_t v297 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v297 - 8) + 16))(v148, v149, v297);
        uint64_t v298 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v299 = v298[5];
        uint64_t v300 = &v148[v299];
        uint64_t v301 = (void *)((char *)v149 + v299);
        uint64_t v302 = v301[1];
        *(void *)uint64_t v300 = *v301;
        *((void *)v300 + 1) = v302;
        uint64_t v303 = v298[6];
        char v390 = v148;
        uint64_t v304 = &v148[v303];
        uint64_t v305 = (void *)((char *)v149 + v303);
        uint64_t v306 = v305[1];
        *(void *)uint64_t v304 = *v305;
        *((void *)v304 + 1) = v306;
        v307 = v305 + 2;
        unint64_t v308 = v305[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v308 >> 60 == 15)
        {
          *((_OWORD *)v304 + 1) = *(_OWORD *)v307;
        }
        else
        {
          uint64_t v344 = *v307;
          sub_1BFE95820(*v307, v308);
          *((void *)v304 + 2) = v344;
          *((void *)v304 + 3) = v308;
        }
        *(void *)&v390[v298[7]] = *(void *)((char *)v149 + v298[7]);
        *(void *)&v390[v298[8]] = *(void *)((char *)v149 + v298[8]);
        *(void *)&v390[v226[5]] = *(void *)((char *)v149 + v226[5]);
        *(void *)&v390[v226[6]] = *(void *)((char *)v149 + v226[6]);
        uint64_t v345 = v226[7];
        uint64_t v346 = &v390[v345];
        uint64_t v347 = (void *)((char *)v149 + v345);
        uint64_t v348 = v347[1];
        *(void *)uint64_t v346 = *v347;
        *((void *)v346 + 1) = v348;
        uint64_t v349 = *(void (**)(char *, void, uint64_t, int *))(v227 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v349(v390, 0, 1, v226);
      }
      goto LABEL_202;
    case 3u:
      uint64_t v234 = v149[1];
      *(void *)uint64_t v148 = *v149;
      *((void *)v148 + 1) = v234;
      v148[16] = *((unsigned char *)v149 + 16);
      v235 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v236 = v235[6];
      uint64_t v237 = &v148[v236];
      uint64_t v238 = (char *)v149 + v236;
      uint64_t v239 = type metadata accessor for PuzzleStreak();
      uint64_t v385 = *(void *)(v239 - 8);
      uint64_t v240 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v385 + 48);
      if (v240(v238, 1, v239))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v237, v238, *(void *)(*(void *)(v241 - 8) + 64));
      }
      else
      {
        uint64_t v325 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 16))(v237, v238, v325);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v385 + 56))(v237, 0, 1, v239);
      }
      uint64_t v326 = v235[7];
      char v391 = v148;
      uint64_t v327 = &v148[v326];
      uint64_t v328 = (char *)v149 + v326;
      if (v240((char *)v149 + v326, 1, v239))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v327, v328, *(void *)(*(void *)(v329 - 8) + 64));
      }
      else
      {
        uint64_t v330 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v330 - 8) + 16))(v327, v328, v330);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v385 + 56))(v327, 0, 1, v239);
      }
      uint64_t v331 = v235[8];
      uint64_t v332 = &v391[v331];
      v333 = (_OWORD *)((char *)v149 + v331);
      long long v334 = v333[1];
      *(_OWORD *)uint64_t v332 = *v333;
      *((_OWORD *)v332 + 1) = v334;
      *(_OWORD *)(v332 + 25) = *(_OWORD *)((char *)v333 + 25);
      uint64_t v335 = v235[9];
      uint64_t v336 = &v391[v335];
      uint64_t v337 = (_OWORD *)((char *)v149 + v335);
      *(_OWORD *)(v336 + 25) = *(_OWORD *)((char *)v337 + 25);
      long long v338 = v337[1];
      *(_OWORD *)uint64_t v336 = *v337;
      *((_OWORD *)v336 + 1) = v338;
      uint64_t v339 = v235[10];
      v340 = &v391[v339];
      uint64_t v341 = (_OWORD *)((char *)v149 + v339);
      long long v342 = v341[1];
      *(_OWORD *)v340 = *v341;
      *((_OWORD *)v340 + 1) = v342;
      *(_OWORD *)(v340 + 25) = *(_OWORD *)((char *)v341 + 25);
      goto LABEL_202;
    default:
      uint64_t v150 = type metadata accessor for PuzzleStatisticValue(0);
      int v151 = swift_getEnumCaseMultiPayload();
      if (v151 == 5)
      {
        uint64_t v152 = type metadata accessor for PuzzleStreak();
        uint64_t v153 = *(void *)(v152 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v153 + 48))(v149, 1, v152)) {
          goto LABEL_67;
        }
      }
      else
      {
        if (v151 != 4)
        {
          memcpy(v148, v149, *(void *)(*(void *)(v150 - 8) + 64));
          goto LABEL_202;
        }
        uint64_t v152 = type metadata accessor for PuzzleStreak();
        uint64_t v153 = *(void *)(v152 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v153 + 48))(v149, 1, v152))
        {
LABEL_67:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v148, v149, *(void *)(*(void *)(v154 - 8) + 64));
          goto LABEL_201;
        }
      }
      uint64_t v350 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v350 - 8) + 16))(v148, v149, v350);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v148, 0, 1, v152);
LABEL_201:
      swift_storeEnumTagMultiPayload();
LABEL_202:
      swift_storeEnumTagMultiPayload();
LABEL_203:
      swift_storeEnumTagMultiPayload();
LABEL_204:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void destroy for ContentValidationType(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
LABEL_5:
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
LABEL_2:
      swift_unknownObjectRelease();
      break;
    case 5u:
      id v2 = *(id *)a1;
LABEL_9:

      break;
    case 6u:
      type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 48) < 0x11uLL) {
            return;
          }
          goto LABEL_5;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 80) < 0x11uLL) {
            return;
          }
          goto LABEL_5;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t v3 = type metadata accessor for FeedBannerAd();
          uint64_t v4 = a1 + *(int *)(v3 + 20);
          uint64_t v5 = sub_1C151DBAC();
          goto LABEL_64;
        case 3u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v6 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v7 = a1 + v6[10];
          uint64_t v8 = v7 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          uint64_t v9 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
          {
            uint64_t v10 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);

            uint64_t v11 = v8 + *(int *)(v9 + 28);
            uint64_t v12 = sub_1C1515FDC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
          }
          uint64_t v13 = a1 + v6[11];
          uint64_t v14 = sub_1C151D2DC();
          uint64_t v15 = *(void *)(v14 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
            (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
          }
          if (*(void *)(a1 + v6[12] + 8) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + v6[13]) >= 3uLL) {
            swift_unknownObjectRelease();
          }
          id v2 = *(id *)(a1 + v6[14]);
          goto LABEL_9;
        case 4u:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v16 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v17 = a1 + v16[8];
          uint64_t v18 = sub_1C1515FDC();
          uint64_t v19 = *(void *)(v18 - 8);
          uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
          v20(v17, v18);
          uint64_t v21 = a1 + v16[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v18)) {
            v20(v21, v18);
          }
          swift_release();
          swift_release();
          uint64_t v22 = a1 + v16[12];
          uint64_t v23 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v23 - 1) + 48))(v22, 1, v23))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v24 = v23[10];
            uint64_t v25 = v22 + v24 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            uint64_t v26 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
            {
              uint64_t v27 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);

              v20(v25 + *(int *)(v26 + 28), v18);
            }
            uint64_t v28 = v22 + v23[11];
            uint64_t v29 = sub_1C151D2DC();
            uint64_t v30 = *(void *)(v29 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
              (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
            }
            if (*(void *)(v22 + v23[12] + 8) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            if (*(void *)(v22 + v23[13]) >= 3uLL) {
              swift_unknownObjectRelease();
            }
          }
          uint64_t v31 = a1 + v16[13];
          uint64_t v32 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32)) {
            return;
          }
          if (swift_getEnumCaseMultiPayload() != 1) {
            goto LABEL_66;
          }
          swift_bridgeObjectRelease();
          uint64_t v33 = type metadata accessor for GenericDataVisualization();
          v20(v31 + *(int *)(v33 + 20), v18);
          goto LABEL_5;
        case 5u:
          goto LABEL_47;
        case 6u:
          int v34 = *(unsigned __int8 *)(a1 + 281);
          if (v34 == 2) {
            goto LABEL_51;
          }
          if (v34 == 1)
          {

            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (*(void *)(a1 + 128) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            uint64_t v42 = *(void **)(a1 + 144);
            if (v42)
            {

              swift_bridgeObjectRelease();
              if (*(void *)(a1 + 224) != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              if (*(void *)(a1 + 272) >= 0x11uLL) {
                goto LABEL_5;
              }
            }
          }
          else
          {
            if (*(unsigned char *)(a1 + 281)) {
              return;
            }
LABEL_47:

            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (*(void *)(a1 + 128) >= 0x11uLL) {
              goto LABEL_5;
            }
          }
          break;
        case 7u:
LABEL_51:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 88) == 1) {
            return;
          }
          swift_bridgeObjectRelease();
          if (!*(void *)(a1 + 120)) {
            return;
          }
          uint64_t v35 = a1 + 96;
          goto LABEL_77;
        case 8u:
          swift_bridgeObjectRelease();
          uint64_t v36 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
          uint64_t v38 = type metadata accessor for FormatCustomItem.Action();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38))
          {
            uint64_t v39 = sub_1C1515FDC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v37, v39);
          }
          goto LABEL_5;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 56)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          }
          if (*(void *)(a1 + 96)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 72);
          }
          if (!*(void *)(a1 + 136)) {
            return;
          }
          uint64_t v35 = a1 + 112;
          goto LABEL_77;
        case 0xAu:
          swift_bridgeObjectRelease();
          uint64_t v3 = type metadata accessor for FeedEngagementBanner();
          uint64_t v4 = a1 + *(int *)(v3 + 20);
          uint64_t v5 = sub_1C151959C();
LABEL_64:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
          if (*(void *)(a1 + *(int *)(v3 + 32) + 8) < 0x11uLL) {
            return;
          }
          goto LABEL_5;
        case 0xBu:
LABEL_66:
          swift_release();
          return;
        case 0xCu:
          goto LABEL_82;
        case 0xDu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 112)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          }
          if (*(void *)(a1 + 152)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 128);
          }
          if (!*(void *)(a1 + 192)) {
            return;
          }
          uint64_t v35 = a1 + 168;
LABEL_77:
          __swift_destroy_boxed_opaque_existential_1(v35);
          return;
        case 0xEu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
LABEL_82:
          swift_bridgeObjectRelease();
          goto LABEL_2;
        case 0xFu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v40 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          uint64_t v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_107;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                uint64_t v44 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v41, 1, v44))
                {
                  uint64_t v45 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v41, v45);
                }
              }
              uint64_t v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v47 = v41 + *(int *)(v46 + 20);
              int v48 = swift_getEnumCaseMultiPayload();
              if (v48 == 5 || v48 == 4)
              {
                uint64_t v49 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v47, 1, v49))
                {
                  uint64_t v50 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v47, v50);
                }
              }
              v41 += *(int *)(v46 + 24);
LABEL_107:
              int v51 = swift_getEnumCaseMultiPayload();
              if (v51 == 5 || v51 == 4)
              {
                uint64_t v52 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v41, 1, v52))goto LABEL_120; {
              }
                }
              return;
            case 2u:
              uint64_t v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v41, 1, v53))
              {
                return;
              }
              uint64_t v54 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v41, v54);
              uint64_t v55 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              uint64_t v56 = v41 + *(int *)(v55 + 24);
              swift_bridgeObjectRelease();
              unint64_t v57 = *(void *)(v56 + 24);
              if (v57 >> 60 != 15) {
                sub_1BFE95664(*(void *)(v56 + 16), v57);
              }
              swift_bridgeObjectRelease();
              goto LABEL_5;
            case 3u:
              uint64_t v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v59 = v41 + *(int *)(v58 + 24);
              uint64_t v60 = type metadata accessor for PuzzleStreak();
              id v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48);
              if (!v61(v59, 1, v60))
              {
                uint64_t v62 = sub_1C151555C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v59, v62);
              }
              v41 += *(int *)(v58 + 28);
              if (v61(v41, 1, v60)) {
                return;
              }
LABEL_120:
              uint64_t v63 = sub_1C151555C();
              uint64_t v64 = *(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);
              v64(v41, v63);
              return;
            default:
              return;
          }
        case 0x10u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 240) < 0x11uLL) {
            return;
          }
          goto LABEL_5;
        default:
          return;
      }
      break;
    default:
      return;
  }
}

void *initializeWithCopy for ContentValidationType(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_202;
    case 5u:
      uint64_t v5 = (void *)*a2;
      *a1 = *a2;
      id v6 = v5;
      goto LABEL_202;
    case 6u:
      uint64_t v8 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = a2[1];
          *a1 = *a2;
          a1[1] = v9;
          uint64_t v10 = a2[3];
          a1[2] = a2[2];
          a1[3] = v10;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v11 = a2 + 5;
          unint64_t v12 = a2[6];
          swift_bridgeObjectRetain();
          if (v12 >= 0x11)
          {
            a1[5] = *v11;
            a1[6] = v12;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 5) = *(_OWORD *)v11;
          }
          goto LABEL_201;
        case 1u:
          uint64_t v49 = a2[1];
          *a1 = *a2;
          a1[1] = v49;
          uint64_t v50 = a2[3];
          a1[2] = a2[2];
          a1[3] = v50;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v51 = a2[6];
          a1[5] = a2[5];
          a1[6] = v51;
          uint64_t v52 = a2[8];
          a1[7] = a2[7];
          a1[8] = v52;
          uint64_t v53 = a2 + 9;
          unint64_t v54 = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v54 >= 0x11)
          {
            a1[9] = *v53;
            a1[10] = v54;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 9) = *(_OWORD *)v53;
          }
          goto LABEL_201;
        case 2u:
          uint64_t v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          uint64_t v14 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v15 = v14[5];
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          uint64_t v18 = sub_1C151DBAC();
          uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v16, v17, v18);
          *(void *)((char *)a1 + v14[6]) = *(void *)((char *)a2 + v14[6]);
          uint64_t v20 = v14[7];
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          *(void *)uint64_t v21 = *(void *)v22;
          v21[8] = v22[8];
          uint64_t v23 = v14[8];
          uint64_t v24 = (char *)a1 + v23;
          uint64_t v25 = (char *)a2 + v23;
          unint64_t v26 = *((void *)v25 + 1);
          if (v26 >= 0x11) {
            goto LABEL_42;
          }
          *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
          goto LABEL_201;
        case 3u:
          uint64_t v55 = a2[1];
          *a1 = *a2;
          a1[1] = v55;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v56 = a2[5];
          a1[4] = a2[4];
          a1[5] = v56;
          a1[6] = a2[6];
          *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
          v395 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v57 = v395[10];
          uint64_t v58 = (char *)a1 + v57;
          uint64_t v59 = (char *)a2 + v57;
          *uint64_t v58 = *((unsigned char *)a2 + v57);
          v58[1] = *((unsigned char *)a2 + v57 + 1);
          char v391 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v60 = v391[6];
          __dst = &v58[v60];
          id v61 = &v59[v60];
          uint64_t v62 = (int *)type metadata accessor for SharedItem();
          uint64_t v376 = *((void *)v62 - 1);
          uint64_t v63 = *(unsigned int (**)(char *, uint64_t, int *))(v376 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v63(v61, 1, v62))
          {
            uint64_t v64 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v61, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            uint64_t v179 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(__dst, v61, v179);
            __dst[v62[5]] = v61[v62[5]];
            uint64_t v180 = v62[6];
            long long v181 = *(void **)&v61[v180];
            *(void *)&__dst[v180] = v181;
            uint64_t v182 = v62[7];
            v381 = &v61[v182];
            v386 = &__dst[v182];
            uint64_t v183 = sub_1C1515FDC();
            v375 = *(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16);
            id v184 = v181;
            v375(v386, v381, v183);
            (*(void (**)(char *, void, uint64_t, int *))(v376 + 56))(__dst, 0, 1, v62);
          }
          v58[v391[7]] = v59[v391[7]];
          v58[v391[8]] = v59[v391[8]];
          v58[v391[9]] = v59[v391[9]];
          v58[v391[10]] = v59[v391[10]];
          uint64_t v185 = v395[11];
          uint64_t v186 = (char *)a1 + v185;
          id v187 = (char *)a2 + v185;
          uint64_t v188 = sub_1C151D2DC();
          uint64_t v189 = *(void *)(v188 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v187, 1, v188))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v186, v187, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v186, v187, v188);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
          }
          uint64_t v197 = v395[12];
          uint64_t v198 = (void *)((char *)a1 + v197);
          uint64_t v199 = (void *)((char *)a2 + v197);
          unint64_t v200 = v199[1];
          if (v200 >= 0x11)
          {
            *uint64_t v198 = *v199;
            v198[1] = v200;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v198 = *(_OWORD *)v199;
          }
          uint64_t v201 = v395[13];
          unint64_t v202 = *(void *)((char *)a2 + v201);
          if (v202 >= 2)
          {
            if (v202 == 2)
            {
              *(void *)((char *)a1 + v201) = 2;
            }
            else
            {
              *(void *)((char *)a1 + v201) = v202;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)a1 + v201) = v202;
          }
          uint64_t v239 = v395[14];
          uint64_t v240 = *(void **)((char *)a2 + v239);
          *(void *)((char *)a1 + v239) = v240;
          id v241 = v240;
          goto LABEL_201;
        case 4u:
          uint64_t v27 = a2[1];
          *a1 = *a2;
          a1[1] = v27;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v28 = a2 + 3;
          unint64_t v29 = a2[4];
          if (v29 >= 0x11)
          {
            a1[3] = *v28;
            a1[4] = v29;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v28;
          }
          uint64_t v114 = a2[6];
          a1[5] = a2[5];
          a1[6] = v114;
          id v115 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v116 = v115[8];
          uint64_t v117 = (char *)a1 + v116;
          unint64_t v118 = (char *)a2 + v116;
          uint64_t v119 = sub_1C1515FDC();
          uint64_t v120 = *(void *)(v119 - 8);
          uint64_t v121 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
          swift_bridgeObjectRetain();
          v121(v117, v118, v119);
          uint64_t v397 = v115;
          uint64_t v122 = v115[9];
          uint64_t v123 = (char *)a1 + v122;
          uint64_t v124 = (char *)a2 + v122;
          uint64_t v385 = (void *)v119;
          __dsta = (void (*)(char *, char *, void *))v121;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))((char *)a2 + v122, 1, v119))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            v121(v123, v124, v119);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v123, 0, 1, v119);
          }
          *(void *)((char *)a1 + v115[10]) = *(void *)((char *)a2 + v115[10]);
          *(void *)((char *)a1 + v115[11]) = *(void *)((char *)a2 + v115[11]);
          uint64_t v157 = v115[12];
          uint64_t v158 = (void *)((char *)a1 + v157);
          uint64_t v392 = (void *)((char *)a2 + v157);
          uint64_t v159 = type metadata accessor for FeedHeadline(0);
          uint64_t v160 = *(void *)(v159 - 8);
          v161 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v160 + 48);
          swift_retain();
          swift_retain();
          if (v161(v392, 1, v159))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v158, v392, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            uint64_t v374 = (int *)v159;
            uint64_t v168 = v392[1];
            *uint64_t v158 = *v392;
            v158[1] = v168;
            v158[2] = v392[2];
            *((unsigned char *)v158 + 24) = *((unsigned char *)v392 + 24);
            uint64_t v169 = v392[5];
            v158[4] = v392[4];
            v158[5] = v169;
            v158[6] = v392[6];
            *((unsigned char *)v158 + 56) = *((unsigned char *)v392 + 56);
            uint64_t v170 = *(int *)(v159 + 40);
            v377 = v158;
            uint64_t v171 = (char *)v158 + v170;
            uint64_t v172 = (char *)v392 + v170;
            *uint64_t v171 = *((unsigned char *)v392 + v170);
            v171[1] = *((unsigned char *)v392 + v170 + 1);
            v373 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v173 = v373[6];
            uint64_t v372 = &v171[v173];
            uint64_t v174 = &v172[v173];
            uint64_t v175 = (int *)type metadata accessor for SharedItem();
            uint64_t v371 = *((void *)v175 - 1);
            uint64_t v176 = *(unsigned int (**)(char *, uint64_t, int *))(v371 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v176(v174, 1, v175))
            {
              uint64_t v177 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v372, v174, *(void *)(*(void *)(v177 - 8) + 64));
            }
            else
            {
              uint64_t v265 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v372, v174, v265);
              v372[v175[5]] = v174[v175[5]];
              uint64_t v266 = v175[6];
              long long v267 = *(void **)&v174[v266];
              *(void *)&v372[v266] = v267;
              uint64_t v268 = v175[7];
              uint64_t v269 = &v372[v268];
              uint64_t v270 = &v174[v268];
              id v271 = v267;
              __dsta(v269, v270, v385);
              (*(void (**)(char *, void, uint64_t, int *))(v371 + 56))(v372, 0, 1, v175);
            }
            v171[v373[7]] = v172[v373[7]];
            v171[v373[8]] = v172[v373[8]];
            v171[v373[9]] = v172[v373[9]];
            v171[v373[10]] = v172[v373[10]];
            uint64_t v272 = v374[11];
            uint64_t v273 = (char *)v377 + v272;
            id v274 = (char *)v392 + v272;
            uint64_t v275 = sub_1C151D2DC();
            uint64_t v276 = *(void *)(v275 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 48))(v274, 1, v275))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v273, v274, *(void *)(*(void *)(v277 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v273, v274, v275);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v276 + 56))(v273, 0, 1, v275);
            }
            uint64_t v278 = v374[12];
            uint64_t v279 = (void *)((char *)v377 + v278);
            uint64_t v280 = (void *)((char *)v392 + v278);
            unint64_t v281 = v280[1];
            if (v281 >= 0x11)
            {
              *uint64_t v279 = *v280;
              v279[1] = v281;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v279 = *(_OWORD *)v280;
            }
            uint64_t v282 = v374[13];
            unint64_t v283 = *(void *)((char *)v392 + v282);
            if (v283 >= 2)
            {
              if (v283 == 2)
              {
                *(void *)((char *)v377 + v282) = 2;
              }
              else
              {
                *(void *)((char *)v377 + v282) = v283;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v377 + v282) = v283;
            }
            uint64_t v306 = v374[14];
            v307 = *(void **)((char *)v392 + v306);
            *(void *)((char *)v377 + v306) = v307;
            unint64_t v308 = *(void (**)(void *, void, uint64_t, int *))(v160 + 56);
            id v309 = v307;
            v308(v377, 0, 1, v374);
          }
          uint64_t v310 = v397[13];
          uint64_t v311 = (void *)((char *)a1 + v310);
          id v312 = (void *)((char *)a2 + v310);
          uint64_t v313 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v314 + 48))(v312, 1, v313))
          {
            sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v311, v312, *(void *)(*(void *)(v315 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v317 = *v312;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v318 = v312[1];
              *uint64_t v311 = v317;
              v311[1] = v318;
              uint64_t v319 = type metadata accessor for GenericDataVisualization();
              uint64_t v320 = *(int *)(v319 + 20);
              uint64_t v393 = (char *)v311 + v320;
              uint64_t v321 = (char *)v312 + v320;
              swift_bridgeObjectRetain();
              __dsta(v393, v321, v385);
              *(void *)((char *)v311 + *(int *)(v319 + 24)) = *(uint64_t *)((char *)v312 + *(int *)(v319 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              *uint64_t v311 = v317;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v311, 0, 1, v313);
          }
          *((unsigned char *)a1 + v397[14]) = *((unsigned char *)a2 + v397[14]);
          goto LABEL_201;
        case 5u:
          id v65 = (void *)*a2;
          uint64_t v66 = a2[1];
          *a1 = *a2;
          a1[1] = v66;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v67 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v67;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v68 = a2[10];
          id v69 = v65;
          swift_bridgeObjectRetain();
          id v70 = v67;
          if (v68 == 1)
          {
            long long v71 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v71;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v68;
            uint64_t v127 = a2[12];
            a1[11] = a2[11];
            a1[12] = v127;
            uint64_t v129 = (void *)a2[13];
            uint64_t v128 = a2[14];
            a1[13] = v129;
            a1[14] = v128;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v130 = v129;
          }
          uint64_t v131 = a2 + 15;
          unint64_t v132 = a2[16];
          if (v132 >= 0x11)
          {
            a1[15] = *v131;
            a1[16] = v132;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v131;
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          goto LABEL_201;
        case 6u:
          int v72 = *((unsigned __int8 *)a2 + 281);
          if (v72 == 2)
          {
            uint64_t v209 = a2[1];
            *a1 = *a2;
            a1[1] = v209;
            a1[2] = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            a1[4] = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            uint64_t v210 = a2[7];
            a1[6] = a2[6];
            a1[7] = v210;
            uint64_t v211 = a2[9];
            a1[8] = a2[8];
            a1[9] = v211;
            uint64_t v212 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v212 != 1)
            {
              a1[10] = a2[10];
              a1[11] = v212;
              uint64_t v249 = a2[15];
              swift_bridgeObjectRetain();
              if (v249)
              {
                uint64_t v250 = a2[16];
                a1[15] = v249;
                a1[16] = v250;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v249 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v249);
                a1[17] = a2[17];
              }
              else
              {
                long long v340 = *((_OWORD *)a2 + 7);
                *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
                *((_OWORD *)a1 + 7) = v340;
                *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
              }
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              goto LABEL_172;
            }
            uint64_t v213 = a1 + 10;
            uint64_t v214 = a2 + 10;
            long long v215 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v215;
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
LABEL_144:
            long long v287 = v214[1];
            *uint64_t v213 = *v214;
            v213[1] = v287;
            goto LABEL_172;
          }
          if (v72 != 1)
          {
            uint64_t v216 = (void *)*a2;
            uint64_t v217 = a2[1];
            *a1 = *a2;
            a1[1] = v217;
            a1[2] = a2[2];
            *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
            a1[4] = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            long long v218 = (void *)a2[7];
            a1[6] = a2[6];
            a1[7] = v218;
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v219 = a2[10];
            id v220 = v216;
            swift_bridgeObjectRetain();
            id v221 = v218;
            if (v219 == 1)
            {
              long long v222 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 11) = v222;
              *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              a1[9] = a2[9];
              a1[10] = v219;
              uint64_t v251 = a2[12];
              a1[11] = a2[11];
              a1[12] = v251;
              uint64_t v253 = (void *)a2[13];
              uint64_t v252 = a2[14];
              a1[13] = v253;
              a1[14] = v252;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v254 = v253;
            }
            uint64_t v255 = a2 + 15;
            unint64_t v256 = a2[16];
            if (v256 >= 0x11)
            {
              a1[15] = *v255;
              a1[16] = v256;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(_OWORD *)v255;
            }
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_172;
          }
          id v73 = (void *)*a2;
          uint64_t v74 = a2[1];
          *a1 = *a2;
          a1[1] = v74;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          int v75 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v75;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v76 = a2[10];
          id v77 = v73;
          swift_bridgeObjectRetain();
          id v78 = v75;
          if (v76 == 1)
          {
            long long v79 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v79;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v76;
            uint64_t v243 = a2[12];
            a1[11] = a2[11];
            a1[12] = v243;
            long long v245 = (void *)a2[13];
            uint64_t v244 = a2[14];
            a1[13] = v245;
            a1[14] = v244;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v246 = v245;
          }
          uint64_t v247 = a2 + 15;
          unint64_t v248 = a2[16];
          if (v248 >= 0x11)
          {
            a1[15] = *v247;
            a1[16] = v248;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v247;
          }
          uint64_t v214 = a2 + 18;
          id v257 = (void *)a2[18];
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          if (!v257)
          {
            uint64_t v213 = a1 + 18;
            long long v284 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v284;
            *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            long long v285 = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
            *((_OWORD *)a1 + 12) = v285;
            long long v286 = *((_OWORD *)a2 + 14);
            *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 14) = v286;
            goto LABEL_144;
          }
          uint64_t v258 = a2[19];
          uint64_t v259 = a2[20];
          a1[18] = v257;
          a1[19] = v258;
          a1[20] = v259;
          *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
          a1[22] = a2[22];
          *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
          uint64_t v260 = (void *)a2[25];
          a1[24] = a2[24];
          a1[25] = v260;
          *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
          uint64_t v261 = a2[28];
          id v262 = v257;
          swift_bridgeObjectRetain();
          id v263 = v260;
          if (v261 == 1)
          {
            long long v264 = *(_OWORD *)(a2 + 29);
            *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
            *(_OWORD *)(a1 + 29) = v264;
            *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
          }
          else
          {
            a1[27] = a2[27];
            a1[28] = v261;
            uint64_t v288 = a2[30];
            a1[29] = a2[29];
            a1[30] = v288;
            long long v290 = (void *)a2[31];
            uint64_t v289 = a2[32];
            a1[31] = v290;
            a1[32] = v289;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v291 = v290;
          }
          uint64_t v292 = a2 + 33;
          unint64_t v293 = a2[34];
          if (v293 >= 0x11)
          {
            a1[33] = *v292;
            a1[34] = v293;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 33) = *(_OWORD *)v292;
          }
          *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_172:
          *((unsigned char *)a1 + 281) = v72;
LABEL_201:
          swift_storeEnumTagMultiPayload();
LABEL_202:
          swift_storeEnumTagMultiPayload();
          return a1;
        case 7u:
          uint64_t v80 = a2[1];
          *a1 = *a2;
          a1[1] = v80;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v81 = a2[7];
          a1[6] = a2[6];
          a1[7] = v81;
          uint64_t v82 = a2[9];
          a1[8] = a2[8];
          a1[9] = v82;
          uint64_t v83 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v83 == 1)
          {
            long long v84 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v84;
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            long long v85 = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 6) = v85;
          }
          else
          {
            a1[10] = a2[10];
            a1[11] = v83;
            uint64_t v133 = a2[15];
            swift_bridgeObjectRetain();
            if (v133)
            {
              uint64_t v134 = a2[16];
              a1[15] = v133;
              a1[16] = v134;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v133 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v133);
              a1[17] = a2[17];
            }
            else
            {
              long long v242 = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 7) = v242;
              *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            }
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          }
          goto LABEL_201;
        case 8u:
          uint64_t v86 = a2[1];
          *a1 = *a2;
          a1[1] = v86;
          uint64_t v87 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          long long v88 = (void *)((char *)a1 + v87);
          uint64_t v89 = (char *)a2 + v87;
          uint64_t v90 = *(void *)((char *)a2 + v87 + 8);
          *long long v88 = *(void *)((char *)a2 + v87);
          v88[1] = v90;
          uint64_t v91 = *(void *)((char *)a2 + v87 + 24);
          void v88[2] = *(void *)((char *)a2 + v87 + 16);
          v88[3] = v91;
          uint64_t v396 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v92 = *(int *)(v396 + 24);
          uint64_t v384 = (char *)v88 + v92;
          uint64_t v93 = &v89[v92];
          uint64_t v94 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v380 = *(void *)(v94 - 8);
          uint64_t v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v380 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v95(v93, 1, v94))
          {
            sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v384, v93, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            uint64_t v191 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v384, v93, v191);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v380 + 56))(v384, 0, 1, v94);
          }
          *(void *)((char *)v88 + *(int *)(v396 + 28)) = *(void *)&v89[*(int *)(v396 + 28)];
          swift_bridgeObjectRetain();
          goto LABEL_201;
        case 9u:
          uint64_t v30 = a2[1];
          *a1 = *a2;
          a1[1] = v30;
          uint64_t v31 = a2[3];
          a1[2] = a2[2];
          a1[3] = v31;
          uint64_t v32 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v32)
          {
            uint64_t v33 = a2[8];
            a1[7] = v32;
            a1[8] = v33;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v32);
          }
          else
          {
            long long v152 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v152;
            a1[8] = a2[8];
          }
          uint64_t v153 = a1 + 9;
          uint64_t v154 = a2 + 9;
          uint64_t v155 = a2[12];
          if (v155)
          {
            uint64_t v156 = a2[13];
            a1[12] = v155;
            a1[13] = v156;
            (**(void (***)(_OWORD *, _OWORD *))(v155 - 8))(v153, v154);
          }
          else
          {
            long long v163 = *(_OWORD *)(a2 + 11);
            *uint64_t v153 = *v154;
            *(_OWORD *)(a1 + 11) = v163;
            a1[13] = a2[13];
          }
          v164 = a1 + 14;
          uint64_t v165 = a2 + 14;
          uint64_t v166 = a2[17];
          if (v166)
          {
            uint64_t v167 = a2[18];
            a1[17] = v166;
            a1[18] = v167;
            (**(void (***)(_OWORD *, _OWORD *))(v166 - 8))(v164, v165);
          }
          else
          {
            long long v178 = *((_OWORD *)a2 + 8);
            _OWORD *v164 = *v165;
            *((_OWORD *)a1 + 8) = v178;
            a1[18] = a2[18];
          }
          goto LABEL_201;
        case 0xAu:
          uint64_t v97 = a2[1];
          *a1 = *a2;
          a1[1] = v97;
          uint64_t v98 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v99 = v98[5];
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = sub_1C151959C();
          uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          v103(v100, v101, v102);
          *(void *)((char *)a1 + v98[6]) = *(void *)((char *)a2 + v98[6]);
          uint64_t v104 = v98[7];
          uint64_t v105 = (char *)a1 + v104;
          double v106 = (char *)a2 + v104;
          *(void *)uint64_t v105 = *(void *)v106;
          v105[8] = v106[8];
          uint64_t v107 = v98[8];
          uint64_t v24 = (char *)a1 + v107;
          uint64_t v25 = (char *)a2 + v107;
          unint64_t v26 = *((void *)v25 + 1);
          if (v26 >= 0x11)
          {
LABEL_42:
            *(void *)uint64_t v24 = *(void *)v25;
            *((void *)v24 + 1) = v26;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
          }
          goto LABEL_201;
        case 0xBu:
          *a1 = *a2;
          swift_retain();
          goto LABEL_201;
        case 0xCu:
          uint64_t v34 = a2[1];
          *a1 = *a2;
          a1[1] = v34;
          uint64_t v35 = a2[3];
          a1[2] = a2[2];
          a1[3] = v35;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_201;
        case 0xDu:
          uint64_t v108 = a2[1];
          *a1 = *a2;
          a1[1] = v108;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          double v109 = a2 + 3;
          unint64_t v110 = a2[4];
          if (v110 >= 0x11)
          {
            a1[3] = *v109;
            a1[4] = v110;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v109;
          }
          uint64_t v135 = a2[6];
          a1[5] = a2[5];
          a1[6] = v135;
          uint64_t v136 = (void *)a2[8];
          a1[7] = a2[7];
          a1[8] = v136;
          *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
          a1[10] = a2[10];
          uint64_t v137 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v138 = v136;
          swift_bridgeObjectRetain();
          if (v137)
          {
            uint64_t v139 = a2[15];
            a1[14] = v137;
            a1[15] = v139;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v137 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v137);
          }
          else
          {
            long long v192 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v192;
            a1[15] = a2[15];
          }
          uint64_t v193 = a1 + 16;
          uint64_t v194 = a2 + 16;
          uint64_t v195 = a2[19];
          if (v195)
          {
            uint64_t v196 = a2[20];
            a1[19] = v195;
            a1[20] = v196;
            (**(void (***)(_OWORD *, _OWORD *))(v195 - 8))(v193, v194);
          }
          else
          {
            long long v203 = *((_OWORD *)a2 + 9);
            *uint64_t v193 = *v194;
            *((_OWORD *)a1 + 9) = v203;
            a1[20] = a2[20];
          }
          uint64_t v204 = a1 + 21;
          unint64_t v205 = a2 + 21;
          uint64_t v206 = a2[24];
          if (v206)
          {
            uint64_t v207 = a2[25];
            a1[24] = v206;
            a1[25] = v207;
            (**(void (***)(_OWORD *, _OWORD *))(v206 - 8))(v204, v205);
          }
          else
          {
            long long v208 = *(_OWORD *)(a2 + 23);
            *uint64_t v204 = *v205;
            *(_OWORD *)(a1 + 23) = v208;
            a1[25] = a2[25];
          }
          goto LABEL_201;
        case 0xEu:
          uint64_t v36 = a2[1];
          *a1 = *a2;
          a1[1] = v36;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v37 = a2 + 3;
          unint64_t v38 = a2[4];
          if (v38 >= 0x11)
          {
            a1[3] = *v37;
            a1[4] = v38;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v37;
          }
          uint64_t v126 = a2[6];
          a1[5] = a2[5];
          a1[6] = v126;
          a1[7] = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_201;
        case 0xFu:
          uint64_t v111 = a2[1];
          *a1 = *a2;
          a1[1] = v111;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v112 = a2 + 3;
          unint64_t v113 = a2[4];
          if (v113 >= 0x11)
          {
            a1[3] = *v112;
            a1[4] = v113;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v112;
          }
          break;
        case 0x10u:
          uint64_t v39 = a2[1];
          *a1 = *a2;
          a1[1] = v39;
          uint64_t v394 = a2[3];
          a1[2] = a2[2];
          a1[3] = v394;
          uint64_t v40 = a2[5];
          a1[4] = a2[4];
          a1[5] = v40;
          *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
          uint64_t v41 = a2[10];
          a1[9] = a2[9];
          a1[10] = v41;
          uint64_t v42 = a2[12];
          a1[11] = a2[11];
          a1[12] = v42;
          a1[13] = a2[13];
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          uint64_t v43 = a2[16];
          a1[15] = a2[15];
          a1[16] = v43;
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          uint64_t v44 = a2[19];
          a1[18] = a2[18];
          a1[19] = v44;
          uint64_t v45 = a2[21];
          a1[20] = a2[20];
          a1[21] = v45;
          *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
          a1[22] = a2[22];
          uint64_t v46 = a2[25];
          a1[24] = a2[24];
          a1[25] = v46;
          *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
          uint64_t v47 = a2[27];
          a1[26] = a2[26];
          a1[27] = v47;
          uint64_t v383 = a2 + 29;
          unint64_t v48 = a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v48 >= 0x11)
          {
            a1[29] = *v383;
            a1[30] = v48;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 29) = *(_OWORD *)v383;
          }
          goto LABEL_201;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          goto LABEL_202;
      }
      break;
    case 7u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_202;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      goto LABEL_202;
  }
  uint64_t v140 = a2[6];
  a1[5] = a2[5];
  a1[6] = v140;
  uint64_t v141 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v142 = (char *)a1 + v141;
  uint64_t v143 = (void *)((char *)a2 + v141);
  *(void *)((char *)a1 + v141) = *v143;
  uint64_t v144 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v145 = &v142[v144];
  uint64_t v146 = (void *)((char *)v143 + v144);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v226 = type metadata accessor for PuzzleStatisticValue(0);
      int v227 = swift_getEnumCaseMultiPayload();
      if (v227 == 5)
      {
        uint64_t v228 = type metadata accessor for PuzzleStreak();
        uint64_t v229 = *(void *)(v228 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v229 + 48))(v146, 1, v228))
        {
LABEL_110:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v145, v146, *(void *)(*(void *)(v230 - 8) + 64));
          goto LABEL_179;
        }
      }
      else
      {
        if (v227 != 4)
        {
          memcpy(v145, v146, *(void *)(*(void *)(v226 - 8) + 64));
          goto LABEL_180;
        }
        uint64_t v228 = type metadata accessor for PuzzleStreak();
        uint64_t v229 = *(void *)(v228 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v229 + 48))(v146, 1, v228)) {
          goto LABEL_110;
        }
      }
      uint64_t v348 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v348 - 8) + 16))(v145, v146, v348);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v229 + 56))(v145, 0, 1, v228);
LABEL_179:
      swift_storeEnumTagMultiPayload();
LABEL_180:
      uint64_t v349 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v350 = *(int *)(v349 + 20);
      uint64_t v351 = &v145[v350];
      uint64_t v352 = (char *)v146 + v350;
      int v353 = swift_getEnumCaseMultiPayload();
      if (v353 == 5)
      {
        char v390 = v145;
        uint64_t v357 = type metadata accessor for PuzzleStreak();
        uint64_t v358 = *(void *)(v357 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v358 + 48))(v352, 1, v357))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v351, v352, *(void *)(*(void *)(v359 - 8) + 64));
        }
        else
        {
          uint64_t v361 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 16))(v351, v352, v361);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v358 + 56))(v351, 0, 1, v357);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v145 = v390;
      }
      else if (v353 == 4)
      {
        uint64_t v389 = v145;
        uint64_t v354 = type metadata accessor for PuzzleStreak();
        uint64_t v355 = *(void *)(v354 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v355 + 48))(v352, 1, v354))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v351, v352, *(void *)(*(void *)(v356 - 8) + 64));
        }
        else
        {
          uint64_t v360 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v360 - 8) + 16))(v351, v352, v360);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v355 + 56))(v351, 0, 1, v354);
        }
        uint64_t v145 = v389;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v351, v352, *(void *)(*(void *)(v226 - 8) + 64));
      }
      uint64_t v362 = *(int *)(v349 + 24);
      uint64_t v363 = &v145[v362];
      uint64_t v364 = (char *)v146 + v362;
      int v365 = swift_getEnumCaseMultiPayload();
      if (v365 == 5)
      {
        uint64_t v366 = type metadata accessor for PuzzleStreak();
        uint64_t v367 = *(void *)(v366 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v364, 1, v366))
        {
LABEL_196:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v363, v364, *(void *)(*(void *)(v368 - 8) + 64));
          goto LABEL_199;
        }
        goto LABEL_198;
      }
      if (v365 == 4)
      {
        uint64_t v366 = type metadata accessor for PuzzleStreak();
        uint64_t v367 = *(void *)(v366 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v364, 1, v366)) {
          goto LABEL_196;
        }
LABEL_198:
        uint64_t v369 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v369 - 8) + 16))(v363, v364, v369);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v367 + 56))(v363, 0, 1, v366);
        goto LABEL_199;
      }
      memcpy(v363, v364, *(void *)(*(void *)(v226 - 8) + 64));
      goto LABEL_200;
    case 2u:
      uint64_t v223 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v224 = *((void *)v223 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v224 + 48))(v146, 1, v223))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v145, v146, *(void *)(*(void *)(v225 - 8) + 64));
      }
      else
      {
        uint64_t v294 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v294 - 8) + 16))(v145, v146, v294);
        uint64_t v295 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v296 = v295[5];
        uint64_t v297 = &v145[v296];
        uint64_t v298 = (void *)((char *)v146 + v296);
        uint64_t v299 = v298[1];
        *(void *)uint64_t v297 = *v298;
        *((void *)v297 + 1) = v299;
        uint64_t v300 = v295[6];
        uint64_t v387 = v145;
        uint64_t v301 = &v145[v300];
        uint64_t v302 = (void *)((char *)v146 + v300);
        uint64_t v303 = v302[1];
        *(void *)uint64_t v301 = *v302;
        *((void *)v301 + 1) = v303;
        uint64_t v304 = v302 + 2;
        unint64_t v305 = v302[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v305 >> 60 == 15)
        {
          *((_OWORD *)v301 + 1) = *(_OWORD *)v304;
        }
        else
        {
          uint64_t v341 = *v304;
          sub_1BFE95820(*v304, v305);
          *((void *)v301 + 2) = v341;
          *((void *)v301 + 3) = v305;
        }
        *(void *)&v387[v295[7]] = *(void *)((char *)v146 + v295[7]);
        *(void *)&v387[v295[8]] = *(void *)((char *)v146 + v295[8]);
        *(void *)&v387[v223[5]] = *(void *)((char *)v146 + v223[5]);
        *(void *)&v387[v223[6]] = *(void *)((char *)v146 + v223[6]);
        uint64_t v342 = v223[7];
        long long v343 = &v387[v342];
        uint64_t v344 = (void *)((char *)v146 + v342);
        uint64_t v345 = v344[1];
        *(void *)long long v343 = *v344;
        *((void *)v343 + 1) = v345;
        uint64_t v346 = *(void (**)(char *, void, uint64_t, int *))(v224 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v346(v387, 0, 1, v223);
      }
      goto LABEL_200;
    case 3u:
      uint64_t v231 = v146[1];
      *(void *)uint64_t v145 = *v146;
      *((void *)v145 + 1) = v231;
      v145[16] = *((unsigned char *)v146 + 16);
      uint64_t v232 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v233 = v232[6];
      uint64_t v234 = &v145[v233];
      v235 = (char *)v146 + v233;
      uint64_t v236 = type metadata accessor for PuzzleStreak();
      uint64_t v237 = *(void *)(v236 - 8);
      v382 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v237 + 48);
      if (v382(v235, 1, v236))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v234, v235, *(void *)(*(void *)(v238 - 8) + 64));
      }
      else
      {
        uint64_t v322 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v234, v235, v322);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v237 + 56))(v234, 0, 1, v236);
      }
      uint64_t v323 = v232[7];
      uint64_t v388 = v145;
      uint64_t v324 = &v145[v323];
      uint64_t v325 = (char *)v146 + v323;
      if (v382((char *)v146 + v323, 1, v236))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v324, v325, *(void *)(*(void *)(v326 - 8) + 64));
      }
      else
      {
        uint64_t v327 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16))(v324, v325, v327);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v237 + 56))(v324, 0, 1, v236);
      }
      uint64_t v328 = v232[8];
      uint64_t v329 = &v388[v328];
      uint64_t v330 = (_OWORD *)((char *)v146 + v328);
      long long v331 = v330[1];
      *(_OWORD *)uint64_t v329 = *v330;
      *((_OWORD *)v329 + 1) = v331;
      *(_OWORD *)(v329 + 25) = *(_OWORD *)((char *)v330 + 25);
      uint64_t v332 = v232[9];
      v333 = &v388[v332];
      long long v334 = (_OWORD *)((char *)v146 + v332);
      *(_OWORD *)(v333 + 25) = *(_OWORD *)((char *)v334 + 25);
      long long v335 = v334[1];
      *(_OWORD *)v333 = *v334;
      *((_OWORD *)v333 + 1) = v335;
      uint64_t v336 = v232[10];
      uint64_t v337 = &v388[v336];
      long long v338 = (_OWORD *)((char *)v146 + v336);
      long long v339 = v338[1];
      *(_OWORD *)uint64_t v337 = *v338;
      *((_OWORD *)v337 + 1) = v339;
      *(_OWORD *)(v337 + 25) = *(_OWORD *)((char *)v338 + 25);
      goto LABEL_200;
    default:
      uint64_t v147 = type metadata accessor for PuzzleStatisticValue(0);
      int v148 = swift_getEnumCaseMultiPayload();
      if (v148 == 5)
      {
        uint64_t v149 = type metadata accessor for PuzzleStreak();
        uint64_t v150 = *(void *)(v149 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v150 + 48))(v146, 1, v149)) {
          goto LABEL_65;
        }
      }
      else
      {
        if (v148 != 4)
        {
          memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
LABEL_200:
          swift_storeEnumTagMultiPayload();
          goto LABEL_201;
        }
        uint64_t v149 = type metadata accessor for PuzzleStreak();
        uint64_t v150 = *(void *)(v149 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v150 + 48))(v146, 1, v149))
        {
LABEL_65:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v145, v146, *(void *)(*(void *)(v151 - 8) + 64));
          goto LABEL_199;
        }
      }
      uint64_t v347 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v347 - 8) + 16))(v145, v146, v347);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v145, 0, 1, v149);
LABEL_199:
      swift_storeEnumTagMultiPayload();
      goto LABEL_200;
  }
}

void *assignWithCopy for ContentValidationType(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C061951C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_200;
      case 5u:
        uint64_t v4 = (void *)*a2;
        *a1 = *a2;
        id v5 = v4;
        goto LABEL_200;
      case 6u:
        uint64_t v6 = type metadata accessor for FeedItem(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v7 = a2[3];
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            a1[3] = v7;
            unint64_t v8 = a2[6];
            swift_bridgeObjectRetain();
            if (v8 >= 0x11)
            {
              a1[5] = a2[5];
              a1[6] = a2[6];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
            }
            goto LABEL_199;
          case 1u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v28 = a2[3];
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            a1[3] = v28;
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            unint64_t v29 = a2[10];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v29 >= 0x11)
            {
              a1[9] = a2[9];
              a1[10] = a2[10];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            }
            goto LABEL_199;
          case 2u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v9 = (int *)type metadata accessor for FeedBannerAd();
            uint64_t v10 = v9[5];
            uint64_t v11 = (char *)a1 + v10;
            unint64_t v12 = (char *)a2 + v10;
            uint64_t v13 = sub_1C151DBAC();
            uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
            swift_bridgeObjectRetain();
            v14(v11, v12, v13);
            *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
            uint64_t v15 = v9[7];
            uint64_t v16 = (char *)a1 + v15;
            uint64_t v17 = (char *)a2 + v15;
            char v18 = v17[8];
            *(void *)uint64_t v16 = *(void *)v17;
            unsigned char v16[8] = v18;
            uint64_t v19 = v9[8];
            uint64_t v20 = (char *)a1 + v19;
            uint64_t v21 = (char *)a2 + v19;
            if (*((void *)v21 + 1) >= 0x11uLL) {
              goto LABEL_43;
            }
            *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
            goto LABEL_199;
          case 3u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v30 = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            a1[2] = v30;
            a1[4] = a2[4];
            a1[5] = a2[5];
            a1[6] = a2[6];
            *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
            long long v343 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v31 = v343[10];
            uint64_t v32 = (char *)a1 + v31;
            uint64_t v33 = (char *)a2 + v31;
            *uint64_t v32 = *((unsigned char *)a2 + v31);
            v32[1] = *((unsigned char *)a2 + v31 + 1);
            long long v340 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v34 = v340[6];
            __dst = &v32[v34];
            uint64_t v35 = &v33[v34];
            uint64_t v36 = (int *)type metadata accessor for SharedItem();
            uint64_t v325 = *((void *)v36 - 1);
            uint64_t v37 = *(unsigned int (**)(char *, uint64_t, int *))(v325 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v37(v35, 1, v36))
            {
              uint64_t v38 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
            }
            else
            {
              uint64_t v138 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(__dst, v35, v138);
              __dst[v36[5]] = v35[v36[5]];
              uint64_t v139 = v36[6];
              uint64_t v140 = *(void **)&v35[v139];
              *(void *)&__dst[v139] = v140;
              uint64_t v141 = v36[7];
              uint64_t v330 = &v35[v141];
              long long v335 = &__dst[v141];
              uint64_t v142 = sub_1C1515FDC();
              uint64_t v324 = *(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16);
              id v143 = v140;
              v324(v335, v330, v142);
              (*(void (**)(char *, void, uint64_t, int *))(v325 + 56))(__dst, 0, 1, v36);
            }
            v32[v340[7]] = v33[v340[7]];
            v32[v340[8]] = v33[v340[8]];
            v32[v340[9]] = v33[v340[9]];
            v32[v340[10]] = v33[v340[10]];
            uint64_t v144 = v343[11];
            uint64_t v145 = (char *)a1 + v144;
            uint64_t v146 = (char *)a2 + v144;
            uint64_t v147 = sub_1C151D2DC();
            uint64_t v148 = *(void *)(v147 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v145, v146, *(void *)(*(void *)(v149 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v145, v146, v147);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
            }
            uint64_t v156 = v343[12];
            uint64_t v157 = (void *)((char *)a1 + v156);
            uint64_t v158 = (void *)((char *)a2 + v156);
            if (v158[1] >= 0x11uLL)
            {
              *uint64_t v157 = *v158;
              v157[1] = v158[1];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v157 = *(_OWORD *)v158;
            }
            uint64_t v159 = v343[13];
            unint64_t v160 = *(void *)((char *)a2 + v159);
            if (v160 >= 2)
            {
              if (v160 == 2)
              {
                *(void *)((char *)a1 + v159) = 2;
              }
              else
              {
                *(void *)((char *)a1 + v159) = v160;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)a1 + v159) = v160;
            }
            uint64_t v197 = v343[14];
            uint64_t v198 = *(void **)((char *)a2 + v197);
            *(void *)((char *)a1 + v197) = v198;
            id v199 = v198;
            goto LABEL_199;
          case 4u:
            *a1 = *a2;
            uint64_t v22 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v22;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            a1[5] = a2[5];
            a1[6] = a2[6];
            uint64_t v82 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v83 = v82[8];
            long long v84 = (char *)a1 + v83;
            long long v85 = (char *)a2 + v83;
            uint64_t v86 = sub_1C1515FDC();
            uint64_t v87 = *(void *)(v86 - 8);
            long long v88 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
            swift_bridgeObjectRetain();
            v88(v84, v85, v86);
            uint64_t v345 = v82;
            uint64_t v89 = v82[9];
            uint64_t v90 = (char *)a1 + v89;
            uint64_t v91 = (char *)a2 + v89;
            long long v334 = (void *)v86;
            __dsta = (void (*)(char *, char *, void *))v88;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))((char *)a2 + v89, 1, v86))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
              memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              v88(v90, v91, v86);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v90, 0, 1, v86);
            }
            *(void *)((char *)a1 + v82[10]) = *(void *)((char *)a2 + v82[10]);
            *(void *)((char *)a1 + v82[11]) = *(void *)((char *)a2 + v82[11]);
            uint64_t v116 = v82[12];
            uint64_t v117 = (void *)((char *)a1 + v116);
            uint64_t v341 = (void *)((char *)a2 + v116);
            uint64_t v118 = type metadata accessor for FeedHeadline(0);
            uint64_t v119 = *(void *)(v118 - 8);
            uint64_t v120 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v119 + 48);
            swift_retain();
            swift_retain();
            if (v120(v341, 1, v118))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
              memcpy(v117, v341, *(void *)(*(void *)(v121 - 8) + 64));
            }
            else
            {
              uint64_t v323 = (int *)v118;
              *uint64_t v117 = *v341;
              v117[1] = v341[1];
              uint64_t v127 = v341[2];
              *((unsigned char *)v117 + 24) = *((unsigned char *)v341 + 24);
              v117[2] = v127;
              v117[4] = v341[4];
              v117[5] = v341[5];
              v117[6] = v341[6];
              *((unsigned char *)v117 + 56) = *((unsigned char *)v341 + 56);
              uint64_t v128 = *(int *)(v118 + 40);
              uint64_t v326 = v117;
              uint64_t v129 = (char *)v117 + v128;
              id v130 = (char *)v341 + v128;
              *uint64_t v129 = *((unsigned char *)v341 + v128);
              v129[1] = *((unsigned char *)v341 + v128 + 1);
              uint64_t v322 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v131 = v322[6];
              uint64_t v321 = &v129[v131];
              unint64_t v132 = &v130[v131];
              uint64_t v133 = (int *)type metadata accessor for SharedItem();
              uint64_t v320 = *((void *)v133 - 1);
              uint64_t v134 = *(unsigned int (**)(char *, uint64_t, int *))(v320 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              if (v134(v132, 1, v133))
              {
                uint64_t v135 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v321, v132, *(void *)(*(void *)(v135 - 8) + 64));
              }
              else
              {
                uint64_t v217 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v321, v132, v217);
                v321[v133[5]] = v132[v133[5]];
                uint64_t v218 = v133[6];
                uint64_t v219 = *(void **)&v132[v218];
                *(void *)&v321[v218] = v219;
                uint64_t v220 = v133[7];
                id v221 = &v321[v220];
                long long v222 = &v132[v220];
                id v223 = v219;
                __dsta(v221, v222, v334);
                (*(void (**)(char *, void, uint64_t, int *))(v320 + 56))(v321, 0, 1, v133);
              }
              v129[v322[7]] = v130[v322[7]];
              v129[v322[8]] = v130[v322[8]];
              v129[v322[9]] = v130[v322[9]];
              v129[v322[10]] = v130[v322[10]];
              uint64_t v224 = v323[11];
              uint64_t v225 = (char *)v326 + v224;
              uint64_t v226 = (char *)v341 + v224;
              uint64_t v227 = sub_1C151D2DC();
              uint64_t v228 = *(void *)(v227 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v226, 1, v227))
              {
                sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                memcpy(v225, v226, *(void *)(*(void *)(v229 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v228 + 16))(v225, v226, v227);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
              }
              uint64_t v230 = v323[12];
              uint64_t v231 = (void *)((char *)v326 + v230);
              uint64_t v232 = (void *)((char *)v341 + v230);
              if (v232[1] >= 0x11uLL)
              {
                *uint64_t v231 = *v232;
                v231[1] = v232[1];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
              }
              uint64_t v233 = v323[13];
              unint64_t v234 = *(void *)((char *)v341 + v233);
              if (v234 >= 2)
              {
                if (v234 == 2)
                {
                  *(void *)((char *)v326 + v233) = 2;
                }
                else
                {
                  *(void *)((char *)v326 + v233) = v234;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(void *)((char *)v326 + v233) = v234;
              }
              uint64_t v253 = v323[14];
              id v254 = *(void **)((char *)v341 + v253);
              *(void *)((char *)v326 + v253) = v254;
              uint64_t v255 = *(void (**)(void *, void, uint64_t, int *))(v119 + 56);
              id v256 = v254;
              v255(v326, 0, 1, v323);
            }
            uint64_t v257 = v345[13];
            uint64_t v258 = (void *)((char *)a1 + v257);
            uint64_t v259 = (void *)((char *)a2 + v257);
            uint64_t v260 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v261 = *(void *)(v260 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v261 + 48))(v259, 1, v260))
            {
              sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
              memcpy(v258, v259, *(void *)(*(void *)(v262 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              *uint64_t v258 = *v259;
              if (EnumCaseMultiPayload == 1)
              {
                v258[1] = v259[1];
                uint64_t v264 = type metadata accessor for GenericDataVisualization();
                uint64_t v265 = *(int *)(v264 + 20);
                uint64_t v342 = (char *)v258 + v265;
                uint64_t v266 = (char *)v259 + v265;
                swift_bridgeObjectRetain();
                __dsta(v342, v266, v334);
                *(void *)((char *)v258 + *(int *)(v264 + 24)) = *(void *)((char *)v259 + *(int *)(v264 + 24));
                swift_bridgeObjectRetain();
              }
              else
              {
                swift_retain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v261 + 56))(v258, 0, 1, v260);
            }
            *((unsigned char *)a1 + v345[14]) = *((unsigned char *)a2 + v345[14]);
            goto LABEL_199;
          case 5u:
            uint64_t v39 = (void *)*a2;
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
            uint64_t v40 = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            a1[4] = v40;
            a1[6] = a2[6];
            uint64_t v41 = (void *)a2[7];
            a1[7] = v41;
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v42 = a2[10];
            id v43 = v39;
            swift_bridgeObjectRetain();
            id v44 = v41;
            if (v42 == 1)
            {
              long long v45 = *(_OWORD *)(a2 + 9);
              long long v46 = *(_OWORD *)(a2 + 13);
              *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 13) = v46;
              *(_OWORD *)(a1 + 9) = v45;
            }
            else
            {
              a1[9] = a2[9];
              a1[10] = a2[10];
              a1[11] = a2[11];
              a1[12] = a2[12];
              uint64_t v93 = (void *)a2[13];
              a1[13] = v93;
              a1[14] = a2[14];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v94 = v93;
            }
            if (a2[16] >= 0x11uLL)
            {
              a1[15] = a2[15];
              a1[16] = a2[16];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
            }
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_199;
          case 6u:
            int v47 = *((unsigned __int8 *)a2 + 281);
            if (v47 == 2)
            {
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
              uint64_t v168 = a2[4];
              *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
              a1[4] = v168;
              a1[6] = a2[6];
              a1[7] = a2[7];
              a1[8] = a2[8];
              a1[9] = a2[9];
              uint64_t v169 = a2[11];
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v169 == 1)
              {
                *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
                long long v170 = *((_OWORD *)a2 + 6);
                long long v171 = *((_OWORD *)a2 + 7);
                long long v172 = *((_OWORD *)a2 + 8);
                *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
                *((_OWORD *)a1 + 7) = v171;
                *((_OWORD *)a1 + 8) = v172;
                *((_OWORD *)a1 + 6) = v170;
              }
              else
              {
                a1[10] = a2[10];
                a1[11] = a2[11];
                uint64_t v205 = a2[15];
                swift_bridgeObjectRetain();
                if (v205)
                {
                  a1[15] = v205;
                  a1[16] = a2[16];
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v205 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v205);
                  char v206 = *((unsigned char *)a2 + 144);
                  a1[17] = a2[17];
                  *((unsigned char *)a1 + 144) = v206;
                }
                else
                {
                  long long v288 = *((_OWORD *)a2 + 6);
                  long long v289 = *((_OWORD *)a2 + 7);
                  long long v290 = *((_OWORD *)a2 + 8);
                  *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
                  *((_OWORD *)a1 + 7) = v289;
                  *((_OWORD *)a1 + 8) = v290;
                  *((_OWORD *)a1 + 6) = v288;
                }
              }
            }
            else if (v47 == 1)
            {
              unint64_t v48 = (void *)*a2;
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
              *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
              uint64_t v49 = a2[4];
              *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
              a1[4] = v49;
              a1[6] = a2[6];
              uint64_t v50 = (void *)a2[7];
              a1[7] = v50;
              *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v51 = a2[10];
              id v52 = v48;
              swift_bridgeObjectRetain();
              id v53 = v50;
              if (v51 == 1)
              {
                long long v54 = *(_OWORD *)(a2 + 9);
                long long v55 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 13) = v55;
                *(_OWORD *)(a1 + 9) = v54;
              }
              else
              {
                a1[9] = a2[9];
                a1[10] = a2[10];
                a1[11] = a2[11];
                a1[12] = a2[12];
                long long v203 = (void *)a2[13];
                a1[13] = v203;
                a1[14] = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v204 = v203;
              }
              if (a2[16] >= 0x11uLL)
              {
                a1[15] = a2[15];
                a1[16] = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
              }
              *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
              uint64_t v209 = (void *)a2[18];
              if (v209)
              {
                a1[18] = v209;
                a1[19] = a2[19];
                a1[20] = a2[20];
                *((unsigned char *)a1 + 168) = *((unsigned char *)a2 + 168);
                *((unsigned char *)a1 + 169) = *((unsigned char *)a2 + 169);
                uint64_t v210 = a2[22];
                *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
                a1[22] = v210;
                a1[24] = a2[24];
                uint64_t v211 = (void *)a2[25];
                a1[25] = v211;
                *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
                uint64_t v212 = a2[28];
                id v213 = v209;
                swift_bridgeObjectRetain();
                id v214 = v211;
                if (v212 == 1)
                {
                  long long v215 = *(_OWORD *)(a2 + 27);
                  long long v216 = *(_OWORD *)(a2 + 31);
                  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
                  *(_OWORD *)(a1 + 31) = v216;
                  *(_OWORD *)(a1 + 27) = v215;
                }
                else
                {
                  a1[27] = a2[27];
                  a1[28] = a2[28];
                  a1[29] = a2[29];
                  a1[30] = a2[30];
                  id v241 = (void *)a2[31];
                  a1[31] = v241;
                  a1[32] = a2[32];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v242 = v241;
                }
                if (a2[34] >= 0x11uLL)
                {
                  a1[33] = a2[33];
                  a1[34] = a2[34];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
                }
                *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
              }
              else
              {
                *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
                long long v235 = *((_OWORD *)a2 + 10);
                long long v236 = *((_OWORD *)a2 + 11);
                long long v237 = *((_OWORD *)a2 + 13);
                *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
                *((_OWORD *)a1 + 13) = v237;
                *((_OWORD *)a1 + 10) = v235;
                *((_OWORD *)a1 + 11) = v236;
                long long v238 = *((_OWORD *)a2 + 14);
                long long v239 = *((_OWORD *)a2 + 15);
                long long v240 = *((_OWORD *)a2 + 16);
                *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
                *((_OWORD *)a1 + 15) = v239;
                *((_OWORD *)a1 + 16) = v240;
                *((_OWORD *)a1 + 14) = v238;
              }
            }
            else
            {
              uint64_t v173 = (void *)*a2;
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
              *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
              uint64_t v174 = a2[4];
              *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
              a1[4] = v174;
              a1[6] = a2[6];
              uint64_t v175 = (void *)a2[7];
              a1[7] = v175;
              *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v176 = a2[10];
              id v177 = v173;
              swift_bridgeObjectRetain();
              id v178 = v175;
              if (v176 == 1)
              {
                long long v179 = *(_OWORD *)(a2 + 9);
                long long v180 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 13) = v180;
                *(_OWORD *)(a1 + 9) = v179;
              }
              else
              {
                a1[9] = a2[9];
                a1[10] = a2[10];
                a1[11] = a2[11];
                a1[12] = a2[12];
                uint64_t v207 = (void *)a2[13];
                a1[13] = v207;
                a1[14] = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v208 = v207;
              }
              if (a2[16] >= 0x11uLL)
              {
                a1[15] = a2[15];
                a1[16] = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
              }
              *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            }
            *((unsigned char *)a1 + 281) = v47;
            goto LABEL_199;
          case 7u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            uint64_t v56 = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            a1[4] = v56;
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            uint64_t v57 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v57 == 1)
            {
              *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
              long long v58 = *((_OWORD *)a2 + 6);
              long long v59 = *((_OWORD *)a2 + 7);
              long long v60 = *((_OWORD *)a2 + 8);
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              *((_OWORD *)a1 + 7) = v59;
              *((_OWORD *)a1 + 8) = v60;
              *((_OWORD *)a1 + 6) = v58;
            }
            else
            {
              a1[10] = a2[10];
              a1[11] = a2[11];
              uint64_t v95 = a2[15];
              swift_bridgeObjectRetain();
              if (v95)
              {
                a1[15] = v95;
                a1[16] = a2[16];
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v95 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v95);
                char v96 = *((unsigned char *)a2 + 144);
                a1[17] = a2[17];
                *((unsigned char *)a1 + 144) = v96;
              }
              else
              {
                long long v200 = *((_OWORD *)a2 + 6);
                long long v201 = *((_OWORD *)a2 + 7);
                long long v202 = *((_OWORD *)a2 + 8);
                *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
                *((_OWORD *)a1 + 7) = v201;
                *((_OWORD *)a1 + 8) = v202;
                *((_OWORD *)a1 + 6) = v200;
              }
            }
            goto LABEL_199;
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v61 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
            uint64_t v62 = (void *)((char *)a1 + v61);
            uint64_t v63 = (char *)a2 + v61;
            *uint64_t v62 = *(void *)((char *)a2 + v61);
            v62[1] = *(void *)((char *)a2 + v61 + 8);
            v62[2] = *(void *)((char *)a2 + v61 + 16);
            v62[3] = *(void *)((char *)a2 + v61 + 24);
            uint64_t v344 = type metadata accessor for FormatCustomItem.Resolved();
            uint64_t v64 = *(int *)(v344 + 24);
            v333 = (char *)v62 + v64;
            id v65 = &v63[v64];
            uint64_t v66 = type metadata accessor for FormatCustomItem.Action();
            uint64_t v329 = *(void *)(v66 - 8);
            uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v329 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v67(v65, 1, v66))
            {
              sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
              memcpy(v333, v65, *(void *)(*(void *)(v68 - 8) + 64));
            }
            else
            {
              uint64_t v150 = sub_1C1515FDC();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v333, v65, v150);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v329 + 56))(v333, 0, 1, v66);
            }
            *(void *)((char *)v62 + *(int *)(v344 + 28)) = *(void *)&v63[*(int *)(v344 + 28)];
            swift_bridgeObjectRetain();
            goto LABEL_199;
          case 9u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            uint64_t v23 = a2[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v23)
            {
              a1[7] = v23;
              a1[8] = a2[8];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v23);
            }
            else
            {
              long long v111 = *((_OWORD *)a2 + 2);
              long long v112 = *((_OWORD *)a2 + 3);
              a1[8] = a2[8];
              *((_OWORD *)a1 + 2) = v111;
              *((_OWORD *)a1 + 3) = v112;
            }
            unint64_t v113 = a1 + 9;
            uint64_t v114 = (long long *)(a2 + 9);
            uint64_t v115 = a2[12];
            if (v115)
            {
              a1[12] = v115;
              a1[13] = a2[13];
              (**(void (***)(_OWORD *, long long *))(v115 - 8))(v113, v114);
            }
            else
            {
              long long v122 = *v114;
              long long v123 = *(_OWORD *)(a2 + 11);
              a1[13] = a2[13];
              *unint64_t v113 = v122;
              *(_OWORD *)(a1 + 11) = v123;
            }
            uint64_t v124 = a1 + 14;
            uint64_t v125 = (long long *)(a2 + 14);
            uint64_t v126 = a2[17];
            if (v126)
            {
              a1[17] = v126;
              a1[18] = a2[18];
              (**(void (***)(_OWORD *, long long *))(v126 - 8))(v124, v125);
            }
            else
            {
              long long v136 = *v125;
              long long v137 = *((_OWORD *)a2 + 8);
              a1[18] = a2[18];
              *uint64_t v124 = v136;
              *((_OWORD *)a1 + 8) = v137;
            }
            goto LABEL_199;
          case 0xAu:
            *a1 = *a2;
            a1[1] = a2[1];
            id v69 = (int *)type metadata accessor for FeedEngagementBanner();
            uint64_t v70 = v69[5];
            long long v71 = (char *)a1 + v70;
            int v72 = (char *)a2 + v70;
            uint64_t v73 = sub_1C151959C();
            uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
            swift_bridgeObjectRetain();
            v74(v71, v72, v73);
            *(void *)((char *)a1 + v69[6]) = *(void *)((char *)a2 + v69[6]);
            uint64_t v75 = v69[7];
            uint64_t v76 = (char *)a1 + v75;
            id v77 = (char *)a2 + v75;
            char v78 = v77[8];
            *(void *)uint64_t v76 = *(void *)v77;
            v76[8] = v78;
            uint64_t v79 = v69[8];
            uint64_t v20 = (char *)a1 + v79;
            uint64_t v21 = (char *)a2 + v79;
            if (*((void *)v21 + 1) >= 0x11uLL)
            {
LABEL_43:
              *(void *)uint64_t v20 = *(void *)v21;
              *((void *)v20 + 1) = *((void *)v21 + 1);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
            }
            goto LABEL_199;
          case 0xBu:
            *a1 = *a2;
            swift_retain();
            goto LABEL_199;
          case 0xCu:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v24 = a2[3];
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            a1[3] = v24;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_199;
          case 0xDu:
            *a1 = *a2;
            uint64_t v80 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v80;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            uint64_t v97 = (void *)a2[8];
            a1[8] = v97;
            *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
            a1[10] = a2[10];
            uint64_t v98 = a2[14];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            id v99 = v97;
            swift_bridgeObjectRetain();
            if (v98)
            {
              a1[14] = v98;
              a1[15] = a2[15];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v98 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v98);
            }
            else
            {
              long long v151 = *(_OWORD *)(a2 + 11);
              long long v152 = *(_OWORD *)(a2 + 13);
              a1[15] = a2[15];
              *(_OWORD *)(a1 + 11) = v151;
              *(_OWORD *)(a1 + 13) = v152;
            }
            uint64_t v153 = a1 + 16;
            uint64_t v154 = (long long *)(a2 + 16);
            uint64_t v155 = a2[19];
            if (v155)
            {
              a1[19] = v155;
              a1[20] = a2[20];
              (**(void (***)(_OWORD *, long long *))(v155 - 8))(v153, v154);
            }
            else
            {
              long long v161 = *v154;
              long long v162 = *((_OWORD *)a2 + 9);
              a1[20] = a2[20];
              *uint64_t v153 = v161;
              *((_OWORD *)a1 + 9) = v162;
            }
            long long v163 = a1 + 21;
            v164 = (long long *)(a2 + 21);
            uint64_t v165 = a2[24];
            if (v165)
            {
              a1[24] = v165;
              a1[25] = a2[25];
              (**(void (***)(_OWORD *, long long *))(v165 - 8))(v163, v164);
            }
            else
            {
              long long v166 = *v164;
              long long v167 = *(_OWORD *)(a2 + 23);
              a1[25] = a2[25];
              *long long v163 = v166;
              *(_OWORD *)(a1 + 23) = v167;
            }
            goto LABEL_199;
          case 0xEu:
            *a1 = *a2;
            uint64_t v25 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v25;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_199;
          case 0xFu:
            *a1 = *a2;
            uint64_t v81 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v81;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            break;
          case 0x10u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
            *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            a1[13] = a2[13];
            *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
            a1[15] = a2[15];
            a1[16] = a2[16];
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            a1[18] = a2[18];
            a1[19] = a2[19];
            a1[20] = a2[20];
            a1[21] = a2[21];
            uint64_t v26 = a2[22];
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            a1[22] = v26;
            a1[24] = a2[24];
            a1[25] = a2[25];
            a1[26] = a2[26];
            uint64_t v27 = a2[27];
            *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
            a1[27] = v27;
            uint64_t v332 = (void *)a2[30];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((unint64_t)v332 >= 0x11)
            {
              a1[29] = a2[29];
              a1[30] = a2[30];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
            }
            goto LABEL_199;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            goto LABEL_200;
        }
        break;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_200;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_200;
    }
    a1[5] = a2[5];
    a1[6] = a2[6];
    uint64_t v100 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v101 = (char *)a1 + v100;
    uint64_t v102 = (void *)((char *)a2 + v100);
    *(void *)((char *)a1 + v100) = *v102;
    uint64_t v103 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v104 = &v101[v103];
    uint64_t v105 = (void *)((char *)v102 + v103);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v184 = type metadata accessor for PuzzleStatisticValue(0);
        int v185 = swift_getEnumCaseMultiPayload();
        if (v185 == 5)
        {
          uint64_t v186 = type metadata accessor for PuzzleStreak();
          uint64_t v187 = *(void *)(v186 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v187 + 48))(v105, 1, v186))
          {
LABEL_111:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v104, v105, *(void *)(*(void *)(v188 - 8) + 64));
            goto LABEL_177;
          }
        }
        else
        {
          if (v185 != 4)
          {
            memcpy(v104, v105, *(void *)(*(void *)(v184 - 8) + 64));
            goto LABEL_178;
          }
          uint64_t v186 = type metadata accessor for PuzzleStreak();
          uint64_t v187 = *(void *)(v186 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v187 + 48))(v105, 1, v186)) {
            goto LABEL_111;
          }
        }
        uint64_t v297 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v297 - 8) + 16))(v104, v105, v297);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v104, 0, 1, v186);
LABEL_177:
        swift_storeEnumTagMultiPayload();
LABEL_178:
        uint64_t v298 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v299 = *(int *)(v298 + 20);
        uint64_t v300 = &v104[v299];
        uint64_t v301 = (char *)v105 + v299;
        int v302 = swift_getEnumCaseMultiPayload();
        if (v302 == 5)
        {
          long long v339 = v104;
          uint64_t v306 = type metadata accessor for PuzzleStreak();
          uint64_t v307 = *(void *)(v306 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v307 + 48))(v301, 1, v306))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v300, v301, *(void *)(*(void *)(v308 - 8) + 64));
          }
          else
          {
            uint64_t v310 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 16))(v300, v301, v310);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v307 + 56))(v300, 0, 1, v306);
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v104 = v339;
        }
        else if (v302 == 4)
        {
          long long v338 = v104;
          uint64_t v303 = type metadata accessor for PuzzleStreak();
          uint64_t v304 = *(void *)(v303 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v304 + 48))(v301, 1, v303))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v300, v301, *(void *)(*(void *)(v305 - 8) + 64));
          }
          else
          {
            uint64_t v309 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v300, v301, v309);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v304 + 56))(v300, 0, 1, v303);
          }
          uint64_t v104 = v338;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v300, v301, *(void *)(*(void *)(v184 - 8) + 64));
        }
        uint64_t v311 = *(int *)(v298 + 24);
        id v312 = &v104[v311];
        uint64_t v313 = (char *)v105 + v311;
        int v314 = swift_getEnumCaseMultiPayload();
        if (v314 == 5)
        {
          uint64_t v315 = type metadata accessor for PuzzleStreak();
          uint64_t v316 = *(void *)(v315 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v316 + 48))(v313, 1, v315))
          {
LABEL_194:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v312, v313, *(void *)(*(void *)(v317 - 8) + 64));
            goto LABEL_197;
          }
        }
        else
        {
          if (v314 != 4)
          {
            memcpy(v312, v313, *(void *)(*(void *)(v184 - 8) + 64));
            goto LABEL_198;
          }
          uint64_t v315 = type metadata accessor for PuzzleStreak();
          uint64_t v316 = *(void *)(v315 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v316 + 48))(v313, 1, v315)) {
            goto LABEL_194;
          }
        }
        uint64_t v318 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 16))(v312, v313, v318);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v316 + 56))(v312, 0, 1, v315);
        goto LABEL_197;
      case 2u:
        long long v181 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v182 = *((void *)v181 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v182 + 48))(v105, 1, v181))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          memcpy(v104, v105, *(void *)(*(void *)(v183 - 8) + 64));
        }
        else
        {
          uint64_t v243 = sub_1C151631C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v243 - 8) + 16))(v104, v105, v243);
          uint64_t v244 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v245 = v244[5];
          id v246 = &v104[v245];
          uint64_t v247 = (void *)((char *)v105 + v245);
          *(void *)id v246 = *v247;
          *((void *)v246 + 1) = v247[1];
          uint64_t v248 = v244[6];
          uint64_t v336 = v104;
          uint64_t v249 = &v104[v248];
          uint64_t v250 = (void *)((char *)v105 + v248);
          *(void *)uint64_t v249 = *v250;
          *((void *)v249 + 1) = v250[1];
          uint64_t v251 = v250 + 2;
          unint64_t v252 = v250[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v252 >> 60 == 15)
          {
            *((_OWORD *)v249 + 1) = *(_OWORD *)v251;
          }
          else
          {
            uint64_t v291 = *v251;
            sub_1BFE95820(*v251, v252);
            *((void *)v249 + 2) = v291;
            *((void *)v249 + 3) = v252;
          }
          *(void *)&v336[v244[7]] = *(void *)((char *)v105 + v244[7]);
          *(void *)&v336[v244[8]] = *(void *)((char *)v105 + v244[8]);
          *(void *)&v336[v181[5]] = *(void *)((char *)v105 + v181[5]);
          *(void *)&v336[v181[6]] = *(void *)((char *)v105 + v181[6]);
          uint64_t v292 = v181[7];
          unint64_t v293 = &v336[v292];
          uint64_t v294 = (void *)((char *)v105 + v292);
          *(void *)unint64_t v293 = *v294;
          *((void *)v293 + 1) = v294[1];
          uint64_t v295 = *(void (**)(char *, void, uint64_t, int *))(v182 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v295(v336, 0, 1, v181);
        }
        goto LABEL_198;
      case 3u:
        *(void *)uint64_t v104 = *v105;
        uint64_t v189 = v105[1];
        v104[16] = *((unsigned char *)v105 + 16);
        *((void *)v104 + 1) = v189;
        uint64_t v190 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v191 = v190[6];
        long long v192 = &v104[v191];
        uint64_t v193 = (char *)v105 + v191;
        uint64_t v194 = type metadata accessor for PuzzleStreak();
        uint64_t v195 = *(void *)(v194 - 8);
        long long v331 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48);
        if (v331(v193, 1, v194))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          uint64_t v267 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v192, v193, v267);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
        }
        uint64_t v268 = v190[7];
        uint64_t v337 = v104;
        uint64_t v269 = &v104[v268];
        uint64_t v270 = (char *)v105 + v268;
        if (v331((char *)v105 + v268, 1, v194))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v269, v270, *(void *)(*(void *)(v271 - 8) + 64));
        }
        else
        {
          uint64_t v272 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16))(v269, v270, v272);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v269, 0, 1, v194);
        }
        uint64_t v273 = v190[8];
        id v274 = &v337[v273];
        uint64_t v275 = (long long *)((char *)v105 + v273);
        long long v276 = *v275;
        long long v277 = v275[1];
        *(_OWORD *)(v274 + 25) = *(long long *)((char *)v275 + 25);
        *(_OWORD *)id v274 = v276;
        *((_OWORD *)v274 + 1) = v277;
        uint64_t v278 = v190[9];
        uint64_t v279 = &v337[v278];
        uint64_t v280 = (long long *)((char *)v105 + v278);
        long long v281 = *v280;
        long long v282 = v280[1];
        *(_OWORD *)(v279 + 25) = *(long long *)((char *)v280 + 25);
        *(_OWORD *)uint64_t v279 = v281;
        *((_OWORD *)v279 + 1) = v282;
        uint64_t v283 = v190[10];
        long long v284 = &v337[v283];
        long long v285 = (long long *)((char *)v105 + v283);
        long long v286 = *v285;
        long long v287 = v285[1];
        *(_OWORD *)(v284 + 25) = *(long long *)((char *)v285 + 25);
        *(_OWORD *)long long v284 = v286;
        *((_OWORD *)v284 + 1) = v287;
        goto LABEL_198;
      default:
        uint64_t v106 = type metadata accessor for PuzzleStatisticValue(0);
        int v107 = swift_getEnumCaseMultiPayload();
        if (v107 == 5)
        {
          uint64_t v108 = type metadata accessor for PuzzleStreak();
          uint64_t v109 = *(void *)(v108 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v109 + 48))(v105, 1, v108)) {
            goto LABEL_66;
          }
        }
        else
        {
          if (v107 != 4)
          {
            memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
            goto LABEL_198;
          }
          uint64_t v108 = type metadata accessor for PuzzleStreak();
          uint64_t v109 = *(void *)(v108 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v109 + 48))(v105, 1, v108))
          {
LABEL_66:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v104, v105, *(void *)(*(void *)(v110 - 8) + 64));
            goto LABEL_197;
          }
        }
        uint64_t v296 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v296 - 8) + 16))(v104, v105, v296);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v104, 0, 1, v108);
LABEL_197:
        swift_storeEnumTagMultiPayload();
LABEL_198:
        swift_storeEnumTagMultiPayload();
LABEL_199:
        swift_storeEnumTagMultiPayload();
LABEL_200:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_1C061951C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentValidationType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ContentValidationType()
{
  uint64_t result = qword_1EB86C940;
  if (!qword_1EB86C940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *initializeWithTake for ContentValidationType(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
        uint64_t v12 = v7[7];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        _OWORD v13[8] = v14[8];
        *(void *)uint64_t v13 = *(void *)v14;
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        goto LABEL_91;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        uint64_t v182 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v15 = v182[10];
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        char *v16 = a2[v15];
        v16[1] = a2[v15 + 1];
        char v18 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = &v17[v19];
        uint64_t v22 = (int *)type metadata accessor for SharedItem();
        uint64_t v23 = *((void *)v22 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v68 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v20, v21, v68);
          v20[v22[5]] = v21[v22[5]];
          *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
          uint64_t v69 = v22[7];
          long long v181 = &v20[v69];
          uint64_t v70 = &v21[v69];
          uint64_t v71 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v181, v70, v71);
          (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
        }
        v16[v18[7]] = v17[v18[7]];
        v16[v18[8]] = v17[v18[8]];
        v16[v18[9]] = v17[v18[9]];
        v16[v18[10]] = v17[v18[10]];
        uint64_t v72 = v182[11];
        uint64_t v73 = &a1[v72];
        uint64_t v74 = &a2[v72];
        uint64_t v75 = sub_1C151D2DC();
        uint64_t v76 = *(void *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        *(_OWORD *)&a1[v182[12]] = *(_OWORD *)&a2[v182[12]];
        uint64_t v86 = v182[13];
        uint64_t v87 = *(void *)&a2[v86];
        if (v87 == 2) {
          uint64_t v87 = 2;
        }
        *(void *)&a1[v86] = v87;
        *(void *)&a1[v182[14]] = *(void *)&a2[v182[14]];
        goto LABEL_91;
      case 4u:
        uint64_t v25 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v25;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v26 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v27 = v26[8];
        uint64_t v28 = &a1[v27];
        unint64_t v29 = &a2[v27];
        uint64_t v30 = sub_1C1515FDC();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v32(v28, v29, v30);
        uint64_t v33 = v26[9];
        uint64_t v34 = &a1[v33];
        uint64_t v35 = &a2[v33];
        uint64_t v180 = v30;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&a2[v33], 1, v30))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          v32(v34, v35, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
        }
        char v78 = v32;
        *(void *)&a1[v26[10]] = *(void *)&a2[v26[10]];
        *(void *)&a1[v26[11]] = *(void *)&a2[v26[11]];
        uint64_t v183 = v26;
        uint64_t v79 = v26[12];
        uint64_t v80 = &a1[v79];
        uint64_t v81 = &a2[v79];
        uint64_t v82 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v83 = *((void *)v82 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v83 + 48))(v81, 1, v82))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v177 = v83;
          id v178 = v32;
          *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
          *((void *)v80 + 2) = *((void *)v81 + 2);
          v80[24] = v81[24];
          *((void *)v80 + 4) = *((void *)v81 + 4);
          *(_OWORD *)(v80 + 40) = *(_OWORD *)(v81 + 40);
          v80[56] = v81[56];
          uint64_t v88 = v82[10];
          uint64_t v89 = &v80[v88];
          uint64_t v90 = &v81[v88];
          *uint64_t v89 = v81[v88];
          v89[1] = v81[v88 + 1];
          uint64_t v176 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v91 = v176[6];
          __dst = &v89[v91];
          uint64_t v92 = &v90[v91];
          uint64_t v93 = (int *)type metadata accessor for SharedItem();
          uint64_t v175 = *((void *)v93 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v175 + 48))(v92, 1, v93))
          {
            uint64_t v94 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v92, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            uint64_t v113 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(__dst, v92, v113);
            __dst[v93[5]] = v92[v93[5]];
            *(void *)&__dst[v93[6]] = *(void *)&v92[v93[6]];
            v178(&__dst[v93[7]], &v92[v93[7]], v180);
            (*(void (**)(char *, void, uint64_t, int *))(v175 + 56))(__dst, 0, 1, v93);
          }
          v89[v176[7]] = v90[v176[7]];
          v89[v176[8]] = v90[v176[8]];
          v89[v176[9]] = v90[v176[9]];
          v89[v176[10]] = v90[v176[10]];
          uint64_t v114 = v82[11];
          uint64_t v115 = &v80[v114];
          uint64_t v116 = &v81[v114];
          uint64_t v117 = sub_1C151D2DC();
          uint64_t v118 = *(void *)(v117 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
          }
          char v78 = v178;
          *(_OWORD *)&v80[v82[12]] = *(_OWORD *)&v81[v82[12]];
          uint64_t v120 = v82[13];
          uint64_t v121 = *(void *)&v81[v120];
          if (v121 == 2) {
            uint64_t v121 = 2;
          }
          *(void *)&v80[v120] = v121;
          *(void *)&v80[v82[14]] = *(void *)&v81[v82[14]];
          (*(void (**)(char *, void, uint64_t, int *))(v177 + 56))(v80, 0, 1, v82);
        }
        uint64_t v122 = v183[13];
        long long v123 = &a1[v122];
        uint64_t v124 = &a2[v122];
        uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v126 = *(void *)(v125 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)long long v123 = *(_OWORD *)v124;
            uint64_t v128 = type metadata accessor for GenericDataVisualization();
            uint64_t v129 = v78;
            uint64_t v130 = v128;
            v129(&v123[*(int *)(v128 + 20)], &v124[*(int *)(v128 + 20)], v180);
            *(void *)&v123[*(int *)(v130 + 24)] = *(void *)&v124[*(int *)(v130 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v123, v124, *(void *)(v126 + 64));
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
        }
        a1[v183[14]] = a2[v183[14]];
        goto LABEL_91;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        long long v40 = *(_OWORD *)&a2[v37 + 16];
        *(_OWORD *)uint64_t v38 = *(_OWORD *)&a2[v37];
        *((_OWORD *)v38 + 1) = v40;
        uint64_t v41 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v42 = *(int *)(v41 + 24);
        id v43 = &v38[v42];
        id v44 = &v39[v42];
        uint64_t v45 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v46 = *(void *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v85 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v43, v44, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        *(void *)&v38[*(int *)(v41 + 28)] = *(void *)&v39[*(int *)(v41 + 28)];
        goto LABEL_91;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        unint64_t v48 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v49 = v48[5];
        uint64_t v50 = &a1[v49];
        uint64_t v51 = &a2[v49];
        uint64_t v52 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        *(void *)&a1[v48[6]] = *(void *)&a2[v48[6]];
        uint64_t v53 = v48[7];
        long long v54 = &a1[v53];
        long long v55 = &a2[v53];
        v54[8] = v55[8];
        *(void *)long long v54 = *(void *)v55;
        *(_OWORD *)&a1[v48[8]] = *(_OWORD *)&a2[v48[8]];
        goto LABEL_91;
      case 0xFu:
        uint64_t v56 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v56;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        long long v58 = &a1[v57];
        long long v59 = &a2[v57];
        *(void *)&a1[v57] = *(void *)v59;
        uint64_t v60 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v61 = &v58[v60];
        uint64_t v62 = &v59[v60];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v99 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v101 = type metadata accessor for PuzzleStreak();
              uint64_t v102 = *(void *)(v101 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101))
              {
LABEL_37:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v61, v62, *(void *)(*(void *)(v103 - 8) + 64));
                goto LABEL_71;
              }
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                memcpy(v61, v62, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_72;
              }
              uint64_t v101 = type metadata accessor for PuzzleStreak();
              uint64_t v102 = *(void *)(v101 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101)) {
                goto LABEL_37;
              }
            }
            uint64_t v156 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v61, v62, v156);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v61, 0, 1, v101);
LABEL_71:
            swift_storeEnumTagMultiPayload();
LABEL_72:
            uint64_t v157 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v158 = *(int *)(v157 + 20);
            int v185 = v61;
            uint64_t v159 = &v61[v158];
            unint64_t v160 = &v62[v158];
            int v161 = swift_getEnumCaseMultiPayload();
            if (v161 == 5)
            {
              uint64_t v162 = type metadata accessor for PuzzleStreak();
              uint64_t v163 = *(void *)(v162 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v160, 1, v162))
              {
LABEL_77:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v159, v160, *(void *)(*(void *)(v164 - 8) + 64));
                goto LABEL_80;
              }
            }
            else
            {
              if (v161 != 4)
              {
                memcpy(v159, v160, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_81;
              }
              uint64_t v162 = type metadata accessor for PuzzleStreak();
              uint64_t v163 = *(void *)(v162 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v160, 1, v162)) {
                goto LABEL_77;
              }
            }
            uint64_t v165 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v159, v160, v165);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v159, 0, 1, v162);
LABEL_80:
            swift_storeEnumTagMultiPayload();
LABEL_81:
            uint64_t v166 = *(int *)(v157 + 24);
            long long v167 = (char *)v185 + v166;
            uint64_t v168 = &v62[v166];
            int v169 = swift_getEnumCaseMultiPayload();
            if (v169 == 5)
            {
              uint64_t v170 = type metadata accessor for PuzzleStreak();
              uint64_t v171 = *(void *)(v170 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v168, 1, v170))
              {
LABEL_86:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v167, v168, *(void *)(*(void *)(v172 - 8) + 64));
                goto LABEL_89;
              }
            }
            else
            {
              if (v169 != 4)
              {
                memcpy(v167, v168, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_90;
              }
              uint64_t v170 = type metadata accessor for PuzzleStreak();
              uint64_t v171 = *(void *)(v170 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v168, 1, v170)) {
                goto LABEL_86;
              }
            }
            uint64_t v173 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v167, v168, v173);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v167, 0, 1, v170);
            goto LABEL_89;
          case 2u:
            uint64_t v95 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v96 = *((void *)v95 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v96 + 48))(v62, 1, v95))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              size_t v98 = *(void *)(*(void *)(v97 - 8) + 64);
              goto LABEL_63;
            }
            uint64_t v131 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v61, v62, v131);
            unint64_t v132 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v61[v132[5]] = *(_OWORD *)&v62[v132[5]];
            uint64_t v133 = v132[6];
            uint64_t v134 = &v61[v133];
            uint64_t v135 = &v62[v133];
            long long v136 = *((_OWORD *)v135 + 1);
            *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
            *((_OWORD *)v134 + 1) = v136;
            *(void *)&v61[v132[7]] = *(void *)&v62[v132[7]];
            *(void *)&v61[v132[8]] = *(void *)&v62[v132[8]];
            *(void *)&v61[v95[5]] = *(void *)&v62[v95[5]];
            *(void *)&v61[v95[6]] = *(void *)&v62[v95[6]];
            *(_OWORD *)&v61[v95[7]] = *(_OWORD *)&v62[v95[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v96 + 56))(v61, 0, 1, v95);
            goto LABEL_90;
          case 3u:
            uint64_t v104 = *((void *)v62 + 1);
            *(void *)uint64_t v61 = *(void *)v62;
            *((void *)v61 + 1) = v104;
            v61[16] = v62[16];
            uint64_t v105 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v106 = v105[6];
            uint64_t v184 = v61;
            int v107 = &v61[v106];
            uint64_t v108 = &v62[v106];
            uint64_t v109 = type metadata accessor for PuzzleStreak();
            uint64_t v110 = *(void *)(v109 - 8);
            long long v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
            if (v111(v108, 1, v109))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              uint64_t v137 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v107, v108, v137);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
            }
            uint64_t v138 = v105[7];
            uint64_t v139 = (char *)v184 + v138;
            uint64_t v140 = &v62[v138];
            if (v111(&v62[v138], 1, v109))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
            }
            else
            {
              uint64_t v142 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v139, v140, v142);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v139, 0, 1, v109);
            }
            uint64_t v143 = v105[8];
            uint64_t v144 = (_OWORD *)((char *)v184 + v143);
            uint64_t v145 = &v62[v143];
            long long v146 = *((_OWORD *)v145 + 1);
            *uint64_t v144 = *(_OWORD *)v145;
            v144[1] = v146;
            *(_OWORD *)((char *)v144 + 25) = *(_OWORD *)(v145 + 25);
            uint64_t v147 = v105[9];
            uint64_t v148 = (_OWORD *)((char *)v184 + v147);
            uint64_t v149 = &v62[v147];
            *(_OWORD *)((char *)v148 + 25) = *(_OWORD *)(v149 + 25);
            long long v150 = *((_OWORD *)v149 + 1);
            *uint64_t v148 = *(_OWORD *)v149;
            v148[1] = v150;
            uint64_t v151 = v105[10];
            long long v152 = (_OWORD *)((char *)v184 + v151);
            uint64_t v153 = &v62[v151];
            long long v154 = *((_OWORD *)v153 + 1);
            *long long v152 = *(_OWORD *)v153;
            v152[1] = v154;
            *(_OWORD *)((char *)v152 + 25) = *(_OWORD *)(v153 + 25);
            goto LABEL_90;
          default:
            uint64_t v63 = type metadata accessor for PuzzleStatisticValue(0);
            int v64 = swift_getEnumCaseMultiPayload();
            if (v64 == 5)
            {
              uint64_t v65 = type metadata accessor for PuzzleStreak();
              uint64_t v66 = *(void *)(v65 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65)) {
                goto LABEL_17;
              }
            }
            else
            {
              if (v64 != 4)
              {
                size_t v98 = *(void *)(*(void *)(v63 - 8) + 64);
LABEL_63:
                memcpy(v61, v62, v98);
                goto LABEL_90;
              }
              uint64_t v65 = type metadata accessor for PuzzleStreak();
              uint64_t v66 = *(void *)(v65 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65))
              {
LABEL_17:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
                goto LABEL_89;
              }
            }
            uint64_t v155 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v61, v62, v155);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v65);
LABEL_89:
            swift_storeEnumTagMultiPayload();
LABEL_90:
            swift_storeEnumTagMultiPayload();
LABEL_91:
            swift_storeEnumTagMultiPayload();
LABEL_92:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_92;
    }
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ContentValidationType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C061951C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v6 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v8 = v7[5];
          uint64_t v9 = &a1[v8];
          uint64_t v10 = &a2[v8];
          uint64_t v11 = sub_1C151DBAC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
          *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
          uint64_t v12 = v7[7];
          uint64_t v13 = &a1[v12];
          uint64_t v14 = &a2[v12];
          _OWORD v13[8] = v14[8];
          *(void *)uint64_t v13 = *(void *)v14;
          *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
          goto LABEL_92;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((void *)a1 + 2) = *((void *)a2 + 2);
          a1[24] = a2[24];
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          a1[56] = a2[56];
          uint64_t v182 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v15 = v182[10];
          uint64_t v16 = &a1[v15];
          uint64_t v17 = &a2[v15];
          char *v16 = a2[v15];
          v16[1] = a2[v15 + 1];
          char v18 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v19 = v18[6];
          uint64_t v20 = &v16[v19];
          uint64_t v21 = &v17[v19];
          uint64_t v22 = (int *)type metadata accessor for SharedItem();
          uint64_t v23 = *((void *)v22 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
          {
            uint64_t v24 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            uint64_t v68 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v20, v21, v68);
            v20[v22[5]] = v21[v22[5]];
            *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
            uint64_t v69 = v22[7];
            long long v181 = &v20[v69];
            uint64_t v70 = &v21[v69];
            uint64_t v71 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v181, v70, v71);
            (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
          }
          v16[v18[7]] = v17[v18[7]];
          v16[v18[8]] = v17[v18[8]];
          v16[v18[9]] = v17[v18[9]];
          v16[v18[10]] = v17[v18[10]];
          uint64_t v72 = v182[11];
          uint64_t v73 = &a1[v72];
          uint64_t v74 = &a2[v72];
          uint64_t v75 = sub_1C151D2DC();
          uint64_t v76 = *(void *)(v75 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          }
          *(_OWORD *)&a1[v182[12]] = *(_OWORD *)&a2[v182[12]];
          uint64_t v86 = v182[13];
          uint64_t v87 = *(void *)&a2[v86];
          if (v87 == 2) {
            uint64_t v87 = 2;
          }
          *(void *)&a1[v86] = v87;
          *(void *)&a1[v182[14]] = *(void *)&a2[v182[14]];
          goto LABEL_92;
        case 4u:
          uint64_t v25 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v25;
          a1[16] = a2[16];
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          uint64_t v26 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v27 = v26[8];
          uint64_t v28 = &a1[v27];
          unint64_t v29 = &a2[v27];
          uint64_t v30 = sub_1C1515FDC();
          uint64_t v31 = *(void *)(v30 - 8);
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
          v32(v28, v29, v30);
          uint64_t v33 = v26[9];
          uint64_t v34 = &a1[v33];
          uint64_t v35 = &a2[v33];
          uint64_t v180 = v30;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&a2[v33], 1, v30))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            v32(v34, v35, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
          }
          char v78 = v32;
          *(void *)&a1[v26[10]] = *(void *)&a2[v26[10]];
          *(void *)&a1[v26[11]] = *(void *)&a2[v26[11]];
          uint64_t v183 = v26;
          uint64_t v79 = v26[12];
          uint64_t v80 = &a1[v79];
          uint64_t v81 = &a2[v79];
          uint64_t v82 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v83 = *((void *)v82 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v83 + 48))(v81, 1, v82))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
          }
          else
          {
            uint64_t v177 = v83;
            id v178 = v32;
            *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
            *((void *)v80 + 2) = *((void *)v81 + 2);
            v80[24] = v81[24];
            *((void *)v80 + 4) = *((void *)v81 + 4);
            *(_OWORD *)(v80 + 40) = *(_OWORD *)(v81 + 40);
            v80[56] = v81[56];
            uint64_t v88 = v82[10];
            uint64_t v89 = &v80[v88];
            uint64_t v90 = &v81[v88];
            *uint64_t v89 = v81[v88];
            v89[1] = v81[v88 + 1];
            uint64_t v176 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v91 = v176[6];
            __dst = &v89[v91];
            uint64_t v92 = &v90[v91];
            uint64_t v93 = (int *)type metadata accessor for SharedItem();
            uint64_t v175 = *((void *)v93 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v175 + 48))(v92, 1, v93))
            {
              uint64_t v94 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v92, *(void *)(*(void *)(v94 - 8) + 64));
            }
            else
            {
              uint64_t v113 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(__dst, v92, v113);
              __dst[v93[5]] = v92[v93[5]];
              *(void *)&__dst[v93[6]] = *(void *)&v92[v93[6]];
              v178(&__dst[v93[7]], &v92[v93[7]], v180);
              (*(void (**)(char *, void, uint64_t, int *))(v175 + 56))(__dst, 0, 1, v93);
            }
            v89[v176[7]] = v90[v176[7]];
            v89[v176[8]] = v90[v176[8]];
            v89[v176[9]] = v90[v176[9]];
            v89[v176[10]] = v90[v176[10]];
            uint64_t v114 = v82[11];
            uint64_t v115 = &v80[v114];
            uint64_t v116 = &v81[v114];
            uint64_t v117 = sub_1C151D2DC();
            uint64_t v118 = *(void *)(v117 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
            }
            char v78 = v178;
            *(_OWORD *)&v80[v82[12]] = *(_OWORD *)&v81[v82[12]];
            uint64_t v120 = v82[13];
            uint64_t v121 = *(void *)&v81[v120];
            if (v121 == 2) {
              uint64_t v121 = 2;
            }
            *(void *)&v80[v120] = v121;
            *(void *)&v80[v82[14]] = *(void *)&v81[v82[14]];
            (*(void (**)(char *, void, uint64_t, int *))(v177 + 56))(v80, 0, 1, v82);
          }
          uint64_t v122 = v183[13];
          long long v123 = &a1[v122];
          uint64_t v124 = &a2[v122];
          uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v126 = *(void *)(v125 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
          {
            sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)long long v123 = *(_OWORD *)v124;
              uint64_t v128 = type metadata accessor for GenericDataVisualization();
              uint64_t v129 = v78;
              uint64_t v130 = v128;
              v129(&v123[*(int *)(v128 + 20)], &v124[*(int *)(v128 + 20)], v180);
              *(void *)&v123[*(int *)(v130 + 24)] = *(void *)&v124[*(int *)(v130 + 24)];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v123, v124, *(void *)(v126 + 64));
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
          }
          a1[v183[14]] = a2[v183[14]];
          goto LABEL_92;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          uint64_t v38 = &a1[v37];
          uint64_t v39 = &a2[v37];
          long long v40 = *(_OWORD *)&a2[v37 + 16];
          *(_OWORD *)uint64_t v38 = *(_OWORD *)&a2[v37];
          *((_OWORD *)v38 + 1) = v40;
          uint64_t v41 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v42 = *(int *)(v41 + 24);
          id v43 = &v38[v42];
          id v44 = &v39[v42];
          uint64_t v45 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v46 = *(void *)(v45 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
          {
            sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            uint64_t v85 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v43, v44, v85);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          }
          *(void *)&v38[*(int *)(v41 + 28)] = *(void *)&v39[*(int *)(v41 + 28)];
          goto LABEL_92;
        case 0xAu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          unint64_t v48 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v49 = v48[5];
          uint64_t v50 = &a1[v49];
          uint64_t v51 = &a2[v49];
          uint64_t v52 = sub_1C151959C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
          *(void *)&a1[v48[6]] = *(void *)&a2[v48[6]];
          uint64_t v53 = v48[7];
          long long v54 = &a1[v53];
          long long v55 = &a2[v53];
          v54[8] = v55[8];
          *(void *)long long v54 = *(void *)v55;
          *(_OWORD *)&a1[v48[8]] = *(_OWORD *)&a2[v48[8]];
          goto LABEL_92;
        case 0xFu:
          uint64_t v56 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v56;
          a1[16] = a2[16];
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          uint64_t v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          long long v58 = &a1[v57];
          long long v59 = &a2[v57];
          *(void *)&a1[v57] = *(void *)v59;
          uint64_t v60 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          uint64_t v61 = &v58[v60];
          uint64_t v62 = &v59[v60];
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v99 = type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5)
              {
                uint64_t v101 = type metadata accessor for PuzzleStreak();
                uint64_t v102 = *(void *)(v101 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101))
                {
LABEL_38:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v61, v62, *(void *)(*(void *)(v103 - 8) + 64));
                  goto LABEL_72;
                }
              }
              else
              {
                if (EnumCaseMultiPayload != 4)
                {
                  memcpy(v61, v62, *(void *)(*(void *)(v99 - 8) + 64));
                  goto LABEL_73;
                }
                uint64_t v101 = type metadata accessor for PuzzleStreak();
                uint64_t v102 = *(void *)(v101 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101)) {
                  goto LABEL_38;
                }
              }
              uint64_t v156 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v61, v62, v156);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v61, 0, 1, v101);
LABEL_72:
              swift_storeEnumTagMultiPayload();
LABEL_73:
              uint64_t v157 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v158 = *(int *)(v157 + 20);
              int v185 = v61;
              uint64_t v159 = &v61[v158];
              unint64_t v160 = &v62[v158];
              int v161 = swift_getEnumCaseMultiPayload();
              if (v161 == 5)
              {
                uint64_t v162 = type metadata accessor for PuzzleStreak();
                uint64_t v163 = *(void *)(v162 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v160, 1, v162))
                {
LABEL_78:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v159, v160, *(void *)(*(void *)(v164 - 8) + 64));
                  goto LABEL_81;
                }
              }
              else
              {
                if (v161 != 4)
                {
                  memcpy(v159, v160, *(void *)(*(void *)(v99 - 8) + 64));
                  goto LABEL_82;
                }
                uint64_t v162 = type metadata accessor for PuzzleStreak();
                uint64_t v163 = *(void *)(v162 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v160, 1, v162)) {
                  goto LABEL_78;
                }
              }
              uint64_t v165 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v159, v160, v165);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v159, 0, 1, v162);
LABEL_81:
              swift_storeEnumTagMultiPayload();
LABEL_82:
              uint64_t v166 = *(int *)(v157 + 24);
              long long v167 = (char *)v185 + v166;
              uint64_t v168 = &v62[v166];
              int v169 = swift_getEnumCaseMultiPayload();
              if (v169 == 5)
              {
                uint64_t v170 = type metadata accessor for PuzzleStreak();
                uint64_t v171 = *(void *)(v170 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v168, 1, v170))
                {
LABEL_87:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v167, v168, *(void *)(*(void *)(v172 - 8) + 64));
                  goto LABEL_90;
                }
              }
              else
              {
                if (v169 != 4)
                {
                  memcpy(v167, v168, *(void *)(*(void *)(v99 - 8) + 64));
                  goto LABEL_91;
                }
                uint64_t v170 = type metadata accessor for PuzzleStreak();
                uint64_t v171 = *(void *)(v170 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v168, 1, v170)) {
                  goto LABEL_87;
                }
              }
              uint64_t v173 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v167, v168, v173);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v167, 0, 1, v170);
              goto LABEL_90;
            case 2u:
              uint64_t v95 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              uint64_t v96 = *((void *)v95 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v96 + 48))(v62, 1, v95))
              {
                sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                size_t v98 = *(void *)(*(void *)(v97 - 8) + 64);
                goto LABEL_64;
              }
              uint64_t v131 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v61, v62, v131);
              unint64_t v132 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v61[v132[5]] = *(_OWORD *)&v62[v132[5]];
              uint64_t v133 = v132[6];
              uint64_t v134 = &v61[v133];
              uint64_t v135 = &v62[v133];
              long long v136 = *((_OWORD *)v135 + 1);
              *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
              *((_OWORD *)v134 + 1) = v136;
              *(void *)&v61[v132[7]] = *(void *)&v62[v132[7]];
              *(void *)&v61[v132[8]] = *(void *)&v62[v132[8]];
              *(void *)&v61[v95[5]] = *(void *)&v62[v95[5]];
              *(void *)&v61[v95[6]] = *(void *)&v62[v95[6]];
              *(_OWORD *)&v61[v95[7]] = *(_OWORD *)&v62[v95[7]];
              (*(void (**)(char *, void, uint64_t, int *))(v96 + 56))(v61, 0, 1, v95);
              goto LABEL_91;
            case 3u:
              uint64_t v104 = *((void *)v62 + 1);
              *(void *)uint64_t v61 = *(void *)v62;
              *((void *)v61 + 1) = v104;
              v61[16] = v62[16];
              uint64_t v105 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v106 = v105[6];
              uint64_t v184 = v61;
              int v107 = &v61[v106];
              uint64_t v108 = &v62[v106];
              uint64_t v109 = type metadata accessor for PuzzleStreak();
              uint64_t v110 = *(void *)(v109 - 8);
              long long v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
              if (v111(v108, 1, v109))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
              }
              else
              {
                uint64_t v137 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v107, v108, v137);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
              }
              uint64_t v138 = v105[7];
              uint64_t v139 = (char *)v184 + v138;
              uint64_t v140 = &v62[v138];
              if (v111(&v62[v138], 1, v109))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
              }
              else
              {
                uint64_t v142 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v139, v140, v142);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v139, 0, 1, v109);
              }
              uint64_t v143 = v105[8];
              uint64_t v144 = (_OWORD *)((char *)v184 + v143);
              uint64_t v145 = &v62[v143];
              long long v146 = *((_OWORD *)v145 + 1);
              *uint64_t v144 = *(_OWORD *)v145;
              v144[1] = v146;
              *(_OWORD *)((char *)v144 + 25) = *(_OWORD *)(v145 + 25);
              uint64_t v147 = v105[9];
              uint64_t v148 = (_OWORD *)((char *)v184 + v147);
              uint64_t v149 = &v62[v147];
              *(_OWORD *)((char *)v148 + 25) = *(_OWORD *)(v149 + 25);
              long long v150 = *((_OWORD *)v149 + 1);
              *uint64_t v148 = *(_OWORD *)v149;
              v148[1] = v150;
              uint64_t v151 = v105[10];
              long long v152 = (_OWORD *)((char *)v184 + v151);
              uint64_t v153 = &v62[v151];
              long long v154 = *((_OWORD *)v153 + 1);
              *long long v152 = *(_OWORD *)v153;
              v152[1] = v154;
              *(_OWORD *)((char *)v152 + 25) = *(_OWORD *)(v153 + 25);
              goto LABEL_91;
            default:
              uint64_t v63 = type metadata accessor for PuzzleStatisticValue(0);
              int v64 = swift_getEnumCaseMultiPayload();
              if (v64 == 5)
              {
                uint64_t v65 = type metadata accessor for PuzzleStreak();
                uint64_t v66 = *(void *)(v65 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65)) {
                  goto LABEL_18;
                }
              }
              else
              {
                if (v64 != 4)
                {
                  size_t v98 = *(void *)(*(void *)(v63 - 8) + 64);
LABEL_64:
                  memcpy(v61, v62, v98);
                  goto LABEL_91;
                }
                uint64_t v65 = type metadata accessor for PuzzleStreak();
                uint64_t v66 = *(void *)(v65 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65))
                {
LABEL_18:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
                  goto LABEL_90;
                }
              }
              uint64_t v155 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v61, v62, v155);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v65);
LABEL_90:
              swift_storeEnumTagMultiPayload();
LABEL_91:
              swift_storeEnumTagMultiPayload();
LABEL_92:
              swift_storeEnumTagMultiPayload();
LABEL_93:
              swift_storeEnumTagMultiPayload();
              break;
          }
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_93;
      }
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C061CF9C()
{
  uint64_t result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C061D054(uint64_t a1)
{
  uint64_t v145 = a1;
  uint64_t v143 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1F4188790](v143);
  uint64_t v2 = (uint64_t *)((char *)&v127 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = (void (**)(void, void))type metadata accessor for DebugFormatVersioningModeItem();
  uint64_t v4 = (uint64_t)*(v3 - 1);
  MEMORY[0x1F4188790](v3);
  unint64_t v132 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v127 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v141 = (uint64_t)&v127 - v10;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C061FB04(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v129 = (char *)&v127 - v13;
  uint64_t v14 = sub_1C151928C();
  uint64_t v135 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v128 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v18 = (char *)&v127 - v17;
  sub_1C061FB04(0, &qword_1EA19CB70, type metadata accessor for DebugFormatFileDirectoryMetadata, v11);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v138 = (char *)&v127 - v20;
  uint64_t v134 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  uint64_t v137 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  uint64_t v139 = (uint64_t *)((char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB882A48 != -1) {
    goto LABEL_66;
  }
  while (1)
  {
    uint64_t v140 = v8;
    unint64_t v22 = sub_1C061FA64();
    uint64_t v23 = sub_1C061FABC((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
    unint64_t v131 = v22;
    uint64_t v142 = v14;
    uint64_t v130 = v23;
    uint64_t v24 = sub_1C151EC3C();
    uint64_t v25 = v24;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v152 = MEMORY[0x1E4FBC860];
    uint64_t v27 = *(char **)(v24 + 16);
    p_superclass = &OBJC_METACLASS____TtC8NewsFeed20CategoryViewRenderer.superclass;
    uint64_t v144 = v3;
    if (!v27) {
      break;
    }
    uint64_t v136 = v4;
    uint64_t v8 = 0;
    uint64_t v4 = v24 + 32;
    uint64_t v3 = (void (**)(void, void))(v135 + 8);
    while ((unint64_t)v8 < *(void *)(v25 + 16))
    {
      sub_1BFC66384(v4, (uint64_t)&v149);
      uint64_t v29 = v150;
      uint64_t v30 = v151;
      __swift_project_boxed_opaque_existential_1(&v149, v150);
      sub_1BFEFE794(v29, v30);
      if (p_superclass[416] != (__objc2_class *)-1) {
        swift_once();
      }
      uint64_t v31 = v142;
      __swift_project_value_buffer(v142, (uint64_t)qword_1EB8799C8);
      sub_1C061FABC(&qword_1EB85C8B8, MEMORY[0x1E4FAB0A8]);
      uint64_t v14 = sub_1C151E5CC();
      (*v3)(v18, v31);
      if (v14)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
      }
      else
      {
        sub_1BFC773DC(&v149, (uint64_t)&v146);
        uint64_t v14 = v152;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F7724(0, *(void *)(v14 + 16) + 1, 1);
          uint64_t v14 = v152;
        }
        unint64_t v33 = *(void *)(v14 + 16);
        unint64_t v32 = *(void *)(v14 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1C05F7724(v32 > 1, v33 + 1, 1);
          uint64_t v14 = v152;
        }
        *(void *)(v14 + 16) = v33 + 1;
        sub_1BFC773DC(&v146, v14 + 40 * v33 + 32);
        p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC8NewsFeed20CategoryViewRenderer + 8);
      }
      ++v8;
      v4 += 40;
      if (v27 == v8)
      {
        uint64_t v26 = v152;
        uint64_t v4 = v136;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_66:
    swift_once();
  }
LABEL_16:
  uint64_t v136 = v26;
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v34 = (uint64_t)v138;
  sub_1C151894C();
  swift_release();
  uint64_t v35 = v134;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v34, 1, v134) == 1)
  {
    sub_1C061FB68(v34, &qword_1EA19CB70, type metadata accessor for DebugFormatFileDirectoryMetadata);
    sub_1C061FB04(0, (unint64_t *)&unk_1EA19C750, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, MEMORY[0x1E4FBBE00]);
    uint64_t v36 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v37 = (v36 + 32) & ~v36;
    uint64_t v145 = *(void *)(v4 + 72);
    uint64_t v38 = v37 + v145;
    uint64_t v137 = v36 | 7;
    uint64_t v138 = v39;
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
    uint64_t v41 = v37;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = sub_1C0EE5D48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v44 = v42[2];
    unint64_t v43 = v42[3];
    if (v44 >= v43 >> 1) {
      uint64_t v42 = sub_1C0EE5D48((void *)(v43 > 1), v44 + 1, 1, v42);
    }
    v42[2] = v44 + 1;
    uint64_t v45 = &v42[5 * v44];
    *((_OWORD *)v45 + 2) = xmmword_1C15556C0;
    v45[6] = 0;
    v45[7] = 0;
    v45[8] = v40;
  }
  else
  {
    uint64_t v46 = v139;
    sub_1C061FBD8(v34, (uint64_t)v139, type metadata accessor for DebugFormatFileDirectoryMetadata);
    sub_1C061FB04(0, (unint64_t *)&unk_1EA19C750, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, MEMORY[0x1E4FBBE00]);
    uint64_t v47 = *(void *)(v4 + 72);
    uint64_t v48 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v49 = (v48 + 32) & ~v48;
    uint64_t v137 = v48 | 7;
    uint64_t v138 = v50;
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_1C152C7F0;
    *(void *)&long long v133 = v49;
    uint64_t v52 = (void *)(v51 + v49);
    uint64_t v53 = (void *)((char *)v46 + *(int *)(v35 + 24));
    uint64_t v54 = *v53;
    uint64_t v55 = v53[1];
    *uint64_t v52 = 0x6172422065736142;
    v52[1] = 0xEB0000000068636ELL;
    v52[2] = v54;
    uint64_t v52[3] = v55;
    swift_storeEnumTagMultiPayload();
    uint64_t v145 = v47;
    uint64_t v56 = v51 + v49 + v47;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1C151920C();
    strcpy((char *)v56, "Format Version");
    *(unsigned char *)(v56 + 15) = -18;
    *(void *)(v56 + 16) = v57;
    *(void *)(v56 + 24) = v58;
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = v51 + v49 + 2 * v47;
    uint64_t v60 = sub_1C151920C();
    strcpy((char *)v59, "Server Version");
    *(unsigned char *)(v59 + 15) = -18;
    *(void *)(v59 + 16) = v60;
    *(void *)(v59 + 24) = v61;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = sub_1C0EE5D48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v63 = v42[2];
    unint64_t v62 = v42[3];
    if (v63 >= v62 >> 1) {
      uint64_t v42 = sub_1C0EE5D48((void *)(v62 > 1), v63 + 1, 1, v42);
    }
    v42[2] = v63 + 1;
    int v64 = &v42[5 * v63];
    *((_OWORD *)v64 + 2) = xmmword_1C15556C0;
    v64[6] = 0xD000000000000056;
    v64[7] = 0x80000001C16148F0;
    v64[8] = v51;
    sub_1BFF9C89C((uint64_t)v139, type metadata accessor for DebugFormatFileDirectoryMetadata);
    uint64_t v41 = v133;
    uint64_t v38 = v133 + v145;
  }
  uint64_t v139 = v42;
  sub_1C061FB04(0, (unint64_t *)&unk_1EA19C750, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, MEMORY[0x1E4FBBE00]);
  uint64_t v134 = v38;
  uint64_t v65 = swift_allocObject();
  long long v133 = xmmword_1C1529AE0;
  *(_OWORD *)(v65 + 16) = xmmword_1C1529AE0;
  uint64_t v66 = v41;
  type metadata accessor for FormatVersioningModeSelection(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v67 = v136;
  int64_t v68 = *(void *)(v136 + 16);
  uint64_t v69 = MEMORY[0x1E4FBC860];
  if (v68)
  {
    uint64_t v127 = v65;
    uint64_t v152 = MEMORY[0x1E4FBC860];
    sub_1C05F76DC(0, v68, 0);
    uint64_t v70 = v67 + 32;
    int64_t v71 = v68;
    uint64_t v72 = v141;
    do
    {
      sub_1BFC66384(v70, (uint64_t)&v149);
      sub_1BFC66384((uint64_t)&v149, (uint64_t)&v146);
      uint64_t v73 = v147;
      uint64_t v74 = v148;
      __swift_project_boxed_opaque_existential_1(&v146, v147);
      *uint64_t v2 = sub_1C14F9E64(v73, v74);
      v2[1] = v75;
      uint64_t v76 = v147;
      uint64_t v77 = v148;
      __swift_project_boxed_opaque_existential_1(&v146, v147);
      sub_1BFEFE794(v76, v77);
      sub_1C061FBD8((uint64_t)v2, v72, type metadata accessor for FormatVersioningModeRelease);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v146);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
      uint64_t v69 = v152;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F76DC(0, *(void *)(v69 + 16) + 1, 1);
        uint64_t v69 = v152;
      }
      unint64_t v79 = *(void *)(v69 + 16);
      unint64_t v78 = *(void *)(v69 + 24);
      if (v79 >= v78 >> 1)
      {
        sub_1C05F76DC(v78 > 1, v79 + 1, 1);
        uint64_t v69 = v152;
      }
      *(void *)(v69 + 16) = v79 + 1;
      uint64_t v80 = v69 + v66 + v79 * v145;
      uint64_t v72 = v141;
      sub_1C061FBD8(v141, v80, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem);
      v70 += 40;
      --v71;
    }
    while (v71);
    uint64_t v65 = v127;
  }
  *(void *)&long long v149 = v65;
  sub_1C1049F70(v69);
  uint64_t v81 = v149;
  uint64_t v82 = v139;
  unint64_t v84 = v139[2];
  unint64_t v83 = v139[3];
  if (v84 >= v83 >> 1) {
    uint64_t v82 = sub_1C0EE5D48((void *)(v83 > 1), v84 + 1, 1, v139);
  }
  v82[2] = v84 + 1;
  uint64_t v85 = &v82[5 * v84];
  *((_OWORD *)v85 + 2) = xmmword_1C15556D0;
  v85[6] = 0;
  v85[7] = 0;
  v85[8] = v81;
  if (qword_1EB87BD00 != -1) {
    swift_once();
  }
  uint64_t v86 = v142;
  uint64_t v87 = __swift_project_value_buffer(v142, (uint64_t)qword_1EB8799C8);
  uint64_t v88 = v135;
  uint64_t v89 = v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v128, v87, v86);
  uint64_t v90 = (uint64_t)v129;
  sub_1C151927C();
  uint64_t v91 = sub_1C15187BC();
  int v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v90, 1, v91);
  sub_1C061FB68(v90, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70]);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v86);
  if (v92 == 1)
  {
    swift_release();
    uint64_t v93 = (uint64_t)v132;
  }
  else
  {
    uint64_t v139 = v82;
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = v133;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v95 = v136;
    if (v68)
    {
      uint64_t v152 = MEMORY[0x1E4FBC860];
      sub_1C05F76DC(0, v68, 0);
      uint64_t v96 = v95 + 32;
      uint64_t v97 = (uint64_t)v140;
      do
      {
        sub_1BFC66384(v96, (uint64_t)&v149);
        sub_1BFC66384((uint64_t)&v149, (uint64_t)&v146);
        uint64_t v98 = v147;
        uint64_t v99 = v148;
        __swift_project_boxed_opaque_existential_1(&v146, v147);
        *uint64_t v2 = sub_1C14F9E64(v98, v99);
        v2[1] = v100;
        uint64_t v101 = v147;
        uint64_t v102 = v148;
        __swift_project_boxed_opaque_existential_1(&v146, v147);
        sub_1BFEFE794(v101, v102);
        sub_1C061FBD8((uint64_t)v2, v97, type metadata accessor for FormatVersioningModeRelease);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v146);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
        uint64_t v103 = v152;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F76DC(0, *(void *)(v103 + 16) + 1, 1);
          uint64_t v103 = v152;
        }
        unint64_t v105 = *(void *)(v103 + 16);
        unint64_t v104 = *(void *)(v103 + 24);
        if (v105 >= v104 >> 1)
        {
          sub_1C05F76DC(v104 > 1, v105 + 1, 1);
          uint64_t v103 = v152;
        }
        *(void *)(v103 + 16) = v105 + 1;
        uint64_t v106 = v103 + v66 + v105 * v145;
        uint64_t v97 = (uint64_t)v140;
        sub_1C061FBD8((uint64_t)v140, v106, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem);
        v96 += 40;
        --v68;
      }
      while (v68);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v103 = MEMORY[0x1E4FBC860];
    }
    *(void *)&long long v149 = v94;
    sub_1C1049F70(v103);
    uint64_t v107 = v149;
    uint64_t v82 = v139;
    unint64_t v109 = v139[2];
    unint64_t v108 = v139[3];
    uint64_t v93 = (uint64_t)v132;
    if (v109 >= v108 >> 1) {
      uint64_t v82 = sub_1C0EE5D48((void *)(v108 > 1), v109 + 1, 1, v139);
    }
    v82[2] = v109 + 1;
    uint64_t v110 = &v82[5 * v109];
    *((_OWORD *)v110 + 2) = xmmword_1C15556E0;
    v110[6] = 0xD000000000000081;
    v110[7] = 0x80000001C1614820;
    v110[8] = v107;
  }
  if (qword_1EB8875F0 != -1) {
    swift_once();
  }
  uint64_t v111 = sub_1C151EC3C();
  int64_t v112 = *(void *)(v111 + 16);
  if (v112)
  {
    uint64_t v139 = v82;
    *(void *)&long long v146 = MEMORY[0x1E4FBC860];
    sub_1C05F76DC(0, v112, 0);
    uint64_t v113 = v111 + 32;
    do
    {
      sub_1BFC66384(v113, (uint64_t)&v149);
      uint64_t v114 = v150;
      uint64_t v115 = v151;
      __swift_project_boxed_opaque_existential_1(&v149, v150);
      sub_1BFEFE794(v114, v115);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
      uint64_t v116 = v146;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F76DC(0, *(void *)(v116 + 16) + 1, 1);
        uint64_t v116 = v146;
      }
      unint64_t v118 = *(void *)(v116 + 16);
      unint64_t v117 = *(void *)(v116 + 24);
      if (v118 >= v117 >> 1)
      {
        sub_1C05F76DC(v117 > 1, v118 + 1, 1);
        uint64_t v116 = v146;
      }
      *(void *)(v116 + 16) = v118 + 1;
      sub_1C061FBD8(v93, v116 + v66 + v118 * v145, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem);
      v113 += 40;
      --v112;
    }
    while (v112);
    swift_bridgeObjectRelease();
    uint64_t v82 = v139;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v116 = MEMORY[0x1E4FBC860];
  }
  unint64_t v120 = v82[2];
  unint64_t v119 = v82[3];
  if (v120 >= v119 >> 1) {
    uint64_t v82 = sub_1C0EE5D48((void *)(v119 > 1), v120 + 1, 1, v82);
  }
  v82[2] = v120 + 1;
  uint64_t v121 = &v82[5 * v120];
  *((_OWORD *)v121 + 2) = xmmword_1C15556F0;
  v121[6] = 0;
  v121[7] = 0;
  v121[8] = v116;
  uint64_t v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = v133;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  unint64_t v124 = v82[2];
  unint64_t v123 = v82[3];
  if (v124 >= v123 >> 1) {
    uint64_t v82 = sub_1C0EE5D48((void *)(v123 > 1), v124 + 1, 1, v82);
  }
  v82[2] = v124 + 1;
  uint64_t v125 = &v82[5 * v124];
  v125[4] = 0;
  v125[5] = 0;
  v125[6] = 0xD000000000000039;
  v125[7] = 0x80000001C16148B0;
  v125[8] = v122;
  return v82;
}

void sub_1C061E328()
{
  uint64_t v1 = v0;
  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView];
  objc_msgSend(v6, sel_setDataSource_, v1);
  objc_msgSend(v6, sel_setDelegate_, v1);
  objc_msgSend(v6, sel_setAlwaysBounceVertical_, 1);
  id v7 = objc_msgSend(v4, sel_secondaryLabelColor);
  objc_msgSend(v6, sel_setTintColor_, v7);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setTableFooterView_, v8);

  type metadata accessor for SubtitleTableViewCell();
  sub_1C151F26C();
  type metadata accessor for KeyValueTableViewCell();
  sub_1C151F26C();
  type metadata accessor for DebugJournalTableViewCell();
  sub_1C151F26C();
  id v9 = objc_msgSend(v1, sel_navigationItem);
  uint64_t v10 = (void *)sub_1C151E5EC();
  objc_msgSend(v9, sel_setTitle_, v10);

  id v11 = objc_msgSend(v1, sel_navigationItem);
  sub_1BFE4DBE0();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C15320E0;
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v14 = objc_msgSend(self, sel_systemImageNamed_, v13);

  if (!v14)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v15 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v16 = v1;
  id v17 = objc_msgSend(v15, sel_initWithImage_style_target_action_, v14, 0, v16, sel_doDismiss);

  *(void *)(v12 + 32) = v17;
  sub_1C151EBEC();
  sub_1C03E7D9C();
  char v18 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setRightBarButtonItems_, v18);

  id v19 = objc_msgSend(v16, sel_view);
  if (v19)
  {
    uint64_t v20 = v19;
    objc_msgSend(v19, sel_addSubview_, v6);

    swift_retain();
    sub_1C151896C();
    swift_release();
    sub_1C151897C();
    swift_release();
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1C061E718(uint64_t a1)
{
  *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections) = sub_1C061D054(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_editor));
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView);
  return objc_msgSend(v2, sel_reloadData);
}

uint64_t type metadata accessor for DebugFormatVersioningModeViewController()
{
  return self;
}

unint64_t sub_1C061EAE8()
{
  uint64_t v1 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v63 - v5;
  uint64_t v7 = type metadata accessor for DebugFormatVersioningModeItem();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_1C151676C();
  unint64_t result = sub_1C151673C();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections);
  if (v11 >= *(void *)(v13 + 16))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v14 = *(void *)(v13 + 40 * v11 + 64);
  if (result >= *(void *)(v14 + 16))
  {
LABEL_52:
    __break(1u);
    return result;
  }
  sub_1C061FC40(v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * result, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v63[1] = *((void *)v10 + 2);
      type metadata accessor for KeyValueTableViewCell();
      uint64_t v16 = (char *)sub_1C151F24C();
      id v17 = objc_msgSend(v16, sel_textLabel);
      if (v17)
      {
        id v18 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v17, sel_setFont_, v18);
      }
      id v19 = objc_msgSend(v16, sel_textLabel);
      if (v19)
      {
        uint64_t v20 = v19;
        id v21 = objc_msgSend(self, sel_labelColor);
        objc_msgSend(v20, sel_setTextColor_, v21);
      }
      id v22 = objc_msgSend(v16, sel_textLabel);
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_setText_, v24);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v47 = objc_msgSend(v16, sel_detailTextLabel);
      if (v47)
      {
        uint64_t v48 = v47;
        id v49 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
        objc_msgSend(v48, sel_setFont_, v49);
      }
      id v50 = objc_msgSend(v16, sel_detailTextLabel);
      if (v50)
      {
        uint64_t v51 = v50;
        id v52 = objc_msgSend(self, sel_secondaryLabelColor);
        objc_msgSend(v51, sel_setTextColor_, v52);
      }
      id v53 = objc_msgSend(v16, sel_detailTextLabel);
      if (v53)
      {
        uint64_t v54 = v53;
        objc_msgSend(v53, sel_setNumberOfLines_, 0);
      }
      id v55 = objc_msgSend(v16, sel_detailTextLabel);
      if (v55)
      {
        uint64_t v56 = v55;
        id v57 = objc_msgSend(self, sel_secondaryLabelColor);
        objc_msgSend(v56, sel_setTextColor_, v57);
      }
      id v58 = objc_msgSend(v16, sel_detailTextLabel);
      if (v58)
      {
        uint64_t v59 = v58;
        uint64_t v60 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v59, sel_setText_, v60);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v16, sel_setAccessoryType_, 0);
      objc_msgSend(v16, sel_setSelectionStyle_, 0);
    }
    else
    {
      type metadata accessor for DebugJournalTableViewCell();
      uint64_t v16 = (char *)sub_1C151F24C();
      objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_activityIndicatorView], sel_startAnimating);
    }
  }
  else
  {
    sub_1C061FBD8((uint64_t)v10, (uint64_t)v6, type metadata accessor for FormatVersioningModeSelection);
    type metadata accessor for SubtitleTableViewCell();
    uint64_t v25 = (void *)sub_1C151F24C();
    id v26 = objc_msgSend(v25, sel_textLabel);
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
      objc_msgSend(v27, sel_setFont_, v28);
    }
    id v29 = objc_msgSend(v25, sel_textLabel);
    if (v29)
    {
      uint64_t v30 = v29;
      id v31 = objc_msgSend(self, sel_labelColor);
      objc_msgSend(v30, sel_setTextColor_, v31);
    }
    id v32 = objc_msgSend(v25, sel_textLabel);
    if (v32)
    {
      unint64_t v33 = v32;
      sub_1C037E5C8();
      uint64_t v34 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_setText_, v34);
    }
    id v35 = objc_msgSend(v25, sel_detailTextLabel);
    if (v35)
    {
      uint64_t v36 = v35;
      id v37 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
      objc_msgSend(v36, sel_setFont_, v37);
    }
    id v38 = objc_msgSend(v25, sel_detailTextLabel);
    if (v38)
    {
      uint64_t v39 = v38;
      id v40 = objc_msgSend(self, sel_secondaryLabelColor);
      objc_msgSend(v39, sel_setTextColor_, v40);
    }
    id v41 = objc_msgSend(v25, sel_detailTextLabel);
    if (v41)
    {
      uint64_t v42 = v41;
      objc_msgSend(v41, sel_setNumberOfLines_, 0);
    }
    id v43 = objc_msgSend(v25, sel_detailTextLabel);
    if (v43)
    {
      unint64_t v44 = v43;
      sub_1C037EC48();
      if (v45)
      {
        uint64_t v46 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v46 = 0;
      }
      objc_msgSend(v44, sel_setText_, v46);
    }
    uint64_t v16 = v25;
    swift_retain();
    sub_1C151709C();
    swift_release();
    char v61 = _s8NewsFeed29FormatVersioningModeSelectionO2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v3);
    sub_1BFF9C89C((uint64_t)v3, type metadata accessor for FormatVersioningModeSelection);
    if (v61) {
      uint64_t v62 = 3;
    }
    else {
      uint64_t v62 = 0;
    }
    objc_msgSend(v16, sel_setAccessoryType_, v62);

    objc_msgSend(v16, sel_setSelectionStyle_, 3);
    sub_1BFF9C89C((uint64_t)v6, type metadata accessor for FormatVersioningModeSelection);
  }
  return (unint64_t)v16;
}

unint64_t sub_1C061F450(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - v7;
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = type metadata accessor for DebugFormatVersioningModeItem();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = sub_1C151676C();
  unint64_t result = sub_1C151673C();
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections);
  if (v16 >= *(void *)(v18 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v19 = *(void *)(v18 + 40 * v16 + 64);
  if (result >= *(void *)(v19 + 16))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_1C061FC40(v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * result, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugFormatVersioningModeItem);
  unint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C061FBD8((uint64_t)v15, (uint64_t)v11, type metadata accessor for FormatVersioningModeSelection);
    sub_1C061FC40((uint64_t)v11, (uint64_t)v8, type metadata accessor for FormatVersioningModeSelection);
    sub_1C061FC40((uint64_t)v8, (uint64_t)v5, type metadata accessor for FormatVersioningModeSelection);
    swift_retain();
    sub_1C15170AC();
    swift_release();
    sub_1BFF9C89C((uint64_t)v8, type metadata accessor for FormatVersioningModeSelection);
    objc_msgSend(a1, sel_reloadData);
    return sub_1BFF9C89C((uint64_t)v11, type metadata accessor for FormatVersioningModeSelection);
  }
  return result;
}

uint64_t sub_1C061F80C()
{
  return sub_1C151E56C() & 1;
}

id sub_1C061F894(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView;
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController__currentMode;
  if (qword_1EA194440 != -1) {
    swift_once();
  }
  sub_1C061F9D0();
  swift_allocObject();
  swift_retain();
  *(void *)&v6[v7] = sub_1C15170EC();
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_editor] = a1;
  uint64_t v8 = swift_retain();
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections] = sub_1C061D054(v8);

  v10.receiver = v6;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

void sub_1C061F9D0()
{
  if (!qword_1EA19CB58)
  {
    type metadata accessor for FormatVersioningModeSelection(255);
    sub_1C061FABC((unint64_t *)&unk_1EA19CB60, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
    unint64_t v0 = sub_1C15170DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19CB58);
    }
  }
}

unint64_t sub_1C061FA64()
{
  unint64_t result = qword_1EB887280;
  if (!qword_1EB887280)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB887280);
  }
  return result;
}

uint64_t sub_1C061FABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C061FB04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C061FB68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C061FB04(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C061FBD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C061FC40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C061FCA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController__currentMode;
  if (qword_1EA194440 != -1) {
    swift_once();
  }
  sub_1C061F9D0();
  swift_allocObject();
  swift_retain();
  *(void *)&v1[v3] = sub_1C15170EC();

  sub_1C152040C();
  __break(1u);
}

uint64_t FeedBannerAdViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t FeedBannerAdViewLayout.bannerAdViewLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FeedBannerAdViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13D64();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v8, 0, sizeof(v8));
  char v9 = 1;
  sub_1BFE12570(0, (unint64_t *)&qword_1EB871268, type metadata accessor for CGRect, (void (*)(void))sub_1C061FF30);
  swift_allocObject();
  uint64_t v5 = sub_1C15172BC();
  uint64_t v6 = sub_1C151DA2C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_1BFE12570(0, &qword_1EB871230, MEMORY[0x1E4F7AFF0], (void (*)(void))sub_1C008E324);
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v5;
  a1[1] = result;
  return result;
}

uint64_t sub_1C061FF30()
{
  return sub_1BFE131B4(&qword_1EB87A288, type metadata accessor for CGRect);
}

double FeedBannerAdViewLayout.Attributes.frame.getter()
{
  return *(double *)v0;
}

uint64_t FeedBannerAdViewLayout.Attributes.bannerAdViewLayoutAttributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedBannerAdViewLayout.Attributes(0) + 20);
  uint64_t v4 = sub_1C151DA2C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1C061FFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0620F64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0620010(uint64_t a1)
{
  unint64_t v2 = sub_1BFE13D10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C062004C(uint64_t a1)
{
  unint64_t v2 = sub_1BFE13D10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedBannerAdViewLayout.Attributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFE129E0(0, &qword_1EA19CB78, (uint64_t (*)(void))sub_1BFE13D10, (uint64_t)&type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE13D10();
  sub_1C1520F0C();
  long long v10 = v3[1];
  v12[0] = *v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE131B4(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
    LOBYTE(v12[0]) = 1;
    sub_1C151DA2C();
    sub_1BFE131B4(&qword_1EA19CB80, MEMORY[0x1E4F7AFF0]);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C06202C8(uint64_t a1)
{
  uint64_t v2 = sub_1BFE131B4(&qword_1EA19CB98, (void (*)(uint64_t))type metadata accessor for FeedBannerAdViewLayout.Attributes);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C0620334(void *a1)
{
  return FeedBannerAdViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1C062034C()
{
  sub_1BFE131B4(&qword_1EB872A20, (void (*)(uint64_t))type metadata accessor for FeedBannerAdViewLayout.Attributes);
  return sub_1C151798C();
}

uint64_t FeedBannerAdViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFF54980(v1, a1);
}

uint64_t sub_1C0620404()
{
  return sub_1BFE131B4(&qword_1EA19CB88, (void (*)(uint64_t))type metadata accessor for FeedBannerAdViewLayout.Attributes);
}

void *initializeBufferWithCopyOfBuffer for FeedBannerAdViewLayout.Attributes(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1C151DA2C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FeedBannerAdViewLayout.Attributes(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1C151DA2C();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_OWORD *initializeWithCopy for FeedBannerAdViewLayout.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151DA2C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *assignWithCopy for FeedBannerAdViewLayout.Attributes(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151DA2C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for FeedBannerAdViewLayout.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151DA2C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_OWORD *assignWithTake for FeedBannerAdViewLayout.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151DA2C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedBannerAdViewLayout.Attributes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C062079C);
}

uint64_t sub_1C062079C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1C151DA2C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdViewLayout.Attributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0620820);
}

uint64_t sub_1C0620820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1C151DA2C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedBannerAdViewLayout.Context(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAd();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(v4 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151DBAC();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    uint64_t v13 = v6[7];
    uint64_t v14 = (char *)a1 + v13;
    id v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = v6[8];
    id v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    unint64_t v19 = v18[1];
    if (v19 >= 0x11)
    {
      *id v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)id v17 = *(_OWORD *)v18;
    }
  }
  return a1;
}

void *assignWithCopy for FeedBannerAdViewLayout.Context(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  uint64_t v9 = v4[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  char v12 = v11[8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v12;
  uint64_t v13 = v4[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  id v15 = (void *)((char *)a2 + v13);
  unint64_t v16 = *(void *)((char *)a1 + v13 + 8);
  unint64_t v17 = v15[1];
  if (v16 >= 0x11)
  {
    if (v17 >= 0x11)
    {
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v14);
    goto LABEL_6;
  }
  if (v17 < 0x11)
  {
LABEL_6:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    return a1;
  }
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for FeedBannerAdViewLayout.Context(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  uint64_t v9 = v4[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  v10[8] = v11[8];
  *(void *)uint64_t v10 = *(void *)v11;
  *(_OWORD *)((char *)a1 + v4[8]) = *(_OWORD *)((char *)a2 + v4[8]);
  return a1;
}

void *assignWithTake for FeedBannerAdViewLayout.Context(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + v5[6]) = *(void *)((char *)a2 + v5[6]);
  uint64_t v10 = v5[7];
  uint64_t v11 = (char *)a1 + v10;
  char v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  uint64_t v13 = v5[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  id v15 = (void *)((char *)a2 + v13);
  if (*(void *)((char *)a1 + v13 + 8) >= 0x11uLL)
  {
    unint64_t v16 = v15[1];
    if (v16 >= 0x11)
    {
      *uint64_t v14 = *v15;
      v14[1] = v16;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v14);
  }
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedBannerAdViewLayout.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0620D18);
}

uint64_t sub_1C0620D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAd();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdViewLayout.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0620D98);
}

uint64_t sub_1C0620D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAd();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for FeedBannerAdViewLayout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0620ED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedBannerAdViewLayout.Attributes.CodingKeys()
{
  return &type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1C0620F10()
{
  unint64_t result = qword_1EA19CB90;
  if (!qword_1EA19CB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CB90);
  }
  return result;
}

uint64_t sub_1C0620F64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001C16149D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C0621050(void *a1)
{
  return FormatBundleImageSize.encode(to:)(a1);
}

BOOL _s8NewsFeed21FormatBundleImageSizeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16))
    {
      sub_1BFF9A030(*(void *)a2, *(void *)(a2 + 8), 0);
      sub_1BFF9A030(v3, v2, 0);
      sub_1BFF9A030(v3, v2, 0);
      sub_1BFF9A030(v6, v5, 0);
      int v8 = sub_1C00DE998(v3, v6);
      sub_1BFF9A08C(v3, v2, 0);
      sub_1BFF9A08C(v6, v5, 0);
      sub_1BFF9A08C(v6, v5, 0);
      uint64_t v9 = v3;
      uint64_t v10 = v2;
      unsigned __int8 v11 = 0;
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  if (v4 == 1)
  {
    if (v7 == 1)
    {
      sub_1BFF9A030(*(void *)a2, *(void *)(a2 + 8), 1u);
      sub_1BFF9A030(v3, v2, 1u);
      sub_1BFF9A030(v3, v2, 1u);
      sub_1BFF9A030(v6, v5, 1u);
      LOBYTE(v8) = sub_1C00DE998(v3, v6);
      sub_1BFF9A08C(v3, v2, 1u);
      sub_1BFF9A08C(v6, v5, 1u);
      sub_1BFF9A08C(v6, v5, 1u);
      uint64_t v9 = v3;
      uint64_t v10 = v2;
      unsigned __int8 v11 = 1;
LABEL_7:
      sub_1BFF9A08C(v9, v10, v11);
      return v8 & 1;
    }
    goto LABEL_12;
  }
  if (v7 != 2)
  {
LABEL_12:
    sub_1BFF9A030(*(void *)a1, v2, v4);
    sub_1BFF9A030(v6, v5, v7);
    sub_1BFF9A08C(v3, v2, v4);
    uint64_t v15 = v6;
    uint64_t v16 = v5;
    unsigned __int8 v17 = v7;
LABEL_13:
    sub_1BFF9A08C(v15, v16, v17);
    return 0;
  }
  sub_1BFF9A030(*(void *)a2, *(void *)(a2 + 8), 2u);
  sub_1BFF9A030(v3, v2, 2u);
  sub_1BFF9A030(v3, v2, 2u);
  sub_1BFF9A030(v6, v5, 2u);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00DE998(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    sub_1BFF9A08C(v3, v2, 2u);
    sub_1BFF9A08C(v6, v5, 2u);
    sub_1BFF9A08C(v6, v5, 2u);
    uint64_t v15 = v3;
    uint64_t v16 = v2;
    unsigned __int8 v17 = 2;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1C00DE998(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF9A08C(v3, v2, 2u);
  sub_1BFF9A08C(v6, v5, 2u);
  sub_1BFF9A08C(v6, v5, 2u);
  sub_1BFF9A08C(v3, v2, 2u);
  return (v14 & 1) != 0;
}

unint64_t sub_1C0621364(uint64_t a1)
{
  unint64_t result = sub_1C062138C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C062138C()
{
  unint64_t result = qword_1EA19CBA0;
  if (!qword_1EA19CBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CBA0);
  }
  return result;
}

unint64_t sub_1C06213E0(void *a1)
{
  a1[1] = sub_1BFCD7BC4();
  a1[2] = sub_1C0621418();
  unint64_t result = sub_1C062146C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0621418()
{
  unint64_t result = qword_1EB85BC88;
  if (!qword_1EB85BC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BC88);
  }
  return result;
}

unint64_t sub_1C062146C()
{
  unint64_t result = qword_1EA19CBA8;
  if (!qword_1EA19CBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19CBA8);
  }
  return result;
}

uint64_t destroy for FormatBundleImageSize(uint64_t a1)
{
  return sub_1BFF9A08C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed21FormatBundleImageSizeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1BFF9A030(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatBundleImageSize(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1BFF9A030(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1BFF9A08C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatBundleImageSize(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1BFF9A08C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBundleImageSize()
{
  return &type metadata for FormatBundleImageSize;
}

void LayeredMediaViewOptions.init(nativeScreenSize:boundingSize:scale:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
}

double LayeredMediaViewOptions.nativeScreenSize.getter()
{
  return *(double *)v0;
}

double LayeredMediaViewOptions.boundingSize.getter()
{
  return *(double *)(v0 + 16);
}

double LayeredMediaViewOptions.scale.getter()
{
  return *(double *)(v0 + 32);
}

BOOL _s8NewsFeed23LayeredMediaViewOptionsV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

uint64_t getEnumTagSinglePayload for FormatMotion.TranslateWithScale(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FormatMotion.TranslateWithScale(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaViewOptions()
{
  return &type metadata for LayeredMediaViewOptions;
}

uint64_t sub_1C06216AC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1C05F6684(0, v1, 0);
  uint64_t v2 = v23;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v5;
  uint64_t v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + (v6 << 6) + 16);
    unint64_t v13 = *(void *)(v23 + 16);
    unint64_t v14 = *(void *)(v23 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1) {
      uint64_t result = sub_1C05F6684(v14 > 1, v13 + 1, 1);
    }
    *(void *)(v23 + 16) = v13 + 1;
    *(void *)(v23 + 8 * v13 + 32) = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      int64_t v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v20;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v20;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C06218B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = (uint64_t (*)(void *))result;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v3 = 0;
    uint64_t v4 = (uint64_t *)(a3 + 56);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v21 = a3;
    while (v3 < *(void *)(a3 + 16))
    {
      unint64_t v24 = v3;
      uint64_t v6 = *(v4 - 3);
      uint64_t v7 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v9 = *v4;
      uint64_t v10 = v4[1];
      uint64_t v11 = v4[2];
      uint64_t v12 = v4[3];
      uint64_t v13 = v4[4];
      uint64_t v14 = v4[5];
      uint64_t v15 = v4[6];
      v30[0] = v6;
      v30[1] = v7;
      v30[2] = v8;
      v30[3] = v9;
      v30[4] = v10;
      v30[5] = v11;
      v30[6] = v12;
      v30[7] = v13;
      v30[8] = v14;
      v30[9] = v15;
      uint64_t v25 = v10;
      uint64_t v26 = v11;
      uint64_t v27 = v12;
      uint64_t v28 = v13;
      sub_1BFEE0A78();
      char v16 = v23(v30);
      if (v29)
      {
        sub_1C0033494();
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      uint64_t v29 = 0;
      if (v16)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = v5;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C05F63E0(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v31;
        }
        unint64_t v18 = *(void *)(v5 + 16);
        unint64_t v17 = *(void *)(v5 + 24);
        unint64_t v19 = v18 + 1;
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_1C05F63E0(v17 > 1, v18 + 1, 1);
          unint64_t v19 = v18 + 1;
          uint64_t v5 = v31;
        }
        *(void *)(v5 + 16) = v19;
        int64_t v20 = (void *)(v5 + 80 * v18);
        v20[4] = v6;
        v20[5] = v7;
        _OWORD v20[6] = v8;
        unsigned char v20[7] = v9;
        v20[8] = v25;
        v20[9] = v26;
        v20[10] = v27;
        v20[11] = v28;
        _OWORD v20[12] = v14;
        v20[13] = v15;
      }
      else
      {
        uint64_t result = sub_1C0033494();
      }
      unint64_t v3 = v24 + 1;
      v4 += 10;
      a3 = v21;
      if (v22 == v24 + 1) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

void *sub_1C0621ACC(uint64_t (*a1)(uint64_t *), void *a2, unint64_t a3)
{
  unint64_t v5 = a3;
  unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  if (a3 >> 62)
  {
LABEL_18:
    uint64_t v8 = sub_1C15204BC();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      unint64_t v9 = 0;
      uint64_t v15 = v5 & 0xFFFFFFFFFFFFFF8;
      unint64_t v16 = v5 & 0xC000000000000001;
      unint64_t v14 = v5;
      while (1)
      {
        if (v16)
        {
          uint64_t v10 = MEMORY[0x1C18C7CB0](v9, v5);
          unint64_t v11 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            return v3;
          }
        }
        else
        {
          if (v9 >= *(void *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v10 = *(void *)(v5 + 8 * v9 + 32);
          swift_unknownObjectRetain();
          unint64_t v11 = v9 + 1;
          if (__OFADD__(v9, 1)) {
            goto LABEL_14;
          }
        }
        uint64_t v17 = v10;
        unint64_t v3 = a2;
        char v12 = a1(&v17);
        if (v4) {
          goto LABEL_15;
        }
        if (v12)
        {
          sub_1C152025C();
          sub_1C152029C();
          unint64_t v5 = v14;
          sub_1C15202AC();
          unint64_t v3 = &v18;
          sub_1C152026C();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v9;
        if (v11 == v8)
        {
          unint64_t v3 = v18;
          goto LABEL_20;
        }
      }
    }
  }
  unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1C0621C88(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatService.ThemePackage(0);
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C063FDFC(a3 + v14 + v15 * v12, (uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C0641CA0((uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1BFEA4850((uint64_t)v11, v22, type metadata accessor for FormatService.ThemePackage);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F6550(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C05F6550(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1BFEA4850(v22, v13 + v14 + v18 * v15, type metadata accessor for FormatService.ThemePackage);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C0641CA0((uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

void sub_1C0621F20(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C063FDFC(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1BFEA4850((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F694C(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C05F694C(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1BFEA4850(v22, v13 + v14 + v18 * v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C06221B8(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_1C0622A90(a1, a2, a3, MEMORY[0x1E4FAB0A8], (void (*)(BOOL, uint64_t, uint64_t))sub_1BFFC1230);
}

uint64_t sub_1C06221F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(long long *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    while (v7 < *(void *)(a3 + 16))
    {
      long long v14 = *(_OWORD *)(a3 + 16 * v7 + 32);
      long long v13 = v14;
      swift_unknownObjectRetain();
      id v9 = *((id *)&v13 + 1);
      char v10 = v6(&v14);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        return v8;
      }
      if (v10)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C05F6994(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v15;
        }
        unint64_t v12 = *(void *)(v8 + 16);
        unint64_t v11 = *(void *)(v8 + 24);
        if (v12 >= v11 >> 1)
        {
          uint64_t result = sub_1C05F6994(v11 > 1, v12 + 1, 1);
          uint64_t v8 = v15;
        }
        *(void *)(v8 + 16) = v12 + 1;
        *(_OWORD *)(v8 + 16 * v12 + 32) = v13;
      }
      else
      {

        uint64_t result = swift_unknownObjectRelease();
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void sub_1C062237C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatDerivedDataBinderResult();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C063FDFC(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1BFEA4850((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F71F8(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C05F71F8(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1BFEA4850(v22, v13 + v14 + v18 * v15, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C0622614(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    uint64_t v5 = (uint64_t (*)(void *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a3 + 48);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    char v16 = (uint64_t (*)(void *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(v7 - 2);
      unint64_t v9 = *(v7 - 1);
      uint64_t v11 = *v7;
      v19[0] = v10;
      v19[1] = v9;
      void v19[2] = v11;
      swift_bridgeObjectRetain();
      sub_1BFE60260(v9);
      char v12 = v5(v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_1BFD7F858(v9);
        swift_release();
        goto LABEL_15;
      }
      if (v12)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C05F7464(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v20;
        }
        unint64_t v14 = *(void *)(v8 + 16);
        unint64_t v13 = *(void *)(v8 + 24);
        if (v14 >= v13 >> 1)
        {
          uint64_t result = sub_1C05F7464(v13 > 1, v14 + 1, 1);
          uint64_t v8 = v20;
        }
        *(void *)(v8 + 16) = v14 + 1;
        uint64_t v15 = (void *)(v8 + 24 * v14);
        v15[4] = v10;
        v15[5] = v9;
        _OWORD v15[6] = v11;
        uint64_t v4 = a3;
        uint64_t v5 = v16;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t result = sub_1BFD7F858(v9);
      }
      ++v6;
      v7 += 3;
      if (v18 == v6) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_15:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void sub_1C06227B8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FeedItem(0);
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C063FDFC(a3 + v14 + v15 * v12, (uint64_t)v11, type metadata accessor for FeedItem);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C0641CA0((uint64_t)v11, type metadata accessor for FeedItem);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1BFEA4850((uint64_t)v11, v22, type metadata accessor for FeedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7878(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C05F7878(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1BFEA4850(v22, v13 + v14 + v18 * v15, type metadata accessor for FeedItem);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C0641CA0((uint64_t)v11, type metadata accessor for FeedItem);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0622A50(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_1C0622A90(a1, a2, a3, MEMORY[0x1E4F7AD70], (void (*)(BOOL, uint64_t, uint64_t))sub_1C05F7B98);
}

uint64_t sub_1C0622A90(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v23 = a5;
  uint64_t v33 = a4(0);
  uint64_t v9 = *(void *)(v33 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v33);
  id v32 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v31 = *(void *)(a3 + 16);
  if (v31)
  {
    unint64_t v16 = 0;
    uint64_t v26 = a3;
    uint64_t v27 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v30 = v9 + 16;
    uint64_t v24 = a1;
    uint64_t v25 = a2;
    while (v16 < *(void *)(a3 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v15 = *(void *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a3 + v17 + v15 * v16, v33);
      char v18 = a1(v14);
      if (v5)
      {
        (*v27)(v14, v33);
        swift_bridgeObjectRelease();
        swift_release();
        return v15;
      }
      if (v18)
      {
        uint64_t v28 = *v29;
        v28(v32, v14, v33);
        uint64_t v19 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v23(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v34;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          v23(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v34;
        }
        *(void *)(v19 + 16) = v21 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v28)(v19 + v17 + v21 * v15, v32, v33);
        uint64_t v34 = v19;
        a3 = v26;
        a1 = v24;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v27)(v14, v33);
      }
      if (v31 == ++v16)
      {
        uint64_t v15 = v34;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

void sub_1C0622D4C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1C06073AC();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C063FDFC(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))sub_1C06073AC);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))sub_1C06073AC);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1BFEA4850((uint64_t)v11, v22, (uint64_t (*)(void))sub_1C06073AC);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7EEC(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C05F7EEC(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1BFEA4850(v22, v13 + v14 + v18 * v15, (uint64_t (*)(void))sub_1C06073AC);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))sub_1C06073AC);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0622FE4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v19 = (uint64_t (*)(void *))result;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    unint64_t v5 = 0;
    unint64_t v6 = (unsigned char *)(a3 + 56);
    uint64_t v7 = MEMORY[0x1E4FBC860];
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v9 = *((void *)v6 - 3);
      uint64_t v8 = *((void *)v6 - 2);
      uint64_t v10 = *((void *)v6 - 1);
      char v11 = *v6;
      v20[0] = v9;
      v20[1] = v8;
      void v20[2] = v10;
      char v21 = v11;
      swift_bridgeObjectRetain();
      char v12 = v19(v20);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v12)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C05F852C(0, *(void *)(v7 + 16) + 1, 1);
          uint64_t v7 = v22;
        }
        unint64_t v14 = *(void *)(v7 + 16);
        unint64_t v13 = *(void *)(v7 + 24);
        unint64_t v15 = v14 + 1;
        if (v14 >= v13 >> 1)
        {
          uint64_t result = sub_1C05F852C(v13 > 1, v14 + 1, 1);
          unint64_t v15 = v14 + 1;
          uint64_t v7 = v22;
        }
        *(void *)(v7 + 16) = v15;
        uint64_t v16 = v7 + 32 * v14;
        *(void *)(v16 + 32) = v9;
        *(void *)(v16 + 40) = v8;
        *(void *)(v16 + 48) = v10;
        *(unsigned char *)(v16 + 56) = v11;
        uint64_t v4 = a3;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 32;
      if (v18 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

Swift::Int __swiftcall GroupLayoutBindingContext.count(for:)(NewsFeed::FeedItemTraits a1)
{
  uint64_t v2 = *(void *)a1.rawValue;
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 56));
  uint64_t v23 = v3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v24 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v25 = v3;
  Swift::Int result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  Swift::Int v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v8 << 6);
LABEL_24:
    uint64_t v15 = *(void *)(*(void *)(v25 + 56) + 8 * v11);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      int64_t v26 = v8;
      uint64_t v17 = v15 + 32;
      swift_bridgeObjectRetain();
      uint64_t v18 = 0;
      do
      {
        sub_1BFC66384(v17, (uint64_t)v28);
        uint64_t v19 = v29;
        uint64_t v20 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        Swift::Int result = (Swift::Int)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 24))(&v27, v19, v20);
        uint64_t v21 = (v2 & ~v27) == 0;
        BOOL v22 = __OFADD__(v18, v21);
        v18 += v21;
        if (v22)
        {
          __break(1u);
          goto LABEL_33;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        v17 += 40;
        --v16;
      }
      while (v16);
      Swift::Int result = swift_bridgeObjectRelease();
      int64_t v8 = v26;
      BOOL v22 = __OFADD__(v9, v18);
      v9 += v18;
      if (!v22) {
        continue;
      }
      __break(1u);
LABEL_31:
      swift_release();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  int64_t v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v12 >= v24) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v23 + 8 * v12);
  ++v8;
  if (v13) {
    goto LABEL_23;
  }
  int64_t v8 = v12 + 1;
  if (v12 + 1 >= v24) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v23 + 8 * v8);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v8 = v12 + 2;
  if (v12 + 2 >= v24) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v23 + 8 * v8);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v8 = v12 + 3;
  if (v12 + 3 >= v24) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v23 + 8 * v8);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v8 = v12 + 4;
  if (v12 + 4 >= v24) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v23 + 8 * v8);
  if (v13)
  {
LABEL_23:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_24;
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v24) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v23 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v24) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v23 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t GroupLayoutBindingContext.unbindAll<A>(_:name:sortedBy:withTraits:slotIdentifier:peekBinding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  unint64_t v11 = v10;
  uint64_t v40 = *a5;
  id v41 = (void *)a4;
  swift_bridgeObjectRetain();
  sub_1C04726F8(a2, a3, &v42);
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  uint64_t v18 = v44;
  uint64_t v17 = v45;
  uint64_t v19 = type metadata accessor for GroupLayoutBindingContext();
  if (!*(void *)(*(void *)&v11[*(int *)(v19 + 56)] + 16)) {
    goto LABEL_8;
  }
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = v18;
  sub_1BFEA34E4(v15, v16, v18, v17);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  int v38 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v22 = sub_1BFFFCF34();
  uint64_t v23 = sub_1C152059C();
  uint64_t v24 = swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C151ECBC();
  }
  v35[2] = v22;
  uint64_t v36 = v15;
  id v37 = v35;
  uint64_t v42 = v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v25 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = v25;
  v35[1] = WitnessTable;
  uint64_t v27 = sub_1C152023C();
  uint64_t v28 = sub_1C062B420((uint64_t)v41, v11, v27);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)&v11[*(int *)(v20 + 72)];
  uint64_t v31 = *(void *)&v11[*(int *)(v20 + 76)];
  if (!__OFSUB__(v30, v31))
  {
    uint64_t v32 = sub_1C062B48C(v28, v30 - v31, a9, a10);
    uint64_t v33 = swift_bridgeObjectRelease();
    id v41 = v35;
    uint64_t v42 = v23;
    MEMORY[0x1F4188790](v33);
    swift_bridgeObjectRetain();
    sub_1C152023C();
    uint64_t v42 = v36;
    uint64_t v43 = v16;
    uint64_t v44 = v39;
    uint64_t v45 = v17;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1C152035C();
    swift_bridgeObjectRelease();
    sub_1BFEA6AC8(&v42, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v32;
  }
  __break(1u);
  return result;
}

uint64_t GroupLayoutBindingContext.unbind<A, B>(_:ofType:name:sortedBy:withTraits:slotIdentifier:peekBinding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15 = v14;
  uint64_t v16 = v13;
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v53 = a5;
  uint64_t v19 = a12;
  uint64_t v58 = *a6;
  uint64_t v59 = a1;
  swift_bridgeObjectRetain();
  uint64_t v54 = a12;
  sub_1C04726F8(a3, a4, &v61);
  uint64_t v20 = v62;
  uint64_t v60 = v61;
  uint64_t v21 = v64;
  uint64_t v65 = v63;
  uint64_t v22 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v23 = *(int *)(v22 + 56);
  id v55 = v16;
  if (!*(void *)(*(void *)&v16[v23] + 16)) {
    goto LABEL_10;
  }
  uint64_t v19 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEA34E4(v60, v20, v65, v21);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v51 = sub_1BFFFCF34();
  uint64_t v25 = sub_1C152059C();
  uint64_t v26 = swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_10:
    uint64_t v61 = 0;
    if (sub_1C151EA6C())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1C151ECBC();
    }
    uint64_t result = sub_1C151EA5C();
    uint64_t v39 = v58;
    if (!*(void *)(result + 16))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_13:
    uint64_t v40 = *(void *)(result + 32);
    swift_bridgeObjectRelease();
    sub_1C0000B6C();
    swift_allocError();
    *(void *)uint64_t v41 = v60;
    *(void *)(v41 + 8) = v20;
    *(void *)(v41 + 16) = v65;
    *(void *)(v41 + 24) = v21;
    *(void *)(v41 + 32) = v39;
    *(void *)(v41 + 40) = v40;
    uint64_t v42 = v57;
    *(void *)(v41 + 48) = v56;
    *(void *)(v41 + 56) = v42;
    *(unsigned char *)(v41 + 64) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return v19;
  }
  uint64_t v48 = v21;
  id v50 = &v46;
  uint64_t v61 = v25;
  MEMORY[0x1F4188790](v26);
  id v49 = v45;
  void v45[2] = a10;
  v45[3] = a11;
  uint64_t v27 = v54;
  v45[4] = v54;
  v45[5] = a13;
  v45[6] = v58;
  sub_1C151ED5C();
  uint64_t v52 = v15;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v28 = v52;
  uint64_t v29 = sub_1C152023C();
  uint64_t v30 = v53;
  uint64_t v31 = v55;
  uint64_t v52 = v28;
  uint64_t v53 = a13;
  uint64_t v32 = sub_1C062B420(v30, v55, v29);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)&v31[*(int *)(v19 + 72)];
  uint64_t v35 = *(void *)&v31[*(int *)(v19 + 76)];
  if (!__OFSUB__(v34, v35))
  {
    LODWORD(v49) = a9;
    id v50 = (void *)v32;
    uint64_t v36 = sub_1C062B48C(v32, v34 - v35, a10, v27);
    uint64_t v37 = v59;
    uint64_t v47 = a11;
    uint64_t v19 = sub_1C062B674(v59, v36, v25, a10, a11, v27, v53);
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v61 = v60;
      uint64_t v62 = v20;
      uint64_t v63 = v65;
      uint64_t v64 = v48;
      if ((v49 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
      }
      uint64_t v38 = sub_1C152035C();
      swift_bridgeObjectRelease();
      sub_1BFEA6AC8(&v61, v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      return v19;
    }
    char v43 = (char)v49;
    uint64_t v46 = a10;
    uint64_t v19 = sub_1C062B674(v37, (uint64_t)v50, v25, a10, v47, v27, v53);
    swift_bridgeObjectRelease();
    if (v19)
    {
      uint64_t v61 = v60;
      uint64_t v62 = v20;
      uint64_t v63 = v65;
      uint64_t v64 = v48;
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
      }
      uint64_t v44 = sub_1C152035C();
      swift_bridgeObjectRelease();
      sub_1BFEA6AC8(&v61, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C151EA5C();
    uint64_t v21 = v48;
    uint64_t v39 = v58;
    if (!*(void *)(result + 16))
    {
      __break(1u);
      goto LABEL_22;
    }
    goto LABEL_13;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *GroupLayoutBindingContext.unbind<A>(_:name:sortedBy:withTraits:requireTraitsWhenMatching:slotIdentifier:peekBinding:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char **a3@<X3>, uint64_t *a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, char a9, uint64_t a10, char *a11)
{
  uint64_t v12 = v11;
  uint64_t v69 = a7;
  int v57 = a5;
  uint64_t v58 = a3;
  uint64_t v56 = a8;
  uint64_t v17 = sub_1C151FD8C();
  uint64_t v54 = *(void *)(v17 - 8);
  uint64_t v55 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v59 = (uint64_t)&v50 - v18;
  uint64_t v64 = *a4;
  swift_bridgeObjectRetain();
  uint64_t v60 = a11;
  sub_1C04726F8(a1, a2, &v65);
  uint64_t v20 = v65;
  uint64_t v19 = v66;
  uint64_t v22 = v67;
  uint64_t v21 = v68;
  uint64_t v23 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v24 = *(void *)(v12 + *(int *)(v23 + 56));
  if (*(void *)(v24 + 16))
  {
    uint64_t v25 = v12;
    uint64_t v53 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v61 = v20;
    uint64_t v62 = v22;
    unint64_t v26 = sub_1BFEA34E4(v20, v19, v22, v21);
    if (v27)
    {
      uint64_t v28 = *(void *)(*(void *)(v24 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v28 + 16))
      {
        uint64_t v29 = v69;
        uint64_t v30 = v63;
        sub_1BFEA743C(v28, a6, v69);
        if (v30)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (void *)swift_bridgeObjectRelease();
        }
        uint64_t v51 = v25;
        uint64_t v52 = a6;
        uint64_t v63 = v28;
        sub_1BFFFCF34();
        uint64_t v34 = sub_1C152059C();
        swift_bridgeObjectRelease();
        if (v34)
        {
          uint64_t v65 = v34;
          sub_1C151ED5C();
          swift_getWitnessTable();
          char v35 = sub_1C151F15C();
          uint64_t v36 = v64;
          if ((v35 & 1) == 0)
          {
            uint64_t v65 = v64;
            uint64_t v39 = v59;
            sub_1C062AF24(v34, v58, &v65, v57 & 1, a10, v60, v59);
            swift_bridgeObjectRelease();
            uint64_t v40 = *(void *)(a10 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, a10) != 1)
            {
              uint64_t v41 = v56;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v56, v39, a10);
              uint64_t result = (*((void *(**)(uint64_t *__return_ptr, uint64_t, char *))v60 + 3))(&v65, a10, v60);
              if ((v65 & 0x1000) != 0)
              {
                uint64_t v42 = *(int *)(v53 + 76);
                uint64_t v43 = *(void *)(v51 + v42);
                BOOL v44 = __OFADD__(v43, 1);
                uint64_t v45 = v43 + 1;
                if (v44)
                {
                  __break(1u);
                  return result;
                }
                *(void *)(v51 + v42) = v45;
              }
              if (a9)
              {
                uint64_t v47 = v61;
                uint64_t v46 = v62;
                uint64_t v48 = v63;
              }
              else
              {
                MEMORY[0x1F4188790](result);
                *(&v50 - 4) = a10;
                *(&v50 - 3) = v49;
                *(&v50 - 2) = v41;
                uint64_t v48 = sub_1BFEA6D0C((uint64_t)sub_1C062D308, (uint64_t)(&v50 - 6), v63);
                uint64_t v47 = v61;
                uint64_t v46 = v62;
              }
              uint64_t v65 = v47;
              uint64_t v66 = v19;
              uint64_t v67 = v46;
              uint64_t v68 = v21;
              sub_1BFEA6AC8(&v65, v48);
              goto LABEL_5;
            }
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v39, v55);
            sub_1C0000B6C();
            swift_allocError();
            *(void *)uint64_t v38 = v61;
            *(void *)(v38 + 8) = v19;
            *(void *)(v38 + 16) = v62;
            *(void *)(v38 + 24) = v21;
            *(void *)(v38 + 32) = v36;
            *(void *)(v38 + 40) = 1;
            *(void *)(v38 + 48) = v52;
            goto LABEL_16;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v36 = v64;
        }
        uint64_t v37 = v52;
        sub_1C0000B6C();
        swift_allocError();
        *(void *)uint64_t v38 = v61;
        *(void *)(v38 + 8) = v19;
        *(void *)(v38 + 16) = v62;
        *(void *)(v38 + 24) = v21;
        *(void *)(v38 + 32) = v36;
        *(void *)(v38 + 40) = 1;
        *(void *)(v38 + 48) = v37;
LABEL_16:
        *(void *)(v38 + 56) = v29;
        *(unsigned char *)(v38 + 64) = 0;
        goto LABEL_9;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v61;
    uint64_t v22 = v62;
  }
  sub_1C0000B6C();
  swift_allocError();
  *(void *)uint64_t v32 = v20;
  *(void *)(v32 + 8) = v19;
  *(void *)(v32 + 16) = v22;
  *(void *)(v32 + 24) = v21;
  *(void *)(v32 + 32) = v64;
  *(void *)(v32 + 40) = 1;
  uint64_t v33 = v69;
  *(void *)(v32 + 48) = a6;
  *(void *)(v32 + 56) = v33;
  *(unsigned char *)(v32 + 64) = 0;
LABEL_9:
  swift_bridgeObjectRetain();
  return (void *)swift_willThrow();
}

uint64_t sub_1C0624188(void *a1)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;

  sub_1BFEA5440(0, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  uint64_t v40 = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for FeedBannerAd();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v34 = *(void *)(v12 + 16);
  if (v34)
  {
    uint64_t v33 = v12 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v31 = v12;
    while (v13 < *(void *)(v12 + 16))
    {
      uint64_t v15 = v33 + 16 * v13;
      uint64_t v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))v15;
      uint64_t v17 = *(void *)(v15 + 8);
      swift_retain_n();
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v19 = (void *)sub_1C0636658(v18);
      swift_bridgeObjectRelease();
      uint64_t v41 = v19;
      sub_1C063CFCC(&v41, v16, v17);
      uint64_t v38 = v14;
      if (v14) {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v20 = v41;
      uint64_t v21 = v41[2];
      if (v21)
      {
        uint64_t v36 = v17;
        uint64_t v37 = v13;
        uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
        sub_1BFEA8B94(0, v21, 0);
        uint64_t v22 = *(unsigned __int8 *)(v32 + 80);
        char v35 = v20;
        uint64_t v23 = (uint64_t)v20 + ((v22 + 32) & ~v22);
        uint64_t v24 = *(void *)(v32 + 72);
        a1 = v41;
        do
        {
          sub_1BFEA5300(v23, (uint64_t)v7, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          uint64_t v25 = *(int *)(v40 + 48);
          unint64_t v26 = (uint64_t)&v39[v25];
          sub_1C063FDFC((uint64_t)&v7[v25], (uint64_t)&v39[v25], (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
          sub_1BFEA4850(v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
          sub_1BFEA5370((uint64_t)v7, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void))sub_1BFEA5440);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BFEA8B94(0, a1[2] + 1, 1);
            a1 = v41;
          }
          uint64_t v28 = a1[2];
          char v27 = a1[3];
          if (v28 >= v27 >> 1)
          {
            sub_1BFEA8B94(v27 > 1, v28 + 1, 1);
            a1 = v41;
          }
          a1[2] = v28 + 1;
          sub_1BFEA4850((uint64_t)v11, (uint64_t)a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
          v23 += v24;
          --v21;
        }
        while (v21);
        swift_release();
        swift_release();
        uint64_t v12 = v31;
        unint64_t v13 = v37;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v13;
      uint64_t v14 = v38;
      if (v13 == v34)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1C06245CC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v31 = *(void *)(v3 + 16);
  if (v31)
  {
    uint64_t v30 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v29 = v3;
    while (v4 < *(void *)(v3 + 16))
    {
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = *(_OWORD *)(v30 + 16 * v4);
      swift_retain();
      swift_retain();
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C0636A6C(v6);
      swift_bridgeObjectRelease();
      *(void *)uint64_t v33 = v7;
      sub_1C0641BF4((uint64_t *)v33, (uint64_t)sub_1C063FEA4, v5, (uint64_t (*)(uint64_t))sub_1C0636478, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1C063AD70);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)v33;
      int64_t v9 = *(void *)(*(void *)v33 + 16);
      if (v9)
      {
        unint64_t v32 = v4;
        uint64_t v34 = MEMORY[0x1E4FBC860];
        sub_1C05F6B88(0, v9, 0);
        a1 = v34;
        int64_t v10 = v9 - 1;
        for (uint64_t i = 32; ; i += 152)
        {
          long long v12 = *(_OWORD *)(v8 + i + 16);
          *(_OWORD *)uint64_t v33 = *(_OWORD *)(v8 + i);
          *(_OWORD *)&v33[16] = v12;
          long long v13 = *(_OWORD *)(v8 + i + 32);
          long long v14 = *(_OWORD *)(v8 + i + 48);
          long long v15 = *(_OWORD *)(v8 + i + 80);
          *(_OWORD *)&v33[64] = *(_OWORD *)(v8 + i + 64);
          *(_OWORD *)&v33[80] = v15;
          *(_OWORD *)&v33[32] = v13;
          *(_OWORD *)&v33[48] = v14;
          long long v16 = *(_OWORD *)(v8 + i + 96);
          long long v17 = *(_OWORD *)(v8 + i + 112);
          long long v18 = *(_OWORD *)(v8 + i + 128);
          v33[144] = *(unsigned char *)(v8 + i + 144);
          *(_OWORD *)&v33[112] = v17;
          *(_OWORD *)&v33[128] = v18;
          *(_OWORD *)&v33[96] = v16;
          sub_1C063FEAC((uint64_t)v33);
          uint64_t v34 = a1;
          unint64_t v20 = *(void *)(a1 + 16);
          unint64_t v19 = *(void *)(a1 + 24);
          if (v20 >= v19 >> 1)
          {
            sub_1C05F6B88(v19 > 1, v20 + 1, 1);
            a1 = v34;
          }
          *(void *)(a1 + 16) = v20 + 1;
          uint64_t v21 = (_OWORD *)(a1 + 144 * v20);
          v21[2] = *(_OWORD *)&v33[8];
          long long v22 = *(_OWORD *)&v33[24];
          long long v23 = *(_OWORD *)&v33[40];
          long long v24 = *(_OWORD *)&v33[72];
          v21[5] = *(_OWORD *)&v33[56];
          void v21[6] = v24;
          uint64_t v21[3] = v22;
          v21[4] = v23;
          long long v25 = *(_OWORD *)&v33[88];
          long long v26 = *(_OWORD *)&v33[104];
          long long v27 = *(_OWORD *)&v33[120];
          *(_OWORD *)((char *)v21 + 153) = *(_OWORD *)&v33[129];
          v21[8] = v26;
          v21[9] = v27;
          v21[7] = v25;
          if (!v10) {
            break;
          }
          --v10;
        }
        swift_release();
        swift_release();
        uint64_t v3 = v29;
        unint64_t v4 = v32;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      if (++v4 == v31)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C0624884(void *a1)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;

  sub_1BFEA5440(0, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  uint64_t v40 = v3;
  unint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for FeedCustomItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v34 = *(void *)(v12 + 16);
  if (v34)
  {
    uint64_t v33 = v12 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v31 = v12;
    while (v13 < *(void *)(v12 + 16))
    {
      uint64_t v15 = v33 + 16 * v13;
      long long v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))v15;
      long long v17 = *(void *)(v15 + 8);
      swift_retain_n();
      long long v18 = swift_bridgeObjectRetain();
      unint64_t v19 = (void *)sub_1C0636D10(v18);
      swift_bridgeObjectRelease();
      uint64_t v41 = v19;
      sub_1C063D17C(&v41, v16, v17);
      uint64_t v38 = v14;
      if (v14) {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v20 = v41;
      uint64_t v21 = v41[2];
      if (v21)
      {
        uint64_t v36 = v17;
        uint64_t v37 = v13;
        uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
        sub_1C05F6DF0(0, v21, 0);
        long long v22 = *(unsigned __int8 *)(v32 + 80);
        char v35 = v20;
        long long v23 = (uint64_t)v20 + ((v22 + 32) & ~v22);
        long long v24 = *(void *)(v32 + 72);
        a1 = v41;
        do
        {
          sub_1BFEA5300(v23, (uint64_t)v7, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          long long v25 = *(int *)(v40 + 48);
          long long v26 = (uint64_t)&v39[v25];
          sub_1C063FDFC((uint64_t)&v7[v25], (uint64_t)&v39[v25], (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
          sub_1BFEA4850(v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
          sub_1BFEA5370((uint64_t)v7, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1BFEA5440);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F6DF0(0, a1[2] + 1, 1);
            a1 = v41;
          }
          uint64_t v28 = a1[2];
          long long v27 = a1[3];
          if (v28 >= v27 >> 1)
          {
            sub_1C05F6DF0(v27 > 1, v28 + 1, 1);
            a1 = v41;
          }
          a1[2] = v28 + 1;
          sub_1BFEA4850((uint64_t)v11, (uint64_t)a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
          v23 += v24;
          --v21;
        }
        while (v21);
        swift_release();
        swift_release();
        uint64_t v12 = v31;
        unint64_t v13 = v37;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v13;
      uint64_t v14 = v38;
      if (v13 == v34)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1C0624CC8(void *a1)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;

  sub_1BFEA5440(0, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v40 = v3;
  unint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v34 = *(void *)(v12 + 16);
  if (v34)
  {
    uint64_t v33 = v12 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v31 = v12;
    while (v13 < *(void *)(v12 + 16))
    {
      uint64_t v15 = v33 + 16 * v13;
      long long v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))v15;
      long long v17 = *(void *)(v15 + 8);
      swift_retain_n();
      long long v18 = swift_bridgeObjectRetain();
      unint64_t v19 = (void *)sub_1C0637124(v18);
      swift_bridgeObjectRelease();
      uint64_t v41 = v19;
      sub_1C063D32C(&v41, v16, v17);
      uint64_t v38 = v14;
      if (v14) {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v20 = v41;
      uint64_t v21 = v41[2];
      if (v21)
      {
        uint64_t v36 = v17;
        uint64_t v37 = v13;
        uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
        sub_1C05F6E38(0, v21, 0);
        long long v22 = *(unsigned __int8 *)(v32 + 80);
        char v35 = v20;
        long long v23 = (uint64_t)v20 + ((v22 + 32) & ~v22);
        long long v24 = *(void *)(v32 + 72);
        a1 = v41;
        do
        {
          sub_1BFEA5300(v23, (uint64_t)v7, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          long long v25 = *(int *)(v40 + 48);
          long long v26 = (uint64_t)&v39[v25];
          sub_1C063FDFC((uint64_t)&v7[v25], (uint64_t)&v39[v25], (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          sub_1BFEA4850(v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          sub_1BFEA5370((uint64_t)v7, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1BFEA5440);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F6E38(0, a1[2] + 1, 1);
            a1 = v41;
          }
          uint64_t v28 = a1[2];
          long long v27 = a1[3];
          if (v28 >= v27 >> 1)
          {
            sub_1C05F6E38(v27 > 1, v28 + 1, 1);
            a1 = v41;
          }
          a1[2] = v28 + 1;
          sub_1BFEA4850((uint64_t)v11, (uint64_t)a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          v23 += v24;
          --v21;
        }
        while (v21);
        swift_release();
        swift_release();
        uint64_t v12 = v31;
        unint64_t v13 = v37;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v13;
      uint64_t v14 = v38;
      if (v13 == v34)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1C062510C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v21 = *(void *)(v3 + 16);
  if (v21)
  {
    uint64_t v20 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v19 = v3;
    while (v4 < *(void *)(v3 + 16))
    {
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = *(_OWORD *)(v20 + 16 * v4);
      swift_retain();
      swift_retain();
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C0637538(v6);
      swift_bridgeObjectRelease();
      uint64_t v26 = v7;
      sub_1C0641BF4(&v26, (uint64_t)sub_1C0642674, v5, (uint64_t (*)(uint64_t))sub_1C06364C8, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1C063D748);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v8 = v26;
      int64_t v9 = *(void *)(v26 + 16);
      if (v9)
      {
        unint64_t v22 = v4;
        uint64_t v26 = MEMORY[0x1E4FBC860];
        sub_1C05F6E80(0, v9, 0);
        a1 = v26;
        uint64_t v10 = (_OWORD *)(v8 + 88);
        do
        {
          uint64_t v23 = *((void *)v10 - 5);
          uint64_t v24 = *((void *)v10 - 6);
          char v11 = *((unsigned char *)v10 - 32);
          uint64_t v12 = *((void *)v10 - 3);
          unint64_t v13 = *((void *)v10 - 2);
          uint64_t v14 = *((void *)v10 - 1);
          long long v25 = *v10;
          sub_1BFF7FF04(v12, v13);
          uint64_t v26 = a1;
          unint64_t v15 = *(void *)(a1 + 16);
          unint64_t v16 = *(void *)(a1 + 24);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          if (v15 >= v16 >> 1)
          {
            sub_1C05F6E80(v16 > 1, v15 + 1, 1);
            a1 = v26;
          }
          *(void *)(a1 + 16) = v15 + 1;
          uint64_t v17 = a1 + (v15 << 6);
          *(void *)(v17 + 32) = v24;
          *(void *)(v17 + 40) = v23;
          *(unsigned char *)(v17 + 48) = v11;
          *(void *)(v17 + 56) = v12;
          *(void *)(v17 + 64) = v13;
          *(void *)(v17 + 72) = v14;
          uint64_t v10 = (_OWORD *)((char *)v10 + 72);
          *(_OWORD *)(v17 + 80) = v25;
          --v9;
        }
        while (v9);
        swift_release();
        swift_release();
        uint64_t v3 = v19;
        unint64_t v4 = v22;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      if (++v4 == v21)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C06253B8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v28 = *(void *)(v3 + 16);
  if (v28)
  {
    uint64_t v26 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v27 = v3;
    while (v4 < *(void *)(v3 + 16))
    {
      unint64_t v29 = v4;
      uint64_t v5 = (uint64_t *)(v26 + 16 * v4);
      uint64_t v6 = *v5;
      uint64_t v7 = v5[1];
      swift_retain_n();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C06377DC(v8);
      swift_bridgeObjectRelease();
      uint64_t v31 = v9;
      sub_1BFEA57E8(&v31, v6, v7, (uint64_t)&unk_1F1BAE048, (uint64_t (*)(uint64_t))sub_1C06364DC, (void (*)(void *, uint64_t, uint64_t))sub_1C063E300);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v31;
      int64_t v11 = *(void *)(v31 + 16);
      if (v11)
      {
        uint64_t v46 = MEMORY[0x1E4FBC860];
        sub_1C05F6EA0(0, v11, 0);
        uint64_t v12 = v10 + 32;
        a1 = v46;
        do
        {
          sub_1BFEA5300(v12, (uint64_t)&v31, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
          sub_1C01F09C0((uint64_t)&v32, (uint64_t)v30);
          long long v43 = v30[10];
          long long v44 = v30[11];
          long long v45 = v30[12];
          long long v39 = v30[6];
          long long v40 = v30[7];
          long long v41 = v30[8];
          long long v42 = v30[9];
          long long v35 = v30[2];
          long long v36 = v30[3];
          long long v37 = v30[4];
          long long v38 = v30[5];
          long long v33 = v30[0];
          long long v34 = v30[1];
          sub_1BFEA5370((uint64_t)&v31, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C064267C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F6EA0(0, *(void *)(a1 + 16) + 1, 1);
            a1 = v46;
          }
          unint64_t v14 = *(void *)(a1 + 16);
          unint64_t v13 = *(void *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1C05F6EA0(v13 > 1, v14 + 1, 1);
            a1 = v46;
          }
          *(void *)(a1 + 16) = v14 + 1;
          unint64_t v15 = (_OWORD *)(a1 + 208 * v14);
          v15[2] = v33;
          long long v16 = v34;
          long long v17 = v35;
          long long v18 = v37;
          v15[5] = v36;
          _OWORD v15[6] = v18;
          uint64_t v15[3] = v16;
          v15[4] = v17;
          long long v19 = v38;
          long long v20 = v39;
          long long v21 = v41;
          v15[9] = v40;
          v15[10] = v21;
          v15[7] = v19;
          v15[8] = v20;
          long long v22 = v42;
          long long v23 = v43;
          long long v24 = v45;
          v15[13] = v44;
          uint64_t v15[14] = v24;
          v15[11] = v22;
          v15[12] = v23;
          v12 += 216;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      unint64_t v4 = v29 + 1;
      uint64_t v3 = v27;
      if (v29 + 1 == v28)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C06256F8(void *a1)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;

  sub_1BFEA5440(0, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  long long v40 = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v39 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for FeedWebEmbed();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 16);
  long long v34 = *(void *)(v12 + 16);
  if (v34)
  {
    long long v33 = v12 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v31 = v12;
    while (v13 < *(void *)(v12 + 16))
    {
      uint64_t v15 = v33 + 16 * v13;
      long long v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))v15;
      long long v17 = *(void *)(v15 + 8);
      swift_retain_n();
      long long v18 = swift_bridgeObjectRetain();
      long long v19 = (void *)sub_1C0637A48(v18);
      swift_bridgeObjectRelease();
      long long v41 = v19;
      sub_1C063EF1C(&v41, v16, v17);
      long long v38 = v14;
      if (v14) {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_release();
      long long v20 = v41;
      long long v21 = v41[2];
      if (v21)
      {
        long long v36 = v17;
        long long v37 = v13;
        long long v41 = (void *)MEMORY[0x1E4FBC860];
        sub_1C05F6EC0(0, v21, 0);
        long long v22 = *(unsigned __int8 *)(v32 + 80);
        long long v35 = v20;
        long long v23 = (uint64_t)v20 + ((v22 + 32) & ~v22);
        long long v24 = *(void *)(v32 + 72);
        a1 = v41;
        do
        {
          sub_1BFEA5300(v23, (uint64_t)v7, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          long long v25 = *(int *)(v40 + 48);
          uint64_t v26 = (uint64_t)&v39[v25];
          sub_1C063FDFC((uint64_t)&v7[v25], (uint64_t)&v39[v25], (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          sub_1BFEA4850(v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          sub_1BFEA5370((uint64_t)v7, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1BFEA5440);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F6EC0(0, a1[2] + 1, 1);
            a1 = v41;
          }
          uint64_t v28 = a1[2];
          uint64_t v27 = a1[3];
          if (v28 >= v27 >> 1)
          {
            sub_1C05F6EC0(v27 > 1, v28 + 1, 1);
            a1 = v41;
          }
          a1[2] = v28 + 1;
          sub_1BFEA4850((uint64_t)v11, (uint64_t)a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          v23 += v24;
          --v21;
        }
        while (v21);
        swift_release();
        swift_release();
        uint64_t v12 = v31;
        unint64_t v13 = v37;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v13;
      uint64_t v14 = v38;
      if (v13 == v34)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1C0625B3C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v3 + 16);
  if (v26)
  {
    uint64_t v24 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v25 = v3;
    while (v4 < *(void *)(v3 + 16))
    {
      unint64_t v27 = v4;
      uint64_t v5 = (uint64_t *)(v24 + 16 * v4);
      uint64_t v6 = *v5;
      uint64_t v7 = v5[1];
      swift_retain_n();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C0637E5C(v8);
      swift_bridgeObjectRelease();
      uint64_t v30 = v9;
      sub_1BFEA57E8(&v30, v6, v7, (uint64_t)&unk_1F1BADF08, (uint64_t (*)(uint64_t))sub_1C0636504, (void (*)(void *, uint64_t, uint64_t))sub_1C063F0CC);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v30;
      int64_t v11 = *(void *)(v30 + 16);
      if (v11)
      {
        uint64_t v42 = MEMORY[0x1E4FBC860];
        sub_1C05F6F08(0, v11, 0);
        uint64_t v12 = v10 + 32;
        a1 = v42;
        do
        {
          sub_1BFEA5300(v12, (uint64_t)&v30, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
          sub_1BFEA435C((uint64_t)&v31, (uint64_t)v28);
          long long v38 = v28[6];
          long long v39 = v28[7];
          long long v40 = v28[8];
          char v41 = v29;
          long long v34 = v28[2];
          long long v35 = v28[3];
          long long v36 = v28[4];
          long long v37 = v28[5];
          long long v32 = v28[0];
          long long v33 = v28[1];
          sub_1BFEA5370((uint64_t)&v30, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C064267C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F6F08(0, *(void *)(a1 + 16) + 1, 1);
            a1 = v42;
          }
          unint64_t v14 = *(void *)(a1 + 16);
          unint64_t v13 = *(void *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1C05F6F08(v13 > 1, v14 + 1, 1);
            a1 = v42;
          }
          *(void *)(a1 + 16) = v14 + 1;
          uint64_t v15 = a1 + 152 * v14;
          long long v16 = v33;
          *(_OWORD *)(v15 + 32) = v32;
          *(_OWORD *)(v15 + 48) = v16;
          long long v17 = v34;
          long long v18 = v35;
          long long v19 = v37;
          *(_OWORD *)(v15 + 96) = v36;
          *(_OWORD *)(v15 + 112) = v19;
          *(_OWORD *)(v15 + 64) = v17;
          *(_OWORD *)(v15 + 80) = v18;
          long long v20 = v38;
          long long v21 = v39;
          long long v22 = v40;
          *(unsigned char *)(v15 + 176) = v41;
          *(_OWORD *)(v15 + 144) = v21;
          *(_OWORD *)(v15 + 160) = v22;
          *(_OWORD *)(v15 + 128) = v20;
          v12 += 160;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      unint64_t v4 = v27 + 1;
      uint64_t v3 = v25;
      if (v27 + 1 == v26)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C0625E6C(void *a1)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;

  sub_1BFEA5440(0, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  long long v40 = v3;
  long long v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v39 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for FeedEngagementBanner();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 16);
  long long v34 = *(void *)(v12 + 16);
  if (v34)
  {
    long long v33 = v12 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v31 = v12;
    while (v13 < *(void *)(v12 + 16))
    {
      uint64_t v15 = v33 + 16 * v13;
      long long v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))v15;
      long long v17 = *(void *)(v15 + 8);
      swift_retain_n();
      long long v18 = swift_bridgeObjectRetain();
      long long v19 = (void *)sub_1C0638314(v18);
      swift_bridgeObjectRelease();
      char v41 = v19;
      sub_1C063FC4C(&v41, v16, v17);
      long long v38 = v14;
      if (v14) {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_release();
      long long v20 = v41;
      long long v21 = v41[2];
      if (v21)
      {
        long long v36 = v17;
        long long v37 = v13;
        char v41 = (void *)MEMORY[0x1E4FBC860];
        sub_1C05F77D0(0, v21, 0);
        long long v22 = *(unsigned __int8 *)(v32 + 80);
        long long v35 = v20;
        long long v23 = (uint64_t)v20 + ((v22 + 32) & ~v22);
        uint64_t v24 = *(void *)(v32 + 72);
        a1 = v41;
        do
        {
          sub_1BFEA5300(v23, (uint64_t)v7, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          uint64_t v25 = *(int *)(v40 + 48);
          uint64_t v26 = (uint64_t)&v39[v25];
          sub_1C063FDFC((uint64_t)&v7[v25], (uint64_t)&v39[v25], (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
          sub_1BFEA4850(v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
          sub_1BFEA5370((uint64_t)v7, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))sub_1BFEA5440);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F77D0(0, a1[2] + 1, 1);
            a1 = v41;
          }
          uint64_t v28 = a1[2];
          unint64_t v27 = a1[3];
          if (v28 >= v27 >> 1)
          {
            sub_1C05F77D0(v27 > 1, v28 + 1, 1);
            a1 = v41;
          }
          a1[2] = v28 + 1;
          sub_1BFEA4850((uint64_t)v11, (uint64_t)a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
          v23 += v24;
          --v21;
        }
        while (v21);
        swift_release();
        swift_release();
        uint64_t v12 = v31;
        unint64_t v13 = v37;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v13;
      uint64_t v14 = v38;
      if (v13 == v34)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1C06262B0(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v23 = *(void *)(v4 + 16);
  if (v23)
  {
    uint64_t v22 = v4 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    uint64_t v21 = v4;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = *(_OWORD *)(v22 + 16 * v5);
      swift_retain();
      swift_retain();
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0638728(v7);
      swift_bridgeObjectRelease();
      uint64_t v31 = v8;
      sub_1C0641BF4(&v31, (uint64_t)sub_1C0641C98, v6, (uint64_t (*)(uint64_t))sub_1C0636540, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1C06402E4);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v9 = v31;
      int64_t v10 = *(void *)(v31 + 16);
      if (v10)
      {
        unint64_t v24 = v5;
        uint64_t v31 = MEMORY[0x1E4FBC860];
        sub_1C05F7818(0, v10, 0);
        a1 = v31;
        uint64_t v11 = v9 + 64;
        do
        {
          uint64_t v12 = *(void *)(v11 - 16);
          uint64_t v29 = *(void *)(v11 - 8);
          uint64_t v30 = *(void *)(v11 - 24);
          uint64_t v28 = *(void *)v11;
          char v27 = *(unsigned char *)(v11 + 8);
          uint64_t v13 = *(void *)(v11 + 24);
          uint64_t v14 = *(void *)(v11 + 40);
          uint64_t v25 = *(void *)(v11 + 32);
          uint64_t v26 = *(void *)(v11 + 16);
          uint64_t v16 = *(void *)(v11 + 48);
          unint64_t v15 = *(void *)(v11 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v16, v15);
          uint64_t v31 = a1;
          unint64_t v18 = *(void *)(a1 + 16);
          unint64_t v17 = *(void *)(a1 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_1C05F7818(v17 > 1, v18 + 1, 1);
            a1 = v31;
          }
          *(void *)(a1 + 16) = v18 + 1;
          uint64_t v19 = a1 + 88 * v18;
          *(void *)(v19 + 32) = v30;
          *(void *)(v19 + 40) = v12;
          *(void *)(v19 + 48) = v29;
          *(void *)(v19 + 56) = v28;
          *(unsigned char *)(v19 + 64) = v27;
          *(void *)(v19 + 72) = v26;
          *(void *)(v19 + 80) = v13;
          *(void *)(v19 + 88) = v25;
          *(void *)(v19 + 96) = v14;
          *(void *)(v19 + 104) = v16;
          *(void *)(v19 + 112) = v15;
          v11 += 96;
          --v10;
        }
        while (v10);
        swift_release();
        swift_release();
        uint64_t v4 = v21;
        unint64_t v5 = v24;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      if (++v5 == v23)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C062657C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v23 = *(void *)(v4 + 16);
  if (v23)
  {
    uint64_t v22 = v4 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    uint64_t v21 = v4;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = *(_OWORD *)(v22 + 16 * v5);
      swift_retain();
      swift_retain();
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C0638A10(v7);
      swift_bridgeObjectRelease();
      uint64_t v27 = v8;
      sub_1C0641BF4(&v27, (uint64_t)sub_1C0641C90, v6, (uint64_t (*)(uint64_t))sub_1C0636554, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1C0641198);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v9 = v27;
      int64_t v10 = *(void *)(v27 + 16);
      if (v10)
      {
        unint64_t v24 = v5;
        uint64_t v27 = MEMORY[0x1E4FBC860];
        sub_1BFFFF668(0, v10, 0);
        a1 = v27;
        uint64_t v11 = (unint64_t *)(v9 + 88);
        do
        {
          uint64_t v12 = *(v11 - 6);
          uint64_t v13 = *(v11 - 5);
          uint64_t v14 = *(v11 - 4);
          uint64_t v26 = *(v11 - 3);
          char v25 = *((unsigned char *)v11 - 16);
          uint64_t v15 = *(v11 - 1);
          unint64_t v16 = *v11;
          swift_bridgeObjectRetain();
          sub_1BFF7FF04(v15, v16);
          uint64_t v27 = a1;
          unint64_t v18 = *(void *)(a1 + 16);
          unint64_t v17 = *(void *)(a1 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_1BFFFF668(v17 > 1, v18 + 1, 1);
            a1 = v27;
          }
          v11 += 8;
          *(void *)(a1 + 16) = v18 + 1;
          uint64_t v19 = a1 + 56 * v18;
          *(void *)(v19 + 32) = v12;
          *(void *)(v19 + 40) = v13;
          *(void *)(v19 + 48) = v14;
          *(void *)(v19 + 56) = v26;
          *(unsigned char *)(v19 + 64) = v25;
          *(void *)(v19 + 72) = v15;
          *(void *)(v19 + 80) = v16;
          --v10;
        }
        while (v10);
        swift_release();
        swift_release();
        uint64_t v4 = v21;
        unint64_t v5 = v24;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      if (++v5 == v23)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C062680C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v3 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    while (v4 < *(void *)(v3 + 16))
    {
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 32 + 16 * v4);
      swift_retain();
      swift_retain();
      unint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C0638C70(v6);
      swift_bridgeObjectRelease();
      uint64_t v12 = v7;
      sub_1C0641BF4(&v12, (uint64_t)sub_1C063FE9C, v5, (uint64_t (*)(uint64_t))sub_1C0636568, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1C063A2A0);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(v12 + 16);
      if (v8)
      {
        uint64_t v12 = MEMORY[0x1E4FBC860];
        sub_1C152028C();
        uint64_t v9 = 40;
        do
        {
          swift_retain();
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
          v9 += 16;
          --v8;
        }
        while (v8);
        a1 = v12;
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      if (++v4 == v11)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C0626A30(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v18 = *(void *)(v3 + 16);
  if (v18)
  {
    uint64_t v16 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v17 = v3;
    while (v4 < *(void *)(v3 + 16))
    {
      unint64_t v19 = v4;
      uint64_t v5 = (uint64_t *)(v16 + 16 * v4);
      uint64_t v6 = *v5;
      uint64_t v7 = v5[1];
      swift_retain_n();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C0638FC0(v8);
      swift_bridgeObjectRelease();
      uint64_t v21 = v9;
      sub_1BFEA57E8(&v21, v6, v7, (uint64_t)&unk_1F1BADB48, (uint64_t (*)(uint64_t))sub_1C063657C, (void (*)(void *, uint64_t, uint64_t))sub_1C063B9F8);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v21;
      int64_t v11 = *(void *)(v21 + 16);
      if (v11)
      {
        uint64_t v24 = MEMORY[0x1E4FBC860];
        sub_1C05F7838(0, v11, 0);
        uint64_t v12 = v10 + 32;
        a1 = v24;
        do
        {
          sub_1BFEA5300(v12, (uint64_t)&v21, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
          sub_1C024A070((uint64_t)&v22, (uint64_t)v20);
          sub_1C063FFF4((uint64_t)v20, (uint64_t)v23);
          sub_1BFEA5370((uint64_t)&v21, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C064267C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F7838(0, *(void *)(a1 + 16) + 1, 1);
            a1 = v24;
          }
          unint64_t v14 = *(void *)(a1 + 16);
          unint64_t v13 = *(void *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1C05F7838(v13 > 1, v14 + 1, 1);
            a1 = v24;
          }
          *(void *)(a1 + 16) = v14 + 1;
          sub_1C063FFF4((uint64_t)v23, a1 + 288 * v14 + 32);
          v12 += 296;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      unint64_t v4 = v19 + 1;
      uint64_t v3 = v17;
      if (v19 + 1 == v18)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C0626D18(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v3 + 16);
  if (v26)
  {
    uint64_t v24 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v25 = v3;
    while (v4 < *(void *)(v3 + 16))
    {
      unint64_t v27 = v4;
      uint64_t v5 = (uint64_t *)(v24 + 16 * v4);
      uint64_t v6 = *v5;
      uint64_t v7 = v5[1];
      swift_retain_n();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C06391C8(v8);
      swift_bridgeObjectRelease();
      uint64_t v30 = v9;
      sub_1BFEA57E8(&v30, v6, v7, (uint64_t)&unk_1F1BADA58, (uint64_t (*)(uint64_t))sub_1C0636590, (void (*)(void *, uint64_t, uint64_t))sub_1C063C450);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v30;
      int64_t v11 = *(void *)(v30 + 16);
      if (v11)
      {
        uint64_t v42 = MEMORY[0x1E4FBC860];
        sub_1C05F7858(0, v11, 0);
        uint64_t v12 = v10 + 32;
        a1 = v42;
        do
        {
          sub_1BFEA5300(v12, (uint64_t)&v30, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
          sub_1C0249E84((uint64_t)&v31, (uint64_t)v28);
          long long v38 = v28[6];
          long long v39 = v28[7];
          long long v40 = v28[8];
          uint64_t v41 = v29;
          long long v34 = v28[2];
          long long v35 = v28[3];
          long long v36 = v28[4];
          long long v37 = v28[5];
          long long v32 = v28[0];
          long long v33 = v28[1];
          sub_1BFEA5370((uint64_t)&v30, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C064267C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F7858(0, *(void *)(a1 + 16) + 1, 1);
            a1 = v42;
          }
          unint64_t v14 = *(void *)(a1 + 16);
          unint64_t v13 = *(void *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1C05F7858(v13 > 1, v14 + 1, 1);
            a1 = v42;
          }
          *(void *)(a1 + 16) = v14 + 1;
          uint64_t v15 = a1 + 152 * v14;
          long long v16 = v33;
          *(_OWORD *)(v15 + 32) = v32;
          *(_OWORD *)(v15 + 48) = v16;
          long long v17 = v34;
          long long v18 = v35;
          long long v19 = v37;
          *(_OWORD *)(v15 + 96) = v36;
          *(_OWORD *)(v15 + 112) = v19;
          *(_OWORD *)(v15 + 64) = v17;
          *(_OWORD *)(v15 + 80) = v18;
          long long v20 = v38;
          long long v21 = v39;
          long long v22 = v40;
          *(void *)(v15 + 176) = v41;
          *(_OWORD *)(v15 + 144) = v21;
          *(_OWORD *)(v15 + 160) = v22;
          *(_OWORD *)(v15 + 128) = v20;
          v12 += 160;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      unint64_t v4 = v27 + 1;
      uint64_t v3 = v25;
      if (v27 + 1 == v26)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1C0627048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v12 = a1;
  sub_1C01F09C0(a2, (uint64_t)&v13);
  uint64_t v10 = a3;
  sub_1C01F09C0(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BFEA5370((uint64_t)&v10, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
  sub_1BFEA5370((uint64_t)&v12, (uint64_t)&qword_1EB861AD0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C0642620);
  return v9;
}

uint64_t sub_1C062711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v12 = a1;
  sub_1BFEA435C(a2, (uint64_t)&v13);
  uint64_t v10 = a3;
  sub_1BFEA435C(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BFEA5370((uint64_t)&v10, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
  sub_1BFEA5370((uint64_t)&v12, (uint64_t)&qword_1EB86B410, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C0642620);
  return v9;
}

uint64_t sub_1C06271F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v12 = a1;
  sub_1C024A070(a2, (uint64_t)&v13);
  uint64_t v10 = a3;
  sub_1C024A070(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BFEA5370((uint64_t)&v10, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
  sub_1BFEA5370((uint64_t)&v12, (uint64_t)&unk_1EA19CBC0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C0642620);
  return v9;
}

uint64_t sub_1C06272C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v12 = a1;
  sub_1C0249E84(a2, (uint64_t)&v13);
  uint64_t v10 = a3;
  sub_1C0249E84(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BFEA5370((uint64_t)&v10, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
  sub_1BFEA5370((uint64_t)&v12, (uint64_t)&unk_1EA19CBB8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C0642620);
  return v9;
}

Swift::Int __swiftcall GroupLayoutBindingContext.count(forSlotIdentifier:)(Swift::String_optional forSlotIdentifier)
{
  uint64_t v2 = v1;
  object = forSlotIdentifier.value._object;
  uint64_t countAndFlagsBits = forSlotIdentifier.value._countAndFlagsBits;
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 60));
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v21 = countAndFlagsBits;
    long long v22 = object;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF01960(0, v6, 0);
    uint64_t v8 = v5 + 32;
    uint64_t v7 = v28;
    do
    {
      sub_1BFEA78F0(v8, (uint64_t)v23);
      sub_1BFC66384((uint64_t)&v24, (uint64_t)v25);
      sub_1BFEA73C8((uint64_t)v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF01960(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v28;
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1) {
        sub_1BFF01960(v9 > 1, v10 + 1, 1);
      }
      uint64_t v11 = v26;
      uint64_t v12 = v27;
      uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      __n128 v14 = MEMORY[0x1F4188790](v13);
      long long v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
      sub_1BFEA7C90(v10, (uint64_t)v16, &v28, v11, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      uint64_t v7 = v28;
      v8 += 72;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = v21;
    object = v22;
  }
  uint64_t v18 = sub_1BFEA743C(v7, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  Swift::Int v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1C0627620@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedItemAuxiliaryItem();
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  uint64_t v14 = a2[2];
  uint64_t v15 = a2[3];
  uint64_t v16 = a2[5];
  uint64_t v29 = a2[4];
  uint64_t v30 = v12;
  uint64_t v31 = v16;
  uint64_t v32 = v13;
  uint64_t v17 = (int *)type metadata accessor for GroupLayoutBindingContext();
  *(void *)(a3 + v17[14]) = MEMORY[0x1E4FBC868];
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(a3 + v17[15]) = MEMORY[0x1E4FBC860];
  *(void *)(a3 + v17[19]) = 0;
  uint64_t v33 = a1;
  sub_1BFC66384(a1, a3 + 8);
  *(void *)(a3 + 48) = sub_1BFE5CE10(v18);
  sub_1BFEA0118(0, (unint64_t *)&unk_1EB87A650, (uint64_t)&type metadata for FeedSlot, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  uint64_t v34 = v30;
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  uint64_t v37 = v15;
  uint64_t v38 = v29;
  uint64_t v39 = v16;
  sub_1C0950744((void *)(v19 + 32));
  uint64_t v34 = v19;
  sub_1BFEA0118(0, &qword_1EB879CC8, (uint64_t)&type metadata for FeedSlot, MEMORY[0x1E4FBB320]);
  sub_1BFEA009C();
  sub_1BFEA1548();
  *(void *)(a3 + 72) = sub_1C151E91C();
  *(void *)(a3 + 80) = v19;
  *(void *)(a3 + 56) = MEMORY[0x1E4FBC870];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  *(void *)(a3 + 64) = sub_1C018DE88(MEMORY[0x1E4FBC860]);
  *(unsigned char *)(a3 + v17[16]) = 0;
  uint64_t v21 = a3 + v17[13];
  uint64_t v22 = *MEMORY[0x1E4FAB7C0];
  uint64_t v23 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  *(unsigned char *)a3 = 1;
  *(void *)(a3 + 96) = sub_1C018E004(v20);
  *(void *)(a3 + v17[18]) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a3 + v17[17]) = 0;
  *(unsigned char *)(a3 + 88) = 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v14 + 16);
  if (v24)
  {
    uint64_t v25 = v14 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    uint64_t v26 = *(void *)(v28 + 72);
    do
    {
      sub_1C063FDFC(v25, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
      sub_1C063FDFC((uint64_t)v11, (uint64_t)v8, type metadata accessor for FeedItem);
      sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
      sub_1BFE9F928((uint64_t)v8);
      sub_1C0641CA0((uint64_t)v8, type metadata accessor for FeedItem);
      v25 += v26;
      --v24;
    }
    while (v24);
  }
  __swift_destroy_boxed_opaque_existential_1(v33);
  return swift_bridgeObjectRelease();
}

uint64_t GroupLayoutBindingContext.count.getter()
{
  uint64_t v1 = type metadata accessor for GroupLayoutBindingContext();
  int64_t v2 = 0;
  uint64_t result = 0;
  uint64_t v4 = *(void *)(v0 + *(int *)(v1 + 56));
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v4 + 64;
  unint64_t v8 = v6 & *(void *)(v4 + 64);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v2 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(*(void *)(*(void *)(v4 + 56) + 8 * v11) + 16);
    BOOL v13 = __OFADD__(result, v12);
    result += v12;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
  int64_t v14 = v2 + 1;
  if (__OFADD__(v2, 1)) {
    goto LABEL_27;
  }
  if (v14 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v14);
  ++v2;
  if (v15) {
    goto LABEL_24;
  }
  int64_t v2 = v14 + 1;
  if (v14 + 1 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v2);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v2 = v14 + 2;
  if (v14 + 2 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v2);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v2 = v14 + 3;
  if (v14 + 3 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v2);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v2 = v14 + 4;
  if (v14 + 4 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v2);
  if (v15)
  {
LABEL_24:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v2 << 6);
    goto LABEL_5;
  }
  int64_t v16 = v14 + 5;
  if (v16 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v2 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v2 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v2 >= v9) {
      return result;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v2);
    ++v16;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

double sub_1C0627B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEA34E4(0x6F4D6E6967756C50, 0xEB000000006C6564, a2, a3);
    if (v13)
    {
      int64_t v14 = *(void **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      int64_t v14 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v14 = sub_1BFEA4268(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  uint64_t v26 = a2;
  if (v16 >= v15 >> 1) {
    int64_t v14 = sub_1BFEA4268((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  uint64_t v17 = sub_1C151A0CC();
  uint64_t v28 = v17;
  uint64_t v18 = sub_1BFEBC274(&qword_1EB864120, MEMORY[0x1E4FABC38]);
  uint64_t v29 = v18;
  *(void *)&long long v27 = a1;
  void v14[2] = v16 + 1;
  sub_1BFC773DC(&v27, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v27 = *(void *)(v4 + v9);
  *(void *)(v4 + v9) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v14, 0x6F4D6E6967756C50, 0xEB000000006C6564, v26, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v9) = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(v8 + 60);
  uint64_t v21 = *(void **)(v4 + v20);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v21 = sub_1BFEA36BC(0, v21[2] + 1, 1, v21);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    uint64_t v21 = sub_1BFEA36BC((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  v21[2] = v23 + 1;
  uint64_t v24 = &v21[9 * v23];
  v24[4] = 0x6F4D6E6967756C50;
  v24[5] = 0xEB000000006C6564;
  _OWORD v24[6] = v26;
  v24[7] = a3;
  v24[8] = a1;
  double result = *(double *)&v27;
  *(_OWORD *)(v24 + 9) = v27;
  v24[11] = v17;
  v24[12] = v18;
  *(void *)(v4 + v20) = v21;
  return result;
}

double sub_1C0627E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEA34E4(0x4F70614764656546, 0xEE00656E696C6666, a2, a3);
    if (v13)
    {
      int64_t v14 = *(void **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      int64_t v14 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C0641DF8(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v14 = sub_1BFEA4268(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  uint64_t v31 = a2;
  if (v16 >= v15 >> 1) {
    int64_t v14 = sub_1BFEA4268((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  uint64_t v33 = &type metadata for FeedGapOffline;
  unint64_t v17 = sub_1C0641E5C();
  unint64_t v34 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)&long long v32 = v18;
  long long v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v18 + 96) = *(void *)(a1 + 80);
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v20;
  void v14[2] = v16 + 1;
  sub_1BFC773DC(&v32, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v32 = *(void *)(v4 + v9);
  *(void *)(v4 + v9) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v14, 0x4F70614764656546, 0xEE00656E696C6666, v31, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v9) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_allocObject();
  long long v23 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v22 + 96) = *(void *)(a1 + 80);
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v22 + 32) = v24;
  uint64_t v25 = *(int *)(v8 + 60);
  uint64_t v26 = *(void **)(v4 + v25);
  sub_1C0641DF8(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  uint64_t v29 = &v26[9 * v28];
  strcpy((char *)v29 + 32, "FeedGapOffline");
  *((unsigned char *)v29 + 47) = -18;
  v29[6] = v31;
  unsigned char v29[7] = a3;
  v29[8] = v22;
  double result = *(double *)&v32;
  *(_OWORD *)(v29 + 9) = v32;
  v29[11] = &type metadata for FeedGapOffline;
  v29[12] = v17;
  *(void *)(v4 + v25) = v26;
  return result;
}

__n128 sub_1C06281A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v11 = *(int *)(v33 + 56);
  uint64_t v12 = *(void *)(v3 + v11);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEA34E4(0x4562655764656546, 0xEC0000006465626DLL, a2, a3);
    if (v15)
    {
      unint64_t v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C063FDFC(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v16 = sub_1BFEA4268(0, v16[2] + 1, 1, v16);
  }
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_1BFEA4268((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v37.n128_u64[1] = v8;
  uint64_t v19 = v8;
  uint64_t v20 = sub_1BFEBC274(&qword_1EB85B498, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  *(void *)&long long v38 = v20;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1C063FDFC((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  v16[2] = v18 + 1;
  sub_1BFC773DC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1C0641CA0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v36 = *(void *)(v4 + v11);
  *(void *)(v4 + v11) = 0x8000000000000000;
  uint64_t v23 = v34;
  sub_1BFEA3344((uint64_t)v16, 0x4562655764656546, 0xEC0000006465626DLL, v34, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)&v39 + 1) = v19;
  uint64_t v40 = v20;
  long long v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1C063FDFC(v35, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  strcpy((char *)&v36, "FeedWebEmbed");
  BYTE13(v36) = 0;
  HIWORD(v36) = -5120;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  uint64_t v25 = *(int *)(v33 + 60);
  uint64_t v26 = *(void **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  uint64_t v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  __n128 result = v37;
  long long v31 = v38;
  long long v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(void *)(v4 + v25) = v26;
  return result;
}

double sub_1C0628590(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEA34E4(0x7573734964656546, 0xE900000000000065, a2, a3);
    if (v13)
    {
      unint64_t v14 = *(void **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C0187FB0((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v14 = sub_1BFEA4268(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  uint64_t v35 = a2;
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_1BFEA4268((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  __n128 v37 = &type metadata for FeedIssue;
  unint64_t v17 = sub_1BFEB031C();
  unint64_t v38 = v17;
  unint64_t v18 = (_OWORD *)swift_allocObject();
  *(void *)&long long v36 = v18;
  long long v19 = a1[7];
  v18[7] = a1[6];
  v18[8] = v19;
  *(_OWORD *)((char *)v18 + 137) = *(_OWORD *)((char *)a1 + 121);
  long long v20 = a1[3];
  v18[3] = a1[2];
  v18[4] = v20;
  long long v21 = a1[5];
  v18[5] = a1[4];
  long long v18[6] = v21;
  long long v22 = a1[1];
  v18[1] = *a1;
  void v18[2] = v22;
  void v14[2] = v16 + 1;
  sub_1BFC773DC(&v36, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v36 = *(void *)(v4 + v9);
  *(void *)(v4 + v9) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v14, 0x7573734964656546, 0xE900000000000065, v35, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v9) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v24 = (_OWORD *)swift_allocObject();
  long long v25 = a1[3];
  uint64_t v24[3] = a1[2];
  v24[4] = v25;
  *(_OWORD *)((char *)v24 + 137) = *(_OWORD *)((char *)a1 + 121);
  long long v26 = a1[7];
  v24[7] = a1[6];
  v24[8] = v26;
  long long v27 = a1[5];
  v24[5] = a1[4];
  _OWORD v24[6] = v27;
  long long v28 = a1[1];
  v24[1] = *a1;
  v24[2] = v28;
  uint64_t v29 = *(int *)(v8 + 60);
  uint64_t v30 = *(void **)(v4 + v29);
  sub_1C0187FB0((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v30 = sub_1BFEA36BC(0, v30[2] + 1, 1, v30);
  }
  unint64_t v32 = v30[2];
  unint64_t v31 = v30[3];
  if (v32 >= v31 >> 1) {
    uint64_t v30 = sub_1BFEA36BC((void *)(v31 > 1), v32 + 1, 1, v30);
  }
  v30[2] = v32 + 1;
  uint64_t v33 = &v30[9 * v32];
  v33[4] = 0x7573734964656546;
  v33[5] = 0xE900000000000065;
  v33[6] = v35;
  v33[7] = a3;
  v33[8] = v24;
  double result = *(double *)&v36;
  *(_OWORD *)(v33 + 9) = v36;
  v33[11] = &type metadata for FeedIssue;
  v33[12] = v17;
  *(void *)(v4 + v29) = v30;
  return result;
}

double sub_1C06288DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v8 = *(int *)(v25 + 56);
  uint64_t v9 = *(void *)(v3 + v8);
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1BFEA34E4(0x6174614364656546, 0xEF6D657449676F6CLL, a2, a3);
    if (v12)
    {
      char v13 = *(void **)(*(void *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      char v13 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C024A070(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v13 = sub_1BFEA4268(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    char v13 = sub_1BFEA4268((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  long long v27 = &type metadata for FeedCatalogItem;
  unint64_t v16 = sub_1C024A0CC();
  unint64_t v28 = v16;
  *(void *)&long long v26 = swift_allocObject();
  sub_1C024A070((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BFC773DC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1C024A288((uint64_t)v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(void *)(v4 + v8) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v13, 0x6174614364656546, 0xEF6D657449676F6CLL, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  sub_1C024A070(a1, v18 + 16);
  uint64_t v19 = *(int *)(v25 + 60);
  long long v20 = *(void **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v20 = sub_1BFEA36BC(0, v20[2] + 1, 1, v20);
  }
  unint64_t v22 = v20[2];
  unint64_t v21 = v20[3];
  if (v22 >= v21 >> 1) {
    long long v20 = sub_1BFEA36BC((void *)(v21 > 1), v22 + 1, 1, v20);
  }
  void v20[2] = v22 + 1;
  uint64_t v23 = &v20[9 * v22];
  v23[4] = 0x6174614364656546;
  v23[5] = 0xEF6D657449676F6CLL;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  double result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedCatalogItem;
  v23[12] = v16;
  *(void *)(v4 + v19) = v20;
  return result;
}

double sub_1C0628C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v8 = *(int *)(v25 + 56);
  uint64_t v9 = *(void *)(v3 + v8);
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1BFEA34E4(0x67615464656546, 0xE700000000000000, a2, a3);
    if (v12)
    {
      char v13 = *(void **)(*(void *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      char v13 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1BFEA435C(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v13 = sub_1BFEA4268(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    char v13 = sub_1BFEA4268((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  long long v27 = &type metadata for FeedTag;
  unint64_t v16 = sub_1BFEA44FC();
  unint64_t v28 = v16;
  *(void *)&long long v26 = swift_allocObject();
  sub_1BFEA435C((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BFC773DC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1BFEA4290((uint64_t)v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(void *)(v4 + v8) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v13, 0x67615464656546, 0xE700000000000000, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  sub_1BFEA435C(a1, v18 + 16);
  uint64_t v19 = *(int *)(v25 + 60);
  long long v20 = *(void **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v20 = sub_1BFEA36BC(0, v20[2] + 1, 1, v20);
  }
  unint64_t v22 = v20[2];
  unint64_t v21 = v20[3];
  if (v22 >= v21 >> 1) {
    long long v20 = sub_1BFEA36BC((void *)(v21 > 1), v22 + 1, 1, v20);
  }
  void v20[2] = v22 + 1;
  uint64_t v23 = &v20[9 * v22];
  v23[4] = 0x67615464656546;
  v23[5] = 0xE700000000000000;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  double result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedTag;
  v23[12] = v16;
  *(void *)(v4 + v19) = v20;
  return result;
}

__n128 sub_1C0628F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v11 = *(int *)(v33 + 56);
  uint64_t v12 = *(void *)(v3 + v11);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEA34E4(0x7473754364656546, 0xEE006D6574496D6FLL, a2, a3);
    if (v15)
    {
      unint64_t v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C063FDFC(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v16 = sub_1BFEA4268(0, v16[2] + 1, 1, v16);
  }
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_1BFEA4268((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v37.n128_u64[1] = v8;
  uint64_t v19 = v8;
  uint64_t v20 = sub_1BFEBC274(&qword_1EB85E978, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  *(void *)&long long v38 = v20;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1C063FDFC((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  v16[2] = v18 + 1;
  sub_1BFC773DC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1C0641CA0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v36 = *(void *)(v4 + v11);
  *(void *)(v4 + v11) = 0x8000000000000000;
  uint64_t v23 = v34;
  sub_1BFEA3344((uint64_t)v16, 0x7473754364656546, 0xEE006D6574496D6FLL, v34, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)&v39 + 1) = v19;
  uint64_t v40 = v20;
  long long v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1C063FDFC(v35, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  strcpy((char *)&v36, "FeedCustomItem");
  HIBYTE(v36) = -18;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  uint64_t v25 = *(int *)(v33 + 60);
  long long v26 = *(void **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    long long v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  uint64_t v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  __n128 result = v37;
  long long v31 = v38;
  long long v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(void *)(v4 + v25) = v26;
  return result;
}

double sub_1C062931C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v8 = *(int *)(v25 + 56);
  uint64_t v9 = *(void *)(v3 + v8);
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1BFEA34E4(0x6574614364656546, 0xEC00000079726F67, a2, a3);
    if (v12)
    {
      uint64_t v13 = *(void **)(*(void *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C0249E84(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1BFEA4268(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_1BFEA4268((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  unint64_t v27 = &type metadata for FeedCategory;
  unint64_t v16 = sub_1C0249EE0();
  unint64_t v28 = v16;
  *(void *)&long long v26 = swift_allocObject();
  sub_1C0249E84((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BFC773DC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1C0249FA4((uint64_t)v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(void *)(v4 + v8) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v13, 0x6574614364656546, 0xEC00000079726F67, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  sub_1C0249E84(a1, v18 + 16);
  uint64_t v19 = *(int *)(v25 + 60);
  uint64_t v20 = *(void **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v20 = sub_1BFEA36BC(0, v20[2] + 1, 1, v20);
  }
  unint64_t v22 = v20[2];
  unint64_t v21 = v20[3];
  if (v22 >= v21 >> 1) {
    uint64_t v20 = sub_1BFEA36BC((void *)(v21 > 1), v22 + 1, 1, v20);
  }
  void v20[2] = v22 + 1;
  uint64_t v23 = &v20[9 * v22];
  strcpy((char *)v23 + 32, "FeedCategory");
  *((unsigned char *)v23 + 45) = 0;
  *((_WORD *)v23 + 23) = -5120;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  double result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedCategory;
  v23[12] = v16;
  *(void *)(v4 + v19) = v20;
  return result;
}

__n128 sub_1C0629648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v11 = *(int *)(v33 + 56);
  uint64_t v12 = *(void *)(v3 + v11);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  uint64_t v35 = a2;
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEA34E4(0xD000000000000014, 0x80000001C1614A90, a2, a3);
    if (v15)
    {
      unint64_t v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C063FDFC(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v16 = sub_1BFEA4268(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  uint64_t v34 = a1;
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_1BFEA4268((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v37.n128_u64[1] = v8;
  uint64_t v19 = sub_1BFEBC274((unint64_t *)&unk_1EB85F130, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  *(void *)&long long v38 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1C063FDFC((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
  v16[2] = v18 + 1;
  sub_1BFC773DC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1C0641CA0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v36 = *(void *)(v4 + v11);
  *(void *)(v4 + v11) = 0x8000000000000000;
  uint64_t v22 = (uint64_t)v16;
  uint64_t v23 = v35;
  sub_1BFEA3344(v22, 0xD000000000000014, 0x80000001C1614A90, v35, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)&v39 + 1) = v8;
  uint64_t v40 = v19;
  long long v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1C063FDFC(v34, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
  *(void *)&long long v36 = 0xD000000000000014;
  *((void *)&v36 + 1) = 0x80000001C1614A90;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  uint64_t v25 = *(int *)(v33 + 60);
  long long v26 = *(void **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    long long v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  uint64_t v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  __n128 result = v37;
  long long v31 = v38;
  long long v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(void *)(v4 + v25) = v26;
  return result;
}

double sub_1C06299F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEA34E4(0x726F705364656546, 0xEF746E6576457374, a2, a3);
    if (v13)
    {
      unint64_t v14 = *(void **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C06421C8(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v14 = sub_1BFEA4268(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  uint64_t v29 = a2;
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_1BFEA4268((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  long long v31 = &type metadata for FeedSportsEvent;
  unint64_t v17 = sub_1C0642200();
  unint64_t v32 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)&long long v30 = v18;
  long long v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v19;
  *(unsigned char *)(v18 + 48) = *(unsigned char *)(a1 + 32);
  void v14[2] = v16 + 1;
  sub_1BFC773DC(&v30, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v30 = *(void *)(v4 + v9);
  *(void *)(v4 + v9) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v14, 0x726F705364656546, 0xEF746E6576457374, v29, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v9) = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 32) = v22;
  *(unsigned char *)(v21 + 48) = *(unsigned char *)(a1 + 32);
  uint64_t v23 = *(int *)(v8 + 60);
  long long v24 = *(void **)(v4 + v23);
  sub_1C06421C8(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v24 = sub_1BFEA36BC(0, v24[2] + 1, 1, v24);
  }
  unint64_t v26 = v24[2];
  unint64_t v25 = v24[3];
  if (v26 >= v25 >> 1) {
    long long v24 = sub_1BFEA36BC((void *)(v25 > 1), v26 + 1, 1, v24);
  }
  v24[2] = v26 + 1;
  unint64_t v27 = &v24[9 * v26];
  v27[4] = 0x726F705364656546;
  v27[5] = 0xEF746E6576457374;
  _OWORD v27[6] = v29;
  v27[7] = a3;
  v27[8] = v21;
  double result = *(double *)&v30;
  *(_OWORD *)(v27 + 9) = v30;
  v27[11] = &type metadata for FeedSportsEvent;
  v27[12] = v17;
  *(void *)(v4 + v23) = v24;
  return result;
}

double sub_1C0629D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v8 = *(int *)(v25 + 56);
  uint64_t v9 = *(void *)(v3 + v8);
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1BFEA34E4(0x7A7A755064656546, 0xEA0000000000656CLL, a2, a3);
    if (v12)
    {
      char v13 = *(void **)(*(void *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      char v13 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C01F09C0(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v13 = sub_1BFEA4268(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    char v13 = sub_1BFEA4268((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  unint64_t v27 = &type metadata for FeedPuzzle;
  unint64_t v16 = sub_1C0642294();
  unint64_t v28 = v16;
  *(void *)&long long v26 = swift_allocObject();
  sub_1C01F09C0((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BFC773DC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1C01F0A74((uint64_t)v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(void *)(v4 + v8) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v13, 0x7A7A755064656546, 0xEA0000000000656CLL, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  sub_1C01F09C0(a1, v18 + 16);
  uint64_t v19 = *(int *)(v25 + 60);
  uint64_t v20 = *(void **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v20 = sub_1BFEA36BC(0, v20[2] + 1, 1, v20);
  }
  unint64_t v22 = v20[2];
  unint64_t v21 = v20[3];
  if (v22 >= v21 >> 1) {
    uint64_t v20 = sub_1BFEA36BC((void *)(v21 > 1), v22 + 1, 1, v20);
  }
  void v20[2] = v22 + 1;
  uint64_t v23 = &v20[9 * v22];
  v23[4] = 0x7A7A755064656546;
  v23[5] = 0xEA0000000000656CLL;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  double result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedPuzzle;
  v23[12] = v16;
  *(void *)(v4 + v19) = v20;
  return result;
}

double sub_1C062A05C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEA34E4(0x7A7A755064656546, 0xEE0065707954656CLL, a2, a3);
    if (v13)
    {
      unint64_t v14 = *(void **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C0642378((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v14 = sub_1BFEA4268(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  uint64_t v31 = a2;
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_1BFEA4268((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  uint64_t v33 = &type metadata for FeedPuzzleType;
  unint64_t v17 = sub_1C06423C4();
  unint64_t v34 = v17;
  uint64_t v18 = (_OWORD *)swift_allocObject();
  *(void *)&long long v32 = v18;
  long long v19 = a1[1];
  v18[1] = *a1;
  void v18[2] = v19;
  long long v20 = a1[3];
  v18[3] = a1[2];
  v18[4] = v20;
  void v14[2] = v16 + 1;
  sub_1BFC773DC(&v32, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v32 = *(void *)(v4 + v9);
  *(void *)(v4 + v9) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v14, 0x7A7A755064656546, 0xEE0065707954656CLL, v31, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v9) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v22 = (_OWORD *)swift_allocObject();
  long long v23 = a1[1];
  v22[1] = *a1;
  void v22[2] = v23;
  long long v24 = a1[3];
  uint64_t v22[3] = a1[2];
  v22[4] = v24;
  uint64_t v25 = *(int *)(v8 + 60);
  long long v26 = *(void **)(v4 + v25);
  sub_1C0642378((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    long long v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  uint64_t v29 = &v26[9 * v28];
  strcpy((char *)v29 + 32, "FeedPuzzleType");
  *((unsigned char *)v29 + 47) = -18;
  v29[6] = v31;
  unsigned char v29[7] = a3;
  v29[8] = v22;
  double result = *(double *)&v32;
  *(_OWORD *)(v29 + 9) = v32;
  v29[11] = &type metadata for FeedPuzzleType;
  v29[12] = v17;
  *(void *)(v4 + v25) = v26;
  return result;
}

__n128 sub_1C062A3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v11 = *(int *)(v33 + 56);
  uint64_t v12 = *(void *)(v3 + v11);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  uint64_t v35 = a2;
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEA34E4(0xD000000000000013, 0x80000001C1614AB0, a2, a3);
    if (v15)
    {
      unint64_t v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C063FDFC(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v16 = sub_1BFEA4268(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  uint64_t v34 = a1;
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_1BFEA4268((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v37.n128_u64[1] = v8;
  uint64_t v19 = sub_1BFEBC274(&qword_1EA19CBC8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  *(void *)&long long v38 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1C063FDFC((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  v16[2] = v18 + 1;
  sub_1BFC773DC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1C0641CA0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v36 = *(void *)(v4 + v11);
  *(void *)(v4 + v11) = 0x8000000000000000;
  uint64_t v22 = (uint64_t)v16;
  uint64_t v23 = v35;
  sub_1BFEA3344(v22, 0xD000000000000013, 0x80000001C1614AB0, v35, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)&v39 + 1) = v8;
  uint64_t v40 = v19;
  long long v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1C063FDFC(v34, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  *(void *)&long long v36 = 0xD000000000000013;
  *((void *)&v36 + 1) = 0x80000001C1614AB0;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  uint64_t v25 = *(int *)(v33 + 60);
  long long v26 = *(void **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    long long v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  uint64_t v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  __n128 result = v37;
  long long v31 = v38;
  long long v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(void *)(v4 + v25) = v26;
  return result;
}

double sub_1C062A760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEA34E4(0x7779615064656546, 0xEB000000006C6C61, a2, a3);
    if (v13)
    {
      unint64_t v14 = *(void **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C0642468(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v14 = sub_1BFEA4268(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  uint64_t v41 = a2;
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_1BFEA4268((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  long long v43 = &type metadata for FeedPaywall;
  unint64_t v17 = sub_1C064253C();
  unint64_t v44 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)&long long v42 = v18;
  long long v19 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(v18 + 208) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v18 + 224) = v19;
  *(_OWORD *)(v18 + 240) = *(_OWORD *)(a1 + 224);
  *(void *)(v18 + 256) = *(void *)(a1 + 240);
  long long v20 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v18 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v18 + 160) = v20;
  long long v21 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v18 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v18 + 192) = v21;
  long long v22 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v18 + 96) = v22;
  long long v23 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v18 + 128) = v23;
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v24;
  long long v25 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 64) = v25;
  void v14[2] = v16 + 1;
  sub_1BFC773DC(&v42, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v42 = *(void *)(v4 + v9);
  *(void *)(v4 + v9) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v14, 0x7779615064656546, 0xEB000000006C6C61, v41, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v9) = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = swift_allocObject();
  long long v28 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(v27 + 208) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v27 + 224) = v28;
  *(_OWORD *)(v27 + 240) = *(_OWORD *)(a1 + 224);
  *(void *)(v27 + 256) = *(void *)(a1 + 240);
  long long v29 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v27 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v27 + 160) = v29;
  long long v30 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v27 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v27 + 192) = v30;
  long long v31 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v27 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v27 + 96) = v31;
  long long v32 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v27 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v27 + 128) = v32;
  long long v33 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v27 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 32) = v33;
  long long v34 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v27 + 64) = v34;
  uint64_t v35 = *(int *)(v8 + 60);
  long long v36 = *(void **)(v4 + v35);
  sub_1C0642468(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v36 = sub_1BFEA36BC(0, v36[2] + 1, 1, v36);
  }
  unint64_t v38 = v36[2];
  unint64_t v37 = v36[3];
  if (v38 >= v37 >> 1) {
    long long v36 = sub_1BFEA36BC((void *)(v37 > 1), v38 + 1, 1, v36);
  }
  v36[2] = v38 + 1;
  long long v39 = &v36[9 * v38];
  v39[4] = 0x7779615064656546;
  v39[5] = 0xEB000000006C6C61;
  v39[6] = v41;
  v39[7] = a3;
  v39[8] = v27;
  double result = *(double *)&v42;
  *(_OWORD *)(v39 + 9) = v42;
  v39[11] = &type metadata for FeedPaywall;
  v39[12] = v17;
  *(void *)(v4 + v35) = v36;
  return result;
}

__n128 GroupLayoutBindingContext.bind<A>(_:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  char v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)v52 - v16;
  uint64_t v57 = v11;
  long long v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v18 = v11 + 16;
  uint64_t v58 = v19;
  uint64_t v59 = v20;
  ((void (*)(char *, __n128))v19)((char *)v52 - v16, v15);
  swift_bridgeObjectRetain();
  uint64_t v53 = v17;
  uint64_t v61 = a5;
  sub_1C0472738((uint64_t)v17, a2, a3, a4, (uint64_t *)&v62);
  long long v21 = v62;
  __n128 v22 = v63;
  uint64_t v23 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v55 = v21;
  uint64_t v56 = v23;
  uint64_t v24 = *(int *)(v23 + 56);
  uint64_t v60 = v6;
  uint64_t v25 = *(void *)(v6 + v24);
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v54 = *((void *)&v21 + 1);
  if (v26)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1BFEA34E4(v21, *((uint64_t *)&v21 + 1), v22.n128_i64[0], v22.n128_i64[1]);
    if (v28)
    {
      long long v29 = *(void **)(*(void *)(v25 + 56) + 8 * v27);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v29 = (void *)MEMORY[0x1E4FBC860];
    }
    long long v30 = v58;
    long long v31 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v29 = (void *)MEMORY[0x1E4FBC860];
    long long v30 = v58;
    long long v31 = v13;
  }
  v30(v31, v59, a4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v67 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v29 = sub_1BFEA4268(0, v29[2] + 1, 1, v29);
    uint64_t v67 = v29;
  }
  unint64_t v34 = v29[2];
  unint64_t v33 = v29[3];
  if (v34 >= v33 >> 1) {
    uint64_t v67 = sub_1BFEA4268((void *)(v33 > 1), v34 + 1, 1, v29);
  }
  uint64_t v35 = (uint64_t)v53;
  v30(v53, (uint64_t)v31, a4);
  sub_1BFFB628C(v34, v35, (uint64_t *)&v67, a4, v61);
  uint64_t v36 = v57;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, a4);
  unint64_t v37 = v67;
  swift_bridgeObjectRetain();
  v52[1] = v18;
  uint64_t v38 = v60;
  uint64_t v39 = v54;
  swift_bridgeObjectRetain();
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v62 = *(void *)(v38 + v24);
  *(void *)(v38 + v24) = 0x8000000000000000;
  uint64_t v41 = (uint64_t)v37;
  uint64_t v42 = v55;
  sub_1BFEA3344(v41, v55, v39, v22.n128_i64[0], v22.n128_i64[1], v40);
  *(void *)(v38 + v24) = v62;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58((char *)v35, v59, a4);
  *(void *)&long long v62 = v42;
  *((void *)&v62 + 1) = v39;
  __n128 v63 = v22;
  *((void *)&v65 + 1) = a4;
  uint64_t v66 = v61;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v64);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 32))(boxed_opaque_existential_0, v35, a4);
  uint64_t v44 = *(int *)(v56 + 60);
  long long v45 = *(void **)(v38 + v44);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v45 = sub_1BFEA36BC(0, v45[2] + 1, 1, v45);
  }
  unint64_t v47 = v45[2];
  unint64_t v46 = v45[3];
  if (v47 >= v46 >> 1) {
    long long v45 = sub_1BFEA36BC((void *)(v46 > 1), v47 + 1, 1, v45);
  }
  void v45[2] = v47 + 1;
  uint64_t v48 = &v45[9 * v47];
  *((_OWORD *)v48 + 2) = v62;
  __n128 result = v63;
  long long v50 = v64;
  long long v51 = v65;
  v48[12] = v66;
  *((_OWORD *)v48 + 4) = v50;
  *((_OWORD *)v48 + 5) = v51;
  *((__n128 *)v48 + 3) = result;
  *(void *)(v60 + v44) = v45;
  return result;
}

void sub_1C062AF24(uint64_t a1@<X0>, char **a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  long long v43 = a2;
  uint64_t v44 = a6;
  int v41 = a4;
  uint64_t v42 = a1;
  char v40 = (char *)a7;
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151FD8C();
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v37 - v18;
  uint64_t v20 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *a3;
  uint64_t v25 = v11[19];
  uint64_t v26 = *(void *)(v8 + v25);
  if (v26 < *(void *)(v8 + v11[17]))
  {
    sub_1C062C3A4(v42, v24, v43, v41 & 1, a5, v44, (uint64_t)v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a5) != 1)
    {
      unint64_t v34 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v34(v23, v19, a5);
      uint64_t v35 = (uint64_t)v40;
      v34(v40, v23, a5);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v35, 0, 1, a5);
      return;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v39);
    uint64_t v26 = *(void *)(v8 + v25);
  }
  uint64_t v27 = *(void *)(v8 + v11[18]);
  BOOL v28 = __OFSUB__(v27, v26);
  uint64_t v29 = v27 - v26;
  if (v28)
  {
    __break(1u);
  }
  else if (v29 <= 0)
  {
    int v30 = v41 & 1;
    uint64_t v31 = v42;
    long long v32 = v43;
    unint64_t v33 = v44;
    sub_1C062C600(v42, v24, v43, v30, a5, v44, 4096, (uint64_t)v16, 0);
    sub_1C063FDFC(v8, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, a5) == 1)
    {
      sub_1C062C600(v31, v24, v32, v30, a5, v33, 0, (uint64_t)v40, 1);
      sub_1C0641CA0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
    }
    else
    {
      sub_1C0641CA0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t v36 = (uint64_t)v40;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v40, v16, a5);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v36, 0, 1, a5);
    }
  }
  else
  {
    sub_1C062C600(v42, v24, v43, v41 & 1, a5, v44, 0, (uint64_t)v40, 1);
  }
}

uint64_t sub_1C062B34C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v1 = sub_1C151811C();
  uint64_t v3 = v2;
  if (v1 == sub_1C151811C() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 0;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v6 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1C062B420(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  if (a1 && (*a2 & 1) == 0)
  {
    swift_retain();
    uint64_t v5 = sub_1C03F9A88(a3);
    swift_release();
    return v5;
  }
  else
  {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C062B48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v8 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v20 = sub_1C152023C();
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_1C035E7C8((void (*)(char *, char *))sub_1C06427FC, (uint64_t)v15, v8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v10);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v11 + 16);
  if (v13 <= a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    sub_1C06052CC(v11 + 32, a2, (2 * v13) | 1);
    uint64_t v14 = swift_bridgeObjectRelease();
    uint64_t v20 = a1;
    MEMORY[0x1F4188790](v14);
    swift_bridgeObjectRetain();
    a1 = sub_1C152023C();
    swift_bridgeObjectRelease();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C062B674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __n128 v12 = MEMORY[0x1F4188790](a1);
  (*(void (**)(unsigned char *, __n128))(v14 + 16))(&v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  uint64_t v15 = sub_1C151EA3C();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 + 16);
  if (!v17)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v18 = *(void *)(v15 + 32);
  uint64_t result = MEMORY[0x1C18C6830](a2, a4);
  if (v18 != 0x7FFFFFFFFFFFFFFFLL && result < v18)
  {
    uint64_t v21 = 0;
    while (v17 - 1 != v21)
    {
      if ((unint64_t)(v21 + 1) >= *(void *)(v16 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v22 = *(void *)(v16 + 8 * v21++ + 40);
      if (result >= v22 || v22 == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_15;
      }
    }
    goto LABEL_16;
  }
LABEL_15:
  *(void *)&long long v28 = a2;
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151F14C();
  long long v28 = v30;
  long long v29 = v31;
  sub_1C151FF4C();
  swift_getWitnessTable();
  uint64_t v24 = sub_1C151ED7C();
  *(void *)&long long v30 = a3;
  MEMORY[0x1F4188790](v24);
  *(void *)&v27[-48] = a4;
  *(void *)&v27[-40] = a5;
  *(void *)&v27[-32] = v25;
  *(void *)&v27[-24] = a7;
  *(void *)&v27[-16] = v26;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C152023C();
  swift_bridgeObjectRelease();
  return v24;
}

BOOL sub_1C062B91C()
{
  return (sub_1C151EA2C() & 1) == 0;
}

uint64_t sub_1C062B9B8()
{
  uint64_t v0 = sub_1C151811C();
  uint64_t v2 = v1;
  if (v0 == sub_1C151811C() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C062BA74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char **a3@<X2>, uint64_t *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  void (*v44)(void *__return_ptr);
  uint64_t v45;
  BOOL v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t TupleTypeMetadata2;
  char *v69;
  char *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void (**v76)(void *__return_ptr);
  int v77;
  uint64_t v78;
  char *v79;
  char **v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  _OWORD v86[2];
  long long v87;
  long long v88;
  uint64_t v89;

  uint64_t v85 = a7;
  int64_t v71 = a5;
  uint64_t v80 = a3;
  uint64_t v13 = sub_1C151FD8C();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v69 = (char *)&v62 - v14;
  uint64_t v15 = sub_1C151ED5C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v72 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v70 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  unint64_t v84 = (char *)&v62 - v21;
  uint64_t v22 = swift_getTupleTypeMetadata2();
  unint64_t v83 = sub_1C151FD8C();
  unint64_t v78 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v82 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v81 = *a2;
  uint64_t v73 = *a4;
  int v27 = *((unsigned __int8 *)a4 + 8);
  *(void *)&uint64_t v87 = a1;
  uint64_t WitnessTable = swift_getWitnessTable();
  if (sub_1C151F15C())
  {
    uint64_t v29 = swift_getTupleTypeMetadata2();
    long long v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    uint64_t v31 = a8;
LABEL_21:
    long long v51 = 1;
    return v30(v31, v51, 1, v29);
  }
  else
  {
    long long v64 = WitnessTable;
    char v32 = *v79;
    long long v65 = a8;
    __n128 v63 = v17;
    if ((v32 & 1) != 0 || !v80)
    {
      uint64_t v33 = a6;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v33 = a6;
      swift_retain();
      a1 = sub_1C03F9A88(a1);
      swift_release();
    }
    uint64_t v66 = a1;
    uint64_t v89 = a1;
    uint64_t v34 = swift_getWitnessTable();
    MEMORY[0x1C18C64C0](v86, v15, v34);
    uint64_t v89 = *(void *)&v86[0];
    sub_1C152048C();
    sub_1C152045C();
    uint64_t v67 = v15;
    uint64_t v35 = sub_1C152047C();
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v78 + 32);
    unint64_t v78 = v22 - 8;
    unint64_t v79 = (char *)v35;
    uint64_t v80 = (char **)(v72 + 32);
    if (v73) {
      int v37 = v27;
    }
    else {
      int v37 = 1;
    }
    uint64_t v77 = v37;
    uint64_t v38 = v84;
    uint64_t v39 = (void (**)(char *, uint64_t))(v72 + 8);
    uint64_t v76 = (void (**)(void *__return_ptr))(v85 + 24);
    uint64_t v75 = (unint64_t)(v85 + 24) & 0xFFFFFFFFFFFFLL | 0xCD14000000000000;
    for (uint64_t i = v33; ; (*v39)(v84, i))
    {
      int v41 = v82;
      sub_1C152046C();
      (*v36)(v26, v41, v83);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v26, 1, v22) == 1) {
        break;
      }
      uint64_t v42 = *(void *)v26;
      long long v43 = *v80;
      ((void (*)(char *, char *, uint64_t))*v80)(v38, &v26[*(int *)(v22 + 48)], i);
      uint64_t v44 = *v76;
      uint64_t v74 = v42;
      if (v77)
      {
        long long v45 = i;
        unint64_t v46 = 0;
      }
      else
      {
        ((void (*)(_OWORD *__return_ptr, uint64_t, char *))v44)(v86, i, v85);
        long long v45 = i;
        unint64_t v46 = (v73 & ~*(void *)&v86[0]) == 0;
      }
      uint64_t i = v45;
      v44(v86);
      if ((v81 & ~*(void *)&v86[0]) == 0 && !v46)
      {
        swift_bridgeObjectRelease();
        *(void *)&v86[0] = v66;
        unint64_t v47 = v70;
        sub_1C151ED2C();
        (*v39)(v84, i);
        uint64_t v48 = swift_getTupleTypeMetadata2();
        uint64_t v49 = *(int *)(v48 + 48);
        long long v50 = v65;
        ((void (*)(uint64_t, char *, uint64_t))v43)(v65, v47, i);
        *(void *)(v50 + v49) = *(void *)&v86[0];
        long long v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);
        uint64_t v31 = v50;
LABEL_24:
        long long v51 = 0;
        uint64_t v29 = v48;
        return v30(v31, v51, 1, v29);
      }
      uint64_t v38 = v84;
    }
    swift_bridgeObjectRelease();
    if (v71)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_getTupleTypeMetadata2();
      long long v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
      uint64_t v31 = v65;
      goto LABEL_21;
    }
    uint64_t v52 = v66;
    *(void *)&uint64_t v87 = v66;
    uint64_t v53 = v69;
    sub_1C151F12C();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48))(v53, 1, i);
    if (result != 1)
    {
      uint64_t v55 = TupleTypeMetadata2;
      uint64_t v56 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v85 = *v80;
      uint64_t v57 = v63;
      ((void (*)(char *, char *, uint64_t))v85)(v63, v53, i);
      *(void *)&v86[0] = v52;
      uint64_t v89 = 1;
      sub_1C06426D4(0, &qword_1EA19CBD8, MEMORY[0x1E4FBBC28]);
      swift_getWitnessTable();
      uint64_t v58 = i;
      swift_getWitnessTable();
      sub_1C151E5AC();
      swift_bridgeObjectRelease();
      v86[0] = v87;
      v86[1] = v88;
      sub_1C151FF4C();
      swift_getWitnessTable();
      *(void *)&v57[v56] = sub_1C151ED7C();
      uint64_t v59 = *(void *)&v57[*(int *)(v55 + 48)];
      uint64_t v48 = swift_getTupleTypeMetadata2();
      uint64_t v60 = *(int *)(v48 + 48);
      uint64_t v61 = v65;
      ((void (*)(uint64_t, char *, uint64_t))v85)(v65, v57, v58);
      *(void *)(v61 + v60) = v59;
      long long v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);
      uint64_t v31 = v61;
      goto LABEL_24;
    }
    __break(1u);
  }
  return result;
}

BOOL sub_1C062C344(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C151811C();
  LOBYTE(a2) = sub_1BFF896B4(v3, v4, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t sub_1C062C3A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char **a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, char *a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  sub_1C151ED5C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_1C151FD8C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v27 = a2 | 0x1000;
  uint64_t v25 = 0;
  char v26 = 1;
  sub_1C062BA74(a1, &v27, a3, &v25, a4, a5, v23, (uint64_t)&v22 - v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v17 = *(void *)(a5 - 8);
    uint64_t v18 = 1;
    uint64_t v19 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(a5 - 8);
    uint64_t v20 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24, v16, a5);
    uint64_t v18 = 0;
    uint64_t v19 = v20;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v19, v18, 1, a5);
}

uint64_t sub_1C062C600@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char **a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, char *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, char a9)
{
  char v26 = a6;
  uint64_t v27 = a8;
  int v25 = a4;
  uint64_t v24 = a3;
  sub_1C151ED5C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_1C151FD8C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v30 = a2;
  uint64_t v28 = a7;
  char v29 = a9;
  sub_1C062BA74(a1, &v30, v24, &v28, v25, a5, v26, (uint64_t)&v23 - v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v17, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v18 = *(void *)(a5 - 8);
    uint64_t v19 = 1;
    uint64_t v20 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(a5 - 8);
    uint64_t v21 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v17, a5);
    uint64_t v19 = 0;
    uint64_t v20 = v21;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v20, v19, 1, a5);
}

BOOL sub_1C062C85C()
{
  return (sub_1C151EA2C() & 1) == 0;
}

uint64_t sub_1C062C8FC()
{
  uint64_t v0 = sub_1C151811C();
  uint64_t v2 = v1;
  if (v0 == sub_1C151811C() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C062C9B8@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v9 = sub_1C062CB28(a3, a4, v6, a1);
  uint64_t v11 = v10;
  sub_1BFC66384((uint64_t)a1, (uint64_t)v28);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C151811C();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v6 + 96);
  if (*(void *)(v15 + 16))
  {
    uint64_t v16 = v12;
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_1BFEF2D8C(v16, v14);
    if (v18)
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v15 + 56) + 48 * v17);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      uint64_t v24 = v19[4];
      uint64_t v25 = v19[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_1BFC773DC(v28, a5);
  *(void *)(a5 + 40) = v9;
  *(void *)(a5 + 48) = v11;
  *(void *)(a5 + 56) = v21;
  *(void *)(a5 + 64) = v20;
  *(void *)(a5 + 72) = v22;
  *(void *)(a5 + 80) = v23;
  *(void *)(a5 + 88) = v24;
  *(void *)(a5 + 96) = v25;
  *(unsigned char *)(a5 + 104) = a2 & 1;
  return result;
}

uint64_t sub_1C062CB28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a2)
  {
    __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    uint64_t v6 = sub_1C151811C();
    uint64_t v8 = sub_1C062CEF8(a1, a2, v6, v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1C151811C();
    sub_1C062D08C(a1, a2, v9, v10);
  }
  else
  {
    uint64_t v11 = *(void *)(a3 + 80);
    uint64_t v34 = *(void *)(v11 + 16);
    if (!v34) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v37 = v11 + 32;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    do
    {
      uint64_t v38 = v12;
      uint64_t v13 = (uint64_t *)(v37 + (v12 << 6));
      uint64_t v14 = v13[1];
      uint64_t v35 = *v13;
      uint64_t v15 = v13[2];
      __swift_project_boxed_opaque_existential_1(a4, a4[3]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C151811C();
      uint64_t v18 = v17;
      if (*(void *)(v15 + 16))
      {
        uint64_t v19 = v16;
        sub_1C1520DBC();
        sub_1C151E77C();
        uint64_t v20 = sub_1C1520E0C();
        uint64_t v21 = -1 << *(unsigned char *)(v15 + 32);
        unint64_t v22 = v20 & ~v21;
        if ((*(void *)(v15 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
        {
          uint64_t v23 = *(void *)(v15 + 48);
          uint64_t v24 = (void *)(v23 + 16 * v22);
          BOOL v25 = *v24 == v19 && v24[1] == v18;
          if (v25 || (sub_1C1520A9C() & 1) != 0)
          {
LABEL_20:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            uint64_t v29 = sub_1C151811C();
            uint64_t v8 = sub_1C062CEF8(v35, v14, v29, v30);
            swift_bridgeObjectRelease();
            uint64_t v31 = sub_1C151811C();
            sub_1C062D08C(v35, v14, v31, v32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_21;
          }
          uint64_t v26 = ~v21;
          while (1)
          {
            unint64_t v22 = (v22 + 1) & v26;
            if (((*(void *)(v15 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
              break;
            }
            uint64_t v27 = (void *)(v23 + 16 * v22);
            BOOL v28 = *v27 == v19 && v27[1] == v18;
            if (v28 || (sub_1C1520A9C() & 1) != 0) {
              goto LABEL_20;
            }
          }
        }
      }
      uint64_t v12 = v38 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v38 + 1 != v34);
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C062CEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)(v4 + 72);
  if (!*(void *)(v5 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1BFEF2D8C(a1, a2);
  if ((v11 & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(void *)(*(void *)(v5 + 56) + (v10 << 6) + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v12 + 16))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1BFEF2D8C(a3, a4);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C062D08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = *(void *)(v4 + 72);
  if (!*(void *)(v5 + 16)) {
    return MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1BFEF2D8C(a1, a2);
  if ((v11 & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v12 = *(void *)(*(void *)(v5 + 56) + (v10 << 6) + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v12 + 16))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1BFEF2D8C(a3, a4);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

BOOL sub_1C062D220()
{
  uint64_t v1 = v0[4];
  (*(void (**)(uint64_t *__return_ptr, void))(v0[3] + 24))(&v3, v0[2]);
  return (v1 & ~v3) == 0;
}

BOOL sub_1C062D280()
{
  return sub_1C062B91C();
}

BOOL sub_1C062D2A4()
{
  uint64_t v1 = v0[6];
  (*(void (**)(uint64_t *__return_ptr, void))(v0[4] + 24))(&v3, v0[2]);
  return (v1 & ~v3) == 0;
}

uint64_t sub_1C062D308(void *a1)
{
  return sub_1C062B34C(a1) & 1;
}

uint64_t sub_1C062D32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v41)(uint64_t *__return_ptr, char *, void *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;

  uint64_t v38 = a1;
  sub_1BFEA5440(0, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  unint64_t v46 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v47 = (uint64_t)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v40 = (void *)((char *)v36 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v39 = (void *)((char *)v36 - v18);
  uint64_t v19 = swift_allocObject();
  int v41 = a5;
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v37 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v36[1] = v19;
    v36[2] = v6;
    uint64_t v20 = *(void *)(v13 + 72);
    uint64_t v42 = a6;
    swift_retain();
    uint64_t v21 = v20 * (a3 - 1);
    long long v43 = v20;
    long long v50 = v20 * a3;
    uint64_t v49 = a4;
    while (2)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v38;
      uint64_t v44 = v21;
      long long v45 = a3;
      do
      {
        uint64_t v24 = *v49;
        uint64_t v48 = v50 + v22;
        BOOL v25 = v39;
        sub_1BFEA5300(v50 + v22 + v24, (uint64_t)v39, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v26 = v21 + v22 + v24;
        uint64_t v27 = v40;
        sub_1BFEA5300(v26, (uint64_t)v40, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v28 = sub_1C002EE00(*v25, (uint64_t)v25 + *(int *)(v46 + 48), *v27, (uint64_t)v27 + *(int *)(v46 + 48), v41, v42, &qword_1EB87A098, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
        uint64_t v29 = (uint64_t)v27;
        uint64_t v21 = v44;
        sub_1BFEA5370(v29, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void))sub_1BFEA5440);
        uint64_t v30 = (uint64_t)v25;
        uint64_t v31 = v49;
        uint64_t v32 = v45;
        sub_1BFEA5370(v30, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void))sub_1BFEA5440);
        if ((v28 & 1) == 0) {
          break;
        }
        uint64_t v33 = *v31;
        if (!*v31)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v34 = v33 + v21 + v22;
        sub_1C002DA70(v33 + v50 + v22, v47, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C002DA70(v47, v34, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
        v22 -= v43;
        ++v23;
      }
      while (v32 != v23);
      a3 = v32 + 1;
      v21 += v43;
      v50 += v43;
      if (a3 != v37) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062D70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v41)(uint64_t *__return_ptr, char *, void *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;

  uint64_t v38 = a1;
  sub_1BFEA5440(0, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  unint64_t v46 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v47 = (uint64_t)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v40 = (void *)((char *)v36 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v39 = (void *)((char *)v36 - v18);
  uint64_t v19 = swift_allocObject();
  int v41 = a5;
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v37 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v36[1] = v19;
    v36[2] = v6;
    uint64_t v20 = *(void *)(v13 + 72);
    uint64_t v42 = a6;
    swift_retain();
    uint64_t v21 = v20 * (a3 - 1);
    long long v43 = v20;
    long long v50 = v20 * a3;
    uint64_t v49 = a4;
    while (2)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v38;
      uint64_t v44 = v21;
      long long v45 = a3;
      do
      {
        uint64_t v24 = *v49;
        uint64_t v48 = v50 + v22;
        BOOL v25 = v39;
        sub_1BFEA5300(v50 + v22 + v24, (uint64_t)v39, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v26 = v21 + v22 + v24;
        uint64_t v27 = v40;
        sub_1BFEA5300(v26, (uint64_t)v40, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v28 = sub_1C002EE00(*v25, (uint64_t)v25 + *(int *)(v46 + 48), *v27, (uint64_t)v27 + *(int *)(v46 + 48), v41, v42, (unint64_t *)&unk_1EB85EF60, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
        uint64_t v29 = (uint64_t)v27;
        uint64_t v21 = v44;
        sub_1BFEA5370(v29, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1BFEA5440);
        uint64_t v30 = (uint64_t)v25;
        uint64_t v31 = v49;
        uint64_t v32 = v45;
        sub_1BFEA5370(v30, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1BFEA5440);
        if ((v28 & 1) == 0) {
          break;
        }
        uint64_t v33 = *v31;
        if (!*v31)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v34 = v33 + v21 + v22;
        sub_1C002DA70(v33 + v50 + v22, v47, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C002DA70(v47, v34, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
        v22 -= v43;
        ++v23;
      }
      while (v32 != v23);
      a3 = v32 + 1;
      v21 += v43;
      v50 += v43;
      if (a3 != v37) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062DAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v41)(uint64_t *__return_ptr, char *, void *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;

  uint64_t v38 = a1;
  sub_1BFEA5440(0, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  unint64_t v46 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v47 = (uint64_t)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v40 = (void *)((char *)v36 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v39 = (void *)((char *)v36 - v18);
  uint64_t v19 = swift_allocObject();
  int v41 = a5;
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v37 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v36[1] = v19;
    v36[2] = v6;
    uint64_t v20 = *(void *)(v13 + 72);
    uint64_t v42 = a6;
    swift_retain();
    uint64_t v21 = v20 * (a3 - 1);
    long long v43 = v20;
    long long v50 = v20 * a3;
    uint64_t v49 = a4;
    while (2)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v38;
      uint64_t v44 = v21;
      long long v45 = a3;
      do
      {
        uint64_t v24 = *v49;
        uint64_t v48 = v50 + v22;
        BOOL v25 = v39;
        sub_1BFEA5300(v50 + v22 + v24, (uint64_t)v39, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v26 = v21 + v22 + v24;
        uint64_t v27 = v40;
        sub_1BFEA5300(v26, (uint64_t)v40, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v28 = sub_1C002EE00(*v25, (uint64_t)v25 + *(int *)(v46 + 48), *v27, (uint64_t)v27 + *(int *)(v46 + 48), v41, v42, (unint64_t *)&unk_1EA1A8B30, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
        uint64_t v29 = (uint64_t)v27;
        uint64_t v21 = v44;
        sub_1BFEA5370(v29, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1BFEA5440);
        uint64_t v30 = (uint64_t)v25;
        uint64_t v31 = v49;
        uint64_t v32 = v45;
        sub_1BFEA5370(v30, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1BFEA5440);
        if ((v28 & 1) == 0) {
          break;
        }
        uint64_t v33 = *v31;
        if (!*v31)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v34 = v33 + v21 + v22;
        sub_1C002DA70(v33 + v50 + v22, v47, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C002DA70(v47, v34, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
        v22 -= v43;
        ++v23;
      }
      while (v32 != v23);
      a3 = v32 + 1;
      v21 += v43;
      v50 += v43;
      if (a3 != v37) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062DECC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  uint64_t v24 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v43 = a6;
    swift_retain();
    uint64_t v12 = 216 * a3;
    while (2)
    {
      uint64_t v13 = a1;
      uint64_t v26 = v12;
      do
      {
        uint64_t v14 = *a4 + v12;
        sub_1BFEA5300(v14, (uint64_t)&v29, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300(v14 - 216, (uint64_t)&v27, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        char v15 = sub_1C0627048(v29, (uint64_t)&v29 + 8, v27, (uint64_t)&v28, a5);
        sub_1BFEA5370((uint64_t)&v27, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)&v29, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C064267C);
        if ((v15 & 1) == 0) {
          break;
        }
        if (!*a4)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v16 = *a4 + v12;
        long long v39 = *(_OWORD *)(v16 + 160);
        long long v40 = *(_OWORD *)(v16 + 176);
        long long v41 = *(_OWORD *)(v16 + 192);
        uint64_t v42 = *(void *)(v16 + 208);
        long long v35 = *(_OWORD *)(v16 + 96);
        long long v36 = *(_OWORD *)(v16 + 112);
        long long v37 = *(_OWORD *)(v16 + 128);
        long long v38 = *(_OWORD *)(v16 + 144);
        long long v31 = *(_OWORD *)(v16 + 32);
        long long v32 = *(_OWORD *)(v16 + 48);
        long long v33 = *(_OWORD *)(v16 + 64);
        long long v34 = *(_OWORD *)(v16 + 80);
        long long v29 = *(_OWORD *)v16;
        long long v30 = *(_OWORD *)(v16 + 16);
        long long v17 = *(_OWORD *)(v16 - 40);
        *(_OWORD *)(v16 + 160) = *(_OWORD *)(v16 - 56);
        *(_OWORD *)(v16 + 176) = v17;
        *(_OWORD *)(v16 + 192) = *(_OWORD *)(v16 - 24);
        *(void *)(v16 + 208) = *(void *)(v16 - 8);
        long long v18 = *(_OWORD *)(v16 - 104);
        *(_OWORD *)(v16 + 96) = *(_OWORD *)(v16 - 120);
        *(_OWORD *)(v16 + 112) = v18;
        long long v19 = *(_OWORD *)(v16 - 72);
        *(_OWORD *)(v16 + 128) = *(_OWORD *)(v16 - 88);
        *(_OWORD *)(v16 + 144) = v19;
        long long v20 = *(_OWORD *)(v16 - 168);
        *(_OWORD *)(v16 + 32) = *(_OWORD *)(v16 - 184);
        *(_OWORD *)(v16 + 48) = v20;
        long long v21 = *(_OWORD *)(v16 - 136);
        *(_OWORD *)(v16 + 64) = *(_OWORD *)(v16 - 152);
        *(_OWORD *)(v16 + 80) = v21;
        long long v22 = *(_OWORD *)(v16 - 200);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)(v16 - 216);
        *(_OWORD *)(v16 + 16) = v22;
        *(_OWORD *)(v16 - 56) = v39;
        *(_OWORD *)(v16 - 40) = v40;
        *(_OWORD *)(v16 - 24) = v41;
        *(void *)(v16 - 8) = v42;
        *(_OWORD *)(v16 - 120) = v35;
        *(_OWORD *)(v16 - 104) = v36;
        *(_OWORD *)(v16 - 88) = v37;
        *(_OWORD *)(v16 - 72) = v38;
        *(_OWORD *)(v16 - 184) = v31;
        *(_OWORD *)(v16 - 168) = v32;
        *(_OWORD *)(v16 - 152) = v33;
        *(_OWORD *)(v16 - 136) = v34;
        *(_OWORD *)(v16 - 216) = v29;
        *(_OWORD *)(v16 - 200) = v30;
        v12 -= 216;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      uint64_t v12 = v26 + 216;
      if (a3 != v24) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062E1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v41)(uint64_t *__return_ptr, char *, void *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;

  uint64_t v38 = a1;
  sub_1BFEA5440(0, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  unint64_t v46 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v47 = (uint64_t)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v40 = (void *)((char *)v36 - v16);
  MEMORY[0x1F4188790](v17);
  long long v39 = (void *)((char *)v36 - v18);
  uint64_t v19 = swift_allocObject();
  long long v41 = a5;
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v37 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v36[1] = v19;
    v36[2] = v6;
    uint64_t v20 = *(void *)(v13 + 72);
    uint64_t v42 = a6;
    swift_retain();
    uint64_t v21 = v20 * (a3 - 1);
    uint64_t v43 = v20;
    long long v50 = v20 * a3;
    uint64_t v49 = a4;
    while (2)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v38;
      uint64_t v44 = v21;
      long long v45 = a3;
      do
      {
        uint64_t v24 = *v49;
        uint64_t v48 = v50 + v22;
        BOOL v25 = v39;
        sub_1BFEA5300(v50 + v22 + v24, (uint64_t)v39, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v26 = v21 + v22 + v24;
        uint64_t v27 = v40;
        sub_1BFEA5300(v26, (uint64_t)v40, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v28 = sub_1C002EE00(*v25, (uint64_t)v25 + *(int *)(v46 + 48), *v27, (uint64_t)v27 + *(int *)(v46 + 48), v41, v42, &qword_1EB85C520, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        uint64_t v29 = (uint64_t)v27;
        uint64_t v21 = v44;
        sub_1BFEA5370(v29, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1BFEA5440);
        uint64_t v30 = (uint64_t)v25;
        long long v31 = v49;
        uint64_t v32 = v45;
        sub_1BFEA5370(v30, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1BFEA5440);
        if ((v28 & 1) == 0) {
          break;
        }
        uint64_t v33 = *v31;
        if (!*v31)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v34 = v33 + v21 + v22;
        sub_1C002DA70(v33 + v50 + v22, v47, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C002DA70(v47, v34, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        v22 -= v43;
        ++v23;
      }
      while (v32 != v23);
      a3 = v32 + 1;
      v21 += v43;
      v50 += v43;
      if (a3 != v37) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062E5D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v26)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v27;
  uint64_t v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  _OWORD v37[3];
  uint64_t v38;

  uint64_t v11 = swift_allocObject();
  uint64_t v26 = a5;
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  uint64_t v23 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v38 = a6;
    swift_retain();
    uint64_t v12 = 160 * a3;
    while (2)
    {
      uint64_t v13 = a1;
      uint64_t v25 = v12;
      do
      {
        uint64_t v14 = *a4 + v12;
        sub_1BFEA5300(v14, (uint64_t)&v29, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300(v14 - 160, (uint64_t)&v27, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        char v15 = sub_1C062711C(v29, (uint64_t)&v29 + 8, v27, (uint64_t)&v28, v26);
        sub_1BFEA5370((uint64_t)&v27, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)&v29, (uint64_t)&qword_1EB86B3F0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1C064267C);
        if ((v15 & 1) == 0) {
          break;
        }
        if (!*a4)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v16 = (long long *)(*a4 + v12);
        long long v35 = v16[6];
        long long v36 = v16[7];
        v37[0] = v16[8];
        *(_OWORD *)((char *)v37 + 9) = *(long long *)((char *)v16 + 137);
        long long v31 = v16[2];
        uint64_t v32 = v16[3];
        uint64_t v33 = v16[4];
        uint64_t v34 = v16[5];
        uint64_t v29 = *v16;
        uint64_t v30 = v16[1];
        long long v17 = *(v16 - 3);
        long long v16[6] = *(v16 - 4);
        v16[7] = v17;
        long long v18 = *(v16 - 1);
        unsigned char v16[8] = *(v16 - 2);
        v16[9] = v18;
        long long v19 = *(v16 - 7);
        v16[2] = *(v16 - 8);
        uint64_t v16[3] = v19;
        long long v20 = *(v16 - 5);
        v16[4] = *(v16 - 6);
        v16[5] = v20;
        long long v21 = *(v16 - 9);
        long long *v16 = *(v16 - 10);
        v16[1] = v21;
        *(v16 - 4) = v35;
        *(v16 - 3) = v36;
        *(v16 - 2) = v37[0];
        *(long long *)((char *)v16 - 23) = *(_OWORD *)((char *)v37 + 9);
        *(v16 - 8) = v31;
        *(v16 - 7) = v32;
        *(v16 - 6) = v33;
        *(v16 - 5) = v34;
        *(v16 - 10) = v29;
        *(v16 - 9) = v30;
        v12 -= 160;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      uint64_t v12 = v25 + 160;
      if (a3 != v23) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062E88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v41)(uint64_t *__return_ptr, char *, void *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;

  uint64_t v38 = a1;
  sub_1BFEA5440(0, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  unint64_t v46 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v47 = (uint64_t)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v40 = (void *)((char *)v36 - v16);
  MEMORY[0x1F4188790](v17);
  long long v39 = (void *)((char *)v36 - v18);
  uint64_t v19 = swift_allocObject();
  long long v41 = a5;
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v37 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v36[1] = v19;
    v36[2] = v6;
    uint64_t v20 = *(void *)(v13 + 72);
    uint64_t v42 = a6;
    swift_retain();
    uint64_t v21 = v20 * (a3 - 1);
    uint64_t v43 = v20;
    long long v50 = v20 * a3;
    uint64_t v49 = a4;
    while (2)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v38;
      uint64_t v44 = v21;
      long long v45 = a3;
      do
      {
        uint64_t v24 = *v49;
        uint64_t v48 = v50 + v22;
        uint64_t v25 = v39;
        sub_1BFEA5300(v50 + v22 + v24, (uint64_t)v39, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v26 = v21 + v22 + v24;
        uint64_t v27 = v40;
        sub_1BFEA5300(v26, (uint64_t)v40, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v28 = sub_1C002EE00(*v25, (uint64_t)v25 + *(int *)(v46 + 48), *v27, (uint64_t)v27 + *(int *)(v46 + 48), v41, v42, &qword_1EA19CBB0, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
        uint64_t v29 = (uint64_t)v27;
        uint64_t v21 = v44;
        sub_1BFEA5370(v29, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))sub_1BFEA5440);
        uint64_t v30 = (uint64_t)v25;
        long long v31 = v49;
        uint64_t v32 = v45;
        sub_1BFEA5370(v30, (uint64_t)&qword_1EB860D18, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))sub_1BFEA5440);
        if ((v28 & 1) == 0) {
          break;
        }
        uint64_t v33 = *v31;
        if (!*v31)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v34 = v33 + v21 + v22;
        sub_1C002DA70(v33 + v50 + v22, v47, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C002DA70(v47, v34, &qword_1EB860D18, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
        v22 -= v43;
        ++v23;
      }
      while (v32 != v23);
      a3 = v32 + 1;
      v21 += v43;
      v50 += v43;
      if (a3 != v37) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062EC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v23)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v24;
  uint64_t v25;
  uint64_t __dst[40];

  uint64_t v11 = swift_allocObject();
  uint64_t v23 = a5;
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  uint64_t v20 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    __dst[39] = a6;
    swift_retain();
    uint64_t v12 = 296 * a3;
    while (2)
    {
      uint64_t v13 = a1;
      uint64_t v22 = v12;
      do
      {
        uint64_t v14 = *a4 + v12;
        sub_1BFEA5300(v14, (uint64_t)__dst, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300(v14 - 296, (uint64_t)&v24, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        char v15 = sub_1C06271F0(__dst[0], (uint64_t)&__dst[1], v24, (uint64_t)&v25, v23);
        sub_1BFEA5370((uint64_t)&v24, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)__dst, (uint64_t)&qword_1EA19C508, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(void))sub_1C064267C);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v16 = *a4;
        if (!*a4)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v17 = (void *)(v16 + v12);
        uint64_t v18 = (void *)(v16 + v12 - 296);
        memcpy(__dst, (const void *)(v16 + v12), 0x122uLL);
        memcpy(v17, v18, 0x128uLL);
        memcpy(v18, __dst, 0x122uLL);
        v12 -= 296;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      uint64_t v12 = v22 + 296;
      if (a3 != v20) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062EE90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v26)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v27;
  uint64_t v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  uint64_t v39;

  uint64_t v11 = swift_allocObject();
  uint64_t v26 = a5;
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  uint64_t v23 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    long long v39 = a6;
    swift_retain();
    uint64_t v12 = 160 * a3;
    while (2)
    {
      uint64_t v13 = a1;
      uint64_t v25 = v12;
      do
      {
        uint64_t v14 = *a4 + v12;
        sub_1BFEA5300(v14, (uint64_t)&v29, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300(v14 - 160, (uint64_t)&v27, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        char v15 = sub_1C06272C4(v29, (uint64_t)&v29 + 8, v27, (uint64_t)&v28, v26);
        sub_1BFEA5370((uint64_t)&v27, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)&v29, (uint64_t)&unk_1EA19C4C8, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(void))sub_1C064267C);
        if ((v15 & 1) == 0) {
          break;
        }
        if (!*a4)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v16 = (long long *)(*a4 + v12);
        long long v35 = v16[6];
        long long v36 = v16[7];
        uint64_t v37 = v16[8];
        uint64_t v38 = v16[9];
        long long v31 = v16[2];
        uint64_t v32 = v16[3];
        uint64_t v33 = v16[4];
        uint64_t v34 = v16[5];
        uint64_t v29 = *v16;
        uint64_t v30 = v16[1];
        long long v17 = *(v16 - 3);
        long long v16[6] = *(v16 - 4);
        v16[7] = v17;
        long long v18 = *(v16 - 1);
        unsigned char v16[8] = *(v16 - 2);
        v16[9] = v18;
        long long v19 = *(v16 - 7);
        v16[2] = *(v16 - 8);
        uint64_t v16[3] = v19;
        long long v20 = *(v16 - 5);
        v16[4] = *(v16 - 6);
        v16[5] = v20;
        long long v21 = *(v16 - 9);
        long long *v16 = *(v16 - 10);
        v16[1] = v21;
        *(v16 - 4) = v35;
        *(v16 - 3) = v36;
        *(v16 - 2) = v37;
        *(v16 - 1) = v38;
        *(v16 - 8) = v31;
        *(v16 - 7) = v32;
        *(v16 - 6) = v33;
        *(v16 - 5) = v34;
        *(v16 - 10) = v29;
        *(v16 - 9) = v30;
        v12 -= 160;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      uint64_t v12 = v25 + 160;
      if (a3 != v23) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C062F148(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v39)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v40;
  unsigned char v41[40];
  uint64_t v42;
  unsigned char v43[40];
  char *v44;
  char *v45;
  char *v46;

  uint64_t v12 = swift_allocObject();
  long long v39 = a5;
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  uint64_t v13 = a2 - a1;
  uint64_t v14 = (a2 - a1) / 48;
  unint64_t v15 = a3;
  uint64_t v16 = a3 - (void)a2;
  uint64_t v17 = (uint64_t)(a3 - (void)a2) / 48;
  unint64_t v46 = a1;
  long long v45 = a4;
  if (v14 >= v17)
  {
    if (v16 >= -47)
    {
      uint64_t v38 = a1;
      if (a4 != a2 || &a2[48 * v17] <= a4) {
        memmove(a4, a2, 48 * v17);
      }
      swift_retain();
      uint64_t v27 = &a4[48 * v17];
      uint64_t v44 = v27;
      unint64_t v46 = a2;
      if (v16 >= 48 && a1 < a2)
      {
        char v28 = (char *)(v15 - 48);
        while (1)
        {
          long long v31 = v28 + 48;
          sub_1BFEA5300((uint64_t)(v27 - 48), (uint64_t)&v42, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          uint64_t v32 = a2 - 48;
          sub_1BFEA5300((uint64_t)(a2 - 48), (uint64_t)&v40, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          char v33 = sub_1BFEA6554(v42, (uint64_t)v43, v40, (uint64_t)v41, v39);
          sub_1BFEA5370((uint64_t)&v40, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5440);
          sub_1BFEA5370((uint64_t)&v42, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5440);
          if (v33)
          {
            if (v31 != a2 || v28 >= a2)
            {
              long long v29 = *(_OWORD *)v32;
              long long v30 = *((_OWORD *)a2 - 1);
              *((_OWORD *)v28 + 1) = *((_OWORD *)a2 - 2);
              *((_OWORD *)v28 + 2) = v30;
              *(_OWORD *)char v28 = v29;
            }
            v46 -= 48;
            uint64_t v27 = v44;
            if (v44 <= a4) {
              goto LABEL_40;
            }
          }
          else
          {
            unint64_t v34 = (unint64_t)v44;
            uint64_t v27 = v44 - 48;
            v44 -= 48;
            if ((unint64_t)v31 < v34 || (unint64_t)v28 >= v34 || v31 != (char *)v34)
            {
              long long v35 = *(_OWORD *)v27;
              long long v36 = *(_OWORD *)(v34 - 16);
              *((_OWORD *)v28 + 1) = *(_OWORD *)(v34 - 32);
              *((_OWORD *)v28 + 2) = v36;
              *(_OWORD *)char v28 = v35;
            }
            uint64_t v32 = a2;
            if (v27 <= a4) {
              goto LABEL_40;
            }
          }
          v28 -= 48;
          a2 = v32;
          if (v32 <= v38) {
            goto LABEL_40;
          }
        }
      }
      goto LABEL_40;
    }
  }
  else if (v13 >= -47)
  {
    if (a4 != a1 || &a1[48 * v14] <= a4) {
      memmove(a4, a1, 48 * v14);
    }
    swift_retain();
    unint64_t v18 = (unint64_t)&a4[48 * v14];
    uint64_t v44 = (char *)v18;
    if (v13 >= 48 && (unint64_t)a2 < v15)
    {
      do
      {
        sub_1BFEA5300((uint64_t)a2, (uint64_t)&v42, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        sub_1BFEA5300((uint64_t)a4, (uint64_t)&v40, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v19 = sub_1BFEA6554(v42, (uint64_t)v43, v40, (uint64_t)v41, v39);
        sub_1BFEA5370((uint64_t)&v40, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)&v42, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5440);
        long long v20 = v46;
        if (v19)
        {
          unint64_t v21 = (unint64_t)(a2 + 48);
          if (v46 >= a2 && (unint64_t)v46 < v21 && v46 == a2)
          {
            long long v20 = a2;
          }
          else
          {
            long long v22 = *(_OWORD *)a2;
            long long v23 = *((_OWORD *)a2 + 2);
            *((_OWORD *)v46 + 1) = *((_OWORD *)a2 + 1);
            *((_OWORD *)v20 + 2) = v23;
            *(_OWORD *)long long v20 = v22;
          }
        }
        else
        {
          uint64_t v24 = v45 + 48;
          if (v46 != v45 || v46 >= v24)
          {
            long long v25 = *(_OWORD *)v45;
            long long v26 = *((_OWORD *)v45 + 2);
            *((_OWORD *)v46 + 1) = *((_OWORD *)v45 + 1);
            *((_OWORD *)v20 + 2) = v26;
            *(_OWORD *)long long v20 = v25;
          }
          long long v45 = v24;
          unint64_t v21 = (unint64_t)a2;
        }
        unint64_t v46 = v20 + 48;
        a4 = v45;
        if ((unint64_t)v45 >= v18) {
          break;
        }
        a2 = (char *)v21;
      }
      while (v21 < v15);
    }
LABEL_40:
    sub_1C063532C((void **)&v46, (const void **)&v45, &v44);
    swift_release();
    swift_release();
    return 1;
  }
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C062F604(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v54)(uint64_t *__return_ptr, char *, void *);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  sub_1BFEA5440(0, &qword_1EB87A070, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v56 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v53 = (void *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (void *)((char *)v47 - v16);
  uint64_t v18 = swift_allocObject();
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(v13 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  int64_t v20 = a2 - a1;
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_63;
  }
  uint64_t v23 = v20 / v19;
  uint64_t v59 = a1;
  uint64_t v58 = a4;
  uint64_t v24 = v22 / v19;
  v47[1] = v18;
  if (v20 / v19 >= v22 / v19)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v19;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_retain();
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        swift_retain();
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v50 = a4;
      unint64_t v34 = a4 + v26;
      uint64_t v57 = a4 + v26;
      uint64_t v59 = a2;
      if (v26 >= 1 && v21 < a2)
      {
        uint64_t v36 = -v19;
        uint64_t v51 = v36;
        unint64_t v48 = v21;
        do
        {
          unint64_t v52 = a3 + v36;
          sub_1BFEA5300(v34 + v36, (uint64_t)v17, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          unint64_t v37 = a2 + v36;
          uint64_t v38 = a2 + v36;
          unint64_t v39 = a3;
          long long v40 = v17;
          long long v41 = v53;
          sub_1BFEA5300(v38, (uint64_t)v53, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          char v42 = sub_1C002EE00(*v40, (uint64_t)v40 + *(int *)(v56 + 48), *v41, (uint64_t)v41 + *(int *)(v56 + 48), v54, v55, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline, type metadata accessor for FeedHeadline);
          uint64_t v43 = (uint64_t)v41;
          uint64_t v17 = v40;
          sub_1BFEA5370(v43, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void))sub_1BFEA5440);
          sub_1BFEA5370((uint64_t)v40, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void))sub_1BFEA5440);
          if (v42)
          {
            a3 = v52;
            if (v39 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v48;
            }
            else
            {
              unint64_t v44 = v48;
              if (v39 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v36 = v51;
            v59 += v51;
          }
          else
          {
            unint64_t v45 = v57;
            a3 = v52;
            v57 += v51;
            if (v39 < v45 || v52 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v39 != v45)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
            unint64_t v44 = v48;
            uint64_t v36 = v51;
          }
          unint64_t v34 = v57;
          if (v57 <= v50) {
            break;
          }
          a2 = v37;
        }
        while (v37 > v44);
      }
      goto LABEL_60;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v19;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_retain();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      swift_retain();
      if (a4 != v21) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v52 = a4 + v25;
    uint64_t v57 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v28 = a4;
      unint64_t v49 = a3;
      do
      {
        sub_1BFEA5300(a2, (uint64_t)v17, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        long long v29 = v53;
        sub_1BFEA5300(v28, (uint64_t)v53, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v30 = sub_1C002EE00(*v17, (uint64_t)v17 + *(int *)(v56 + 48), *v29, (uint64_t)v29 + *(int *)(v56 + 48), v54, v55, (unint64_t *)&unk_1EB87A0A0, (void (*)(uint64_t))type metadata accessor for FeedHeadline, type metadata accessor for FeedHeadline);
        sub_1BFEA5370((uint64_t)v29, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)v17, (uint64_t)&qword_1EB87A070, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void))sub_1BFEA5440);
        unint64_t v31 = v59;
        if (v30)
        {
          unint64_t v32 = a2 + v19;
          if (v59 < a2 || v59 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v33 = v58 + v19;
          if (v59 < v58 || v59 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v58 = v33;
          unint64_t v32 = a2;
        }
        uint64_t v59 = v31 + v19;
        if (v58 >= v52) {
          break;
        }
        uint64_t v28 = v58;
        a2 = v32;
      }
      while (v32 < v49);
    }
LABEL_60:
    sub_1C06354B4(&v59, &v58, (uint64_t *)&v57, &qword_1EB87A070, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_64:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C062FCE8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v54)(uint64_t *__return_ptr, char *, void *);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  sub_1BFEA5440(0, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  uint64_t v56 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v53 = (void *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (void *)((char *)v47 - v16);
  uint64_t v18 = swift_allocObject();
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(v13 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  int64_t v20 = a2 - a1;
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_63;
  }
  uint64_t v23 = v20 / v19;
  uint64_t v59 = a1;
  uint64_t v58 = a4;
  uint64_t v24 = v22 / v19;
  v47[1] = v18;
  if (v20 / v19 >= v22 / v19)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v19;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_retain();
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        swift_retain();
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v50 = a4;
      unint64_t v34 = a4 + v26;
      uint64_t v57 = a4 + v26;
      uint64_t v59 = a2;
      if (v26 >= 1 && v21 < a2)
      {
        uint64_t v36 = -v19;
        uint64_t v51 = v36;
        unint64_t v48 = v21;
        do
        {
          unint64_t v52 = a3 + v36;
          sub_1BFEA5300(v34 + v36, (uint64_t)v17, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          unint64_t v37 = a2 + v36;
          uint64_t v38 = a2 + v36;
          unint64_t v39 = a3;
          long long v40 = v17;
          long long v41 = v53;
          sub_1BFEA5300(v38, (uint64_t)v53, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          char v42 = sub_1C002EE00(*v40, (uint64_t)v40 + *(int *)(v56 + 48), *v41, (uint64_t)v41 + *(int *)(v56 + 48), v54, v55, &qword_1EB87A098, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
          uint64_t v43 = (uint64_t)v41;
          uint64_t v17 = v40;
          sub_1BFEA5370(v43, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void))sub_1BFEA5440);
          sub_1BFEA5370((uint64_t)v40, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void))sub_1BFEA5440);
          if (v42)
          {
            a3 = v52;
            if (v39 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v48;
            }
            else
            {
              unint64_t v44 = v48;
              if (v39 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v36 = v51;
            v59 += v51;
          }
          else
          {
            unint64_t v45 = v57;
            a3 = v52;
            v57 += v51;
            if (v39 < v45 || v52 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v39 != v45)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
            unint64_t v44 = v48;
            uint64_t v36 = v51;
          }
          unint64_t v34 = v57;
          if (v57 <= v50) {
            break;
          }
          a2 = v37;
        }
        while (v37 > v44);
      }
      goto LABEL_60;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v19;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_retain();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      swift_retain();
      if (a4 != v21) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v52 = a4 + v25;
    uint64_t v57 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v28 = a4;
      unint64_t v49 = a3;
      do
      {
        sub_1BFEA5300(a2, (uint64_t)v17, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        long long v29 = v53;
        sub_1BFEA5300(v28, (uint64_t)v53, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v30 = sub_1C002EE00(*v17, (uint64_t)v17 + *(int *)(v56 + 48), *v29, (uint64_t)v29 + *(int *)(v56 + 48), v54, v55, &qword_1EB87A098, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
        sub_1BFEA5370((uint64_t)v29, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)v17, (uint64_t)&qword_1EB87A058, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(void))sub_1BFEA5440);
        unint64_t v31 = v59;
        if (v30)
        {
          unint64_t v32 = a2 + v19;
          if (v59 < a2 || v59 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v33 = v58 + v19;
          if (v59 < v58 || v59 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v58 = v33;
          unint64_t v32 = a2;
        }
        uint64_t v59 = v31 + v19;
        if (v58 >= v52) {
          break;
        }
        uint64_t v28 = v58;
        a2 = v32;
      }
      while (v32 < v49);
    }
LABEL_60:
    sub_1C06354B4(&v59, &v58, (uint64_t *)&v57, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_64:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06303CC(char *__src, char *a2, char *a3, char *__dst, uint64_t (*a5)(uint64_t, char *, uint64_t, char *))
{
  long long v62 = __dst;
  uint64_t v7 = a3;
  uint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = (a2 - __src) / 152;
  uint64_t v12 = a3 - a2;
  uint64_t v13 = (a3 - a2) / 152;
  uint64_t v106 = __src;
  unint64_t v105 = __dst;
  if (v11 >= v13)
  {
    if (v12 < -151) {
      goto LABEL_48;
    }
    uint64_t v38 = 152 * v13;
    if (__dst != a2 || &a2[v38] <= __dst) {
      memmove(__dst, a2, 152 * v13);
    }
    unint64_t v39 = &__dst[v38];
    unint64_t v104 = v39;
    uint64_t v106 = v8;
    if (v9 >= v8 || v12 < 152) {
      goto LABEL_47;
    }
    while (1)
    {
      v7 -= 152;
      long long v40 = *(_OWORD *)(v39 - 136);
      long long v84 = *(_OWORD *)(v39 - 152);
      long long v85 = v40;
      long long v41 = *(_OWORD *)(v39 - 120);
      long long v42 = *(_OWORD *)(v39 - 104);
      long long v43 = *(_OWORD *)(v39 - 72);
      long long v88 = *(_OWORD *)(v39 - 88);
      long long v89 = v43;
      long long v86 = v41;
      long long v87 = v42;
      long long v44 = *(_OWORD *)(v39 - 56);
      long long v45 = *(_OWORD *)(v39 - 40);
      long long v46 = *(_OWORD *)(v39 - 24);
      char v93 = *(v39 - 8);
      long long v91 = v45;
      long long v92 = v46;
      long long v90 = v44;
      long long v47 = *(_OWORD *)(v8 - 136);
      long long v94 = *(_OWORD *)(v8 - 152);
      long long v95 = v47;
      long long v48 = *(_OWORD *)(v8 - 120);
      long long v49 = *(_OWORD *)(v8 - 104);
      long long v50 = *(_OWORD *)(v8 - 72);
      long long v98 = *(_OWORD *)(v8 - 88);
      long long v99 = v50;
      long long v96 = v48;
      long long v97 = v49;
      long long v51 = *(_OWORD *)(v8 - 56);
      long long v52 = *(_OWORD *)(v8 - 40);
      long long v53 = *(_OWORD *)(v8 - 24);
      char v103 = *(v8 - 8);
      long long v101 = v52;
      long long v102 = v53;
      long long v100 = v51;
      uint64_t v54 = v84;
      long long v80 = v90;
      long long v81 = v91;
      long long v82 = v92;
      char v83 = v93;
      long long v76 = v86;
      long long v77 = v87;
      long long v78 = v88;
      long long v79 = v89;
      long long v74 = v84;
      long long v75 = v85;
      uint64_t v55 = v94;
      long long v70 = v51;
      long long v71 = v52;
      long long v72 = v53;
      char v73 = v103;
      long long v66 = v96;
      long long v67 = v97;
      long long v68 = v98;
      long long v69 = v50;
      *((void *)&v64 + 1) = *((void *)&v94 + 1);
      long long v65 = v95;
      sub_1C063FEAC((uint64_t)&v84);
      sub_1C063FEAC((uint64_t)&v94);
      char v56 = a5(v54, (char *)&v74 + 8, v55, (char *)&v64 + 8);
      if (v5)
      {
        unint64_t v104 = v39;
        uint64_t v106 = v8;
LABEL_43:
        sub_1C063FF50((uint64_t)&v94);
        sub_1C063FF50((uint64_t)&v84);
        goto LABEL_47;
      }
      char v57 = v56;
      uint64_t v58 = v7 + 152;
      sub_1C063FF50((uint64_t)&v94);
      sub_1C063FF50((uint64_t)&v84);
      if (v57)
      {
        uint64_t v59 = v8 - 152;
        if (v58 != v8)
        {
          v8 -= 152;
LABEL_37:
          memmove(v7, v59, 0x98uLL);
          goto LABEL_38;
        }
        BOOL v60 = v7 >= v8;
        v8 -= 152;
        if (v60) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v59 = v39 - 152;
        if (v58 != v39)
        {
          v39 -= 152;
          goto LABEL_37;
        }
        BOOL v60 = v7 >= v39;
        v39 -= 152;
        if (v60) {
          goto LABEL_37;
        }
      }
LABEL_38:
      if (v39 <= v62 || v8 <= v9)
      {
        unint64_t v104 = v39;
        uint64_t v106 = v8;
        goto LABEL_47;
      }
    }
  }
  if (v10 < -151)
  {
LABEL_48:
    uint64_t result = sub_1C152052C();
    __break(1u);
    return result;
  }
  size_t v14 = 152 * v11;
  if (__dst != __src || &__src[v14] <= __dst) {
    memmove(__dst, __src, v14);
  }
  uint64_t v15 = &__dst[v14];
  unint64_t v104 = v15;
  if (v8 >= v7 || v10 < 152) {
    goto LABEL_47;
  }
  uint64_t v16 = v62;
  while (1)
  {
    long long v17 = *((_OWORD *)v8 + 1);
    long long v84 = *(_OWORD *)v8;
    long long v85 = v17;
    long long v18 = *((_OWORD *)v8 + 2);
    long long v19 = *((_OWORD *)v8 + 3);
    long long v20 = *((_OWORD *)v8 + 5);
    long long v88 = *((_OWORD *)v8 + 4);
    long long v89 = v20;
    long long v86 = v18;
    long long v87 = v19;
    long long v21 = *((_OWORD *)v8 + 6);
    long long v22 = *((_OWORD *)v8 + 7);
    long long v23 = *((_OWORD *)v8 + 8);
    char v93 = v8[144];
    long long v91 = v22;
    long long v92 = v23;
    long long v90 = v21;
    long long v24 = *((_OWORD *)v16 + 1);
    long long v94 = *(_OWORD *)v16;
    long long v95 = v24;
    long long v25 = *((_OWORD *)v16 + 2);
    long long v26 = *((_OWORD *)v16 + 3);
    long long v27 = *((_OWORD *)v16 + 5);
    long long v98 = *((_OWORD *)v16 + 4);
    long long v99 = v27;
    long long v96 = v25;
    long long v97 = v26;
    long long v28 = *((_OWORD *)v16 + 6);
    long long v29 = *((_OWORD *)v16 + 7);
    long long v30 = *((_OWORD *)v16 + 8);
    char v103 = v16[144];
    long long v101 = v29;
    long long v102 = v30;
    long long v100 = v28;
    uint64_t v31 = v84;
    long long v80 = v90;
    long long v81 = v91;
    long long v82 = v92;
    char v83 = v93;
    long long v76 = v86;
    long long v77 = v87;
    long long v78 = v88;
    long long v79 = v89;
    long long v74 = v84;
    long long v75 = v85;
    uint64_t v32 = v94;
    long long v70 = v28;
    long long v71 = v29;
    long long v72 = v30;
    char v73 = v103;
    long long v66 = v96;
    long long v67 = v97;
    long long v68 = v98;
    long long v69 = v27;
    *((void *)&v64 + 1) = *((void *)&v94 + 1);
    long long v65 = v95;
    sub_1C063FEAC((uint64_t)&v84);
    sub_1C063FEAC((uint64_t)&v94);
    char v33 = a5(v31, (char *)&v74 + 8, v32, (char *)&v64 + 8);
    if (v5)
    {
      unint64_t v105 = v62;
      uint64_t v106 = v9;
      goto LABEL_43;
    }
    char v34 = v33;
    sub_1C063FF50((uint64_t)&v94);
    sub_1C063FF50((uint64_t)&v84);
    if ((v34 & 1) == 0)
    {
      long long v35 = v16;
      BOOL v36 = v9 == v16;
      long long v62 = v16 + 152;
      v16 += 152;
      if (v36) {
        goto LABEL_16;
      }
LABEL_15:
      memmove(v9, v35, 0x98uLL);
      goto LABEL_16;
    }
    long long v35 = v8;
    BOOL v36 = v9 == v8;
    v8 += 152;
    if (!v36) {
      goto LABEL_15;
    }
LABEL_16:
    unint64_t v37 = v9 + 152;
    if (v16 >= v15)
    {
      unint64_t v105 = v62;
      goto LABEL_46;
    }
    if (v8 >= v7) {
      break;
    }
    v9 += 152;
  }
  unint64_t v105 = v62;
  unint64_t v37 = v9 + 152;
LABEL_46:
  uint64_t v106 = v37;
LABEL_47:
  sub_1C0635644((void **)&v106, (const void **)&v105, &v104);
  return 1;
}

uint64_t sub_1C06308F4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v54)(uint64_t *__return_ptr, char *, void *);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  sub_1BFEA5440(0, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  char v56 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v53 = (void *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  long long v17 = (void *)((char *)v47 - v16);
  uint64_t v18 = swift_allocObject();
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(v13 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  int64_t v20 = a2 - a1;
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_63;
  }
  uint64_t v23 = v20 / v19;
  uint64_t v59 = a1;
  uint64_t v58 = a4;
  uint64_t v24 = v22 / v19;
  v47[1] = v18;
  if (v20 / v19 >= v22 / v19)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v19;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_retain();
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        swift_retain();
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v50 = a4;
      unint64_t v34 = a4 + v26;
      char v57 = a4 + v26;
      uint64_t v59 = a2;
      if (v26 >= 1 && v21 < a2)
      {
        uint64_t v36 = -v19;
        uint64_t v51 = v36;
        unint64_t v48 = v21;
        do
        {
          unint64_t v52 = a3 + v36;
          sub_1BFEA5300(v34 + v36, (uint64_t)v17, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          unint64_t v37 = a2 + v36;
          uint64_t v38 = a2 + v36;
          unint64_t v39 = a3;
          long long v40 = v17;
          long long v41 = v53;
          sub_1BFEA5300(v38, (uint64_t)v53, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          char v42 = sub_1C002EE00(*v40, (uint64_t)v40 + *(int *)(v56 + 48), *v41, (uint64_t)v41 + *(int *)(v56 + 48), v54, v55, (unint64_t *)&unk_1EB85EF60, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
          uint64_t v43 = (uint64_t)v41;
          long long v17 = v40;
          sub_1BFEA5370(v43, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1BFEA5440);
          sub_1BFEA5370((uint64_t)v40, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1BFEA5440);
          if (v42)
          {
            a3 = v52;
            if (v39 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v48;
            }
            else
            {
              unint64_t v44 = v48;
              if (v39 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v36 = v51;
            v59 += v51;
          }
          else
          {
            unint64_t v45 = v57;
            a3 = v52;
            v57 += v51;
            if (v39 < v45 || v52 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v39 != v45)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
            unint64_t v44 = v48;
            uint64_t v36 = v51;
          }
          unint64_t v34 = v57;
          if (v57 <= v50) {
            break;
          }
          a2 = v37;
        }
        while (v37 > v44);
      }
      goto LABEL_60;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v19;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_retain();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      swift_retain();
      if (a4 != v21) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v52 = a4 + v25;
    char v57 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v28 = a4;
      unint64_t v49 = a3;
      do
      {
        sub_1BFEA5300(a2, (uint64_t)v17, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        long long v29 = v53;
        sub_1BFEA5300(v28, (uint64_t)v53, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v30 = sub_1C002EE00(*v17, (uint64_t)v17 + *(int *)(v56 + 48), *v29, (uint64_t)v29 + *(int *)(v56 + 48), v54, v55, (unint64_t *)&unk_1EB85EF60, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
        sub_1BFEA5370((uint64_t)v29, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)v17, (uint64_t)&qword_1EB86B3D8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1BFEA5440);
        unint64_t v31 = v59;
        if (v30)
        {
          unint64_t v32 = a2 + v19;
          if (v59 < a2 || v59 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v33 = v58 + v19;
          if (v59 < v58 || v59 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v58 = v33;
          unint64_t v32 = a2;
        }
        uint64_t v59 = v31 + v19;
        if (v58 >= v52) {
          break;
        }
        uint64_t v28 = v58;
        a2 = v32;
      }
      while (v32 < v49);
    }
LABEL_60:
    sub_1C06354B4(&v59, &v58, (uint64_t *)&v57, &qword_1EB86B3D8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_64:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0630FD8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v54)(uint64_t *__return_ptr, char *, void *);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  sub_1BFEA5440(0, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  char v56 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v53 = (void *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  long long v17 = (void *)((char *)v47 - v16);
  uint64_t v18 = swift_allocObject();
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(v13 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  int64_t v20 = a2 - a1;
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_63;
  }
  uint64_t v23 = v20 / v19;
  uint64_t v59 = a1;
  uint64_t v58 = a4;
  uint64_t v24 = v22 / v19;
  v47[1] = v18;
  if (v20 / v19 >= v22 / v19)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v19;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_retain();
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        swift_retain();
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v50 = a4;
      unint64_t v34 = a4 + v26;
      char v57 = a4 + v26;
      uint64_t v59 = a2;
      if (v26 >= 1 && v21 < a2)
      {
        uint64_t v36 = -v19;
        uint64_t v51 = v36;
        unint64_t v48 = v21;
        do
        {
          unint64_t v52 = a3 + v36;
          sub_1BFEA5300(v34 + v36, (uint64_t)v17, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          unint64_t v37 = a2 + v36;
          uint64_t v38 = a2 + v36;
          unint64_t v39 = a3;
          long long v40 = v17;
          long long v41 = v53;
          sub_1BFEA5300(v38, (uint64_t)v53, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          char v42 = sub_1C002EE00(*v40, (uint64_t)v40 + *(int *)(v56 + 48), *v41, (uint64_t)v41 + *(int *)(v56 + 48), v54, v55, (unint64_t *)&unk_1EA1A8B30, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          uint64_t v43 = (uint64_t)v41;
          long long v17 = v40;
          sub_1BFEA5370(v43, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1BFEA5440);
          sub_1BFEA5370((uint64_t)v40, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1BFEA5440);
          if (v42)
          {
            a3 = v52;
            if (v39 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v48;
            }
            else
            {
              unint64_t v44 = v48;
              if (v39 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v36 = v51;
            v59 += v51;
          }
          else
          {
            unint64_t v45 = v57;
            a3 = v52;
            v57 += v51;
            if (v39 < v45 || v52 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v39 != v45)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
            unint64_t v44 = v48;
            uint64_t v36 = v51;
          }
          unint64_t v34 = v57;
          if (v57 <= v50) {
            break;
          }
          a2 = v37;
        }
        while (v37 > v44);
      }
      goto LABEL_60;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v19;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_retain();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      swift_retain();
      if (a4 != v21) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v52 = a4 + v25;
    char v57 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v28 = a4;
      unint64_t v49 = a3;
      do
      {
        sub_1BFEA5300(a2, (uint64_t)v17, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        long long v29 = v53;
        sub_1BFEA5300(v28, (uint64_t)v53, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v30 = sub_1C002EE00(*v17, (uint64_t)v17 + *(int *)(v56 + 48), *v29, (uint64_t)v29 + *(int *)(v56 + 48), v54, v55, (unint64_t *)&unk_1EA1A8B30, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
        sub_1BFEA5370((uint64_t)v29, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)v17, (uint64_t)&unk_1EA19CA70, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1BFEA5440);
        unint64_t v31 = v59;
        if (v30)
        {
          unint64_t v32 = a2 + v19;
          if (v59 < a2 || v59 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v33 = v58 + v19;
          if (v59 < v58 || v59 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v58 = v33;
          unint64_t v32 = a2;
        }
        uint64_t v59 = v31 + v19;
        if (v58 >= v52) {
          break;
        }
        uint64_t v28 = v58;
        a2 = v32;
      }
      while (v32 < v49);
    }
LABEL_60:
    sub_1C06354B4(&v59, &v58, (uint64_t *)&v57, (unint64_t *)&unk_1EA19CA70, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_64:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C06316BC(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t, char *, void, char *))
{
  uint64_t v5 = __dst;
  uint64_t v6 = (long long *)a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 72;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 72;
  long long v88 = __src;
  v87[0] = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -71)
    {
      if (__dst != a2 || &a2[72 * v11] <= __dst) {
        memmove(__dst, a2, 72 * v11);
      }
      char v30 = &v5[72 * v11];
      long long v86 = v30;
      long long v88 = (char *)v6;
      if (v7 < (char *)v6 && v10 >= 72)
      {
        long long v67 = v5;
        unint64_t v31 = (char *)(a3 - 72);
        unint64_t v32 = v6;
        while (1)
        {
          __dsta = v31;
          long long v70 = (char *)v6;
          unint64_t v55 = (unint64_t)v30;
          long long v33 = *(_OWORD *)(v30 - 72);
          v30 -= 72;
          long long v34 = v33;
          uint64_t v35 = *((void *)v30 + 2);
          char v36 = v30[24];
          uint64_t v37 = *((void *)v30 + 4);
          uint64_t v38 = *((void *)v30 + 7);
          uint64_t v39 = *((void *)v30 + 8);
          long long v40 = *(_OWORD *)((char *)v32 - 72);
          unint64_t v32 = (_OWORD *)((char *)v32 - 72);
          uint64_t v62 = v34;
          uint64_t v41 = *((void *)v32 + 2);
          char v42 = *((unsigned char *)v32 + 24);
          uint64_t v43 = *((void *)v32 + 4);
          uint64_t v44 = *((void *)v32 + 7);
          uint64_t v45 = *((void *)v32 + 8);
          long long v46 = *(_OWORD *)(v30 + 40);
          long long v59 = *(_OWORD *)((char *)v32 + 40);
          long long v79 = v34;
          uint64_t v80 = v35;
          char v81 = v36;
          uint64_t v82 = v37;
          long long v83 = v46;
          uint64_t v84 = v38;
          uint64_t v85 = v39;
          *((void *)&v72 + 1) = *((void *)&v40 + 1);
          uint64_t v73 = v41;
          char v74 = v42;
          uint64_t v75 = v43;
          long long v76 = v59;
          unint64_t v47 = v46;
          uint64_t v77 = v44;
          uint64_t v78 = v45;
          uint64_t v56 = v37;
          sub_1BFF7FF04(v37, v46);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          sub_1BFF7FF04(v43, v59);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          char v48 = a5(v62, (char *)&v79 + 8, v40, (char *)&v72 + 8);
          if (v71) {
            break;
          }
          char v49 = v48;
          uint64_t v71 = 0;
          unint64_t v50 = __dsta + 72;
          sub_1BFEEFC20(v43, v59);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v56, v47);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if (v49)
          {
            uint64_t v51 = __dsta;
            if (v50 != v70 || __dsta >= v70) {
              memmove(__dsta, v32, 0x48uLL);
            }
            long long v88 = (char *)v32;
            char v30 = (char *)v55;
            if (v32 <= (_OWORD *)v7) {
              goto LABEL_42;
            }
          }
          else
          {
            long long v86 = v30;
            unint64_t v32 = v70;
            uint64_t v51 = __dsta;
            if ((unint64_t)v50 < v55 || (unint64_t)__dsta >= v55 || v50 != (char *)v55) {
              memmove(__dsta, v30, 0x48uLL);
            }
            if (v70 <= v7) {
              goto LABEL_42;
            }
          }
          unint64_t v31 = v51 - 72;
          uint64_t v6 = v32;
          if (v30 <= v67) {
            goto LABEL_42;
          }
        }
        sub_1BFEEFC20(v43, v59);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v56, v47);
        swift_unknownObjectRelease();
LABEL_45:
        swift_bridgeObjectRelease();
        sub_1C0635714((void **)&v88, v87, &v86);
        return 1;
      }
LABEL_42:
      sub_1C0635714((void **)&v88, v87, &v86);
      return 1;
    }
  }
  else if (v8 >= -71)
  {
    if (__dst != __src || &__src[72 * v9] <= __dst) {
      memmove(__dst, __src, 72 * v9);
    }
    char v57 = &v5[72 * v9];
    long long v86 = v57;
    if ((unint64_t)v6 < a3 && v8 >= 72)
    {
      long long v53 = v87[0];
      uint64_t v12 = v88;
      while (1)
      {
        uint64_t v54 = v12;
        long long v68 = v7;
        long long v69 = (char *)v6;
        uint64_t v13 = *((void *)v6 + 2);
        char v14 = *((unsigned char *)v6 + 24);
        uint64_t v15 = *((void *)v6 + 4);
        uint64_t v16 = *((void *)v6 + 7);
        uint64_t v17 = *((void *)v6 + 8);
        uint64_t v18 = *((void *)v5 + 2);
        char v19 = v5[24];
        uint64_t v20 = *((void *)v5 + 4);
        uint64_t v21 = *((void *)v5 + 7);
        uint64_t v22 = *((void *)v5 + 8);
        long long v23 = *(long long *)((char *)v6 + 40);
        long long v66 = v5;
        long long v60 = *(_OWORD *)(v5 + 40);
        long long v61 = *(_OWORD *)v5;
        long long v79 = *v6;
        uint64_t __dstb = v79;
        uint64_t v80 = v13;
        char v81 = v14;
        uint64_t v82 = v15;
        long long v83 = v23;
        uint64_t v84 = v16;
        uint64_t v85 = v17;
        *((void *)&v72 + 1) = *((void *)&v61 + 1);
        uint64_t v73 = v18;
        char v74 = v19;
        uint64_t v75 = v20;
        long long v76 = v60;
        unint64_t v24 = v23;
        uint64_t v77 = v21;
        uint64_t v78 = v22;
        sub_1BFF7FF04(v15, v23);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_1BFF7FF04(v20, v60);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        char v25 = a5(__dstb, (char *)&v79 + 8, v61, (char *)&v72 + 8);
        if (v71)
        {
          v87[0] = v53;
          long long v88 = v54;
          sub_1BFEEFC20(v20, v60);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v15, v24);
          swift_unknownObjectRelease();
          goto LABEL_45;
        }
        char v26 = v25;
        sub_1BFEEFC20(v20, v60);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(v15, v24);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        if (v26) {
          break;
        }
        long long v27 = v68;
        uint64_t v5 = v66 + 72;
        long long v29 = v66;
        uint64_t v28 = v69;
        long long v53 = v66 + 72;
        if (v68 != v66) {
          goto LABEL_18;
        }
LABEL_19:
        uint64_t v71 = 0;
        uint64_t v12 = v27 + 72;
        if (v5 < v57)
        {
          uint64_t v6 = (long long *)v28;
          uint64_t v7 = v27 + 72;
          if ((unint64_t)v28 < a3) {
            continue;
          }
        }
        v87[0] = v53;
        long long v88 = v27 + 72;
        goto LABEL_42;
      }
      long long v27 = v68;
      uint64_t v28 = v69 + 72;
      if (v68 < v69 || v68 >= v28)
      {
        long long v29 = v69;
        uint64_t v5 = v66;
      }
      else
      {
        long long v29 = v69;
        uint64_t v5 = v66;
        if (v68 == v69) {
          goto LABEL_19;
        }
      }
LABEL_18:
      memmove(v27, v29, 0x48uLL);
      goto LABEL_19;
    }
    goto LABEL_42;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0631CD4(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v32)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v33;
  unsigned char v34[208];
  uint64_t v35;
  unsigned char v36[208];
  unint64_t v37;
  char *v38;
  char *v39;

  uint64_t v12 = swift_allocObject();
  unint64_t v32 = a5;
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  uint64_t v13 = a2 - a1;
  uint64_t v14 = (a2 - a1) / 216;
  unint64_t v31 = a3;
  uint64_t v15 = a3 - (void)a2;
  uint64_t v16 = v15 / 216;
  uint64_t v39 = a1;
  uint64_t v38 = a4;
  if (v14 >= v15 / 216)
  {
    if (v15 < -215) {
      goto LABEL_42;
    }
    if (a4 != a2 || &a2[216 * v16] <= a4) {
      memmove(a4, a2, 216 * v16);
    }
    swift_retain();
    uint64_t v22 = &a4[216 * v16];
    uint64_t v37 = (unint64_t)v22;
    uint64_t v39 = a2;
    if (v15 < 216 || a1 >= a2) {
      goto LABEL_41;
    }
    long long v23 = (char *)(v31 - 216);
    char v30 = a1;
    while (1)
    {
      char v26 = v23 + 216;
      sub_1BFEA5300((uint64_t)(v22 - 216), (uint64_t)&v35, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      unint64_t v24 = a2 - 216;
      sub_1BFEA5300((uint64_t)(a2 - 216), (uint64_t)&v33, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
      char v27 = sub_1C0627048(v35, (uint64_t)v36, v33, (uint64_t)v34, v32);
      sub_1BFEA5370((uint64_t)&v33, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C064267C);
      sub_1BFEA5370((uint64_t)&v35, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C064267C);
      if (v27) {
        break;
      }
      unint64_t v28 = v37;
      uint64_t v22 = (char *)(v37 - 216);
      v37 -= 216;
      if ((unint64_t)v26 < v28 || (unint64_t)v23 >= v28)
      {
        memmove(v23, (const void *)(v28 - 216), 0xD8uLL);
        unint64_t v24 = a2;
        goto LABEL_29;
      }
      char v25 = v30;
      if (v26 != (char *)v28) {
        memmove(v23, (const void *)(v28 - 216), 0xD8uLL);
      }
      unint64_t v24 = a2;
      if (v22 <= a4) {
        goto LABEL_41;
      }
LABEL_30:
      v23 -= 216;
      a2 = v24;
      if (v24 <= v25) {
        goto LABEL_41;
      }
    }
    if (v26 != a2 || v23 >= a2) {
      memmove(v23, a2 - 216, 0xD8uLL);
    }
    v39 -= 216;
    uint64_t v22 = (char *)v37;
LABEL_29:
    char v25 = v30;
    if (v22 <= a4) {
      goto LABEL_41;
    }
    goto LABEL_30;
  }
  if (v13 >= -215)
  {
    if (a4 != a1 || &a1[216 * v14] <= a4) {
      memmove(a4, a1, 216 * v14);
    }
    swift_retain();
    unint64_t v17 = (unint64_t)&a4[216 * v14];
    uint64_t v37 = v17;
    if (v13 >= 216 && (unint64_t)a2 < v31)
    {
      do
      {
        sub_1BFEA5300((uint64_t)a2, (uint64_t)&v35, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        sub_1BFEA5300((uint64_t)a4, (uint64_t)&v33, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C064267C);
        char v18 = sub_1C0627048(v35, (uint64_t)v36, v33, (uint64_t)v34, v32);
        sub_1BFEA5370((uint64_t)&v33, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C064267C);
        sub_1BFEA5370((uint64_t)&v35, (uint64_t)&qword_1EB861440, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1C064267C);
        char v19 = v39;
        if (v18)
        {
          unint64_t v20 = (unint64_t)(a2 + 216);
          if (v39 >= a2 && (unint64_t)v39 < v20 && v39 == a2) {
            char v19 = a2;
          }
          else {
            memmove(v39, a2, 0xD8uLL);
          }
        }
        else
        {
          uint64_t v21 = v38 + 216;
          if (v39 != v38 || v39 >= v21) {
            memmove(v39, v38, 0xD8uLL);
          }
          uint64_t v38 = v21;
          unint64_t v20 = (unint64_t)a2;
        }
        uint64_t v39 = v19 + 216;
        a4 = v38;
        if ((unint64_t)v38 >= v17) {
          break;
        }
        a2 = (char *)v20;
      }
      while (v20 < v31);
    }
LABEL_41:
    sub_1C06357E8((void **)&v39, (const void **)&v38, &v37);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_42:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0632194(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, void *), uint64_t a6)
{
  void (*v54)(uint64_t *__return_ptr, char *, void *);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  sub_1BFEA5440(0, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  uint64_t v56 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v53 = (void *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (void *)((char *)v47 - v16);
  uint64_t v18 = swift_allocObject();
  uint64_t v54 = a5;
  unint64_t v55 = a6;
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(v13 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  int64_t v20 = a2 - a1;
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_63;
  }
  uint64_t v23 = v20 / v19;
  long long v59 = a1;
  uint64_t v58 = a4;
  uint64_t v24 = v22 / v19;
  v47[1] = v18;
  if (v20 / v19 >= v22 / v19)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v19;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_retain();
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        swift_retain();
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v50 = a4;
      unint64_t v34 = a4 + v26;
      char v57 = a4 + v26;
      long long v59 = a2;
      if (v26 >= 1 && v21 < a2)
      {
        uint64_t v36 = -v19;
        uint64_t v51 = v36;
        unint64_t v48 = v21;
        do
        {
          unint64_t v52 = a3 + v36;
          sub_1BFEA5300(v34 + v36, (uint64_t)v17, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          unint64_t v37 = a2 + v36;
          uint64_t v38 = a2 + v36;
          unint64_t v39 = a3;
          long long v40 = v17;
          uint64_t v41 = v53;
          sub_1BFEA5300(v38, (uint64_t)v53, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          char v42 = sub_1C002EE00(*v40, (uint64_t)v40 + *(int *)(v56 + 48), *v41, (uint64_t)v41 + *(int *)(v56 + 48), v54, v55, &qword_1EB85C520, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          uint64_t v43 = (uint64_t)v41;
          unint64_t v17 = v40;
          sub_1BFEA5370(v43, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1BFEA5440);
          sub_1BFEA5370((uint64_t)v40, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1BFEA5440);
          if (v42)
          {
            a3 = v52;
            if (v39 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v48;
            }
            else
            {
              unint64_t v44 = v48;
              if (v39 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v36 = v51;
            v59 += v51;
          }
          else
          {
            unint64_t v45 = v57;
            a3 = v52;
            v57 += v51;
            if (v39 < v45 || v52 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v39 != v45)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
            unint64_t v44 = v48;
            uint64_t v36 = v51;
          }
          unint64_t v34 = v57;
          if (v57 <= v50) {
            break;
          }
          a2 = v37;
        }
        while (v37 > v44);
      }
      goto LABEL_60;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v19;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_retain();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      swift_retain();
      if (a4 != v21) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v52 = a4 + v25;
    char v57 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v28 = a4;
      unint64_t v49 = a3;
      do
      {
        sub_1BFEA5300(a2, (uint64_t)v17, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        long long v29 = v53;
        sub_1BFEA5300(v28, (uint64_t)v53, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v30 = sub_1C002EE00(*v17, (uint64_t)v17 + *(int *)(v56 + 48), *v29, (uint64_t)v29 + *(int *)(v56 + 48), v54, v55, &qword_1EB85C520, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        sub_1BFEA5370((uint64_t)v29, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)v17, (uint64_t)&qword_1EB85C508, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1BFEA5440);
        unint64_t v31 = v59;
        if (v30)
        {
          unint64_t v32 = a2 + v19;
          if (v59 < a2 || v59 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v33 = v58 + v19;
          if (v59 < v58 || v59 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v58 = v33;
          unint64_t v32 = a2;
        }
        long long v59 = v31 + v19;
        if (v58 >= v52) {
          break;
        }
        uint64_t v28 = v58;
        a2 = v32;
      }
      while (v32 < v49);
    }
LABEL_60:
    sub_1C06354B4(&v59, &v58, (uint64_t *)&v57, &qword_1EB85C508, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_64:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}